<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- configurationParams-mapper.xml -->
<mapper namespace="foss.bse.bse-dict.configurationParams" >

	<resultMap id="configurationParamsQueryResultMap"
   			type="com.deppon.foss.module.base.dict.api.shared.domain.ConfigurationParamsEntity">
		<result property="id" column="ID"  jdbcType="VARCHAR" />
		<result property="code" column="CODE"  jdbcType="VARCHAR" />
		<result property="confName" column="CONF_NAME"  jdbcType="VARCHAR" />
		<result property="confValue" column="CONF_VALUE"  jdbcType="VARCHAR" />
		<result property="unit" column="UNIT"  jdbcType="VARCHAR" />
		<result property="notes" column="NOTES"  jdbcType="VARCHAR" />
		<result property="versionNo" column="VERSION_NO"  jdbcType="NUMERIC" />
		<result property="active" column="ACTIVE"  jdbcType="CHAR" />
		<result property="createDate" column="CREATE_TIME"  jdbcType="TIMESTAMP" />
		<result property="modifyDate" column="MODIFY_TIME"  jdbcType="TIMESTAMP" />
		<result property="createUser" column="CREATE_USER_CODE"  jdbcType="VARCHAR" />
		<result property="modifyUser" column="MODIFY_USER_CODE"  jdbcType="VARCHAR" />
		<result property="orgCode" column="ORG_CODE"  jdbcType="VARCHAR" />
		<result property="confType" column="CONF_TYPE"  jdbcType="VARCHAR" />
		<result property="dataType" column="DATA_TYPE"  jdbcType="VARCHAR" />
		<result property="virtualCode" column="VIRTUAL_CODE"  jdbcType="VARCHAR" />
	</resultMap>

	<!-- 插入数据 ： -->
	<insert id="addConfigurationParams"
		parameterType="com.deppon.foss.module.base.dict.api.shared.domain.ConfigurationParamsEntity">
		INSERT INTO BSE.T_BAS_SYS_CONFIG(
		/** 综合:插入数据  **/
		ID,
		CODE,
		CONF_NAME,
		CONF_VALUE,
		UNIT,
		NOTES,
		VERSION_NO,
		ACTIVE,
		CREATE_TIME,
		MODIFY_TIME,
		CREATE_USER_CODE,
		MODIFY_USER_CODE,
		ORG_CODE,
		CONF_TYPE,
		DATA_TYPE,
		VIRTUAL_CODE) VALUES	
	(
		#{id, jdbcType=VARCHAR},
		#{code, jdbcType=VARCHAR},
		#{confName, jdbcType=VARCHAR},
		#{confValue, jdbcType=VARCHAR},
		#{unit, jdbcType=VARCHAR},
		#{notes, jdbcType=VARCHAR},
		#{versionNo, jdbcType=NUMERIC},
		#{active, jdbcType=CHAR},
		#{createDate, jdbcType=TIMESTAMP},
		#{modifyDate, jdbcType=TIMESTAMP},
		#{createUser, jdbcType=VARCHAR},
		#{modifyUser, jdbcType=VARCHAR},
		#{orgCode, jdbcType=VARCHAR},
		#{confType, jdbcType=VARCHAR},
		#{dataType, jdbcType=VARCHAR},
		#{virtualCode, jdbcType=VARCHAR}
	)
	</insert> 

	<!-- 根据VIRTUAL_CODE 作废数据： -->
	<update id="deleteConfigurationParams" 
		parameterType="map">
		UPDATE BSE.T_BAS_SYS_CONFIG A 
		/** 综合:根据VIRTUAL_CODE 作废数据  **/
		SET A.ACTIVE=#{entity.active,jdbcType=CHAR},
			A.VERSION_NO=#{entity.versionNo,jdbcType=NUMERIC},
			A.MODIFY_USER_CODE=#{entity.modifyUser,jdbcType=TIMESTAMP}, 
			A.MODIFY_TIME = #{entity.modifyDate,jdbcType=TIMESTAMP} 
		<where>
			A.VIRTUAL_CODE=#{entity.virtualCode,jdbcType=VARCHAR} 
			AND  A.ACTIVE=#{conditionActive,jdbcType=CHAR}
		</where>
	</update>

	<!-- 根据VIRTUAL_CODE批量作废 -->
	<update id="deleteConfigurationParamsMore"
		parameterType="map">
		UPDATE BSE.T_BAS_SYS_CONFIG A 
		/** 综合:根据VIRTUAL_CODE批量作废  **/
		SET A.ACTIVE=#{entity.active,jdbcType=CHAR},
			A.VERSION_NO=#{entity.versionNo,jdbcType=NUMERIC},
			A.MODIFY_USER_CODE=#{entity.modifyUser,jdbcType=TIMESTAMP}, 
			A.MODIFY_TIME = #{entity.modifyDate,jdbcType=TIMESTAMP} 
        <where>
            <if test="codes!=null and codes.length > 0">
                A.VIRTUAL_CODE in
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            #{code} 
	            </foreach>
            </if>
            AND  A.ACTIVE=#{conditionActive,jdbcType=CHAR}
        </where>       
	</update>

	<!-- 根据VIRTUAL_CODE 更新数据：由于更新是先作废再插入，所以这个映射用不上： -->
	<update id="updateConfigurationParams" 
		parameterType="com.deppon.foss.module.base.dict.api.shared.domain.ConfigurationParamsEntity">
		UPDATE BSE.T_BAS_SYS_CONFIG A SET 
		/** 综合:根据VIRTUAL_CODE 更新数据：由于更新是先作废再插入，所以这个映射用不上  **/
		A.ID = #{id, jdbcType=VARCHAR},
		A.CODE = #{code, jdbcType=VARCHAR},
		A.CONF_NAME = #{confName, jdbcType=VARCHAR},
		A.CONF_VALUE = #{confValue, jdbcType=VARCHAR},
		A.UNIT = #{unit, jdbcType=VARCHAR},
		A.NOTES = #{notes, jdbcType=VARCHAR},
		A.ACTIVE = #{active, jdbcType=CHAR},
		A.VERSION_NO=#{entity.versionNo,jdbcType=NUMERIC},
		A.CREATE_TIME = #{createDate, jdbcType=TIMESTAMP},
		A.MODIFY_TIME = #{modifyDate, jdbcType=TIMESTAMP},
		A.CREATE_USER_CODE = #{createUser, jdbcType=VARCHAR},
		A.MODIFY_USER_CODE = #{modifyUser, jdbcType=VARCHAR},
		A.ORG_CODE = #{orgCode, jdbcType=VARCHAR},
		A.CONF_TYPE = #{confType, jdbcType=VARCHAR},
		A.DATA_TYPE = #{dataType, jdbcType=VARCHAR},
		A.VIRTUAL_CODE = #{virtualCode, jdbcType=VARCHAR}
		<where>
			A.VIRTUAL_CODE = #{virtualCode,jdbcType=VARCHAR}	
		</where>
	</update>


	<!-- 以下全为查询 -->

	<sql id="query_configurationParams_param">
		A.ID AS ID,		/** ID     **/ 
		A.CODE AS CODE,		/** 配置项代码     **/ 
		A.CONF_NAME AS CONF_NAME,		/** 配置项名称     **/ 
		A.CONF_VALUE AS CONF_VALUE,		/** 配置项值     **/ 
		A.UNIT AS UNIT,		/** 单位     **/ 
		A.NOTES AS NOTES,		/** 备注     **/ 
		A.VERSION_NO AS VERSION_NO,		/** 数据版本号     **/ 
		A.ACTIVE AS ACTIVE,		/** 是否启用     **/ 
		A.CREATE_TIME AS CREATE_TIME,		/** 创建时间     **/ 
		A.MODIFY_TIME AS MODIFY_TIME,		/** 修改时间     **/ 
		A.CREATE_USER_CODE AS CREATE_USER_CODE,		/** 创建人     **/ 
		A.MODIFY_USER_CODE AS MODIFY_USER_CODE,		/** 修改人     **/ 
		A.ORG_CODE AS ORG_CODE,		/** 部门编码     **/ 
		A.CONF_TYPE AS CONF_TYPE,		/** 配置类型     **/ 
		A.DATA_TYPE AS DATA_TYPE,		/** 数据类型     **/ 
		A.VIRTUAL_CODE AS VIRTUAL_CODE		/** 虚拟编码     **/
	</sql>

	<!-- 根据 VIRTUAL_CODE 精确查询数据 -->
	<select id="queryConfigurationParamsByVirtualCode" resultMap="configurationParamsQueryResultMap"
		parameterType="com.deppon.foss.module.base.dict.api.shared.domain.ConfigurationParamsEntity">
		<![CDATA[
		  SELECT 
		  /** 综合:根据 VIRTUAL_CODE 精确查询数据  **/
		]]>
		<include refid="query_configurationParams_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_SYS_CONFIG A 
		]]>
		<where>
			A.VIRTUAL_CODE=#{virtualCode} 
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</select>

	<!-- 根据 VIRTUAL_CODE 批量精确查询数据 -->
	<select id="queryConfigurationParamsBatchByVirtualCode" resultMap="configurationParamsQueryResultMap"
		parameterType="map">
		<![CDATA[
		  SELECT 
		  /** 综合:根据 VIRTUAL_CODE 批量精确查询数据  **/
		]]>
		<include refid="query_configurationParams_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_SYS_CONFIG A 
		]]>
		<where>
			<if test="codes!=null and codes.length > 0">
                A.VIRTUAL_CODE in
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            #{code,jdbcType=VARCHAR} 
	            </foreach>
            </if> 
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</select>
	<!-- 根据CODE 进行批量查询 -->
	<select id="queryConfigurationParamsBatchByCode" resultMap="configurationParamsQueryResultMap" parameterType="map">
		<![CDATA[
			SELECT /**综合：根据CODE批量精确查询数据**/
		]]>
		<include refid="query_configurationParams_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_SYS_CONFIG A 
		]]>
		<where>
			<if test="codes!=null and codes.length > 0">
                A.CODE in
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            #{code,jdbcType=VARCHAR} 
	            </foreach>
            </if> 
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</select>

	<!-- 根据entity精确查询的查询条件 ，如果属性为空，则此属性不作为条件-->
	<sql id="query_queryConfigurationParamsExactByEntity_condition">		
		<where>
	      	<if test="id!=null and id != ''">
	        	AND A.ID = #{id,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="code!=null and code != ''">
	        	AND A.CODE = #{code,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="confName!=null and confName != ''">
	        	AND A.CONF_NAME = #{confName,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="confValue!=null and confValue != ''">
	        	AND A.CONF_VALUE = #{confValue,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="unit!=null and unit != ''">
	        	AND A.UNIT = #{unit,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="notes!=null and notes != ''">
	        	AND A.NOTES = #{notes,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="orgCode!=null and orgCode != ''">
	        	AND A.ORG_CODE = #{orgCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="confType!=null and confType != ''">
	        	AND A.CONF_TYPE = #{confType,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="dataType!=null and dataType != ''">
	        	AND A.DATA_TYPE = #{dataType,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="virtualCode!=null and virtualCode != ''">
	        	AND A.VIRTUAL_CODE = #{virtualCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="versionNo!=null and versionNo != ''">
	        	AND A.VERSION_NO = #{versionNo,jdbcType=VARCHAR} 
	      	</if>	
	      	AND A.ACTIVE =  #{active,jdbcType=CHAR} 
		</where>
	</sql>
	<!-- 根据实体动态条件精确查询,如果属性的值为null或者空白则无效： -->
	<select id="queryConfigurationParamsExactByEntity" resultMap="configurationParamsQueryResultMap"
		parameterType="com.deppon.foss.module.base.dict.api.shared.domain.ConfigurationParamsEntity">
		<![CDATA[
		  SELECT 
		  /** 综合:根据实体动态条件精确查询,如果属性的值为null或者空白则无效  **/
		]]>
		<include refid="query_configurationParams_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_SYS_CONFIG A 
		]]>
		<include refid="query_queryConfigurationParamsExactByEntity_condition" />
	</select>
	<!-- 根据实体动态条件精确查询总数,如果属性的值为null或者空白则无效： -->
	<select id="queryConfigurationParamsExactByEntityCount" resultType="Long"
		parameterType="com.deppon.foss.module.base.dict.api.shared.domain.ConfigurationParamsEntity">
		<![CDATA[
			 SELECT count(*) 
			 /** 综合:根据实体动态条件精确查询总数,如果属性的值为null或者空白则无效  **/
			 FROM BSE.T_BAS_SYS_CONFIG A 
		]]>
		<include refid="query_queryConfigurationParamsExactByEntity_condition" />
	</select>

	<!-- 根据entity模糊查询,如果属性的值为null或者空白则无效： -->
	<sql id="query_queryConfigurationParamsByEntity_condition">		
		<where>
	      	<if test="id!=null and id != ''">
	        	AND A.ID like CONCAT(CONCAT('%', #{id,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="code!=null and code != ''">
	        	AND A.CODE like CONCAT(CONCAT('%', #{code,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="confName!=null and confName != ''">
	        	AND A.CONF_NAME like CONCAT(CONCAT('%', #{confName,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="confValue!=null and confValue != ''">
	        	AND A.CONF_VALUE like CONCAT(CONCAT('%', #{confValue,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="unit!=null and unit != ''">
	        	AND A.UNIT like CONCAT(CONCAT('%', #{unit,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="notes!=null and notes != ''">
	        	AND A.NOTES like CONCAT(CONCAT('%', #{notes,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="orgCode!=null and orgCode != ''">
	        	AND A.ORG_CODE like CONCAT(CONCAT('%', #{orgCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="confType!=null and confType != ''">
	        	AND A.CONF_TYPE like CONCAT(CONCAT('%', #{confType,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="dataType!=null and dataType != ''">
	        	AND A.DATA_TYPE like CONCAT(CONCAT('%', #{dataType,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="virtualCode!=null and virtualCode != ''">
	        	AND A.VIRTUAL_CODE like CONCAT(CONCAT('%', #{virtualCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="versionNo!=null and versionNo != ''">
	        	AND A.VERSION_NO like CONCAT(CONCAT('%', #{versionNo,jdbcType=VARCHAR}), '%') 
	      	</if>
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</sql>
	<!-- 根据实体动态条件模糊查询,如果属性的值为null或者空白则无效： -->
	<select id="queryConfigurationParamsByEntity" resultMap="configurationParamsQueryResultMap"
		parameterType="com.deppon.foss.module.base.dict.api.shared.domain.ConfigurationParamsEntity">
		<![CDATA[
		  SELECT 
		  /** 综合:根据实体动态条件模糊查询,如果属性的值为null或者空白则无效  **/
		]]>
		<include refid="query_configurationParams_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_SYS_CONFIG A 
		]]>
		<include refid="query_queryConfigurationParamsByEntity_condition" />
	</select>
	<!-- 根据实体动态条件模糊查询总数,如果属性的值为null或者空白则无效： -->
	<select id="queryConfigurationParamsByEntityCount" resultType="Long"
		parameterType="com.deppon.foss.module.base.dict.api.shared.domain.ConfigurationParamsEntity">
		<![CDATA[
			 SELECT count(*)
			 /** 综合:根据实体动态条件模糊查询总数,如果属性的值为null或者空白则无效  **/ 
			 FROM BSE.T_BAS_SYS_CONFIG A 
		]]>
		<include refid="query_queryConfigurationParamsByEntity_condition" />
	</select>

	<!-- 查询所有 系统配置参数 信息 以供下载 -->
	<!--zxy 20140408 修改:增加id排序  增加版本号等于的判断条件 -->
	<select id="queryConfigurationParamsForDownload"
		parameterType="com.deppon.foss.module.base.dict.api.shared.domain.ConfigurationParamsEntity"
		resultMap="configurationParamsQueryResultMap">
		<![CDATA[
			SELECT
			/** 综合:查询所有 系统配置参数 信息 以供下载  **/ 
		]]>
		<include refid="query_configurationParams_param" />
		<![CDATA[
			FROM BSE.T_BAS_SYS_CONFIG A
		]]>
		<where>
			<if test="versionNo != null">
				AND A.VERSION_NO >= #{versionNo,jdbcType=NUMERIC}
			</if>
	      	<if test="virtualCode!=null and virtualCode != ''">
	        	AND A.VIRTUAL_CODE = #{virtualCode,jdbcType=VARCHAR} 
	      	</if>
			<if test="active != null and active != ''">
				AND A.ACTIVE = #{active,jdbcType=CHAR}
			</if>
		</where>
		<![CDATA[
			ORDER BY A.VERSION_NO,A.ID ASC
		]]>
	</select>
	
	
	
	<!-- 下面为特殊查询 -->
	
	<!-- 精确查询  通过 ConfigurationParams的CODE和OrgAdministrativeInfo的CODE查询 
	1。zxy 20130930 BUG-55198 修改：增加value值条件   登陆数据下载开关查询
	
	-->
	<select id="queryConfigurationParamsByOrgCode" 
		parameterType="map"  resultMap="configurationParamsQueryResultMap">
		select B.*
		/** 综合:精确查询  通过 ConfigurationParams的CODE和OrgAdministrativeInfo的CODE查询  **/
		  from BSE.T_BAS_SYS_CONFIG B
			<where> 
				 B.ACTIVE = #{active,jdbcType=CHAR} 
				 AND B.CODE = #{code,jdbcType=VARCHAR}
				 <if test="confValue!=null and confValue != ''">
	        		AND B.CONF_VALUE = #{confValue,jdbcType=VARCHAR} 
	      		 </if>
				 AND B.ORG_CODE in
			       (SELECT CODE
			          FROM BSE.T_BAS_ORG A
			         WHERE A.ACTIVE = #{active,jdbcType=CHAR} 
			         CONNECT BY PRIOR A.UNIFIED_CODE = A.PARENT_ORG_UNIFIED_CODE AND A.ACTIVE = #{active,jdbcType=CHAR} 
			         START WITH A.CODE = #{orgCode,jdbcType=VARCHAR} )
		 	</where>

	</select>	
	
	<!-- zxy 20130930 BUG-55198 修改：增加value值条件   登陆数据下载开关查询 -->
	<select id="queryConfigurationParamsByParams" 
		parameterType="map"  resultMap="configurationParamsQueryResultMap">
		select CONF.*
		/** 综合:精确查询  通过 ConfigurationParams的CODE和OrgAdministrativeInfo的CODE查询  **/
		  from BSE.T_BAS_SYS_CONFIG CONF,(SELECT LEVEL, ORG.*
                   FROM (SELECT * FROM BSE.T_BAS_ORG O WHERE ACTIVE = 'Y' ) ORG
                  START WITH CODE = #{orgCode,jdbcType=VARCHAR}
                 CONNECT BY PRIOR PARENT_ORG_CODE = CODE) OTREE
			<where> 
				<if test="confValue!=null and confValue != ''">
					CONF.CONF_VALUE = #{confValue,jdbcType=VARCHAR} 
            	</if>
            	AND CONF.ORG_CODE = OTREE.CODE
            	<if test="active!=null and active != ''">
            		AND CONF.ACTIVE = #{active,jdbcType=CHAR} 
            	</if>
            	<if test="code!=null and code != ''">
            		AND CONF.CODE = #{code,jdbcType=VARCHAR}
            	</if>
           	 	<if test="confType!=null and confType != ''">
           	 		AND CONF_TYPE = #{confType,jdbcType=VARCHAR}
           	 	</if>
		 	</where>

	</select>	
	<select id="queryConfigurationByCodeAndDate"
		parameterType="map"
		resultMap="configurationParamsQueryResultMap">
		<![CDATA[
			SELECT
			/** 综合:查询所有 系统配置参数 信息 以供下载  **/ 
		]]>
		<include refid="query_configurationParams_param" />
		<![CDATA[
			FROM BSE.T_BAS_SYS_CONFIG A
		]]>
		<where>
	      	<if test="code!=null and code != ''">
	        	AND A.CODE = #{code,jdbcType=VARCHAR} 
	      	</if>
			<if test="date != null and date != ''">
				AND A.CREATE_TIME<![CDATA[ <= ]]>#{date,jdbcType=TIMESTAMP}
			</if>
			<if test="date != null and date != ''">
				AND A.MODIFY_TIME<![CDATA[ > ]]>#{date,jdbcType=TIMESTAMP}
			</if>
		</where>
	</select>
	
	<select id="querySysConfig" parameterType="com.deppon.foss.module.base.dict.api.shared.domain.ConfigurationParamsEntity" 
		resultType="java.lang.String">
		SELECT t.conf_value
		  FROM bse.t_bas_sys_config t
		 WHERE t.conf_type = #{confType,jdbcType=VARCHAR} 
		   AND t.code = #{code,jdbcType=VARCHAR} 
		   AND t.org_code = #{orgCode,jdbcType=VARCHAR} 
		   AND t.active = #{active,jdbcType=CHAR}
	</select>	
	
</mapper>
