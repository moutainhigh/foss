<?xml version="1.0" encoding="UTF-8"?>
<web-app id="web" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<!--
		<context-param> <param-name>contextClass</param-name>
		<param-value>org.jboss.spring.factory.VFSXmlWebApplicationContext</param-value>
		</context-param>
	<distributable/>
	-->
	<!--config this web app name,it is use to get this web app all functions-->
	<display-name>application</display-name>
	
		
	<context-param>
		<param-name>ssoCurrentApp</param-name>
		<param-value>bse-baseinfo-web</param-value>
	</context-param>
		
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:com/deppon/**/server/META-INF/spring.xml,/WEB-INF/spring.xml</param-value>
	</context-param>
	<context-param>
		<param-name>staticServerAddress</param-name>
		<param-value>${staticServer}</param-value>
	</context-param>

	<context-param>
		<param-name>allowBeanDefinitionOverriding</param-name>
		<param-value>false</param-value>
	</context-param>
	
	<listener>
		<listener-class>com.deppon.foss.framework.server.deploy.AppContextListener</listener-class>
	</listener>
	
	<listener>
		<listener-class>com.deppon.foss.framework.server.web.ContextLoaderListener</listener-class>
	</listener>
<!--	
 	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
 -->
 	<!-- BAMP接入监听 -->
 	<listener>  
      <listener-class>com.deppon.ar.bamp.client.listener.OperatorRequestListener</listener-class>  
  	</listener> 
  	<!--日志开关-->
  	 <listener>
        <listener-class>com.deppon.ar.bamp.client.listener.OperatorServletContextListener</listener-class>
    </listener>
  	
	<filter>
		<filter-name>framework</filter-name>
		<filter-class>com.deppon.foss.framework.server.web.filter.FrameworkFilter</filter-class>
	</filter>

	<filter>
		<filter-name>ssoForwardFilter</filter-name>
		<filter-class>com.deppon.foss.framework.server.sso.SSOForwardFilter</filter-class>
	</filter>

	<servlet>
		<servlet-name>ssoURLRequest</servlet-name>
		<servlet-class>com.deppon.foss.module.frameworkimpl.server.sso.SSORequestServlet</servlet-class>
	</servlet>
	
	<servlet>
		<servlet-name>tokenValidateServlet</servlet-name>
		<servlet-class>com.deppon.foss.framework.server.sso.servlet.TokenValidateServlet</servlet-class>
	</servlet>
	<servlet>
		<servlet-name>ElectricPictureServlet</servlet-name>
		<servlet-class>com.deppon.foss.module.base.baseinfo.server.servlet.ElectricPictureServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ElectricPictureServlet</servlet-name>
		<url-pattern>/electricPictureServlet</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>tokenGenerate</servlet-name>
		<servlet-class>com.deppon.foss.framework.server.sso.servlet.TokenGenerateServlet</servlet-class>
	</servlet>
	<servlet>
        <servlet-name>CXFServlet</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
        <init-param>
        	<param-name>config-location</param-name>
         	<param-value>/WEB-INF/cxf-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
	<servlet-mapping>
		<servlet-name>tokenValidateServlet</servlet-name>
		<url-pattern>/tokenValidate</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>ssoURLRequest</servlet-name>
		<url-pattern>/ssoURLRequest</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>tokenGenerate</servlet-name>
		<url-pattern>/tokenGenerate</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
        <servlet-name>CXFServlet</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>
	<!-- 
		GUI client config servlet
		If you need to client access, need to open the hessian configuration
	-->
	<!--
	<servlet>
		<servlet-name>hessian</servlet-name>
		<servlet-class>com.deppon.foss.base.baseinfo.web.framework.server.web.filter.HessianDispatcher</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>hessian</servlet-name>
		<url-pattern>/remoting/*</url-pattern>
	</servlet-mapping>
	-->
	
	<!-- 
		web client config filter mapping
	-->
	
	<!-- CAS FILTER begin -->
	<filter>
	    <filter-name>CAS Filter</filter-name>
	    <filter-class>com.deppon.foss.module.frameworkimpl.server.cas.filter.CASFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>CAS Filter</filter-name>
	    <url-pattern>/baseinfo/arrearsWorkFlowDraft.action</url-pattern>
	</filter-mapping>
	<filter-mapping>
	    <filter-name>CAS Filter</filter-name>
	    <url-pattern>/baseinfo/arrearsWorkFlowExamine.action</url-pattern>
	</filter-mapping>
	<filter-mapping>
	    <filter-name>CAS Filter</filter-name>
	    <url-pattern>/baseinfo/arrearsWorkFlowQuery.action</url-pattern>
	</filter-mapping>
	<!-- CAS FILTER end -->
	
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
		<init-param>
			<param-name>configProviders</param-name>
			<param-value>com.deppon.foss.framework.server.deploy.struts.ModuleConfigProvider</param-value>
		</init-param>
	</filter>
	
	<filter>
		<filter-name>encoding</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encoding</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>ssoForwardFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>framework</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
	
	<!-- 
		GUI client config servlet
		If you need to client access, need to open the hessian configuration
	-->
	<!--
	<filter-mapping>
		<filter-name>framework</filter-name>
		<url-pattern>/remoting/*</url-pattern>
	</filter-mapping>
	-->
	
	<filter-mapping>
		<filter-name>framework</filter-name>
		<url-pattern>/webservice/*</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>
    
	<resource-ref>
		<res-ref-name>jdbc/fossds</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>

	
	<!-- Welcome file lists -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
	<error-page>
		<error-code>404</error-code>
		<location>/404ErrorPage.html</location>
	</error-page>
	
	<error-page>
		<error-code>500</error-code>
		<location>/500ErrorPage.html</location>
	</error-page>
	
	<!-- 提供restful接口 -->
	<servlet>
		<servlet-name>spring-mvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>spring-mvc</servlet-name>
		<url-pattern>/restful/*</url-pattern>
	</servlet-mapping>
	
<!-- 	<session-config> -->
<!-- 		<session-timeout>1</session-timeout> -->
<!-- 	</session-config> -->
	
	
</web-app>
