<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- financialOrganizations-mapper.xml -->
<mapper namespace="foss.bse.bse-baseinfo.financialOrganizations" >

	<resultMap id="financialOrganizationsQueryResultMap"
   			type="com.deppon.foss.module.base.baseinfo.api.shared.domain.FinancialOrganizationsEntity">
		<result property="id" column="ID"  jdbcType="VARCHAR" />
		<result property="name" column="NAME"  jdbcType="VARCHAR" />
		<result property="code" column="CODE"  jdbcType="VARCHAR" />
		<result property="parentOrgCode" column="PARENT_ORG_CODE"  jdbcType="VARCHAR" />
		<result property="costCenter" column="COST_CENTER"  jdbcType="CHAR" />
		<result property="subSidiary" column="SUB_SIDIARY"  jdbcType="CHAR" />
		<result property="fullName" column="FULL_NAME"  jdbcType="VARCHAR" />

		<result property="createDate" column="CREATE_TIME"  jdbcType="TIMESTAMP" />
		<result property="modifyDate" column="MODIFY_TIME"  jdbcType="TIMESTAMP" />
		<result property="active" column="ACTIVE"  jdbcType="CHAR" />
		<result property="createUser" column="CREATE_USER_CODE"  jdbcType="VARCHAR" />
		<result property="modifyUser" column="MODIFY_USER_CODE"  jdbcType="VARCHAR" />
		<result property="notes" column="NOTES"  jdbcType="VARCHAR" />
		
		
		<result property="subCompanyCode" column="SUB_COMPANY_CODE"  jdbcType="VARCHAR" />
		<result property="subCompanyName" column="SUB_COMPANY_NAME"  jdbcType="VARCHAR" />
		<result property="fullPath" column="FULL_PATH"  jdbcType="VARCHAR" />
		<result property="isLeaf" column="IS_LEAF"  jdbcType="VARCHAR" />
		<result property="versionNo" column="VERSION_NO"  jdbcType="NUMERIC" />
		
		<result property="finOrgBenchmarkCode" column="FIN_ORG_BENCHMARK_CODE"  jdbcType="VARCHAR" />
		<result property="parentFinOrgBenchmarkCode" column="PARENT_FIN_ORG_BENCHMARK_CODE"  jdbcType="VARCHAR" />
	</resultMap>

	<!-- 插入数据 ： -->
	<insert id="addFinancialOrganizations"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.FinancialOrganizationsEntity">
		INSERT/** 综合:插入数据 **/ INTO BSE.T_BAS_FIN_ORG(
		ID,
		NAME,
		CODE,
		PARENT_ORG_CODE,
		COST_CENTER,
		SUB_SIDIARY,
		FULL_NAME,
		
		CREATE_TIME,
		MODIFY_TIME,
		ACTIVE,
		CREATE_USER_CODE,
		MODIFY_USER_CODE,
		NOTES,
		
		SUB_COMPANY_CODE,
		SUB_COMPANY_NAME,
		FULL_PATH,
		IS_LEAF,
		VERSION_NO,
		FIN_ORG_BENCHMARK_CODE,
		PARENT_FIN_ORG_BENCHMARK_CODE
		) VALUES	
	(
		#{id, jdbcType=VARCHAR},
		#{name, jdbcType=VARCHAR},
		#{code, jdbcType=VARCHAR},
		#{parentOrgCode, jdbcType=VARCHAR},
		#{costCenter, jdbcType=CHAR},
		#{subSidiary, jdbcType=CHAR},
		#{fullName, jdbcType=VARCHAR},
		
				
		#{createDate, jdbcType=TIMESTAMP},
		#{modifyDate, jdbcType=TIMESTAMP},
		#{active, jdbcType=CHAR},
		#{createUser, jdbcType=VARCHAR},
		#{modifyUser, jdbcType=VARCHAR},
		#{notes, jdbcType=VARCHAR},
		
		#{subCompanyCode, jdbcType=VARCHAR},
		#{subCompanyName, jdbcType=VARCHAR},
		#{fullPath, jdbcType=VARCHAR},
		#{isLeaf, jdbcType=VARCHAR},
		#{versionNo, jdbcType=NUMERIC},
		
		#{finOrgBenchmarkCode, jdbcType=VARCHAR},
		#{parentFinOrgBenchmarkCode, jdbcType=VARCHAR}
	)
	</insert> 

	<!-- 根据CODE 作废数据： -->
	<update id="deleteFinancialOrganizations" 
		parameterType="map">
		UPDATE/** 综合:根据CODE 作废数据 **/ BSE.T_BAS_FIN_ORG A 
		SET A.ACTIVE=#{entity.active,jdbcType=CHAR},
			A.VERSION_NO=#{entity.versionNo,jdbcType=NUMERIC},
			A.MODIFY_USER_CODE=#{entity.modifyUser,jdbcType=VARCHAR}, 
			A.MODIFY_TIME = #{entity.modifyDate,jdbcType=TIMESTAMP} 
		<where>
			A.CODE=#{entity.code,jdbcType=VARCHAR} 
			AND  A.ACTIVE=#{conditionActive,jdbcType=CHAR}
		</where>
	</update>

	<!-- 根据CODE批量作废 -->
	<update id="deleteFinancialOrganizationsMore"
		parameterType="map">
		UPDATE/** 综合:根据CODE批量作废 **/ BSE.T_BAS_FIN_ORG A 
		SET A.ACTIVE=#{entity.active,jdbcType=CHAR},
			A.VERSION_NO=#{entity.versionNo,jdbcType=NUMERIC},
			A.MODIFY_USER_CODE=#{entity.modifyUser,jdbcType=VARCHAR}, 
			A.MODIFY_TIME = #{entity.modifyDate,jdbcType=TIMESTAMP} 
        <where>
            <if test="codes!=null and codes.length > 0">
                A.CODE in
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            #{code} 
	            </foreach>
            </if>
            AND  A.ACTIVE=#{conditionActive,jdbcType=CHAR}
        </where>       
	</update>

	<!-- 根据CODE 更新数据：由于更新是先作废再插入，所以这个映射用不上： -->
	<update id="updateFinancialOrganizations" 
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.FinancialOrganizationsEntity">
		UPDATE/** 综合:根据CODE 更新数据：由于更新是先作废再插入，所以这个映射用不上 **/ BSE.T_BAS_FIN_ORG A SET 
		A.ID = #{id, jdbcType=VARCHAR},
		A.NAME = #{name, jdbcType=VARCHAR},
		A.CODE = #{code, jdbcType=VARCHAR},
		A.PARENT_ORG_CODE = #{parentOrgCode, jdbcType=VARCHAR},
		A.COST_CENTER = #{costCenter, jdbcType=CHAR},
		A.SUB_SIDIARY = #{subSidiary, jdbcType=CHAR},
		A.FULL_NAME = #{fullName, jdbcType=VARCHAR},
		A.CREATE_TIME = #{createDate, jdbcType=TIMESTAMP},
		A.MODIFY_TIME = #{modifyDate, jdbcType=TIMESTAMP},
		A.ACTIVE = #{active, jdbcType=CHAR},
		A.CREATE_USER_CODE = #{createUser, jdbcType=VARCHAR},
		A.MODIFY_USER_CODE = #{modifyUser, jdbcType=VARCHAR},
		A.NOTES = #{notes, jdbcType=VARCHAR},
		
		A.SUB_COMPANY_CODE = #{subCompanyCode, jdbcType=VARCHAR},
		A.SUB_COMPANY_NAME = #{subCompanyName, jdbcType=VARCHAR},
		A.FULL_PATH = #{fullPath, jdbcType=VARCHAR},
		A.IS_LEAF = #{isLeaf, jdbcType=VARCHAR},
		A.VERSION_NO = #{versionNo, jdbcType=NUMERIC},
		
		A.FIN_ORG_BENCHMARK_CODE = #{finOrgBenchmarkCode, jdbcType=VARCHAR},
		A.PARENT_FIN_ORG_BENCHMARK_CODE = #{parentFinOrgBenchmarkCode, jdbcType=VARCHAR}
		<where>
			A.CODE = #{code,jdbcType=VARCHAR}	
		</where>
	</update>


	<!-- 以下全为查询 -->

	<sql id="query_financialOrganizations_param">
		A.ID AS ID,		/** ID     **/ 
		A.NAME AS NAME,		/** 财务组织名称     **/ 
		A.CODE AS CODE,		/** 财务组织编码     **/ 
		A.PARENT_ORG_CODE AS PARENT_ORG_CODE,		/** 上级组织编码     **/ 
		A.COST_CENTER AS COST_CENTER,		/** 是否成本中心     **/ 
		A.SUB_SIDIARY AS SUB_SIDIARY,		/** 是否子公司     **/ 
		A.FULL_NAME AS FULL_NAME,		/** 全称     **/ 
		A.CREATE_TIME AS CREATE_TIME,		/** 创建时间     **/ 
		A.MODIFY_TIME AS MODIFY_TIME,		/** 更新时间     **/ 
		A.ACTIVE AS ACTIVE,		/** 是否启用     **/ 
		A.CREATE_USER_CODE AS CREATE_USER_CODE,		/** 创建人     **/ 
		A.MODIFY_USER_CODE AS MODIFY_USER_CODE,		/** 更新人     **/ 
		A.NOTES AS NOTES,		/** 备注     **/
		
		A.SUB_COMPANY_CODE AS SUB_COMPANY_CODE,		/** 子公司编码     **/ 
		A.SUB_COMPANY_NAME AS SUB_COMPANY_NAME,		/** 子公司名称     **/ 
		A.FULL_PATH AS FULL_PATH,		/** 财务组织编码全路径     **/ 
		A.IS_LEAF AS IS_LEAF,		/** 是否是叶子结点     **/
		A.VERSION_NO AS VERSION_NO,		/** 数据版本号     **/
		A.FIN_ORG_BENCHMARK_CODE, 	/** 财务组织标杆编码  **/
		A.PARENT_FIN_ORG_BENCHMARK_CODE /** 上级财务组织标杆编码  **/
	</sql>

	<!-- 根据 CODE 精确查询数据 -->
	<select id="queryFinancialOrganizationsByCode" resultMap="financialOrganizationsQueryResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.FinancialOrganizationsEntity">
		<![CDATA[
		  SELECT 
		  /** 综合:根据 CODE 精确查询数据 **/
		]]>
		<include refid="query_financialOrganizations_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_FIN_ORG A 
		]]>
		<where>
			A.CODE=#{code} 
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</select>

	<!-- 根据 CODE 批量精确查询数据 -->
	<select id="queryFinancialOrganizationsBatchByCode" resultMap="financialOrganizationsQueryResultMap"
		parameterType="map">
		<![CDATA[
		  SELECT 
		  /** 综合:根据 CODE 批量精确查询数据 **/
		]]>
		<include refid="query_financialOrganizations_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_FIN_ORG A 
		]]>
		<where>
			<if test="codes!=null and codes.length > 0">
                A.CODE in
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            #{code,jdbcType=VARCHAR} 
	            </foreach>
            </if> 
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</select>

	<!-- 根据entity精确查询的查询条件 ，如果属性为空，则此属性不作为条件-->
	<sql id="query_queryFinancialOrganizationsExactByEntity_condition_param">		
		<where>
	      	<if test="id!=null and id != ''">
	        	AND A.ID = #{id,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="name!=null and name != ''">
	        	AND A.NAME = #{name,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="code!=null and code != ''">
	        	AND A.CODE = #{code,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="parentOrgCode!=null and parentOrgCode != ''">
	        	AND A.PARENT_ORG_CODE = #{parentOrgCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="costCenter!=null and costCenter != ''">
	        	AND A.COST_CENTER = #{costCenter,jdbcType=CHAR} 
	      	</if>
	      	<if test="subSidiary!=null and subSidiary != ''">
	        	AND A.SUB_SIDIARY = #{subSidiary,jdbcType=CHAR} 
	      	</if>
	      	<if test="fullName!=null and fullName != ''">
	        	AND A.FULL_NAME = #{fullName,jdbcType=VARCHAR} 
	      	</if>
	      	
	      	<if test="notes!=null and notes != ''">
	        	AND A.NOTES = #{notes,jdbcType=VARCHAR} 
	      	</if>
	      	
	      	<if test="subCompanyCode!=null and subCompanyCode != ''">
	        	AND A.SUB_COMPANY_CODE = #{subCompanyCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="subCompanyName!=null and subCompanyName != ''">
	        	AND A.SUB_COMPANY_NAME = #{subCompanyName,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="fullPath!=null and fullPath != ''">
	        	AND A.FULL_PATH = #{fullPath,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="isLeaf!=null and isLeaf != ''">
	        	AND A.IS_LEAF = #{isLeaf,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="versionNo!=null and versionNo != ''">
	        	AND A.VERSION_NO = #{versionNo,jdbcType=NUMERIC} 
	      	</if>
	      	<if test="finOrgBenchmarkCode!=null and finOrgBenchmarkCode != ''">
	        	AND A.FIN_ORG_BENCHMARK_CODE = #{finOrgBenchmarkCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="parentFinOrgBenchmarkCode!=null and parentFinOrgBenchmarkCode != ''">
	        	AND A.PARENT_FIN_ORG_BENCHMARK_CODE = #{parentFinOrgBenchmarkCode,jdbcType=VARCHAR} 
	      	</if>

	      	AND A.ACTIVE =  #{active,jdbcType=CHAR} 
		</where>
	</sql>
	<!-- 根据实体动态条件精确查询,如果属性的值为null或者空白则无效： -->
	<select id="queryFinancialOrganizationsExactByEntity" resultMap="financialOrganizationsQueryResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.FinancialOrganizationsEntity">
		<![CDATA[
		  SELECT 
		  /** 综合:根据实体动态条件精确查询,如果属性的值为null或者空白则无效 **/
		]]>
		<include refid="query_financialOrganizations_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_FIN_ORG A 
		]]>
		<include refid="query_queryFinancialOrganizationsExactByEntity_condition_param" />
	</select>
	<!-- 根据实体动态条件精确查询总数,如果属性的值为null或者空白则无效： -->
	<select id="queryFinancialOrganizationsExactByEntityCount" resultType="Long"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.FinancialOrganizationsEntity">
		<![CDATA[
			 SELECT/** 综合:根据实体动态条件精确查询总数,如果属性的值为null或者空白则无效 **/ count(*) 
			 FROM BSE.T_BAS_FIN_ORG A 
		]]>
		<include refid="query_queryFinancialOrganizationsExactByEntity_condition_param" />
	</select>

	<!-- 根据entity模糊查询,如果属性的值为null或者空白则无效： -->
	<sql id="query_queryFinancialOrganizationsByEntity_condition_param">		
		<where>
	      	<if test="id!=null and id != ''">
	        	AND A.ID like CONCAT(CONCAT('%', #{id,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="name!=null and name != ''">
	        	AND A.NAME like CONCAT(CONCAT('%', #{name,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="code!=null and code != ''">
	        	AND A.CODE like CONCAT(CONCAT('%', #{code,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="parentOrgCode!=null and parentOrgCode != ''">
	        	AND A.PARENT_ORG_CODE like CONCAT(CONCAT('%', #{parentOrgCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="costCenter!=null and costCenter != ''">
	        	AND A.COST_CENTER like CONCAT(CONCAT('%', #{costCenter,jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="subSidiary!=null and subSidiary != ''">
	        	AND A.SUB_SIDIARY like CONCAT(CONCAT('%', #{subSidiary,jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="fullName!=null and fullName != ''">
	        	AND A.FULL_NAME like CONCAT(CONCAT('%', #{fullName,jdbcType=VARCHAR}), '%') 
	      	</if>
	      		      	
	      	<if test="notes!=null and notes != ''">
	        	AND A.NOTES like CONCAT(CONCAT('%', #{notes,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	
	      	
	      	<if test="subCompanyCode!=null and subCompanyCode != ''">
	        	AND A.SUB_COMPANY_CODE like CONCAT(CONCAT('%', #{subCompanyCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="subCompanyName!=null and subCompanyName != ''">
	        	AND A.SUB_COMPANY_NAME like CONCAT(CONCAT('%', #{subCompanyName,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="fullPath!=null and fullPath != ''">
	        	AND A.FULL_PATH like CONCAT(CONCAT('%', #{fullPath,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="isLeaf!=null and isLeaf != ''">
	        	AND A.IS_LEAF like CONCAT(CONCAT('%', #{isLeaf,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="versionNo!=null and versionNo != ''">
	        	AND A.VERSION_NO like CONCAT(CONCAT('%', #{versionNo,jdbcType=NUMERIC}), '%') 
	      	</if>

	      	<if test="finOrgBenchmarkCode!=null and finOrgBenchmarkCode != ''">
	        	AND A.FIN_ORG_BENCHMARK_CODE like CONCAT(CONCAT('%', #{finOrgBenchmarkCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="parentFinOrgBenchmarkCode!=null and parentFinOrgBenchmarkCode != ''">
	        	AND A.PARENT_FIN_ORG_BENCHMARK_CODE like CONCAT(CONCAT('%', #{parentFinOrgBenchmarkCode,jdbcType=VARCHAR}), '%') 
	      	</if>
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</sql>
	<!-- 根据实体动态条件模糊查询,如果属性的值为null或者空白则无效： -->
	<select id="queryFinancialOrganizationsByEntity" resultMap="financialOrganizationsQueryResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.FinancialOrganizationsEntity">
		<![CDATA[
		  SELECT 
		  /** 综合:根据实体动态条件模糊查询,如果属性的值为null或者空白则无效 **/
		]]>
		<include refid="query_financialOrganizations_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_FIN_ORG A 
		]]>
		<include refid="query_queryFinancialOrganizationsByEntity_condition_param" />
	</select>
	<!-- 根据实体动态条件模糊查询总数,如果属性的值为null或者空白则无效： -->
	<select id="queryFinancialOrganizationsByEntityCount" resultType="Long"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.FinancialOrganizationsEntity">
		<![CDATA[
			 SELECT/** 综合:根据实体动态条件模糊查询总数,如果属性的值为null或者空白则无效 **/ count(*) 
			 FROM BSE.T_BAS_FIN_ORG A 
		]]>
		<include refid="query_queryFinancialOrganizationsByEntity_condition_param" />
	</select>
	
	
	<!-- 查询所有 财务组织 信息 以供下载 -->
	<select id="queryFinancialOrganizationsForDownload"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.FinancialOrganizationsEntity"
		resultMap="financialOrganizationsQueryResultMap">
		<![CDATA[
			SELECT
			/** 综合:查询所有 财务组织 信息 以供下载 **/
		]]>
		<include refid="query_financialOrganizations_param" />
		<![CDATA[
			FROM BSE.T_BAS_FIN_ORG A
		]]>
		<where>
			<if test="versionNo != null">
				AND A.VERSION_NO >= #{versionNo,jdbcType=NUMERIC}
			</if>
		</where>
		<![CDATA[
			ORDER BY A.VERSION_NO ASC
		]]>
	</select>
	
	<!-- 以下为特殊查询 -->
	
	<!-- 模糊查询 根据name查询财务组织及财务组织的所有上级，上下级通过CODE,PARENT_ORG_CODE来关联-->
	<select id="queryFinancialOrganizationsUpByName"
			resultMap="financialOrganizationsQueryResultMap"
			parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.FinancialOrganizationsEntity">
		SELECT 
		/** 综合:模糊查询 根据name查询财务组织及财务组织的所有上级，上下级通过CODE,PARENT_ORG_CODE来关联 **/
		<include refid="query_financialOrganizations_param" />
		FROM BSE.T_BAS_FIN_ORG A ,		
			(
				SELECT CODE
				FROM BSE.T_BAS_FIN_ORG 
				CONNECT BY PRIOR PARENT_ORG_CODE = CODE AND  ACTIVE= #{active,jdbcType=CHAR} 
				START WITH NAME LIKE CONCAT(CONCAT('%', #{name,jdbcType=CHAR}), '%') 
			) B
		WHERE A.CODE = B.CODE AND A.ACTIVE=#{active,jdbcType=CHAR} 
	</select>	
	
	<!-- 获得整个表的最新版本号 -->
	<select id="getLastUpdateTime" resultType="long">
		SELECT/** 综合:获得整个表的最新版本号 **/ MAX(VERSION_NO) FROM  BSE.T_BAS_FIN_ORG
	</select>

</mapper>
