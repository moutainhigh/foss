<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- orgAdministrativeInfo-mapper.xml -->
<mapper namespace="foss.bse.bse-baseinfo.orgAdministrativeInfo" >

	<resultMap id="orgAdministrativeInfoQueryResultMap"
   			type="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		<result property="id" column="ID"  jdbcType="VARCHAR" />
		<result property="code" column="CODE"  jdbcType="VARCHAR" />
		<result property="name" column="NAME"  jdbcType="VARCHAR" />
		<result property="pinyin" column="PINYIN"  jdbcType="VARCHAR" />
		<result property="unifiedCode" column="UNIFIED_CODE"  jdbcType="VARCHAR" />
		<result property="leader" column="LEADER"  jdbcType="VARCHAR" />
		<result property="principalNo" column="PRINCIPAL_NO"  jdbcType="VARCHAR" />
		<result property="parentOrgName" column="PARENT_ORG_NAME"  jdbcType="VARCHAR" />
		<result property="parentOrgUnifiedCode" column="PARENT_ORG_UNIFIED_CODE"  jdbcType="VARCHAR" />
		<result property="subsidiaryCode" column="SUBSIDIARY_CODE"  jdbcType="VARCHAR" />
		<result property="costCenterCode" column="COST_CENTER_CODE"  jdbcType="VARCHAR" />
		<result property="status" column="STATUS"  jdbcType="VARCHAR" />
		<result property="endTime" column="END_TIME"  jdbcType="TIMESTAMP" />
		<result property="beginTime" column="BEGIN_TIME"  jdbcType="TIMESTAMP" />
		<result property="division" column="DIVISION"  jdbcType="CHAR" />
		<result property="divisionCode" column="DIVISION_CODE"  jdbcType="VARCHAR" />
		<result property="bigRegion" column="BIG_REGION"  jdbcType="CHAR" />
		<result property="smallRegion" column="SMALL_REGION"  jdbcType="CHAR" />
		<result property="address" column="ADDRESS"  jdbcType="VARCHAR" />
		<result property="deptArea" column="DEPT_AREA"  jdbcType="VARCHAR" />
		<result property="provCode" column="PROV_CODE"  jdbcType="VARCHAR" />
		<result property="cityCode" column="CITY_CODE"  jdbcType="VARCHAR" />
		<result property="countyCode" column="COUNTY_CODE"  jdbcType="VARCHAR" />
		<result property="salesDepartment" column="SALES_DEPARTMENT"  jdbcType="CHAR" />
		<result property="transferCenter" column="TRANSFER_CENTER"  jdbcType="CHAR" />
		<result property="expressBigRegion" column="EXPRESS_BIG_REGION"  jdbcType="CHAR"/>
		<result property="expressSalesDepartment" column="EXPRESS_SALES_DEPARTMENT" jdbcType="CHAR"/>
		<result property="expressPart" column="EXPRESS_PART" jdbcType="CHAR"/>
		<result property="expressBranch" column="EXPRESS_BRANCH" jdbcType="CHAR"/>
		<result property="doAirDispatch" column="DO_AIR_DISPATCH"  jdbcType="CHAR" />
		<result property="transDepartment" column="TRANS_DEPARTMENT"  jdbcType="CHAR" />
		<result property="dispatchTeam" column="DISPATCH_TEAM"  jdbcType="CHAR" />
		<result property="billingGroup" column="BILLING_GROUP"  jdbcType="CHAR" />
		<result property="transTeam" column="TRANS_TEAM"  jdbcType="CHAR" />
		<result property="isDeliverSchedule" column="IS_DELIVER_SCHEDULE"  jdbcType="CHAR" />
		<result property="isArrangeGoods" column="IS_ARRANGE_GOODS"  jdbcType="CHAR" />
		<result property="deliverOutfield" column="DELIVER_OUTFIELD"  jdbcType="VARCHAR" />
		<result property="arrangeOutfield" column="ARRANGE_OUTFIELD"  jdbcType="VARCHAR" />
		<result property="arrangeBizType" column="ARRANGE_BIZ_TYPE"  jdbcType="VARCHAR" />
		<result property="createDate" column="CREATE_TIME"  jdbcType="TIMESTAMP" />
		<result property="modifyDate" column="MODIFY_TIME"  jdbcType="TIMESTAMP" />
		<result property="active" column="ACTIVE"  jdbcType="CHAR" />
		<result property="createUser" column="CREATE_USER_CODE"  jdbcType="VARCHAR" />
		<result property="modifyUser" column="MODIFY_USER_CODE"  jdbcType="VARCHAR" />
		<result property="airDispatch" column="AIR_DISPATCH"  jdbcType="CHAR" />
		
		<result property="isEntityFinance" column="IS_ENTITY_FINANCE"  jdbcType="CHAR" />
		<result property="entityFinance" column="ENTITY_FINANCE"  jdbcType="VARCHAR" />
		<result property="depCoordinate" column="DEP_COORDINATE"  jdbcType="VARCHAR" />
		<result property="depTelephone" column="DEP_TELEPHONE"  jdbcType="VARCHAR" />
		<result property="depFax" column="DEP_FAX"  jdbcType="VARCHAR" />
		<result property="orgSimpleName" column="ORG_SIMPLE_NAME"  jdbcType="VARCHAR" />
		
		<result property="countryRegion" column="COUNTRY_REGION"  jdbcType="VARCHAR" />
		<result property="orgEnSimple" column="ORG_EN_SIMPLE"  jdbcType="VARCHAR" />
		<result property="deptDesc" column="DEPT_DESC"  jdbcType="VARCHAR" />
		<result property="versionNo" column="VERSION_NO"  jdbcType="NUMERIC" />
		<result property="parentOrgCode" column="PARENT_ORG_CODE"  jdbcType="VARCHAR" />
		
		<result property="uumsId" column="UUMS_ID"  jdbcType="VARCHAR" />
		<result property="uumsParentId" column="UUMS_PARENT_ID"  jdbcType="VARCHAR" />
		<result property="uumsIds" column="UUMS_IDS"  jdbcType="VARCHAR" />
		
		<result property="isLeaf" column="IS_LEAF"  jdbcType="CHAR" />
		<result property="displayOrder" column="DISPLAY_ORDER"  jdbcType="VARCHAR" />
		<result property="deptLevel" column="DEPT_LEVEL"  jdbcType="VARCHAR" />
		<result property="areaCode" column="AREA_CODE"  jdbcType="VARCHAR" />
		<result property="deptEmail" column="DEPT_EMAIL"  jdbcType="VARCHAR" />
		<result property="zipCode" column="ZIP_CODE"  jdbcType="VARCHAR" />
		<result property="deptAttribute" column="DEPT_ATTRIBUTE"  jdbcType="VARCHAR" />
		<result property="canceledSystems" column="CANCELED_SYSTEMS"  jdbcType="VARCHAR" />
		<result property="ehrDeptCode" column="EHR_DEPT_CODE"  jdbcType="VARCHAR" />
		<result property="orgLevel" column="ORG_LEVEL"  jdbcType="VARCHAR" />
		<result property="isSecurity" column="ISSECURITY"  jdbcType="VARCHAR" />
		
		<result property="expressSorting" column="EXPRESS_SORTING" jdbcType="CHAR"/>
		<result property="complementSimpleName" column="COMPLEMENT_SIMPLE_NAME" jdbcType="VARCHAR"/>
		<result property="isManageDepartment" column="IS_MANAGE_DEPARTMENT" jdbcType="CHAR"/>
	</resultMap>

	<sql id="query_orgAdministrativeInfo_param">
		A.ID AS ID,		/** ID     **/ 
		A.CODE AS CODE,		/** 组织编码     **/ 
		A.NAME AS NAME,		/** 组织名称     **/ 
		A.PINYIN AS PINYIN,		/** 拼音     **/ 
		A.UNIFIED_CODE AS UNIFIED_CODE,		/** 组织标杆编码     **/ 
		A.LEADER AS LEADER,		/** 组织负责人     **/ 
		A.PRINCIPAL_NO AS PRINCIPAL_NO,		/** 组织负责人工号     **/ 
		A.PARENT_ORG_NAME AS PARENT_ORG_NAME,		/** 上级组织名称     **/ 
		A.PARENT_ORG_UNIFIED_CODE AS PARENT_ORG_UNIFIED_CODE,		/** 上级组织标杆编码     **/ 
		A.SUBSIDIARY_CODE AS SUBSIDIARY_CODE,		/** 所属子公司编码     **/ 
		A.COST_CENTER_CODE AS COST_CENTER_CODE,		/** 所属成本中心编码     **/ 
		A.STATUS AS STATUS,		/** 组织状态     **/ 
		A.END_TIME AS END_TIME,		/** 作废日期     **/ 
		A.BEGIN_TIME AS BEGIN_TIME,		/** 启用日期     **/ 
		A.DIVISION AS DIVISION,		/** 是否事业部     **/ 
		A.DIVISION_CODE AS DIVISION_CODE,		/** 事业部编码     **/ 
		A.BIG_REGION AS BIG_REGION,		/** 是否大区     **/ 
		A.SMALL_REGION AS SMALL_REGION,		/** 是否小区     **/ 
		A.ADDRESS AS ADDRESS,		/** 部门地址     **/ 
		A.DEPT_AREA AS DEPT_AREA,		/** 部门面积     **/ 
		A.PROV_CODE AS PROV_CODE,		/** 省份     **/ 
		A.CITY_CODE AS CITY_CODE,		/** 城市     **/ 
		A.COUNTY_CODE AS COUNTY_CODE,		/** 区县     **/ 
		A.SALES_DEPARTMENT AS SALES_DEPARTMENT,		/** 是否营业部     **/ 
		A.TRANSFER_CENTER AS TRANSFER_CENTER,		/** 是否外场     **/ 
		A.EXPRESS_BIG_REGION AS EXPRESS_BIG_REGION, /** 是否快递大区  **/
		A.EXPRESS_SALES_DEPARTMENT AS EXPRESS_SALES_DEPARTMENT, /** 是否虚拟快递营业部  **/
		A.EXPRESS_PART AS EXPRESS_PART, /** 是否快递点部     **/
		A.EXPRESS_BRANCH AS EXPRESS_BRANCH, /** 是否快递分部     **/
		A.DO_AIR_DISPATCH AS DO_AIR_DISPATCH,		/** 是否可空运配载     **/ 
		A.TRANS_DEPARTMENT AS TRANS_DEPARTMENT,		/** 是否车队     **/ 
		A.DISPATCH_TEAM AS DISPATCH_TEAM,		/** 是否车队调度组     **/ 
		A.BILLING_GROUP AS BILLING_GROUP,		/** 是否集中开单组     **/ 
		A.TRANS_TEAM AS TRANS_TEAM,		/** 是否车队组     **/ 
		A.IS_DELIVER_SCHEDULE AS IS_DELIVER_SCHEDULE,		/** 是否派送排单     **/ 
		A.IS_ARRANGE_GOODS AS IS_ARRANGE_GOODS,		/** 是否理货     **/ 
		A.DELIVER_OUTFIELD AS DELIVER_OUTFIELD,		/** 派送排单服务外场     **/ 
		A.ARRANGE_OUTFIELD AS ARRANGE_OUTFIELD,		/** 理货部门服务外场     **/ 
		A.ARRANGE_BIZ_TYPE AS ARRANGE_BIZ_TYPE,		/** 理货业务类型     **/ 
		A.CREATE_TIME AS CREATE_TIME,		/** 创建时间     **/ 
		A.MODIFY_TIME AS MODIFY_TIME,		/** 更新时间     **/ 
		A.ACTIVE AS ACTIVE,		/** 是否启用     **/ 
		A.CREATE_USER_CODE AS CREATE_USER_CODE,		/** 创建人     **/ 
		A.MODIFY_USER_CODE AS MODIFY_USER_CODE,		/** 更新人     **/ 
		A.AIR_DISPATCH AS AIR_DISPATCH,		/** 是否空运总调     **/
		A.IS_ENTITY_FINANCE AS IS_ENTITY_FINANCE,		/** 是否实体财务部     **/ 
		A.ENTITY_FINANCE AS ENTITY_FINANCE,		/** 所属实体财务部     **/ 
		A.DEP_COORDINATE AS DEP_COORDINATE,		/** 部门服务区坐标编号     **/ 
		A.DEP_TELEPHONE AS DEP_TELEPHONE,		/** 部门电话     **/ 
		A.DEP_FAX AS DEP_FAX,		/** 部门传真     **/ 
		A.ORG_SIMPLE_NAME AS ORG_SIMPLE_NAME,		/** 部门简称     **/	
		
			
		A.COUNTRY_REGION AS COUNTRY_REGION,		/** 国家地区     **/ 
		A.ORG_EN_SIMPLE AS ORG_EN_SIMPLE,		/** 部门英文简称     **/ 
		A.DEPT_DESC AS DEPT_DESC,		/** 部门备注描述信息     **/ 
		A.VERSION_NO AS VERSION_NO,		/** 数据版本号     **/ 
		A.PARENT_ORG_CODE AS PARENT_ORG_CODE,		/** 上级组织编码     **/ 

		A.UUMS_ID AS UUMS_ID,		/** UUMS主键ID     **/ 
		A.UUMS_PARENT_ID AS UUMS_PARENT_ID,		/** UUMS上级主键ID     **/ 
		A.UUMS_IDS AS UUMS_IDS,		/** UUMS主键ID序列     **/ 

		A.IS_LEAF AS IS_LEAF,		/** 是否为叶子节点     **/ 
		A.DISPLAY_ORDER AS DISPLAY_ORDER,		/** 显示顺序     **/ 
		A.DEPT_LEVEL AS DEPT_LEVEL,		/** 部门层级     **/ 
		A.AREA_CODE AS AREA_CODE,		/** 地区编码默认拼音     **/ 
		A.DEPT_EMAIL AS DEPT_EMAIL,		/** 组织邮箱     **/ 
		A.ZIP_CODE AS ZIP_CODE,		/** 邮编号码     **/ 
		A.DEPT_ATTRIBUTE AS DEPT_ATTRIBUTE,		/** 组织性质     **/ 
		A.CANCELED_SYSTEMS AS CANCELED_SYSTEMS,		/** 已封存系统     **/ 
		A.EHR_DEPT_CODE AS EHR_DEPT_CODE,		/** EHR部门编码     **/
		A.ORG_LEVEL AS ORG_LEVEL,		/** 组织级别，取自数据字典，包括但不限于事业部，大区，小区，部门等，     **/
		A.COMPLEMENT_SIMPLE_NAME AS COMPLEMENT_SIMPLE_NAME, /** 补码简称 **/
		A.ISSECURITY AS ISSECURITY, /**是否保安组**/
		A.EXPRESS_SORTING AS EXPRESS_SORTING, /**是否快递分拣**/
		A.IS_MANAGE_DEPARTMENT AS IS_MANAGE_DEPARTMENT  /**是否经营本部 **/
	</sql>
	
	<resultMap id="orgAssociationResultMap"
   			type="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		<result property="id" column="ORG_ID"  jdbcType="VARCHAR" />
		<result property="code" column="ORG_CODE"  jdbcType="VARCHAR" />
		<result property="name" column="ORG_NAME"  jdbcType="VARCHAR" />
		<result property="pinyin" column="ORG_PINYIN"  jdbcType="VARCHAR" />
		<result property="unifiedCode" column="ORG_UNIFIED_CODE"  jdbcType="VARCHAR" />
		<result property="leader" column="ORG_LEADER"  jdbcType="VARCHAR" />
		<result property="principalNo" column="ORG_PRINCIPAL_NO"  jdbcType="VARCHAR" />
		<result property="parentOrgName" column="ORG_PARENT_ORG_NAME"  jdbcType="VARCHAR" />
		<result property="parentOrgUnifiedCode" column="ORG_PARENT_ORG_UNIFIED_CODE"  jdbcType="VARCHAR" />
		<result property="subsidiaryCode" column="ORG_SUBSIDIARY_CODE"  jdbcType="VARCHAR" />
		<result property="costCenterCode" column="ORG_COST_CENTER_CODE"  jdbcType="VARCHAR" />
		<result property="status" column="ORG_STATUS"  jdbcType="VARCHAR" />
		<result property="endTime" column="ORG_END_TIME"  jdbcType="TIMESTAMP" />
		<result property="beginTime" column="ORG_BEGIN_TIME"  jdbcType="TIMESTAMP" />
		<result property="division" column="ORG_DIVISION"  jdbcType="CHAR" />
		<result property="divisionCode" column="ORG_DIVISION_CODE"  jdbcType="VARCHAR" />
		<result property="bigRegion" column="ORG_BIG_REGION"  jdbcType="CHAR" />
		<result property="smallRegion" column="ORG_SMALL_REGION"  jdbcType="CHAR" />
		<result property="address" column="ORG_ADDRESS"  jdbcType="VARCHAR" />
		<result property="deptArea" column="ORG_DEPT_AREA"  jdbcType="VARCHAR" />
		<result property="provCode" column="ORG_PROV_CODE"  jdbcType="VARCHAR" />
		<result property="cityCode" column="ORG_CITY_CODE"  jdbcType="VARCHAR" />
		<result property="countyCode" column="ORG_COUNTY_CODE"  jdbcType="VARCHAR" />
		<result property="salesDepartment" column="ORG_SALES_DEPARTMENT"  jdbcType="CHAR" />
		<result property="transferCenter" column="ORG_TRANSFER_CENTER"  jdbcType="CHAR" />
		<result property="expressBigRegion" column="ORG_EXPRESS_BIG_REGION"  jdbcType="CHAR"/>
		<result property="expressSalesDepartment" column="ORG_EXPRESS_SALES_DEPARTMENT" jdbcType="CHAR"/>
		<result property="expressPart" column="ORG_EXPRESS_PART" jdbcType="CHAR"/>
		<result property="expressBranch" column="ORG_EXPRESS_BRANCH" jdbcType="CHAR"/>
		<result property="doAirDispatch" column="ORG_DO_AIR_DISPATCH"  jdbcType="CHAR" />
		<result property="transDepartment" column="ORG_TRANS_DEPARTMENT"  jdbcType="CHAR" />
		<result property="dispatchTeam" column="ORG_DISPATCH_TEAM"  jdbcType="CHAR" />
		<result property="billingGroup" column="ORG_BILLING_GROUP"  jdbcType="CHAR" />
		<result property="transTeam" column="ORG_TRANS_TEAM"  jdbcType="CHAR" />
		<result property="isDeliverSchedule" column="ORG_IS_DELIVER_SCHEDULE"  jdbcType="CHAR" />
		<result property="isArrangeGoods" column="ORG_IS_ARRANGE_GOODS"  jdbcType="CHAR" />
		<result property="deliverOutfield" column="ORG_DELIVER_OUTFIELD"  jdbcType="VARCHAR" />
		<result property="arrangeOutfield" column="ORG_ARRANGE_OUTFIELD"  jdbcType="VARCHAR" />
		<result property="arrangeBizType" column="ORG_ARRANGE_BIZ_TYPE"  jdbcType="VARCHAR" />
		<result property="createDate" column="ORG_CREATE_TIME"  jdbcType="TIMESTAMP" />
		<result property="modifyDate" column="ORG_MODIFY_TIME"  jdbcType="TIMESTAMP" />
		<result property="active" column="ORG_ACTIVE"  jdbcType="CHAR" />
		<result property="createUser" column="ORG_CREATE_USER_CODE"  jdbcType="VARCHAR" />
		<result property="modifyUser" column="ORG_MODIFY_USER_CODE"  jdbcType="VARCHAR" />
		<result property="airDispatch" column="ORG_AIR_DISPATCH"  jdbcType="CHAR" />
		
		<result property="isEntityFinance" column="ORG_IS_ENTITY_FINANCE"  jdbcType="CHAR" />
		<result property="entityFinance" column="ORG_ENTITY_FINANCE"  jdbcType="VARCHAR" />
		<result property="depCoordinate" column="ORG_DEP_COORDINATE"  jdbcType="VARCHAR" />
		<result property="depTelephone" column="ORG_DEP_TELEPHONE"  jdbcType="VARCHAR" />
		<result property="depFax" column="ORG_DEP_FAX"  jdbcType="VARCHAR" />
		<result property="orgSimpleName" column="ORG_SIMPLE_NAME"  jdbcType="VARCHAR" />
		<result property="countryRegion" column="ORG_COUNTRY_REGION"  jdbcType="VARCHAR" />
		<result property="orgEnSimple" column="ORG_EN_SIMPLE"  jdbcType="VARCHAR" />
		<result property="deptDesc" column="ORG_DEPT_DESC"  jdbcType="VARCHAR" />
		<result property="versionNo" column="ORG_VERSION_NO"  jdbcType="NUMERIC" />
		<result property="parentOrgCode" column="ORG_PARENT_ORG_CODE"  jdbcType="VARCHAR" />
		<result property="uumsId" column="ORG_UUMS_ID"  jdbcType="VARCHAR" />
		<result property="uumsParentId" column="ORG_UUMS_PARENT_ID"  jdbcType="VARCHAR" />
		<result property="uumsIds" column="ORG_UUMS_IDS"  jdbcType="VARCHAR" />
		<result property="isLeaf" column="ORG_IS_LEAF"  jdbcType="CHAR" />
		<result property="displayOrder" column="ORG_DISPLAY_ORDER"  jdbcType="VARCHAR" />
		<result property="deptLevel" column="ORG_DEPT_LEVEL"  jdbcType="VARCHAR" />
		<result property="areaCode" column="ORG_AREA_CODE"  jdbcType="VARCHAR" />
		<result property="deptEmail" column="ORG_DEPT_EMAIL"  jdbcType="VARCHAR" />
		<result property="zipCode" column="ORG_ZIP_CODE"  jdbcType="VARCHAR" />
		<result property="deptAttribute" column="ORG_DEPT_ATTRIBUTE"  jdbcType="VARCHAR" />
		<result property="canceledSystems" column="ORG_CANCELED_SYSTEMS"  jdbcType="VARCHAR" />
		<result property="ehrDeptCode" column="ORG_EHR_DEPT_CODE"  jdbcType="VARCHAR" />
		<result property="versionNo" column="ORG_VERSION_NO"  jdbcType="VARCHAR" />
		<result property="orgLevel" column="ORG_ORG_LEVEL"  jdbcType="VARCHAR" />
	
		<result property="complementSimpleName" column="ORG_COMPLEMENT_SIMPLE_NAME" jdbcType="VARCHAR"/>
	</resultMap>

	<sql id="org_association_param">
		ORG.ID AS ORG_ID,		/** ID     **/ 
		ORG.CODE AS ORG_CODE,		/** 组织编码     **/ 
		ORG.NAME AS ORG_NAME,		/** 组织名称     **/ 
		ORG.PINYIN AS ORG_PINYIN,		/** 拼音     **/ 
		ORG.UNIFIED_CODE AS ORG_UNIFIED_CODE,		/** 组织标杆编码     **/ 
		ORG.LEADER AS ORG_LEADER,		/** 组织负责人     **/ 
		ORG.PRINCIPAL_NO AS ORG_PRINCIPAL_NO,		/** 组织负责人工号     **/ 
		ORG.PARENT_ORG_NAME AS ORG_PARENT_ORG_NAME,		/** 上级组织名称     **/ 
		ORG.PARENT_ORG_UNIFIED_CODE AS ORG_PARENT_ORG_UNIFIED_CODE,		/** 上级组织标杆编码     **/ 
		ORG.SUBSIDIARY_CODE AS ORG_SUBSIDIARY_CODE,		/** 所属子公司编码     **/ 
		ORG.COST_CENTER_CODE AS ORG_COST_CENTER_CODE,		/** 所属成本中心编码     **/ 
		ORG.STATUS AS ORG_STATUS,		/** 组织状态     **/ 
		ORG.END_TIME AS ORG_END_TIME,		/** 作废日期     **/ 
		ORG.BEGIN_TIME AS ORG_BEGIN_TIME,		/** 启用日期     **/ 
		ORG.DIVISION AS ORG_DIVISION,		/** 是否事业部     **/ 
		ORG.DIVISION_CODE AS ORG_DIVISION_CODE,		/** 事业部编码     **/ 
		ORG.BIG_REGION AS ORG_BIG_REGION,		/** 是否大区     **/ 
		ORG.SMALL_REGION AS ORG_SMALL_REGION,		/** 是否小区     **/ 
		ORG.ADDRESS AS ORG_ADDRESS,		/** 部门地址     **/ 
		ORG.DEPT_AREA AS ORG_DEPT_AREA,		/** 部门面积     **/ 
		ORG.PROV_CODE AS ORG_PROV_CODE,		/** 省份     **/ 
		ORG.CITY_CODE AS ORG_CITY_CODE,		/** 城市     **/ 
		ORG.COUNTY_CODE AS ORG_COUNTY_CODE,		/** 区县     **/ 
		ORG.SALES_DEPARTMENT AS ORG_SALES_DEPARTMENT,		/** 是否营业部     **/ 
		ORG.TRANSFER_CENTER AS ORG_TRANSFER_CENTER,		/** 是否外场     **/ 
		ORG.EXPRESS_BIG_REGION AS ORG_EXPRESS_BIG_REGION, /** 是否快递大区  **/
		ORG.EXPRESS_SALES_DEPARTMENT AS ORG_EXPRESS_SALES_DEPARTMENT, /** 是否虚拟快递营业部  **/
		ORG.EXPRESS_PART AS ORG_EXPRESS_PART, /** 是否快递点部     **/
		ORG.EXPRESS_BRANCH AS ORG_EXPRESS_BRANCH, /** 是否快递分部     **/
		ORG.DO_AIR_DISPATCH AS ORG_DO_AIR_DISPATCH,		/** 是否可空运配载     **/ 
		ORG.TRANS_DEPARTMENT AS ORG_TRANS_DEPARTMENT,		/** 是否车队     **/ 
		ORG.DISPATCH_TEAM AS ORG_DISPATCH_TEAM,		/** 是否车队调度组     **/ 
		ORG.BILLING_GROUP AS ORG_BILLING_GROUP,		/** 是否集中开单组     **/ 
		ORG.TRANS_TEAM AS ORG_TRANS_TEAM,		/** 是否车队组     **/ 
		ORG.IS_DELIVER_SCHEDULE AS ORG_IS_DELIVER_SCHEDULE,		/** 是否派送排单     **/ 
		ORG.IS_ARRANGE_GOODS AS ORG_IS_ARRANGE_GOODS,		/** 是否理货     **/ 
		ORG.DELIVER_OUTFIELD AS ORG_DELIVER_OUTFIELD,		/** 派送排单服务外场     **/ 
		ORG.ARRANGE_OUTFIELD AS ORG_ARRANGE_OUTFIELD,		/** 理货部门服务外场     **/ 
		ORG.ARRANGE_BIZ_TYPE AS ORG_ARRANGE_BIZ_TYPE,		/** 理货业务类型     **/ 
		ORG.CREATE_TIME AS ORG_CREATE_TIME,		/** 创建时间     **/ 
		ORG.MODIFY_TIME AS ORG_MODIFY_TIME,		/** 更新时间     **/ 
		ORG.ACTIVE AS ORG_ACTIVE,		/** 是否启用     **/ 
		ORG.CREATE_USER_CODE AS ORG_CREATE_USER_CODE,		/** 创建人     **/ 
		ORG.MODIFY_USER_CODE AS ORG_MODIFY_USER_CODE,		/** 更新人     **/ 
		ORG.AIR_DISPATCH AS ORG_AIR_DISPATCH,		/** 是否空运总调     **/
		
		ORG.IS_ENTITY_FINANCE AS ORG_IS_ENTITY_FINANCE,		/** 是否实体财务部     **/ 
		ORG.ENTITY_FINANCE AS ORG_ENTITY_FINANCE,		/** 所属实体财务部     **/ 
		ORG.DEP_COORDINATE AS ORG_DEP_COORDINATE,		/** 部门服务区坐标编号     **/ 
		ORG.DEP_TELEPHONE AS ORG_DEP_TELEPHONE,		/** 部门电话     **/ 
		ORG.DEP_FAX AS ORG_DEP_FAX,		/** 部门传真     **/ 
		ORG.ORG_SIMPLE_NAME AS ORG_SIMPLE_NAME,		/** 部门简称     **/
		
		ORG.COUNTRY_REGION AS ORG_COUNTRY_REGION,		/** 国家地区     **/ 
		ORG.ORG_EN_SIMPLE AS ORG_EN_SIMPLE,		/** 部门英文简称     **/ 
		ORG.DEPT_DESC AS ORG_DEPT_DESC,		/** 部门备注描述信息     **/ 
		ORG.VERSION_NO AS ORG_VERSION_NO,		/** 数据版本号     **/ 
		ORG.PARENT_ORG_CODE AS ORG_PARENT_ORG_CODE,		/** 上级组织编码     **/ 
		
		ORG.UUMS_ID AS ORG_UUMS_ID,		/** UUMS主键ID     **/ 
		ORG.UUMS_PARENT_ID AS ORG_UUMS_PARENT_ID,		/** UUMS上级主键ID     **/ 
		ORG.UUMS_IDS AS ORG_UUMS_IDS,		/** UUMS主键ID序列     **/ 
		
		ORG.IS_LEAF AS ORG_IS_LEAF,		/** 是否为叶子节点     **/ 
		ORG.DISPLAY_ORDER AS ORG_DISPLAY_ORDER,		/** 显示顺序     **/ 
		ORG.DEPT_LEVEL AS ORG_DEPT_LEVEL,		/** 部门层级     **/ 
		ORG.AREA_CODE AS ORG_AREA_CODE,		/** 地区编码默认拼音     **/ 
		ORG.DEPT_EMAIL AS ORG_DEPT_EMAIL,		/** 组织邮箱     **/ 
		ORG.ZIP_CODE AS ORG_ZIP_CODE,		/** 邮编号码     **/ 
		ORG.DEPT_ATTRIBUTE AS ORG_DEPT_ATTRIBUTE,		/** 组织性质     **/ 
		ORG.CANCELED_SYSTEMS AS ORG_CANCELED_SYSTEMS,		/** 已封存系统     **/ 
		ORG.EHR_DEPT_CODE AS ORG_EHR_DEPT_CODE,		/** EHR部门编码     **/		
		
		ORG.ORG_LEVEL AS ORG_ORG_LEVEL,		/** 组织级别，取自数据字典，包括但不限于事业部，大区，小区，部门等，     **/
		ORG.COMPLEMENT_SIMPLE_NAME AS ORG_COMPLEMENT_SIMPLE_NAME  /** 补码简称 **/
	</sql>
	
	<!-- 插入数据 ： -->
	<insert id="addOrgAdministrativeInfo"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		INSERT/** 综合:插入数据 **/ INTO BSE.T_BAS_ORG(
		ID,
		CODE,
		NAME,
		PINYIN,
		UNIFIED_CODE,
		LEADER,
		PRINCIPAL_NO,
		PARENT_ORG_NAME,
		PARENT_ORG_UNIFIED_CODE,
		SUBSIDIARY_CODE,
		COST_CENTER_CODE,
		STATUS,
		END_TIME,
		BEGIN_TIME,
		DIVISION,
		DIVISION_CODE,
		BIG_REGION,
		SMALL_REGION,
		ADDRESS,
		DEPT_AREA,
		PROV_CODE,
		CITY_CODE,
		COUNTY_CODE,
		SALES_DEPARTMENT,
		TRANSFER_CENTER,
		EXPRESS_BIG_REGION, 
		EXPRESS_SALES_DEPARTMENT, 
		EXPRESS_PART, 
		EXPRESS_BRANCH,
		DO_AIR_DISPATCH,
		TRANS_DEPARTMENT,
		DISPATCH_TEAM,
		BILLING_GROUP,
		TRANS_TEAM,
		IS_DELIVER_SCHEDULE,
		IS_ARRANGE_GOODS,
		DELIVER_OUTFIELD,
		ARRANGE_OUTFIELD,
		ARRANGE_BIZ_TYPE,
		CREATE_TIME,
		MODIFY_TIME,
		ACTIVE,
		CREATE_USER_CODE,
		MODIFY_USER_CODE,
		AIR_DISPATCH,	
		IS_ENTITY_FINANCE,
		ENTITY_FINANCE,
		DEP_COORDINATE,
		DEP_TELEPHONE,
		DEP_FAX,
		ORG_SIMPLE_NAME,
		
		COUNTRY_REGION,
		ORG_EN_SIMPLE,
		DEPT_DESC,
		VERSION_NO,
		PARENT_ORG_CODE,

		UUMS_ID,
		UUMS_PARENT_ID,
		UUMS_IDS,
		
		IS_LEAF,
		DISPLAY_ORDER,
		DEPT_LEVEL,
		AREA_CODE,
		DEPT_EMAIL,
		ZIP_CODE,
		DEPT_ATTRIBUTE,
		CANCELED_SYSTEMS,
		EHR_DEPT_CODE,
		ORG_LEVEL,
		COMPLEMENT_SIMPLE_NAME,
		ISSECURITY,
		EXPRESS_SORTING,
		IS_MANAGE_DEPARTMENT) VALUES	
	(
		#{id, jdbcType=VARCHAR},
		#{code, jdbcType=VARCHAR},
		#{name, jdbcType=VARCHAR},
		#{pinyin, jdbcType=VARCHAR},
		#{unifiedCode, jdbcType=VARCHAR},
		#{leader, jdbcType=VARCHAR},
		#{principalNo, jdbcType=VARCHAR},
		#{parentOrgName, jdbcType=VARCHAR},
		#{parentOrgUnifiedCode, jdbcType=VARCHAR},
		#{subsidiaryCode, jdbcType=VARCHAR},
		#{costCenterCode, jdbcType=VARCHAR},
		#{status, jdbcType=VARCHAR},
		#{endTime, jdbcType=TIMESTAMP},
		#{beginTime, jdbcType=TIMESTAMP},
		#{division, jdbcType=CHAR},
		#{divisionCode, jdbcType=VARCHAR},
		#{bigRegion, jdbcType=CHAR},
		#{smallRegion, jdbcType=CHAR},
		#{address, jdbcType=VARCHAR},
		#{deptArea, jdbcType=VARCHAR},
		#{provCode, jdbcType=VARCHAR},
		#{cityCode, jdbcType=VARCHAR},
		#{countyCode, jdbcType=VARCHAR},
		#{salesDepartment, jdbcType=CHAR},
		#{transferCenter, jdbcType=CHAR},
		#{expressBigRegion, jdbcType=CHAR},
		#{expressSalesDepartment, jdbcType=CHAR},
		#{expressPart, jdbcType=CHAR},
		#{expressBranch, jdbcType=CHAR},
		#{doAirDispatch, jdbcType=CHAR},
		#{transDepartment, jdbcType=CHAR},
		#{dispatchTeam, jdbcType=CHAR},
		#{billingGroup, jdbcType=CHAR},
		#{transTeam, jdbcType=CHAR},
		#{isDeliverSchedule, jdbcType=CHAR},
		#{isArrangeGoods, jdbcType=CHAR},
		#{deliverOutfield, jdbcType=VARCHAR},
		#{arrangeOutfield, jdbcType=VARCHAR},
		#{arrangeBizType, jdbcType=VARCHAR},
		to_timestamp(#{modifyDateOfUU, jdbcType=VARCHAR},
                             'yyyy-mm-dd hh24:mi:ss.ff'),
		to_timestamp('2999-12-31 23:59:59.0',
                             'yyyy-mm-dd hh24:mi:ss.ff'),
		#{active, jdbcType=CHAR},
		#{createUser, jdbcType=VARCHAR},
		#{modifyUser, jdbcType=VARCHAR},
		#{airDispatch, jdbcType=CHAR},
		#{isEntityFinance, jdbcType=CHAR},
		#{entityFinance, jdbcType=VARCHAR},
		#{depCoordinate, jdbcType=VARCHAR},
		#{depTelephone, jdbcType=VARCHAR},
		#{depFax, jdbcType=VARCHAR},
		#{orgSimpleName, jdbcType=VARCHAR},
		
		#{countryRegion, jdbcType=VARCHAR},
		#{orgEnSimple, jdbcType=VARCHAR},
		#{deptDesc, jdbcType=VARCHAR},
		#{versionNo, jdbcType=NUMERIC},
		#{parentOrgCode, jdbcType=VARCHAR},

		#{uumsId, jdbcType=VARCHAR},
		#{uumsParentId, jdbcType=VARCHAR},
		#{uumsIds, jdbcType=VARCHAR},
		
		#{isLeaf, jdbcType=CHAR},
		#{displayOrder, jdbcType=VARCHAR},
		#{deptLevel, jdbcType=VARCHAR},
		#{areaCode, jdbcType=VARCHAR},
		#{deptEmail, jdbcType=VARCHAR},
		#{zipCode, jdbcType=VARCHAR},
		#{deptAttribute, jdbcType=VARCHAR},
		#{canceledSystems, jdbcType=VARCHAR},
		#{ehrDeptCode, jdbcType=VARCHAR},
		#{orgLevel, jdbcType=VARCHAR},
		#{complementSimpleName, jdbcType=VARCHAR},
		#{isSecurity, jdbcType=VARCHAR},
		#{expressSorting, jdbcType=CHAR},
		#{isManageDepartment,jdbcType=CHAR}		
	)
	</insert> 

	<!-- 根据CODE 作废数据： -->
	<update id="deleteOrgAdministrativeInfo" 
		parameterType="map">
		UPDATE/** 综合:根据CODE 作废数据 **/ BSE.T_BAS_ORG A 
		SET A.ACTIVE=#{entity.active,jdbcType=CHAR},
			A.VERSION_NO=#{entity.versionNo,jdbcType=NUMERIC},
			A.MODIFY_USER_CODE=#{entity.modifyUser,jdbcType=VARCHAR}, 
			A.MODIFY_TIME = to_timestamp(#{entity.modifyDateOfUU, jdbcType=VARCHAR},
                             'yyyy-mm-dd hh24:mi:ss.ff')
		<where>
			A.CODE=#{entity.code,jdbcType=VARCHAR} 
			AND  A.ACTIVE=#{conditionActive,jdbcType=CHAR}
		</where>
	</update>

	<!-- 根据CODE批量作废 -->
	<update id="deleteOrgAdministrativeInfoMore"
		parameterType="map">
		UPDATE/** 综合:根据CODE批量作废 **/ BSE.T_BAS_ORG A 
		SET A.ACTIVE=#{entity.active,jdbcType=CHAR},
			A.VERSION_NO=#{entity.versionNo,jdbcType=NUMERIC},
			A.MODIFY_USER_CODE=#{entity.modifyUser,jdbcType=VARCHAR}, 
			A.MODIFY_TIME = #{entity.modifyDate,jdbcType=TIMESTAMP} 
        <where>
	        CODE in
            <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            #{code} 
		    </foreach>
            AND  A.ACTIVE=#{conditionActive,jdbcType=CHAR}
        </where>       
	</update>

	<!-- 根据CODE 更新数据：由于更新是先删除再插入，所以这个映射用不上： -->
	<update id="updateOrgAdministrativeInfo" 
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		UPDATE/** 综合:根据CODE 更新数据：由于更新是先删除再插入，所以这个映射用不上 **/ BSE.T_BAS_ORG A SET 
		A.ID = #{id, jdbcType=VARCHAR},
		A.CODE = #{code, jdbcType=VARCHAR},
		A.NAME = #{name, jdbcType=VARCHAR},
		A.PINYIN = #{pinyin, jdbcType=VARCHAR},
		A.UNIFIED_CODE = #{unifiedCode, jdbcType=VARCHAR},
		A.LEADER = #{leader, jdbcType=VARCHAR},
		A.PRINCIPAL_NO = #{principalNo, jdbcType=VARCHAR},
		A.PARENT_ORG_NAME = #{parentOrgName, jdbcType=VARCHAR},
		A.PARENT_ORG_UNIFIED_CODE = #{parentOrgUnifiedCode, jdbcType=VARCHAR},
		A.SUBSIDIARY_CODE = #{subsidiaryCode, jdbcType=VARCHAR},
		A.COST_CENTER_CODE = #{costCenterCode, jdbcType=VARCHAR},
		A.STATUS = #{status, jdbcType=VARCHAR},
		A.END_TIME = #{endTime, jdbcType=TIMESTAMP},
		A.BEGIN_TIME = #{beginTime, jdbcType=TIMESTAMP},
		A.DIVISION = #{division, jdbcType=CHAR},
		A.DIVISION_CODE = #{divisionCode, jdbcType=VARCHAR},
		A.BIG_REGION = #{bigRegion, jdbcType=CHAR},
		A.SMALL_REGION = #{smallRegion, jdbcType=CHAR},
		A.ADDRESS = #{address, jdbcType=VARCHAR},
		A.DEPT_AREA = #{deptArea, jdbcType=VARCHAR},
		A.PROV_CODE = #{provCode, jdbcType=VARCHAR},
		A.CITY_CODE = #{cityCode, jdbcType=VARCHAR},
		A.COUNTY_CODE = #{countyCode, jdbcType=VARCHAR},
		A.SALES_DEPARTMENT = #{salesDepartment, jdbcType=CHAR},
		A.TRANSFER_CENTER = #{transferCenter, jdbcType=CHAR},
		A.EXPRESS_BIG_REGION = #{expressBigRegion, jdbcType=CHAR},
		A.EXPRESS_SALES_DEPARTMENT = #{expressSalesDepartment, jdbcType=CHAR},
		A.EXPRESS_PART = #{expressPart, jdbcType=CHAR},
		A.EXPRESS_BRANCH = #{expressBranch, jdbcType=CHAR},
		A.DO_AIR_DISPATCH = #{doAirDispatch, jdbcType=CHAR},
		A.TRANS_DEPARTMENT = #{transDepartment, jdbcType=CHAR},
		A.DISPATCH_TEAM = #{dispatchTeam, jdbcType=CHAR},
		A.BILLING_GROUP = #{billingGroup, jdbcType=CHAR},
		A.TRANS_TEAM = #{transTeam, jdbcType=CHAR},
		A.IS_DELIVER_SCHEDULE = #{isDeliverSchedule, jdbcType=CHAR},
		A.IS_ARRANGE_GOODS = #{isArrangeGoods, jdbcType=CHAR},
		A.DELIVER_OUTFIELD = #{deliverOutfield, jdbcType=VARCHAR},
		A.ARRANGE_OUTFIELD = #{arrangeOutfield, jdbcType=VARCHAR},
		A.ARRANGE_BIZ_TYPE = #{arrangeBizType, jdbcType=VARCHAR},
		A.CREATE_TIME = #{createDate, jdbcType=TIMESTAMP},
		A.MODIFY_TIME = #{modifyDate, jdbcType=TIMESTAMP},
		A.ACTIVE = #{active, jdbcType=CHAR},
		A.CREATE_USER_CODE = #{createUser, jdbcType=VARCHAR},
		A.MODIFY_USER_CODE = #{modifyUser, jdbcType=VARCHAR},
		A.AIR_DISPATCH = #{airDispatch, jdbcType=CHAR},
		
		A.IS_ENTITY_FINANCE = #{isEntityFinance, jdbcType=CHAR},
		A.ENTITY_FINANCE = #{entityFinance, jdbcType=VARCHAR},
		A.DEP_COORDINATE = #{depCoordinate, jdbcType=VARCHAR},
		A.DEP_TELEPHONE = #{depTelephone, jdbcType=VARCHAR},
		A.DEP_FAX = #{depFax, jdbcType=VARCHAR},
		A.ORG_SIMPLE_NAME = #{orgSimpleName, jdbcType=VARCHAR},
		A.COUNTRY_REGION = #{countryRegion, jdbcType=VARCHAR},
		A.ORG_EN_SIMPLE = #{orgEnSimple, jdbcType=VARCHAR},
		A.DEPT_DESC = #{deptDesc, jdbcType=VARCHAR},
		A.VERSION_NO = #{versionNo, jdbcType=NUMERIC},
		A.PARENT_ORG_CODE = #{parentOrgCode, jdbcType=VARCHAR},

		A.UUMS_ID = #{uumsId, jdbcType=VARCHAR},
		A.UUMS_PARENT_ID = #{uumsParentId, jdbcType=VARCHAR},
		A.UUMS_IDS = #{uumsIds, jdbcType=VARCHAR},

		A.IS_LEAF = #{isLeaf, jdbcType=CHAR},
		A.DISPLAY_ORDER = #{displayOrder, jdbcType=VARCHAR},
		A.DEPT_LEVEL = #{deptLevel, jdbcType=VARCHAR},
		A.AREA_CODE = #{areaCode, jdbcType=VARCHAR},
		A.DEPT_EMAIL = #{deptEmail, jdbcType=VARCHAR},
		A.ZIP_CODE = #{zipCode, jdbcType=VARCHAR},
		A.DEPT_ATTRIBUTE = #{deptAttribute, jdbcType=VARCHAR},
		A.CANCELED_SYSTEMS = #{canceledSystems, jdbcType=VARCHAR},
		A.EHR_DEPT_CODE = #{ehrDeptCode, jdbcType=VARCHAR},
		A.ORG_LEVEL = #{orgLevel, jdbcType=VARCHAR},
		A.COMPLEMENT_SIMPLE_NAME =#{complementSimpleName, jdbcType=VARCHAR}
		<where>
			A.CODE = #{code,jdbcType=VARCHAR}	
		</where>
	</update>

	<!-- 根据 CODE 精确查询数据 -->
	<select id="queryOrgAdministrativeInfoByCode" 
			resultMap="orgAdministrativeInfoQueryResultMap"
			parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		<![CDATA[
		  SELECT 
		  /** 综合:根据 CODE 精确查询数据 **/
		]]>
		<include refid="query_orgAdministrativeInfo_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_ORG A 
		]]>
		<where>
			A.CODE=#{code} 
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</select>
	
	<select id="queryOrgAdministrativeInfoByCodeAndTime" resultMap="orgAdministrativeInfoQueryResultMap" parameterType="java.util.Map">
		<![CDATA[
		  SELECT /** 综合:根据 CODE 精确查询数据 **/
		]]>
		<include refid="query_orgAdministrativeInfo_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_ORG A 
		]]>
		<where>
			A.CODE=#{code,jdbcType=VARCHAR} 
			AND A.CREATE_TIME<![CDATA[ <= ]]> #{billTime,jdbcType=TIMESTAMP}
			AND A.MODIFY_TIME<![CDATA[ >= ]]> #{billTime,jdbcType=TIMESTAMP}
		</where>
	</select>
	
	
		<!-- 查询车队班车部下的小组 -->
	<select id="searchShuttleGroup" 
			resultMap="orgAdministrativeInfoQueryResultMap"
			parameterType="map">
		<![CDATA[
		  SELECT 
		   /** 综合:查询车队班车部下的小组 **/
		]]>
		<include refid="query_orgAdministrativeInfo_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_ORG A 
	    	JOIN BSE.T_BAS_ORG B
	    	ON A.PARENT_ORG_CODE = B.CODE
		]]>
		<where>
		    B.PARENT_ORG_CODE = #{parentOrgCode,jdbcType=VARCHAR} 
			AND B.NAME LIKE #{name}
			AND B.ACTIVE= #{active,jdbcType=CHAR}
			AND A.ACTIVE= #{active,jdbcType=CHAR}
			AND A.TRANS_TEAM= #{transTeam,jdbcType=CHAR}
			
		</where>
	</select>

	<!-- 根据code查询name -->
	<select id="queryOrgNameByCode" resultType="java.lang.String" parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		SELECT/** 综合:根据code查询name **/ NAME 
		FROM BSE.T_BAS_ORG 
		WHERE CODE = #{code, jdbcType=VARCHAR}
		AND ACTIVE = #{active, jdbcType=CHAR} 
	</select>	
	
	
	<!-- 通过 标识编码CODE,是否有效ACTIVE精确查询
			两个参数都可传空，当传空时，不做为查询条件，查询时，取更新时间最近的一条 -->
	<select id="queryOrgAdministrativeInfoByCodeActive" 
			resultMap="orgAdministrativeInfoQueryResultMap"
			parameterType="map">
		SELECT
		/** 综合:通过 标识编码CODE,是否有效ACTIVE精确查询两个参数都可传空，当传空时，不做为查询条件，查询时，取更新时间最近的一条 **/ 
		<include refid="query_orgAdministrativeInfo_param" />
    	FROM BSE.T_BAS_ORG A,
			(SELECT CODE, MAX(MODIFY_TIME) AS MODIFY_TIME 
	          FROM BSE.T_BAS_ORG
	    <where>
        	AND CODE in
            <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
            	#{code} 
            </foreach>
	      	<if test="active!=null and active != ''">
	        	AND ACTIVE = #{active,jdbcType=VARCHAR} 
	      	</if>
		</where>
	         GROUP BY CODE) B 		    
	    <where>
	    	A.CODE=B.CODE AND A.MODIFY_TIME=B.MODIFY_TIME 		    	
	      	<if test="active!=null and active != ''">
	        	AND A.ACTIVE = #{active,jdbcType=VARCHAR} 
	      	</if> 
	    </where>   
	</select>

	<!-- 根据 CODE 批量精确查询数据 -->
	<select id="queryOrgAdministrativeInfoBatchByCode" 
			resultMap="orgAdministrativeInfoQueryResultMap"
			parameterType="map">
		<![CDATA[
		  SELECT 
		  /** 综合:根据 CODE 批量精确查询数据  **/
		]]>
		<include refid="query_orgAdministrativeInfo_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_ORG A 
		]]>
		<where>
			<if test="codes!=null and codes.length > 0">
                A.CODE in
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            #{code,jdbcType=VARCHAR} 
	            </foreach>
            </if> 
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</select>

	<!-- 根据entity精确查询的查询条件 ，如果属性为空，则此属性不作为条件-->
	<sql id="query_param_queryOrgAdministrativeInfoExactByEntity_condition">		
		<where>
	      	<if test="id!=null and id != ''">
	        	AND A.ID = #{id,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="code!=null and code != ''">
	        	AND A.CODE = #{code,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="name!=null and name != ''">
	        	AND A.NAME = #{name,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="pinyin!=null and pinyin != ''">
	        	AND A.PINYIN = #{pinyin,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="unifiedCode!=null and unifiedCode != ''">
	        	AND A.UNIFIED_CODE = #{unifiedCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="leader!=null and leader != ''">
	        	AND A.LEADER = #{leader,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="principalNo!=null and principalNo != ''">
	        	AND A.PRINCIPAL_NO = #{principalNo,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="parentOrgName!=null and parentOrgName != ''">
	        	AND A.PARENT_ORG_NAME = #{parentOrgName,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="parentOrgUnifiedCode!=null and parentOrgUnifiedCode != ''">
	        	AND A.PARENT_ORG_UNIFIED_CODE = #{parentOrgUnifiedCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="subsidiaryCode!=null and subsidiaryCode != ''">
	        	AND A.SUBSIDIARY_CODE = #{subsidiaryCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="costCenterCode!=null and costCenterCode != ''">
	        	AND A.COST_CENTER_CODE = #{costCenterCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="status!=null and status != ''">
	        	AND A.STATUS = #{status,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="endTime!=null and endTime != ''">
	        	AND A.END_TIME = #{endTime,jdbcType=TIMESTAMP} 
	      	</if>
	      	<if test="beginTime!=null and beginTime != ''">
	        	AND A.BEGIN_TIME = #{beginTime,jdbcType=TIMESTAMP} 
	      	</if>
	      	<if test="division!=null and division != ''">
	        	AND A.DIVISION = #{division,jdbcType=CHAR} 
	      	</if>
	      	<if test="divisionCode!=null and divisionCode != ''">
	        	AND A.DIVISION_CODE = #{divisionCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="bigRegion!=null and bigRegion != ''">
	        	AND A.BIG_REGION = #{bigRegion,jdbcType=CHAR} 
	      	</if>
	      	<if test="smallRegion!=null and smallRegion != ''">
	        	AND A.SMALL_REGION = #{smallRegion,jdbcType=CHAR} 
	      	</if>
	      	<if test="address!=null and address != ''">
	        	AND A.ADDRESS = #{address,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="deptArea!=null">
	        	AND A.DEPT_AREA = #{deptArea,jdbcType=DECIMAL} 
	      	</if>
	      	<if test="provCode!=null and provCode != ''">
	        	AND A.PROV_CODE = #{provCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="cityCode!=null and cityCode != ''">
	        	AND A.CITY_CODE = #{cityCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="countyCode!=null and countyCode != ''">
	        	AND A.COUNTY_CODE = #{countyCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="salesDepartment!=null and salesDepartment != ''">
	        	AND A.SALES_DEPARTMENT = #{salesDepartment,jdbcType=CHAR} 
	      	</if>
	      	<if test="transferCenter!=null and transferCenter != ''">
	        	AND A.TRANSFER_CENTER = #{transferCenter,jdbcType=CHAR} 
	      	</if>
	      	<if test="expressBigRegion!=null and expressBigRegion != ''">
	        	AND A.EXPRESS_BIG_REGION = #{expressBigRegion, jdbcType=CHAR}
	      	</if>
	      	<if test="expressSalesDepartment!=null and expressSalesDepartment != ''">
	        	AND A.EXPRESS_SALES_DEPARTMENT = #{expressSalesDepartment, jdbcType=CHAR}
	      	</if>
			<if test="expressPart!=null and expressPart != ''">
	        	AND A.EXPRESS_PART = #{expressPart, jdbcType=CHAR}
	      	</if>
	      	<if test="expressBranch!=null and expressBranch != ''">
	        	AND A.EXPRESS_BRANCH = #{expressBranch, jdbcType=CHAR}
	      	</if>
	      	<if test="doAirDispatch!=null and doAirDispatch != ''">
	        	AND A.DO_AIR_DISPATCH = #{doAirDispatch,jdbcType=CHAR} 
	      	</if>
	      	<if test="transDepartment!=null and transDepartment != ''">
	        	AND A.TRANS_DEPARTMENT = #{transDepartment,jdbcType=CHAR} 
	      	</if>
	      	<if test="dispatchTeam!=null and dispatchTeam != ''">
	        	AND A.DISPATCH_TEAM = #{dispatchTeam,jdbcType=CHAR} 
	      	</if>
	      	<if test="billingGroup!=null and billingGroup != ''">
	        	AND A.BILLING_GROUP = #{billingGroup,jdbcType=CHAR} 
	      	</if>
	      	<if test="transTeam!=null and transTeam != ''">
	        	AND A.TRANS_TEAM = #{transTeam,jdbcType=CHAR} 
	      	</if>
	      	<if test="isDeliverSchedule!=null and isDeliverSchedule != ''">
	        	AND A.IS_DELIVER_SCHEDULE = #{isDeliverSchedule,jdbcType=CHAR} 
	      	</if>
	      	<if test="isArrangeGoods!=null and isArrangeGoods != ''">
	        	AND A.IS_ARRANGE_GOODS = #{isArrangeGoods,jdbcType=CHAR} 
	      	</if>
	      	<if test="deliverOutfield!=null and deliverOutfield != ''">
	        	AND A.DELIVER_OUTFIELD = #{deliverOutfield,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="arrangeOutfield!=null and arrangeOutfield != ''">
	        	AND A.ARRANGE_OUTFIELD = #{arrangeOutfield,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="arrangeBizType!=null and arrangeBizType != ''">
	        	AND A.ARRANGE_BIZ_TYPE = #{arrangeBizType,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="airDispatch!=null and airDispatch != ''">
	        	AND A.AIR_DISPATCH = #{airDispatch,jdbcType=CHAR} 
	      	</if>
	      	
	      	
	      	<if test="isEntityFinance!=null and isEntityFinance != ''">
	        	AND A.IS_ENTITY_FINANCE = #{isEntityFinance,jdbcType=CHAR} 
	      	</if>
	      	<if test="entityFinance!=null and entityFinance != ''">
	        	AND A.ENTITY_FINANCE = #{entityFinance,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="depCoordinate!=null and depCoordinate != ''">
	        	AND A.DEP_COORDINATE = #{depCoordinate,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="depTelephone!=null and depTelephone != ''">
	        	AND A.DEP_TELEPHONE = #{depTelephone,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="depFax!=null and depFax != ''">
	        	AND A.DEP_FAX = #{depFax,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="orgSimpleName!=null and orgSimpleName != ''">
	        	AND A.ORG_SIMPLE_NAME = #{orgSimpleName,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="countryRegion!=null and countryRegion != ''">
	        	AND A.COUNTRY_REGION = #{countryRegion,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="orgEnSimple!=null and orgEnSimple != ''">
	        	AND A.ORG_EN_SIMPLE = #{orgEnSimple,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="deptDesc!=null and deptDesc != ''">
	        	AND A.DEPT_DESC = #{deptDesc,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="versionNo!=null and versionNo != ''">
	        	AND A.VERSION_NO = #{versionNo,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="parentOrgCode!=null and parentOrgCode != ''">
	        	AND A.PARENT_ORG_CODE = #{parentOrgCode,jdbcType=VARCHAR} 
	      	</if>


	      	<if test="uumsId!=null and uumsId != ''">
	        	AND A.UUMS_ID = #{uumsId,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="uumsParentId!=null and uumsParentId != ''">
	        	AND A.UUMS_PARENT_ID = #{uumsParentId,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="uumsIds!=null and uumsIds != ''">
	        	AND A.UUMS_IDS = #{uumsIds,jdbcType=VARCHAR} 
	      	</if>

	      	<if test="isLeaf!=null and isLeaf != ''">
	        	AND A.IS_LEAF = #{isLeaf,jdbcType=CHAR} 
	      	</if>
	      	<if test="displayOrder!=null and displayOrder != ''">
	        	AND A.DISPLAY_ORDER = #{displayOrder,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="deptLevel!=null and deptLevel != ''">
	        	AND A.DEPT_LEVEL = #{deptLevel,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="areaCode!=null and areaCode != ''">
	        	AND A.AREA_CODE = #{areaCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="deptEmail!=null and deptEmail != ''">
	        	AND A.DEPT_EMAIL = #{deptEmail,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="zipCode!=null and zipCode != ''">
	        	AND A.ZIP_CODE = #{zipCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="deptAttribute!=null and deptAttribute != ''">
	        	AND A.DEPT_ATTRIBUTE = #{deptAttribute,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="canceledSystems!=null and canceledSystems != ''">
	        	AND A.CANCELED_SYSTEMS = #{canceledSystems,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="ehrDeptCode!=null and ehrDeptCode != ''">
	        	AND A.EHR_DEPT_CODE = #{ehrDeptCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="orgLevel!=null and orgLevel != ''">
	        	AND A.ORG_LEVEL = #{orgLevel,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="complementSimpleName != null and complementSimpleName != ''" >
				AND A.COMPLEMENT_SIMPLE_NAME = #{complementSimpleName, jdbcType=VARCHAR}
	      	</if>
	      	<if test="unifiedCodes != null and unifiedCodes.size>0">
				<![CDATA[ AND A.UNIFIED_CODE NOT IN ]]>
				<foreach collection="unifiedCodes" open="(" close=")" separator=","
					item="unifiedCode">
					<if test="unifiedCode!=null and unifiedCode != ''">
	        	      <![CDATA[	#{unifiedCode}  ]]>
	                </if>
				</foreach>
		    </if>
		    <if test="codes != null and codes.size>0">
				<![CDATA[ AND A.CODE NOT IN ]]>
				<foreach collection="codes" open="(" close=")" separator=","
					item="code">
					<if test="code and code != ''">
	        	      <![CDATA[	#{code}  ]]>
	                </if>
				</foreach>
		    </if>
	      	AND A.ACTIVE =  #{active,jdbcType=CHAR} 
		</where>
	</sql>
	<!-- 根据实体动态条件精确查询,如果属性的值为null或者空白则无效： -->
	<select id="queryOrgAdministrativeInfoExactByEntity" 
			resultMap="orgAdministrativeInfoQueryResultMap"
			parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		<![CDATA[
		  SELECT
		   /** 综合:根据实体动态条件精确查询,如果属性的值为null或者空白则无效 **/ 
		]]>
		<include refid="query_orgAdministrativeInfo_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_ORG A 
		]]>
		<include refid="query_param_queryOrgAdministrativeInfoExactByEntity_condition" />
	</select>
	<!-- 根据实体动态条件精确查询总数,如果属性的值为null或者空白则无效： -->
	<select id="queryOrgAdministrativeInfoExactByEntityCount" resultType="Long"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		<![CDATA[
			 SELECT/** 综合:根据实体动态条件精确查询总数,如果属性的值为null或者空白则无效 **/ count(*) 
			 FROM BSE.T_BAS_ORG A 
		]]>
		<include refid="query_param_queryOrgAdministrativeInfoExactByEntity_condition" />
	</select>

	<!-- 根据entity模糊查询,如果属性的值为null或者空白则无效： -->
	<sql id="query_queryOrgAdministrativeInfoByEntity_condition_param">		
		<where>
	      	<if test="id!=null and id != ''">
	        	AND A.ID like CONCAT(CONCAT('%', #{id,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="code!=null and code != ''">
	        	AND A.CODE like CONCAT(CONCAT('%', #{code,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="name!=null and name != ''">
	        	AND A.NAME like CONCAT(CONCAT('%', #{name,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="pinyin!=null and pinyin != ''">
	        	AND A.PINYIN like CONCAT(CONCAT('%', #{pinyin,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="unifiedCode!=null and unifiedCode != ''">
	        	AND A.UNIFIED_CODE like CONCAT(CONCAT('%', #{unifiedCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="leader!=null and leader != ''">
	        	AND A.LEADER like CONCAT(CONCAT('%', #{leader,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="principalNo!=null and principalNo != ''">
	        	AND A.PRINCIPAL_NO like CONCAT(CONCAT('%', #{principalNo,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="parentOrgName!=null and parentOrgName != ''">
	        	AND A.PARENT_ORG_NAME like CONCAT(CONCAT('%', #{parentOrgName,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="parentOrgUnifiedCode!=null and parentOrgUnifiedCode != ''">
	        	AND A.PARENT_ORG_UNIFIED_CODE like CONCAT(CONCAT('%', #{parentOrgUnifiedCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="subsidiaryCode!=null and subsidiaryCode != ''">
	        	AND A.SUBSIDIARY_CODE like CONCAT(CONCAT('%', #{subsidiaryCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="costCenterCode!=null and costCenterCode != ''">
	        	AND A.COST_CENTER_CODE like CONCAT(CONCAT('%', #{costCenterCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="status!=null and status != ''">
	        	AND A.STATUS like CONCAT(CONCAT('%', #{status,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="endTime!=null and endTime != ''">
	        	AND A.END_TIME like CONCAT(CONCAT('%', #{endTime,jdbcType=TIMESTAMP}), '%') 
	      	</if>
	      	<if test="beginTime!=null and beginTime != ''">
	        	AND A.BEGIN_TIME like CONCAT(CONCAT('%', #{beginTime,jdbcType=TIMESTAMP}), '%') 
	      	</if>
	      	<if test="division!=null and division != ''">
	        	AND A.DIVISION = #{division,jdbcType=CHAR}
	      	</if>
	      	<if test="divisionCode!=null and divisionCode != ''">
	        	AND A.DIVISION_CODE like CONCAT(CONCAT('%', #{divisionCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="bigRegion!=null and bigRegion != '' and division!=null and division != ''">
	        	OR A.BIG_REGION = #{bigRegion,jdbcType=CHAR} 
	      	</if>
	      	<if test="bigRegion!=null and bigRegion != '' and division=null">
	        	AND A.BIG_REGION = #{bigRegion,jdbcType=CHAR} 
	      	</if>
	      	<if test="smallRegion!=null and smallRegion != ''">
	        	AND A.SMALL_REGION like CONCAT(CONCAT('%', #{smallRegion,jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="address!=null and address != ''">
	        	AND A.ADDRESS like CONCAT(CONCAT('%', #{address,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<!-- 部门面积，不作为模糊查询的查询条件-->
	      	<if test="deptArea!=null">
	        	AND A.DEPT_AREA like CONCAT(CONCAT('%', #{deptArea,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	
	      	<if test="provCode!=null and provCode != ''">
	        	AND A.PROV_CODE like CONCAT(CONCAT('%', #{provCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="cityCode!=null and cityCode != ''">
	        	AND A.CITY_CODE like CONCAT(CONCAT('%', #{cityCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="countyCode!=null and countyCode != ''">
	        	AND A.COUNTY_CODE like CONCAT(CONCAT('%', #{countyCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="salesDepartment!=null and salesDepartment != ''">
	        	AND A.SALES_DEPARTMENT like CONCAT(CONCAT('%', #{salesDepartment,jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="transferCenter!=null and transferCenter != ''">
	        	AND A.TRANSFER_CENTER like CONCAT(CONCAT('%', #{transferCenter,jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="expressBigRegion!=null and expressBigRegion != ''">
	        	AND A.EXPRESS_BIG_REGION like CONCAT(CONCAT('%', #{expressBigRegion, jdbcType=CHAR}), '%')  
	      	</if>
	      	<if test="expressSalesDepartment!=null and expressSalesDepartment != ''">
	        	AND A.EXPRESS_SALES_DEPARTMENT like CONCAT(CONCAT('%', #{expressSalesDepartment, jdbcType=CHAR}), '%')  
	      	</if>
			<if test="expressPart!=null and expressPart != ''">
	        	AND A.EXPRESS_PART like CONCAT(CONCAT('%', #{expressPart, jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="expressBranch!=null and expressBranch != ''">
	        	AND A.EXPRESS_BRANCH like CONCAT(CONCAT('%', #{expressBranch, jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="doAirDispatch!=null and doAirDispatch != ''">
	        	AND A.DO_AIR_DISPATCH like CONCAT(CONCAT('%', #{doAirDispatch,jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="transDepartment!=null and transDepartment != ''">
	        	AND A.TRANS_DEPARTMENT like CONCAT(CONCAT('%', #{transDepartment,jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="dispatchTeam!=null and dispatchTeam != ''">
	        	AND A.DISPATCH_TEAM like CONCAT(CONCAT('%', #{dispatchTeam,jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="billingGroup!=null and billingGroup != ''">
	        	AND A.BILLING_GROUP like CONCAT(CONCAT('%', #{billingGroup,jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="transTeam!=null and transTeam != ''">
	        	AND A.TRANS_TEAM like CONCAT(CONCAT('%', #{transTeam,jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="isDeliverSchedule!=null and isDeliverSchedule != ''">
	        	AND A.IS_DELIVER_SCHEDULE like CONCAT(CONCAT('%', #{isDeliverSchedule,jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="isArrangeGoods!=null and isArrangeGoods != ''">
	        	AND A.IS_ARRANGE_GOODS like CONCAT(CONCAT('%', #{isArrangeGoods,jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="deliverOutfield!=null and deliverOutfield != ''">
	        	AND A.DELIVER_OUTFIELD like CONCAT(CONCAT('%', #{deliverOutfield,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="arrangeOutfield!=null and arrangeOutfield != ''">
	        	AND A.ARRANGE_OUTFIELD like CONCAT(CONCAT('%', #{arrangeOutfield,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="arrangeBizType!=null and arrangeBizType != ''">
	        	AND A.ARRANGE_BIZ_TYPE like CONCAT(CONCAT('%', #{arrangeBizType,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="airDispatch!=null and airDispatch != ''">
	        	AND A.AIR_DISPATCH like CONCAT(CONCAT('%', #{airDispatch,jdbcType=CHAR}), '%') 
	      	</if>
	      	
	      	
	      	<if test="isEntityFinance!=null and isEntityFinance != ''">
	        	AND A.IS_ENTITY_FINANCE like CONCAT(CONCAT('%', #{isEntityFinance,jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="entityFinance!=null and entityFinance != ''">
	        	AND A.ENTITY_FINANCE like CONCAT(CONCAT('%', #{entityFinance,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="depCoordinate!=null and depCoordinate != ''">
	        	AND A.DEP_COORDINATE like CONCAT(CONCAT('%', #{depCoordinate,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="depTelephone!=null and depTelephone != ''">
	        	AND A.DEP_TELEPHONE like CONCAT(CONCAT('%', #{depTelephone,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="depFax!=null and depFax != ''">
	        	AND A.DEP_FAX like CONCAT(CONCAT('%', #{depFax,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="orgSimpleName!=null and orgSimpleName != ''">
	        	AND A.ORG_SIMPLE_NAME like CONCAT(CONCAT('%', #{orgSimpleName,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="countryRegion!=null and countryRegion != ''">
	        	AND A.COUNTRY_REGION like CONCAT(CONCAT('%', #{countryRegion,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="orgEnSimple!=null and orgEnSimple != ''">
	        	AND A.ORG_EN_SIMPLE like CONCAT(CONCAT('%', #{orgEnSimple,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="deptDesc!=null and deptDesc != ''">
	        	AND A.DEPT_DESC like CONCAT(CONCAT('%', #{deptDesc,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="versionNo!=null and versionNo != ''">
	        	AND A.VERSION_NO like CONCAT(CONCAT('%', #{versionNo,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="parentOrgCode!=null and parentOrgCode != ''">
	        	AND A.PARENT_ORG_CODE like CONCAT(CONCAT('%', #{parentOrgCode,jdbcType=VARCHAR}), '%') 
	      	</if>


	      	<if test="uumsId!=null and uumsId != ''">
	        	AND A.UUMS_ID like CONCAT(CONCAT('%', #{uumsId,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="uumsParentId!=null and uumsParentId != ''">
	        	AND A.UUMS_PARENT_ID like CONCAT(CONCAT('%', #{uumsParentId,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="uumsIds!=null and uumsIds != ''">
	        	AND A.UUMS_IDS like CONCAT(CONCAT('%', #{uumsIds,jdbcType=VARCHAR}), '%') 
	      	</if>

	      	<if test="isLeaf!=null and isLeaf != ''">
	        	AND A.IS_LEAF like CONCAT(CONCAT('%', #{isLeaf,jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="displayOrder!=null and displayOrder != ''">
	        	AND A.DISPLAY_ORDER like CONCAT(CONCAT('%', #{displayOrder,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="deptLevel!=null and deptLevel != ''">
	        	AND A.DEPT_LEVEL like CONCAT(CONCAT('%', #{deptLevel,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="areaCode!=null and areaCode != ''">
	        	AND A.AREA_CODE like CONCAT(CONCAT('%', #{areaCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="deptEmail!=null and deptEmail != ''">
	        	AND A.DEPT_EMAIL like CONCAT(CONCAT('%', #{deptEmail,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="zipCode!=null and zipCode != ''">
	        	AND A.ZIP_CODE like CONCAT(CONCAT('%', #{zipCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="deptAttribute!=null and deptAttribute != ''">
	        	AND A.DEPT_ATTRIBUTE like CONCAT(CONCAT('%', #{deptAttribute,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="canceledSystems!=null and canceledSystems != ''">
	        	AND A.CANCELED_SYSTEMS like CONCAT(CONCAT('%', #{canceledSystems,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="ehrDeptCode!=null and ehrDeptCode != ''">
	        	AND A.EHR_DEPT_CODE like CONCAT(CONCAT('%', #{ehrDeptCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="orgLevel!=null and orgLevel != ''">
	        	AND A.ORG_LEVEL like CONCAT(CONCAT('%', #{orgLevel,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="complementSimpleName != null and complementSimpleName != ''" >
				AND A.COMPLEMENT_SIMPLE_NAME like CONCAT(CONCAT('%', #{complementSimpleName, jdbcType=VARCHAR}), '%') 
	      	</if>
	      	
	      	<if test="unifiedCodes != null and unifiedCodes.size>0">
				<![CDATA[ AND A.UNIFIED_CODE NOT IN ]]>
				<foreach collection="unifiedCodes" open="(" close=")" separator=","
					item="unifiedCode">
					<if test="unifiedCode!=null and unifiedCode != ''">
	        	      <![CDATA[	#{unifiedCode}  ]]>
	                </if>
				</foreach>
		    </if>
		    <if test="codes != null and codes.size>0">
				<![CDATA[ AND A.CODE NOT IN ]]>
				<foreach collection="codes" open="(" close=")" separator=","
					item="code">
					<if test="code !=null and code != ''">
	        	      <![CDATA[	#{code}  ]]>
	                </if>
				</foreach>
		    </if>
		    AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</sql>
	<!-- 根据实体动态条件模糊查询,如果属性的值为null或者空白则无效： -->
	<select id="queryOrgAdministrativeInfoByEntity" 
			resultMap="orgAdministrativeInfoQueryResultMap"
			parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		<![CDATA[
		  SELECT 
		  /** 综合:根据实体动态条件模糊查询,如果属性的值为null或者空白则无效 **/
		]]>
		<include refid="query_orgAdministrativeInfo_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_ORG A 
		]]>
		<include refid="query_queryOrgAdministrativeInfoByEntity_condition_param" />
	</select>
	<!-- 根据实体动态条件模糊查询总数,如果属性的值为null或者空白则无效： -->
	<select id="queryOrgAdministrativeInfoByEntityCount" 
			resultType="Long"
			parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		<![CDATA[
			 SELECT/** 综合:根据实体动态条件模糊查询总数,如果属性的值为null或者空白则无效 **/ count(*) 
			 FROM BSE.T_BAS_ORG A 
		]]>
		<include refid="query_queryOrgAdministrativeInfoByEntity_condition_param" />
	</select>



	<!-- 下面为特殊查询 -->
	
	<!-- 根据部门编码获取所属及下属部门信息
     * 此部门及下属的所有部门。 -->
	<select id="queryOrgAdministrativeInfoEntityAllSubByCode" 
			resultMap="orgAdministrativeInfoQueryResultMap"
			parameterType="map">
		SELECT 
		/** 综合:根据部门编码获取所属及下属部门信息,此部门及下属的所有部门。 **/
		<include refid="query_orgAdministrativeInfo_param" />
	    	FROM BSE.T_BAS_ORG A ,
				(SELECT DISTINCT CODE
					FROM   BSE.T_BAS_ORG
					WHERE  ACTIVE = #{conditionActive,jdbcType=CHAR}   
					CONNECT BY PRIOR CODE = PARENT_ORG_CODE AND ACTIVE = #{conditionActive,jdbcType=CHAR} 
					START WITH CODE=#{code,jdbcType=VARCHAR}  AND ACTIVE = #{conditionActive,jdbcType=CHAR}
				 ) B
             WHERE A.CODE=B.CODE 
             	  AND A.ACTIVE = #{conditionActive,jdbcType=CHAR}  
	</select>
	
	<!-- foss-zhujunyong 
	<select id="queryOrgAdministrativeInfoEntityAllSubByCode" resultMap="orgAdministrativeInfoQueryResultMap" parameterType="map">
		SELECT
		<include refid="query_orgAdministrativeInfo_param" />
		FROM BSE.T_BAS_ORG
		WHERE ACTIVE = #{conditionActive,jdbcType=CHAR}
		CONNECT BY PRIOR UNIFIED_CODE = PARENT_ORG_UNIFIED_CODE
		START WITH CODE=#{code,jdbcType=VARCHAR}
	</select>-->

		
	<!-- 根据部门编码获取所属及上级部门信息
     * 此部门及上级的所有部门。 -->
	<select id="queryOrgAdministrativeInfoEntityAllUpByCode" 
			resultMap="orgAdministrativeInfoQueryResultMap"
			parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		SELECT 
		/** 综合:根据部门编码获取所属及上级部门信息,此部门及上级的所有部门。 **/
		<include refid="query_orgAdministrativeInfo_param" />
	    	FROM BSE.T_BAS_ORG A ,
				(SELECT DISTINCT CODE
					FROM   BSE.T_BAS_ORG
					WHERE  ACTIVE = #{conditionActive,jdbcType=CHAR}   
					CONNECT BY PRIOR PARENT_ORG_UNIFIED_CODE = UNIFIED_CODE AND ACTIVE = #{conditionActive,jdbcType=CHAR}
					START WITH CODE=#{code,jdbcType=VARCHAR} AND ACTIVE = #{conditionActive,jdbcType=CHAR}  
				 ) B
             WHERE A.CODE=B.CODE 
             	  AND A.ACTIVE = #{conditionActive,jdbcType=CHAR}  
	</select>

	<!-- foss-zhujunyong 
	<select id="queryOrgAdministrativeInfoEntityAllUpByCode" resultMap="orgAdministrativeInfoQueryResultMap" parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		SELECT 
		<include refid="query_orgAdministrativeInfo_param" />
		FROM BSE.T_BAS_ORG
		WHERE ACTIVE = #{conditionActive,jdbcType=CHAR}   
		CONNECT BY PRIOR PARENT_ORG_UNIFIED_CODE = UNIFIED_CODE AND ACTIVE = #{conditionActive,jdbcType=CHAR}
		START WITH CODE=#{code,jdbcType=VARCHAR}  
	</select>	-->


	<!--  根据财务部门编码获取管辖大区信息
     * 大区 是营业大区域
     * 财务部门，不是财务组织的部门，不是一个虚拟的部门，是OA中一个实际存在的部门
       先获取上级所有的部门，再找出大区
      -->
	<select id="queryOrgAdministrativeInfoEntityBigAreaByFinance" 
			resultMap="orgAdministrativeInfoQueryResultMap"
			parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		SELECT
		/** 综合:根据财务部门编码获取管辖大区信息大区 是营业大区域财务部门，不是财务组织的部门，不是一个虚拟的部门，是OA中一个实际存在的部门先获取上级所有的部门，再找出大区 **/ 
		<include refid="query_orgAdministrativeInfo_param" />
	    	FROM BSE.T_BAS_ORG A ,
				(SELECT DISTINCT CODE
					FROM   BSE.T_BAS_ORG
					WHERE  ACTIVE = #{conditionActive,jdbcType=CHAR}   
					CONNECT BY PRIOR PARENT_ORG_UNIFIED_CODE = UNIFIED_CODE AND ACTIVE = #{conditionActive,jdbcType=CHAR} 
					START WITH ENTITY_FINANCE=#{entityFinance,jdbcType=VARCHAR}  
				 ) B
            WHERE A.CODE=B.CODE 
            	  AND A.BIG_REGION = #{conditionYes,jdbcType=CHAR}  
            	  AND A.ACTIVE = #{conditionActive,jdbcType=CHAR} 
	</select>
	
		
	<!-- 根据大区编码获取下属小区信息
     * 这里的大区，小区均是营业区域，不是定人定区中的大小区。
     	先找出此大区下的所有部门，从下级找出所有的小区。
      -->
	<select id="queryOrgAdministrativeInfoEntitySmallAreaByBig" 
			resultMap="orgAdministrativeInfoQueryResultMap"
			parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		SELECT 
		/** 综合:根据大区编码获取下属小区信息号这里的大区，小区均是营业区域，不是定人定区中的大小区。先找出此大区下的所有部门，从下级找出所有的小区。 **/
		<include refid="query_orgAdministrativeInfo_param" />
	    	FROM BSE.T_BAS_ORG A ,
				(SELECT DISTINCT CODE
					FROM   BSE.T_BAS_ORG
					WHERE  ACTIVE = #{conditionActive,jdbcType=CHAR}   
					CONNECT BY PRIOR UNIFIED_CODE = PARENT_ORG_UNIFIED_CODE AND ACTIVE = #{conditionActive,jdbcType=CHAR} 
					START WITH CODE=#{code,jdbcType=VARCHAR}  
				 ) B
             WHERE A.CODE=B.CODE 
                   AND A.SMALL_REGION = #{conditionYes,jdbcType=CHAR} 
                   AND A.ACTIVE = #{conditionActive,jdbcType=CHAR}  
	</select>
		
	<!-- 根据大区、小区编码获取下属营业部部门信息
     * 这里的大区，小区均是营业区域，不是定人定区中的大小区。
     	先找出此大区下的所有部门，从下级找出所有的营业部。
      -->
	<select id="queryOrgAdministrativeInfoEntitySalesByUp" 
			resultMap="orgAdministrativeInfoQueryResultMap"
			parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		SELECT 
		/** 综合:根据大区、小区编码获取下属营业部部门信息，这里的大区，小区均是营业区域，不是定人定区中的大小区。先找出此大区下的所有部门，从下级找出所有的营业部。 **/
		<include refid="query_orgAdministrativeInfo_param" />
	    	FROM BSE.T_BAS_ORG A ,
				(SELECT DISTINCT CODE
					FROM   BSE.T_BAS_ORG
					WHERE  ACTIVE = #{conditionActive,jdbcType=CHAR}   
					CONNECT BY PRIOR UNIFIED_CODE = PARENT_ORG_UNIFIED_CODE AND ACTIVE = #{conditionActive,jdbcType=CHAR} 
					START WITH CODE=#{code,jdbcType=VARCHAR}  
				 ) B
             WHERE A.CODE=B.CODE 
                   AND A.SALES_DEPARTMENT = #{conditionYes,jdbcType=CHAR}  
                   AND A.ACTIVE = #{conditionActive,jdbcType=CHAR} 
	</select>
	
	<!-- 根据大区、小区编码获取下属快递垫布 -->
	<select id="queryOrgAdminExpressPartsByBig" resultMap="orgAdministrativeInfoQueryResultMap" parameterType="java.util.Map">
		SELECT /**综合 根据大区编码查询 下属快递点部集合 **/
		<include refid="query_orgAdministrativeInfo_param"/>
		FROM BSE.T_BAS_ORG　A ,
			(SELECT DISTINCT CODE
					FROM   BSE.T_BAS_ORG
					WHERE  ACTIVE = #{conditionActive,jdbcType=CHAR}   
					CONNECT BY PRIOR UNIFIED_CODE = PARENT_ORG_UNIFIED_CODE AND ACTIVE = #{conditionActive,jdbcType=CHAR} 
					START WITH CODE=#{code,jdbcType=VARCHAR}  
				 ) B
             WHERE A.CODE=B.CODE 
                   AND A.EXPRESS_PART = #{conditionYes,jdbcType=CHAR}  
                   AND A.ACTIVE = #{conditionActive,jdbcType=CHAR} 
	</select>
	<!-- 根据 部门编码（一般为小区编码，大区编码）获取下属营业部部门信息
     * 
     * 返回的编码要在指定的list中
     * 
     * 这里的大区，小区均是营业区域，不是定人定区中的大小区。
     * 
     * 主要提供给结算
      -->
	<select id="queryOrgAdministrativeInfoEntitySalesByUpCode" 
			resultMap="orgAdministrativeInfoQueryResultMap"
			parameterType="map">
		SELECT 
		/** 综合:根据 部门编码（一般为小区编码，大区编码）获取下属营业部部门信息 返回的编码要在指定的list中,这里的大区，小区均是营业区域，不是定人定区中的大小区。主要提供给结算 **/
		<include refid="query_orgAdministrativeInfo_param" />
	    	FROM BSE.T_BAS_ORG A ,
				(SELECT DISTINCT CODE
					FROM   BSE.T_BAS_ORG
					WHERE  ACTIVE = #{conditionActive,jdbcType=CHAR}   
					CONNECT BY PRIOR UNIFIED_CODE = PARENT_ORG_UNIFIED_CODE AND ACTIVE = #{conditionActive,jdbcType=CHAR} 
					START WITH CODE=#{code,jdbcType=VARCHAR}  
				 ) B
             WHERE A.CODE=B.CODE 
                   AND A.SALES_DEPARTMENT = #{conditionYes,jdbcType=CHAR}  
                   AND A.ACTIVE = #{conditionActive,jdbcType=CHAR} 
                   AND A.CODE in
                <foreach collection="existCodes"  index="index" item="existCode"  open="(" separator="," close=")">  
	            	#{existCode} 
	            </foreach>
	</select>
	
	<!-- 查询所有 组织 信息 以供下载 
	zxy 20131021  BUG-55198 修改：分页数据下不全，把 ORDER BY A.VERSION_NO ASC 改成  ORDER BY A.id ASC  20131024 恢复
	-->
	<select id="queryOrgAdministrativeInfoForDownload"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity"
		resultMap="orgAdministrativeInfoQueryResultMap">
		<![CDATA[
			SELECT
			/** 综合:查询所有 组织 信息 以供下载 **/
		]]>
		<include refid="query_orgAdministrativeInfo_param" />
		<![CDATA[
			FROM BSE.T_BAS_ORG A
		]]>
		<where>
			<if test="versionNo != null">
				AND VERSION_NO >= #{versionNo,jdbcType=NUMERIC}
			</if>
			<if test="code != null and code != ''">
				AND CODE = #{code,jdbcType=VARCHAR}
			</if>
			<if test="active != null and active != ''">
				AND ACTIVE = #{active,jdbcType=CHAR}
			</if>
		</where>
		 <![CDATA[ ORDER BY A.VERSION_NO,A.ID ASC ]]><!--zxy 20140303 修改:增加ID排序 -->
	</select>
	
		
	<!-- 根据部门编码获取下级指定类型的部门 -->
	<select id="queryOrgAdministrativeInfoSubByBizType" 
			resultMap="orgAdministrativeInfoQueryResultMap"
			parameterType="map">
		SELECT 
		/** 综合:根据部门编码获取下级指定类型的部门  **/
		<include refid="query_orgAdministrativeInfo_param" />
	    	FROM BSE.T_BAS_ORG A ,
				(SELECT DISTINCT CODE
					FROM   (SELECT * FROM BSE.T_BAS_ORG WHERE ACTIVE='Y')
					CONNECT BY PRIOR UNIFIED_CODE = PARENT_ORG_UNIFIED_CODE 
					START WITH CODE=#{code,jdbcType=VARCHAR}  
				 ) B
             WHERE A.CODE=B.CODE 
            	AND A.${bizType}=#{conditionActive,jdbcType=CHAR}  
				AND A.ACTIVE = #{conditionActive,jdbcType=CHAR}  
	</select>
    <!-- 根据部门编码获取上级级指定类型的部门 -->
	<select id="queryOrgAdministrativeInfoUpByBizType" 
			resultMap="orgAdministrativeInfoQueryResultMap"
			parameterType="map">
		SELECT 
		/** 综合:根据部门编码获取上级级指定类型的部门  **/
		<include refid="query_orgAdministrativeInfo_param" />
	    	FROM BSE.T_BAS_ORG A ,
				(SELECT DISTINCT CODE
					FROM   (SELECT * FROM BSE.T_BAS_ORG WHERE ACTIVE='Y')
					CONNECT BY PRIOR  PARENT_ORG_UNIFIED_CODE=UNIFIED_CODE 
					START WITH CODE=#{code,jdbcType=VARCHAR}  
				 ) B
             WHERE A.CODE=B.CODE 
            	AND A.${bizType}=#{conditionActive,jdbcType=CHAR}  
				AND A.ACTIVE = #{conditionActive,jdbcType=CHAR}  
	</select>
	
		<!-- 根据行政区域查询组织机构 -->
	<select id="queryOrgAdministrativeInfoByDistrictCode"
		parameterType="map"
		resultMap="orgAdministrativeInfoQueryResultMap">
		<![CDATA[
			SELECT
			/** 综合:根据行政区域查询组织机构  **/
		]]>
		<include refid="query_orgAdministrativeInfo_param" />
		<![CDATA[
			FROM BSE.T_BAS_ORG A
		]]>
		<where>
		      <if test="billDate != null">
				<![CDATA[   A.CREATE_TIME <= #{billDate} AND A.MODIFY_TIME > #{billDate} ]]>
			</if>
			
			<if test="districtCode != null">
			   AND ( A.PROV_CODE = #{districtCode,jdbcType=VARCHAR} OR A.CITY_CODE = #{districtCode,jdbcType=VARCHAR}  OR A.COUNTY_CODE = #{districtCode,jdbcType=VARCHAR} )
			     
			</if>
			
			<if test="code != null and code != ''">
				AND CODE = #{code,jdbcType=VARCHAR}
			</if>
			<if test="active != null and active != ''">
				AND ACTIVE = #{active,jdbcType=CHAR}
			</if>
			
			 
		</where>
		<![CDATA[
			ORDER BY A.CREATE_TIME DESC
		]]>
	</select>
		<!-- 根据 CODE 精确查询数据(用于mapper文件关联扩展) 2012-12-18  -->
	<select id="searchOrgAdministrativeInfoByCode" 
			resultMap="orgAdministrativeInfoQueryResultMap"
			parameterType="string">
		<![CDATA[
		  SELECT 
		  /** 综合:根据 CODE 精确查询数据(用于mapper文件关联扩展)  **/
		]]>
		<include refid="query_orgAdministrativeInfo_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_ORG A 
		]]>
		<where>
			A.CODE=#{code} 
			AND A.ACTIVE='Y'
		</where>
	</select>
	
	
	<!-- 通过 组织编码找最新的一条组织实体 -->
	<select id="queryLastestOrgAdministrativeInfoByCode" resultMap="orgAdministrativeInfoQueryResultMap" parameterType="string">
		SELECT 
		/** 综合:通过 组织编码找最新的一条组织实体 **/
		<include refid="query_orgAdministrativeInfo_param" />
    	FROM BSE.T_BAS_ORG A,
		(SELECT MAX(VERSION_NO) AS VERSION_NO 
		FROM BSE.T_BAS_ORG 
		WHERE CODE = #{code,jdbcType=VARCHAR}) B
		WHERE A.VERSION_NO = B.VERSION_NO
		AND A.CODE = #{code,jdbcType=VARCHAR} 
	</select>
	
	
	<!-- 通过 组织标杆编码查询该组织下的所有全部组织信息 -->
	<select id="queryAllOrgAdministrativeInfoByParentOrgUnicodeCode" resultMap="orgAdministrativeInfoQueryResultMap" parameterType="map">
		SELECT DISTINCT
		/** 综合:通过 组织标杆编码查询该组织下的所有全部组织信息 **/
		<include refid="query_orgAdministrativeInfo_param" />
    	FROM (
    		SELECT * 
    		FROM BSE.T_BAS_ORG ORG 
    		WHERE ORG.ACTIVE= #{active,jdbcType=CHAR} 
    	) A
 		START WITH A.PARENT_ORG_UNIFIED_CODE = #{parentOrgUnicode,jdbcType=VARCHAR} 
		CONNECT BY A.PARENT_ORG_UNIFIED_CODE = PRIOR A.UNIFIED_CODE
	</select>
	
	<!-- 通过 组织标杆编码查询父级组织名称 -->
	<select id="queryParentOrgName" resultType="java.lang.String" parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		SELECT NAME
		/** 综合:通过 组织标杆编码查询父级组织名称 **/
    	FROM BSE.T_BAS_ORG ORG
    	WHERE	
 		UNIFIED_CODE = #{parentOrgUnicode,jdbcType=VARCHAR} 
 		AND ACTIVE='Y'
	</select>
	
	<!-- 通过 组织标杆编码查询组织编码 -->
	<select id="queryOrgCode" resultType="java.lang.String" parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		SELECT CODE
		/** 综合:通过 组织标杆编码查询父级组织名称 **/
    	FROM BSE.T_BAS_ORG ORG
    	WHERE	
 		UNIFIED_CODE = #{orgUnicode,jdbcType=VARCHAR} 
 		AND ACTIVE='Y'
	</select>
	
	<!--根据外场编码查询虚拟营业部   130566 实现零担/快递支线分离：查询快递虚拟营业部，应该使用快递始发，到达线路来做查询-->
	
	<!--  <select id="queryExpressSalesDepartmentByTransCenterCode" resultMap="orgAdministrativeInfoQueryResultMap" parameterType="map">
		SELECT /** 综合:根据外场编码查询虚拟营业部 **/
		<include refid="query_orgAdministrativeInfo_param" />
             FROM BSE.T_BAS_ORG A
			 WHERE A.ACTIVE = #{active,jdbcType=CHAR} 
   				AND A.CODE IN
      			 (SELECT DISTINCT B.SALESDEPT
                    FROM (SELECT M.ORIG_ORG_CODE SALESDEPT,
                                 M.DEST_ORG_CODE TRANSCENTER
                           FROM BSE.T_BAS_LINE M
                          WHERE M.ACTIVE = #{active,jdbcType=CHAR} 
                               AND M.LINE_SORT = 'BSE_LINE_SORT_SOURCE'
                          UNION
                           SELECT M.DEST_ORG_CODE SALESDEPT, 
                                  M.ORIG_ORG_CODE TRANSCENTER
                           FROM BSE.T_BAS_LINE M
                          WHERE M.ACTIVE = #{active,jdbcType=CHAR} 
                              AND M.LINE_SORT = 'BSE_LINE_SORT_TARGET') B
                 WHERE B.TRANSCENTER IN
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            	#{code,jdbcType=CHAR} 
	            </foreach>
                 )
           AND A.EXPRESS_SALES_DEPARTMENT = #{active,jdbcType=CHAR} 
	</select>-->
	 <select id="queryExpressSalesDepartmentByTransCenterCode" resultMap="orgAdministrativeInfoQueryResultMap" parameterType="map">
		SELECT /** 综合:根据外场编码查询虚拟营业部 **/
		<include refid="query_orgAdministrativeInfo_param" />
             FROM BSE.T_BAS_ORG A
			 WHERE A.ACTIVE = #{active,jdbcType=CHAR} 
   				AND A.CODE IN
      			 (SELECT DISTINCT B.SALESDEPT
                    FROM (SELECT M.ORIG_ORG_CODE SALESDEPT,
                                 M.DEST_ORG_CODE TRANSCENTER
                           FROM BSE.T_BAS_EXPRESS_LINE M
                          WHERE M.ACTIVE = #{active,jdbcType=CHAR} 
                               AND M.LINE_SORT = 'BSE_LINE_SORT_SOURCE'
                          UNION
                           SELECT M.DEST_ORG_CODE SALESDEPT, 
                                  M.ORIG_ORG_CODE TRANSCENTER
                           FROM BSE.T_BAS_EXPRESS_LINE M
                          WHERE M.ACTIVE = #{active,jdbcType=CHAR} 
                              AND M.LINE_SORT = 'BSE_LINE_SORT_TARGET') B
                 WHERE B.TRANSCENTER IN
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            	#{code,jdbcType=CHAR} 
	            </foreach>
                 )
           AND A.EXPRESS_SALES_DEPARTMENT = #{active,jdbcType=CHAR} 
	</select>
	
	<!-- 通过 组织标杆编码查询组织编码 -->
	<select id="queryDeptNameByUnifiedCode" resultType="java.lang.String" parameterType="java.lang.String">
		SELECT NAME
		/** 综合:通过组织标杆编码查询部门名称 **/
    	FROM BSE.T_BAS_ORG ORG
    	WHERE	
 		UNIFIED_CODE = #{unifiedCode,jdbcType=VARCHAR} 
 		AND ACTIVE='Y' AND ROWNUM=1
	</select>
	<!--wp_078816_20140419配合crm2期新加方法-->
	<!--根据部门编码向下查找其下的所有子部门并且也可以判断当前部门是否存在其中-->
	<select id="queryDeptInfoByCode" resultType="Long" parameterType="map">
		SELECT
		/** 综合:根据部门编码向下查找其下的所有子部门并且也可以判断当前部门是否存在其中 **/
		COUNT(*)
    	FROM (
    		SELECT * 
    		FROM BSE.T_BAS_ORG ORG 
    		WHERE ORG.ACTIVE= 'Y'
    	) A
    	<where>
    	  <if test="code != null and code != ''">
    	     A.CODE = #{code,jdbcType=VARCHAR}
    	  </if>
    	 	 START WITH A.CODE IN 
    	<foreach collection="codes" index="index" item="deptCode"  open="(" separator="," close=")">
 		       #{deptCode,jdbcType=VARCHAR} 
    	</foreach>
			 CONNECT BY PRIOR A.CODE = A.PARENT_ORG_CODE
    	</where> 
	</select>
	
	<!--根据部门编码查询快递点部-->
	<select id="queryExpressExpressPartByDeptCode" parameterType="map" resultMap="orgAdministrativeInfoQueryResultMap">
		select  
		  /** 综合:根据部门编码查询快递点部 **/
		  <include refid="query_orgAdministrativeInfo_param" />
		  from BSE.MV_BAS_USER_ORG_AUTH_VIEW k 
		  join bse.t_bas_org A 
		    on A.code = k.org_code 
		   and A.express_part = 'Y' 
		   and A.active = 'Y' 
		where k.emp_code=#{empCode,jdbcType=VARCHAR}   
	</select>
	
	<!-- 分页查询车队组信息 (主要根据部门CODE查询该部门下的所有车队组信息)-->
	<select id="queryOrgAdministrativeInfoSubTrans"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.CommonTransTeamEntity"
		resultMap="orgAdministrativeInfoQueryResultMap">
		<!-- 根据部门编码获取下级所属车队组信息 -->
		SELECT A.ID AS ID,
		/** 综合:根据部门编码获取下级所属车队组信息  **/
		A.CODE AS CODE,A.NAME AS NAME
	    	FROM BSE.T_BAS_ORG A ,
				(SELECT DISTINCT CODE
					FROM   (SELECT * FROM BSE.T_BAS_ORG WHERE ACTIVE='Y')
					<if test="orgCode != null and orgCode != ''">
					CONNECT BY PRIOR UNIFIED_CODE = PARENT_ORG_UNIFIED_CODE 
					START WITH  CODE = #{orgCode,jdbcType=VARCHAR}
			 		</if> 
				 ) B
             WHERE A.CODE=B.CODE 
            	AND A.TRANS_TEAM='Y' 
            	<if test="transTeamName != null and transTeamName != ''"> 
				AND A.NAME  LIKE CONCAT(CONCAT('%',#{transTeamName,jdbcType=VARCHAR}),'%') 
		 		</if>
		 		<if test="transTeamCode != null and transTeamCode != ''">
				AND A.CODE = #{transTeamCode,jdbcType=VARCHAR}
			 	</if>
				AND A.ACTIVE = 'Y' 
	</select>

	<!-- 统计总记录数(主要根据部门CODE查询该部门下的所有车队组信息)） -->
	<select id="countOrgAdministrativeInfoSubTrans" resultType="Long"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.CommonTransTeamEntity">
	    <![CDATA[
	       	SELECT /** 综合:统计记录数 **/ COUNT(*) 
	    ]]>
	    FROM BSE.T_BAS_ORG A ,
				(SELECT DISTINCT CODE
					FROM   (SELECT * FROM BSE.T_BAS_ORG WHERE ACTIVE='Y')
					<if test="orgCode != null and orgCode != ''">
					CONNECT BY PRIOR UNIFIED_CODE = PARENT_ORG_UNIFIED_CODE 
					START WITH  CODE = #{orgCode,jdbcType=VARCHAR}
			 		</if> 
				 ) B
             WHERE A.CODE=B.CODE 
            	AND A.TRANS_TEAM='Y' 
            	<if test="transTeamName != null and transTeamName != ''"> 
				AND A.NAME  LIKE CONCAT(CONCAT('%',#{transTeamName,jdbcType=VARCHAR}),'%') 
		 		</if>
		 		<if test="transTeamCode != null and transTeamCode != ''">
				AND A.CODE = #{transTeamCode,jdbcType=VARCHAR}
			 	</if>
				AND A.ACTIVE = 'Y'   
	</select>
	<!-- 根据code查询unifiedCode -->
	<select id="queryUnifiedCodeByCode" resultType="java.lang.String" parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		SELECT/** 综合:根据code查询name **/ UNIFIED_CODE 
		FROM BSE.T_BAS_ORG 
		WHERE CODE = #{code, jdbcType=VARCHAR}
		AND ACTIVE = #{active, jdbcType=CHAR} 
	</select>
	
	<!-- 配合主数据项目，插入组织信息  -->
	<insert id="addOrgAdministrativeInfoOfUU"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		INSERT/** 综合:配合主数据项目，插入组织信息 **/ INTO BSE.T_BAS_ORG(
		ID,
		CODE,
		NAME,
		PINYIN,
		UNIFIED_CODE,
		LEADER,
		PRINCIPAL_NO,
		PARENT_ORG_NAME,
		PARENT_ORG_UNIFIED_CODE,
		SUBSIDIARY_CODE,
		COST_CENTER_CODE,
		STATUS,
		END_TIME,
		BEGIN_TIME,
		DIVISION,
		DIVISION_CODE,
		BIG_REGION,
		SMALL_REGION,
		ADDRESS,
		DEPT_AREA,
		PROV_CODE,
		CITY_CODE,
		COUNTY_CODE,
		SALES_DEPARTMENT,
		TRANSFER_CENTER,
		EXPRESS_BIG_REGION, 
		EXPRESS_SALES_DEPARTMENT, 
		EXPRESS_PART, 
		EXPRESS_BRANCH,
		DO_AIR_DISPATCH,
		TRANS_DEPARTMENT,
		DISPATCH_TEAM,
		BILLING_GROUP,
		TRANS_TEAM,
		IS_DELIVER_SCHEDULE,
		IS_ARRANGE_GOODS,
		DELIVER_OUTFIELD,
		ARRANGE_OUTFIELD,
		ARRANGE_BIZ_TYPE,
		CREATE_TIME,
		MODIFY_TIME,
		ACTIVE,
		CREATE_USER_CODE,
		MODIFY_USER_CODE,
		AIR_DISPATCH,	
		IS_ENTITY_FINANCE,
		ENTITY_FINANCE,
		DEP_COORDINATE,
		DEP_TELEPHONE,
		DEP_FAX,
		ORG_SIMPLE_NAME,
		
		COUNTRY_REGION,
		ORG_EN_SIMPLE,
		DEPT_DESC,
		VERSION_NO,
		PARENT_ORG_CODE,

		UUMS_ID,
		UUMS_PARENT_ID,
		UUMS_IDS,
		
		IS_LEAF,
		DISPLAY_ORDER,
		DEPT_LEVEL,
		AREA_CODE,
		DEPT_EMAIL,
		ZIP_CODE,
		DEPT_ATTRIBUTE,
		CANCELED_SYSTEMS,
		EHR_DEPT_CODE,
		ORG_LEVEL,
		COMPLEMENT_SIMPLE_NAME,
		ISSECURITY,
		EXPRESS_SORTING) VALUES	
	(
		#{id, jdbcType=VARCHAR},
		#{code, jdbcType=VARCHAR},
		#{name, jdbcType=VARCHAR},
		#{pinyin, jdbcType=VARCHAR},
		#{unifiedCode, jdbcType=VARCHAR},
		#{leader, jdbcType=VARCHAR},
		#{principalNo, jdbcType=VARCHAR},
		#{parentOrgName, jdbcType=VARCHAR},
		#{parentOrgUnifiedCode, jdbcType=VARCHAR},
		#{subsidiaryCode, jdbcType=VARCHAR},
		#{costCenterCode, jdbcType=VARCHAR},
		#{status, jdbcType=VARCHAR},
		to_timestamp(#{endTimeOfUU,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss.ff'),
		to_timestamp(#{beginTimeOfUU,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss.ff'),
		#{division, jdbcType=CHAR},
		#{divisionCode, jdbcType=VARCHAR},
		#{bigRegion, jdbcType=CHAR},
		#{smallRegion, jdbcType=CHAR},
		#{address, jdbcType=VARCHAR},
		#{deptArea, jdbcType=VARCHAR},
		#{provCode, jdbcType=VARCHAR},
		#{cityCode, jdbcType=VARCHAR},
		#{countyCode, jdbcType=VARCHAR},
		#{salesDepartment, jdbcType=CHAR},
		#{transferCenter, jdbcType=CHAR},
		#{expressBigRegion, jdbcType=CHAR},
		#{expressSalesDepartment, jdbcType=CHAR},
		#{expressPart, jdbcType=CHAR},
		#{expressBranch, jdbcType=CHAR},
		#{doAirDispatch, jdbcType=CHAR},
		#{transDepartment, jdbcType=CHAR},
		#{dispatchTeam, jdbcType=CHAR},
		#{billingGroup, jdbcType=CHAR},
		#{transTeam, jdbcType=CHAR},
		#{isDeliverSchedule, jdbcType=CHAR},
		#{isArrangeGoods, jdbcType=CHAR},
		#{deliverOutfield, jdbcType=VARCHAR},
		#{arrangeOutfield, jdbcType=VARCHAR},
		#{arrangeBizType, jdbcType=VARCHAR},
		to_timestamp(#{createDateOfUU,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss.ff'),
		to_timestamp(#{modifyDateOfUU,jdbcType=VARCHAR},'yyyy-mm-dd hh24:mi:ss.ff'),
		#{active, jdbcType=CHAR},
		#{createUser, jdbcType=VARCHAR},
		#{modifyUser, jdbcType=VARCHAR},
		#{airDispatch, jdbcType=CHAR},
		#{isEntityFinance, jdbcType=CHAR},
		#{entityFinance, jdbcType=VARCHAR},
		#{depCoordinate, jdbcType=VARCHAR},
		#{depTelephone, jdbcType=VARCHAR},
		#{depFax, jdbcType=VARCHAR},
		#{orgSimpleName, jdbcType=VARCHAR},
		
		#{countryRegion, jdbcType=VARCHAR},
		#{orgEnSimple, jdbcType=VARCHAR},
		#{deptDesc, jdbcType=VARCHAR},
		#{versionNo, jdbcType=NUMERIC},
		#{parentOrgCode, jdbcType=VARCHAR},

		#{uumsId, jdbcType=VARCHAR},
		#{uumsParentId, jdbcType=VARCHAR},
		#{uumsIds, jdbcType=VARCHAR},
		
		#{isLeaf, jdbcType=CHAR},
		#{displayOrder, jdbcType=VARCHAR},
		#{deptLevel, jdbcType=VARCHAR},
		#{areaCode, jdbcType=VARCHAR},
		#{deptEmail, jdbcType=VARCHAR},
		#{zipCode, jdbcType=VARCHAR},
		#{deptAttribute, jdbcType=VARCHAR},
		#{canceledSystems, jdbcType=VARCHAR},
		#{ehrDeptCode, jdbcType=VARCHAR},
		#{orgLevel, jdbcType=VARCHAR},
		#{complementSimpleName, jdbcType=VARCHAR},
		#{isSecurity, jdbcType=VARCHAR},
		#{expressSorting, jdbcType=CHAR}		
	)
	</insert> 
	
	<!-- 配合主数据项目，根据 CODE和修改时间查询数据 -->
<!-- 	<select id="queryOrgAdministrativeInfoByCodeAndModifyDate"  -->
<!-- 			resultMap="orgAdministrativeInfoQueryResultMap" -->
<!-- 			parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity"> -->
<!-- 		<![CDATA[ -->
<!-- 		  SELECT  -->
<!-- 		  /** 综合:根据 CODE 精确查询数据 **/ -->
<!-- 		]]> -->
<!-- 		<include refid="query_orgAdministrativeInfo_param" /> -->
<!-- 		<![CDATA[ -->
<!-- 	    	FROM BSE.T_BAS_ORG A  -->
<!-- 		]]> -->
<!-- 		<where> -->
<!-- 			A.CODE=#{code}  -->
<!-- 			AND A.ACTIVE= #{active,jdbcType=CHAR} -->
<!-- 		</where> -->
<!-- 	</select> -->

	<!-- 配合主数据项目,根据存储过程返回时间，查询UUMS至FOSS的中间表 -->
	<select id="queryUUMSToFOSSMidTableByCondition" 
			resultMap="orgAdministrativeInfoQueryResultMap"
			parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		<![CDATA[
		  SELECT /** 综合:根据存储过程返回时间查询UUMS至FOSS的中间表 **/
		]]>
		<include refid="query_orgAdministrativeInfo_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_MIDTABLE A 
		]]>
		<where>
<!-- 			<if test="id !=null and id !=''"> -->
<!-- 				A.ID=#{id,jdbcType=VARCHAR} -->
<!-- 			</if> -->
<!-- 			<if test="code !=null and code !=''"> -->
<!-- 				AND A.CODE=#{code,jdbcType=VARCHAR} -->
<!-- 			</if> -->
<!-- 			<if test="interfaceStatus !=null and interfaceStatus !=''"> -->
<!-- 				AND A.INTERFACESTATUS=#{interfaceStatus,jdbcType=VARCHAR} -->
<!-- 			</if> -->
			<if test="operateTime !=null and operateTime !=''">
				AND A.OPERATETIME=#{operateTime,jdbcType=timestamp}
			</if>
		</where>
	</select>
	
	<!-- 配合主数据项目，根据UUMS至FOSS的中间表关联FOSS组织表查询组织信息 -->
	<select id="queryOrgAdministrationInfoByMidTable" resultMap="orgAdministrativeInfoQueryResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity">
		<![CDATA[
		  SELECT /** 综合:根据存储过程返回时间查询UUMS至FOSS的中间表 **/
		]]>
		<include refid="query_orgAdministrativeInfo_param" />
		<![CDATA[
  		from bse.t_Bas_Org A
 		inner join (select mt.unified_code unified_code,
                    max(mt.create_time) maxTime
               from bse.t_Bas_Midtable mt
              group by mt.unified_code) midMax
    	on midMax.unified_code = A.unified_code
   		and midMax.maxTime >= A.create_time
  		and midMax.maxTime < A.modify_time
   		]]>
  		and A.unified_code=#{unifiedCode,jdbcType=VARCHAR}
	</select>
	
	<!-- 根据name查询city -->
	<select id="queryCityNameByOrgName" resultType="java.lang.String" parameterType="java.lang.String">
		select/** 综合:根据组织name查询所在城市name **/ dis.name
  		from bse.t_Bas_Org org
  		left join bse.t_Bas_District dis
    		on dis.code = org.city_code
   			and dis.active = org.active
 		where org.name = #{orgName, jdbcType=VARCHAR}
   			  and org.active = 'Y'
	</select>
	
	  <!--    <result property="code" column="code" javaType="java.lang.String" />   -->
	<resultMap id="orgCodeAndNameMap" type="java.util.HashMap">  
	     <result property="name" column="name" javaType="java.lang.String" />  
	</resultMap>  
	
	<select id="queryOrgNameMapsByCodes" resultType="java.util.HashMap"  parameterType="java.util.List">
		select    org.name,org.code
  		from bse.T_BAS_ORG org
 		where org.active = 'Y'
   			AND  org.code in 
   		<foreach collection="list" open="(" close=")"
			separator="," item="codes">
    	     #{codes,jdbcType=VARCHAR}
		</foreach> 
        
   			
	</select>
	
	<select id="queryCurrentUserChangeDeptsByDeptNameLike" resultMap="orgAdministrativeInfoQueryResultMap" parameterType="java.util.Map">
		select  s.code as code,s.name as name from (
			select distinct g.code ,g.name
  			from bse.t_bas_user_org_role e, bse.t_bas_org g
 			where e.emp_code = #{empCode, jdbcType=VARCHAR}
   			and e.org_code = g.code
   			and e.active = 'Y'
   			and g.active = 'Y'
   		) s where s.name like CONCAT(CONCAT('%',#{deptName,jdbcType=VARCHAR}),'%') 
	</select>
	<select id="queryCurrentUserChangeDeptsCountsByDeptNameLike" resultType="Long" parameterType="java.util.Map">
		select  count(1) from (
			select distinct g.code ,g.name
  			from bse.t_bas_user_org_role e, bse.t_bas_org g
 			where e.emp_code = #{empCode, jdbcType=VARCHAR}
   			and e.org_code = g.code
   			and e.active = 'Y'
   			and g.active = 'Y'
   		) s where s.name like CONCAT(CONCAT('%',#{deptName,jdbcType=VARCHAR}),'%') 
	</select>
	
	<!-- 根据name查询组织架构表 -->
	<select id="queryOrgAdministrationInfoByName" resultMap="orgAdministrativeInfoQueryResultMap" parameterType="java.lang.String">
		select org.code,org.name
  		from bse.t_Bas_Org org
 		where org.active = 'Y' and org.name = #{name,jdbcType=VARCHAR}
	</select>
	
</mapper>
