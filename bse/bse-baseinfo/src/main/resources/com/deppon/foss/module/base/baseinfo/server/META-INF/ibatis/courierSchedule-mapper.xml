<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="foss.bse.bse-baseinfo.courierSchedule">
	<resultMap type="com.deppon.foss.module.base.baseinfo.api.shared.domain.CourierScheduleEntity" id="courierScheduleResultMap">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="SMALL_REGIONS_CODE" property="expressSmallZoneCode" jdbcType="VARCHAR"/>
		<result column="SMALL_REGIONS_NAME" property="expressSmallZoneName" jdbcType="VARCHAR"/>
		<result column="COURIER_CODE" property="courierCode" jdbcType="VARCHAR"/>
		<result column="SCHEDULE_DATE" property="schedulingDate" jdbcType="TIMESTAMP"/>
		<result column="START_FLOOR" property="startFloor" jdbcType="NUMERIC"/>
		<result column="END_FLOOR" property="endFloor" jdbcType="NUMERIC"/>
		<result column="COURIER_NATURE" property="courierNature" jdbcType="VARCHAR"/>
		<result column="PLAN_TYPE" property="planType" jdbcType="VARCHAR"/>
		<result column="VEHICLE_NO" property="vehicleNo" jdbcType="VARCHAR"/>
		<result column="VEHICLE_LENGHT_CODE" property="vehicleLenghtCode" jdbcType="VARCHAR"/>
		<result column="EXPRESS_PART_CODE" property="expressPartCode" jdbcType="VARCHAR"/>
		<result column="EXPRESS_PART_NAME" property="expressPartName" jdbcType="VARCHAR"/>
		<result column="MOBILE_PHONE" property="courierPhone" jdbcType="VARCHAR"/>
		<result column="CREATE_TIME" property="createDate" jdbcType="TIMESTAMP" />
		<result column="MODIFY_TIME" property="modifyDate" jdbcType="TIMESTAMP" />
		<result column="ACTIVE" property="active" jdbcType="CHAR" />
		<result column="CREATE_USER_CODE" property="createUser" jdbcType="VARCHAR" />
		<result column="MODIFY_USER_CODE" property="modifyUser" jdbcType="VARCHAR" />
		<result column="VERSION_NO" property="versionNo" jdbcType="NUMERIC" />
		<result column="DATE_NUM" property="dateNum" jdbcType="NUMERIC"/>
		<result column="YEAR_MONTH" property="yearMonth" jdbcType="VARCHAR"/>
	</resultMap>
	<!-- 报表映射 -->
	<resultMap type="com.deppon.foss.module.base.baseinfo.api.shared.domain.CourierScheduleReportEntity" id="courierScheduleReportResultMap">
		<result column="SMALL_REGIONS_CODE" property="expressSmallZoneCode" jdbcType="VARCHAR"/>
		<result column="SMALL_REGIONS_NAME" property="expressSmallZoneName" jdbcType="VARCHAR"/>
		<result column="YEAR_MONTH" property="yearMonth" jdbcType="VARCHAR"/>
		<result column="DATE1" property="date1" jdbcType="VARCHAR" />
		<result column="DATE2" property="date2" jdbcType="VARCHAR" />
		<result column="DATE3" property="date3" jdbcType="VARCHAR" />
		<result column="DATE4" property="date4" jdbcType="VARCHAR" />
		<result column="DATE5" property="date5" jdbcType="VARCHAR" />
		<result column="DATE6" property="date6" jdbcType="VARCHAR" />
		<result column="DATE7" property="date7" jdbcType="VARCHAR" />
		<result column="DATE8" property="date8" jdbcType="VARCHAR" />
		<result column="DATE9" property="date9" jdbcType="VARCHAR" />
		<result column="DATE10" property="date10" jdbcType="VARCHAR" />
		<result column="DATE11" property="date11" jdbcType="VARCHAR" />
		<result column="DATE12" property="date12" jdbcType="VARCHAR" />
		<result column="DATE13" property="date13" jdbcType="VARCHAR" />
		<result column="DATE14" property="date14" jdbcType="VARCHAR" />
		<result column="DATE15" property="date15" jdbcType="VARCHAR" />
		<result column="DATE16" property="date16" jdbcType="VARCHAR" />
		<result column="DATE17" property="date17" jdbcType="VARCHAR" />
		<result column="DATE18" property="date18" jdbcType="VARCHAR" />
		<result column="DATE19" property="date19" jdbcType="VARCHAR" />
		<result column="DATE20" property="date20" jdbcType="VARCHAR" />
		<result column="DATE21" property="date21" jdbcType="VARCHAR" />
		<result column="DATE22" property="date22" jdbcType="VARCHAR" />
		<result column="DATE23" property="date23" jdbcType="VARCHAR" />
		<result column="DATE24" property="date24" jdbcType="VARCHAR" />
		<result column="DATE25" property="date25" jdbcType="VARCHAR" />
		<result column="DATE26" property="date26" jdbcType="VARCHAR" />
		<result column="DATE27" property="date27" jdbcType="VARCHAR" />
		<result column="DATE28" property="date28" jdbcType="VARCHAR" />
		<result column="DATE29" property="date29" jdbcType="VARCHAR" />
		<result column="DATE30" property="date30" jdbcType="VARCHAR" />
		<result column="DATE31" property="date31" jdbcType="VARCHAR" />
	</resultMap>
	<!-- 新增 -->
	<insert id="addCourierSchedule" parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.CourierScheduleEntity">
		INSERT /** 综合:插入数据**/INTO BSE.T_BAS_COURIER_SCHEDULE(
		  ID ,
		  SMALL_REGIONS_CODE ,
		  SMALL_REGIONS_NAME ,
		  COURIER_CODE       ,
		  SCHEDULE_DATE      ,
		  START_FLOOR        ,
		  END_FLOOR          ,
		  COURIER_NATURE     ,
		  PLAN_TYPE          ,
		  EXPRESS_PART_CODE  ,
		  EXPRESS_PART_NAME  ,
		  CREATE_TIME        ,
		  MODIFY_TIME        ,
		  ACTIVE             ,
		  CREATE_USER_CODE   ,
		  MODIFY_USER_CODE   ,
		  VERSION_NO     ,
		  DATE_NUM,
		  YEAR_MONTH    
		)VALUES(
			#{id,jdbcType=VARCHAR},
			#{expressSmallZoneCode,jdbcType=VARCHAR},
			#{expressSmallZoneName,jdbcType=VARCHAR},
			#{courierCode,jdbcType=VARCHAR},
			#{schedulingDate,jdbcType=TIMESTAMP},
			#{startFloor,jdbcType=NUMERIC},
			#{endFloor,jdbcType=NUMERIC},
			#{courierNature,jdbcType=VARCHAR},
			#{planType,jdbcType=VARCHAR},
			#{expressPartCode,jdbcType=VARCHAR},
			#{expressPartName,jdbcType=VARCHAR},
			#{createDate,jdbcType=TIMESTAMP},
			#{modifyDate,jdbcType=TIMESTAMP},
			#{active,jdbcType=CHAR},
			#{createUser,jdbcType=VARCHAR},
			#{modifyUser,jdbcType=VARCHAR},
			#{versionNo,jdbcType=NUMERIC},
			#{dateNum,jdbcType=NUMERIC},
			#{yearMonth,jdbcType=VARCHAR}
		)
	</insert>
	<!--根据id作废数据 -->
	<update id="deleteCourierSchedule" parameterType="map">
		UPDATE /** 综合: 作废数据**/ BSE.T_BAS_COURIER_SCHEDULE A
		SET A.MODIFY_TIME =#{entity.modifyDate,jdbcType=TIMESTAMP},
			A.MODIFY_USER_CODE =#{entity.modifyUser,jdbcType=TIMESTAMP},
			A.VERSION_NO =#{entity.versionNo,jdbcType=NUMERIC},
			A.ACTIVE =#{entity.active,jdbcType=CHAR}
		<where>
			A.ID =#{entity.id,jdbcType=VARCHAR}
			AND
			A.ACTIVE =#{conditionActive,jdbcType=CHAR}
		</where>
	</update>
	<!-- 根据小区部门编码和小区部门名称作废 -->
	<update id="deleteCourierScheduleByExpressSmallZoneCode" parameterType="map">
		UPDATE  BSE.T_BAS_COURIER_SCHEDULE A
		SET A.MODIFY_TIME =#{entity.modifyDate,jdbcType=TIMESTAMP},
			A.MODIFY_USER_CODE =#{entity.modifyUser,jdbcType=TIMESTAMP},
			A.VERSION_NO =#{entity.versionNo,jdbcType=NUMERIC},
			A.ACTIVE =#{conditionActive,jdbcType=CHAR}
		<where>
			<if test="expressSmallZoneCodes !=null and expressSmallZoneCodes.length !=0">
				A.SMALL_REGIONS_CODE IN
				<foreach collection="expressSmallZoneCodes" index="index" item="expressSmallZoneCode" open="(" separator="," close=")" >
					#{expressSmallZoneCode}
				</foreach>
			</if>
			AND A.ACTIVE =#{entity.active,jdbcType=CHAR}
		</where>
	</update>
	<!-- 根据小区部门编码和小区部门名称修改 -->
	<update id="updateCourierScheduleByCondition" parameterType="map">
		UPDATE  BSE.T_BAS_COURIER_SCHEDULE A
		SET A.MODIFY_TIME =#{newEntity.modifyDate,jdbcType=TIMESTAMP},
			A.MODIFY_USER_CODE =#{newEntity.modifyUser,jdbcType=TIMESTAMP},
			A.VERSION_NO =#{newEntity.versionNo,jdbcType=NUMERIC},
			A.SMALL_REGIONS_CODE =#{newEntity.expressSmallZoneCode,jdbcType=VARCHAR},
			A.SMALL_REGIONS_NAME =#{newEntity.expressSmallZoneName,jdbcType=VARCHAR}
		<where>
			A.SMALL_REGIONS_CODE =#{oldRegionsCode,jdbcType=VARCHAR}
		    AND A.SMALL_REGIONS_NAME =#{oldRegionsName,jdbcType=VARCHAR}
			AND A.ACTIVE =#{active,jdbcType=CHAR}
		</where>
	</update>
	<!-- 动态查询条件-->
	<sql id="select_param">
		  A.ID AS ID,
		  A.SMALL_REGIONS_CODE AS SMALL_REGIONS_CODE,
		  A.SMALL_REGIONS_NAME AS SMALL_REGIONS_NAME,
		  A.COURIER_CODE   AS  COURIER_CODE,
		  A.SCHEDULE_DATE  AS SCHEDULE_DATE,
		  A.START_FLOOR AS START_FLOOR,
		  A.END_FLOOR AS END_FLOOR,
		  A.COURIER_NATURE AS COURIER_NATURE,
		  A.PLAN_TYPE AS PLAN_TYPE,
		  B.VEHICLE_NO AS VEHICLE_NO,
		  B.VEHICLE_LENGHT_CODE AS VEHICLE_LENGHT_CODE,
		  B.MOBILE_PHONE AS MOBILE_PHONE,
		  A.EXPRESS_PART_CODE AS EXPRESS_PART_CODE,
		  A.EXPRESS_PART_NAME AS EXPRESS_PART_NAME,
		  A.CREATE_TIME AS CREATE_TIME,
		  A.MODIFY_TIME AS MODIFY_TIME,
		  A.ACTIVE AS ACTIVE,
		  A.CREATE_USER_CODE AS CREATE_USER_CODE,
		  A.MODIFY_USER_CODE AS MODIFY_USER_CODE ,
		  A.VERSION_NO AS VERSION_NO,
		  A.DATE_NUM AS DATE_NUM,
		  A.YEAR_MONTH AS YEAR_MONTH    
	</sql>
	
	<sql id="select_other_param">
		  A.ID AS ID,
		  A.SMALL_REGIONS_CODE AS SMALL_REGIONS_CODE,
		  A.SMALL_REGIONS_NAME AS SMALL_REGIONS_NAME,
		  A.COURIER_CODE   AS  COURIER_CODE,
		  A.SCHEDULE_DATE  AS SCHEDULE_DATE,
		  A.START_FLOOR AS START_FLOOR,
		  A.END_FLOOR AS END_FLOOR,
		  A.COURIER_NATURE AS COURIER_NATURE,
		  A.PLAN_TYPE AS PLAN_TYPE,
		  A.EXPRESS_PART_CODE AS EXPRESS_PART_CODE,
		  A.EXPRESS_PART_NAME AS EXPRESS_PART_NAME,
		  A.CREATE_TIME AS CREATE_TIME,
		  A.MODIFY_TIME AS MODIFY_TIME,
		  A.ACTIVE AS ACTIVE,
		  A.CREATE_USER_CODE AS CREATE_USER_CODE,
		  A.MODIFY_USER_CODE AS MODIFY_USER_CODE ,
		  A.VERSION_NO AS VERSION_NO,
		  A.DATE_NUM AS DATE_NUM,
		  A.YEAR_MONTH AS YEAR_MONTH    
	</sql>
	<!-- 查询条件 -->
	<sql id="queryList_condition">
		<where>
			<if test="expressSmallZoneCode !=null and expressSmallZoneCode !=''">
				AND A.SMALL_REGIONS_CODE =#{expressSmallZoneCode,jdbcType=VARCHAR}
			</if>
			<if test="expressSmallZoneName !=null and expressSmallZoneName !=''">
				AND A.SMALL_REGIONS_NAME =#{expressSmallZoneName,jdbcType=VARCHAR}
			</if>
			<if test="courierCode !=null and courierCode !=''">
				AND A.COURIER_CODE =#{courierCode,jdbcType=VARCHAR}
			</if>
			<if test="startTime != null and startTime != ''">
				AND  A.SCHEDULE_DATE >= #{startTime,jdbcType=TIMESTAMP}
			</if>
			<if test="endTime != null and endTime != ''">
				AND  A.SCHEDULE_DATE <![CDATA[ <=]]>#{endTime,jdbcType=TIMESTAMP}
			</if>
			<if test="schedulingDate != null and schedulingDate != ''">
				AND  A.SCHEDULE_DATE = #{schedulingDate,jdbcType=TIMESTAMP}
			</if>
			<if test="expressPartName != null and expressPartName != ''" >
				AND A.EXPRESS_PART_NAME =#{expressPartName,jdbcType=VARCHAR}
			</if>
			<if test="courierNature != null and courierNature != ''">
				AND  A.COURIER_NATURE =#{courierNature,jdbcType=VARCHAR}
			</if>
			<if test="empCode != null and empCode != ''">
				AND A.EXPRESS_PART_CODE IN (select k.org_code
		                          from BSE.MV_BAS_USER_ORG_AUTH_VIEW K
		                          join bse.t_bas_org t
		                           on t.code = K.org_code
		                           and t.active = 'Y'
		                          <where>
		                          	<if test="empCode != null and empCode != ''">
		                          		K.EMP_CODE =#{empCode,jdbcType=VARCHAR}
		                          	</if>
		                          <if test="expressPartCode != null and expressPartCode != ''" >
										AND K.ORG_CODE =#{expressPartCode,jdbcType=VARCHAR}
									</if>
		                          </where>
		                          )
			</if>
			AND A.ACTIVE =#{active,jdbcType=CHAR} 
			ORDER BY A.SCHEDULE_DATE 
		</where>
	</sql>
	<!-- 查询 集合-->
		<select id="queryCourierScheduleList" resultMap="courierScheduleResultMap" 
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.CourierScheduleEntity">
			<![CDATA[
				SELECT /** 综合查询 排班信息**/
			]]>
			<include refid="select_param"/>
			<![CDATA[
				FROM BSE.T_BAS_COURIER_SCHEDULE A LEFT JOIN BSE.T_BAS_EXPRESS_VEHICLE B 
				ON A.COURIER_CODE =B.EMP_CODE 
				AND B.ACTIVE =#{active,jdbcType=CHAR} 
			]]>
			<include refid="queryList_condition"/>
	</select>
	<!-- 查询总数 -->
		<select id="queryCount" resultType="Long" 
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.CourierScheduleEntity">
			<![CDATA[
				SELECT /** 综合查询 排班信息**/ COUNT(*)
			]]>
			<![CDATA[
				FROM BSE.T_BAS_COURIER_SCHEDULE A LEFT JOIN BSE.T_BAS_EXPRESS_VEHICLE B 
				ON A.COURIER_CODE =B.EMP_CODE 
				AND B.ACTIVE =#{active,jdbcType=CHAR} 
			]]>
			<include refid="queryList_condition"/>
	</select>
	<!-- 根据收派小区和排班时间查询 -->
		<select id="queryCourierScheduleListByEntity" resultMap="courierScheduleResultMap" 
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.CourierScheduleEntity">
			<![CDATA[
				SELECT /** 综合查询 排班信息**/
			]]>
			<include refid="select_param"/>
			<![CDATA[
				FROM BSE.T_BAS_COURIER_SCHEDULE A LEFT JOIN BSE.T_BAS_EXPRESS_VEHICLE B 
				ON A.COURIER_CODE =B.EMP_CODE 
				AND B.ACTIVE =#{active,jdbcType=CHAR} 
			]]>
			<where>
				<if test="expressSmallZoneCode !=null and expressSmallZoneCode !=''">
				AND A.SMALL_REGIONS_CODE =#{expressSmallZoneCode,jdbcType=VARCHAR}
			</if>
			<if test="expressSmallZoneName !=null and expressSmallZoneName !=''">
				AND A.SMALL_REGIONS_NAME =#{expressSmallZoneName,jdbcType=VARCHAR}
			</if>
			<if test="courierNature !=null and courierNature !=''">
				AND A.COURIER_NATURE =#{courierNature,jdbcType=VARCHAR}
			</if>
			<if test="schedulingDate !=null and schedulingDate !=''">
				AND A.SCHEDULE_DATE =#{schedulingDate,jdbcType=TIMESTAMP}
			</if>
				AND A.ACTIVE =#{active,jdbcType=CHAR} 
			</where>
	</select>
	<!-- 查询重叠总数 -->
		<select id="queryCountByIFloor" resultType="Long" 
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.CourierScheduleEntity">
			<![CDATA[
				SELECT /** 综合查询 排班信息**/ COUNT(*)
			]]>
			<![CDATA[
				FROM BSE.T_BAS_COURIER_SCHEDULE A  
			]]>
			<where>
				<if test="expressSmallZoneCode !=null and expressSmallZoneCode !=''">
				AND A.SMALL_REGIONS_CODE =#{expressSmallZoneCode,jdbcType=VARCHAR}
			</if>
			<if test="courierNature !=null and courierNature !=''">
				AND A.COURIER_NATURE =#{courierNature,jdbcType=VARCHAR}
			</if>
			<if test="schedulingDate !=null and schedulingDate !=''">
				AND A.SCHEDULE_DATE =#{schedulingDate,jdbcType=TIMESTAMP}
			</if>
			<if test="startFloor !=null and endFloor != null ">
			<![CDATA[
				AND (( A.END_FLOOR  >= #{startFloor,jdbcType=NUMERIC} AND A.START_FLOOR  <=  #{endFloor,jdbcType=NUMERIC}) 
					OR (A.START_FLOOR >= #{startFloor,jdbcType=NUMERIC} AND A.START_FLOOR <= #{endFloor,jdbcType=NUMERIC}) 
					OR (A.END_FLOOR >= #{startFloor,jdbcType=NUMERIC} AND A.END_FLOOR <= #{endFloor,jdbcType=NUMERIC} ))
				]]>	
			</if>
				AND A.ACTIVE =#{active,jdbcType=CHAR} 
			</where>
	</select>
	<!-- 查询重叠数量，并且不包括本身 -->
	<select id="queryCountByFloorNotIncludeEntity" resultType="Long" 
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.CourierScheduleEntity">
			<![CDATA[
				SELECT /** 综合查询 排班信息**/ COUNT(*)
			]]>
			<![CDATA[
				FROM BSE.T_BAS_COURIER_SCHEDULE A  
			]]>
			<where>
				<if test="expressSmallZoneCode !=null and expressSmallZoneCode !=''">
				AND A.SMALL_REGIONS_CODE =#{expressSmallZoneCode,jdbcType=VARCHAR}
			</if>
			<if test="courierNature !=null and courierNature !=''">
				AND A.COURIER_NATURE =#{courierNature,jdbcType=VARCHAR}
			</if>
			<if test="schedulingDate !=null and schedulingDate !=''">
				AND A.SCHEDULE_DATE =#{schedulingDate,jdbcType=TIMESTAMP}
			</if>
			<if test="startFloor !=null and endFloor != null ">
				<![CDATA[
				AND (( A.END_FLOOR  >= #{startFloor,jdbcType=NUMERIC} AND A.START_FLOOR  <=  #{endFloor,jdbcType=NUMERIC}) 
					OR (A.START_FLOOR >= #{startFloor,jdbcType=NUMERIC} AND A.START_FLOOR <= #{endFloor,jdbcType=NUMERIC}) 
					OR (A.END_FLOOR >= #{startFloor,jdbcType=NUMERIC} AND A.END_FLOOR <= #{endFloor,jdbcType=NUMERIC} ))
				]]>	
			</if>
			<if test="id!= null and id !=''">
				AND A.ID <![CDATA[ <> ]]>#{id,jdbcType=VARCHAR}
			</if>
				AND A.ACTIVE =#{active,jdbcType=CHAR} 
			</where>
	</select>
	<!-- 根据ID查询-->
		<select id="queryCourierScheduleById" resultMap="courierScheduleResultMap" 
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.CourierScheduleEntity">
			<![CDATA[
				SELECT /** 综合查询 排班信息**/
			]]>
			<include refid="select_other_param"/>
			<![CDATA[
				FROM BSE.T_BAS_COURIER_SCHEDULE A 
			]]>
			<where>
			<if test="id!= null and id !=''">
				A.ID = #{id,jdbcType=VARCHAR}
			</if>
				AND A.ACTIVE =#{active,jdbcType=CHAR} 
			</where>
	</select>
	<!-- 根据条件查询 -->
	<select id="queryCourierScheduleListByOther" resultMap="courierScheduleResultMap" 
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.CourierScheduleEntity">
		<![CDATA[
				SELECT /** 综合查询 排班信息**/
			]]>
			<include refid="select_param"/>
			<![CDATA[
				FROM BSE.T_BAS_COURIER_SCHEDULE A LEFT JOIN BSE.T_BAS_EXPRESS_VEHICLE B 
				ON A.COURIER_CODE =B.EMP_CODE 
				AND B.ACTIVE =#{active,jdbcType=CHAR} 
			]]>
			<where>
				<if test="expressSmallZoneCode !=null and expressSmallZoneCode !=''">
				AND A.SMALL_REGIONS_CODE =#{expressSmallZoneCode,jdbcType=VARCHAR}
			</if>
			<if test="expressSmallZoneName !=null and expressSmallZoneName !=''">
				AND A.SMALL_REGIONS_NAME =#{expressSmallZoneName,jdbcType=VARCHAR}
			</if>
			<if test="expressPartCode !=null and expressPartCode !=''">
				AND A.EXPRESS_PART_CODE =#{expressPartCode,jdbcType=VARCHAR}
			</if>
			<if test="planType !=null and planType !=''">
				AND A.PLAN_TYPE =#{planType,jdbcType=VARCHAR}
			</if>
			<if test="schedulingDate !=null and schedulingDate !=''">
				AND A.SCHEDULE_DATE =#{schedulingDate,jdbcType=TIMESTAMP}
			</if>
				AND A.ACTIVE =#{active,jdbcType=CHAR} 
			</where>
	</select>
	<select id="queryCourierScheduleByCondition" resultMap="courierScheduleResultMap" 
		parameterType="map">
			<![CDATA[
				SELECT /** 综合查询 排班信息**/
			]]>
			<include refid="select_param"/>
			
				FROM BSE.T_BAS_COURIER_SCHEDULE A LEFT JOIN BSE.T_BAS_EXPRESS_VEHICLE B 
				ON A.COURIER_CODE =B.EMP_CODE 
				AND B.ACTIVE =#{entity.active,jdbcType=CHAR} 
				<where>
					<if test="entity.expressSmallZoneCode != null and entity.expressSmallZoneCode !=''">
						A.SMALL_REGIONS_CODE =#{entity.expressSmallZoneCode,jdbcType=VARCHAR}
					</if>
					<if test="entity.expressSmallZoneName != null and entity.expressSmallZoneName !=''">
						AND A.SMALL_REGIONS_NAME =#{entity.expressSmallZoneName,jdbcType=VARCHAR}
					</if>
					<if test="floor !=0">
						<![CDATA[
							AND A.START_FLOOR <= #{floor,jdbcType=NUMERIC}
							AND A.END_FLOOR  >= #{floor,jdbcType=NUMERIC}
							]]>
					</if>
						AND A.ACTIVE =#{entity.active,jdbcType=CHAR} 
						AND A.PLAN_TYPE =#{entity.planType,jdbcType=CHAR} 
						<![CDATA[
						AND A.SCHEDULE_DATE>=TRUNC(SYSDATE)
						AND A.SCHEDULE_DATE<TRUNC(SYSDATE+1)
						]]> <!--14.7.28 gcl 优化-->
				</where> 
	</select>
	
	<!-- 报表式查询 ，优化前排班sql
	
	<select id="queryCourierScheduleReportList" resultMap="courierScheduleReportResultMap" 
	 parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.CourierScheduleEntity">
	 	SELECT /** 综合查询 排班信息报表式查询**/
	 		   B.SMALL_REGIONS_CODE SMALL_REGIONS_CODE, 
	 		   B.SMALL_REGIONS_NAME SMALL_REGIONS_NAME,
	 		   MAX(B.YEAR_MONTH) YEAR_MONTH,
	 		   NVL2(SUM(B.DATE_1),SUM(B.DATE_1) || '-' || COUNT(B.DATE_1),SUM(B.DATE_1)) DATE1,
	 		   NVL2(SUM(B.DATE_2),SUM(B.DATE_2) || '-' || COUNT(B.DATE_2),SUM(B.DATE_2)) DATE2,
	 		   NVL2(SUM(B.DATE_3),SUM(B.DATE_3) || '-' || COUNT(B.DATE_3),SUM(B.DATE_3)) DATE3,
	 		   NVL2(SUM(B.DATE_4),SUM(B.DATE_4) || '-' || COUNT(B.DATE_4),SUM(B.DATE_4)) DATE4,
	 		   NVL2(SUM(B.DATE_5),SUM(B.DATE_5) || '-' || COUNT(B.DATE_5),SUM(B.DATE_5)) DATE5,
	 		   NVL2(SUM(B.DATE_6),SUM(B.DATE_6) || '-' || COUNT(B.DATE_6),SUM(B.DATE_6)) DATE6,
	 		   NVL2(SUM(B.DATE_7),SUM(B.DATE_7) || '-' || COUNT(B.DATE_7),SUM(B.DATE_7)) DATE7,
	 		   NVL2(SUM(B.DATE_8),SUM(B.DATE_8) || '-' || COUNT(B.DATE_8),SUM(B.DATE_8)) DATE8,
	 		   NVL2(SUM(B.DATE_9),SUM(B.DATE_9) || '-' || COUNT(B.DATE_9),SUM(B.DATE_9)) DATE9,
	 		   NVL2(SUM(B.DATE_10),SUM(B.DATE_10) || '-' || COUNT(B.DATE_10),SUM(B.DATE_10)) DATE10,
	 		   NVL2(SUM(B.DATE_11),SUM(B.DATE_11) || '-' || COUNT(B.DATE_11),SUM(B.DATE_11)) DATE11,
	 		   NVL2(SUM(B.DATE_12),SUM(B.DATE_12) || '-' || COUNT(B.DATE_12),SUM(B.DATE_12)) DATE12,
	 		   NVL2(SUM(B.DATE_13),SUM(B.DATE_13) || '-' || COUNT(B.DATE_13),SUM(B.DATE_13)) DATE13,
	 		   NVL2(SUM(B.DATE_14),SUM(B.DATE_14) || '-' || COUNT(B.DATE_14),SUM(B.DATE_14)) DATE14,
	 		   NVL2(SUM(B.DATE_15),SUM(B.DATE_15) || '-' || COUNT(B.DATE_15),SUM(B.DATE_15)) DATE15,
	 		   NVL2(SUM(B.DATE_16),SUM(B.DATE_16) || '-' || COUNT(B.DATE_16),SUM(B.DATE_16)) DATE16,
	 		   NVL2(SUM(B.DATE_17),SUM(B.DATE_17) || '-' || COUNT(B.DATE_17),SUM(B.DATE_17)) DATE17,
	 		   NVL2(SUM(B.DATE_18),SUM(B.DATE_18) || '-' || COUNT(B.DATE_18),SUM(B.DATE_18)) DATE18,
	 		   NVL2(SUM(B.DATE_19),SUM(B.DATE_19) || '-' || COUNT(B.DATE_19),SUM(B.DATE_19)) DATE19,
	 		   NVL2(SUM(B.DATE_20),SUM(B.DATE_20) || '-' || COUNT(B.DATE_20),SUM(B.DATE_20)) DATE20,
	 		   NVL2(SUM(B.DATE_21),SUM(B.DATE_21) || '-' || COUNT(B.DATE_21),SUM(B.DATE_21)) DATE21,
	 		   NVL2(SUM(B.DATE_22),SUM(B.DATE_22) || '-' || COUNT(B.DATE_22),SUM(B.DATE_22)) DATE22,
	 		   NVL2(SUM(B.DATE_23),SUM(B.DATE_23) || '-' || COUNT(B.DATE_23),SUM(B.DATE_23)) DATE23,
	 		   NVL2(SUM(B.DATE_24),SUM(B.DATE_24) || '-' || COUNT(B.DATE_24),SUM(B.DATE_24)) DATE24,
	 		   NVL2(SUM(B.DATE_25),SUM(B.DATE_25) || '-' || COUNT(B.DATE_25),SUM(B.DATE_25)) DATE25,
	 		   NVL2(SUM(B.DATE_26),SUM(B.DATE_26) || '-' || COUNT(B.DATE_26),SUM(B.DATE_26)) DATE26,
	 		   NVL2(SUM(B.DATE_27),SUM(B.DATE_27) || '-' || COUNT(B.DATE_27),SUM(B.DATE_27)) DATE27,
	 		   NVL2(SUM(B.DATE_28),SUM(B.DATE_28) || '-' || COUNT(B.DATE_28),SUM(B.DATE_28)) DATE28,
	 		   NVL2(SUM(B.DATE_29),SUM(B.DATE_29) || '-' || COUNT(B.DATE_29),SUM(B.DATE_29)) DATE29,
	 		   NVL2(SUM(B.DATE_30),SUM(B.DATE_30) || '-' || COUNT(B.DATE_30),SUM(B.DATE_30)) DATE30,
	 		   NVL2(SUM(B.DATE_31),SUM(B.DATE_31) || '-' || COUNT(B.DATE_31),SUM(B.DATE_31)) DATE31
			   FROM (SELECT M.SMALL_REGIONS_CODE SMALL_REGIONS_CODE,
			 		   M.SMALL_REGIONS_NAME SMALL_REGIONS_NAME,
			 		   M.YEAR_MONTH YEAR_MONTH,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'01', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_1,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'02', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_2,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'03', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_3,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'04', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_4,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'05', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_5,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'06', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_6,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'07', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_7,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'08', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_8,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'09', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_9,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'10', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_10,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'11', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_11,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'12', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_12,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'13', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_13,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'14', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_14,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'15', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_15,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'16', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_16,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'17', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_17,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'18', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_18,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'19', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_19,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'20', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_20,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'21', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_21,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'22', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_22,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'23', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_23,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'24', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_24,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'25', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_25,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'26', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_26,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'27', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_27,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'28', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_28,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'29', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_29,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'30', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_30,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'31', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_31
			 		   FROM BSE.T_BAS_COURIER_SCHEDULE M
			 		   WHERE M.ACTIVE =#{active,jdbcType=CHAR}
			 		   AND M.EXPRESS_PART_CODE =#{expressPartCode,jdbcType=VARCHAR}
			 		   AND M.PLAN_TYPE  =#{planType,jdbcType=VARCHAR}
			 		   AND DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1) IS NOT NULL
			 		   AND M.YEAR_MONTH =#{yearMonth,jdbcType=VARCHAR} ) B
			 		   GROUP BY B.SMALL_REGIONS_CODE, B.SMALL_REGIONS_NAME
		 			   ORDER BY B.SMALL_REGIONS_CODE, B.SMALL_REGIONS_NAME
	 </select> -->
	 
	 <!-- 优化报表式查询快递员排班   130566-ZengJunfan-->
	 <select id="queryCourierScheduleReportList" resultMap="courierScheduleReportResultMap" 
	 parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.CourierScheduleEntity">
	 	SELECT /** 综合查询 排班信息报表式查询**/
	 		   B.SMALL_REGIONS_CODE SMALL_REGIONS_CODE, 
	 		   B.SMALL_REGIONS_NAME SMALL_REGIONS_NAME,
	 		   MAX(B.YEAR_MONTH) YEAR_MONTH,
	 		   NVL2(SUM(B.DATE_1),SUM(B.DATE_1) || '-' || COUNT(B.DATE_1),SUM(B.DATE_1)) DATE1,
	 		   NVL2(SUM(B.DATE_2),SUM(B.DATE_2) || '-' || COUNT(B.DATE_2),SUM(B.DATE_2)) DATE2,
	 		   NVL2(SUM(B.DATE_3),SUM(B.DATE_3) || '-' || COUNT(B.DATE_3),SUM(B.DATE_3)) DATE3,
	 		   NVL2(SUM(B.DATE_4),SUM(B.DATE_4) || '-' || COUNT(B.DATE_4),SUM(B.DATE_4)) DATE4,
	 		   NVL2(SUM(B.DATE_5),SUM(B.DATE_5) || '-' || COUNT(B.DATE_5),SUM(B.DATE_5)) DATE5,
	 		   NVL2(SUM(B.DATE_6),SUM(B.DATE_6) || '-' || COUNT(B.DATE_6),SUM(B.DATE_6)) DATE6,
	 		   NVL2(SUM(B.DATE_7),SUM(B.DATE_7) || '-' || COUNT(B.DATE_7),SUM(B.DATE_7)) DATE7,
	 		   NVL2(SUM(B.DATE_8),SUM(B.DATE_8) || '-' || COUNT(B.DATE_8),SUM(B.DATE_8)) DATE8,
	 		   NVL2(SUM(B.DATE_9),SUM(B.DATE_9) || '-' || COUNT(B.DATE_9),SUM(B.DATE_9)) DATE9,
	 		   NVL2(SUM(B.DATE_10),SUM(B.DATE_10) || '-' || COUNT(B.DATE_10),SUM(B.DATE_10)) DATE10,
	 		   NVL2(SUM(B.DATE_11),SUM(B.DATE_11) || '-' || COUNT(B.DATE_11),SUM(B.DATE_11)) DATE11,
	 		   NVL2(SUM(B.DATE_12),SUM(B.DATE_12) || '-' || COUNT(B.DATE_12),SUM(B.DATE_12)) DATE12,
	 		   NVL2(SUM(B.DATE_13),SUM(B.DATE_13) || '-' || COUNT(B.DATE_13),SUM(B.DATE_13)) DATE13,
	 		   NVL2(SUM(B.DATE_14),SUM(B.DATE_14) || '-' || COUNT(B.DATE_14),SUM(B.DATE_14)) DATE14,
	 		   NVL2(SUM(B.DATE_15),SUM(B.DATE_15) || '-' || COUNT(B.DATE_15),SUM(B.DATE_15)) DATE15,
	 		   NVL2(SUM(B.DATE_16),SUM(B.DATE_16) || '-' || COUNT(B.DATE_16),SUM(B.DATE_16)) DATE16,
	 		   NVL2(SUM(B.DATE_17),SUM(B.DATE_17) || '-' || COUNT(B.DATE_17),SUM(B.DATE_17)) DATE17,
	 		   NVL2(SUM(B.DATE_18),SUM(B.DATE_18) || '-' || COUNT(B.DATE_18),SUM(B.DATE_18)) DATE18,
	 		   NVL2(SUM(B.DATE_19),SUM(B.DATE_19) || '-' || COUNT(B.DATE_19),SUM(B.DATE_19)) DATE19,
	 		   NVL2(SUM(B.DATE_20),SUM(B.DATE_20) || '-' || COUNT(B.DATE_20),SUM(B.DATE_20)) DATE20,
	 		   NVL2(SUM(B.DATE_21),SUM(B.DATE_21) || '-' || COUNT(B.DATE_21),SUM(B.DATE_21)) DATE21,
	 		   NVL2(SUM(B.DATE_22),SUM(B.DATE_22) || '-' || COUNT(B.DATE_22),SUM(B.DATE_22)) DATE22,
	 		   NVL2(SUM(B.DATE_23),SUM(B.DATE_23) || '-' || COUNT(B.DATE_23),SUM(B.DATE_23)) DATE23,
	 		   NVL2(SUM(B.DATE_24),SUM(B.DATE_24) || '-' || COUNT(B.DATE_24),SUM(B.DATE_24)) DATE24,
	 		   NVL2(SUM(B.DATE_25),SUM(B.DATE_25) || '-' || COUNT(B.DATE_25),SUM(B.DATE_25)) DATE25,
	 		   NVL2(SUM(B.DATE_26),SUM(B.DATE_26) || '-' || COUNT(B.DATE_26),SUM(B.DATE_26)) DATE26,
	 		   NVL2(SUM(B.DATE_27),SUM(B.DATE_27) || '-' || COUNT(B.DATE_27),SUM(B.DATE_27)) DATE27,
	 		   NVL2(SUM(B.DATE_28),SUM(B.DATE_28) || '-' || COUNT(B.DATE_28),SUM(B.DATE_28)) DATE28,
	 		   NVL2(SUM(B.DATE_29),SUM(B.DATE_29) || '-' || COUNT(B.DATE_29),SUM(B.DATE_29)) DATE29,
	 		   NVL2(SUM(B.DATE_30),SUM(B.DATE_30) || '-' || COUNT(B.DATE_30),SUM(B.DATE_30)) DATE30,
	 		   NVL2(SUM(B.DATE_31),SUM(B.DATE_31) || '-' || COUNT(B.DATE_31),SUM(B.DATE_31)) DATE31
			   FROM (SELECT C.REGION_CODE SMALL_REGIONS_CODE,
			 		   C.REGION_NAME SMALL_REGIONS_NAME,
			 		   DECODE(M.YEAR_MONTH,M.YEAR_MONTH,#{yearMonth,jdbcType=VARCHAR}) YEAR_MONTH,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'01', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_1,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'02', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_2,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'03', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_3,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'04', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_4,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'05', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_5,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'06', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_6,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'07', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_7,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'08', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_8,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'09', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_9,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'10', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_10,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'11', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_11,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'12', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_12,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'13', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_13,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'14', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_14,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'15', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_15,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'16', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_16,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'17', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_17,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'18', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_18,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'19', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_19,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'20', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_20,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'21', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_21,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'22', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_22,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'23', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_23,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'24', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_24,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'25', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_25,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'26', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_26,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'27', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_27,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'28', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_28,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'29', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_29,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'30', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_30,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'31', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_31
			 		   FROM (SELECT S.REGION_CODE REGION_CODE , S.REGION_NAME REGION_NAME
                  		FROM BSE.T_BAS_EXPRESS_SMALLZONE S
                  		<where>
                  			<if test="orgCodeList !=null ">
                  				S.MANAGEMENT IN
                  				<foreach collection="orgCodeList" index="index" item="orgCode" open="(" separator="," close=")" >
								#{orgCode}
								</foreach>
                  			</if>
                  			AND S.ACTIVE =#{active,jdbcType=CHAR}
                  		</where>) C 
                   		LEFT JOIN BSE.T_BAS_COURIER_SCHEDULE M
			 		   ON M.SMALL_REGIONS_CODE =  C.REGION_CODE
			 		   AND M.ACTIVE =#{active,jdbcType=CHAR}
			 		   AND M.PLAN_TYPE =#{planType,jdbcType=VARCHAR}
			 		   AND DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1) IS NOT NULL
			 		   AND M.YEAR_MONTH =#{yearMonth,jdbcType=VARCHAR}) B
			 		   GROUP BY B.SMALL_REGIONS_CODE, B.SMALL_REGIONS_NAME
		 			   ORDER BY B.SMALL_REGIONS_CODE, B.SMALL_REGIONS_NAME
	 </select>
	 <!-- 报表式查询count -->
	<select id="queryReportListCount" resultType="Long" parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.CourierScheduleEntity">
		SELECT COUNT(*) /** 综合查询 排班信息报表式查询总数**/
		FROM (
			SELECT /** 综合查询 排班信息报表式查询**/
	 		   B.SMALL_REGIONS_CODE SMALL_REGIONS_CODE, 
	 		   B.SMALL_REGIONS_NAME SMALL_REGIONS_NAME,
	 		   MAX(B.YEAR_MONTH) YEAR_MONTH,
	 		   NVL2(SUM(B.DATE_1),SUM(B.DATE_1) || '-' || COUNT(B.DATE_1),SUM(B.DATE_1)) DATE1,
	 		   NVL2(SUM(B.DATE_2),SUM(B.DATE_2) || '-' || COUNT(B.DATE_2),SUM(B.DATE_2)) DATE2,
	 		   NVL2(SUM(B.DATE_3),SUM(B.DATE_3) || '-' || COUNT(B.DATE_3),SUM(B.DATE_3)) DATE3,
	 		   NVL2(SUM(B.DATE_4),SUM(B.DATE_4) || '-' || COUNT(B.DATE_4),SUM(B.DATE_4)) DATE4,
	 		   NVL2(SUM(B.DATE_5),SUM(B.DATE_5) || '-' || COUNT(B.DATE_5),SUM(B.DATE_5)) DATE5,
	 		   NVL2(SUM(B.DATE_6),SUM(B.DATE_6) || '-' || COUNT(B.DATE_6),SUM(B.DATE_6)) DATE6,
	 		   NVL2(SUM(B.DATE_7),SUM(B.DATE_7) || '-' || COUNT(B.DATE_7),SUM(B.DATE_7)) DATE7,
	 		   NVL2(SUM(B.DATE_8),SUM(B.DATE_8) || '-' || COUNT(B.DATE_8),SUM(B.DATE_8)) DATE8,
	 		   NVL2(SUM(B.DATE_9),SUM(B.DATE_9) || '-' || COUNT(B.DATE_9),SUM(B.DATE_9)) DATE9,
	 		   NVL2(SUM(B.DATE_10),SUM(B.DATE_10) || '-' || COUNT(B.DATE_10),SUM(B.DATE_10)) DATE10,
	 		   NVL2(SUM(B.DATE_11),SUM(B.DATE_11) || '-' || COUNT(B.DATE_11),SUM(B.DATE_11)) DATE11,
	 		   NVL2(SUM(B.DATE_12),SUM(B.DATE_12) || '-' || COUNT(B.DATE_12),SUM(B.DATE_12)) DATE12,
	 		   NVL2(SUM(B.DATE_13),SUM(B.DATE_13) || '-' || COUNT(B.DATE_13),SUM(B.DATE_13)) DATE13,
	 		   NVL2(SUM(B.DATE_14),SUM(B.DATE_14) || '-' || COUNT(B.DATE_14),SUM(B.DATE_14)) DATE14,
	 		   NVL2(SUM(B.DATE_15),SUM(B.DATE_15) || '-' || COUNT(B.DATE_15),SUM(B.DATE_15)) DATE15,
	 		   NVL2(SUM(B.DATE_16),SUM(B.DATE_16) || '-' || COUNT(B.DATE_16),SUM(B.DATE_16)) DATE16,
	 		   NVL2(SUM(B.DATE_17),SUM(B.DATE_17) || '-' || COUNT(B.DATE_17),SUM(B.DATE_17)) DATE17,
	 		   NVL2(SUM(B.DATE_18),SUM(B.DATE_18) || '-' || COUNT(B.DATE_18),SUM(B.DATE_18)) DATE18,
	 		   NVL2(SUM(B.DATE_19),SUM(B.DATE_19) || '-' || COUNT(B.DATE_19),SUM(B.DATE_19)) DATE19,
	 		   NVL2(SUM(B.DATE_20),SUM(B.DATE_20) || '-' || COUNT(B.DATE_20),SUM(B.DATE_20)) DATE20,
	 		   NVL2(SUM(B.DATE_21),SUM(B.DATE_21) || '-' || COUNT(B.DATE_21),SUM(B.DATE_21)) DATE21,
	 		   NVL2(SUM(B.DATE_22),SUM(B.DATE_22) || '-' || COUNT(B.DATE_22),SUM(B.DATE_22)) DATE22,
	 		   NVL2(SUM(B.DATE_23),SUM(B.DATE_23) || '-' || COUNT(B.DATE_23),SUM(B.DATE_23)) DATE23,
	 		   NVL2(SUM(B.DATE_24),SUM(B.DATE_24) || '-' || COUNT(B.DATE_24),SUM(B.DATE_24)) DATE24,
	 		   NVL2(SUM(B.DATE_25),SUM(B.DATE_25) || '-' || COUNT(B.DATE_25),SUM(B.DATE_25)) DATE25,
	 		   NVL2(SUM(B.DATE_26),SUM(B.DATE_26) || '-' || COUNT(B.DATE_26),SUM(B.DATE_26)) DATE26,
	 		   NVL2(SUM(B.DATE_27),SUM(B.DATE_27) || '-' || COUNT(B.DATE_27),SUM(B.DATE_27)) DATE27,
	 		   NVL2(SUM(B.DATE_28),SUM(B.DATE_28) || '-' || COUNT(B.DATE_28),SUM(B.DATE_28)) DATE28,
	 		   NVL2(SUM(B.DATE_29),SUM(B.DATE_29) || '-' || COUNT(B.DATE_29),SUM(B.DATE_29)) DATE29,
	 		   NVL2(SUM(B.DATE_30),SUM(B.DATE_30) || '-' || COUNT(B.DATE_30),SUM(B.DATE_30)) DATE30,
	 		   NVL2(SUM(B.DATE_31),SUM(B.DATE_31) || '-' || COUNT(B.DATE_31),SUM(B.DATE_31)) DATE31
			   FROM (SELECT C.REGION_CODE SMALL_REGIONS_CODE,
			 		   C.REGION_NAME SMALL_REGIONS_NAME,
			 		   DECODE(M.YEAR_MONTH,M.YEAR_MONTH,#{yearMonth,jdbcType=VARCHAR}) YEAR_MONTH,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'01', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_1,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'02', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_2,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'03', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_3,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'04', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_4,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'05', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_5,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'06', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_6,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'07', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_7,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'08', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_8,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'09', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_9,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'10', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_10,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'11', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_11,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'12', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_12,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'13', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_13,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'14', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_14,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'15', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_15,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'16', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_16,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'17', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_17,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'18', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_18,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'19', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_19,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'20', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_20,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'21', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_21,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'22', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_22,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'23', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_23,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'24', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_24,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'25', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_25,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'26', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_26,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'27', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_27,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'28', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_28,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'29', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_29,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'30', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_30,
			 		   DECODE(TO_CHAR(M.SCHEDULE_DATE, 'dd'),'31', DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1),NULL) DATE_31
			 		   FROM (SELECT S.REGION_CODE REGION_CODE , S.REGION_NAME REGION_NAME
                  		FROM BSE.T_BAS_EXPRESS_SMALLZONE S
                  		<where>
                  			<if test="orgCodeList !=null">
                  				S.MANAGEMENT IN
                  				<foreach collection="orgCodeList" index="index" item="orgCode" open="(" separator="," close=")" >
										#{orgCode}
								</foreach>
                  			</if>
                  			AND S.ACTIVE =#{active,jdbcType=CHAR}
                  		</where> ) C 
                   		LEFT JOIN BSE.T_BAS_COURIER_SCHEDULE M
			 		   ON M.SMALL_REGIONS_CODE =  C.REGION_CODE
			 		   AND M.ACTIVE =#{active,jdbcType=CHAR}
			 		   AND M.PLAN_TYPE  =#{planType,jdbcType=VARCHAR}
			 		   AND DECODE(M.COURIER_NATURE, 'FIXED', 0, 'MOTORIZED', 1) IS NOT NULL
			 		   AND M.YEAR_MONTH =#{yearMonth,jdbcType=VARCHAR} ) B
			 		   GROUP BY B.SMALL_REGIONS_CODE, B.SMALL_REGIONS_NAME
		 			   ORDER BY B.SMALL_REGIONS_CODE, B.SMALL_REGIONS_NAME
		) A
	</select>
</mapper>