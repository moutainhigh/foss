<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="foss.bse.bse-baseinfo.ldpAgencyDept">
	<!-- 快递代理网点结果集 -->
	<resultMap id="ldpOuterBranchResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.domain.OuterBranchExpressEntity">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="AGENT_DEPT_CODE" property="agentDeptCode"
			jdbcType="VARCHAR" />
		<result column="AGENT_DEPT_NAME" property="agentDeptName"
			jdbcType="VARCHAR" />
		<result column="AGENT_COMPANY" property="agentCompany"
			jdbcType="VARCHAR" />
		<result column="MANAGEMENT" property="management" jdbcType="VARCHAR" />
		<result column="SIMPLENAME" property="simplename" jdbcType="VARCHAR" />
		<result column="PROV_CODE" property="provCode" jdbcType="VARCHAR" />
		<result column="AIR_WAYBILL_TEL" property="airWaybillTel"
			jdbcType="VARCHAR" />
		<result column="AIR_WAYBILL_NAME" property="airWaybillName"
			jdbcType="VARCHAR" />
		<result column="CITY_CODE" property="cityCode" jdbcType="VARCHAR" />
		<result column="CONTACT" property="contact" jdbcType="VARCHAR" />
		<result column="COUNTY_CODE" property="countyCode" jdbcType="VARCHAR" />
		<result column="ADDRESS" property="address" jdbcType="VARCHAR" />
		<result column="PICKUP_SELF" property="pickupSelf" jdbcType="CHAR" />
		<result column="PICKUP_TO_DOOR" property="pickupToDoor"
			jdbcType="CHAR" />
		<result column="RETURN_BILL" property="returnBill" jdbcType="CHAR" />
		<result column="ARRIVE_CHARGE" property="arriveCharge"
			jdbcType="CHAR" />
		<result column="HELP_CHARGE" property="helpCharge" jdbcType="CHAR" />
		<result column="PICKUP_AREA" property="pickupArea" jdbcType="VARCHAR" typeHandler="org.apache.ibatis.type.ClobTypeHandler" />
		<result column="DELIVER_AREA" property="deliverArea" jdbcType="VARCHAR" typeHandler="org.apache.ibatis.type.ClobTypeHandler" />
		<result column="LEAVE" property="leave" jdbcType="CHAR" />
		<result column="TRANSFER" property="transfer" jdbcType="CHAR" />
		<result column="ARRIVE" property="arrive" jdbcType="CHAR" />
		<result column="CONTACT_PHONE" property="contactPhone"
			jdbcType="VARCHAR" />
		<result column="MOBILE_PHONE" property="mobilePhone" jdbcType="VARCHAR" />
		<result column="NOTES" property="notes" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createDate" jdbcType="TIMESTAMP" />
		<result column="MODIFY_TIME" property="modifyDate" jdbcType="TIMESTAMP" />
		<result column="ACTIVE" property="active" jdbcType="CHAR" />
		<result column="CREATE_USER_CODE" property="createUser"
			jdbcType="VARCHAR" />
		<result column="MODIFY_USER_CODE" property="modifyUser"
			jdbcType="VARCHAR" />
		<result column="VIRTUAL_CODE" jdbcType="VARCHAR" property="virtualCode" />
		<result column="BRANCHTYPE" property="branchtype" jdbcType="CHAR" />
		<result column="PINYIN" property="pinyin" jdbcType="VARCHAR" />
		<result column="VERSION_NO" property="versionNo" jdbcType="DECIMAL" />
		<result column="STATION_NUMBER" property="stationNumber" jdbcType="VARCHAR" />
		<result column="IS_AIRPORT" property="isAirport" jdbcType="CHAR"/>
		<result column="INSURED" property="insured" jdbcType="CHAR"/>
		
		<result column="AGENT_COMPANY_NAME" property="agentCompanyName" jdbcType="VARCHAR" />
		<result column="MANAGEMENTNAME" property="managementName" jdbcType="VARCHAR" />
		<result column="PRONAME" property="provName" jdbcType="VARCHAR" />
		<result column="CITYNAME" property="cityName" jdbcType="VARCHAR" />
		<result column="COUNTYNAME" property="countyName" jdbcType="VARCHAR" />
		<result column="DEPT_COORDINATE" property="deptCoordinate" jdbcType="VARCHAR"/>
		<result	column="DELIVERY_COORDINATE" property="deliveryCoordinate" jdbcType="VARCHAR"/>
		<result	column="AGENT_COMPANY_SIMPLE_CODE" property="agentCompanyAbbreviationCode" jdbcType="VARCHAR"/>
		<result	column="AGENT_COLLECTED_UPPER_LIMIT" property="agentCollectedUpperLimit" jdbcType="VARCHAR"/>
	</resultMap>
	
	<!-- 数据字段 -->
	<sql id="outerBranch_Column_List">
		T.ID, T.AGENT_DEPT_CODE, T.AGENT_DEPT_NAME, T.AGENT_COMPANY,
		T.MANAGEMENT, T.SIMPLENAME, T.PROV_CODE,
		T.AIR_WAYBILL_TEL, T.AIR_WAYBILL_NAME,
		T.CITY_CODE, T.CONTACT, T.COUNTY_CODE, T.ADDRESS,
		T.PICKUP_SELF,
		T.PICKUP_TO_DOOR,
		T.RETURN_BILL, T.ARRIVE_CHARGE, T.HELP_CHARGE, T.PICKUP_AREA, T.DELIVER_AREA,
		T.LEAVE, T.TRANSFER, T.ARRIVE, T.CONTACT_PHONE, T.MOBILE_PHONE, T.NOTES,
		T.CREATE_TIME, T.MODIFY_TIME,
		T.ACTIVE, T.CREATE_USER_CODE, T.MODIFY_USER_CODE,
		T.VIRTUAL_CODE, T.BRANCHTYPE, T.PINYIN, T.VERSION_NO,T.STATION_NUMBER,T.IS_AIRPORT,
		T.INSURED, T.DEPT_COORDINATE, T.DELIVERY_COORDINATE, T.AGENT_COMPANY_SIMPLE_CODE,T.AGENT_COLLECTED_UPPER_LIMIT,
		M.AGENT_COMPANY_NAME AGENT_COMPANY_NAME,
        O.NAME               MANAGEMENTNAME,
        A.NAME               PRONAME,
        B.NAME               CITYNAME,
        C.NAME               COUNTYNAME
	</sql>
	
	<!-- 数据字段 -->
	<sql id="outerBranch_Select_List">
		T.ID AS ID, T.AGENT_DEPT_CODE AS AGENT_DEPT_CODE, T.AGENT_DEPT_NAME AS AGENT_DEPT_NAME, T.AGENT_COMPANY AS AGENT_COMPANY,
		T.MANAGEMENT AS MANAGEMENT, T.SIMPLENAME AS SIMPLENAME, T.PROV_CODE AS PROV_CODE,
		T.AIR_WAYBILL_TEL AS AIR_WAYBILL_TEL, T.AIR_WAYBILL_NAME AS AIR_WAYBILL_NAME,
		T.CITY_CODE AS CITY_CODE, T.CONTACT AS CONTACT, T.COUNTY_CODE AS COUNTY_CODE, T.ADDRESS AS ADDRESS,
		T.PICKUP_SELF AS PICKUP_SELF,
		T.PICKUP_TO_DOOR AS PICKUP_TO_DOOR,
		T.RETURN_BILL AS RETURN_BILL, T.ARRIVE_CHARGE AS ARRIVE_CHARGE, T.HELP_CHARGE AS HELP_CHARGE, T.PICKUP_AREA AS PICKUP_AREA, T.DELIVER_AREA AS DELIVER_AREA,
		T.LEAVE AS LEAVE, T.TRANSFER AS TRANSFER, T.ARRIVE AS ARRIVE, T.CONTACT_PHONE AS CONTACT_PHONE, T.MOBILE_PHONE AS MOBILE_PHONE, T.NOTES AS NOTES,
		T.CREATE_TIME AS CREATE_TIME, T.MODIFY_TIME AS MODIFY_TIME,
		T.ACTIVE AS ACTIVE, T.CREATE_USER_CODE AS CREATE_USER_CODE, T.MODIFY_USER_CODE AS MODIFY_USER_CODE,
		T.VIRTUAL_CODE AS VIRTUAL_CODE, T.BRANCHTYPE AS BRANCHTYPE, T.PINYIN AS PINYIN, T.VERSION_NO AS VERSION_NO,
		T.STATION_NUMBER AS STATION_NUMBER,T.IS_AIRPORT AS IS_AIRPORT,
		T.INSURED AS INSURED, T.DEPT_COORDINATE AS DEPT_COORDINATE, T.DELIVERY_COORDINATE AS DELIVERY_COORDINATE,T.AGENT_COMPANY_SIMPLE_CODE,T.AGENT_COLLECTED_UPPER_LIMIT,
		M.AGENT_COMPANY_NAME AGENT_COMPANY_NAME,
        O.NAME               MANAGEMENTNAME,
        A.NAME               PRONAME,
        B.NAME               CITYNAME,
        C.NAME               COUNTYNAME
	</sql>

	<!-- 查询快递代理网点信息 -->
	<select id="queryAllInfos"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OuterBranchExpressEntity"
		resultMap="ldpOuterBranchResultMap">
		<![CDATA[
			SELECT
			/** 综合:查询快递代理网点信息 **/
		]]>
		<include refid="outerBranch_Column_List" />
		<![CDATA[
			 FROM BSE.T_BAS_OUTER_BRANCH T
  			 LEFT JOIN BSE.T_BAS_ORG O ON T.MANAGEMENT = O.CODE
                           AND O.ACTIVE = T.ACTIVE
  			 LEFT JOIN BSE.T_BAS_BUSINESS_PARTNER M ON T.AGENT_COMPANY =
                                            M.AGENT_COMPANY_CODE
                                        AND M.ACTIVE = T.ACTIVE
  			 LEFT JOIN BSE.T_BAS_DISTRICT A ON T.PROV_CODE = A.CODE
                                AND T.ACTIVE = A.ACTIVE
             LEFT JOIN BSE.T_BAS_DISTRICT B ON T.CITY_CODE = B.CODE
                                AND T.ACTIVE = B.ACTIVE
             LEFT JOIN BSE.T_BAS_DISTRICT C ON T.COUNTY_CODE = C.CODE
                                AND T.ACTIVE = C.ACTIVE
		]]>
		<include refid="queryLdpDeptWhere" />
	</select>

	<!-- 统计快递代理网点总记录数 -->
	<select id="queryRecordCount" resultType="Long"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OuterBranchExpressEntity">
	    <![CDATA[
	       	select/** 综合:统计快递代理网点总记录数 **/ count(*) from BSE.T_BAS_OUTER_BRANCH T
	    ]]>
		<include refid="queryLdpDeptWhere" />

	</select>

	<!-- 快递代理网点分页查询条件 -->
	<sql id="queryLdpDeptWhere">
		<where>

			<if test="active != null and active != ''">
				T.ACTIVE = #{active,jdbcType=CHAR}
			</if>
			<if test="agentDeptCode != null and agentDeptCode != ''">
				and T.AGENT_DEPT_CODE = #{agentDeptCode,jdbcType=CHAR}
			</if>
			<if test="agentDeptName != null and agentDeptName != ''">
				and T.AGENT_DEPT_NAME like CONCAT(CONCAT('%',#{agentDeptName,jdbcType=CHAR}),'%')
			</if>
			<if test="agentCompany != null and agentCompany != ''">
				and T.AGENT_COMPANY = #{agentCompany,jdbcType=CHAR}
			</if>
			<if test="management != null and management != ''">
				and T.MANAGEMENT = #{management,jdbcType=CHAR}
			</if>
			<if test="cityCode != null and cityCode != ''">
				and T.CITY_CODE = #{cityCode,jdbcType=CHAR}
			</if>

			<if test="returnBill != null and returnBill != ''">
				and T.RETURN_BILL = #{returnBill,jdbcType=CHAR}
			</if>
			<if test="helpCharge != null and helpCharge != ''">
				and T.HELP_CHARGE = #{helpCharge,jdbcType=CHAR}
			</if>
			<if test="arriveCharge != null and arriveCharge != ''">
				and T.ARRIVE_CHARGE = #{arriveCharge,jdbcType=CHAR}
			</if>
			<if test="insured != null and insured != ''">
				and T.INSURED = #{insured,jdbcType=CHAR}
			</if>
			<if test="leave != null and leave != ''">
				and T.LEAVE = #{leave,jdbcType=CHAR}
			</if>
			<if test="arrive != null and arrive != ''">
				and T.ARRIVE = #{arrive,jdbcType=CHAR}
			</if>
			<if test="transfer != null and transfer != ''">
				and T.TRANSFER = #{transfer,jdbcType=CHAR}
			</if>
			<if test="branchtype != null and branchtype != ''">
				and T.BRANCHTYPE = #{branchtype,jdbcType=CHAR}
			</if>
            ORDER BY T.CREATE_TIME DESC
		</where>
	</sql>

	<!-- 根据快递代理网点虚拟编码查询该快递代理网点 -->
	<select id="queryLdpAgencyDeptsByComVirtualCode" parameterType="map"
		resultMap="ldpOuterBranchResultMap">
		<![CDATA[
			SELECT
			/** 综合:根据快递代理网点虚拟编码查询该快递代理网点 **/
		]]>
		<include refid="outerBranch_Column_List" />
		<![CDATA[
			 FROM BSE.T_BAS_OUTER_BRANCH T
  			 LEFT JOIN BSE.T_BAS_ORG O ON T.MANAGEMENT = O.CODE
                           AND O.ACTIVE = T.ACTIVE
  			 LEFT JOIN BSE.T_BAS_BUSINESS_PARTNER M ON T.AGENT_COMPANY =
                                            M.AGENT_COMPANY_CODE
                                        AND M.ACTIVE = T.ACTIVE
  			 LEFT JOIN BSE.T_BAS_DISTRICT A ON T.PROV_CODE = A.CODE
                                AND T.ACTIVE = A.ACTIVE
             LEFT JOIN BSE.T_BAS_DISTRICT B ON T.CITY_CODE = B.CODE
                                AND T.ACTIVE = B.ACTIVE
             LEFT JOIN BSE.T_BAS_DISTRICT C ON T.COUNTY_CODE = C.CODE
                                AND T.ACTIVE = C.ACTIVE
		]]>
		<where>
			<if test="virtualCode != null and virtualCode != ''">
				T.AGENT_COMPANY = #{virtualCode,jdbcType=VARCHAR}
			</if>
			<if test="active != null and active != ''">
				AND T.ACTIVE = #{active,jdbcType=CHAR}
			</if>
			<if test="branchType != null and branchType != ''">
				AND T.BRANCHTYPE = #{branchType,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	 
	<!-- 根据快递代理网点编码查询该快递代理网点 -->
	<select id="queryLdpAgencyDeptByCode" parameterType="map"
		resultMap="ldpOuterBranchResultMap">
		<![CDATA[
			SELECT
			/** 综合:根据快递代理网点编码查询该快递代理网点**/
		]]>
		<include refid="outerBranch_Select_List" />
		<![CDATA[
			 FROM BSE.T_BAS_OUTER_BRANCH T
  			 LEFT JOIN BSE.T_BAS_ORG O ON T.MANAGEMENT = O.CODE
                           AND O.ACTIVE = T.ACTIVE
  			 LEFT JOIN BSE.T_BAS_BUSINESS_PARTNER M ON T.AGENT_COMPANY =
                                            M.AGENT_COMPANY_CODE
                                        AND M.ACTIVE = T.ACTIVE
  			 LEFT JOIN BSE.T_BAS_DISTRICT A ON T.PROV_CODE = A.CODE
                                AND T.ACTIVE = A.ACTIVE
             LEFT JOIN BSE.T_BAS_DISTRICT B ON T.CITY_CODE = B.CODE
                                AND T.ACTIVE = B.ACTIVE
             LEFT JOIN BSE.T_BAS_DISTRICT C ON T.COUNTY_CODE = C.CODE
                                AND T.ACTIVE = C.ACTIVE
		]]>
		<where>
			<if test="agentDeptCode != null and agentDeptCode != ''">
				AND T.AGENT_DEPT_CODE = #{agentDeptCode,jdbcType=VARCHAR}
			</if>
			<if test="branchtype != null and branchtype != ''">
				AND T.BRANCHTYPE = #{branchtype,jdbcType=VARCHAR}
			</if>
			<if test="active != null and active != ''">
				AND T.ACTIVE = #{active,jdbcType=CHAR}
			</if>
		</where>
	</select>
	
	<!-- 根据快递代理网点编码名称该快递代理网点 -->
	<select id="queryLdpAgencyDeptByName" parameterType="map"
		resultMap="ldpOuterBranchResultMap">
		<![CDATA[
			SELECT
			/** 综合:根据快递代理网点名称查询该快递代理网点**/
		]]>
		<include refid="outerBranch_Select_List" />
		<![CDATA[
			 FROM BSE.T_BAS_OUTER_BRANCH T
  			 LEFT JOIN BSE.T_BAS_ORG O ON T.MANAGEMENT = O.CODE
                           AND O.ACTIVE = T.ACTIVE
  			 LEFT JOIN BSE.T_BAS_BUSINESS_PARTNER M ON T.AGENT_COMPANY =
                                            M.AGENT_COMPANY_CODE
                                        AND M.ACTIVE = T.ACTIVE
  			 LEFT JOIN BSE.T_BAS_DISTRICT A ON T.PROV_CODE = A.CODE
                                AND T.ACTIVE = A.ACTIVE
             LEFT JOIN BSE.T_BAS_DISTRICT B ON T.CITY_CODE = B.CODE
                                AND T.ACTIVE = B.ACTIVE
             LEFT JOIN BSE.T_BAS_DISTRICT C ON T.COUNTY_CODE = C.CODE
                                AND T.ACTIVE = C.ACTIVE
		]]>
		<where>
			<if test="agentDeptName != null and agentDeptName != ''">
				AND T.AGENT_DEPT_NAME = #{agentDeptName,jdbcType=VARCHAR}
			</if>
			<if test="branchtype != null and branchtype != ''">
				AND T.BRANCHTYPE = #{branchtype,jdbcType=VARCHAR}
			</if>
			<if test="active != null and active != ''">
				AND T.ACTIVE = #{active,jdbcType=CHAR}
			</if>
		</where>
	</select>
	
	<!-- 根据快递代理公司虚拟编码批量查询该公司的所有快递代理网点 -->
	<select id="queryOutBranchExpressByVirtualCodes" parameterType="map" 
				resultMap="ldpOuterBranchResultMap">
		<![CDATA[
			SELECT
			/** 综合:根据快递代理公司虚拟编码批量查询该公司的所有快递代理网点 **/
		]]>
		<include refid="outerBranch_Column_List" />
		<![CDATA[
			 FROM BSE.T_BAS_OUTER_BRANCH T
  			 LEFT JOIN BSE.T_BAS_ORG O ON T.MANAGEMENT = O.CODE
                           AND O.ACTIVE = T.ACTIVE
  			 LEFT JOIN BSE.T_BAS_BUSINESS_PARTNER M ON T.AGENT_COMPANY =
                                            M.AGENT_COMPANY_CODE
                                        AND M.ACTIVE = T.ACTIVE
  			 LEFT JOIN BSE.T_BAS_DISTRICT A ON T.PROV_CODE = A.CODE
                                AND T.ACTIVE = A.ACTIVE
             LEFT JOIN BSE.T_BAS_DISTRICT B ON T.CITY_CODE = B.CODE
                                AND T.ACTIVE = B.ACTIVE
             LEFT JOIN BSE.T_BAS_DISTRICT C ON T.COUNTY_CODE = C.CODE
                                AND T.ACTIVE = C.ACTIVE
		]]>
		<where>
			<if test="virtualCodes != null ">
				T.VIRTUAL_CODE in
				<foreach collection="virtualCodes" index="index" item="code" open="("
					separator="," close=")">
					#{code}
				</foreach>
			</if>
			<if test="branchType != null and branchType != ''">
				AND T.BRANCHTYPE = #{branchType,jdbcType=CHAR}
			</if>
			<if test="active != null and active != ''">
			    AND T.ACTIVE = #{active,jdbcType=CHAR}
			</if>
		</where>
	</select>
	
	<!-- 根据快递代理公司编码批量查询该公司的所有快递代理网点 -->
	<select id="queryOutBranchExpressByCode" parameterType="map" 
				resultMap="ldpOuterBranchResultMap">
		<![CDATA[
			SELECT
			/** 综合:根据快递代理公司编码批量查询该公司的所有快递代理网点 **/
		]]>
		<include refid="outerBranch_Column_List" />
		<![CDATA[
			 FROM BSE.T_BAS_OUTER_BRANCH T
  			 LEFT JOIN BSE.T_BAS_ORG O ON T.MANAGEMENT = O.CODE
                           AND O.ACTIVE = T.ACTIVE
  			 LEFT JOIN BSE.T_BAS_BUSINESS_PARTNER M ON T.AGENT_COMPANY =
                                            M.AGENT_COMPANY_CODE
                                        AND M.ACTIVE = T.ACTIVE
  			 LEFT JOIN BSE.T_BAS_DISTRICT A ON T.PROV_CODE = A.CODE
                                AND T.ACTIVE = A.ACTIVE
             LEFT JOIN BSE.T_BAS_DISTRICT B ON T.CITY_CODE = B.CODE
                                AND T.ACTIVE = B.ACTIVE
             LEFT JOIN BSE.T_BAS_DISTRICT C ON T.COUNTY_CODE = C.CODE
                                AND T.ACTIVE = C.ACTIVE
		]]>
		<where>
			<if test="agencyCompanyCode != null and agencyCompanyCode != ''">
				T.AGENT_COMPANY = #{agencyCompanyCode,jdbcType=VARCHAR}
			</if>
			<if test="branchType != null and branchType != ''">
				AND T.BRANCHTYPE = #{branchType,jdbcType=CHAR}
			</if>
			<if test="active != null and active != ''">
			    AND T.ACTIVE = #{active,jdbcType=CHAR}
			</if>
		</where>
	</select>

	<!-- 新增信息 -->
	<insert id="addLdpAgencyDept"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OuterBranchExpressEntity">
		
		<![CDATA[
			INSERT/** 综合:新增信息 **/ INTO BSE.T_BAS_OUTER_BRANCH T	(
		ID, AGENT_DEPT_CODE, AGENT_DEPT_NAME, AGENT_COMPANY,
		MANAGEMENT, SIMPLENAME, PROV_CODE,
		AIR_WAYBILL_TEL, AIR_WAYBILL_NAME,
		CITY_CODE, CONTACT, COUNTY_CODE, ADDRESS,
		PICKUP_SELF,
		PICKUP_TO_DOOR,
		RETURN_BILL, ARRIVE_CHARGE, HELP_CHARGE, PICKUP_AREA, DELIVER_AREA,
		LEAVE, TRANSFER, ARRIVE, CONTACT_PHONE, MOBILE_PHONE, NOTES,
		CREATE_TIME,MODIFY_TIME,
		ACTIVE, CREATE_USER_CODE, MODIFY_USER_CODE,
		VIRTUAL_CODE, BRANCHTYPE, PINYIN, VERSION_NO,STATION_NUMBER,IS_AIRPORT,
		INSURED, DEPT_COORDINATE, DELIVERY_COORDINATE ,AGENT_COMPANY_SIMPLE_CODE,AGENT_COLLECTED_UPPER_LIMIT
		)VALUES(
		]]>
		#{id,jdbcType=VARCHAR}, #{agentDeptCode,jdbcType=VARCHAR},
		#{agentDeptName,jdbcType=VARCHAR},
		#{agentCompany,jdbcType=VARCHAR},
		#{management,jdbcType=VARCHAR}, #{simplename,jdbcType=VARCHAR},
		#{provCode,jdbcType=VARCHAR}, #{airWaybillTel,jdbcType=VARCHAR},
		#{airWaybillName,jdbcType=VARCHAR},
		#{cityCode,jdbcType=VARCHAR},
		#{contact,jdbcType=VARCHAR}, #{countyCode,jdbcType=VARCHAR},
		#{address,jdbcType=VARCHAR}, #{pickupSelf,jdbcType=CHAR},
		#{pickupToDoor,jdbcType=CHAR},
		#{returnBill,jdbcType=CHAR},
		#{arriveCharge,jdbcType=CHAR}, #{helpCharge,jdbcType=CHAR},
		#{pickupArea,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler}, 
		#{deliverArea,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
		#{leave,jdbcType=CHAR},
		#{transfer,jdbcType=CHAR},
		#{arrive,jdbcType=CHAR}, #{contactPhone,jdbcType=VARCHAR},
		#{mobilePhone,jdbcType=VARCHAR}, #{notes,jdbcType=VARCHAR},
		#{createDate,jdbcType=TIMESTAMP},
		#{modifyDate,jdbcType=TIMESTAMP},
		'Y', #{createUser,jdbcType=VARCHAR},
		#{modifyUser,jdbcType=VARCHAR}, #{virtualCode,jdbcType=VARCHAR},
		#{branchtype,jdbcType=CHAR},#{pinyin,jdbcType=VARCHAR},
		#{versionNo,jdbcType=DECIMAL},
		#{stationNumber,jdbcType=VARCHAR},
		#{isAirport,jdbcType=CHAR},
		#{insured,jdbcType=CHAR},
		#{deptCoordinate,jdbcType=VARCHAR},
		#{deliveryCoordinate,jdbcType=VARCHAR},
		#{agentCompanyAbbreviationCode,jdbcType=VARCHAR},
		#{agentCollectedUpperLimit,jdbcType=VARCHAR}
		<![CDATA[
		)
		]]>
	</insert>

	<!-- 根据虚拟code作废快递代理网点信息-->
	<update id="deleteByVirtualCode" parameterType="map">
		update/** 综合:作废信息 **/ BSE.T_BAS_OUTER_BRANCH

		<set>
			ACTIVE = 'N',
			<if test="modifyUser != null and modifyUser != ''">
				MODIFY_USER_CODE = #{modifyUser, jdbcType=VARCHAR},
			</if>
			MODIFY_TIME = SYSDATE,
			VERSION_NO = (SELECT MAX(VERSION_NO)+1 FROM BSE.T_BAS_OUTER_BRANCH)
		</set>

		<where>
		     ACTIVE = 'Y'
			<if test=" virtualCodes != null ">
			 AND VIRTUAL_CODE in
				<foreach collection="virtualCodes" index="index" item="code" open="("
					separator="," close=")">
					#{code}
				</foreach>
			</if>
			<if test="branchtype != null and branchtype != ''">
			AND BRANCHTYPE = #{branchtype, jdbcType=CHAR}
			</if>
		</where>
	</update>
	
	<!-- 根据id作废快递代理网点信息-->
	<update id="updateById" parameterType="map">
		update/** 综合:作废信息 **/ BSE.T_BAS_OUTER_BRANCH

		<set>
			ACTIVE = 'N',
			<if test="modifyUser != null and modifyUser != ''">
				MODIFY_USER_CODE = #{modifyUser, jdbcType=VARCHAR},
			</if>
			MODIFY_TIME = SYSDATE,
			VERSION_NO = (SELECT MAX(VERSION_NO)+1 FROM BSE.T_BAS_OUTER_BRANCH)
		</set>
		<where>
		     ID = #{id,jdbcType=VARCHAR}
		</where>
	</update>
	
	<!-- 根据快递代理网点提货网点编码去查询是否已经存在 -->
	<select id="queryLdpAgencyStationNumberIsExist" parameterType="map"
		resultMap="ldpOuterBranchResultMap">
		<![CDATA[
			SELECT
			/** 综合:根据快递代理网点提货网点编码去查询是否已经存在 **/
		]]>
		<include refid="outerBranch_Column_List" />
		<![CDATA[
			 FROM BSE.T_BAS_OUTER_BRANCH T
  			 LEFT JOIN BSE.T_BAS_ORG O ON T.MANAGEMENT = O.CODE
                           AND O.ACTIVE = T.ACTIVE
  			 LEFT JOIN BSE.T_BAS_BUSINESS_PARTNER M ON T.AGENT_COMPANY =
                                            M.AGENT_COMPANY_CODE
                                        AND M.ACTIVE = T.ACTIVE
  			 LEFT JOIN BSE.T_BAS_DISTRICT A ON T.PROV_CODE = A.CODE
                                AND T.ACTIVE = A.ACTIVE
             LEFT JOIN BSE.T_BAS_DISTRICT B ON T.CITY_CODE = B.CODE
                                AND T.ACTIVE = B.ACTIVE
             LEFT JOIN BSE.T_BAS_DISTRICT C ON T.COUNTY_CODE = C.CODE
                                AND T.ACTIVE = C.ACTIVE
		]]>
		<where>
			<if test="stationNumber != null and stationNumber != ''">
				T.STATION_NUMBER = #{stationNumber,jdbcType=VARCHAR}
			</if>
			<if test="active != null and active != ''">
				AND T.ACTIVE = #{active,jdbcType=CHAR}
			</if>
			<if test="branchType != null and branchType != ''">
				AND T.BRANCHTYPE = #{branchType,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
</mapper>