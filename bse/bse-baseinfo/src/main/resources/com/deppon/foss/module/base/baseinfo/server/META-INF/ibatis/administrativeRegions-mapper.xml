<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- administrativeRegions-mapper.xml 行政区域 -->
<mapper namespace="foss.bse.bse-baseinfo.administrativeRegions" >

	<resultMap id="administrativeRegionsQueryResultMap"
   			type="com.deppon.foss.module.base.baseinfo.api.shared.domain.AdministrativeRegionsEntity">
		<result property="id" column="ID"  jdbcType="VARCHAR" />
		<result property="code" column="CODE"  jdbcType="VARCHAR" />
		<result property="name" column="NAME"  jdbcType="VARCHAR" />
		<result property="simpleName" column="SIMPLE_NAME"  jdbcType="VARCHAR" />
		<result property="availableName" column="AVAILABLE_NAME"  jdbcType="VARCHAR" />
		<result property="parentDistrictCode" column="PARENT_DISTRICT_CODE"  jdbcType="VARCHAR" />
		<result property="parentDistrictName" column="PARENT_DISTRICT_NAME"  jdbcType="VARCHAR" />
		<result property="virtualDistrictId" column="VIRTUAL_DISTRICT_ID"  jdbcType="VARCHAR" />
		<result property="degree" column="DEGREE"  jdbcType="VARCHAR" />
		<result property="createDate" column="CREATE_TIME"  jdbcType="TIMESTAMP" />
		<result property="modifyDate" column="MODIFY_TIME"  jdbcType="TIMESTAMP" />
		<result property="active" column="ACTIVE"  jdbcType="CHAR" />
		<result property="createUser" column="CREATE_USER_CODE"  jdbcType="VARCHAR" />
		<result property="modifyUser" column="MODIFY_USER_CODE"  jdbcType="VARCHAR" />
		<result property="regionsuffix" column="REGIONSUFFIX"  jdbcType="VARCHAR" />
		<result property="versionNo" column="VERSION_NO"  jdbcType="NUMERIC" />
		<result property="pinYin" column="PINYIN"  jdbcType="VARCHAR" />
		<result property="pinYinAbbr" column="PINYIN_ABBR"  jdbcType="VARCHAR" />
		<result property="isHotCity" column="IS_HOT_CITY"  jdbcType="VARCHAR" />
	</resultMap>

	<!-- 插入数据 ： -->
	<insert id="addAdministrativeRegions"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.AdministrativeRegionsEntity">
	
		INSERT INTO BSE.T_BAS_DISTRICT(
		/** 综合:插入数据  **/
		ID,
		CODE,
		NAME,
		SIMPLE_NAME,
		AVAILABLE_NAME,
		PARENT_DISTRICT_CODE,
		PARENT_DISTRICT_NAME,
		VIRTUAL_DISTRICT_ID,
		DEGREE,
		CREATE_TIME,
		MODIFY_TIME,
		ACTIVE,
		CREATE_USER_CODE,
		MODIFY_USER_CODE,
		REGIONSUFFIX,
		VERSION_NO,
		PINYIN,
		PINYIN_ABBR,
		IS_HOT_CITY
		) VALUES	
	(
		#{id, jdbcType=VARCHAR},
		#{code, jdbcType=VARCHAR},
		#{name, jdbcType=VARCHAR},
		#{simpleName, jdbcType=VARCHAR},
		#{availableName, jdbcType=VARCHAR},
		#{parentDistrictCode, jdbcType=VARCHAR},
		#{parentDistrictName, jdbcType=VARCHAR},
		#{virtualDistrictId, jdbcType=VARCHAR},
		#{degree, jdbcType=VARCHAR},
		#{createDate, jdbcType=TIMESTAMP},
		#{modifyDate, jdbcType=TIMESTAMP},
		#{active, jdbcType=CHAR},
		#{createUser, jdbcType=VARCHAR},
		#{modifyUser, jdbcType=VARCHAR},
		#{regionsuffix, jdbcType=VARCHAR},
		#{versionNo, jdbcType=NUMERIC},
		#{pinYin, jdbcType=VARCHAR},
		#{pinYinAbbr, jdbcType=VARCHAR},
		#{isHotCity, jdbcType=CHAR}
	)
	</insert> 

	<!-- 根据CODE 作废数据： -->
	<update id="deleteAdministrativeRegions" 
		parameterType="map">
	
		UPDATE BSE.T_BAS_DISTRICT A 
		/** 综合:根据CODE 作废数据  **/
		SET A.ACTIVE=#{entity.active,jdbcType=CHAR},
			A.VERSION_NO=#{entity.versionNo,jdbcType=NUMERIC},
			A.MODIFY_USER_CODE=#{entity.modifyUser,jdbcType=VARCHAR}, 
			A.MODIFY_TIME = #{entity.modifyDate,jdbcType=TIMESTAMP} 
		<where>
			A.CODE=#{entity.code,jdbcType=VARCHAR} 
			AND  A.ACTIVE=#{conditionActive,jdbcType=CHAR}
		</where>
	</update>

	<!-- 根据CODE批量作废 -->
	<update id="deleteAdministrativeRegionsMore"
		parameterType="map">
		UPDATE BSE.T_BAS_DISTRICT A 
		/** 综合:根据CODE批量作废  **/
		SET A.ACTIVE=#{entity.active,jdbcType=CHAR},
			A.VERSION_NO=#{entity.versionNo,jdbcType=NUMERIC},
			A.MODIFY_USER_CODE=#{entity.modifyUser,jdbcType=VARCHAR}, 
			A.MODIFY_TIME = #{entity.modifyDate,jdbcType=TIMESTAMP} 
        <where>
            <if test="codes!=null and codes.length > 0">
                CODE in
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            #{code} 
	            </foreach>
            </if>
            AND  A.ACTIVE=#{conditionActive,jdbcType=CHAR}
        </where>       
	</update>

	<!-- 根据CODE 更新数据：由于更新是先作废再插入，所以这个映射用不上： -->
	<update id="updateAdministrativeRegions" 
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.AdministrativeRegionsEntity">
		UPDATE BSE.T_BAS_DISTRICT A SET 
		/** 综合:根据CODE 更新数据：由于更新是先作废再插入，所以这个映射用不上  **/
		A.ID = #{id, jdbcType=VARCHAR},
		A.CODE = #{code, jdbcType=VARCHAR},
		A.NAME = #{name, jdbcType=VARCHAR},
		A.SIMPLE_NAME = #{simpleName, jdbcType=VARCHAR},
		A.AVAILABLE_NAME = #{availableName, jdbcType=VARCHAR},
		A.PARENT_DISTRICT_CODE = #{parentDistrictCode, jdbcType=VARCHAR},
		A.PARENT_DISTRICT_NAME = #{parentDistrictName, jdbcType=VARCHAR},
		A.VIRTUAL_DISTRICT_ID = #{virtualDistrictId, jdbcType=VARCHAR},
		A.DEGREE = #{degree, jdbcType=VARCHAR},
		A.CREATE_TIME = #{createDate, jdbcType=TIMESTAMP},
		A.MODIFY_TIME = #{modifyDate, jdbcType=TIMESTAMP},
		A.ACTIVE = #{active, jdbcType=CHAR},
		A.CREATE_USER_CODE = #{createUser, jdbcType=VARCHAR},
		A.MODIFY_USER_CODE = #{modifyUser, jdbcType=VARCHAR},
		A.REGIONSUFFIX = #{regionsuffix, jdbcType=VARCHAR},
		A.VERSION_NO = #{versionNo, jdbcType=NUMERIC},
		A.PINYIN = #{pinYin, jdbcType=VARCHAR},
		A.PINYIN_ABBR = #{pinYinAbbr, jdbcType=VARCHAR},
		<where>
			A.CODE = #{code,jdbcType=VARCHAR}	
		</where>
	</update>



	<!-- 下面全为查询 -->

	<sql id="query_administrativeRegions_param">
		A.ID AS ID,		/** ID     **/ 
		A.CODE AS CODE,		/** 行政区域编码     **/ 
		A.NAME AS NAME,		/** 区域全称     **/ 
		A.SIMPLE_NAME AS SIMPLE_NAME,		/** 简称     **/ 
		A.AVAILABLE_NAME AS AVAILABLE_NAME,		/** 可用名称     **/ 
		A.PARENT_DISTRICT_CODE AS PARENT_DISTRICT_CODE,		/** 上级行政区域编码     **/ 
		B.NAME AS PARENT_DISTRICT_NAME,		/** 上级行政区域名称     **/ 
		A.VIRTUAL_DISTRICT_ID AS VIRTUAL_DISTRICT_ID,		/** 虚拟行政区域     **/ 
		A.DEGREE AS DEGREE,		/** 行政区域级别     **/ 
		A.CREATE_TIME AS CREATE_TIME,		/** 创建时间     **/ 
		A.MODIFY_TIME AS MODIFY_TIME,		/** 最后修改时间     **/ 
		A.ACTIVE AS ACTIVE,		/** 是否启用     **/ 
		A.CREATE_USER_CODE AS CREATE_USER_CODE,		/** 创建人     **/ 
		A.MODIFY_USER_CODE AS MODIFY_USER_CODE,		/** 更新人     **/ 
		A.VERSION_NO AS VERSION_NO,		/** 数据版本号     **/ 
		A.REGIONSUFFIX AS REGIONSUFFIX,		/** 后缀     **/
		A.PINYIN AS PINYIN,		/** 拼音     **/
		A.PINYIN_ABBR AS PINYIN_ABBR,		/** 拼音简码     **/
		A.IS_HOT_CITY AS IS_HOT_CITY	
	</sql>
	<sql id="query_administrativeRegions_param2">
		A.ID AS ID,		/** ID     **/ 
		A.CODE AS CODE,		/** 行政区域编码     **/ 
		A.NAME AS NAME,		/** 区域全称     **/ 
		A.SIMPLE_NAME AS SIMPLE_NAME,		/** 简称     **/ 
		A.AVAILABLE_NAME AS AVAILABLE_NAME,		/** 可用名称     **/ 
		A.PARENT_DISTRICT_CODE AS PARENT_DISTRICT_CODE,		/** 上级行政区域编码     **/ 
		A.VIRTUAL_DISTRICT_ID AS VIRTUAL_DISTRICT_ID,		/** 虚拟行政区域     **/ 
		A.DEGREE AS DEGREE,		/** 行政区域级别     **/ 
		A.CREATE_TIME AS CREATE_TIME,		/** 创建时间     **/ 
		A.MODIFY_TIME AS MODIFY_TIME,		/** 最后修改时间     **/ 
		A.ACTIVE AS ACTIVE,		/** 是否启用     **/ 
		A.CREATE_USER_CODE AS CREATE_USER_CODE,		/** 创建人     **/ 
		A.MODIFY_USER_CODE AS MODIFY_USER_CODE,		/** 更新人     **/ 
		A.VERSION_NO AS VERSION_NO,		/** 数据版本号     **/ 
		A.REGIONSUFFIX AS REGIONSUFFIX,		/** 后缀     **/
		A.PINYIN AS PINYIN,		/** 拼音     **/
		A.PINYIN_ABBR AS PINYIN_ABBR,		/** 拼音简码     **/
		A.IS_HOT_CITY AS IS_HOT_CITY	
	</sql>

	<!-- 根据 CODE 精确查询数据 -->
	<select id="queryAdministrativeRegionsByCode" resultMap="administrativeRegionsQueryResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.AdministrativeRegionsEntity">
		<![CDATA[
		  SELECT 
		  /** 综合:根据 CODE 精确查询数据  **/
		]]>
		<include refid="query_administrativeRegions_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_DISTRICT A 
	    	LEFT JOIN BSE.T_BAS_DISTRICT B on A.PARENT_DISTRICT_CODE=B.CODE AND B.ACTIVE= #{active,jdbcType=CHAR}
		]]>
		<where>
			A.CODE=#{code} 
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</select>
	
	<!-- 根据Code查询Name -->
	<select id="queryRegionNameByCode" resultType="java.lang.String" parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.AdministrativeRegionsEntity" >
		SELECT NAME
		/** 综合:根据Code查询Name **/
		FROM BSE.T_BAS_DISTRICT
		WHERE CODE = #{code, jdbcType=VARCHAR}
		AND ACTIVE = #{active,jdbcType=CHAR}
	</select>
	
	
	<!-- 通过 标识编码CODE,是否有效ACTIVE精确查询
			两个参数都可传空，当传空时，不做为查询条件，查询时，取更新时间最近的一条 -->
	<select id="queryAdministrativeRegionsByCodeActive" 
			resultMap="administrativeRegionsQueryResultMap"
			parameterType="map">
		SELECT 
		/** 综合:通过 标识编码CODE,是否有效ACTIVE精确查询两个参数都可传空，当传空时，不做为查询条件，查询时，取更新时间最近的一条  **/
		<include refid="query_administrativeRegions_param2" />
    	FROM BSE.T_BAS_DISTRICT A ,
			(SELECT CODE, MAX(MODIFY_TIME) AS MODIFY_TIME 
	          FROM BSE.T_BAS_DISTRICT
	    <where>
	      	<if test="codes!=null">
	        	AND CODE in
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            #{code} 
	            </foreach>
	      	</if>
	      	<if test="active!=null and active != ''">
	        	AND ACTIVE = #{active,jdbcType=VARCHAR} 
	      	</if>
		</where>
	         GROUP BY CODE) B 		    
	    <where>
	    	A.CODE=B.CODE AND A.MODIFY_TIME=B.MODIFY_TIME 		    	
	      	<if test="active!=null and active != ''">
	        	AND A.ACTIVE = #{active,jdbcType=VARCHAR} 
	      	</if> 
	    </where>   
	</select>

	<!-- 根据 CODE 批量精确查询数据 -->
	<select id="queryAdministrativeRegionsBatchByCode" resultMap="administrativeRegionsQueryResultMap"
		parameterType="map">
		<![CDATA[
		  SELECT 
		  /** 综合:根据 CODE 批量精确查询数据 **/
		]]>
		<include refid="query_administrativeRegions_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_DISTRICT A 
	    	LEFT JOIN BSE.T_BAS_DISTRICT B on A.PARENT_DISTRICT_CODE=B.CODE AND B.ACTIVE= #{active,jdbcType=CHAR}
		]]>
		<where>
			<if test="codes!=null and codes.length > 0">
                A.CODE in
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            #{code,jdbcType=VARCHAR} 
	            </foreach>
            </if> 
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</select>

	<!-- 根据entity精确查询的查询条件 ，如果属性为空，则此属性不作为条件-->
	<sql id="query_queryAdministrativeRegionsExactByEntity_condition_param">		
		<where>
	      	<if test="id!=null and id != ''">
	        	AND A.ID = #{id,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="code!=null and code != ''">
	        	AND A.CODE = #{code,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="name!=null and name != ''">
	        	 AND A.NAME like CONCAT(CONCAT('%', #{name,jdbcType=VARCHAR}),'%')
	      	</if>
	      	<if test="simpleName!=null and simpleName != ''">
	        	AND A.SIMPLE_NAME = #{simpleName,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="availableName!=null and availableName != ''">
	        	AND A.AVAILABLE_NAME = #{availableName,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="parentDistrictCode!=null and parentDistrictCode != ''">
	        	AND A.PARENT_DISTRICT_CODE = #{parentDistrictCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="parentDistrictName!=null and parentDistrictName != ''">
	        	AND A.PARENT_DISTRICT_NAME = #{parentDistrictName,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="virtualDistrictId!=null and virtualDistrictId != ''">
	        	AND A.VIRTUAL_DISTRICT_ID = #{virtualDistrictId,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="degree!=null and degree != ''">
	        	AND A.DEGREE = #{degree,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="versionNo!=null and versionNo != ''">
	        	AND A.VERSION_NO = #{versionNo,jdbcType=NUMERIC} 
	      	</if>
	      	<if test="regionsuffix!=null and regionsuffix != ''">
	        	AND A.REGIONSUFFIX = #{regionsuffix,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="pinYin!=null and pinYin != ''">
	        	AND A.PINYIN = #{pinYin,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="pinYinAbbr!=null and pinYinAbbr != ''">
	        	AND A.PINYIN_ABBR = #{pinYinAbbr,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="isHotCity !=null and isHotCity != ''">
	        	AND A.IS_HOT_CITY = #{isHotCity,jdbcType=CHAR} 
	      	</if>
	
	      	AND A.ACTIVE =  #{active,jdbcType=CHAR} 
	      	ORDER BY A.CODE
		</where>
	</sql>
	<!-- 根据实体动态条件精确查询,如果属性的值为null或者空白则无效： -->
	<select id="queryAdministrativeRegionsExactByEntity" resultMap="administrativeRegionsQueryResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.AdministrativeRegionsEntity">
		<![CDATA[
		  SELECT 
		  /** 综合:根据实体动态条件精确查询,如果属性的值为null或者空白则无效 **/
		]]>
		<include refid="query_administrativeRegions_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_DISTRICT A 
	    	LEFT JOIN BSE.T_BAS_DISTRICT B on A.PARENT_DISTRICT_CODE=B.CODE AND B.ACTIVE= #{active,jdbcType=CHAR}
		]]>
		<include refid="query_condition_param" />
	</select>
	<!-- 根据实体动态条件精确查询总数,如果属性的值为null或者空白则无效： -->
	<select id="queryAdministrativeRegionsExactByEntityCount" resultType="Long"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.AdministrativeRegionsEntity">
		<![CDATA[
			 SELECT count(*) 
			 /** 综合:根据实体动态条件精确查询总数,如果属性的值为null或者空白则无效 **/
			 FROM BSE.T_BAS_DISTRICT A 
		]]>
		<include refid="query_queryAdministrativeRegionsExactByEntity_condition_param" />
	</select>

	<!-- 根据entity模糊查询,如果属性的值为null或者空白则无效： -->
	<sql id="query_queryAdministrativeRegionsByEntity_condition_param">		
		<where>
	      	<if test="id!=null and id != ''">
	        	AND A.ID like CONCAT(CONCAT('%', #{id,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="code!=null and code != ''">
	        	AND A.CODE like CONCAT(CONCAT('%', #{code,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="name!=null and name != ''">
	        	AND A.NAME like CONCAT(CONCAT('%', #{name,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="simpleName!=null and simpleName != ''">
	        	AND A.SIMPLE_NAME like CONCAT(CONCAT('%', #{simpleName,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="availableName!=null and availableName != ''">
	        	AND A.AVAILABLE_NAME like CONCAT(CONCAT('%', #{availableName,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="parentDistrictCode!=null and parentDistrictCode != ''">
	        	AND A.PARENT_DISTRICT_CODE like CONCAT(CONCAT('%', #{parentDistrictCode,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="parentDistrictName!=null and parentDistrictName != ''">
	        	AND A.PARENT_DISTRICT_NAME like CONCAT(CONCAT('%', #{parentDistrictName,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="virtualDistrictId!=null and virtualDistrictId != ''">
	        	AND A.VIRTUAL_DISTRICT_ID like CONCAT(CONCAT('%', #{virtualDistrictId,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="degree!=null and degree != ''">
	        	AND A.DEGREE like CONCAT(CONCAT('%', #{degree,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="regionsuffix!=null and regionsuffix != ''">
	        	AND A.REGIONSUFFIX like CONCAT(CONCAT('%', #{regionsuffix,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="versionNo!=null and versionNo != ''">
	        	AND A.VERSION_NO like CONCAT(CONCAT('%', #{versionNo,jdbcType=NUMERIC}), '%') 
	      	</if>
	      	<if test="pinYin!=null and pinYin != ''">
	        	AND A.PINYIN like CONCAT(CONCAT('%', #{pinYin,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="pinYinAbbr!=null and pinYinAbbr != ''">
	        	AND A.PINYIN_ABBR like CONCAT(CONCAT('%', #{pinYinAbbr,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="isHotCity !=null and isHotCity != ''">
	        	AND A.IS_HOT_CITY = #{isHotCity,jdbcType=CHAR} 
	      	</if>

			AND A.ACTIVE= #{active,jdbcType=CHAR} 
			ORDER BY A.CODE
		</where>
	</sql>
	<!-- 根据实体动态条件模糊查询,如果属性的值为null或者空白则无效： -->
	<select id="queryAdministrativeRegionsByEntity" resultMap="administrativeRegionsQueryResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.AdministrativeRegionsEntity">
		<![CDATA[
		  SELECT
		  /** 综合:根据实体动态条件模糊查询,如果属性的值为null或者空白则无效 **/ 
		]]>
		<include refid="query_administrativeRegions_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_DISTRICT A 
	    	LEFT JOIN BSE.T_BAS_DISTRICT B on A.PARENT_DISTRICT_CODE=B.CODE AND B.ACTIVE= #{active,jdbcType=CHAR}
		]]>
		<include refid="query_queryAdministrativeRegionsByEntity_condition_param" />
	</select>
	<!-- 根据实体动态条件模糊查询总数,如果属性的值为null或者空白则无效： -->
	<select id="queryAdministrativeRegionsByEntityCount" resultType="Long"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.AdministrativeRegionsEntity">
		<![CDATA[
			 SELECT count(*) 
			 /** 综合:根据实体动态条件模糊查询总数,如果属性的值为null或者空白则无效 **/
			 FROM BSE.T_BAS_DISTRICT A 
		]]>
		<include refid="query_queryAdministrativeRegionsByEntity_condition_param" />
	</select>
	
	<!-- 下面为特殊查询 -->
		
	<!-- 根据结点的父结点ID(parentDistrictCode)查询子结点 -->
	<select id="queryAdministrativeRegionsByParentDistrictCode" 
			resultMap="administrativeRegionsQueryResultMap"
			parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.AdministrativeRegionsEntity">
	<![CDATA[
		  SELECT 
		  /** 综合:根据结点的父结点ID(parentDistrictCode)查询子结点 **/
	]]>
		<include refid="query_administrativeRegions_param" />
	<![CDATA[
		FROM BSE.T_BAS_DISTRICT A 
	    LEFT JOIN BSE.T_BAS_DISTRICT B on A.PARENT_DISTRICT_CODE=B.CODE AND B.ACTIVE= #{active,jdbcType=CHAR}
	]]>
		<where>
     	A.PARENT_DISTRICT_CODE=#{parentDistrictCode}  
      	AND A.ACTIVE=#{active, jdbcType=CHAR}    
		</where>
	</select>	
	
	<!-- 查询根结点 -->
	<select id="queryRoot" resultMap="administrativeRegionsQueryResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.AdministrativeRegionsEntity">
	SELECT 
	/** 综合:查询根结点 **/
		A.ID AS ID,
		A.CODE AS CODE,
		A.NAME AS NAME,
		A.SIMPLE_NAME AS SIMPLE_NAME,
		A.AVAILABLE_NAME AS AVAILABLE_NAME,
		A.REGIONSUFFIX AS REGIONSUFFIX,
		A.PARENT_DISTRICT_CODE AS PARENT_DISTRICT_CODE,
		A.VIRTUAL_DISTRICT_ID AS VIRTUAL_DISTRICT_ID,
		A.DEGREE AS DEGREE,
		A.VERSION_NO AS VERSION_NO,		/** 数据版本号     **/ 
		A.ACTIVE AS ACTIVE,
		A.PINYIN AS PINYIN,		/** 拼音     **/
		A.PINYIN_ABBR AS PINYIN_ABBR,		/** 拼音简码     **/
		A.IS_HOT_CITY AS IS_HOT_CITY
	FROM BSE.T_BAS_DISTRICT A  
		<where>
      	A.PARENT_DISTRICT_CODE IS NULL 
      	AND A.ACTIVE=#{active, jdbcType=CHAR}
		</where>
	</select>
	

	<!-- 查询所有 行政区域 信息 以供下载 -->
	<select id="queryAdministrativeRegionsForDownload"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.AdministrativeRegionsEntity"
		resultMap="administrativeRegionsQueryResultMap">
		<![CDATA[
			SELECT
			/** 综合:查询所有 行政区域 信息 以供下载 **/
		]]>
				A.ID AS ID,		/** ID     **/ 
				A.CODE AS CODE,		/** 行政区域编码     **/ 
				A.NAME AS NAME,		/** 区域全称     **/ 
				A.SIMPLE_NAME AS SIMPLE_NAME,		/** 简称     **/ 
				A.AVAILABLE_NAME AS AVAILABLE_NAME,		/** 可用名称     **/ 
				A.PARENT_DISTRICT_CODE AS PARENT_DISTRICT_CODE,		/** 上级行政区域编码     **/ 
				A.VIRTUAL_DISTRICT_ID AS VIRTUAL_DISTRICT_ID,		/** 虚拟行政区域     **/ 
				A.DEGREE AS DEGREE,		/** 行政区域级别     **/ 
				A.CREATE_TIME AS CREATE_TIME,		/** 创建时间     **/ 
				A.MODIFY_TIME AS MODIFY_TIME,		/** 最后修改时间     **/ 
				A.ACTIVE AS ACTIVE,		/** 是否启用     **/ 
				A.CREATE_USER_CODE AS CREATE_USER_CODE,		/** 创建人     **/ 
				A.MODIFY_USER_CODE AS MODIFY_USER_CODE,		/** 更新人     **/ 
				A.VERSION_NO AS VERSION_NO,		/** 数据版本号     **/ 
				A.REGIONSUFFIX AS REGIONSUFFIX,		/** 后缀     **/
				A.PINYIN AS PINYIN,		/** 拼音     **/
				A.PINYIN_ABBR AS PINYIN_ABBR,		/** 拼音简码     **/
				A.IS_HOT_CITY AS IS_HOT_CITY	
		<![CDATA[
			FROM BSE.T_BAS_DISTRICT A 
		]]>
		<where> 
			<if test="versionNo != null">
				AND A.VERSION_NO >= #{versionNo,jdbcType=NUMERIC}
			</if>
		</where>
		<![CDATA[
			ORDER BY A.VERSION_NO,A.ID ASC
		]]>
	</select>
	
	<!-- 获得整个表的最新版本号 -->
	<select id="getLastUpdateTime" resultType="long">
		SELECT /** 综合:获得整个表的最新版本号 **/ MAX(VERSION_NO) FROM  BSE.T_BAS_DISTRICT
	</select>
	
	<!-- 根据entity精确查询的查询条件 ，如果属性为空，则此属性不作为条件-->
	<sql id="query_condition_param">		
		<where>
	      	<if test="id!=null and id != ''">
	        	AND A.ID = #{id,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="code!=null and code != ''">
	        	AND A.CODE = #{code,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="name!=null and name != ''">
	        	 AND A.NAME = #{name,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="simpleName!=null and simpleName != ''">
	        	AND A.SIMPLE_NAME = #{simpleName,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="availableName!=null and availableName != ''">
	        	AND A.AVAILABLE_NAME = #{availableName,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="parentDistrictCode!=null and parentDistrictCode != ''">
	        	AND A.PARENT_DISTRICT_CODE = #{parentDistrictCode,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="parentDistrictName!=null and parentDistrictName != ''">
	        	AND A.PARENT_DISTRICT_NAME = #{parentDistrictName,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="virtualDistrictId!=null and virtualDistrictId != ''">
	        	AND A.VIRTUAL_DISTRICT_ID = #{virtualDistrictId,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="degree!=null and degree != ''">
	        	AND A.DEGREE = #{degree,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="versionNo!=null and versionNo != ''">
	        	AND A.VERSION_NO = #{versionNo,jdbcType=NUMERIC} 
	      	</if>
	      	<if test="regionsuffix!=null and regionsuffix != ''">
	        	AND A.REGIONSUFFIX = #{regionsuffix,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="pinYin!=null and pinYin != ''">
	        	AND A.PINYIN = #{pinYin,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="pinYinAbbr!=null and pinYinAbbr != ''">
	        	AND A.PINYIN_ABBR = #{pinYinAbbr,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="isHotCity !=null and isHotCity != ''">
	        	AND A.IS_HOT_CITY = #{isHotCity,jdbcType=CHAR} 
	      	</if>
	      	
	      	AND A.ACTIVE =  #{active,jdbcType=CHAR} 
	      	ORDER BY A.CODE
		</where>
	</sql> 
	<!-- 根据实体城市名称金准查询,如果属性的值为null或者空白则无效： -->
	<select id="queryAdministrativeRegionsByName" resultMap="administrativeRegionsQueryResultMap" parameterType="map">
		<![CDATA[
		  SELECT  /** 综合:根据名称获得行政区域信息 **/
		]]>
		<include refid="query_administrativeRegions_param2" /> 
		<![CDATA[
	    	FROM BSE.T_BAS_DISTRICT A 
	    	WHERE  A.ACTIVE= #{active,jdbcType=CHAR} 
	    	AND  A.NAME = #{name,jdbcType=CHAR}
		]]>
	</select>
	
	<!-- 数据字段 -->
	<sql id="serverCoordinates_Column_List">
		dep.EXPRESS_DELIVERY_COORDINATE as expressDeliveryCoordinate,
		org.DEP_COORDINATE as depCoordinate,
		org.NAME as name,
		'Pilot' as mapType
	</sql>
	
	<sql id="serverCoordinatesNot_Column_List">
		dep.EXPRESS_DELIVERY_COORDINATE as expressDeliveryCoordinate,
		org.DEP_COORDINATE as depCoordinate,
		org.NAME as name,
		'NonPilot' as mapType
	</sql>
	
	<!-- 查询出区县下的快递试点网点的点坐标和服务范围坐标 -->
	<resultMap id="serverCoordinatesResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.dto.AdministrativeRegionsDto">
		<result column="EXPRESS_DELIVERY_COORDINATE" jdbcType="VARCHAR" property="expressDeliveryCoordinate" />
		<result column="DEP_COORDINATE" jdbcType="VARCHAR" property="depCoordinate" />
		<result column="NAME" jdbcType="VARCHAR" property="name" />
		<result column="Pilot" jdbcType="VARCHAR" property="mapType" />
	</resultMap>
	
	<!-- 查询出区县下的非试点快递网点的点坐标和服务范围坐标 -->
	<resultMap id="serverCoordinatesNotResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.dto.AdministrativeRegionsDto">
		<result column="EXPRESS_DELIVERY_COORDINATE" jdbcType="VARCHAR" property="expressDeliveryCoordinate" />
		<result column="DEP_COORDINATE" jdbcType="VARCHAR" property="depCoordinate" />
		<result column="NAME" jdbcType="VARCHAR" property="name" />
		<result column="NonPilot" jdbcType="VARCHAR" property="mapType" />
	</resultMap>
	
	<!-- 查询出区县下的快递试点网点的点坐标和服务范围坐标 -->
	<sql id="queryServerCoordinatesWhere">
		<where>
			dep.CAN_EXPRESS_PICKUP_TO_DOOR='Y'  and
			dep.CAN_EXPRESS_DELIVERY='Y' and
			dep.ACTIVE='Y' and
			dep.CODE=org.CODE and
			org.ACTIVE='Y' 
			<if test="countyCode != null and countyCode != ''">
				and org.COUNTY_CODE=#{countyCode,jdbcType=VARCHAR}
			</if>
		</where>
	</sql>
	
	<!-- 查询出区县下的非试点快递网点的点坐标和服务范围坐标 -->
	<sql id="queryServerCoordinatesNotWhere">
		<where>
			dep.CAN_EXPRESS_PICKUP_TO_DOOR='N'  and   
			dep.CAN_EXPRESS_DELIVERY='Y' and
			dep.ACTIVE='Y' and
			dep.CODE=org.CODE and
			org.ACTIVE='Y' 
			<if test="countyCode != null and countyCode != ''">
				and org.COUNTY_CODE=#{countyCode,jdbcType=VARCHAR}
			</if>
		</where>
	</sql>
	
	<!-- 查询出区县下的快递试点网点的点坐标和服务范围坐标 -->
	<select id="queryServerCoordinates"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.dto.AdministrativeRegionsDto"
		resultMap="serverCoordinatesResultMap">
		<![CDATA[
			SELECT
			/** 综合:查询区县下的快递试点网点的点坐标和服务范围坐标 **/
		]]>
		<include refid="serverCoordinates_Column_List" />

		FROM  bse.T_BAS_SALES_DEPARTMENT dep, bse.T_BAS_ORG  org 

		<include refid="queryServerCoordinatesWhere" />
	</select>
	
	<!-- 查询出区县下的非试点快递网点的点坐标和服务范围坐标 -->
	<select id="queryServerCoordinatesNot"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.dto.AdministrativeRegionsDto"
		resultMap="serverCoordinatesNotResultMap">
		<![CDATA[
			SELECT
			/** 综合:查询区县下的非试点快递网点的点坐标和服务范围坐标 **/
		]]>
		<include refid="serverCoordinatesNot_Column_List" />

		FROM  bse.T_BAS_SALES_DEPARTMENT dep, bse.T_BAS_ORG  org 

		<include refid="queryServerCoordinatesNotWhere" />
	</select>
</mapper>
