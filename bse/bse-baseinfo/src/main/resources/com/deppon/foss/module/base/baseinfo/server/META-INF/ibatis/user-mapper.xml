<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	用户信息
 -->
<mapper namespace="foss.bse.bse-baseinfo.user">
	<resultMap id="userSimplAliasResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		<id property="id" column="USER_ENTITY_ID" />
		<result property="userName" column="USER_ENTITY_USER_NAME" />
		<result property="password" column="USER_ENTITY_PASSWORD" />
		<result property="empName" column="USER_ENTITY_EMP_NAME" />
		<result property="empCode" column="USER_ENTITY_EMP_CODE" />
		<result property="lastLogin" column="USER_ENTITY_LAST_LOGIN" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="title" column="USER_ENTITY_TITLE" />
		<result property="active" column="USER_ENTITY_ACTIVE" />
		<result property="beginDate" column="USER_ENTITY_BEGIN_TIME" />
		<result property="endDate" column="USER_ENTITY_END_TIME" />
		<result property="createUser" column="USER_ENTITY_CREATE_USER_CODE" javaType="String" jdbcType="VARCHAR" />
		<result property="createDate" column="USER_ENTITY_CREATE_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="modifyUser" column="USER_ENTITY_MODIFY_USER_CODE" javaType="String" jdbcType="VARCHAR" />
		<result property="modifyDate" column="USER_ENTITY_MODIFY_TIME" javaType="Date" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="select_simple_alias_param">
		USER_ENTITY.ID AS USER_ENTITY_ID,
		USER_ENTITY.USER_NAME AS USER_ENTITY_USER_NAME,
		USER_ENTITY.EMP_NAME AS USER_ENTITY_EMP_NAME,
		USER_ENTITY.EMP_CODE AS USER_ENTITY_EMP_CODE,
		USER_ENTITY.PASSWORD AS USER_ENTITY_PASSWORD,
		USER_ENTITY.LAST_LOGIN AS USER_ENTITY_LAST_LOGIN,
		USER_ENTITY.TITLE AS
		USER_ENTITY_TITLE,
		USER_ENTITY.ACTIVE AS USER_ENTITY_ACTIVE,
		USER_ENTITY.BEGIN_TIME AS USER_ENTITY_BEGIN_TIME,
		USER_ENTITY.END_TIME
		AS USER_ENTITY_END_TIME,
		USER_ENTITY.CREATE_USER_CODE AS
		USER_ENTITY_CREATE_USER_CODE,
		USER_ENTITY.CREATE_TIME AS
		USER_ENTITY_CREATE_TIME,
		USER_ENTITY.MODIFY_USER_CODE AS
		USER_ENTITY_MODIFY_USER_CODE,
		USER_ENTITY.MODIFY_TIME AS
		USER_ENTITY_MODIFY_TIME
	</sql>
	<resultMap id="userAliasResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		<id property="id" column="USER_ENTITY_ID" />
		<result property="userName" column="USER_ENTITY_USER_NAME" />
		<result property="password" column="USER_ENTITY_PASSWORD" />
		<result property="empName" column="USER_ENTITY_EMP_NAME" />
		<result property="empCode" column="USER_ENTITY_EMP_CODE" />
		<result property="lastLogin" column="USER_ENTITY_LAST_LOGIN" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="title" column="USER_ENTITY_TITLE" />
		<result property="active" column="USER_ENTITY_ACTIVE" />
		<result property="beginDate" column="USER_ENTITY_BEGIN_TIME" />
		<result property="endDate" column="USER_ENTITY_END_TIME" />
		<result property="createUser" column="USER_ENTITY_CREATE_USER_CODE" javaType="String" jdbcType="VARCHAR" />
		<result property="createDate" column="USER_ENTITY_CREATE_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="modifyUser" column="USER_ENTITY_MODIFY_USER_CODE" javaType="String" jdbcType="VARCHAR" />
		<result property="modifyDate" column="USER_ENTITY_MODIFY_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<association property="employee" column="USER_ENTITY_EMP_CODE" javaType="com.deppon.foss.module.base.baseinfo.api.shared.domain.EmployeeEntity">
			<id property="empCode" column="USER_ENTITY_EMP_CODE" />
		</association>
	</resultMap>
	<sql id="select_param">
		USER_ENTITY.ID AS USER_ENTITY_ID,
		USER_ENTITY.USER_NAME AS USER_ENTITY_USER_NAME,
		USER_ENTITY.EMP_NAME AS USER_ENTITY_EMP_NAME,
		USER_ENTITY.EMP_CODE AS USER_ENTITY_EMP_CODE,
		USER_ENTITY.PASSWORD AS USER_ENTITY_PASSWORD,
		USER_ENTITY.LAST_LOGIN AS USER_ENTITY_LAST_LOGIN,
		USER_ENTITY.TITLE AS
		USER_ENTITY_TITLE,
		USER_ENTITY.ACTIVE AS USER_ENTITY_ACTIVE,
		USER_ENTITY.BEGIN_TIME AS USER_ENTITY_BEGIN_TIME,
		USER_ENTITY.END_TIME
		AS USER_ENTITY_END_TIME,
		USER_ENTITY.CREATE_USER_CODE AS
		USER_ENTITY_CREATE_USER_CODE,
		USER_ENTITY.CREATE_TIME AS
		USER_ENTITY_CREATE_TIME,
		USER_ENTITY.MODIFY_USER_CODE AS
		USER_ENTITY_MODIFY_USER_CODE,
		USER_ENTITY.MODIFY_TIME AS
		USER_ENTITY_MODIFY_TIME,
		USER_ENTITY.EMP_CODE AS USER_ENTITY_EMP_CODE
	</sql>
	<resultMap id="userAssociationEmployeeResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		<id property="id" column="USER_ENTITY_ID" />
		<result property="userName" column="USER_ENTITY_USER_NAME" />
		<result property="password" column="USER_ENTITY_PASSWORD" />
		<result property="empName" column="USER_ENTITY_EMP_NAME" />
		<result property="empCode" column="USER_ENTITY_EMP_CODE" />
		<result property="lastLogin" column="USER_ENTITY_LAST_LOGIN" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="title" column="USER_ENTITY_TITLE" />
		<result property="active" column="USER_ENTITY_ACTIVE" />
		<result property="beginDate" column="USER_ENTITY_BEGIN_TIME" />
		<result property="endDate" column="USER_ENTITY_END_TIME" />
		<result property="createUser" column="USER_ENTITY_CREATE_USER_CODE" javaType="String" jdbcType="VARCHAR" />
		<result property="createDate" column="USER_ENTITY_CREATE_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="modifyUser" column="USER_ENTITY_MODIFY_USER_CODE" javaType="String" jdbcType="VARCHAR" />
		<result property="modifyDate" column="USER_ENTITY_MODIFY_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<association property="employee" resultMap="foss.bse.bse-baseinfo.employee.employeeSimpleAliasResultMap" />
	</resultMap>
	<sql id="user_association_employee_param">
		USER_ENTITY.ID AS USER_ENTITY_ID,
		USER_ENTITY.USER_NAME AS USER_ENTITY_USER_NAME,
		USER_ENTITY.EMP_NAME AS USER_ENTITY_EMP_NAME,
		USER_ENTITY.EMP_CODE AS USER_ENTITY_EMP_CODE,
		USER_ENTITY.PASSWORD AS USER_ENTITY_PASSWORD,
		USER_ENTITY.LAST_LOGIN AS USER_ENTITY_LAST_LOGIN,
		USER_ENTITY.TITLE AS
		USER_ENTITY_TITLE,
		USER_ENTITY.ACTIVE AS USER_ENTITY_ACTIVE,
		USER_ENTITY.BEGIN_TIME AS USER_ENTITY_BEGIN_TIME,
		USER_ENTITY.END_TIME
		AS USER_ENTITY_END_TIME,
		USER_ENTITY.CREATE_USER_CODE AS
		USER_ENTITY_CREATE_USER_CODE,
		USER_ENTITY.CREATE_TIME AS
		USER_ENTITY_CREATE_TIME,
		USER_ENTITY.MODIFY_USER_CODE AS
		USER_ENTITY_MODIFY_USER_CODE,
		USER_ENTITY.MODIFY_TIME AS
		USER_ENTITY_MODIFY_TIME,
		<include refid="foss.bse.bse-baseinfo.employee.select_simple_alias_param" />
	</sql>
	<resultMap id="userAssociationEmployeeOrgResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		<id property="id" column="USER_ENTITY_ID" />
		<result property="userName" column="USER_ENTITY_USER_NAME" />
		<result property="password" column="USER_ENTITY_PASSWORD" />
		<result property="empName" column="USER_ENTITY_EMP_NAME" />
		<result property="empCode" column="USER_ENTITY_EMP_CODE" />
		<result property="lastLogin" column="USER_ENTITY_LAST_LOGIN" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="title" column="USER_ENTITY_TITLE" />
		<result property="active" column="USER_ENTITY_ACTIVE" />
		<result property="beginDate" column="USER_ENTITY_BEGIN_TIME" />
		<result property="endDate" column="USER_ENTITY_END_TIME" />
		<result property="createUser" column="USER_ENTITY_CREATE_USER_CODE" javaType="String" jdbcType="VARCHAR" />
		<result property="createDate" column="USER_ENTITY_CREATE_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="modifyUser" column="USER_ENTITY_MODIFY_USER_CODE" javaType="String" jdbcType="VARCHAR" />
		<result property="modifyDate" column="USER_ENTITY_MODIFY_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<association property="employee" resultMap="foss.bse.bse-baseinfo.employee.employeeAssociationResultMap" />
	</resultMap>
	<sql id="user_association_param">
		USER_ENTITY.ID AS USER_ENTITY_ID,
		USER_ENTITY.USER_NAME AS USER_ENTITY_USER_NAME,
		USER_ENTITY.EMP_NAME AS USER_ENTITY_EMP_NAME,
		USER_ENTITY.EMP_CODE AS USER_ENTITY_EMP_CODE,
		USER_ENTITY.PASSWORD AS USER_ENTITY_PASSWORD,
		USER_ENTITY.LAST_LOGIN AS USER_ENTITY_LAST_LOGIN,
		USER_ENTITY.TITLE AS
		USER_ENTITY_TITLE,
		USER_ENTITY.ACTIVE AS USER_ENTITY_ACTIVE,
		USER_ENTITY.BEGIN_TIME AS USER_ENTITY_BEGIN_TIME,
		USER_ENTITY.END_TIME AS USER_ENTITY_END_TIME,
		USER_ENTITY.CREATE_USER_CODE AS
		USER_ENTITY_CREATE_USER_CODE,
		USER_ENTITY.CREATE_TIME AS
		USER_ENTITY_CREATE_TIME,
		USER_ENTITY.MODIFY_USER_CODE AS
		USER_ENTITY_MODIFY_USER_CODE,
		USER_ENTITY.MODIFY_TIME AS
		USER_ENTITY_MODIFY_TIME
	</sql>
	<!-- 更新用户更后登录时间 -->
	<update id="updateLastLoginDate" parameterType="string">
		UPDATE   /** 综合:更新用户更后登录时间  **/
		BSE.T_BAS_USER
		SET LAST_LOGIN = sysdate
		WHERE ID = #{id}
	</update>
	<!-- 登录加载用户方法 -->
	<!-- ############################################################################################### -->
	<select id="getByUserName" resultMap="userResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		<![CDATA[
			SELECT
			/** 综合:登录加载用户方法  **/
		]]>
		<include refid="user_ResultMap_Param" />
		<![CDATA[
			FROM BSE.T_BAS_USER
			WHERE USER_NAME = #{userName} AND ACTIVE=#{active,jdbcType=CHAR}
		]]>
	</select>
	<!-- 缓存加载用户信息方法 -->
	<!-- ############################################################################################### -->
	<resultMap id="userAssociationRoleidsOrgidsResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		<id property="id" column="USER_ENTITY_ID" />
		<result property="userName" column="USER_ENTITY_USER_NAME" />
		<result property="password" column="USER_ENTITY_PASSWORD" />
		<result property="empName" column="USER_ENTITY_EMP_NAME" />
		<result property="lastLogin" column="USER_ENTITY_LAST_LOGIN" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="title" column="USER_ENTITY_TITLE" />
		<result property="active" column="USER_ENTITY_ACTIVE" />
		<result property="beginDate" column="USER_ENTITY_BEGIN_TIME" />
		<result property="endDate" column="USER_ENTITY_END_TIME" />
		<result property="createUser" column="USER_ENTITY_CREATE_USER_CODE" javaType="String" jdbcType="VARCHAR" />
		<result property="createDate" column="USER_ENTITY_CREATE_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="modifyUser" column="USER_ENTITY_MODIFY_USER_CODE" javaType="String" jdbcType="VARCHAR" />
		<result property="modifyDate" column="USER_ENTITY_MODIFY_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<collection property="roleids" column="USERROLEORG_ROLE_CODE" ofType="String">
			<result column="USERROLEORG_ROLE_CODE" />
		</collection>
		<collection property="orgids" column="USERROLEORG_ORG_CODE" ofType="String">
			<result column="USERROLEORG_ORG_CODE" />
		</collection>
	</resultMap>
	<sql id="user_roleId_orgId_sql">
		<![CDATA[
			SELECT
			/** 综合:缓存加载用户信息方法  **/
				USERROLEORG.ROLE_CODE	AS USERROLEORG_ROLE_CODE,
				USERROLEORG.ORG_CODE	AS USERROLEORG_ORG_CODE,
		]]>
		<include refid="user_association_param" />
		<![CDATA[
		  	FROM BSE.T_BAS_USER USER_ENTITY,
		  		BSE.T_BAS_USER_ORG_ROLE USERROLEORG
		    WHERE USER_ENTITY.ACTIVE=#{userActive,jdbcType=CHAR}
		    	AND USER_ENTITY.EMP_CODE = USERROLEORG.EMP_CODE 
		    	AND USERROLEORG.ACTIVE=#{userRoleOrgActive,jdbcType=CHAR}
	    ]]>
	</sql>
	
	<resultMap id="userOrgResCodeUrisDtoResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.dto.UserOrgResCodeUrisDto">
		<result property="resCode" column="RESOURCE_CODE" javaType="String" jdbcType="VARCHAR"/>
		<result property="resUri" column="RESOURCE_URI" javaType="String" jdbcType="VARCHAR"/>
	</resultMap>
	
	<select id="getOrgResCodeUrisByEmpCode" parameterType="map"
		resultMap="userOrgResCodeUrisDtoResultMap">
		<![CDATA[
			SELECT 	RR.RESOURCE_CODE AS RESOURCE_CODE,
					R.ENTRY_URI AS RESOURCE_URI
		    FROM BSE.T_BAS_USER_ORG_ROLE UOR, BSE.T_BAS_ROLE_RESOURCES RR, BSE.T_BAS_RESOURCES R
		    WHERE UOR.ROLE_CODE=RR.ROLE_CODE
		    	AND RR.RESOURCE_CODE=R.CODE
		        AND UOR.EMP_CODE=#{userCode jdbcType=VARCHAR}
		        AND UOR.ORG_CODE=#{deptCode jdbcType=VARCHAR}
		        AND UOR.ACTIVE=#{orgRoleActive,jdbcType=CHAR}
		        AND RR.ACTIVE=#{roleResActive,jdbcType=CHAR}
		        AND R.ACTIVE=#{resActive,jdbcType=CHAR}
		]]>
	</select>
	
	<select id="getUserIdsByResourceCode" parameterType="map" resultType="string">
		<![CDATA[
			SELECT USER_ENTITY.ID AS ID
		  	FROM BSE.T_BAS_USER USER_ENTITY,
		  		BSE.T_BAS_USER_ORG_ROLE USERROLEORG,
		  		BSE.T_BAS_ROLE_RESOURCES ROLERESOURCES,
		  		BSE.T_BAS_RESOURCES RESOURCES
		    WHERE
		    	USER_ENTITY.EMP_CODE = USERROLEORG.EMP_CODE 
		    	AND USER_ENTITY.ACTIVE=#{userActive,jdbcType=CHAR}
		    	AND USERROLEORG.ACTIVE=#{userRoleOrgActive,jdbcType=CHAR}
		    	AND ROLERESOURCES.ROLE_CODE = USERROLEORG.ROLE_CODE
		    	AND ROLERESOURCES.ACTIVE=#{roleResActive,jdbcType=CHAR}
		    	AND ROLERESOURCES.RESOURCE_CODE = RESOURCES.CODE
		    	AND RESOURCES.ACTIVE=#{resActive,jdbcType=CHAR}
		    	AND RESOURCES.CODE=#{resourceCode,jdbcType=CHAR}
		]]>
	</select>
	
	<select id="getUserIdsByRoleCode" parameterType="map" resultType="string">
		<![CDATA[
			SELECT USER_ENTITY.ID AS ID
		  	FROM BSE.T_BAS_USER USER_ENTITY,
		  		BSE.T_BAS_USER_ORG_ROLE USERROLEORG
		    WHERE
		    	USER_ENTITY.EMP_CODE = USERROLEORG.EMP_CODE 
		    	AND USER_ENTITY.ACTIVE=#{userActive,jdbcType=CHAR}
		    	AND USERROLEORG.ACTIVE=#{userRoleOrgActive,jdbcType=CHAR}
		    	AND USERROLEORG.ROLE_CODE=#{roleCode,jdbcType=CHAR}
		]]>
	</select>
	
	<select id="getUserAndOrgCodesByRoleCodeForCache" parameterType="map" resultType="string">
		<![CDATA[
			SELECT USERROLEORG.EMP_CODE||'#'||USERROLEORG.ORG_CODE AS ID
		  	FROM BSE.T_BAS_USER_ORG_ROLE USERROLEORG
		    WHERE
		    	USERROLEORG.ACTIVE=#{userRoleOrgActive,jdbcType=CHAR}
		    	AND USERROLEORG.ROLE_CODE=#{roleCode,jdbcType=CHAR}
		]]>
	</select>

	<select id="getUserWithRoleIdAndOrgIdById" parameterType="map"
		resultMap="userAssociationRoleidsOrgidsResultMap">
		<include refid="user_roleId_orgId_sql" />
		<![CDATA[
		    AND USER_ENTITY.ID=#{userId jdbcType=VARCHAR}
		]]>
	</select>
	
	<select id="getUserEmployeeInfoByCode" parameterType="map"
		resultMap="foss.bse.bse-baseinfo.employee.employeeAssociationResultMap">
		<![CDATA[
			SELECT
		]]>
		<include refid="foss.bse.bse-baseinfo.employee.employee_association_param" />
		<![CDATA[
		  	FROM BSE.T_BAS_EMPLOYEE EMPLOYEE,
		  		BSE.T_BAS_ORG ORG
		    WHERE EMPLOYEE.ACTIVE=#{empActive,jdbcType=CHAR}
		    	AND ORG.UNIFIED_CODE=EMPLOYEE.UNIFIELD_CODE 
		    	AND ORG.ACTIVE=#{orgActive,jdbcType=CHAR}
		    	AND EMPLOYEE.EMP_CODE=#{userCode}
	    ]]>
	</select>
	
	<select id="getLastModifyTime" resultType="long">
		<![CDATA[
			SELECT MAX(VERSION_NO) FROM BSE.T_BAS_USER
		]]>
	</select>

<!-- BEGIN：**************************************************** Base Config **************************************************** -->
	<resultMap id="userResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="EMP_CODE" property="empCode" jdbcType="VARCHAR" />
		<result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
		<result column="PASSWORD" property="password" jdbcType="VARCHAR" />
		<result column="EMP_NAME" property="empName" jdbcType="VARCHAR" />
		<result column="LAST_LOGIN" property="lastLogin" javaType="Date" jdbcType="TIMESTAMP" />
		<result column="ACTIVE" property="active" jdbcType="CHAR" />
		<result column="TITLE" property="title" jdbcType="VARCHAR" />
		<result column="BEGIN_TIME" property="beginDate" jdbcType="DATE" />
		<result column="END_TIME" property="endDate" jdbcType="DATE" />
		<result column="CREATE_TIME" property="createDate" jdbcType="TIMESTAMP" />
		<result column="MODIFY_TIME" property="modifyDate" jdbcType="DATE" />
		<result column="CREATE_USER_CODE" property="createUser" jdbcType="VARCHAR" />
		<result column="MODIFY_USER_CODE" property="modifyUser" jdbcType="VARCHAR" />
		<result column="VERSION_NO" property="version" jdbcType="NUMERIC" />
	</resultMap>
	<sql id="user_ResultMap_Param">
		ID, EMP_CODE, USER_NAME, PASSWORD, EMP_NAME, LAST_LOGIN,
		ACTIVE, TITLE,
		BEGIN_TIME,
		END_TIME, CREATE_TIME, MODIFY_TIME,
		CREATE_USER_CODE, MODIFY_USER_CODE,
		VERSION_NO
	</sql>
	<!-- 根据entity精确查询的查询条件 ，如果属性为空，则此属性不作为条件 -->
	<sql id="user_Pagination_Where_Base_Param">
		<if test="id != null and id != ''">
			AND ID = #{id,jdbcType=VARCHAR}
		</if>
		<if test="userName != null and userName != ''">
			AND USER_NAME =
			#{userName,jdbcType=VARCHAR}
		</if>
		<if test="password != null and password != ''">
			AND PASSWORD =
			#{password,jdbcType=VARCHAR}
		</if>
		<if test="lastLogin != null and lastLogin != ''">
			AND LAST_LOGIN =
			#{lastLogin,jdbcType=DATE}
		</if>
		<if test="active != null and active != ''">
			AND ACTIVE =
			#{active,jdbcType=CHAR}
		</if>
		<if test="title != null and title != ''">
			AND TITLE =
			#{title,jdbcType=VARCHAR}
		</if>
		<if test="beginDate != null and beginDate != ''">
			AND BEGIN_TIME =
			#{beginDate,jdbcType=DATE}
		</if>
		<if test="endDate != null and endDate != ''">
			AND END_TIME =
			#{endDate,jdbcType=DATE}
		</if>
		<if test="createDate != null and createDate != ''">
			AND CREATE_TIME
			= #{createDate,jdbcType=DATE}
		</if>
		<if test="modifyDate != null and modifyDate != ''">
			AND MODIFY_TIME
			= #{modifyDate,jdbcType=DATE}
		</if>
		<if test="createUser != null and createUser != ''">
			AND
			CREATE_USER_CODE = #{createUser,jdbcType=VARCHAR}
		</if>
		<if test="modifyUser != null and modifyUser != ''">
			AND
			MODIFY_USER_CODE = #{modifyUser,jdbcType=VARCHAR}
		</if>
		<if test="version != null and version != ''">
			AND
			VERSION_NO = #{version,jdbcType=NUMERIC}
		</if>
	</sql>
	<sql id="user_Pagination_Where_Equals_Param">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<include refid="user_Pagination_Where_Base_Param" />
			<if test="empCode != null and empCode != ''">
				AND EMP_CODE =
				#{empCode,jdbcType=VARCHAR}
			</if>
			<if test="empName != null and empName != ''">
				AND EMP_NAME =
				#{empName,jdbcType=VARCHAR}
			</if>
		</trim>
	</sql>
	<sql id="user_Pagination_Where_Like_Param">
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<include refid="user_Pagination_Where_Base_Param" />
			<if test="empCode != null and empCode != ''">
				AND EMP_CODE like
				CONCAT(CONCAT('%',
				#{empCode,jdbcType=VARCHAR}), '%')
			</if>
			<if test="empName != null and empName != ''">
				AND EMP_NAME like
				CONCAT(CONCAT('%',
				#{empName,jdbcType=VARCHAR}), '%')
			</if>
		</trim>
	</sql>
	<!-- 查询用户信息 -->
	<select id="queryUserListBySelective" resultMap="userResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		SELECT
		/** 综合:查询用户信息  **/
		<include refid="user_ResultMap_Param" />
		FROM BSE.T_BAS_USER
		<include refid="user_Pagination_Where_Equals_Param" />
	</select>
	<select id="queryUserListBySelectiveCondition" resultMap="userResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		select
		<include refid="user_ResultMap_Param" />
		from BSE.T_BAS_USER
		<include refid="user_Pagination_Where_Like_Param" />
	</select>
	<select id="queryUserRecordCountBySelectiveCondition" resultType="java.lang.Long"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		<![CDATA[ select count(*) from BSE.T_BAS_USER ]]>
		<include refid="user_Pagination_Where_Like_Param" />
	</select>
	<select id="queryUserListForDownload" resultMap="userResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		SELECT
		<include refid="user_ResultMap_Param" />
		FROM BSE.T_BAS_USER
		<trim prefix="WHERE" prefixOverrides="AND | OR">
			<if test="empCode != null and empCode != ''">
				AND EMP_CODE = #{empCode,jdbcType=VARCHAR}
			</if>
			<if test="version != null">
				AND VERSION_NO > #{version,jdbcType=NUMERIC}
			</if>
		</trim>
		ORDER BY VERSION_NO ASC
	</select>
	<!-- 删除用户信息 -->
	<delete id="deleteUser" parameterType="java.lang.String">
		delete/** 综合:删除用户信息   **/ from BSE.T_BAS_USER
		where ID = #{id,jdbcType=VARCHAR}
	</delete>
	<!-- 新增用户信息 -->
	<insert id="addUser"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		insert/** 综合:新增用户信息   **/ into BSE.T_BAS_USER (ID, EMP_CODE, USER_NAME,
		PASSWORD, EMP_NAME, LAST_LOGIN,
		ACTIVE, TITLE, BEGIN_TIME,
		END_TIME, CREATE_TIME, MODIFY_TIME,
		CREATE_USER_CODE, MODIFY_USER_CODE,
		VERSION_NO)
		values (#{id,jdbcType=VARCHAR}, #{empCode,jdbcType=VARCHAR},
		#{userName,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR}, #{empName,jdbcType=VARCHAR}, #{lastLogin,jdbcType=TIMESTAMP},
		#{active,jdbcType=CHAR}, #{title,jdbcType=VARCHAR},
		#{beginDate,jdbcType=DATE},
		#{endDate,jdbcType=DATE}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP},
		#{createUser,jdbcType=VARCHAR},
		#{modifyUser,jdbcType=VARCHAR},
		#{version,jdbcType=NUMERIC})
	</insert>
	<insert id="addUserBySelective"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		insert into BSE.T_BAS_USER
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="empCode != null">
				EMP_CODE,
			</if>
			<if test="userName != null">
				USER_NAME,
			</if>
			<if test="password != null">
				PASSWORD,
			</if>
			<if test="empName != null">
				EMP_NAME,
			</if>
			<if test="lastLogin != null">
				LAST_LOGIN,
			</if>
			<if test="active != null">
				ACTIVE,
			</if>
			<if test="title != null">
				TITLE,
			</if>
			<if test="beginDate != null">
				BEGIN_TIME,
			</if>
			<if test="endDate != null">
				END_TIME,
			</if>
			<if test="createDate != null">
				CREATE_TIME,
			</if>
			<if test="modifyDate != null">
				MODIFY_TIME,
			</if>
			<if test="createUser != null">
				CREATE_USER_CODE,
			</if>
			<if test="modifyUser != null">
				MODIFY_USER_CODE,
			</if>
			<if test="version != null">
				VERSION_NO,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="empCode != null">
				#{empCode,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="empName != null">
				#{empName,jdbcType=VARCHAR},
			</if>
			<if test="lastLogin != null">
				#{lastLogin,jdbcType=DATE},
			</if>
			<if test="active != null">
				#{active,jdbcType=CHAR},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="beginDate != null">
				#{beginDate,jdbcType=DATE},
			</if>
			<if test="endDate != null">
				#{endDate,jdbcType=DATE},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=DATE},
			</if>
			<if test="modifyDate != null">
				#{modifyDate,jdbcType=DATE},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=VARCHAR},
			</if>
			<if test="modifyUser != null">
				#{modifyUser,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				#{version,jdbcType=NUMERIC}
			</if>
		</trim>
	</insert>
	<!-- 修改用户信息 -->
	<update id="updateUserBySelective"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		update/** 综合:修改用户信息   **/ BSE.T_BAS_USER
		<set>
			<if test="empCode != null">
				EMP_CODE = #{empCode,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				USER_NAME = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				PASSWORD = #{password,jdbcType=VARCHAR},
			</if>
			<if test="empName != null">
				EMP_NAME = #{empName,jdbcType=VARCHAR},
			</if>
			<if test="lastLogin != null">
				LAST_LOGIN = #{lastLogin,jdbcType=TIMESTAMP},
			</if>
			<if test="active != null">
				ACTIVE = #{active,jdbcType=CHAR},
			</if>
			<if test="title != null">
				TITLE = #{title,jdbcType=VARCHAR},
			</if>
			<if test="beginDate != null">
				BEGIN_TIME = #{beginDate,jdbcType=TIMESTAMP},
			</if>
			<if test="endDate != null">
				END_TIME = #{endDate,jdbcType=TIMESTAMP},
			</if>
			<if test="createDate != null">
				CREATE_TIME = #{createDate,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyDate != null">
				MODIFY_TIME = #{modifyDate,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				CREATE_USER_CODE = #{createUser,jdbcType=VARCHAR},
			</if>
			<if test="modifyUser != null">
				MODIFY_USER_CODE = #{modifyUser,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				VERSION_NO = #{version,jdbcType=NUMERIC},
			</if>
		</set>
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateUser"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		update BSE.T_BAS_USER
		set EMP_CODE = #{empCode,jdbcType=VARCHAR},
		USER_NAME = #{userName,jdbcType=VARCHAR},
		PASSWORD = #{password,jdbcType=VARCHAR},
		EMP_NAME = #{empName,jdbcType=VARCHAR},
		LAST_LOGIN = #{lastLogin,jdbcType=TIMESTAMP},
		ACTIVE = #{active,jdbcType=CHAR},
		TITLE = #{title,jdbcType=VARCHAR},
		BEGIN_TIME = #{beginDate,jdbcType=TIMESTAMP},
		END_TIME = #{endDate,jdbcType=TIMESTAMP},
		CREATE_TIME = #{createDate,jdbcType=TIMESTAMP},
		MODIFY_TIME = #{modifyDate,jdbcType=TIMESTAMP},
		CREATE_USER_CODE = #{createUser,jdbcType=VARCHAR},
		MODIFY_USER_CODE = #{modifyUser,jdbcType=VARCHAR},
		VERSION_NO = #{version,jdbcType=NUMERIC}
		where ID = #{id,jdbcType=VARCHAR}
	</update>
<!-- END：**************************************************** Base Config **************************************************** -->


<!-- 087584-foss-lijun 2013-01-18 -->
<!-- user user-mapper.xml 用户 -->

	<resultMap id="userQueryResultMap"
   			type="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		<result property="id" column="ID"  jdbcType="VARCHAR" />
		<result property="userName" column="USER_NAME"  jdbcType="VARCHAR" />
		<result property="empName" column="EMP_NAME"  jdbcType="VARCHAR" />
		<result property="password" column="PASSWORD"  jdbcType="VARCHAR" />
		<result property="empCode" column="EMP_CODE"  jdbcType="VARCHAR" />
		<result property="title" column="TITLE"  jdbcType="VARCHAR" />
		<result property="lastLogin" column="LAST_LOGIN" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="beginDate" column="BEGIN_TIME"  jdbcType="TIMESTAMP" />
		<result property="endDate" column="END_TIME"  jdbcType="TIMESTAMP" />
		<result property="createDate" column="CREATE_TIME"  jdbcType="TIMESTAMP" />
		<result property="modifyDate" column="MODIFY_TIME"  jdbcType="TIMESTAMP" />
		<result property="active" column="ACTIVE"  jdbcType="CHAR" />
		<result property="createUser" column="CREATE_USER_CODE"  jdbcType="VARCHAR" />
		<result property="modifyUser" column="MODIFY_USER_CODE"  jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- 以下全为查询 -->

	<sql id="query_user_param">
		A.ID AS ID,		/** ID     **/ 
		A.USER_NAME AS USER_NAME,		/** 用户名     **/ 
		A.EMP_NAME AS EMP_NAME,		/** 姓名     **/ 
		A.PASSWORD AS PASSWORD,		/** 密码     **/ 
		A.EMP_CODE AS EMP_CODE,		/** 工号     **/ 
		A.TITLE AS TITLE,		/** 职位     **/ 
		A.LAST_LOGIN AS LAST_LOGIN,
		A.BEGIN_TIME AS BEGIN_TIME,		/** 生效日期     **/ 
		A.END_TIME AS END_TIME,		/** 失效日期     **/ 
		A.CREATE_TIME AS CREATE_TIME,		/** 创建时间     **/ 
		A.MODIFY_TIME AS MODIFY_TIME,		/** 更新时间     **/ 
		A.ACTIVE AS ACTIVE,		/** 是否启用     **/ 
		A.CREATE_USER_CODE AS CREATE_USER_CODE,		/** 创建人     **/ 
		A.MODIFY_USER_CODE AS MODIFY_USER_CODE		/** 更新人     **/
	</sql>
	
	<!-- 根据 EMP_CODE 精确查询数据 -->
	<select id="queryUserByEmpCode" resultMap="userQueryResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity">
		<![CDATA[
		  SELECT 
		  /** 综合:根据 EMP_CODE 精确查询数据   **/
		]]>
		<include refid="query_user_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_USER A 
		]]>
		<where>
			A.EMP_CODE=#{empCode} 
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</select>
	
	<!-- 根据userName判断当前用户密码使用期限是否到三个月,返回剩余有效期 -->
	<select id="queryLeftDaysOfPsw" resultType="java.lang.Integer" parameterType="map">
		<![CDATA[
		select /** 综合:根据收银员用户名和密码查询当前密码剩余有效期   **/
				90-ceil((sysdate -           
                       (select to_date(to_char(temp.mtime,'yyyy-mm-dd'),'yyyy-mm-dd')
                          from (select uu.user_name as uname,
                                       uu.password as psw,
                                       uu.create_time as ctime,
                                       uu.modify_time as mtime,
                                       row_number() over(partition by uu.user_name order by uu.create_time desc) as rn
                                  from bse.t_Bas_User uu
                                 where uu.user_name =
                                  ]]> 
								  #{userName,jdbcType=VARCHAR}
                                   <![CDATA[
                                   and uu.password <>
                                   ]]>
                                   #{passWord,jdbcType=VARCHAR}) temp
                         where temp.rn = 1))) from dual
	</select>
</mapper>
