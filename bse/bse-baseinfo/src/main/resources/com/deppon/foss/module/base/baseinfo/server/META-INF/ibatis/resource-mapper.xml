<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="foss.bse.bse-baseinfo.resource">

     <!-- resource表返回的结果集，单表查询-->
	<resultMap id="resourceSimpleResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
		<result property="id" column="ID"  jdbcType="VARCHAR" />
		<result property="code" column="CODE"  jdbcType="VARCHAR" />
		<result property="name" column="NAME"  jdbcType="VARCHAR" />
		<result property="entryUri" column="ENTRY_URI"  jdbcType="VARCHAR" />
		<result property="resLevel" column="RES_LEVEL" javaType="String" jdbcType="VARCHAR" />
		<result property="displayOrder" column="DISPLAY_ORDER" javaType="String" jdbcType="VARCHAR" />
		<result property="checked" column="CHECKED" javaType="String" jdbcType="CHAR" />
		<result property="resType" column="RES_TYPE" javaType="String" jdbcType="VARCHAR" />
		<result property="leafFlag" column="LEAF_FLAG" javaType="String" jdbcType="CHAR" />
		<result property="iconCls" column="ICON_CLS"  jdbcType="VARCHAR" />
		<result property="cls" column="CLS"  jdbcType="VARCHAR" />
		<result property="notes" column="NOTES"  jdbcType="VARCHAR" />
		<result property="active" column="ACTIVE" javaType="String" jdbcType="CHAR" />
		<result property="versionNo" column="VERSION_NO"  jdbcType="NUMERIC" />
		<result property="belongSystemType" column="BELONG_SYSTEM_TYPE"  jdbcType="VARCHAR" />
		<result property="createDate" column="CREATE_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="modifyDate" column="MODIFY_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="createUser" column="CREATE_USER_CODE"  jdbcType="VARCHAR" />
		<result property="modifyUser" column="MODIFY_USER_CODE"  jdbcType="VARCHAR" />
	</resultMap>

    <!-- resource表返回查询字段 ，单表-->
	<sql id="select_simple_param">
		ID ,
		CODE,
		NAME,
		ENTRY_URI,
		RES_LEVEL,
		VALID_FLAG,
		INVALID_DATE,
		VALID_DATE,
		DISPLAY_ORDER,
		CHECKED,
		RES_TYPE,
		LEAF_FLAG,
		ICON_CLS,
		CLS,
		NOTES,
		RES_SEQ,
		VERSION_NO,
		BELONG_SYSTEM_TYPE,
		CREATE_USER_CODE,
		CREATE_TIME,
		MODIFY_USER_CODE,
		MODIFY_TIME
	</sql>
	
	<!-- resource表返回的结果集，单表查询-->
	<resultMap id="resourceSimpleAliasResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
		<result property="id" column="RESOURCES_ID"  jdbcType="VARCHAR" />
		<result property="code" column="RESOURCES_CODE"  jdbcType="VARCHAR" />
		<result property="name" column="RESOURCES_NAME"  jdbcType="VARCHAR" />
		<result property="entryUri" column="RESOURCES_ENTRY_URI"  jdbcType="VARCHAR" />
		<result property="resLevel" column="RESOURCES_RES_LEVEL" javaType="String" jdbcType="VARCHAR" />
		<result property="displayOrder" column="RESOURCES_DISPLAY_ORDER" javaType="String" jdbcType="VARCHAR" />
		<result property="checked" column="RESOURCES_CHECKED" javaType="String" jdbcType="CHAR" />
		<result property="resType" column="RESOURCES_RES_TYPE" javaType="String" jdbcType="VARCHAR" />
		<result property="leafFlag" column="RESOURCES_LEAF_FLAG" javaType="String" jdbcType="CHAR" />
		<result property="iconCls" column="RESOURCES_ICON_CLS"  jdbcType="VARCHAR" />
		<result property="cls" column="RESOURCES_CLS"  jdbcType="VARCHAR" />
		<result property="notes" column="RESOURCES_NOTES"  jdbcType="VARCHAR" />
		<result property="active" column="RESOURCES_ACTIVE" javaType="String" jdbcType="CHAR" />
		<result property="versionNo" column="RESOURCES_VERSION_NO"  jdbcType="NUMERIC" />
		<result property="belongSystemType" column="BELONG_SYSTEM_TYPE"  jdbcType="VARCHAR" />
		<result property="createDate" column="RESOURCES_CREATE_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="modifyDate" column="RESOURCES_MODIFY_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="createUser" column="RESOURCES_CREATE_USER_CODE"  jdbcType="VARCHAR" />
		<result property="modifyUser" column="RESOURCES_MODIFY_USER_CODE"  jdbcType="VARCHAR" />
	</resultMap>

    <!-- resource表返回查询字段 ，单表-->
	<sql id="select_simple_alias_param">
	   RESOURCES.ID               AS RESOURCES_ID,
       RESOURCES.CODE             AS RESOURCES_CODE,
       RESOURCES.NAME             AS RESOURCES_NAME,
       RESOURCES.ENTRY_URI        AS RESOURCES_ENTRY_URI,
       RESOURCES.RES_LEVEL        AS RESOURCES_RES_LEVEL,
       RESOURCES.DISPLAY_ORDER    AS RESOURCES_DISPLAY_ORDER,
       RESOURCES.CHECKED          AS RESOURCES_CHECKED,
       RESOURCES.RES_TYPE         AS RESOURCES_RES_TYPE,
       RESOURCES.LEAF_FLAG        AS RESOURCES_LEAF_FLAG,
       RESOURCES.ICON_CLS         AS RESOURCES_ICON_CLS,
       RESOURCES.CLS              AS RESOURCES_CLS,
       RESOURCES.NOTES            AS RESOURCES_NOTES,
       RESOURCES.ACTIVE			  AS RESOURCES_ACTIVE,
       RESOURCES.VERSION_NO		  AS RESOURCES_VERSION_NO,
       RESOURCES.BELONG_SYSTEM_TYPE AS RESOURCES_BELONG_SYSTEM_TYPE,
       RESOURCES.CREATE_USER_CODE AS RESOURCES_CREATE_USER_CODE,
       RESOURCES.CREATE_TIME      AS RESOURCES_CREATE_TIME,
       RESOURCES.MODIFY_USER_CODE AS RESOURCES_MODIFY_USER_CODE,
       RESOURCES.MODIFY_TIME      AS RESOURCES_MODIFY_TIME
	</sql>
	
	<!-- 通过查询功能对象集合的结果集 -->
	<resultMap id="resourceResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
		<result property="id" column="RESOURCES_ID"  jdbcType="VARCHAR" />
		<result property="code" column="RESOURCES_CODE"  jdbcType="VARCHAR" />
		<result property="name" column="RESOURCES_NAME"  jdbcType="VARCHAR" />
		<result property="entryUri" column="RESOURCES_ENTRY_URI"  jdbcType="VARCHAR" />
		<result property="resLevel" column="RESOURCES_RES_LEVEL" javaType="String" jdbcType="VARCHAR" />
		<result property="displayOrder" column="RESOURCES_DISPLAY_ORDER" javaType="String" jdbcType="VARCHAR" />
		<result property="checked" column="RESOURCES_CHECKED" javaType="String" jdbcType="CHAR" />
		<result property="resType" column="RESOURCES_RES_TYPE" javaType="String" jdbcType="VARCHAR" />
		<result property="leafFlag" column="RESOURCES_LEAF_FLAG" javaType="String" jdbcType="CHAR" />
		<result property="iconCls" column="RESOURCES_ICON_CLS"  jdbcType="VARCHAR" />
		<result property="cls" column="RESOURCES_CLS"  jdbcType="VARCHAR" />
		<result property="notes" column="RESOURCES_NOTES"  jdbcType="VARCHAR" />
		<result property="active" column="RESOURCES_ACTIVE" javaType="String" jdbcType="CHAR" />
		<result property="versionNo" column="RESOURCES_VERSION_NO"  jdbcType="NUMERIC" />
		<result property="belongSystemType" column="RESOURCES_BELONG_SYSTEM_TYPE"  jdbcType="VARCHAR" />
		<result property="createDate" column="RESOURCES_CREATE_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="modifyDate" column="RESOURCES_MODIFY_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="createUser" column="RESOURCES_CREATE_USER_CODE"  jdbcType="VARCHAR" />
		<result property="modifyUser" column="RESOURCES_MODIFY_USER_CODE"  jdbcType="VARCHAR" />
		<association property="parentRes" column="RESOURCES_PARENT_RES"
			javaType="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
			<result property="code" column="RESOURCES_PARENT_RES" />
		</association>
	</resultMap>

    <!-- 通过查询功能对象集合的字段 -->
	<sql id="select_param">
	   RESOURCES.ID               AS RESOURCES_ID,
       RESOURCES.CODE             AS RESOURCES_CODE,
       RESOURCES.NAME             AS RESOURCES_NAME,
       RESOURCES.ENTRY_URI        AS RESOURCES_ENTRY_URI,
       RESOURCES.RES_LEVEL        AS RESOURCES_RES_LEVEL,
       RESOURCES.DISPLAY_ORDER    AS RESOURCES_DISPLAY_ORDER,
       RESOURCES.CHECKED          AS RESOURCES_CHECKED,
       RESOURCES.RES_TYPE         AS RESOURCES_RES_TYPE,
       RESOURCES.LEAF_FLAG        AS RESOURCES_LEAF_FLAG,
       RESOURCES.ICON_CLS         AS RESOURCES_ICON_CLS,
       RESOURCES.CLS              AS RESOURCES_CLS,
       RESOURCES.NOTES            AS RESOURCES_NOTES,
       RESOURCES.ACTIVE			  AS RESOURCES_ACTIVE,
       RESOURCES.VERSION_NO		  AS RESOURCES_VERSION_NO,
       RESOURCES.BELONG_SYSTEM_TYPE AS RESOURCES_BELONG_SYSTEM_TYPE,
       RESOURCES.CREATE_USER_CODE AS RESOURCES_CREATE_USER_CODE,
       RESOURCES.CREATE_TIME      AS RESOURCES_CREATE_TIME,
       RESOURCES.MODIFY_USER_CODE AS RESOURCES_MODIFY_USER_CODE,
       RESOURCES.MODIFY_TIME      AS RESOURCES_MODIFY_TIME,
       RESOURCES.PARENT_RES       AS RESOURCES_PARENT_RES
	</sql>
	
	<!-- resource表返回的结果集，多表联查，查询其父节点 -->
	<resultMap id="resourceAssociationResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
		<result property="id" column="RESOURCES_ID"  jdbcType="VARCHAR" />
		<result property="code" column="RESOURCES_CODE"  jdbcType="VARCHAR" />
		<result property="name" column="RESOURCES_NAME"  jdbcType="VARCHAR" />
		<result property="entryUri" column="RESOURCES_ENTRY_URI"  jdbcType="VARCHAR" />
		<result property="resLevel" column="RESOURCES_RES_LEVEL" javaType="String" jdbcType="INTEGER" />
		<result property="displayOrder" column="RESOURCES_DISPLAY_ORDER" javaType="String" jdbcType="VARCHAR" />
		<result property="checked" column="RESOURCES_CHECKED" javaType="String" jdbcType="CHAR" />
		<result property="resType" column="RESOURCES_RES_TYPE" javaType="String" jdbcType="VARCHAR" />
		<result property="leafFlag" column="RESOURCES_LEAF_FLAG" javaType="String" jdbcType="CHAR" />
		<result property="iconCls" column="RESOURCES_ICON_CLS"  jdbcType="VARCHAR" />
		<result property="cls" column="RESOURCES_CLS"  jdbcType="VARCHAR" />
		<result property="notes" column="RESOURCES_NOTES"  jdbcType="VARCHAR" />
		<result property="active" column="RESOURCES_ACTIVE" javaType="String" jdbcType="CHAR" />
		<result property="versionNo" column="RESOURCES_VERSION_NO"  jdbcType="NUMERIC" />
		<result property="belongSystemType" column="RESOURCES_BELONG_SYSTEM_TYPE"  jdbcType="VARCHAR" />
		<result property="createDate" column="RESOURCES_CREATE_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="modifyDate" column="RESOURCES_MODIFY_TIME" javaType="Date" jdbcType="TIMESTAMP" />
		<result property="createUser" column="RESOURCES_CREATE_USER_CODE"  jdbcType="VARCHAR" />
		<result property="modifyUser" column="RESOURCES_MODIFY_USER_CODE"  jdbcType="VARCHAR" />
		<association property="parentRes" column="RESOURCES_PARENT_RES"
			javaType="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
			<result property="id" column="PR_ID"  jdbcType="VARCHAR" />
			<result property="code" column="PR_CODE"  jdbcType="VARCHAR" />
			<result property="name" column="PR_NAME"  jdbcType="VARCHAR" />
			<result property="entryUri" column="PR_ENTRY_URI"  jdbcType="VARCHAR" />
			<result property="resLevel" column="PR_RES_LEVEL" javaType="String" jdbcType="INTEGER" />
			<result property="displayOrder" column="PR_DISPLAY_ORDER" javaType="String" jdbcType="INTEGER" />
			<result property="checked" column="PR_CHECKED" javaType="String" jdbcType="CHAR" />
			<result property="resType" column="PR_RES_TYPE" javaType="String" jdbcType="INTEGER" />
			<result property="leafFlag" column="PR_LEAF_FLAG" javaType="String" jdbcType="CHAR" />
			<result property="iconCls" column="PR_ICON_CLS"  jdbcType="VARCHAR" />
			<result property="cls" column="PR_CLS"  jdbcType="VARCHAR" />
			<result property="notes" column="PR_NOTES"  jdbcType="VARCHAR" />
			<result property="active" column="PR_ACTIVE"  jdbcType="CHAR" />
			<result property="versionNo" column="PR_VERSION_NO"  jdbcType="NUMERIC" />
			<result property="belongSystemType" column="PR_BELONG_SYSTEM_TYPE"  jdbcType="VARCHAR" />
			<result property="createDate" column="PR_CREATE_TIME" javaType="Date" jdbcType="TIMESTAMP" />
			<result property="modifyDate" column="PR_MODIFY_TIME" javaType="Date" jdbcType="TIMESTAMP" />
			<result property="createUser" column="PR_CREATE_USER_CODE"  jdbcType="VARCHAR" />
			<result property="modifyUser" column="PR_MODIFY_USER_CODE"  jdbcType="VARCHAR" />
			<association property="parentRes" column="PR_PARENT_RES"
				javaType="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
				<result property="code" column="PR_PARENT_RES" />
			</association>
		</association>
	</resultMap>

     <!-- resource表返回查询字段 -->
	<sql id="resource_association_param">
	   RESOURCES.ID               AS RESOURCES_ID,
       RESOURCES.CODE             AS RESOURCES_CODE,
       RESOURCES.NAME             AS RESOURCES_NAME,
       RESOURCES.ENTRY_URI        AS RESOURCES_ENTRY_URI,
       RESOURCES.RES_LEVEL        AS RESOURCES_RES_LEVEL,
       RESOURCES.DISPLAY_ORDER    AS RESOURCES_DISPLAY_ORDER,
       RESOURCES.CHECKED          AS RESOURCES_CHECKED,
       RESOURCES.RES_TYPE         AS RESOURCES_RES_TYPE,
       RESOURCES.LEAF_FLAG        AS RESOURCES_LEAF_FLAG,
       RESOURCES.ICON_CLS         AS RESOURCES_ICON_CLS,
       RESOURCES.CLS              AS RESOURCES_CLS,
       RESOURCES.NOTES            AS RESOURCES_NOTES,
       RESOURCES.ACTIVE			  AS RESOURCES_ACTIVE,
       RESOURCES.VERSION_NO		  AS RESOURCES_VERSION_NO,
       RESOURCES.BELONG_SYSTEM_TYPE AS RESOURCES_BELONG_SYSTEM_TYPE,
       RESOURCES.CREATE_USER_CODE AS RESOURCES_CREATE_USER_CODE,
       RESOURCES.CREATE_TIME      AS RESOURCES_CREATE_TIME,
       RESOURCES.MODIFY_USER_CODE AS RESOURCES_MODIFY_USER_CODE,
       RESOURCES.MODIFY_TIME      AS RESOURCES_MODIFY_TIME,
       RESOURCES.PARENT_RES       AS RESOURCES_PARENT_RES,
	   PR.ID               		  AS PR_ID,
       PR.CODE             		  AS PR_CODE,
       PR.NAME             		  AS PR_NAME,
       PR.ENTRY_URI        		  AS PR_ENTRY_URI,
       PR.RES_LEVEL        		  AS PR_RES_LEVEL,
       PR.DISPLAY_ORDER    		  AS PR_DISPLAY_ORDER,
       PR.CHECKED          		  AS PR_CHECKED,
       PR.RES_TYPE        		  AS PR_RES_TYPE,
       PR.LEAF_FLAG        		  AS PR_LEAF_FLAG,
       PR.ICON_CLS                AS PR_ICON_CLS,
       PR.CLS              		  AS PR_CLS,
       PR.NOTES            		  AS PR_NOTES,
       PR.ACTIVE			      AS PR_ACTIVE,
       PR.VERSION_NO		  	  AS PR_VERSION_NO,
       PR.BELONG_SYSTEM_TYPE 	  AS PR_BELONG_SYSTEM_TYPE,
       PR.CREATE_USER_CODE 		  AS PR_CREATE_USER_CODE,
       PR.CREATE_TIME      		  AS PR_CREATE_TIME,
       PR.MODIFY_USER_CODE 		  AS PR_MODIFY_USER_CODE,
       PR.MODIFY_TIME      		  AS PR_MODIFY_TIME,
       PR.PARENT_RES              AS PR_PARENT_RES
	</sql>

    <!-- 通过URI递归获取该节点的所有功能-->
	<select id="getAllChildResourceByURI" resultMap="resourceAssociationResultMap" parameterType="HashMap">			
		<![CDATA[
			SELECT
			/** 综合:通过URI递归获取该节点的所有功能  **/
		]]>
		<include refid="resource_association_param" />
		<![CDATA[
			FROM BSE.T_BAS_RESOURCES RESOURCES
			LEFT JOIN BSE.T_BAS_RESOURCES PR
			ON RESOURCES.PARENT_RES = PR.CODE
			WHERE RESOURCES.ACTIVE=#{active}
			CONNECT BY PRIOR RESOURCES.CODE = RESOURCES.PARENT_RES 
			AND RESOURCES.ACTIVE=#{resActive}
			AND PR.ACTIVE=#{parentActive}
			START WITH RESOURCES.ENTRY_URI=#{uri}
		]]>	
	</select>
	
	<!-- 通过CODE获取该节点的子节点功能-->
	<select id="getDirectChildResourceByCode" resultMap="resourceAssociationResultMap" parameterType="HashMap">			
		<![CDATA[
			SELECT
			/** 综合:通过CODE获取该节点的子节点功能  **/
		]]>
		<include refid="resource_association_param" />
		<![CDATA[
			FROM BSE.T_BAS_RESOURCES RESOURCES
			LEFT JOIN BSE.T_BAS_RESOURCES PR
			ON RESOURCES.PARENT_RES = PR.CODE
			WHERE RESOURCES.ACTIVE=#{resActive}
			AND PR.ACTIVE=#{parentActive}
			AND PR.CODE=#{parentCode}
			ORDER BY TO_NUMBER(RESOURCES.DISPLAY_ORDER)
		]]>	
	</select>
	
	<!-- 通过更新时间得到已经更新过的节点父节点的编码列表 -->
	<select id="getByLastModifyResourceParentCode" parameterType="HashMap" resultType="list">
		<![CDATA[
			SELECT/** 综合:通过更新时间得到已经更新过的节点父节点的编码列表  **/ RESOURCES.PARENT_RES
			FROM BSE.T_BAS_RESOURCES RESOURCES
			WHERE RESOURCES.ACTIVE=#{resActive}
			AND PR.ACTIVE=#{parentActive}
			AND RESOURCES.VERSION_NO > #{versionNo}
		]]>
	</select>

	<!-- 能过更新时间得到已经更新过的资源列表 -->
	<select id="getByLastModifyResource" parameterType="HashMap" resultMap="resourceAssociationResultMap">
		<![CDATA[
			SELECT
			/** 综合:能过更新时间得到已经更新过的资源列表  **/
		]]>
		<include refid="resource_association_param" />
		<![CDATA[
			FROM BSE.T_BAS_RESOURCES RESOURCES
			LEFT JOIN BSE.T_BAS_RESOURCES PR
			ON RESOURCES.PARENT_RES = PR.CODE
			WHERE RESOURCES.ACTIVE=#{resActive}
			AND PR.ACTIVE=#{parentActive}
			AND RESOURCES.VERSION_NO > #{versionNo}
		]]>
	</select>	
	
	<!-- 通过URI获取功能信息-->
	<select id="getResourceByURI" resultMap="resourceAssociationResultMap"
		parameterType="HashMap">	
		<![CDATA[
			SELECT
			/** 综合:通过URI获取功能信息  **/
		]]>
		<include refid="resource_association_param" />
		<![CDATA[
			FROM BSE.T_BAS_RESOURCES RESOURCES
			LEFT JOIN BSE.T_BAS_RESOURCES PR
			ON RESOURCES.PARENT_RES = PR.CODE
			WHERE RESOURCES.ENTRY_URI=#{uri} 
			AND	RESOURCES.ACTIVE=#{resActive}
			AND PR.ACTIVE=#{parentActive}
		]]>
	</select>
	
	
	<select id="getResourceBatchByUri" resultMap="resourceAssociationResultMap"
		parameterType="HashMap">
		<![CDATA[
		  SELECT 
		]]>
		<include refid="resource_association_param" />
		<![CDATA[
			FROM BSE.T_BAS_RESOURCES RESOURCES
			LEFT JOIN BSE.T_BAS_RESOURCES PR 
			ON RESOURCES.PARENT_RES = PR.CODE
		]]>	
		<where>
            PR.ACTIVE=#{parentActive}
			AND RESOURCES.ACTIVE=#{resActive}
			<if test="uris!=null and uris.length > 0">
                AND CASE INSTR(RESOURCES.ENTRY_URI, #{sign}) WHEN 0 THEN RESOURCES.ENTRY_URI ELSE SUBSTR(RESOURCES.ENTRY_URI, 0, INSTR(RESOURCES.ENTRY_URI, #{sign})-1) END IN
                <foreach collection="uris"  index="index" item="uri"  open="(" separator="," close=")">  
	            #{uri} 
	            </foreach>
            </if>
		</where>
	</select>
	
		<!-- 通过CODE获取功能信息-->
	<select id="getResourceByCode" resultMap="resourceAssociationResultMap"
		parameterType="HashMap">	
		<![CDATA[
			SELECT
			/** 综合:通过CODE获取功能信息  **/
		]]>
		<include refid="resource_association_param" />
		<![CDATA[
			FROM BSE.T_BAS_RESOURCES RESOURCES
			LEFT JOIN BSE.T_BAS_RESOURCES PR ON RESOURCES.PARENT_RES = PR.CODE
			WHERE RESOURCES.CODE=#{code}
			AND (PR.ACTIVE=#{parentActive} OR PR.ACTIVE IS NULL)
			AND RESOURCES.ACTIVE=#{resActive}
		]]>	
	</select>
	
	<!-- 根据 CODE 批量精确查询数据 -->
	<select id="getResourceBatchByCode" resultMap="resourceAssociationResultMap"
		parameterType="HashMap">
		<![CDATA[
		  SELECT 
		  /** 综合:根据 CODE 批量精确查询数据  **/
		]]>
		<include refid="resource_association_param" />
		<![CDATA[
			FROM BSE.T_BAS_RESOURCES RESOURCES
			LEFT JOIN BSE.T_BAS_RESOURCES PR ON RESOURCES.PARENT_RES = PR.CODE
		]]>	
		<where>
            PR.ACTIVE=#{parentActive}
			AND RESOURCES.ACTIVE=#{resActive}
			<if test="codes!=null and codes.length > 0">
            AND RESOURCES.CODE IN
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            #{code} 
	            </foreach>
            </if>
		</where>
	</select>

     <!-- 获取最新的修改时间 -->
	<select id="getLastModifyTime" resultType="long">
		<![CDATA[
			SELECT/** 综合:获取最新的修改时间  **/ MAX(VERSION_NO) FROM BSE.T_BAS_RESOURCES
		]]>
	</select>
	
	
	
	<!-- 087584-foss-lijun 权限的数据库访问常用方法 -->

	<resultMap id="resourceQueryResultMap"
   			type="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
		<result property="id" column="ID"  jdbcType="VARCHAR" />
		<result property="code" column="CODE"  jdbcType="VARCHAR" />
		<result property="name" column="NAME"  jdbcType="VARCHAR" />
		<result property="entryUri" column="ENTRY_URI"  jdbcType="VARCHAR" />
		<result property="resLevel" column="RES_LEVEL"  jdbcType="VARCHAR" />
		<result property="parentRes.code" column="PARENT_RES"  jdbcType="VARCHAR" />
		<result property="displayOrder" column="DISPLAY_ORDER"  jdbcType="VARCHAR" />
		<result property="checked" column="CHECKED"  jdbcType="CHAR" />
		<result property="resType" column="RES_TYPE"  jdbcType="VARCHAR" />
		<result property="leafFlag" column="LEAF_FLAG"  jdbcType="VARCHAR" />
		<result property="iconCls" column="ICON_CLS"  jdbcType="VARCHAR" />
		<result property="cls" column="CLS"  jdbcType="VARCHAR" />
		<result property="notes" column="NOTES"  jdbcType="VARCHAR" />
		<result property="versionNo" column="VERSION_NO"  jdbcType="NUMERIC" />
		<result property="belongSystemType" column="BELONG_SYSTEM_TYPE"  jdbcType="VARCHAR" />
		<result property="active" column="ACTIVE"  jdbcType="CHAR" />
		<result property="createDate" column="CREATE_TIME"  jdbcType="TIMESTAMP" />
		<result property="modifyDate" column="MODIFY_TIME"  jdbcType="TIMESTAMP" />
		<result property="createUser" column="CREATE_USER_CODE"  jdbcType="VARCHAR" />
		<result property="modifyUser" column="MODIFY_USER_CODE"  jdbcType="VARCHAR" />
	</resultMap>

	<sql id="query_resource_param">
		A.ID AS ID,		/** ID     **/ 
		A.CODE AS CODE,		/** 权限编码     **/ 
		A.NAME AS NAME,		/** 权限名称     **/ 
		A.ENTRY_URI AS ENTRY_URI,		/** 权限入口URI     **/ 
		A.RES_LEVEL AS RES_LEVEL,		/** 功能层次     **/ 
		A.PARENT_RES AS PARENT_RES,		/** 上级权限     **/ 
		A.DISPLAY_ORDER AS DISPLAY_ORDER,		/** 显示顺序     **/ 
		A.CHECKED AS CHECKED,		/** 是否权限检查     **/ 
		A.RES_TYPE AS RES_TYPE,		/** 权限类型     **/ 
		A.LEAF_FLAG AS LEAF_FLAG,		/** 是否子结点     **/ 
		A.ICON_CLS AS ICON_CLS,		/** 图标的CSS样式     **/ 
		A.CLS AS CLS,		/** 节点的CSS样式     **/ 
		A.NOTES AS NOTES,		/** 权限描述     **/ 
		A.VERSION_NO AS VERSION_NO,		/** 数据版本号     **/ 
		A.BELONG_SYSTEM_TYPE AS BELONG_SYSTEM_TYPE, /** 所属系统类型     **/ 
		A.ACTIVE AS ACTIVE,		/** 是否启用     **/ 
		A.CREATE_TIME AS CREATE_TIME,		/** 创建时间     **/ 
		A.MODIFY_TIME AS MODIFY_TIME,		/** 更新时间     **/ 
		A.CREATE_USER_CODE AS CREATE_USER_CODE,		/** 创建人     **/ 
		A.MODIFY_USER_CODE AS MODIFY_USER_CODE		/** 更新人     **/
	</sql>

	<!-- 插入数据 ： -->
	<insert id="addResource"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
		INSERT/** 综合:插入数据  **/ INTO BSE.T_BAS_RESOURCES(
		ID,
		CODE,
		NAME,
		ENTRY_URI,
		RES_LEVEL,
		PARENT_RES,
		DISPLAY_ORDER,
		CHECKED,
		RES_TYPE,
		LEAF_FLAG,
		ICON_CLS,
		CLS,
		NOTES,
		VERSION_NO,
		BELONG_SYSTEM_TYPE,
		ACTIVE,
		CREATE_TIME,
		MODIFY_TIME,
		CREATE_USER_CODE,
		MODIFY_USER_CODE) VALUES	
	(
		#{id, jdbcType=VARCHAR},
		#{code, jdbcType=VARCHAR},
		#{name, jdbcType=VARCHAR},
		#{entryUri, jdbcType=VARCHAR},
		#{resLevel, jdbcType=VARCHAR},
		#{parentRes.code, jdbcType=VARCHAR},
		#{displayOrder, jdbcType=VARCHAR},
		#{checked, jdbcType=CHAR},
		#{resType, jdbcType=VARCHAR},
		#{leafFlag, jdbcType=VARCHAR},
		#{iconCls, jdbcType=VARCHAR},
		#{cls, jdbcType=VARCHAR},
		#{notes, jdbcType=VARCHAR},
		#{versionNo, jdbcType=NUMERIC},
		#{belongSystemType, jdbcType=VARCHAR},
		#{active, jdbcType=CHAR},
		#{createDate, jdbcType=TIMESTAMP},
		#{modifyDate, jdbcType=TIMESTAMP},
		#{createUser, jdbcType=VARCHAR},
		#{modifyUser, jdbcType=VARCHAR}
	)
	</insert> 

	<!-- 根据CODE 删除数据： -->
	<update id="deleteResource" 
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
		UPDATE/** 综合:根据CODE 删除数据  **/ BSE.T_BAS_RESOURCES A 
		SET A.ACTIVE=#{entity.active,jdbcType=CHAR},
			A.VERSION_NO=#{entity.versionNo,jdbcType=NUMERIC},
			A.MODIFY_USER_CODE=#{entity.modifyUser,jdbcType=VARCHAR}, 
			A.MODIFY_TIME = #{entity.modifyDate,jdbcType=TIMESTAMP} 
		<where>
			A.CODE=#{entity.code,jdbcType=VARCHAR} 
			AND  A.ACTIVE=#{conditionActive,jdbcType=CHAR}
		</where>
	</update>

	<!-- 批量作废 -->
	<update id="deleteResourceMore"
		parameterType="HashMap">
		UPDATE/** 综合:批量作废  **/ BSE.T_BAS_RESOURCES A 
		SET A.ACTIVE=#{entity.active,jdbcType=CHAR},
			A.VERSION_NO=#{entity.versionNo,jdbcType=NUMERIC},
			A.MODIFY_USER_CODE=#{entity.modifyUser,jdbcType=VARCHAR}, 
			A.MODIFY_TIME = #{entity.modifyDate,jdbcType=TIMESTAMP} 
        <where>
            <if test="codes!=null and codes.length > 0">
                CODE in
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            #{code} 
	            </foreach>
            </if>
            AND  A.ACTIVE=#{conditionActive,jdbcType=CHAR}
        </where>       
	</update>

	<!-- 根据CODE 更新数据：由于更新是先删除再插入，所以这个映射用不上： -->
	<update id="updateResource" 
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
		UPDATE/** 综合:根据CODE 更新数据：由于更新是先删除再插入，所以这个映射用不上  **/ BSE.T_BAS_RESOURCES A SET 
		A.ID = #{id, jdbcType=VARCHAR},
		A.CODE = #{code, jdbcType=VARCHAR},
		A.NAME = #{name, jdbcType=VARCHAR},
		A.ENTRY_URI = #{entryUri, jdbcType=VARCHAR},
		A.RES_LEVEL = #{resLevel, jdbcType=VARCHAR},
		A.PARENT_RES = #{parentRes.code, jdbcType=VARCHAR},
		A.DISPLAY_ORDER = #{displayOrder, jdbcType=VARCHAR},
		A.CHECKED = #{checked, jdbcType=CHAR},
		A.RES_TYPE = #{resType, jdbcType=VARCHAR},
		A.LEAF_FLAG = #{leafFlag, jdbcType=VARCHAR},
		A.ICON_CLS = #{iconCls, jdbcType=VARCHAR},
		A.CLS = #{cls, jdbcType=VARCHAR},
		A.NOTES = #{notes, jdbcType=VARCHAR},
		A.VERSION_NO=#{versionNo,jdbcType=NUMERIC},
		A.BELONG_SYSTEM_TYPE=#{belongSystemType,jdbcType=VARCHAR},
		A.ACTIVE = #{active, jdbcType=CHAR},
		A.CREATE_TIME = #{createDate, jdbcType=TIMESTAMP},
		A.MODIFY_TIME = #{modifyDate, jdbcType=TIMESTAMP},
		A.CREATE_USER_CODE = #{createUser, jdbcType=VARCHAR},
		A.MODIFY_USER_CODE = #{modifyUser, jdbcType=VARCHAR}
		<where>
			A.CODE = #{code,jdbcType=VARCHAR}	
		</where>
	</update>

	<!-- 根据 CODE 精确查询数据 -->
	<select id="queryResourceByCode" resultMap="resourceQueryResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
		<![CDATA[
		  SELECT 
		  /** 综合:根据 CODE 精确查询数据  **/
		]]>
		<include refid="query_resource_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_RESOURCES A 
		]]>
		<where>
			A.CODE=#{code} 
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</select>

	<!-- 根据 CODE 批量精确查询数据 -->
	<select id="queryResourceBatchByCode" resultMap="resourceQueryResultMap"
		parameterType="HashMap">
		<![CDATA[
		  SELECT 
		  /** 综合:根据 CODE 批量精确查询数据  **/
		]]>
		<include refid="query_resource_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_RESOURCES A 
		]]>
		<where>
			<if test="codes!=null and codes.length > 0">
                A.CODE in
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            #{code,jdbcType=VARCHAR} 
	            </foreach>
            </if> 
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</select>

	<!-- 根据entity精确查询的查询条件 ，如果属性为空，则此属性不作为条件-->
	<sql id="query_queryResourceExactByEntity_condition_param">		
		<where>
	      	<if test="id!=null and id != ''">
	        	AND A.ID = #{id,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="code!=null and code != ''">
	        	AND A.CODE = #{code,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="name!=null and name != ''">
	        	AND A.NAME like CONCAT(CONCAT('%', #{name,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="entryUri!=null and entryUri != ''">
	        	AND A.ENTRY_URI = #{entryUri,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="resLevel!=null and resLevel != ''">
	        	AND A.RES_LEVEL = #{resLevel,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="parentRes!=null and parentRes.code!=null and parentRes.code != ''">
	        	AND A.PARENT_RES = #{parentRes.code,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="displayOrder!=null and displayOrder != ''">
	        	AND A.DISPLAY_ORDER = #{displayOrder,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="checked!=null and checked != ''">
	        	AND A.CHECKED = #{checked,jdbcType=CHAR} 
	      	</if>
	      	<if test="resType!=null and resType != ''">
	        	AND A.RES_TYPE = #{resType,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="leafFlag!=null and leafFlag != ''">
	        	AND A.LEAF_FLAG = #{leafFlag,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="iconCls!=null and iconCls != ''">
	        	AND A.ICON_CLS = #{iconCls,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="cls!=null and cls != ''">
	        	AND A.CLS = #{cls,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="notes!=null and notes != ''">
	        	AND A.NOTES = #{notes,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="versionNo!=null and versionNo != ''">
	        	AND A.VERSION_NO = #{versionNo,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="belongSystemType!=null and belongSystemType != ''">
	        	AND A.BELONG_SYSTEM_TYPE = #{belongSystemType,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="systemTypes != null and systemTypes.size>0">
	        	AND A.RES_TYPE NOT IN 
	        	<foreach collection="systemTypes" open="(" close=")" separator="," item="resType">
	        	      	#{resType} 
				</foreach>
	      	</if>
	      	AND A.ACTIVE =  #{active,jdbcType=CHAR} 
	      	ORDER BY TO_NUMBER(A.DISPLAY_ORDER)
		</where>
	</sql>
	<!-- 根据实体动态条件精确查询,如果属性的值为null或者空白则无效： -->
	<select id="queryResourceExactByEntity" resultMap="resourceQueryResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
		<![CDATA[
		  SELECT 
		  /** 综合:根据实体动态条件精确查询,如果属性的值为null或者空白则无效  **/
		]]>
		<include refid="query_resource_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_RESOURCES A 
		]]>
		<include refid="query_queryResourceExactByEntity_condition_param" />
	</select>
	<!-- 根据实体动态条件精确查询总数,如果属性的值为null或者空白则无效： -->
	<select id="queryResourceExactByEntityCount" resultType="Long"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
		<![CDATA[
			 SELECT/** 综合:根据实体动态条件精确查询总数,如果属性的值为null或者空白则无效  **/ count(*) 
			 FROM BSE.T_BAS_RESOURCES A 
		]]>
		<include refid="query_queryResourceExactByEntity_condition_param" />
	</select>

	<!-- 根据entity模糊查询,如果属性的值为null或者空白则无效： -->
	<sql id="query_queryResourceByEntity_condition_param">		
		<where>
	      	<if test="id!=null and id != ''">
	        	AND A.ID like CONCAT(CONCAT('%', #{id,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="code!=null and code != ''">
	        	AND A.CODE like CONCAT(CONCAT('%', #{code,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="name!=null and name != ''">
	        	AND A.NAME like CONCAT(CONCAT('%', #{name,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="entryUri!=null and entryUri != ''">
	        	AND A.ENTRY_URI like CONCAT(CONCAT('%', #{entryUri,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="resLevel!=null and resLevel != ''">
	        	AND A.RES_LEVEL like CONCAT(CONCAT('%', #{resLevel,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="parentRes!=null and parentRes.code!=null and parentRes.code != ''">
	        	AND A.PARENT_RES like CONCAT(CONCAT('%', #{parentRes.code,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="displayOrder!=null and displayOrder != ''">
	        	AND A.DISPLAY_ORDER like CONCAT(CONCAT('%', #{displayOrder,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="checked!=null and checked != ''">
	        	AND A.CHECKED like CONCAT(CONCAT('%', #{checked,jdbcType=CHAR}), '%') 
	      	</if>
	      	<if test="resType!=null and resType != ''">
	        	AND A.RES_TYPE like CONCAT(CONCAT('%', #{resType,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="leafFlag!=null and leafFlag != ''">
	        	AND A.LEAF_FLAG like CONCAT(CONCAT('%', #{leafFlag,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="iconCls!=null and iconCls != ''">
	        	AND A.ICON_CLS like CONCAT(CONCAT('%', #{iconCls,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="cls!=null and cls != ''">
	        	AND A.CLS like CONCAT(CONCAT('%', #{cls,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="notes!=null and notes != ''">
	        	AND A.NOTES like CONCAT(CONCAT('%', #{notes,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="versionNo!=null and versionNo != ''">
	        	AND A.VERSION_NO like CONCAT(CONCAT('%', #{versionNo,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="belongSystemType!=null and belongSystemType != ''">
	        	AND A.BELONG_SYSTEM_TYPE = #{belongSystemType,jdbcType=VARCHAR} 
	      	</if>	
	      	
			AND A.ACTIVE= #{active,jdbcType=CHAR} 
	      	ORDER BY TO_NUMBER(A.DISPLAY_ORDER)
		</where>
	</sql>
	<!-- 根据实体动态条件模糊查询,如果属性的值为null或者空白则无效： -->
	<select id="queryResourceByEntity" resultMap="resourceQueryResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
		<![CDATA[
		  SELECT
		   /** 综合:根据实体动态条件模糊查询,如果属性的值为null或者空白则无效  **/ 
		]]>
		<include refid="query_resource_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_RESOURCES A 
		]]>
		<include refid="query_queryResourceByEntity_condition_param" />
	</select>
	<!-- 根据实体动态条件模糊查询总数,如果属性的值为null或者空白则无效： -->
	<select id="queryResourceByEntityCount" resultType="Long"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
		<![CDATA[
			 SELECT/** 综合:根据实体动态条件模糊查询总数,如果属性的值为null或者空白则无效  **/ count(*) 
			 FROM BSE.T_BAS_RESOURCES A 
		]]>
		<include refid="query_queryResourceByEntity_condition_param" />
	</select>
	
	<!-- 查询所有 权限 信息 以供下载 -->
	<!--zxy 20140408 修改:增加版本号等于的判断条件 -->
	<select id="queryResourceForDownload"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity"
		resultMap="resourceQueryResultMap">
		<![CDATA[
			SELECT
			/** 综合:查询所有 权限 信息 以供下载  **/
		]]>
		<include refid="query_resource_param" />
		<![CDATA[
			FROM BSE.T_BAS_RESOURCES A
		]]>
		<where>
			<if test="versionNo != null">
				AND A.VERSION_NO >= #{versionNo,jdbcType=NUMERIC}
			</if>
			<if test="active != null and active != ''">
				AND A.ACTIVE = #{active,jdbcType=CHAR}
			</if>
		</where>
		<![CDATA[
			ORDER BY A.VERSION_NO,A.ID ASC
		]]>
	</select>
	
	
	
	<!-- 下面为特殊方法 -->
	
	<!-- 特殊删除 -->
	<!-- 根据CODE 递归作废数据： -->
	<update id="deleteResourceRecursion" 
		parameterType="HashMap">
    UPDATE/** 综合:根据CODE 递归作废数据  **/ BSE.T_BAS_RESOURCES A 
		SET A.ACTIVE=#{entity.active,jdbcType=CHAR},
			A.VERSION_NO=#{entity.versionNo,jdbcType=NUMERIC},
			A.MODIFY_USER_CODE=#{entity.modifyUser,jdbcType=VARCHAR},  
			A.MODIFY_TIME = #{entity.modifyDate,jdbcType=TIMESTAMP} 
     WHERE EXISTS 
     (SELECT 1
              FROM (SELECT CODE
                      FROM BSE.T_BAS_RESOURCES
                     WHERE ACTIVE = #{conditionActive,jdbcType=CHAR} 
                   CONNECT BY PRIOR CODE = PARENT_RES AND ACTIVE = #{conditionActive,jdbcType=CHAR} 
                     START WITH CODE = #{entity.code,jdbcType=VARCHAR}) B
             WHERE A.CODE = B.CODE)
       AND A.ACTIVE = #{conditionActive,jdbcType=CHAR}
	</update>

	
	
	<!-- 下面为特殊查询 -->
	
	<!-- 模糊查询 根据权限名称name,角色编码 查询角色包含的指定‘名称’的权限 -->
	<select id="queryResourceByNameRole"
			resultMap="resourceQueryResultMap"
			parameterType="HashMap">
		SELECT 
		/** 综合:模糊查询 根据权限名称name,角色编码 查询角色包含的指定‘名称’的权限  **/
		<include refid="query_resource_param" />
		FROM BSE.T_BAS_RESOURCES A,
			BSE.T_BAS_ROLE_RESOURCES B 
		<where>
			A.NAME like CONCAT(CONCAT('%', #{resource.name,jdbcType=VARCHAR}), '%') 
			AND A.CODE = B.RESOURCE_CODE 
			AND B.ROLE_CODE = #{role.code,jdbcType=VARCHAR}
			
			AND A.ACTIVE = #{conditionActive,jdbcType=CHAR} 
			AND B.ACTIVE = #{conditionActive,jdbcType=CHAR} 
		</where>	
	</select>	
	
	<!-- 模糊查询 根据权限名称name查询权限的所有上级  ，上下级通过CODE,PARENT_RES来关联-->
	<select id="queryResourceUpByName"
			resultMap="resourceQueryResultMap"
			parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
		SELECT 
		/** 综合:模糊查询 根据权限名称name查询权限的所有上级  ，上下级通过CODE,PARENT_RES来关联  **/
		<include refid="query_resource_param" />
		FROM BSE.T_BAS_RESOURCES A	,	
			(
				SELECT CODE
				FROM BSE.T_BAS_RESOURCES 
				WHERE ACTIVE= #{active,jdbcType=CHAR} 
				CONNECT BY PRIOR PARENT_RES = CODE
				START WITH NAME LIKE CONCAT(CONCAT('%', #{name,jdbcType=VARCHAR}), '%') 
			) B 
		<where>
			A.CODE = B.CODE
		</where>	
	</select>		
	
	<!-- 模糊查询 根据权限编码code查询权限的所有上级  ，上下级通过CODE,PARENT_RES来关联-->
	<select id="queryResourceUpByCode"
			resultMap="resourceQueryResultMap"
			parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.ResourceEntity">
		SELECT
		/** 综合:模糊查询 根据权限编码code查询权限的所有上级  ，上下级通过CODE,PARENT_RES来关联  **/ 
		<include refid="query_resource_param" />
		FROM BSE.T_BAS_RESOURCES A	,	
			(
				SELECT CODE
				FROM BSE.T_BAS_RESOURCES 
				WHERE ACTIVE= #{active,jdbcType=CHAR} 
				CONNECT BY PRIOR PARENT_RES = CODE AND ACTIVE=#{active,jdbcType=CHAR} 
				START WITH CODE = #{code,jdbcType=VARCHAR}
			) B 
		<where>
			A.CODE = B.CODE
		</where>	
	</select>	
	
	<!-- 精确查询 
		查询权限的根结点 -->
	<select id="queryResourceRoot" resultMap="resourceQueryResultMap"
		parameterType="HashMap">
		<![CDATA[
		  SELECT 
		  /** 综合:精确查询查询权限的根结点  **/
		]]>
		<include refid="query_resource_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_RESOURCES A 
		]]>
		<where>
			A.PARENT_RES  is null
			AND A.BELONG_SYSTEM_TYPE = #{belongSystemType,jdbcType=VARCHAR}
			AND A.ACTIVE = #{conditionActive,jdbcType=CHAR} 
		</where>
	</select>
	
		
	<!-- 精确查询 
		返回符合记录的条数
		根据上级权限，角色查询‘角色所包含的这个权限的下级权限’ -->
	<select id="queryResourceCountByRoleResource" 
			resultType="Long"
			parameterType="HashMap">
     SELECT
     /** 综合:精确查询返回符合记录的条数根据上级权限，角色查询‘角色所包含的这个权限的下级权限  **/
      count(B.RESOURCE_CODE)
       FROM bse.T_BAS_ROLE_RESOURCES B,
            (SELECT C.CODE AS RESOURCE_CODE
               FROM bse.T_BAS_RESOURCES C
              WHERE C.ACTIVE = #{conditionActive,jdbcType=CHAR}
             CONNECT BY PRIOR C.CODE = C.PARENT_RES
                    AND C.ACTIVE = #{conditionActive,jdbcType=CHAR} 
              START WITH C.CODE = #{resourceCode,jdbcType=VARCHAR}) D
      WHERE D.RESOURCE_CODE = B.RESOURCE_CODE 
        and B.ROLE_CODE = #{roleCode,jdbcType=VARCHAR} 
        AND B.ACTIVE = #{conditionActive,jdbcType=CHAR}

	</select>
	
	<!-- 作废角色权限	
		根据上级权限，角色查询‘角色所包含的这个权限的下级权限’,然后作废 -->
	<update id="deleteResourceByRoleResource" 
			parameterType="HashMap">
UPDATE
 /** 综合:作废角色权限 根据上级权限，角色查询‘角色所包含的这个权限的下级权限’,然后作废  **/
 bse.T_BAS_ROLE_RESOURCES A SET ACTIVE=#{deleteActive,jdbcType=CHAR}  
 WHERE A.VIRTUAL_CODE IN (SELECT B.VIRTUAL_CODE
                            FROM bse.T_BAS_ROLE_RESOURCES B,
                                 (SELECT C.CODE AS RESOURCE_CODE
                                    FROM bse.T_BAS_RESOURCES C
                                   WHERE C.ACTIVE = #{conditionActive,jdbcType=CHAR} 
                                  CONNECT BY PRIOR C.CODE = C.PARENT_RES
                                         AND C.ACTIVE = #{conditionActive,jdbcType=CHAR} 
                                   START WITH C.CODE = #{resourceCode,jdbcType=VARCHAR}) D
                           WHERE D.RESOURCE_CODE = B.RESOURCE_CODE
                             and B.ROLE_CODE = #{roleCode,jdbcType=VARCHAR}
                             AND B.ACTIVE = #{conditionActive,jdbcType=CHAR} )

	</update>
		<!-- 根据节点查询所有的子节点 -->
	<select id="queryResourceByCodeAllChildNode" resultMap="resourceQueryResultMap"
		parameterType="HashMap">
		<![CDATA[
		  SELECT 
		  /** 综合:根据节点查询所有的子节点  **/
		]]>
		<include refid="query_resource_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_RESOURCES A
		]]>
		<where>
			A.ACTIVE = #{active,jdbcType=CHAR}
			CONNECT BY NOCYCLE PRIOR A.CODE = A.PARENT_RES
 			START WITH A.CODE = #{code,jdbcType=VARCHAR}
		</where>
	</select>
	<!-- 根据用户和部门编码查询GUI权限信息 -->
	<select id="queryGUIResourceByCode" resultMap="resourceQueryResultMap"
	     parameterType="HashMap">
	      SELECT 
	      /** 综合:根据用户和部门编码查询GUI权限信息  **/
	      <include refid="query_resource_param" />
	      FROM BSE.T_BAS_RESOURCES A WHERE A.CODE IN (
                   SELECT T2.RESOURCE_CODE FROM BSE.T_BAS_ROLE_RESOURCES T2 WHERE  EXISTS ( 
                                 SELECT 1 FROM BSE.T_BAS_USER_ORG_ROLE T3 WHERE T3.ACTIVE=#{active,jdbcType=CHAR} 
                                 AND T3.EMP_CODE=#{empCode,jdbcType=VARCHAR} AND T3.ORG_CODE=#{orgCode,jdbcType=VARCHAR}
                                 AND T2.ROLE_CODE=T3.ROLE_CODE )
                   AND T2.ACTIVE=#{active,jdbcType=CHAR}
          ) AND A.ACTIVE=#{active,jdbcType=CHAR} AND A.BELONG_SYSTEM_TYPE=#{belongSystemType,jdbcType=VARCHAR}
          UNION
          SELECT 
	      <include refid="query_resource_param" />
	      FROM BSE.T_BAS_RESOURCES A WHERE A.PARENT_RES IS NULL AND A.ACTIVE=#{active,jdbcType=CHAR} AND 
	      A.BELONG_SYSTEM_TYPE=#{belongSystemType,jdbcType=VARCHAR}
	</select>
  
  	<!-- 根据运单号查询是否是悟空快递单 -->
	<select id="queryIsECSByWayBillNo" resultType="java.lang.String"
		parameterType="java.lang.String">
		select
		 IS_ECS
		from PKP.T_SRV_WAYBILL
		where waybill_no = #{waybillNo,jdbcType=VARCHAR}
		and active ='Y'
	</select>
</mapper>
