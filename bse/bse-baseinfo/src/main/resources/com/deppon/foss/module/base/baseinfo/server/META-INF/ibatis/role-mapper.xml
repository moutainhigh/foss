<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="foss.bse.bse-baseinfo.role">

	<!-- 角色单表查询结果映射配置 -->
	<resultMap id="roleSimpleResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.domain.RoleEntity">
		<id property="id" column="ID" />
		<result property="name" column="NAME" />
		<result property="code" column="CODE" />
		<result property="active" column="ACTIVE" />
		<result property="notes" column="NOTES" />
		<result property="createUser" column="CREATE_USER_CODE"
			javaType="String" jdbcType="VARCHAR" />
		<result property="createDate" column="CREATE_TIME"
			javaType="Date" jdbcType="TIMESTAMP" />
		<result property="modifyUser" column="MODIFY_USER_CODE"
			javaType="String" jdbcType="VARCHAR" />
		<result property="modifyDate" column="MODIFY_TIME"
			javaType="Date" jdbcType="TIMESTAMP" />
	</resultMap>

	<!-- 角色插入参数配置信息 -->
	<sql id="select_simple_param">
		ID,
		NAME,
		CODE,
		ACTIVE,
		NOTES,
		CREATE_USER_CODE,
		CREATE_TIME,
		MODIFY_USER_CODE,
		MODIFY_TIME
	</sql>
	
	<!-- 角色结果映射配置 -->
	<resultMap id="roleAliasResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.domain.RoleEntity">
		<id property="id" column="ROLE_ID" />
		<result property="name" column="ROLE_NAME" />
		<result property="code" column="ROLE_CODE" />
		<result property="active" column="ROLE_ACTIVE" />
		<result property="notes" column="ROLE_NOTES" />
		<result property="createUser" column="ROLE_CREATE_USER_CODE"
			javaType="String" jdbcType="VARCHAR" />
		<result property="createDate" column="ROLE_CREATE_TIME"
			javaType="Date" jdbcType="TIMESTAMP" />
		<result property="modifyUser" column="ROLE_MODIFY_USER_CODE"
			javaType="String" jdbcType="VARCHAR" />
		<result property="modifyDate" column="ROLE_MODIFY_TIME"
			javaType="Date" jdbcType="TIMESTAMP" />
	</resultMap>
	
	<!-- 角色结果信息 -->
	<sql id="select_simple_alias_param">
	   ROLE.ID               AS ROLE_ID,
       ROLE.NAME             AS ROLE_NAME,
       ROLE.CODE             AS ROLE_CODE,
       ROLE.ACTIVE           AS ROLE_ACTIVE,
       ROLE.NOTES            AS ROLE_NOTES,
       ROLE.CREATE_USER_CODE AS ROLE_CREATE_USER_CODE,
       ROLE.CREATE_TIME      AS ROLE_CREATE_TIME,
       ROLE.MODIFY_USER_CODE AS ROLE_MODIFY_USER_CODE,
       ROLE.MODIFY_TIME      AS ROLE_MODIFY_TIME
	</sql>
	
	<!-- 角色与功能ID结果映射配置 -->
	<resultMap id="roleAssociationResultMap"
		type="com.deppon.foss.module.base.baseinfo.api.shared.domain.RoleEntity">
		<id property="id" column="ROLE_ID" />
		<result property="name" column="ROLE_NAME" />
		<result property="code" column="ROLE_CODE" />
		<result property="active" column="ROLE_ACTIVE" />
		<result property="notes" column="ROLE_NOTES" />
		<result property="createUser" column="ROLE_CREATE_USER_CODE"
			javaType="String" jdbcType="VARCHAR" />
		<result property="createDate" column="ROLE_CREATE_TIME"
			javaType="Date" jdbcType="TIMESTAMP" />
		<result property="modifyUser" column="ROLE_MODIFY_USER_CODE"
			javaType="String" jdbcType="VARCHAR" />
		<result property="modifyDate" column="ROLE_MODIFY_TIME"
			javaType="Date" jdbcType="TIMESTAMP" />
		<collection property="resIds" column="RESOURCES_ID" ofType="string">
			<result column="RESOURCES_ID"/>
		</collection>
	</resultMap>

	<!-- 角色功能ID结果信息 -->
	<sql id="role_association_param">
	   ROLE.ID               AS ROLE_ID,
       ROLE.NAME             AS ROLE_NAME,
       ROLE.CODE             AS ROLE_CODE,
       ROLE.ACTIVE           AS ROLE_ACTIVE,
       ROLE.NOTES            AS ROLE_NOTES,
       ROLE.VERSION_NO       AS ROLE_VERSION_NO,
       ROLE.CREATE_USER_CODE AS ROLE_CREATE_USER_CODE,
       ROLE.CREATE_TIME      AS ROLE_CREATE_TIME,
       ROLE.MODIFY_USER_CODE AS ROLE_MODIFY_USER_CODE,
       RESOURCES.RESOURCE_CODE AS RESOURCES_ID
	</sql>
	
	<!-- 缓存加载所有角色与功能ID -->
	<select id="getRoleAndResIds" resultMap="roleAssociationResultMap" parameterType="map">
		<![CDATA[
			SELECT 
			/** 综合:缓存加载所有角色与功能ID  **/
		]]>
		<include refid="role_association_param" />
		<![CDATA[
  			FROM BSE.T_BAS_ROLE ROLE
       		INNER JOIN BSE.T_BAS_ROLE_RESOURCES RESOURCES 
 				ON RESOURCES.ROLE_CODE = ROLE.CODE
 			WHERE ROLE.ACTIVE = #{roleActive}
 			AND RESOURCES.ACTIVE = #{roleResActive}
		]]>
	</select>
	
	<!-- 缓存根据角色编码加载角色与功能Code -->
	<select id="getRoleAndResCodesByCode" resultMap="roleAssociationResultMap" parameterType="map">
		<![CDATA[
			SELECT 
			/** 综合:缓存根据角色编码加载角色与功能Code  **/
		]]>
		<include refid="role_association_param" />
		<![CDATA[
  			FROM BSE.T_BAS_ROLE ROLE
       		INNER JOIN BSE.T_BAS_ROLE_RESOURCES RESOURCES 
 				ON RESOURCES.ROLE_CODE = ROLE.CODE
 			WHERE ROLE.CODE = #{roleCode} AND ROLE.ACTIVE = #{roleActive}
 			AND RESOURCES.ACTIVE = #{roleResActive}
		]]>
	</select>
	
	<!-- 缓存根据更新版本加载角色与功能Code -->
	<select id="getByLastModifyRole" resultMap="roleAssociationResultMap" parameterType="map">
		<![CDATA[
			SELECT 
			/** 综合:缓存根据更新版本加载角色与功能Code  **/
		]]>
		<include refid="role_association_param" />
		<![CDATA[
			FROM BSE.T_BAS_ROLE ROLE
       		INNER JOIN BSE.T_BAS_ROLE_RESOURCES RESOURCES 
 				ON RESOURCES.ROLE_CODE = ROLE.CODE
 			WHERE ROLE.VERSION_NO > #{versionNo}
 			AND ROLE.ACTIVE = #{roleActive}
 			AND RESOURCES.ACTIVE = #{roleResActive}
		]]>
	</select>
	
	<!-- 根据 CODE 批量精确查询数据 -->
	<select id="getRoleBatchByCode" resultMap="roleAssociationResultMap"
		parameterType="map">
		<![CDATA[
		  SELECT 
		  /** 综合:根据 CODE 批量精确查询数据  **/
		]]>
		<include refid="role_association_param" />
		<![CDATA[
			FROM BSE.T_BAS_ROLE ROLE
       		INNER JOIN BSE.T_BAS_ROLE_RESOURCES RESOURCES 
 				ON RESOURCES.ROLE_CODE = ROLE.CODE
		]]>	
		<where>
			<if test="codes!=null and codes.length > 0">
                RESOURCES.ENTRY_URI in
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            #{code,jdbcType=VARCHAR} 
	            </foreach>
            </if> 
			AND ROLE.ACTIVE = #{roleActive}
 			AND RESOURCES.ACTIVE = #{roleResActive}
		</where>
	</select>

	<!-- 得到最后更新时间 -->
	<select id="getLastModifyTime" resultType="long">
		SELECT/** 综合:得到最后更新时间  **/ MAX(VERSION_NO) FROM BSE.T_BAS_ROLE
	</select>
	
	
	
	<!-- 角色的基本DAO 2012-10-25 087584-foss-lijun -->
	
	<resultMap id="roleQueryResultMap"
   			type="com.deppon.foss.module.base.baseinfo.api.shared.domain.RoleEntity">
		<result property="id" column="ID"  jdbcType="VARCHAR" />
		<result property="name" column="NAME"  jdbcType="VARCHAR" />
		<result property="code" column="CODE"  jdbcType="VARCHAR" />
		<result property="notes" column="NOTES"  jdbcType="VARCHAR" />
		<result property="createDate" column="CREATE_TIME"  jdbcType="TIMESTAMP" />
		<result property="modifyDate" column="MODIFY_TIME"  jdbcType="TIMESTAMP" />
		<result property="versionNo" column="VERSION_NO"  jdbcType="NUMERIC" />
		<result property="active" column="ACTIVE"  jdbcType="CHAR" />
		<result property="createUser" column="CREATE_USER_CODE"  jdbcType="VARCHAR" />
		<result property="modifyUser" column="MODIFY_USER_CODE"  jdbcType="VARCHAR" />
	</resultMap>

	<sql id="query_role_param">
		A.ID AS ID,		/** ID     **/ 
		A.NAME AS NAME,		/** 角色名称     **/ 
		A.CODE AS CODE,		/** 角色编号     **/ 
		A.NOTES AS NOTES,		/** 角色描述     **/ 
		A.CREATE_TIME AS CREATE_TIME,		/** 创建时间     **/ 
		A.MODIFY_TIME AS MODIFY_TIME,		/** 更新时间     **/ 
		A.VERSION_NO AS VERSION_NO,		/** 数据版本号     **/ 
		A.ACTIVE AS ACTIVE,		/** 是否启用     **/ 
		A.CREATE_USER_CODE AS CREATE_USER_CODE,		/** 创建人     **/ 
		A.MODIFY_USER_CODE AS MODIFY_USER_CODE		/** 更新人     **/
	</sql>

	<!-- 插入数据 ： -->
	<insert id="addRole"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.RoleEntity">
		INSERT/** 综合:插入数据  **/ INTO BSE.T_BAS_ROLE(
		ID,
		NAME,
		CODE,
		NOTES,
		CREATE_TIME,
		MODIFY_TIME,
		VERSION_NO,
		ACTIVE,
		CREATE_USER_CODE,
		MODIFY_USER_CODE) VALUES	
	(
		#{id, jdbcType=VARCHAR},
		#{name, jdbcType=VARCHAR},
		#{code, jdbcType=VARCHAR},
		#{notes, jdbcType=VARCHAR},
		#{createDate, jdbcType=TIMESTAMP},
		#{modifyDate, jdbcType=TIMESTAMP},
		#{versionNo, jdbcType=NUMERIC},
		#{active, jdbcType=CHAR},
		#{createUser, jdbcType=VARCHAR},
		#{modifyUser, jdbcType=VARCHAR}
	)
	</insert> 

	<!-- 根据CODE 删除数据： -->
	<update id="deleteRole" 
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.RoleEntity">
		UPDATE/** 综合:根据CODE 删除数据  **/ BSE.T_BAS_ROLE A 
		SET A.ACTIVE=#{entity.active,jdbcType=CHAR},
			A.VERSION_NO=#{entity.versionNo,jdbcType=NUMERIC},
			A.MODIFY_USER_CODE=#{entity.modifyUser,jdbcType=VARCHAR}, 
			A.MODIFY_TIME = #{entity.modifyDate,jdbcType=TIMESTAMP} 
		<where>
			A.CODE=#{entity.code,jdbcType=VARCHAR} 
			AND  A.ACTIVE=#{conditionActive,jdbcType=CHAR}
		</where>
	</update>

	<!-- 批量作废 -->
	<update id="deleteRoleMore"
		parameterType="map">
		UPDATE/** 综合:批量作废  **/ BSE.T_BAS_ROLE A 
		SET A.ACTIVE=#{entity.active,jdbcType=CHAR},
			A.VERSION_NO=#{entity.versionNo,jdbcType=NUMERIC},
			A.MODIFY_USER_CODE=#{entity.modifyUser,jdbcType=VARCHAR}, 
			A.MODIFY_TIME = #{entity.modifyDate,jdbcType=TIMESTAMP} 
        <where>
            <if test="codes!=null and codes.length > 0">
                CODE in
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            #{code} 
	            </foreach>
            </if>
            AND  A.ACTIVE=#{conditionActive,jdbcType=CHAR}
        </where>       
	</update>

	<!-- 根据CODE 更新数据：由于更新是先删除再插入，所以这个映射用不上： -->
	<update id="updateRole" 
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.RoleEntity">
		UPDATE/** 综合:根据CODE 更新数据：由于更新是先删除再插入，所以这个映射用不上  **/ BSE.T_BAS_ROLE A SET 
		A.ID = #{id, jdbcType=VARCHAR},
		A.NAME = #{name, jdbcType=VARCHAR},
		A.CODE = #{code, jdbcType=VARCHAR},
		A.NOTES = #{notes, jdbcType=VARCHAR},
		A.CREATE_TIME = #{createDate, jdbcType=TIMESTAMP},
		A.MODIFY_TIME = #{modifyDate, jdbcType=TIMESTAMP},
		A.VERSION_NO=#{versionNo,jdbcType=NUMERIC},
		A.ACTIVE = #{active, jdbcType=CHAR},
		A.CREATE_USER_CODE = #{createUser, jdbcType=VARCHAR},
		A.MODIFY_USER_CODE = #{modifyUser, jdbcType=VARCHAR}
		<where>
			A.CODE = #{code,jdbcType=VARCHAR}	
		</where>
	</update>

	<!-- 根据 CODE 精确查询数据 -->
	<select id="queryRoleByCode" resultMap="roleQueryResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.RoleEntity">
		<![CDATA[
		  SELECT
		  /** 综合:根据 CODE 精确查询数据  **/ 
		]]>
		<include refid="query_role_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_ROLE A 
		]]>
		<where>
			A.CODE=#{code} 
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</select>

	<!-- 根据 CODE 批量精确查询数据 -->
	<select id="queryRoleBatchByCode" resultMap="roleQueryResultMap"
		parameterType="map">
		<![CDATA[
		  SELECT
		  /** 综合:根据 CODE 批量精确查询数据  **/ 
		]]>
		<include refid="query_role_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_ROLE A 
		]]>
		<where>
			<if test="codes!=null and codes.length > 0">
                A.CODE in
                <foreach collection="codes"  index="index" item="code"  open="(" separator="," close=")">  
	            #{code,jdbcType=VARCHAR} 
	            </foreach>
            </if> 
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</select>

	<!-- 根据entity精确查询的查询条件 ，如果属性为空，则此属性不作为条件-->
	<sql id="query_queryRoleExactByEntity_condition_param">		
		<where>
	      	<if test="id!=null and id != ''">
	        	AND A.ID = #{id,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="name!=null and name != ''">
	        	AND A.NAME = #{name,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="code!=null and code != ''">
	        	AND A.CODE = #{code,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="notes!=null and notes != ''">
	        	AND A.NOTES = #{notes,jdbcType=VARCHAR} 
	      	</if>
	      	<if test="versionNo!=null and versionNo != ''">
	        	AND A.VERSION_NO = #{versionNo,jdbcType=VARCHAR} 
	      	</if>	
	      	AND A.ACTIVE =  #{active,jdbcType=CHAR}
		</where>
	</sql>
	<!-- 根据实体动态条件精确查询,如果属性的值为null或者空白则无效： -->
	<select id="queryRoleExactByEntity" resultMap="roleQueryResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.RoleEntity">
		<![CDATA[
		  SELECT 
		  /** 综合:根据实体动态条件精确查询,如果属性的值为null或者空白则无效  **/
		]]>
		<include refid="query_role_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_ROLE A 
		]]>
		<include refid="query_queryRoleExactByEntity_condition_param" />
	</select>
	<!-- 根据实体动态条件精确查询总数,如果属性的值为null或者空白则无效： -->
	<select id="queryRoleExactByEntityCount" resultType="Long"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.RoleEntity">
		<![CDATA[
			 SELECT/** 综合:根据实体动态条件精确查询总数,如果属性的值为null或者空白则无效  **/ count(*) 
			 FROM BSE.T_BAS_ROLE A 
		]]>
		<include refid="query_queryRoleExactByEntity_condition_param" />
	</select>

	<!-- 根据entity模糊查询,如果属性的值为null或者空白则无效： -->
	<sql id="query_queryRoleByEntity_condition_param">		
		<where>
	      	<if test="id!=null and id != ''">
	        	AND A.ID like CONCAT(CONCAT('%', #{id,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="name!=null and name != ''">
	        	AND A.NAME like CONCAT(CONCAT('%', #{name,jdbcType=VARCHAR}), '%') escape '\'
	      	</if>
	      	<if test="code!=null and code != ''">
	        	AND A.CODE like CONCAT(CONCAT('%', #{code,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="notes!=null and notes != ''">
	        	AND A.NOTES like CONCAT(CONCAT('%', #{notes,jdbcType=VARCHAR}), '%') 
	      	</if>
	      	<if test="versionNo!=null and versionNo != ''">
	        	AND A.VERSION_NO like CONCAT(CONCAT('%', #{versionNo,jdbcType=VARCHAR}), '%') 
	      	</if>
			AND A.ACTIVE= #{active,jdbcType=CHAR}
		</where>
	</sql>
	<!-- 根据实体动态条件模糊查询,如果属性的值为null或者空白则无效： -->
	<select id="queryRoleByEntity" resultMap="roleQueryResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.RoleEntity">
		<![CDATA[
		  SELECT 
		  /** 综合:根据实体动态条件模糊查询,如果属性的值为null或者空白则无效  **/
		]]>
		<include refid="query_role_param" />
		<![CDATA[
	    	FROM BSE.T_BAS_ROLE A 
		]]>
		<include refid="query_queryRoleByEntity_condition_param" />
	</select>
	<!-- 根据实体动态条件模糊查询总数,如果属性的值为null或者空白则无效： -->
	<select id="queryRoleByEntityCount" resultType="Long"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.RoleEntity">
		<![CDATA[
			 SELECT/** 综合:根据实体动态条件模糊查询总数,如果属性的值为null或者空白则无效  **/ count(*) 
			 FROM BSE.T_BAS_ROLE A 
		]]>
		<include refid="query_queryRoleByEntity_condition_param" />
	</select>
	
	<!-- 查询所有 角色 信息 以供下载 -->
	<!--zxy 20140408 修改:增加id排序  增加版本号等于的判断条件 -->
	<select id="queryRoleForDownload"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.RoleEntity"
		resultMap="roleQueryResultMap">
		<![CDATA[
			SELECT
			/** 综合:查询所有 角色 信息 以供下载  **/
		]]>
		<include refid="query_role_param" />
		<![CDATA[
			FROM BSE.T_BAS_ROLE A
		]]>
		<where>
			<if test="versionNo != null">
				AND A.VERSION_NO >= #{versionNo,jdbcType=NUMERIC}
			</if>
	      	<if test="code!=null and code != ''">
	        	AND A.CODE = #{code,jdbcType=VARCHAR} 
	      	</if>
			<if test="active != null and active != ''">
				AND ACTIVE = #{active,jdbcType=CHAR}
			</if>
		</where>
		<![CDATA[
			ORDER BY A.VERSION_NO,A.ID ASC
		]]>
	</select>
	
	<!-- 313353 查询部门 未分配的用户角色-->
	<select id="queryRoleByUserOrgRole" resultMap="roleQueryResultMap"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.UserOrgRoleEntity">
		<![CDATA[SELECT]]>
		<include refid="query_role_param" />
		FROM BSE.T_BAS_ROLE A WHERE A.ACTIVE = 'Y' AND A.CODE NOT IN
		<![CDATA[
		(SELECT /** 综合:根据 CODE 批量精确查询数据  **/ role.CODE
	    	FROM BSE.T_BAS_ROLE role 
	    	INNER JOIN BSE.T_BAS_USER_ORG_ROLE userOrgRole ON role.CODE = userOrgRole.ROLE_CODE
		]]>
		<where>
			role.ACTIVE = 'Y' AND userOrgRole.ACTIVE = 'Y'
			<if test="id!=null and id != ''">
				AND userOrgRole.ID = #{id,jdbcType=VARCHAR}
			</if>
			<!-- 待数据库添加 <if test="virtualCode!=null and virtualCode != ''"> AND A.VIRTUAL_CODE 
				= #{virtualCode,jdbcType=VARCHAR} </if> -->
			<if test="empCode!=null and empCode != ''">
				AND userOrgRole.EMP_CODE = #{empCode,jdbcType=VARCHAR}
			</if>
			<if test="orgCode!=null and orgCode != ''">
				AND userOrgRole.ORG_CODE = #{orgCode,jdbcType=VARCHAR}
			</if>
			<if test="orgUnifiedCode!=null and orgUnifiedCode != ''">
				AND userOrgRole.ORG_UNIFIED_CODE = #{orgUnifiedCode,jdbcType=VARCHAR}
			</if>
			<if test="roleCode!=null and roleCode != ''">
				AND userOrgRole.ROLE_CODE = #{roleCode,jdbcType=VARCHAR}
			</if>
		</where>)
	</select>
</mapper>
