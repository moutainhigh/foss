/*******************************************************************************
 * Copyright 2013 BSE TEAM
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *    http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * PROJECT NAME	: bse-baseinfo
 * 
 * FILE PATH        	: src/main/java/com/deppon/foss/module/base/baseinfo/server/service/impl/GoodsAreaService.java
 * 
 * FILE NAME        	: GoodsAreaService.java
 * 
 * AUTHOR			: FOSS综合管理开发组
 * 
 * HOME PAGE		:  http://www.deppon.com
 * 
 * COPYRIGHT		: Copyright (c) 2013  Deppon All Rights Reserved.
 ******************************************************************************/
/*
 * Copyright by Deppon and the original author or authors.
 * 
 * This document only allow internal use ,Any of your behaviors using the file
 * not internal will pay legal responsibility.
 *
 * You may learn more information about Deppon from
 *
 *      http://www.deppon.com
 *
 */ 

/**
dp-foss-综合管理系统用例-新增_修改_作废_查询月台信息-v1.02

修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-05-10 	新增 	朱俊勇	V0.1
2012-05-29	增加维护库位距离，可停靠线路入口和界面	朱俊勇	V0.2
2012-06-18	增加系统管理员操作界面	朱俊勇	V0.3
2012-07-08	移除和线路的绑定关系	朱俊勇	V0.4
2012-7-19	根据业务评审会议评委意见修改：增加“位置”字段；修改“可停靠车型”为复选框，可停靠车型细分为不同的车型	谢艳涛	V0.6
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-10-16	根据变更需求增加导入功能：在图一界面上增加“导入”按钮，并在功能按钮区域对导入按钮作描述；	谢艳涛	V1.01
2012-10-17	根据IBM张东平要求增加导出功能，附上导入Excel模板	谢艳涛	V1.02

1.	SUC-184-新增_修改_作废_查询月台信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场月台基础资料进行新增、修改、作废、查询操作。
系统管理员可对所有外场月台基础资料进行新增、修改、作废、查询操作。

1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	库位资料录入完成	SUC-85 修改_查询行政组织业务属性
 
后置条件	1、	为用户提供外场月台基础资料增删改查操作。
2、	为中转提供最优停靠月台计算
3、	为库位提供到月台的距离维护	SUC-371 计算车辆最优停靠月台
SUC-185 新增_修改_作废_查询库位信息

1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对所属外场的月台进行新增，修改，作废，查询操作。
1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
 
图一：月台查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：月台新增和修改界面】。
2)	导入按钮：点击导入按钮弹出界面【图三：导入Excel选择数据文件界面】，选择要导入月台数据文件（Excel文件），进行Excel数据导入；
3)	导出按钮：点击导出按钮，可以把月台所有数据导出到Excel中
4)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
5)	重置按钮：点击重置按钮，重置查询条件。
6)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
7)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：月台新增和修改界面】。
8)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，月台编号,可停靠车型,高度,宽度,升降台,位置。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，月台编号顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：月台新增和修改界面
 
图三：导入Excel选择数据文件界面
 
图四：导入Excel数据模板
1.5.5	界面描述-新增和修改界面
1．功能按钮区域
1)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
2)	重置按钮：点击重置按钮，回到当前界面的初始状态。
3)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【月台新增或修改信息】。

1.6	操作步骤
1.6.1	月台新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面。		
2	点击新增按钮。		进入月台新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入月台详细信息，点击保存按钮。		成功保存至系统。返回月台主界面。

月台新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	月台作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面。		
2	输入月台查询条件，查出需要作废的月台并选择一个或多个月台。	【月台查询结果列表信息】	
3	点击作废按钮。		弹出确认对话框。
4	点击确定按钮。		成功保存至系统。返回月台主界面。

月台作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	月台修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面		
2	输入月台查询条件，查出需要修改的月台并点击操作列的修改按钮。	【月台查询结果列表信息】	进入月台修改界面
3	修改月台信息，点击保存按钮。		成功保存至系统。返回月台主界面。

月台修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回月台主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	月台查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面		
2	输入月台查询条件，点击查询按钮。	【月台查询条件】	系统返回查询结果（按外场编码,月台编码顺序排列）
3	点击分页按钮，查看各页的查询结果		



1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的月台资料,在列表页面不展示外场编号和外场名称两列。
SR2	系统管理员只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场。
SR3	“外场编号”，“月台编号”组合唯一。
SR4	月台高度默认1.3米,宽度默认4.5米。

1.8	数据元素
1.8.1	月台查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	外场的标识名称	文本		20	否	精确匹配
月台编号	每个外场对月台的唯一编号，数字类型	数字		4	否	模糊匹配
可停靠车型	可以在该月台停靠的最大车型	下拉框		N/A	否	下拉框，内容读取自数据字典,包含：4.2米、6.5米、7.6米、9.6米、17.5米5种。
位置	月台所在位置：比如XX月台在A区	文本		50	否	支持模糊查询



1.8.2	月台查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	外场的标识名称	N/A	20	N/A	
月台编号	月台编号	N/A	4	N/A	
可停靠车型	该月台所能停靠的最大车型	N/A	40	N/A	内容读取自数据字典,包含4.2米及以上,4.2米以下两种。
高度	月台高度	N/A	40	N/A	单位为米。如无升降台，月台的高度为一个固定值；如有升降台，则为一个区间值。
宽度	月台宽度	N/A	40	N/A	单位为米，固定值
升降台	是否有升降台	N/A	1	N/A	有或无
位置	月台所在位置：比如XX月台在A区	N/A	50	N/A	


1.8.3	月台新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	外场的标识名称	文本	20	是	
月台编号	月台编号	文本	4	是	
升降台	是否有升降台	单选框	1	是	有，无
高度	月台高度	文本	40	是	单位为米。如无升降台，月台的高度为一个固定值；如有升降台，则为一个区间值。默认为1.3米。
宽度	月台宽度	文本	40	是	单位为米，固定值,默认为4.5米。
可停靠车型	可以在该月台停靠的最大车型	多选框	40	是	复选框，内容读取自数据字典,包含,包含：4.2米、6.5米、7.6米、9.6米、17.5米5种。
位置	月台所在位置：比如XX月台在A区	文本	50	否	
备注	备注信息	文本	200	否	

1.9	非功能性需求
使用量	 <  10 次/ 天, 录入之后基本固定，外场月台不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
		

		
dp-foss-综合管理系统用例-新增_修改_作废_查询库区信息-v1.11


修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-07-08 	新增 	朱俊勇	V0.1
2012-7-16	根据中转开发小组提出要求修改：增加“库区类别”属性	谢艳涛	V0.2
2012-7-17	根据朱俊勇老师要求修改：增加“库区编号”属性；“目的站”修改成只能匹配一个目的站	谢艳涛	V0.3
2012-7-20	根据评审会议评委意见修改：新增/修改时对于已经绑定库区的库位不允许勾选，必选先修改旧的记录；增加“显示全部库位”、“隐藏已绑定库位”按钮	谢艳涛	V0.6
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-12-1	根据变更需求增加业务规则SR8	谢艳涛	V1.11

1.	SUC-787 新增_修改_作废_查询库区信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场库区基础资料进行新增、修改、作废、查询操作。
系统管理员可对所有外场库区基础资料进行新增、修改、作废、查询操作。
1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	外场库位资料录入完成	SUC-85 修改_查询行政组织业务属性
SUC-185新增_修改_作废_查询库位信息
后置条件	1.	为管理员提供外场库区的增删改查等功能
2.	为其他用例提供外场库区基础资料查询。	SUC-371 计算车辆最优停靠月台

1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对外场的库区进行新增，修改，作废，查询，维护库位操作。
1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
  
图一：库区查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：库区新增和修改界面（一）】。
2)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
3)	重置按钮：点击重置按钮，重置查询条件。
4)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
5)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：库区新增和修改界面（一）】。
6)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，库区编号，库区名称，库区类型，货物类型，目的站，库区类别、备注。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，库区名称顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：库区新增和修改界面（一）
 
图三：库区新增和修改界面（二）
1.5.5	界面描述-新增和修改界面
1.	功能按钮区域
1)	显示全部库位按钮：点击显示全部库位按钮，显示外场所有库位，见图【图三：库区新增和修改界面（二）】。
2)	隐藏绑定库位按钮：点击隐藏绑定库位按钮，隐藏所有已绑定其他库区的库位，见图【图二：库区新增和修改界面（一）】
3)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
4)	重置按钮：点击重置按钮，回到当前界面的初始状态。
5)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【库区新增或修改条件】。
1.6	操作步骤
1.6.1	库区新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面。		
2	点击新增按钮。		进入库区新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入库区详细信息，点击保存按钮。参见业务规则：SR2、SR7		成功保存至系统。返回库区主界面。

库区新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	库区作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面。		
2	输入库区查询条件，查出需要作废的库区并选择一个或多个库区。	【库区列表信息】	
3	点击作废按钮。		弹出确认提示框。
4	点击确定按钮。		成功保存至系统。返回库区主界面。

库区作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	库区修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面		
2	输入库区查询条件，查出需要修改的库区并点击操作列的修改按钮。参见业务规则：SR2、SR7	【库区新增或修改信息】	进入库区修改界面
3	修改库区信息，点击保存按钮。		成功保存至系统。返回库区主界面。

库区修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回库区主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	库区查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面		
2	输入库区查询条件，点击查询按钮。	【库区查询条件】	系统返回查询结果（按库区编码顺序排列）
3	点击分页按钮，查看各页的查询结果		


1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的库区资料, 在列表页面不展示外场编号和外场名称两列。
SR2	“所属外场”,“库区编号”组合必须唯一
SR3	“目的站”只能选择一个；
1、	如果“库区类型”是“偏线库区”，则“目的站”不可填；
2、	如果“库区类型”是“空运库区”，则“目的站”只能从行政组织（空运总调）基础资料中选择；
3、	如果“库区类型”是“卡货库区”或者“普货库区”或“城际快车库区”或“混装库区”，则“目的站”只能从行政组织（营业部、外场）基础资料中选择
SR4	一个库区可以对应1个或多个库位，一个库位只能对应一个库区。
SR5	如果在选择库位时选中了已分配的库位，则取消原库位的对应关系，将之关联到新的库区。
SR6	只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场。
SR7	新增/修改库区界面，库区“对应库位”默认只显示所有未绑定其他库区的库位；显示全部库位时，已经绑定其他库区的库位是只读状态，不能勾选；
SR8	对于外场的货区，对应于各个线路的普通货区以及偏线，贵重物品等特殊货区，都必须唯一有一个货区对应

1.8	数据元素
1.8.1	库区查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	做辨识用的名称	文本		40	否	精确匹配
库区名称	做辨识用的名称	文本		40	否	精确匹配
库区类型	该库区的类型	下拉框		N/A	否	下拉框，内容读取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区，偏线库区和空运库区。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货	下拉框		N/A	否	下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	库区所对应的目的站，必须是中转或到达组织,比如外场，营业部或者空运总调。	文本		40	否	精确匹配
库区类别	库区类别，包括：长途、短途、全部，默认为全部	下拉框		N/A	否	全部,长途,短途



1.8.2	库区查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	做辨识用的名称	N/A	40	N/A	
库区编号	库区的唯一编号	N/A	10	N/A	
库区名称	库区名称	N/A	40	N/A	
库区类型	库区发货类型	N/A	4	N/A	取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区，偏线库区和空运库区。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货				下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	目的外场，营业部，空运总调等。	N/A	40	N/A	
库区类别	库区类别，包括：长途、短途	N/A	4	N/A	
备注	备注	N/A	200	N/A	如果是偏线库区的话，目的站为空，可以在备注里标明是去哪里的偏线。


1.8.3	库区新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	做辨识用的名称	文本	40	是	
库区编号	库区的唯一编号	文本	10	是	
库区名称	库区名称	文本	40	是	
库区类型	库区发货类型	下拉框	4	是	取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区和偏线库区等。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货	下拉框		是	下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	目的外场，营业部，空运总调等。	文本	N/A	否	如果是偏线的话，则不可填
库区类别	库区类别，包括：长途、短途	下拉框	4	是	
备注	备注	文本	200	否	如果是偏线库区的话，目的站为空，可以在备注里标明是去哪里的偏线或者所有偏线。
对应库位（动态）	选中该库区对应的一个或多个库位	复选框		否	动态按库位编号顺序显示当前外场所有的库位，如果该库位已经分配库区，则在库位编号后面带出库区名称。


1.9	非功能性需求
使用量	 <  10次 / 天，录入之后基本固定，外场库区不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
		

dp-foss-综合管理系统用例-新增_修改_作废_查询库位信息-v1.1


修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-05-14 	新增 	朱俊勇	V0.1
2012-06-17	增加系统管理员操作界面	朱俊勇	V0.1.5
2012-07-08	增加到月台的距离维护。把库位名，目的站等属性拆分到库区中维护	朱俊勇	V0.2
2012-7-17	根据朱俊勇老师意见进行修改：新增/修改界面做调整修改	谢艳涛	V0.3
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-10-12	根据变更需求修改SR3业务规则	谢艳涛	V1.01

1.	SUC-185 新增_修改_作废_查询库位信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场库位基础资料进行新增、修改、作废、查询,维护到各月台的距离等操作。
系统管理员可对所有外场库位基础资料进行新增、修改、作废、查询,维护到各月台的距离等操作。

1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	月台资料录入完成	SUC-85 修改_查询行政组织业务属性
SUC-184 新增_修改_查询_作废_查看月台信息
后置条件	1.	为管理员提供外场库位的增删改查等功能
2.	为其他用例提供外场库位基础资料查询。	SUC-787  新增_修改_查询_作废_查看库区信息
1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对外场的库位进行新增，修改，作废，查询,维护到各月台的距离等操作。

1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
 
图一：库位查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：库位新增和修改界面】。
2)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
3)	重置按钮：点击重置按钮，重置查询条件。
4)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
5)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：库位新增和修改界面】。
6)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，库位编号，备注。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，库位编号顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：库位新增和修改界面
1.5.5	界面描述-新增和修改界面
1.	功能按钮区域
1)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
2)	重置按钮：点击重置按钮，回到当前界面的初始状态。
3)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【库位新增或修改条件】。
1.6	操作步骤
1.6.1	库位新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面。		
2	点击新增按钮。		进入库位新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入库位详细信息，点击保存按钮。		成功保存至系统。返回库位主界面。

库位新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	库位作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面。		
2	输入库位查询条件，查出需要作废的库位并选择一个或多个库位。	【库位列表信息】	
3	点击作废按钮。		弹出确认提示框。
4	点击确定按钮。		成功保存至系统。返回库位主界面。

库位作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	库位修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面		
2	输入库位查询条件，查出需要修改的库位并点击操作列的修改按钮。	【库位新增或修改信息】	进入库位修改界面
3	修改库位信息，点击保存按钮。		成功保存至系统。返回库位主界面。

库位修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回库位主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	库位查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面		
2	输入库位查询条件，点击查询按钮。	【库位查询条件】	系统返回查询结果（按库位编码顺序排列）
3	点击分页按钮，查看各页的查询结果		


1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的库位资料, 在列表页面不展示外场编号和外场名称两列。
SR2	“所属外场”,“库位编号”组合必须唯一
SR3	系统管理员只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场；外场管理员新增时“外场名称”默认是外场管理员所在的外场，不可编辑，修改时不允许修改所属外场

1.8	数据元素
1.8.1	库位查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	做辨识用的名称	文本		40	否	精确匹配
库位编号	每个外场对库位的唯一编号	文本		20	否	模糊匹配



1.8.2	库位查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	做辨识用的名称	N/A	40	N/A	
库位编号	库位编号	N/A	20	N/A	
备注	备注	N/A	200	N/A	


1.8.3	库位新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	做辨识用的名称	文本	40	是	
库位编号	库位编号	文本	20	是	
备注	备注	文本	200	否	
离月台距离(动态)	库位到月台的距离	数字	20	否	自动带出该外场所有的月台编号，供录入人员录入当前库位到各自月台的距离


1.9	非功能性需求
使用量	 <  10次 / 天，录入之后基本固定，外场库位不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述

dp-foss-综合管理系统用例-新增_修改_作废_查询月台信息-v1.02

修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-05-10 	新增 	朱俊勇	V0.1
2012-05-29	增加维护库位距离，可停靠线路入口和界面	朱俊勇	V0.2
2012-06-18	增加系统管理员操作界面	朱俊勇	V0.3
2012-07-08	移除和线路的绑定关系	朱俊勇	V0.4
2012-7-19	根据业务评审会议评委意见修改：增加“位置”字段；修改“可停靠车型”为复选框，可停靠车型细分为不同的车型	谢艳涛	V0.6
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-10-16	根据变更需求增加导入功能：在图一界面上增加“导入”按钮，并在功能按钮区域对导入按钮作描述；	谢艳涛	V1.01
2012-10-17	根据IBM张东平要求增加导出功能，附上导入Excel模板	谢艳涛	V1.02

1.	SUC-184-新增_修改_作废_查询月台信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场月台基础资料进行新增、修改、作废、查询操作。
系统管理员可对所有外场月台基础资料进行新增、修改、作废、查询操作。

1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	库位资料录入完成	SUC-85 修改_查询行政组织业务属性
 
后置条件	1、	为用户提供外场月台基础资料增删改查操作。
2、	为中转提供最优停靠月台计算
3、	为库位提供到月台的距离维护	SUC-371 计算车辆最优停靠月台
SUC-185 新增_修改_作废_查询库位信息

1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对所属外场的月台进行新增，修改，作废，查询操作。
1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
 
图一：月台查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：月台新增和修改界面】。
2)	导入按钮：点击导入按钮弹出界面【图三：导入Excel选择数据文件界面】，选择要导入月台数据文件（Excel文件），进行Excel数据导入；
3)	导出按钮：点击导出按钮，可以把月台所有数据导出到Excel中
4)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
5)	重置按钮：点击重置按钮，重置查询条件。
6)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
7)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：月台新增和修改界面】。
8)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，月台编号,可停靠车型,高度,宽度,升降台,位置。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，月台编号顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：月台新增和修改界面
 
图三：导入Excel选择数据文件界面
 
图四：导入Excel数据模板
1.5.5	界面描述-新增和修改界面
1．功能按钮区域
1)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
2)	重置按钮：点击重置按钮，回到当前界面的初始状态。
3)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【月台新增或修改信息】。

1.6	操作步骤
1.6.1	月台新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面。		
2	点击新增按钮。		进入月台新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入月台详细信息，点击保存按钮。		成功保存至系统。返回月台主界面。

月台新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	月台作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面。		
2	输入月台查询条件，查出需要作废的月台并选择一个或多个月台。	【月台查询结果列表信息】	
3	点击作废按钮。		弹出确认对话框。
4	点击确定按钮。		成功保存至系统。返回月台主界面。

月台作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	月台修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面		
2	输入月台查询条件，查出需要修改的月台并点击操作列的修改按钮。	【月台查询结果列表信息】	进入月台修改界面
3	修改月台信息，点击保存按钮。		成功保存至系统。返回月台主界面。

月台修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回月台主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	月台查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面		
2	输入月台查询条件，点击查询按钮。	【月台查询条件】	系统返回查询结果（按外场编码,月台编码顺序排列）
3	点击分页按钮，查看各页的查询结果		



1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的月台资料,在列表页面不展示外场编号和外场名称两列。
SR2	系统管理员只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场。
SR3	“外场编号”，“月台编号”组合唯一。
SR4	月台高度默认1.3米,宽度默认4.5米。

1.8	数据元素
1.8.1	月台查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	外场的标识名称	文本		20	否	精确匹配
月台编号	每个外场对月台的唯一编号，数字类型	数字		4	否	模糊匹配
可停靠车型	可以在该月台停靠的最大车型	下拉框		N/A	否	下拉框，内容读取自数据字典,包含：4.2米、6.5米、7.6米、9.6米、17.5米5种。
位置	月台所在位置：比如XX月台在A区	文本		50	否	支持模糊查询



1.8.2	月台查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	外场的标识名称	N/A	20	N/A	
月台编号	月台编号	N/A	4	N/A	
可停靠车型	该月台所能停靠的最大车型	N/A	40	N/A	内容读取自数据字典,包含4.2米及以上,4.2米以下两种。
高度	月台高度	N/A	40	N/A	单位为米。如无升降台，月台的高度为一个固定值；如有升降台，则为一个区间值。
宽度	月台宽度	N/A	40	N/A	单位为米，固定值
升降台	是否有升降台	N/A	1	N/A	有或无
位置	月台所在位置：比如XX月台在A区	N/A	50	N/A	


1.8.3	月台新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	外场的标识名称	文本	20	是	
月台编号	月台编号	文本	4	是	
升降台	是否有升降台	单选框	1	是	有，无
高度	月台高度	文本	40	是	单位为米。如无升降台，月台的高度为一个固定值；如有升降台，则为一个区间值。默认为1.3米。
宽度	月台宽度	文本	40	是	单位为米，固定值,默认为4.5米。
可停靠车型	可以在该月台停靠的最大车型	多选框	40	是	复选框，内容读取自数据字典,包含,包含：4.2米、6.5米、7.6米、9.6米、17.5米5种。
位置	月台所在位置：比如XX月台在A区	文本	50	否	
备注	备注信息	文本	200	否	

1.9	非功能性需求
使用量	 <  10 次/ 天, 录入之后基本固定，外场月台不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
		

		
dp-foss-综合管理系统用例-新增_修改_作废_查询库区信息-v1.11


修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-07-08 	新增 	朱俊勇	V0.1
2012-7-16	根据中转开发小组提出要求修改：增加“库区类别”属性	谢艳涛	V0.2
2012-7-17	根据朱俊勇老师要求修改：增加“库区编号”属性；“目的站”修改成只能匹配一个目的站	谢艳涛	V0.3
2012-7-20	根据评审会议评委意见修改：新增/修改时对于已经绑定库区的库位不允许勾选，必选先修改旧的记录；增加“显示全部库位”、“隐藏已绑定库位”按钮	谢艳涛	V0.6
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-12-1	根据变更需求增加业务规则SR8	谢艳涛	V1.11

1.	SUC-787 新增_修改_作废_查询库区信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场库区基础资料进行新增、修改、作废、查询操作。
系统管理员可对所有外场库区基础资料进行新增、修改、作废、查询操作。
1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	外场库位资料录入完成	SUC-85 修改_查询行政组织业务属性
SUC-185新增_修改_作废_查询库位信息
后置条件	1.	为管理员提供外场库区的增删改查等功能
2.	为其他用例提供外场库区基础资料查询。	SUC-371 计算车辆最优停靠月台

1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对外场的库区进行新增，修改，作废，查询，维护库位操作。
1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
  
图一：库区查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：库区新增和修改界面（一）】。
2)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
3)	重置按钮：点击重置按钮，重置查询条件。
4)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
5)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：库区新增和修改界面（一）】。
6)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，库区编号，库区名称，库区类型，货物类型，目的站，库区类别、备注。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，库区名称顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：库区新增和修改界面（一）
 
图三：库区新增和修改界面（二）
1.5.5	界面描述-新增和修改界面
1.	功能按钮区域
1)	显示全部库位按钮：点击显示全部库位按钮，显示外场所有库位，见图【图三：库区新增和修改界面（二）】。
2)	隐藏绑定库位按钮：点击隐藏绑定库位按钮，隐藏所有已绑定其他库区的库位，见图【图二：库区新增和修改界面（一）】
3)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
4)	重置按钮：点击重置按钮，回到当前界面的初始状态。
5)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【库区新增或修改条件】。
1.6	操作步骤
1.6.1	库区新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面。		
2	点击新增按钮。		进入库区新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入库区详细信息，点击保存按钮。参见业务规则：SR2、SR7		成功保存至系统。返回库区主界面。

库区新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	库区作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面。		
2	输入库区查询条件，查出需要作废的库区并选择一个或多个库区。	【库区列表信息】	
3	点击作废按钮。		弹出确认提示框。
4	点击确定按钮。		成功保存至系统。返回库区主界面。

库区作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	库区修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面		
2	输入库区查询条件，查出需要修改的库区并点击操作列的修改按钮。参见业务规则：SR2、SR7	【库区新增或修改信息】	进入库区修改界面
3	修改库区信息，点击保存按钮。		成功保存至系统。返回库区主界面。

库区修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回库区主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	库区查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面		
2	输入库区查询条件，点击查询按钮。	【库区查询条件】	系统返回查询结果（按库区编码顺序排列）
3	点击分页按钮，查看各页的查询结果		


1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的库区资料, 在列表页面不展示外场编号和外场名称两列。
SR2	“所属外场”,“库区编号”组合必须唯一
SR3	“目的站”只能选择一个；
1、	如果“库区类型”是“偏线库区”，则“目的站”不可填；
2、	如果“库区类型”是“空运库区”，则“目的站”只能从行政组织（空运总调）基础资料中选择；
3、	如果“库区类型”是“卡货库区”或者“普货库区”或“城际快车库区”或“混装库区”，则“目的站”只能从行政组织（营业部、外场）基础资料中选择
SR4	一个库区可以对应1个或多个库位，一个库位只能对应一个库区。
SR5	如果在选择库位时选中了已分配的库位，则取消原库位的对应关系，将之关联到新的库区。
SR6	只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场。
SR7	新增/修改库区界面，库区“对应库位”默认只显示所有未绑定其他库区的库位；显示全部库位时，已经绑定其他库区的库位是只读状态，不能勾选；
SR8	对于外场的货区，对应于各个线路的普通货区以及偏线，贵重物品等特殊货区，都必须唯一有一个货区对应

1.8	数据元素
1.8.1	库区查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	做辨识用的名称	文本		40	否	精确匹配
库区名称	做辨识用的名称	文本		40	否	精确匹配
库区类型	该库区的类型	下拉框		N/A	否	下拉框，内容读取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区，偏线库区和空运库区。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货	下拉框		N/A	否	下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	库区所对应的目的站，必须是中转或到达组织,比如外场，营业部或者空运总调。	文本		40	否	精确匹配
库区类别	库区类别，包括：长途、短途、全部，默认为全部	下拉框		N/A	否	全部,长途,短途



1.8.2	库区查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	做辨识用的名称	N/A	40	N/A	
库区编号	库区的唯一编号	N/A	10	N/A	
库区名称	库区名称	N/A	40	N/A	
库区类型	库区发货类型	N/A	4	N/A	取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区，偏线库区和空运库区。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货				下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	目的外场，营业部，空运总调等。	N/A	40	N/A	
库区类别	库区类别，包括：长途、短途	N/A	4	N/A	
备注	备注	N/A	200	N/A	如果是偏线库区的话，目的站为空，可以在备注里标明是去哪里的偏线。


1.8.3	库区新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	做辨识用的名称	文本	40	是	
库区编号	库区的唯一编号	文本	10	是	
库区名称	库区名称	文本	40	是	
库区类型	库区发货类型	下拉框	4	是	取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区和偏线库区等。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货	下拉框		是	下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	目的外场，营业部，空运总调等。	文本	N/A	否	如果是偏线的话，则不可填
库区类别	库区类别，包括：长途、短途	下拉框	4	是	
备注	备注	文本	200	否	如果是偏线库区的话，目的站为空，可以在备注里标明是去哪里的偏线或者所有偏线。
对应库位（动态）	选中该库区对应的一个或多个库位	复选框		否	动态按库位编号顺序显示当前外场所有的库位，如果该库位已经分配库区，则在库位编号后面带出库区名称。


1.9	非功能性需求
使用量	 <  10次 / 天，录入之后基本固定，外场库区不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
		

dp-foss-综合管理系统用例-新增_修改_作废_查询库位信息-v1.1


修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-05-14 	新增 	朱俊勇	V0.1
2012-06-17	增加系统管理员操作界面	朱俊勇	V0.1.5
2012-07-08	增加到月台的距离维护。把库位名，目的站等属性拆分到库区中维护	朱俊勇	V0.2
2012-7-17	根据朱俊勇老师意见进行修改：新增/修改界面做调整修改	谢艳涛	V0.3
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-10-12	根据变更需求修改SR3业务规则	谢艳涛	V1.01

1.	SUC-185 新增_修改_作废_查询库位信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场库位基础资料进行新增、修改、作废、查询,维护到各月台的距离等操作。
系统管理员可对所有外场库位基础资料进行新增、修改、作废、查询,维护到各月台的距离等操作。

1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	月台资料录入完成	SUC-85 修改_查询行政组织业务属性
SUC-184 新增_修改_查询_作废_查看月台信息
后置条件	1.	为管理员提供外场库位的增删改查等功能
2.	为其他用例提供外场库位基础资料查询。	SUC-787  新增_修改_查询_作废_查看库区信息
1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对外场的库位进行新增，修改，作废，查询,维护到各月台的距离等操作。

1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
 
图一：库位查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：库位新增和修改界面】。
2)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
3)	重置按钮：点击重置按钮，重置查询条件。
4)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
5)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：库位新增和修改界面】。
6)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，库位编号，备注。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，库位编号顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：库位新增和修改界面
1.5.5	界面描述-新增和修改界面
1.	功能按钮区域
1)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
2)	重置按钮：点击重置按钮，回到当前界面的初始状态。
3)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【库位新增或修改条件】。
1.6	操作步骤
1.6.1	库位新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面。		
2	点击新增按钮。		进入库位新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入库位详细信息，点击保存按钮。		成功保存至系统。返回库位主界面。

库位新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	库位作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面。		
2	输入库位查询条件，查出需要作废的库位并选择一个或多个库位。	【库位列表信息】	
3	点击作废按钮。		弹出确认提示框。
4	点击确定按钮。		成功保存至系统。返回库位主界面。

库位作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	库位修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面		
2	输入库位查询条件，查出需要修改的库位并点击操作列的修改按钮。	【库位新增或修改信息】	进入库位修改界面
3	修改库位信息，点击保存按钮。		成功保存至系统。返回库位主界面。

库位修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回库位主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	库位查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面		
2	输入库位查询条件，点击查询按钮。	【库位查询条件】	系统返回查询结果（按库位编码顺序排列）
3	点击分页按钮，查看各页的查询结果		


1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的库位资料, 在列表页面不展示外场编号和外场名称两列。
SR2	“所属外场”,“库位编号”组合必须唯一
SR3	系统管理员只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场；外场管理员新增时“外场名称”默认是外场管理员所在的外场，不可编辑，修改时不允许修改所属外场

1.8	数据元素
1.8.1	库位查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	做辨识用的名称	文本		40	否	精确匹配
库位编号	每个外场对库位的唯一编号	文本		20	否	模糊匹配



1.8.2	库位查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	做辨识用的名称	N/A	40	N/A	
库位编号	库位编号	N/A	20	N/A	
备注	备注	N/A	200	N/A	


1.8.3	库位新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	做辨识用的名称	文本	40	是	
库位编号	库位编号	文本	20	是	
备注	备注	文本	200	否	
离月台距离(动态)	库位到月台的距离	数字	20	否	自动带出该外场所有的月台编号，供录入人员录入当前库位到各自月台的距离


1.9	非功能性需求
使用量	 <  10次 / 天，录入之后基本固定，外场库位不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述	

dp-foss-综合管理系统用例-新增_修改_作废_查询月台信息-v1.02

修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-05-10 	新增 	朱俊勇	V0.1
2012-05-29	增加维护库位距离，可停靠线路入口和界面	朱俊勇	V0.2
2012-06-18	增加系统管理员操作界面	朱俊勇	V0.3
2012-07-08	移除和线路的绑定关系	朱俊勇	V0.4
2012-7-19	根据业务评审会议评委意见修改：增加“位置”字段；修改“可停靠车型”为复选框，可停靠车型细分为不同的车型	谢艳涛	V0.6
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-10-16	根据变更需求增加导入功能：在图一界面上增加“导入”按钮，并在功能按钮区域对导入按钮作描述；	谢艳涛	V1.01
2012-10-17	根据IBM张东平要求增加导出功能，附上导入Excel模板	谢艳涛	V1.02

1.	SUC-184-新增_修改_作废_查询月台信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场月台基础资料进行新增、修改、作废、查询操作。
系统管理员可对所有外场月台基础资料进行新增、修改、作废、查询操作。

1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	库位资料录入完成	SUC-85 修改_查询行政组织业务属性
 
后置条件	1、	为用户提供外场月台基础资料增删改查操作。
2、	为中转提供最优停靠月台计算
3、	为库位提供到月台的距离维护	SUC-371 计算车辆最优停靠月台
SUC-185 新增_修改_作废_查询库位信息

1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对所属外场的月台进行新增，修改，作废，查询操作。
1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
 
图一：月台查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：月台新增和修改界面】。
2)	导入按钮：点击导入按钮弹出界面【图三：导入Excel选择数据文件界面】，选择要导入月台数据文件（Excel文件），进行Excel数据导入；
3)	导出按钮：点击导出按钮，可以把月台所有数据导出到Excel中
4)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
5)	重置按钮：点击重置按钮，重置查询条件。
6)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
7)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：月台新增和修改界面】。
8)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，月台编号,可停靠车型,高度,宽度,升降台,位置。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，月台编号顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：月台新增和修改界面
 
图三：导入Excel选择数据文件界面
 
图四：导入Excel数据模板
1.5.5	界面描述-新增和修改界面
1．功能按钮区域
1)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
2)	重置按钮：点击重置按钮，回到当前界面的初始状态。
3)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【月台新增或修改信息】。

1.6	操作步骤
1.6.1	月台新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面。		
2	点击新增按钮。		进入月台新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入月台详细信息，点击保存按钮。		成功保存至系统。返回月台主界面。

月台新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	月台作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面。		
2	输入月台查询条件，查出需要作废的月台并选择一个或多个月台。	【月台查询结果列表信息】	
3	点击作废按钮。		弹出确认对话框。
4	点击确定按钮。		成功保存至系统。返回月台主界面。

月台作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	月台修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面		
2	输入月台查询条件，查出需要修改的月台并点击操作列的修改按钮。	【月台查询结果列表信息】	进入月台修改界面
3	修改月台信息，点击保存按钮。		成功保存至系统。返回月台主界面。

月台修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回月台主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	月台查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面		
2	输入月台查询条件，点击查询按钮。	【月台查询条件】	系统返回查询结果（按外场编码,月台编码顺序排列）
3	点击分页按钮，查看各页的查询结果		



1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的月台资料,在列表页面不展示外场编号和外场名称两列。
SR2	系统管理员只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场。
SR3	“外场编号”，“月台编号”组合唯一。
SR4	月台高度默认1.3米,宽度默认4.5米。

1.8	数据元素
1.8.1	月台查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	外场的标识名称	文本		20	否	精确匹配
月台编号	每个外场对月台的唯一编号，数字类型	数字		4	否	模糊匹配
可停靠车型	可以在该月台停靠的最大车型	下拉框		N/A	否	下拉框，内容读取自数据字典,包含：4.2米、6.5米、7.6米、9.6米、17.5米5种。
位置	月台所在位置：比如XX月台在A区	文本		50	否	支持模糊查询



1.8.2	月台查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	外场的标识名称	N/A	20	N/A	
月台编号	月台编号	N/A	4	N/A	
可停靠车型	该月台所能停靠的最大车型	N/A	40	N/A	内容读取自数据字典,包含4.2米及以上,4.2米以下两种。
高度	月台高度	N/A	40	N/A	单位为米。如无升降台，月台的高度为一个固定值；如有升降台，则为一个区间值。
宽度	月台宽度	N/A	40	N/A	单位为米，固定值
升降台	是否有升降台	N/A	1	N/A	有或无
位置	月台所在位置：比如XX月台在A区	N/A	50	N/A	


1.8.3	月台新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	外场的标识名称	文本	20	是	
月台编号	月台编号	文本	4	是	
升降台	是否有升降台	单选框	1	是	有，无
高度	月台高度	文本	40	是	单位为米。如无升降台，月台的高度为一个固定值；如有升降台，则为一个区间值。默认为1.3米。
宽度	月台宽度	文本	40	是	单位为米，固定值,默认为4.5米。
可停靠车型	可以在该月台停靠的最大车型	多选框	40	是	复选框，内容读取自数据字典,包含,包含：4.2米、6.5米、7.6米、9.6米、17.5米5种。
位置	月台所在位置：比如XX月台在A区	文本	50	否	
备注	备注信息	文本	200	否	

1.9	非功能性需求
使用量	 <  10 次/ 天, 录入之后基本固定，外场月台不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
		

		
dp-foss-综合管理系统用例-新增_修改_作废_查询库区信息-v1.11


修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-07-08 	新增 	朱俊勇	V0.1
2012-7-16	根据中转开发小组提出要求修改：增加“库区类别”属性	谢艳涛	V0.2
2012-7-17	根据朱俊勇老师要求修改：增加“库区编号”属性；“目的站”修改成只能匹配一个目的站	谢艳涛	V0.3
2012-7-20	根据评审会议评委意见修改：新增/修改时对于已经绑定库区的库位不允许勾选，必选先修改旧的记录；增加“显示全部库位”、“隐藏已绑定库位”按钮	谢艳涛	V0.6
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-12-1	根据变更需求增加业务规则SR8	谢艳涛	V1.11

1.	SUC-787 新增_修改_作废_查询库区信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场库区基础资料进行新增、修改、作废、查询操作。
系统管理员可对所有外场库区基础资料进行新增、修改、作废、查询操作。
1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	外场库位资料录入完成	SUC-85 修改_查询行政组织业务属性
SUC-185新增_修改_作废_查询库位信息
后置条件	1.	为管理员提供外场库区的增删改查等功能
2.	为其他用例提供外场库区基础资料查询。	SUC-371 计算车辆最优停靠月台

1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对外场的库区进行新增，修改，作废，查询，维护库位操作。
1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
  
图一：库区查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：库区新增和修改界面（一）】。
2)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
3)	重置按钮：点击重置按钮，重置查询条件。
4)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
5)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：库区新增和修改界面（一）】。
6)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，库区编号，库区名称，库区类型，货物类型，目的站，库区类别、备注。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，库区名称顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：库区新增和修改界面（一）
 
图三：库区新增和修改界面（二）
1.5.5	界面描述-新增和修改界面
1.	功能按钮区域
1)	显示全部库位按钮：点击显示全部库位按钮，显示外场所有库位，见图【图三：库区新增和修改界面（二）】。
2)	隐藏绑定库位按钮：点击隐藏绑定库位按钮，隐藏所有已绑定其他库区的库位，见图【图二：库区新增和修改界面（一）】
3)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
4)	重置按钮：点击重置按钮，回到当前界面的初始状态。
5)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【库区新增或修改条件】。
1.6	操作步骤
1.6.1	库区新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面。		
2	点击新增按钮。		进入库区新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入库区详细信息，点击保存按钮。参见业务规则：SR2、SR7		成功保存至系统。返回库区主界面。

库区新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	库区作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面。		
2	输入库区查询条件，查出需要作废的库区并选择一个或多个库区。	【库区列表信息】	
3	点击作废按钮。		弹出确认提示框。
4	点击确定按钮。		成功保存至系统。返回库区主界面。

库区作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	库区修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面		
2	输入库区查询条件，查出需要修改的库区并点击操作列的修改按钮。参见业务规则：SR2、SR7	【库区新增或修改信息】	进入库区修改界面
3	修改库区信息，点击保存按钮。		成功保存至系统。返回库区主界面。

库区修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回库区主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	库区查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面		
2	输入库区查询条件，点击查询按钮。	【库区查询条件】	系统返回查询结果（按库区编码顺序排列）
3	点击分页按钮，查看各页的查询结果		


1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的库区资料, 在列表页面不展示外场编号和外场名称两列。
SR2	“所属外场”,“库区编号”组合必须唯一
SR3	“目的站”只能选择一个；
1、	如果“库区类型”是“偏线库区”，则“目的站”不可填；
2、	如果“库区类型”是“空运库区”，则“目的站”只能从行政组织（空运总调）基础资料中选择；
3、	如果“库区类型”是“卡货库区”或者“普货库区”或“城际快车库区”或“混装库区”，则“目的站”只能从行政组织（营业部、外场）基础资料中选择
SR4	一个库区可以对应1个或多个库位，一个库位只能对应一个库区。
SR5	如果在选择库位时选中了已分配的库位，则取消原库位的对应关系，将之关联到新的库区。
SR6	只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场。
SR7	新增/修改库区界面，库区“对应库位”默认只显示所有未绑定其他库区的库位；显示全部库位时，已经绑定其他库区的库位是只读状态，不能勾选；
SR8	对于外场的货区，对应于各个线路的普通货区以及偏线，贵重物品等特殊货区，都必须唯一有一个货区对应

1.8	数据元素
1.8.1	库区查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	做辨识用的名称	文本		40	否	精确匹配
库区名称	做辨识用的名称	文本		40	否	精确匹配
库区类型	该库区的类型	下拉框		N/A	否	下拉框，内容读取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区，偏线库区和空运库区。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货	下拉框		N/A	否	下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	库区所对应的目的站，必须是中转或到达组织,比如外场，营业部或者空运总调。	文本		40	否	精确匹配
库区类别	库区类别，包括：长途、短途、全部，默认为全部	下拉框		N/A	否	全部,长途,短途



1.8.2	库区查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	做辨识用的名称	N/A	40	N/A	
库区编号	库区的唯一编号	N/A	10	N/A	
库区名称	库区名称	N/A	40	N/A	
库区类型	库区发货类型	N/A	4	N/A	取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区，偏线库区和空运库区。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货				下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	目的外场，营业部，空运总调等。	N/A	40	N/A	
库区类别	库区类别，包括：长途、短途	N/A	4	N/A	
备注	备注	N/A	200	N/A	如果是偏线库区的话，目的站为空，可以在备注里标明是去哪里的偏线。


1.8.3	库区新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	做辨识用的名称	文本	40	是	
库区编号	库区的唯一编号	文本	10	是	
库区名称	库区名称	文本	40	是	
库区类型	库区发货类型	下拉框	4	是	取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区和偏线库区等。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货	下拉框		是	下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	目的外场，营业部，空运总调等。	文本	N/A	否	如果是偏线的话，则不可填
库区类别	库区类别，包括：长途、短途	下拉框	4	是	
备注	备注	文本	200	否	如果是偏线库区的话，目的站为空，可以在备注里标明是去哪里的偏线或者所有偏线。
对应库位（动态）	选中该库区对应的一个或多个库位	复选框		否	动态按库位编号顺序显示当前外场所有的库位，如果该库位已经分配库区，则在库位编号后面带出库区名称。


1.9	非功能性需求
使用量	 <  10次 / 天，录入之后基本固定，外场库区不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
		

dp-foss-综合管理系统用例-新增_修改_作废_查询库位信息-v1.1


修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-05-14 	新增 	朱俊勇	V0.1
2012-06-17	增加系统管理员操作界面	朱俊勇	V0.1.5
2012-07-08	增加到月台的距离维护。把库位名，目的站等属性拆分到库区中维护	朱俊勇	V0.2
2012-7-17	根据朱俊勇老师意见进行修改：新增/修改界面做调整修改	谢艳涛	V0.3
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-10-12	根据变更需求修改SR3业务规则	谢艳涛	V1.01

1.	SUC-185 新增_修改_作废_查询库位信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场库位基础资料进行新增、修改、作废、查询,维护到各月台的距离等操作。
系统管理员可对所有外场库位基础资料进行新增、修改、作废、查询,维护到各月台的距离等操作。

1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	月台资料录入完成	SUC-85 修改_查询行政组织业务属性
SUC-184 新增_修改_查询_作废_查看月台信息
后置条件	1.	为管理员提供外场库位的增删改查等功能
2.	为其他用例提供外场库位基础资料查询。	SUC-787  新增_修改_查询_作废_查看库区信息
1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对外场的库位进行新增，修改，作废，查询,维护到各月台的距离等操作。

1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
 
图一：库位查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：库位新增和修改界面】。
2)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
3)	重置按钮：点击重置按钮，重置查询条件。
4)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
5)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：库位新增和修改界面】。
6)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，库位编号，备注。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，库位编号顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：库位新增和修改界面
1.5.5	界面描述-新增和修改界面
1.	功能按钮区域
1)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
2)	重置按钮：点击重置按钮，回到当前界面的初始状态。
3)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【库位新增或修改条件】。
1.6	操作步骤
1.6.1	库位新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面。		
2	点击新增按钮。		进入库位新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入库位详细信息，点击保存按钮。		成功保存至系统。返回库位主界面。

库位新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	库位作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面。		
2	输入库位查询条件，查出需要作废的库位并选择一个或多个库位。	【库位列表信息】	
3	点击作废按钮。		弹出确认提示框。
4	点击确定按钮。		成功保存至系统。返回库位主界面。

库位作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	库位修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面		
2	输入库位查询条件，查出需要修改的库位并点击操作列的修改按钮。	【库位新增或修改信息】	进入库位修改界面
3	修改库位信息，点击保存按钮。		成功保存至系统。返回库位主界面。

库位修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回库位主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	库位查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面		
2	输入库位查询条件，点击查询按钮。	【库位查询条件】	系统返回查询结果（按库位编码顺序排列）
3	点击分页按钮，查看各页的查询结果		


1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的库位资料, 在列表页面不展示外场编号和外场名称两列。
SR2	“所属外场”,“库位编号”组合必须唯一
SR3	系统管理员只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场；外场管理员新增时“外场名称”默认是外场管理员所在的外场，不可编辑，修改时不允许修改所属外场

1.8	数据元素
1.8.1	库位查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	做辨识用的名称	文本		40	否	精确匹配
库位编号	每个外场对库位的唯一编号	文本		20	否	模糊匹配

1.8.2	库位查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	做辨识用的名称	N/A	40	N/A	
库位编号	库位编号	N/A	20	N/A	
备注	备注	N/A	200	N/A	

1.8.3	库位新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	做辨识用的名称	文本	40	是	
库位编号	库位编号	文本	20	是	
备注	备注	文本	200	否	
离月台距离(动态)	库位到月台的距离	数字	20	否	自动带出该外场所有的月台编号，供录入人员录入当前库位到各自月台的距离

1.9	非功能性需求
使用量	 <  10次 / 天，录入之后基本固定，外场库位不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述	


dp-foss-综合管理系统用例-新增_修改_作废_查询月台信息-v1.02

修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-05-10 	新增 	朱俊勇	V0.1
2012-05-29	增加维护库位距离，可停靠线路入口和界面	朱俊勇	V0.2
2012-06-18	增加系统管理员操作界面	朱俊勇	V0.3
2012-07-08	移除和线路的绑定关系	朱俊勇	V0.4
2012-7-19	根据业务评审会议评委意见修改：增加“位置”字段；修改“可停靠车型”为复选框，可停靠车型细分为不同的车型	谢艳涛	V0.6
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-10-16	根据变更需求增加导入功能：在图一界面上增加“导入”按钮，并在功能按钮区域对导入按钮作描述；	谢艳涛	V1.01
2012-10-17	根据IBM张东平要求增加导出功能，附上导入Excel模板	谢艳涛	V1.02

1.	SUC-184-新增_修改_作废_查询月台信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场月台基础资料进行新增、修改、作废、查询操作。
系统管理员可对所有外场月台基础资料进行新增、修改、作废、查询操作。

1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	库位资料录入完成	SUC-85 修改_查询行政组织业务属性
 
后置条件	1、	为用户提供外场月台基础资料增删改查操作。
2、	为中转提供最优停靠月台计算
3、	为库位提供到月台的距离维护	SUC-371 计算车辆最优停靠月台
SUC-185 新增_修改_作废_查询库位信息

1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对所属外场的月台进行新增，修改，作废，查询操作。
1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
 
图一：月台查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：月台新增和修改界面】。
2)	导入按钮：点击导入按钮弹出界面【图三：导入Excel选择数据文件界面】，选择要导入月台数据文件（Excel文件），进行Excel数据导入；
3)	导出按钮：点击导出按钮，可以把月台所有数据导出到Excel中
4)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
5)	重置按钮：点击重置按钮，重置查询条件。
6)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
7)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：月台新增和修改界面】。
8)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，月台编号,可停靠车型,高度,宽度,升降台,位置。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，月台编号顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：月台新增和修改界面
 
图三：导入Excel选择数据文件界面
 
图四：导入Excel数据模板
1.5.5	界面描述-新增和修改界面
1．功能按钮区域
1)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
2)	重置按钮：点击重置按钮，回到当前界面的初始状态。
3)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【月台新增或修改信息】。

1.6	操作步骤
1.6.1	月台新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面。		
2	点击新增按钮。		进入月台新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入月台详细信息，点击保存按钮。		成功保存至系统。返回月台主界面。

月台新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	月台作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面。		
2	输入月台查询条件，查出需要作废的月台并选择一个或多个月台。	【月台查询结果列表信息】	
3	点击作废按钮。		弹出确认对话框。
4	点击确定按钮。		成功保存至系统。返回月台主界面。

月台作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	月台修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面		
2	输入月台查询条件，查出需要修改的月台并点击操作列的修改按钮。	【月台查询结果列表信息】	进入月台修改界面
3	修改月台信息，点击保存按钮。		成功保存至系统。返回月台主界面。

月台修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回月台主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	月台查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面		
2	输入月台查询条件，点击查询按钮。	【月台查询条件】	系统返回查询结果（按外场编码,月台编码顺序排列）
3	点击分页按钮，查看各页的查询结果		



1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的月台资料,在列表页面不展示外场编号和外场名称两列。
SR2	系统管理员只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场。
SR3	“外场编号”，“月台编号”组合唯一。
SR4	月台高度默认1.3米,宽度默认4.5米。

1.8	数据元素
1.8.1	月台查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	外场的标识名称	文本		20	否	精确匹配
月台编号	每个外场对月台的唯一编号，数字类型	数字		4	否	模糊匹配
可停靠车型	可以在该月台停靠的最大车型	下拉框		N/A	否	下拉框，内容读取自数据字典,包含：4.2米、6.5米、7.6米、9.6米、17.5米5种。
位置	月台所在位置：比如XX月台在A区	文本		50	否	支持模糊查询



1.8.2	月台查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	外场的标识名称	N/A	20	N/A	
月台编号	月台编号	N/A	4	N/A	
可停靠车型	该月台所能停靠的最大车型	N/A	40	N/A	内容读取自数据字典,包含4.2米及以上,4.2米以下两种。
高度	月台高度	N/A	40	N/A	单位为米。如无升降台，月台的高度为一个固定值；如有升降台，则为一个区间值。
宽度	月台宽度	N/A	40	N/A	单位为米，固定值
升降台	是否有升降台	N/A	1	N/A	有或无
位置	月台所在位置：比如XX月台在A区	N/A	50	N/A	


1.8.3	月台新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	外场的标识名称	文本	20	是	
月台编号	月台编号	文本	4	是	
升降台	是否有升降台	单选框	1	是	有，无
高度	月台高度	文本	40	是	单位为米。如无升降台，月台的高度为一个固定值；如有升降台，则为一个区间值。默认为1.3米。
宽度	月台宽度	文本	40	是	单位为米，固定值,默认为4.5米。
可停靠车型	可以在该月台停靠的最大车型	多选框	40	是	复选框，内容读取自数据字典,包含,包含：4.2米、6.5米、7.6米、9.6米、17.5米5种。
位置	月台所在位置：比如XX月台在A区	文本	50	否	
备注	备注信息	文本	200	否	

1.9	非功能性需求
使用量	 <  10 次/ 天, 录入之后基本固定，外场月台不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
		

		
dp-foss-综合管理系统用例-新增_修改_作废_查询库区信息-v1.11


修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-07-08 	新增 	朱俊勇	V0.1
2012-7-16	根据中转开发小组提出要求修改：增加“库区类别”属性	谢艳涛	V0.2
2012-7-17	根据朱俊勇老师要求修改：增加“库区编号”属性；“目的站”修改成只能匹配一个目的站	谢艳涛	V0.3
2012-7-20	根据评审会议评委意见修改：新增/修改时对于已经绑定库区的库位不允许勾选，必选先修改旧的记录；增加“显示全部库位”、“隐藏已绑定库位”按钮	谢艳涛	V0.6
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-12-1	根据变更需求增加业务规则SR8	谢艳涛	V1.11

1.	SUC-787 新增_修改_作废_查询库区信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场库区基础资料进行新增、修改、作废、查询操作。
系统管理员可对所有外场库区基础资料进行新增、修改、作废、查询操作。
1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	外场库位资料录入完成	SUC-85 修改_查询行政组织业务属性
SUC-185新增_修改_作废_查询库位信息
后置条件	1.	为管理员提供外场库区的增删改查等功能
2.	为其他用例提供外场库区基础资料查询。	SUC-371 计算车辆最优停靠月台

1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对外场的库区进行新增，修改，作废，查询，维护库位操作。
1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
  
图一：库区查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：库区新增和修改界面（一）】。
2)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
3)	重置按钮：点击重置按钮，重置查询条件。
4)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
5)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：库区新增和修改界面（一）】。
6)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，库区编号，库区名称，库区类型，货物类型，目的站，库区类别、备注。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，库区名称顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：库区新增和修改界面（一）
 
图三：库区新增和修改界面（二）
1.5.5	界面描述-新增和修改界面
1.	功能按钮区域
1)	显示全部库位按钮：点击显示全部库位按钮，显示外场所有库位，见图【图三：库区新增和修改界面（二）】。
2)	隐藏绑定库位按钮：点击隐藏绑定库位按钮，隐藏所有已绑定其他库区的库位，见图【图二：库区新增和修改界面（一）】
3)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
4)	重置按钮：点击重置按钮，回到当前界面的初始状态。
5)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【库区新增或修改条件】。
1.6	操作步骤
1.6.1	库区新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面。		
2	点击新增按钮。		进入库区新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入库区详细信息，点击保存按钮。参见业务规则：SR2、SR7		成功保存至系统。返回库区主界面。

库区新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	库区作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面。		
2	输入库区查询条件，查出需要作废的库区并选择一个或多个库区。	【库区列表信息】	
3	点击作废按钮。		弹出确认提示框。
4	点击确定按钮。		成功保存至系统。返回库区主界面。

库区作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	库区修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面		
2	输入库区查询条件，查出需要修改的库区并点击操作列的修改按钮。参见业务规则：SR2、SR7	【库区新增或修改信息】	进入库区修改界面
3	修改库区信息，点击保存按钮。		成功保存至系统。返回库区主界面。

库区修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回库区主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	库区查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面		
2	输入库区查询条件，点击查询按钮。	【库区查询条件】	系统返回查询结果（按库区编码顺序排列）
3	点击分页按钮，查看各页的查询结果		


1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的库区资料, 在列表页面不展示外场编号和外场名称两列。
SR2	“所属外场”,“库区编号”组合必须唯一
SR3	“目的站”只能选择一个；
1、	如果“库区类型”是“偏线库区”，则“目的站”不可填；
2、	如果“库区类型”是“空运库区”，则“目的站”只能从行政组织（空运总调）基础资料中选择；
3、	如果“库区类型”是“卡货库区”或者“普货库区”或“城际快车库区”或“混装库区”，则“目的站”只能从行政组织（营业部、外场）基础资料中选择
SR4	一个库区可以对应1个或多个库位，一个库位只能对应一个库区。
SR5	如果在选择库位时选中了已分配的库位，则取消原库位的对应关系，将之关联到新的库区。
SR6	只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场。
SR7	新增/修改库区界面，库区“对应库位”默认只显示所有未绑定其他库区的库位；显示全部库位时，已经绑定其他库区的库位是只读状态，不能勾选；
SR8	对于外场的货区，对应于各个线路的普通货区以及偏线，贵重物品等特殊货区，都必须唯一有一个货区对应

1.8	数据元素
1.8.1	库区查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	做辨识用的名称	文本		40	否	精确匹配
库区名称	做辨识用的名称	文本		40	否	精确匹配
库区类型	该库区的类型	下拉框		N/A	否	下拉框，内容读取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区，偏线库区和空运库区。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货	下拉框		N/A	否	下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	库区所对应的目的站，必须是中转或到达组织,比如外场，营业部或者空运总调。	文本		40	否	精确匹配
库区类别	库区类别，包括：长途、短途、全部，默认为全部	下拉框		N/A	否	全部,长途,短途



1.8.2	库区查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	做辨识用的名称	N/A	40	N/A	
库区编号	库区的唯一编号	N/A	10	N/A	
库区名称	库区名称	N/A	40	N/A	
库区类型	库区发货类型	N/A	4	N/A	取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区，偏线库区和空运库区。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货				下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	目的外场，营业部，空运总调等。	N/A	40	N/A	
库区类别	库区类别，包括：长途、短途	N/A	4	N/A	
备注	备注	N/A	200	N/A	如果是偏线库区的话，目的站为空，可以在备注里标明是去哪里的偏线。


1.8.3	库区新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	做辨识用的名称	文本	40	是	
库区编号	库区的唯一编号	文本	10	是	
库区名称	库区名称	文本	40	是	
库区类型	库区发货类型	下拉框	4	是	取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区和偏线库区等。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货	下拉框		是	下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	目的外场，营业部，空运总调等。	文本	N/A	否	如果是偏线的话，则不可填
库区类别	库区类别，包括：长途、短途	下拉框	4	是	
备注	备注	文本	200	否	如果是偏线库区的话，目的站为空，可以在备注里标明是去哪里的偏线或者所有偏线。
对应库位（动态）	选中该库区对应的一个或多个库位	复选框		否	动态按库位编号顺序显示当前外场所有的库位，如果该库位已经分配库区，则在库位编号后面带出库区名称。


1.9	非功能性需求
使用量	 <  10次 / 天，录入之后基本固定，外场库区不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
		

dp-foss-综合管理系统用例-新增_修改_作废_查询库位信息-v1.1


修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-05-14 	新增 	朱俊勇	V0.1
2012-06-17	增加系统管理员操作界面	朱俊勇	V0.1.5
2012-07-08	增加到月台的距离维护。把库位名，目的站等属性拆分到库区中维护	朱俊勇	V0.2
2012-7-17	根据朱俊勇老师意见进行修改：新增/修改界面做调整修改	谢艳涛	V0.3
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-10-12	根据变更需求修改SR3业务规则	谢艳涛	V1.01

1.	SUC-185 新增_修改_作废_查询库位信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场库位基础资料进行新增、修改、作废、查询,维护到各月台的距离等操作。
系统管理员可对所有外场库位基础资料进行新增、修改、作废、查询,维护到各月台的距离等操作。

1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	月台资料录入完成	SUC-85 修改_查询行政组织业务属性
SUC-184 新增_修改_查询_作废_查看月台信息
后置条件	1.	为管理员提供外场库位的增删改查等功能
2.	为其他用例提供外场库位基础资料查询。	SUC-787  新增_修改_查询_作废_查看库区信息
1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对外场的库位进行新增，修改，作废，查询,维护到各月台的距离等操作。

1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
 
图一：库位查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：库位新增和修改界面】。
2)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
3)	重置按钮：点击重置按钮，重置查询条件。
4)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
5)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：库位新增和修改界面】。
6)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，库位编号，备注。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，库位编号顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：库位新增和修改界面
1.5.5	界面描述-新增和修改界面
1.	功能按钮区域
1)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
2)	重置按钮：点击重置按钮，回到当前界面的初始状态。
3)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【库位新增或修改条件】。
1.6	操作步骤
1.6.1	库位新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面。		
2	点击新增按钮。		进入库位新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入库位详细信息，点击保存按钮。		成功保存至系统。返回库位主界面。

库位新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	库位作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面。		
2	输入库位查询条件，查出需要作废的库位并选择一个或多个库位。	【库位列表信息】	
3	点击作废按钮。		弹出确认提示框。
4	点击确定按钮。		成功保存至系统。返回库位主界面。

库位作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	库位修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面		
2	输入库位查询条件，查出需要修改的库位并点击操作列的修改按钮。	【库位新增或修改信息】	进入库位修改界面
3	修改库位信息，点击保存按钮。		成功保存至系统。返回库位主界面。

库位修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回库位主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	库位查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面		
2	输入库位查询条件，点击查询按钮。	【库位查询条件】	系统返回查询结果（按库位编码顺序排列）
3	点击分页按钮，查看各页的查询结果		


1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的库位资料, 在列表页面不展示外场编号和外场名称两列。
SR2	“所属外场”,“库位编号”组合必须唯一
SR3	系统管理员只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场；外场管理员新增时“外场名称”默认是外场管理员所在的外场，不可编辑，修改时不允许修改所属外场

1.8	数据元素
1.8.1	库位查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	做辨识用的名称	文本		40	否	精确匹配
库位编号	每个外场对库位的唯一编号	文本		20	否	模糊匹配



1.8.2	库位查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	做辨识用的名称	N/A	40	N/A	
库位编号	库位编号	N/A	20	N/A	
备注	备注	N/A	200	N/A	


1.8.3	库位新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	做辨识用的名称	文本	40	是	
库位编号	库位编号	文本	20	是	
备注	备注	文本	200	否	
离月台距离(动态)	库位到月台的距离	数字	20	否	自动带出该外场所有的月台编号，供录入人员录入当前库位到各自月台的距离


1.9	非功能性需求
使用量	 <  10次 / 天，录入之后基本固定，外场库位不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述

dp-foss-综合管理系统用例-新增_修改_作废_查询月台信息-v1.02

修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-05-10 	新增 	朱俊勇	V0.1
2012-05-29	增加维护库位距离，可停靠线路入口和界面	朱俊勇	V0.2
2012-06-18	增加系统管理员操作界面	朱俊勇	V0.3
2012-07-08	移除和线路的绑定关系	朱俊勇	V0.4
2012-7-19	根据业务评审会议评委意见修改：增加“位置”字段；修改“可停靠车型”为复选框，可停靠车型细分为不同的车型	谢艳涛	V0.6
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-10-16	根据变更需求增加导入功能：在图一界面上增加“导入”按钮，并在功能按钮区域对导入按钮作描述；	谢艳涛	V1.01
2012-10-17	根据IBM张东平要求增加导出功能，附上导入Excel模板	谢艳涛	V1.02

1.	SUC-184-新增_修改_作废_查询月台信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场月台基础资料进行新增、修改、作废、查询操作。
系统管理员可对所有外场月台基础资料进行新增、修改、作废、查询操作。

1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	库位资料录入完成	SUC-85 修改_查询行政组织业务属性
 
后置条件	1、	为用户提供外场月台基础资料增删改查操作。
2、	为中转提供最优停靠月台计算
3、	为库位提供到月台的距离维护	SUC-371 计算车辆最优停靠月台
SUC-185 新增_修改_作废_查询库位信息

1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对所属外场的月台进行新增，修改，作废，查询操作。
1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
 
图一：月台查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：月台新增和修改界面】。
2)	导入按钮：点击导入按钮弹出界面【图三：导入Excel选择数据文件界面】，选择要导入月台数据文件（Excel文件），进行Excel数据导入；
3)	导出按钮：点击导出按钮，可以把月台所有数据导出到Excel中
4)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
5)	重置按钮：点击重置按钮，重置查询条件。
6)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
7)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：月台新增和修改界面】。
8)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，月台编号,可停靠车型,高度,宽度,升降台,位置。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，月台编号顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：月台新增和修改界面
 
图三：导入Excel选择数据文件界面
 
图四：导入Excel数据模板
1.5.5	界面描述-新增和修改界面
1．功能按钮区域
1)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
2)	重置按钮：点击重置按钮，回到当前界面的初始状态。
3)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【月台新增或修改信息】。

1.6	操作步骤
1.6.1	月台新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面。		
2	点击新增按钮。		进入月台新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入月台详细信息，点击保存按钮。		成功保存至系统。返回月台主界面。

月台新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	月台作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面。		
2	输入月台查询条件，查出需要作废的月台并选择一个或多个月台。	【月台查询结果列表信息】	
3	点击作废按钮。		弹出确认对话框。
4	点击确定按钮。		成功保存至系统。返回月台主界面。

月台作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	月台修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面		
2	输入月台查询条件，查出需要修改的月台并点击操作列的修改按钮。	【月台查询结果列表信息】	进入月台修改界面
3	修改月台信息，点击保存按钮。		成功保存至系统。返回月台主界面。

月台修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回月台主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	月台查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面		
2	输入月台查询条件，点击查询按钮。	【月台查询条件】	系统返回查询结果（按外场编码,月台编码顺序排列）
3	点击分页按钮，查看各页的查询结果		



1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的月台资料,在列表页面不展示外场编号和外场名称两列。
SR2	系统管理员只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场。
SR3	“外场编号”，“月台编号”组合唯一。
SR4	月台高度默认1.3米,宽度默认4.5米。

1.8	数据元素
1.8.1	月台查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	外场的标识名称	文本		20	否	精确匹配
月台编号	每个外场对月台的唯一编号，数字类型	数字		4	否	模糊匹配
可停靠车型	可以在该月台停靠的最大车型	下拉框		N/A	否	下拉框，内容读取自数据字典,包含：4.2米、6.5米、7.6米、9.6米、17.5米5种。
位置	月台所在位置：比如XX月台在A区	文本		50	否	支持模糊查询



1.8.2	月台查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	外场的标识名称	N/A	20	N/A	
月台编号	月台编号	N/A	4	N/A	
可停靠车型	该月台所能停靠的最大车型	N/A	40	N/A	内容读取自数据字典,包含4.2米及以上,4.2米以下两种。
高度	月台高度	N/A	40	N/A	单位为米。如无升降台，月台的高度为一个固定值；如有升降台，则为一个区间值。
宽度	月台宽度	N/A	40	N/A	单位为米，固定值
升降台	是否有升降台	N/A	1	N/A	有或无
位置	月台所在位置：比如XX月台在A区	N/A	50	N/A	


1.8.3	月台新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	外场的标识名称	文本	20	是	
月台编号	月台编号	文本	4	是	
升降台	是否有升降台	单选框	1	是	有，无
高度	月台高度	文本	40	是	单位为米。如无升降台，月台的高度为一个固定值；如有升降台，则为一个区间值。默认为1.3米。
宽度	月台宽度	文本	40	是	单位为米，固定值,默认为4.5米。
可停靠车型	可以在该月台停靠的最大车型	多选框	40	是	复选框，内容读取自数据字典,包含,包含：4.2米、6.5米、7.6米、9.6米、17.5米5种。
位置	月台所在位置：比如XX月台在A区	文本	50	否	
备注	备注信息	文本	200	否	

1.9	非功能性需求
使用量	 <  10 次/ 天, 录入之后基本固定，外场月台不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
		

		
dp-foss-综合管理系统用例-新增_修改_作废_查询库区信息-v1.11


修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-07-08 	新增 	朱俊勇	V0.1
2012-7-16	根据中转开发小组提出要求修改：增加“库区类别”属性	谢艳涛	V0.2
2012-7-17	根据朱俊勇老师要求修改：增加“库区编号”属性；“目的站”修改成只能匹配一个目的站	谢艳涛	V0.3
2012-7-20	根据评审会议评委意见修改：新增/修改时对于已经绑定库区的库位不允许勾选，必选先修改旧的记录；增加“显示全部库位”、“隐藏已绑定库位”按钮	谢艳涛	V0.6
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-12-1	根据变更需求增加业务规则SR8	谢艳涛	V1.11

1.	SUC-787 新增_修改_作废_查询库区信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场库区基础资料进行新增、修改、作废、查询操作。
系统管理员可对所有外场库区基础资料进行新增、修改、作废、查询操作。
1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	外场库位资料录入完成	SUC-85 修改_查询行政组织业务属性
SUC-185新增_修改_作废_查询库位信息
后置条件	1.	为管理员提供外场库区的增删改查等功能
2.	为其他用例提供外场库区基础资料查询。	SUC-371 计算车辆最优停靠月台

1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对外场的库区进行新增，修改，作废，查询，维护库位操作。
1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
  
图一：库区查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：库区新增和修改界面（一）】。
2)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
3)	重置按钮：点击重置按钮，重置查询条件。
4)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
5)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：库区新增和修改界面（一）】。
6)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，库区编号，库区名称，库区类型，货物类型，目的站，库区类别、备注。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，库区名称顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：库区新增和修改界面（一）
 
图三：库区新增和修改界面（二）
1.5.5	界面描述-新增和修改界面
1.	功能按钮区域
1)	显示全部库位按钮：点击显示全部库位按钮，显示外场所有库位，见图【图三：库区新增和修改界面（二）】。
2)	隐藏绑定库位按钮：点击隐藏绑定库位按钮，隐藏所有已绑定其他库区的库位，见图【图二：库区新增和修改界面（一）】
3)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
4)	重置按钮：点击重置按钮，回到当前界面的初始状态。
5)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【库区新增或修改条件】。
1.6	操作步骤
1.6.1	库区新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面。		
2	点击新增按钮。		进入库区新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入库区详细信息，点击保存按钮。参见业务规则：SR2、SR7		成功保存至系统。返回库区主界面。

库区新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	库区作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面。		
2	输入库区查询条件，查出需要作废的库区并选择一个或多个库区。	【库区列表信息】	
3	点击作废按钮。		弹出确认提示框。
4	点击确定按钮。		成功保存至系统。返回库区主界面。

库区作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	库区修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面		
2	输入库区查询条件，查出需要修改的库区并点击操作列的修改按钮。参见业务规则：SR2、SR7	【库区新增或修改信息】	进入库区修改界面
3	修改库区信息，点击保存按钮。		成功保存至系统。返回库区主界面。

库区修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回库区主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	库区查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面		
2	输入库区查询条件，点击查询按钮。	【库区查询条件】	系统返回查询结果（按库区编码顺序排列）
3	点击分页按钮，查看各页的查询结果		


1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的库区资料, 在列表页面不展示外场编号和外场名称两列。
SR2	“所属外场”,“库区编号”组合必须唯一
SR3	“目的站”只能选择一个；
1、	如果“库区类型”是“偏线库区”，则“目的站”不可填；
2、	如果“库区类型”是“空运库区”，则“目的站”只能从行政组织（空运总调）基础资料中选择；
3、	如果“库区类型”是“卡货库区”或者“普货库区”或“城际快车库区”或“混装库区”，则“目的站”只能从行政组织（营业部、外场）基础资料中选择
SR4	一个库区可以对应1个或多个库位，一个库位只能对应一个库区。
SR5	如果在选择库位时选中了已分配的库位，则取消原库位的对应关系，将之关联到新的库区。
SR6	只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场。
SR7	新增/修改库区界面，库区“对应库位”默认只显示所有未绑定其他库区的库位；显示全部库位时，已经绑定其他库区的库位是只读状态，不能勾选；
SR8	对于外场的货区，对应于各个线路的普通货区以及偏线，贵重物品等特殊货区，都必须唯一有一个货区对应

1.8	数据元素
1.8.1	库区查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	做辨识用的名称	文本		40	否	精确匹配
库区名称	做辨识用的名称	文本		40	否	精确匹配
库区类型	该库区的类型	下拉框		N/A	否	下拉框，内容读取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区，偏线库区和空运库区。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货	下拉框		N/A	否	下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	库区所对应的目的站，必须是中转或到达组织,比如外场，营业部或者空运总调。	文本		40	否	精确匹配
库区类别	库区类别，包括：长途、短途、全部，默认为全部	下拉框		N/A	否	全部,长途,短途



1.8.2	库区查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	做辨识用的名称	N/A	40	N/A	
库区编号	库区的唯一编号	N/A	10	N/A	
库区名称	库区名称	N/A	40	N/A	
库区类型	库区发货类型	N/A	4	N/A	取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区，偏线库区和空运库区。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货				下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	目的外场，营业部，空运总调等。	N/A	40	N/A	
库区类别	库区类别，包括：长途、短途	N/A	4	N/A	
备注	备注	N/A	200	N/A	如果是偏线库区的话，目的站为空，可以在备注里标明是去哪里的偏线。


1.8.3	库区新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	做辨识用的名称	文本	40	是	
库区编号	库区的唯一编号	文本	10	是	
库区名称	库区名称	文本	40	是	
库区类型	库区发货类型	下拉框	4	是	取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区和偏线库区等。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货	下拉框		是	下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	目的外场，营业部，空运总调等。	文本	N/A	否	如果是偏线的话，则不可填
库区类别	库区类别，包括：长途、短途	下拉框	4	是	
备注	备注	文本	200	否	如果是偏线库区的话，目的站为空，可以在备注里标明是去哪里的偏线或者所有偏线。
对应库位（动态）	选中该库区对应的一个或多个库位	复选框		否	动态按库位编号顺序显示当前外场所有的库位，如果该库位已经分配库区，则在库位编号后面带出库区名称。


1.9	非功能性需求
使用量	 <  10次 / 天，录入之后基本固定，外场库区不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
		

dp-foss-综合管理系统用例-新增_修改_作废_查询库位信息-v1.1


修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-05-14 	新增 	朱俊勇	V0.1
2012-06-17	增加系统管理员操作界面	朱俊勇	V0.1.5
2012-07-08	增加到月台的距离维护。把库位名，目的站等属性拆分到库区中维护	朱俊勇	V0.2
2012-7-17	根据朱俊勇老师意见进行修改：新增/修改界面做调整修改	谢艳涛	V0.3
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-10-12	根据变更需求修改SR3业务规则	谢艳涛	V1.01

1.	SUC-185 新增_修改_作废_查询库位信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场库位基础资料进行新增、修改、作废、查询,维护到各月台的距离等操作。
系统管理员可对所有外场库位基础资料进行新增、修改、作废、查询,维护到各月台的距离等操作。

1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	月台资料录入完成	SUC-85 修改_查询行政组织业务属性
SUC-184 新增_修改_查询_作废_查看月台信息
后置条件	1.	为管理员提供外场库位的增删改查等功能
2.	为其他用例提供外场库位基础资料查询。	SUC-787  新增_修改_查询_作废_查看库区信息
1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对外场的库位进行新增，修改，作废，查询,维护到各月台的距离等操作。

1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
 
图一：库位查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：库位新增和修改界面】。
2)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
3)	重置按钮：点击重置按钮，重置查询条件。
4)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
5)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：库位新增和修改界面】。
6)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，库位编号，备注。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，库位编号顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：库位新增和修改界面
1.5.5	界面描述-新增和修改界面
1.	功能按钮区域
1)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
2)	重置按钮：点击重置按钮，回到当前界面的初始状态。
3)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【库位新增或修改条件】。
1.6	操作步骤
1.6.1	库位新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面。		
2	点击新增按钮。		进入库位新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入库位详细信息，点击保存按钮。		成功保存至系统。返回库位主界面。

库位新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	库位作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面。		
2	输入库位查询条件，查出需要作废的库位并选择一个或多个库位。	【库位列表信息】	
3	点击作废按钮。		弹出确认提示框。
4	点击确定按钮。		成功保存至系统。返回库位主界面。

库位作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	库位修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面		
2	输入库位查询条件，查出需要修改的库位并点击操作列的修改按钮。	【库位新增或修改信息】	进入库位修改界面
3	修改库位信息，点击保存按钮。		成功保存至系统。返回库位主界面。

库位修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回库位主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	库位查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面		
2	输入库位查询条件，点击查询按钮。	【库位查询条件】	系统返回查询结果（按库位编码顺序排列）
3	点击分页按钮，查看各页的查询结果		


1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的库位资料, 在列表页面不展示外场编号和外场名称两列。
SR2	“所属外场”,“库位编号”组合必须唯一
SR3	系统管理员只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场；外场管理员新增时“外场名称”默认是外场管理员所在的外场，不可编辑，修改时不允许修改所属外场

1.8	数据元素
1.8.1	库位查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	做辨识用的名称	文本		40	否	精确匹配
库位编号	每个外场对库位的唯一编号	文本		20	否	模糊匹配



1.8.2	库位查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	做辨识用的名称	N/A	40	N/A	
库位编号	库位编号	N/A	20	N/A	
备注	备注	N/A	200	N/A	


1.8.3	库位新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	做辨识用的名称	文本	40	是	
库位编号	库位编号	文本	20	是	
备注	备注	文本	200	否	
离月台距离(动态)	库位到月台的距离	数字	20	否	自动带出该外场所有的月台编号，供录入人员录入当前库位到各自月台的距离


1.9	非功能性需求
使用量	 <  10次 / 天，录入之后基本固定，外场库位不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述	

dp-foss-综合管理系统用例-新增_修改_作废_查询月台信息-v1.02

修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-05-10 	新增 	朱俊勇	V0.1
2012-05-29	增加维护库位距离，可停靠线路入口和界面	朱俊勇	V0.2
2012-06-18	增加系统管理员操作界面	朱俊勇	V0.3
2012-07-08	移除和线路的绑定关系	朱俊勇	V0.4
2012-7-19	根据业务评审会议评委意见修改：增加“位置”字段；修改“可停靠车型”为复选框，可停靠车型细分为不同的车型	谢艳涛	V0.6
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-10-16	根据变更需求增加导入功能：在图一界面上增加“导入”按钮，并在功能按钮区域对导入按钮作描述；	谢艳涛	V1.01
2012-10-17	根据IBM张东平要求增加导出功能，附上导入Excel模板	谢艳涛	V1.02

1.	SUC-184-新增_修改_作废_查询月台信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场月台基础资料进行新增、修改、作废、查询操作。
系统管理员可对所有外场月台基础资料进行新增、修改、作废、查询操作。

1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	库位资料录入完成	SUC-85 修改_查询行政组织业务属性
 
后置条件	1、	为用户提供外场月台基础资料增删改查操作。
2、	为中转提供最优停靠月台计算
3、	为库位提供到月台的距离维护	SUC-371 计算车辆最优停靠月台
SUC-185 新增_修改_作废_查询库位信息

1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对所属外场的月台进行新增，修改，作废，查询操作。
1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
 
图一：月台查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：月台新增和修改界面】。
2)	导入按钮：点击导入按钮弹出界面【图三：导入Excel选择数据文件界面】，选择要导入月台数据文件（Excel文件），进行Excel数据导入；
3)	导出按钮：点击导出按钮，可以把月台所有数据导出到Excel中
4)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
5)	重置按钮：点击重置按钮，重置查询条件。
6)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
7)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：月台新增和修改界面】。
8)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，月台编号,可停靠车型,高度,宽度,升降台,位置。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，月台编号顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：月台新增和修改界面
 
图三：导入Excel选择数据文件界面
 
图四：导入Excel数据模板
1.5.5	界面描述-新增和修改界面
1．功能按钮区域
1)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
2)	重置按钮：点击重置按钮，回到当前界面的初始状态。
3)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【月台新增或修改信息】。

1.6	操作步骤
1.6.1	月台新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面。		
2	点击新增按钮。		进入月台新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入月台详细信息，点击保存按钮。		成功保存至系统。返回月台主界面。

月台新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	月台作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面。		
2	输入月台查询条件，查出需要作废的月台并选择一个或多个月台。	【月台查询结果列表信息】	
3	点击作废按钮。		弹出确认对话框。
4	点击确定按钮。		成功保存至系统。返回月台主界面。

月台作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	月台修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面		
2	输入月台查询条件，查出需要修改的月台并点击操作列的修改按钮。	【月台查询结果列表信息】	进入月台修改界面
3	修改月台信息，点击保存按钮。		成功保存至系统。返回月台主界面。

月台修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回月台主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	月台查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入月台主界面		
2	输入月台查询条件，点击查询按钮。	【月台查询条件】	系统返回查询结果（按外场编码,月台编码顺序排列）
3	点击分页按钮，查看各页的查询结果		



1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的月台资料,在列表页面不展示外场编号和外场名称两列。
SR2	系统管理员只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场。
SR3	“外场编号”，“月台编号”组合唯一。
SR4	月台高度默认1.3米,宽度默认4.5米。

1.8	数据元素
1.8.1	月台查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	外场的标识名称	文本		20	否	精确匹配
月台编号	每个外场对月台的唯一编号，数字类型	数字		4	否	模糊匹配
可停靠车型	可以在该月台停靠的最大车型	下拉框		N/A	否	下拉框，内容读取自数据字典,包含：4.2米、6.5米、7.6米、9.6米、17.5米5种。
位置	月台所在位置：比如XX月台在A区	文本		50	否	支持模糊查询



1.8.2	月台查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	外场的标识名称	N/A	20	N/A	
月台编号	月台编号	N/A	4	N/A	
可停靠车型	该月台所能停靠的最大车型	N/A	40	N/A	内容读取自数据字典,包含4.2米及以上,4.2米以下两种。
高度	月台高度	N/A	40	N/A	单位为米。如无升降台，月台的高度为一个固定值；如有升降台，则为一个区间值。
宽度	月台宽度	N/A	40	N/A	单位为米，固定值
升降台	是否有升降台	N/A	1	N/A	有或无
位置	月台所在位置：比如XX月台在A区	N/A	50	N/A	


1.8.3	月台新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	外场的标识名称	文本	20	是	
月台编号	月台编号	文本	4	是	
升降台	是否有升降台	单选框	1	是	有，无
高度	月台高度	文本	40	是	单位为米。如无升降台，月台的高度为一个固定值；如有升降台，则为一个区间值。默认为1.3米。
宽度	月台宽度	文本	40	是	单位为米，固定值,默认为4.5米。
可停靠车型	可以在该月台停靠的最大车型	多选框	40	是	复选框，内容读取自数据字典,包含,包含：4.2米、6.5米、7.6米、9.6米、17.5米5种。
位置	月台所在位置：比如XX月台在A区	文本	50	否	
备注	备注信息	文本	200	否	

1.9	非功能性需求
使用量	 <  10 次/ 天, 录入之后基本固定，外场月台不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
		

		
dp-foss-综合管理系统用例-新增_修改_作废_查询库区信息-v1.11


修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-07-08 	新增 	朱俊勇	V0.1
2012-7-16	根据中转开发小组提出要求修改：增加“库区类别”属性	谢艳涛	V0.2
2012-7-17	根据朱俊勇老师要求修改：增加“库区编号”属性；“目的站”修改成只能匹配一个目的站	谢艳涛	V0.3
2012-7-20	根据评审会议评委意见修改：新增/修改时对于已经绑定库区的库位不允许勾选，必选先修改旧的记录；增加“显示全部库位”、“隐藏已绑定库位”按钮	谢艳涛	V0.6
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-12-1	根据变更需求增加业务规则SR8	谢艳涛	V1.11

1.	SUC-787 新增_修改_作废_查询库区信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场库区基础资料进行新增、修改、作废、查询操作。
系统管理员可对所有外场库区基础资料进行新增、修改、作废、查询操作。
1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	外场库位资料录入完成	SUC-85 修改_查询行政组织业务属性
SUC-185新增_修改_作废_查询库位信息
后置条件	1.	为管理员提供外场库区的增删改查等功能
2.	为其他用例提供外场库区基础资料查询。	SUC-371 计算车辆最优停靠月台

1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对外场的库区进行新增，修改，作废，查询，维护库位操作。
1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
  
图一：库区查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：库区新增和修改界面（一）】。
2)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
3)	重置按钮：点击重置按钮，重置查询条件。
4)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
5)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：库区新增和修改界面（一）】。
6)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，库区编号，库区名称，库区类型，货物类型，目的站，库区类别、备注。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，库区名称顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：库区新增和修改界面（一）
 
图三：库区新增和修改界面（二）
1.5.5	界面描述-新增和修改界面
1.	功能按钮区域
1)	显示全部库位按钮：点击显示全部库位按钮，显示外场所有库位，见图【图三：库区新增和修改界面（二）】。
2)	隐藏绑定库位按钮：点击隐藏绑定库位按钮，隐藏所有已绑定其他库区的库位，见图【图二：库区新增和修改界面（一）】
3)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
4)	重置按钮：点击重置按钮，回到当前界面的初始状态。
5)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【库区新增或修改条件】。
1.6	操作步骤
1.6.1	库区新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面。		
2	点击新增按钮。		进入库区新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入库区详细信息，点击保存按钮。参见业务规则：SR2、SR7		成功保存至系统。返回库区主界面。

库区新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	库区作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面。		
2	输入库区查询条件，查出需要作废的库区并选择一个或多个库区。	【库区列表信息】	
3	点击作废按钮。		弹出确认提示框。
4	点击确定按钮。		成功保存至系统。返回库区主界面。

库区作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	库区修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面		
2	输入库区查询条件，查出需要修改的库区并点击操作列的修改按钮。参见业务规则：SR2、SR7	【库区新增或修改信息】	进入库区修改界面
3	修改库区信息，点击保存按钮。		成功保存至系统。返回库区主界面。

库区修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回库区主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	库区查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库区主界面		
2	输入库区查询条件，点击查询按钮。	【库区查询条件】	系统返回查询结果（按库区编码顺序排列）
3	点击分页按钮，查看各页的查询结果		


1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的库区资料, 在列表页面不展示外场编号和外场名称两列。
SR2	“所属外场”,“库区编号”组合必须唯一
SR3	“目的站”只能选择一个；
1、	如果“库区类型”是“偏线库区”，则“目的站”不可填；
2、	如果“库区类型”是“空运库区”，则“目的站”只能从行政组织（空运总调）基础资料中选择；
3、	如果“库区类型”是“卡货库区”或者“普货库区”或“城际快车库区”或“混装库区”，则“目的站”只能从行政组织（营业部、外场）基础资料中选择
SR4	一个库区可以对应1个或多个库位，一个库位只能对应一个库区。
SR5	如果在选择库位时选中了已分配的库位，则取消原库位的对应关系，将之关联到新的库区。
SR6	只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场。
SR7	新增/修改库区界面，库区“对应库位”默认只显示所有未绑定其他库区的库位；显示全部库位时，已经绑定其他库区的库位是只读状态，不能勾选；
SR8	对于外场的货区，对应于各个线路的普通货区以及偏线，贵重物品等特殊货区，都必须唯一有一个货区对应

1.8	数据元素
1.8.1	库区查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	做辨识用的名称	文本		40	否	精确匹配
库区名称	做辨识用的名称	文本		40	否	精确匹配
库区类型	该库区的类型	下拉框		N/A	否	下拉框，内容读取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区，偏线库区和空运库区。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货	下拉框		N/A	否	下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	库区所对应的目的站，必须是中转或到达组织,比如外场，营业部或者空运总调。	文本		40	否	精确匹配
库区类别	库区类别，包括：长途、短途、全部，默认为全部	下拉框		N/A	否	全部,长途,短途



1.8.2	库区查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	做辨识用的名称	N/A	40	N/A	
库区编号	库区的唯一编号	N/A	10	N/A	
库区名称	库区名称	N/A	40	N/A	
库区类型	库区发货类型	N/A	4	N/A	取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区，偏线库区和空运库区。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货				下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	目的外场，营业部，空运总调等。	N/A	40	N/A	
库区类别	库区类别，包括：长途、短途	N/A	4	N/A	
备注	备注	N/A	200	N/A	如果是偏线库区的话，目的站为空，可以在备注里标明是去哪里的偏线。


1.8.3	库区新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	做辨识用的名称	文本	40	是	
库区编号	库区的唯一编号	文本	10	是	
库区名称	库区名称	文本	40	是	
库区类型	库区发货类型	下拉框	4	是	取自数据字典，所包含的内容有：卡货库区、普货库区、城际快车库区,混装库区和偏线库区等。
货物类型	该库区所存放的货物类型，A货为可自动分拣，B货为不可自动分拣，全部为既有A货也有B货	下拉框		是	下拉框，内容读取自数据字典，所包含的内容有：全部（默认），A货，B货
目的站	目的外场，营业部，空运总调等。	文本	N/A	否	如果是偏线的话，则不可填
库区类别	库区类别，包括：长途、短途	下拉框	4	是	
备注	备注	文本	200	否	如果是偏线库区的话，目的站为空，可以在备注里标明是去哪里的偏线或者所有偏线。
对应库位（动态）	选中该库区对应的一个或多个库位	复选框		否	动态按库位编号顺序显示当前外场所有的库位，如果该库位已经分配库区，则在库位编号后面带出库区名称。


1.9	非功能性需求
使用量	 <  10次 / 天，录入之后基本固定，外场库区不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
		

dp-foss-综合管理系统用例-新增_修改_作废_查询库位信息-v1.1


修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-05-14 	新增 	朱俊勇	V0.1
2012-06-17	增加系统管理员操作界面	朱俊勇	V0.1.5
2012-07-08	增加到月台的距离维护。把库位名，目的站等属性拆分到库区中维护	朱俊勇	V0.2
2012-7-17	根据朱俊勇老师意见进行修改：新增/修改界面做调整修改	谢艳涛	V0.3
2012-8-2	通过业务部门审核签字版本升级到V0.9	谢艳涛	V0.9
2012-10-12	根据变更需求修改SR3业务规则	谢艳涛	V1.01

1.	SUC-185 新增_修改_作废_查询库位信息
1.1	相关业务用例
BUC_FOSS_5.10.30_030	DP-FOSS-中转业务用例-场内调度-使用月台-V0.62.doc
BUC_FOSS_5.10.30_020	DP-FOSS-中转业务用例-场内调度-安排停靠月台-V0.62.doc
1.2	用例描述
外场管理员可对所属外场库位基础资料进行新增、修改、作废、查询,维护到各月台的距离等操作。
系统管理员可对所有外场库位基础资料进行新增、修改、作废、查询,维护到各月台的距离等操作。

1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1、	外场资料录入完成
2、	月台资料录入完成	SUC-85 修改_查询行政组织业务属性
SUC-184 新增_修改_查询_作废_查看月台信息
后置条件	1.	为管理员提供外场库位的增删改查等功能
2.	为其他用例提供外场库位基础资料查询。	SUC-787  新增_修改_查询_作废_查看库区信息
1.4	操作用户角色
操作用户	描述
外场管理员或系统管理员	对外场的库位进行新增，修改，作废，查询,维护到各月台的距离等操作。

1.5	界面要求
1.5.1	表现方式
Web页面
1.5.2	界面原型-主界面-查询列表
 
图一：库位查询列表
1.5.3	界面描述-主界面-查询列表
1.	功能按钮区域
1)	新增按钮：点击新增按钮进入新增界面，参见【图二：库位新增和修改界面】。
2)	查询按钮：输入查询条件，点击查询按钮，系统返回查询结果，刷新查询列表。
3)	重置按钮：点击重置按钮，重置查询条件。
4)	作废按钮：选中列表中一行或多行记录，点击作废按钮，选中的记录被作废；或点击各行的作废按钮，作废改行记录；需要弹出确认提示框。
5)	修改按钮：点击各行的修改按钮，进入修改界面，参见【图二：库位新增和修改界面】。
6)	分页按钮：实现分页功能。
2.	列表显示区域
1)	列表区域默认不显示，点击查询按钮，根据查询条件显示列表数据。
2)	列表中包含外场编号，外场名称，库位编号，备注。
3.	字段输入区域
录入查询条件，点击查询按钮后在列表区按外场编号，库位编号顺序显示满足条件的查询结果。
1.5.4	界面原型-新增和修改界面

 
图二：库位新增和修改界面
1.5.5	界面描述-新增和修改界面
1.	功能按钮区域
1)	保存按钮：点击保存按钮，成功保存界面信息至数据库，并返回到查询列表页面;失败则停留在原页面并提示用户失败原因。
2)	重置按钮：点击重置按钮，回到当前界面的初始状态。
3)	取消按钮：点击取消按钮，退出当前界面，返回查询列表页面。
2.	字段输入区域
参见数据元素【库位新增或修改条件】。
1.6	操作步骤
1.6.1	库位新增操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面。		
2	点击新增按钮。		进入库位新增界面。如果当前用户是外场管理员，则字段“外场名称”，自动带出为用户所属外场。
如果当前用户是系统管理员，则“外场名称”可编辑。
3	输入库位详细信息，点击保存按钮。		成功保存至系统。返回库位主界面。

库位新增操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮。		退出当前界面，返回主界面。
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在新增界面		

1.6.2	库位作废操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面。		
2	输入库位查询条件，查出需要作废的库位并选择一个或多个库位。	【库位列表信息】	
3	点击作废按钮。		弹出确认提示框。
4	点击确定按钮。		成功保存至系统。返回库位主界面。

库位作废操作步骤-异常操作
序号	扩展事件	相关数据	备注
4a	点击取消按钮，退出当前界面，返回上一级界面。		
4b	确认作废后，若作废失败，需弹出对话框，提示用户作废失败以及失败原因		

1.6.3	库位修改操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面		
2	输入库位查询条件，查出需要修改的库位并点击操作列的修改按钮。	【库位新增或修改信息】	进入库位修改界面
3	修改库位信息，点击保存按钮。		成功保存至系统。返回库位主界面。

库位修改操作步骤-异常操作
序号	扩展事件	相关数据	备注
3a	点击取消按钮，退出当前界面，返回库位主界面。		
3b	若保存失败，弹出对话框，提示用户保存失败以及失败原因，继续停留在编辑界面		

1.6.4	库位查询操作步骤
序号	基本步骤	相关数据	补充步骤
1	进入库位主界面		
2	输入库位查询条件，点击查询按钮。	【库位查询条件】	系统返回查询结果（按库位编码顺序排列）
3	点击分页按钮，查看各页的查询结果		


1.7	业务规则
序号	描述
SR1	外场管理员只能管理自己所在外场的库位资料, 在列表页面不展示外场编号和外场名称两列。
SR2	“所属外场”,“库位编号”组合必须唯一
SR3	系统管理员只有在新增时可以选择外场名称，并自动带出外场编号，修改时不允许修改所属外场；外场管理员新增时“外场名称”默认是外场管理员所在的外场，不可编辑，修改时不允许修改所属外场

1.8	数据元素
1.8.1	库位查询条件
字段名称 	说明	输入限制	输入提示文本	长度	是否必填	备注
外场名称	做辨识用的名称	文本		40	否	精确匹配
库位编号	每个外场对库位的唯一编号	文本		20	否	模糊匹配



1.8.2	库位查询结果列表信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	N/A	3	N/A	
外场名称	做辨识用的名称	N/A	40	N/A	
库位编号	库位编号	N/A	20	N/A	
备注	备注	N/A	200	N/A	


1.8.3	库位新增或修改信息
字段名称 	说明 	输入限制	长度	是否必填	备注
外场编号	外场的唯一编号	文本	3	是	
外场名称	做辨识用的名称	文本	40	是	
库位编号	库位编号	文本	20	是	
备注	备注	文本	200	否	
离月台距离(动态)	库位到月台的距离	数字	20	否	自动带出该外场所有的月台编号，供录入人员录入当前库位到各自月台的距离


1.9	非功能性需求
使用量	 <  10次 / 天，录入之后基本固定，外场库位不会频繁变动。
2012年全网估计用户数	
响应要求（如果与全系统要求 不一致的话）	
使用时间段	
高峰使用时间段	

1.10	接口描述
接口名称 	对方系统（外部系统或内部其他模块）	接口描述	
*/

package com.deppon.foss.module.base.baseinfo.server.service.impl;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.apache.commons.collections.CollectionUtils;
import org.apache.commons.lang.BooleanUtils;
import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;
import org.springframework.transaction.annotation.Transactional;

import com.deppon.foss.base.util.SqlUtil;
import com.deppon.foss.base.util.define.NumberConstants;
import com.deppon.foss.base.util.define.SymbolConstants;
import com.deppon.foss.framework.cache.CacheManager;
import com.deppon.foss.framework.cache.ICache;
import com.deppon.foss.framework.server.context.UserContext;
import com.deppon.foss.module.base.baseinfo.api.server.dao.IGoodsAreaDao;
import com.deppon.foss.module.base.baseinfo.api.server.dao.IPlatAreaDistanceDao;
import com.deppon.foss.module.base.baseinfo.api.server.dao.IPlatformDao;
import com.deppon.foss.module.base.baseinfo.api.server.service.IGoodsAreaService;
import com.deppon.foss.module.base.baseinfo.api.server.service.IOrgAdministrativeInfoService;
import com.deppon.foss.module.base.baseinfo.api.server.service.IOutfieldService;
import com.deppon.foss.module.base.baseinfo.api.server.service.IStorageService;
import com.deppon.foss.module.base.baseinfo.api.server.service.IUserDeptDataService;
import com.deppon.foss.module.base.baseinfo.api.server.service.IUserOrgRoleService;
import com.deppon.foss.module.base.baseinfo.api.shared.domain.GoodsAreaEntity;
import com.deppon.foss.module.base.baseinfo.api.shared.domain.OutfieldEntity;
import com.deppon.foss.module.base.baseinfo.api.shared.domain.PlatAreaDistanceEntity;
import com.deppon.foss.module.base.baseinfo.api.shared.domain.PlatformEntity;
import com.deppon.foss.module.base.baseinfo.api.shared.domain.StorageEntity;
import com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity;
import com.deppon.foss.module.base.baseinfo.api.shared.dto.GoodsAreaExcelDto;
import com.deppon.foss.module.base.baseinfo.api.shared.exception.GoodsAreaException;
import com.deppon.foss.module.base.baseinfo.server.util.LineUtils;
import com.deppon.foss.module.base.dict.api.server.service.IDataDictionaryValueService;
import com.deppon.foss.module.base.dict.api.shared.define.DictionaryConstants;
import com.deppon.foss.module.base.dict.api.shared.define.DictionaryValueConstants;
import com.deppon.foss.module.base.dict.api.shared.domain.DataDictionaryValueEntity;
import com.deppon.foss.module.pickup.pricing.api.server.service.IProductService;
import com.deppon.foss.module.pickup.pricing.api.shared.domain.ProductEntity;
import com.deppon.foss.util.common.FossTTLCache;
import com.deppon.foss.util.define.FossConstants;
import com.google.inject.Inject;


/**
 * 库区服务类
 * @author foss-zhujunyong
 * @date Oct 30, 2012 10:35:15 AM
 * @version 1.0
 */
public class GoodsAreaService implements IGoodsAreaService {

    /**
     * 日志类
     */
    private static final Logger log = Logger.getLogger(GoodsAreaService.class);

    /**
     * 
     * goodsAreaDao
     */
    private IGoodsAreaDao goodsAreaDao;

    private IPlatAreaDistanceDao platAreaDistanceDao;
    
    private IPlatformDao platformDao;
    
    public void setPlatAreaDistanceDao(IPlatAreaDistanceDao platAreaDistanceDao) {
		this.platAreaDistanceDao = platAreaDistanceDao;
	}

    public void setPlatformDao(IPlatformDao platformDao) {
		this.platformDao = platformDao;
	}

	/**
     * 
     * storageService
     */
    private IStorageService storageService;
    /**
     * 
     * orgAdministrativeInfoService
     */
    @Inject
    private IOrgAdministrativeInfoService orgAdministrativeInfoService;
    /**
     * 
     * productService
     */
    @Inject
    private IProductService productService;

    /**
     * 
     * userDeptDataService
     */
    private IUserDeptDataService userDeptDataService;
    /**
     * 
     * outfieldService
     */
    @Inject
    private IOutfieldService outfieldService;

    /**
     * userOrgRoleService
     */
    private IUserOrgRoleService userOrgRoleService; 
    
    
    /**
     * @param userOrgRoleService the userOrgRoleService to set
     */
    public void setUserOrgRoleService(IUserOrgRoleService userOrgRoleService) {
        this.userOrgRoleService = userOrgRoleService;
    }

    /**
     * 
     * @author foss-zhujunyong
     * @date Mar 13, 2013 10:23:54 AM
     * @param outfieldService
     * @see
     */
    public void setOutfieldService(IOutfieldService outfieldService) {
        this.outfieldService = outfieldService;
    }

    /**
     * 
     * @author foss-zhujunyong
     * @date Mar 13, 2013 10:23:59 AM
     * @param userDeptDataService
     * @see
     */
    public void setUserDeptDataService(IUserDeptDataService userDeptDataService) {
        this.userDeptDataService = userDeptDataService;
    }
    
    /**
     * 
     * @author foss-zhujunyong
     * @date Mar 13, 2013 10:24:05 AM
     * @param productService
     * @see
     */
    public void setProductService(IProductService productService) {
        this.productService = productService;
    }

    /**
     * 
     * @author foss-zhujunyong
     * @date Mar 6, 2013 10:00:35 AM
     * @param orgAdministrativeInfoService
     * @see
     */
    public void setOrgAdministrativeInfoService(IOrgAdministrativeInfoService orgAdministrativeInfoService) {
        this.orgAdministrativeInfoService = orgAdministrativeInfoService;
    }

    /**
     * 
     * @author foss-zhujunyong
     * @date Mar 6, 2013 10:00:40 AM
     * @param storageService
     * @see
     */
    public void setStorageService(IStorageService storageService) {
        this.storageService = storageService;
    }

    /**
     * 
     * @author foss-zhujunyong
     * @date Mar 19, 2013 10:11:54 AM
     * @param goodsAreaDao
     * @see
     */
    public void setGoodsAreaDao(IGoodsAreaDao goodsAreaDao) {
        this.goodsAreaDao = goodsAreaDao;
    }

	@Inject
    private IDataDictionaryValueService dataDictionaryValueService;

    public void setDataDictionaryValueService(IDataDictionaryValueService dataDictionaryValueService) {
        this.dataDictionaryValueService = dataDictionaryValueService;
    }

    /** 
     * <p>添加库区</p> 
     * @author foss-zhujunyong
     * @date Oct 30, 2012 10:35:15 AM
     * @param goodsArea
     * @return 
     * @see com.deppon.foss.module.base.baseinfo.api.server.service.IGoodsAreaService#addGoodsArea(com.deppon.foss.module.base.baseinfo.api.shared.domain.GoodsAreaEntity)
     */
    @Override
    @Transactional
    public GoodsAreaEntity addGoodsArea(GoodsAreaEntity goodsArea) {
	if (goodsArea == null) {
	    return null;
	}
	
	// 如果目的站编码有值，则需要校验同一目的站的库区不能同时有卡普和混装
	if (StringUtils.isNotBlank(goodsArea.getArriveRegionCode())) {
	    GoodsAreaEntity entity = queryGoodsAreaByArriveRegionCode(goodsArea.getOrganizationCode(), goodsArea.getArriveRegionCode(), null);
	    if (entity != null
		    && (StringUtils.equals(entity.getGoodsAreaType(), DictionaryValueConstants.BSE_GOODSAREA_TYPE_COMMON)
		    || StringUtils.equals(entity.getGoodsAreaType(), goodsArea.getGoodsAreaType()))) {
		throw new GoodsAreaException(GoodsAreaException.GOODSAREA_TYPE_EXIST);
	    }
	}
	
	// 同一外场下,库区编码不能重复
	GoodsAreaEntity entity = queryGoodsAreaByCode(goodsArea.getOrganizationCode(), goodsArea.getGoodsAreaCode());
	if (entity != null) {
	    throw new GoodsAreaException(GoodsAreaException.GOODSAREA_CODE_EXIST);
	}
	
	// 如果是唯一性货区，需要判断不能重复录入
	//313353 sonar
	this.sonarSplitOne(goodsArea);
	
	if(StringUtils.equals(goodsArea.getCountingModeAb(), "true")||StringUtils.equals(goodsArea.getCountingModeKp(),"true")){
		if(StringUtils.equals(goodsArea.getCountingModeAb(), "true")&&!StringUtils.equals(goodsArea.getCountingModeKp(), "true")){
			goodsArea.setCountingMode("AB");
		}else if(!StringUtils.equals(goodsArea.getCountingModeAb(), "true")&&StringUtils.equals(goodsArea.getCountingModeKp(), "true")){
			goodsArea.setCountingMode("KP");
		}else{
			goodsArea.setCountingMode("KPAB");
		}
	}
	
	entity = goodsAreaDao.addGoodsArea(goodsArea);
	if (entity != null) {
		initPlatAreaDistance(entity);
	    //storageService.mergeStorages(goodsArea.getStorageList(), entity.getVirtualCode());
	    invalidList(entity.getOrganizationCode());
	}
	return entity;
    }
    
	/**
	 * sonar优化拆分
	 * 
	 * @author 313353
	 */
	private void sonarSplitOne(GoodsAreaEntity goodsArea) {
		if (isUniqueGoodsAreaType(goodsArea.getGoodsAreaType())) {
		    List<GoodsAreaEntity> list = querySimpleGoodsAreaListByType(goodsArea.getOrganizationCode(), goodsArea.getGoodsAreaType());
		    if (CollectionUtils.isNotEmpty(list)) {
			throw new GoodsAreaException(GoodsAreaException.GOODSAREA_TYPE_UNIQUE_EXIST);
		    }
		}
		if(StringUtils.equals(goodsArea.getCountingModeAb(), "true")||StringUtils.equals(goodsArea.getCountingModeKp(),"true")){
			if(StringUtils.equals(goodsArea.getCountingModeAb(), "true")&&!StringUtils.equals(goodsArea.getGoodsType(), "AB")){
				throw new GoodsAreaException("货物类型不为A/B货，计票方式不能选择计数（AB）");
			}else if(!StringUtils.equals(goodsArea.getGoodsAreaType(), "BSE_GOODSAREA_TYPE_COMMON")&&StringUtils.equals(goodsArea.getCountingModeKp(), "true")){
				throw new GoodsAreaException("库区类型不为混装货区，计票方式不能选择计数（卡普）");
			}else if(StringUtils.equals(goodsArea.getCountingModeAb(), "true")&&StringUtils.equals(goodsArea.getCountingModeKp(), "true")){
				if(!StringUtils.equals(goodsArea.getGoodsAreaType(), "BSE_GOODSAREA_TYPE_COMMON")||!StringUtils.equals(goodsArea.getGoodsType(), "AB")){
					throw new GoodsAreaException("库区类型不为混装货区，计票方式不能选择计数（卡普）");
				}
			}
		}
	}

    /**
     * 
     * <p>判断是否唯一性（一个外场只能有一个的）库区</p> 
     * @author foss-zhujunyong
     * @date May 10, 2013 10:59:49 AM
     * @param goodsAreaType
     * @return
     * @see
     */
    private boolean isUniqueGoodsAreaType(String goodsAreaType){
	return StringUtils.equals(goodsAreaType, DictionaryValueConstants.BSE_GOODSAREA_TYPE_EXCEPTION)
		|| StringUtils.equals(goodsAreaType, DictionaryValueConstants.BSE_GOODSAREA_TYPE_VALUABLE)
		|| StringUtils.equals(goodsAreaType, DictionaryValueConstants.BSE_GOODSAREA_TYPE_PACKING)
		|| StringUtils.equals(goodsAreaType, DictionaryValueConstants.BSE_GOODSAREA_TYPE_OTHER)
		|| StringUtils.equals(goodsAreaType, DictionaryValueConstants.BSE_GOODSAREA_TYPE_STATION)
		|| StringUtils.equals(goodsAreaType, DictionaryValueConstants.BSE_GOODSAREA_TYPE_AIRFREIGHT);
    }
    
    
    /** 
     * <p>作废库区</p> 
     * @author foss-zhujunyong
     * @date Oct 30, 2012 10:35:15 AM
     * @param goodsArea
     * @return 
     * @see com.deppon.foss.module.base.baseinfo.api.server.service.IGoodsAreaService#deleteGoodsArea(com.deppon.foss.module.base.baseinfo.api.shared.domain.GoodsAreaEntity)
     */
    @Override
    @Transactional
    public GoodsAreaEntity deleteGoodsArea(GoodsAreaEntity goodsArea) {
	if (goodsArea == null) {
	    return null;
	}
	List<StorageEntity> storageList = storageService.queryStorageListByGoodsArea(goodsArea.getVirtualCode());
	for (StorageEntity storage : storageList) {
	    storage.setGoodsAreaVirtualCode(null);
	    storageService.updateStorage(storage);
	}
	GoodsAreaEntity entity = goodsAreaDao.deleteGoodsArea(goodsArea);
	if (entity != null) {
	    invalidEntity(entity.getVirtualCode());
	    String key = StringUtils.join(new String[]{entity.getOrganizationCode(), entity.getGoodsAreaCode()}, SymbolConstants.EN_COLON);
	    invalidEntity(key);
	    invalidList(entity.getOrganizationCode());
	}
	return entity;
    }

    /** 
     * <p>更新库区</p> 
     * @author foss-zhujunyong
     * @date Oct 30, 2012 10:35:15 AM
     * @param goodsArea
     * @return 
     * @see com.deppon.foss.module.base.baseinfo.api.server.service.IGoodsAreaService#updateGoodsArea(com.deppon.foss.module.base.baseinfo.api.shared.domain.GoodsAreaEntity)
     */
    @Override
    @Transactional
    public GoodsAreaEntity updateGoodsArea(GoodsAreaEntity goodsArea) {
	if (goodsArea == null) {
	    return null;
	}

	// 如果目的站编码有值，则需要校验同一目的站的库区不能同时有卡普和混装
	//313353 sonar
	this.sonarSplitFive(goodsArea);
	
	// 同一外插下,库区编码不能重复
	GoodsAreaEntity entity = queryGoodsAreaByCode(goodsArea.getOrganizationCode(), goodsArea.getGoodsAreaCode());
	if (entity != null && !StringUtils.equals(goodsArea.getVirtualCode(), entity.getVirtualCode())) {
	    throw new GoodsAreaException(GoodsAreaException.GOODSAREA_CODE_EXIST);
	}
	
	// 如果是唯一性货区，需要判断不能重复录入
	//313353 sonar
	this.sonarSplitFour(goodsArea);
	
	if(StringUtils.equals(goodsArea.getCountingModeAb(), "true")||StringUtils.equals(goodsArea.getCountingModeKp(),"true")){
		if(StringUtils.equals(goodsArea.getCountingModeAb(), "true")&&!StringUtils.equals(goodsArea.getCountingModeKp(), "true")){
			goodsArea.setCountingMode("AB");
		}else if(!StringUtils.equals(goodsArea.getCountingModeAb(), "true")&&StringUtils.equals(goodsArea.getCountingModeKp(), "true")){
			goodsArea.setCountingMode("KP");
		}else{
			goodsArea.setCountingMode("KPAB");
		}
	}
	
	//storageService.mergeStorages(goodsArea.getStorageList(), goodsArea.getVirtualCode());
	entity = goodsAreaDao.updateGoodsArea(goodsArea);
	if (entity != null) {
		List<PlatAreaDistanceEntity> sourceList = goodsArea.getDistanceList() != null ? goodsArea.getDistanceList() : new ArrayList<PlatAreaDistanceEntity> ();
		List<PlatAreaDistanceEntity> targetList = new ArrayList<PlatAreaDistanceEntity>();
		// 准备验证月台虚拟代码是否合法
		List<PlatformEntity> platformList = platformDao.queryPlatformListByOrgCodeAndPlatformCodeLimit(entity.getOrganizationCode(), null, null);
		Set<String> platformVirtualCodeSet = new HashSet<String>();
		for (PlatformEntity platform : platformList) {
		    platformVirtualCodeSet.add(platform.getVirtualCode());
		}
		// insert 库位月台表
		for (PlatAreaDistanceEntity distance : sourceList) {
		    // 跳过月台虚拟代码不合法的
		    if (!platformVirtualCodeSet.contains(distance.getPlatformVirtualCode())) {
		    	continue;
		    }
		    distance.setGoodsAreaVirtualCode(entity.getVirtualCode());
		    if (distance.getDistance()+""!= null) {
		    	PlatAreaDistanceEntity platAreaDistance = platAreaDistanceDao.updateDistance(distance);
		    	targetList.add(platAreaDistance == null ? platAreaDistanceDao.addDistance(distance) : platAreaDistance);
		    } else {
		    	platAreaDistanceDao.deleteDistance(distance);
		    }
		    invalidDistanceList(distance.getPlatformVirtualCode());
		}
		entity.setDistanceList(targetList);
		
	    invalidEntity(entity.getVirtualCode());
	    String key = StringUtils.join(new String[]{entity.getOrganizationCode(), entity.getGoodsAreaCode()}, SymbolConstants.EN_COLON);
	    invalidEntity(key);
	    invalidList(entity.getOrganizationCode());
	}
	return entity;
    }
    
	/**
	 * sonar优化拆分
	 * 
	 * @author 313353
	 */
	private void sonarSplitFour(GoodsAreaEntity goodsArea) {
		if (isUniqueGoodsAreaType(goodsArea.getGoodsAreaType())) {
		    List<GoodsAreaEntity> list = querySimpleGoodsAreaListByType(goodsArea.getOrganizationCode(), goodsArea.getGoodsAreaType());
		    if (CollectionUtils.isNotEmpty(list) && !StringUtils.equals(list.get(0).getVirtualCode(), goodsArea.getVirtualCode())) {
			throw new GoodsAreaException(GoodsAreaException.GOODSAREA_TYPE_UNIQUE_EXIST);
		    }
		}
		if(StringUtils.equals(goodsArea.getCountingModeAb(), "true")||StringUtils.equals(goodsArea.getCountingModeKp(),"true")){
			if(StringUtils.equals(goodsArea.getCountingModeAb(), "true")&&!StringUtils.equals(goodsArea.getGoodsType(), "AB")){
				throw new GoodsAreaException("货物类型不为A/B货，计票方式不能选择计数（AB）");
			}else if(!StringUtils.equals(goodsArea.getGoodsAreaType(), "BSE_GOODSAREA_TYPE_COMMON")&&StringUtils.equals(goodsArea.getCountingModeKp(), "true")){
				throw new GoodsAreaException("库区类型不为混装货区，计票方式不能选择计数（卡普）");
			}else if(StringUtils.equals(goodsArea.getCountingModeAb(), "true")&&StringUtils.equals(goodsArea.getCountingModeKp(), "true")){
				if(!StringUtils.equals(goodsArea.getGoodsAreaType(), "BSE_GOODSAREA_TYPE_COMMON")||!StringUtils.equals(goodsArea.getGoodsType(), "AB")){
					throw new GoodsAreaException("库区类型不为混装货区，计票方式不能选择计数（卡普）");
				}
			}
		}
	}

	/**
	 * sonar优化拆分
	 * 
	 * @author 313353
	 */
	private void sonarSplitFive(GoodsAreaEntity goodsArea) {
		if (StringUtils.isNotBlank(goodsArea.getArriveRegionCode())) {
		    // 找出现有该目的站的库区列表
		    List<GoodsAreaEntity> list = queryGoodsAreaListByArriveRegion(goodsArea.getOrganizationCode(), goodsArea.getArriveRegionCode());
		    if (CollectionUtils.isNotEmpty(list)) {
			for (GoodsAreaEntity entity : list) {
			    // 如果是该库区自己就不用判断了
			    if (entity == null || StringUtils.equals(goodsArea.getVirtualCode(), entity.getVirtualCode())) {
				continue;
			    }
			    // 如果两个中有一个是混装库区，或者这两个库区类型相同，则触发违规
			    if (StringUtils.equals(goodsArea.getGoodsAreaType(), DictionaryValueConstants.BSE_GOODSAREA_TYPE_COMMON)
				    || StringUtils.equals(entity.getGoodsAreaType(), DictionaryValueConstants.BSE_GOODSAREA_TYPE_COMMON)
				    || StringUtils.equals(entity.getGoodsAreaType(), goodsArea.getGoodsAreaType())) {
				throw new GoodsAreaException(GoodsAreaException.GOODSAREA_TYPE_EXIST);
			    }
			}
		    }
		}
	}
    
    /**
     * <p>清空指定key的缓存列表</p> 
     * @author 107046
     * @date 2014-04-25
     * @param key
     * @return
     */
    @SuppressWarnings("unchecked")
    private void invalidDistanceList(String key) {
	((ICache<String, List<PlatAreaDistanceEntity>>)CacheManager.getInstance().getCache(FossTTLCache.PLAT_AREA_DISTANCE_LIST_CACHE_UUID)).invalid(key);
    }

    /** 
     * <p>根据虚拟代码查询库区详情</p> 
     * @author foss-zhujunyong
     * @date Oct 30, 2012 10:35:16 AM
     * @param virtualCode
     * @return 
     * @see com.deppon.foss.module.base.baseinfo.api.server.service.IGoodsAreaService#queryGoodsAreaByVirtualCode(java.lang.String)
     */
    @Override
    public GoodsAreaEntity queryGoodsAreaByVirtualCode(String virtualCode) {
	if (StringUtils.isBlank(virtualCode)) {
	    return null;
	}
	
	GoodsAreaEntity entity = queryEntityCache(virtualCode);
	// 如果缓存里找不到，就到数据库中再找一遍
	if (entity == null) {
	    entity = goodsAreaDao.queryGoodsAreaByVirtualCode(virtualCode);
	}
	entity = enhanceStorage(entity);
	entity = enhancePlatform(entity);
	return enhanceGoodsArea(entity);
    }
    
    /**
     * <p>设置当前库区和相关月台之间距离的信息列表</p> 
     * @author 107046
     * @date 2014-04-25
     * @param goodsArea
     * @return
     */
    private GoodsAreaEntity enhancePlatform(GoodsAreaEntity goodsArea) {
	if (goodsArea == null) {
	    return null;
	}
	if (goodsArea.getDistanceList() == null && StringUtils.isNotBlank(goodsArea.getVirtualCode())) {
	    List<PlatAreaDistanceEntity> platAreaDistanceList = platAreaDistanceDao.queryDistanceByGoodsArea(goodsArea.getVirtualCode());
	    goodsArea.setDistanceList(platAreaDistanceList);
	}
	return goodsArea;
    }

    /** 
     * <p>按条件查询库区列表</p> 
    * @author foss-zhujunyong
     * @date Oct 30, 2012 10:35:16 AM
     * @param goodsArea
     * @param start
     * @param limit
     * @return 
     * @see com.deppon.foss.module.base.baseinfo.api.server.service.IGoodsAreaService#queryGoodsAreaByCondition(com.deppon.foss.module.base.baseinfo.api.shared.domain.GoodsAreaEntity, int, int)
     */
    @Override
    public List<GoodsAreaEntity> queryGoodsAreaByCondition(
	    GoodsAreaEntity goodsArea, int start, int limit) {
	return enhanceGoodsAreaList(goodsAreaDao.queryGoodsAreaByCondition(goodsArea, start, limit));
    }

    /** 
     * <p>按条件查询库区数量</p> 
     * @author foss-zhujunyong
     * @date Oct 30, 2012 10:35:16 AM
     * @param goodsArea
     * @return 
     * @see com.deppon.foss.module.base.baseinfo.api.server.service.IGoodsAreaService#countGoodsAreaByCondition(com.deppon.foss.module.base.baseinfo.api.shared.domain.GoodsAreaEntity)
     */
    @Override
    public long countGoodsAreaByCondition(GoodsAreaEntity goodsArea) {
	return goodsAreaDao.countGoodsAreaByCondition(goodsArea);
    }

    /**
     * 
     * <p>按条件查询库区数量</p> 
     * @author foss-zhujunyong
     * @date Oct 22, 2012 11:52:11 AM
     * @param goodsArea
     * @param userCode 员工号
     * @return
     * @see
     */
    @Override
    public long countGoodsAreaByCondition(GoodsAreaEntity goodsArea, String userCode, String deptCode) {
	// 查询数据权限
	if (StringUtils.isNotBlank(userCode)) {
	    // 查看该用户是否超级管理员
	    boolean isAdmin = userOrgRoleService.checkSystemAdmin(userCode);
	    if(StringUtils.equals(goodsArea.getCountingModeAb(), "true")||StringUtils.equals(goodsArea.getCountingModeKp(),"true")){
			if(StringUtils.equals(goodsArea.getCountingModeAb(), "true")&&!StringUtils.equals(goodsArea.getCountingModeKp(), "true")){
				goodsArea.setCountingMode("AB");
			}else if(!StringUtils.equals(goodsArea.getCountingModeAb(), "true")&&StringUtils.equals(goodsArea.getCountingModeKp(), "true")){
				goodsArea.setCountingMode("KP");
			}else{
				goodsArea.setCountingMode("KPAB");
			}
		}
	    // 如果不是就要查数据权限
	    if (BooleanUtils.isFalse(isAdmin)) {
		List<String> transferOrgCodes = userDeptDataService.queryUserDeptDataInTransferCenter(userCode, deptCode);
		if (CollectionUtils.isEmpty(transferOrgCodes)) {
		    // 如果该用户无任何数据权限，则返回0
		    return 0;
		} else {
			long count = 0L;
			if(NumberConstants.NUMBER_1000 < transferOrgCodes.size()){
				List<List<String>> lists = splitList(transferOrgCodes, NumberConstants.NUMBER_1000);
				for(List<String> codes : lists){
					goodsArea.setOrgCodeList(codes);
					count=(long) (count + goodsAreaDao.countGoodsAreaByCondition(goodsArea));
				}
				return count;
			}else{
				goodsArea.setOrgCodeList(transferOrgCodes);
			}
		  //  goodsArea.setOrgCodeList(transferOrgCodes);
		}
	    }
	}
	return goodsAreaDao.countGoodsAreaByCondition(goodsArea);
    }
    
    /**
     * 分割List
     * @Title: splitList 
     * @Description: TODO(这里用一句话描述这个方法的作用) 
     * @param @param list
     * @param @param pageSize
     * @param @return    设定文件 
     * @return List<List<String>>    返回类型 
     * @throws 
     * @user 310854-liuzhenhua
     */
	private static List<List<String>> splitList(List<String> list, int pageSize) {

		int listSize = list.size();
		int page = listSize / pageSize + NumberConstants.NUMBER_1; 

		List<List<String>> listArray = new ArrayList<List<String>>(); 
															
		for (int i = NumberConstants.ZERO; i < page; i++) {
			List<String> subList = new ArrayList<String>(); 
			for (int j = NumberConstants.ZERO; j < listSize; j++) { 
				int pageIndex = (pageSize + j) / pageSize;
				if (pageIndex == (i + NumberConstants.NUMBER_1)) {
					subList.add(list.get(j)); 
					if(0 < j && ((j + NumberConstants.NUMBER_1) % pageSize == 0)){
						break;
					}
				}
			}
			listArray.add(subList);
		}
		return listArray;
	}
    
    
    /** 
     * <p>查询某一外场下的所有库区</p> 
     * @author foss-zhujunyong
     * @date Oct 30, 2012 10:35:16 AM
     * @param organizationCode
     * @return 
     * @see com.deppon.foss.module.base.baseinfo.api.server.service.IGoodsAreaService#queryGoodsAreaListByOrganizationCode(java.lang.String)
     */
    @Override
    public List<GoodsAreaEntity> queryGoodsAreaListByOrganizationCode(String organizationCode) {
	return enhanceGoodsAreaList(querySimpleGoodsAreaListByOrganizationCode(organizationCode));
    }

    /** 
     * <p>查询某一外场下的所有库区</p> 
     * @author foss-zhujunyong
     * @date Oct 30, 2012 10:35:16 AM
     * @param organizationCode
     * @return 
     * @see com.deppon.foss.module.base.baseinfo.api.server.service.IGoodsAreaService#queryGoodsAreaListByOrganizationCode(java.lang.String)
     */
    @Override
    public List<GoodsAreaEntity> querySimpleGoodsAreaListByOrganizationCode(String organizationCode) {
	List<GoodsAreaEntity> resultList = new ArrayList<GoodsAreaEntity>();
	if (StringUtils.isBlank(organizationCode)) {
	    return resultList;
	}
	if (SqlUtil.loadCache) {
	    resultList = queryListCache(organizationCode);
	} else {
	    resultList = goodsAreaDao.queryGoodsAreaListByOrganizationCode(organizationCode, null);
	}
	//给库区加上显示的名称（供待叉区显示使用）
	if(CollectionUtils.isNotEmpty(resultList)){
		List<GoodsAreaEntity> goodsAreaEntitys = new ArrayList<GoodsAreaEntity>();
		for(GoodsAreaEntity entity : resultList){
			if(StringUtils.isNotBlank(entity.getGoodsAreaCode())&&StringUtils.isNotBlank(entity.getGoodsAreaName())){
				entity.setNameAndCode(entity.getGoodsAreaName()+entity.getGoodsAreaCode());
			}
			goodsAreaEntitys.add(entity);
		}
		return goodsAreaEntitys;
	}else{
		return resultList;
	}
    }

    
    /**
     * 
     * <p>根据外场编码和库区编码取库区名称</p> 
     * @author foss-zhujunyong
     * @date Oct 30, 2012 10:49:35 AM
     * @param organizationCode
     * @param code
     * @return
     * @see
     */
    @Override
    public String queryNameByCode(String organizationCode, String code) {
	GoodsAreaEntity goodsArea = queryGoodsAreaByCode(organizationCode, code);
	if (goodsArea == null) {
	    return null;
	}
	return goodsArea.getGoodsAreaName();
    }
    
   
    /**
     * 
     * <p>根据外场编码和库区编码取库区实体</p> 
     * @author foss-zhujunyong
     * @date Nov 5, 2012 2:21:46 PM
     * @param organizationCode
     * @param code
     * @return
     * @see
     */
    @Override
    public GoodsAreaEntity queryGoodsAreaByCode(String organizationCode, String code) {
	if (StringUtils.isBlank(organizationCode) || StringUtils.isBlank(code)) {
	    return null;
	}
	String key = StringUtils.join(new String[]{organizationCode, code}, SymbolConstants.EN_COLON);
	GoodsAreaEntity entity = queryEntityCache(key);
//	if (entity == null) {
	    GoodsAreaEntity c = new GoodsAreaEntity();
	    c.setActive(FossConstants.ACTIVE);
	    c.setOrganizationCode(organizationCode);
	    c.setGoodsAreaCode(code);
	    List<GoodsAreaEntity> list = goodsAreaDao.queryGoodsAreaByCondition(c, 0, 1);
	    entity= CollectionUtils.isEmpty(list) ? null : list.get(0);
//	}
	return enhanceGoodsArea(entity);
    }
    
    /**
     * 
     * <p>根据外场部门编码和目的站部门编码取货区编码</p> 
     * @author foss-zhujunyong
     * @date Oct 30, 2012 2:31:44 PM
     * @param organizationCode 所在外场部门编码
     * @param arriveRegionCode 目的站部门编码
     * @return
     * @see
     * @deprecated 使用 String queryCodeByArriveRegionCode(String organizationCode, String arriveRegionCode, String productCode) 取代,该方法未区分卡，普和混装库区
     */
    @Override
    public String queryCodeByArriveRegionCode(String organizationCode, String arriveRegionCode) {
	if (StringUtils.isBlank(organizationCode) || StringUtils.isBlank(arriveRegionCode)) {
	    return null;
	}
	GoodsAreaEntity c = new GoodsAreaEntity();
	c.setActive(FossConstants.ACTIVE);
	c.setOrganizationCode(organizationCode);
	c.setArriveRegionCode(arriveRegionCode);
	// 只取1笔记录
	List<GoodsAreaEntity> list = queryGoodsAreaByCondition(c, 0, NumberConstants.NUMERAL_ONE);
	if (CollectionUtils.isEmpty(list)) {
	    return null;
	}
	return list.get(0).getGoodsAreaCode();
    }

    /**
     * 
     * <p>根据外场部门编码和目的站部门编码取货区编码</p> 
     * @author foss-zhujunyong
     * @date Jan 5, 2013 1:55:20 PM
     * @param organizationCode
     * @param arriveRegionCode
     * @param productCode
     * @return
     * @see
     */
    @Override
    public String queryCodeByArriveRegionCode(String organizationCode, String arriveRegionCode, String productCode) {
    	GoodsAreaEntity entity = null;
    	//boolean flag=PricingConstants.directDetermineIsExpressByProductCode(productCode);
    	boolean flag=productService.onlineDetermineIsExpressByProductCode(productCode, new Date());
    	if(flag){
    		
    		entity = this.queryExpressGoodsAreaByTransCenterCode(organizationCode, productCode);
    		
    	}else{
    		
    		 entity = queryGoodsAreaByArriveRegionCode(organizationCode, arriveRegionCode, productCode);
    	}
	return entity == null ? null : entity.getGoodsAreaCode();
    }
    
    
    /**
     * 
     * <p>根据库区类型（卡货库区，普货库区，贵重物品库区等）</p> 
     * @author foss-zhujunyong
     * @date Nov 2, 2012 3:26:39 PM
     * @param goodsAreaType 库区类型，数据字典中取值
     * DictionaryValueConstants.BSE_GOODSAREA_TYPE_EXCEPTION 异常货区
     * DictionaryValueConstants.BSE_GOODSAREA_TYPE_VALUABLE  贵重物品货区
     * DictionaryValueConstants.BSE_GOODSAREA_TYPE_PACKING   包装货区
     * DictionaryValueConstants.BSE_GOODSAREA_TYPE_OTHER     偏线货区
     * DictionaryValueConstants.BSE_GOODSAREA_TYPE_STATION   驻地派送货区
     * DictionaryValueConstants.BSE_GOODSAREA_TYPE_COMMON    混装货区
     * @return 该类型的库区列表
     * @see
     */
    @Override
    public List<GoodsAreaEntity> queryGoodsAreaListByType(String organizationCode, String goodsAreaType) {
	return enhanceGoodsAreaList(querySimpleGoodsAreaListByType(organizationCode, goodsAreaType));
    }

    @Override
    public List<GoodsAreaEntity> querySimpleGoodsAreaListByType(String organizationCode, String goodsAreaType) {
	List<GoodsAreaEntity> resultList = new ArrayList<GoodsAreaEntity> ();
	if (StringUtils.isBlank(organizationCode)) {
	    return resultList;
	}
	return goodsAreaDao.queryGoodsAreaListByOrganizationCode(organizationCode, goodsAreaType);
    }
    
    /**
     * 
     * <p>批量作废库区</p> 
     * @author foss-zhujunyong
     * @date Nov 28, 2012 11:48:10 AM
     * @param virtualCodes
     * @param modifyUser
     * @return
     * @see
     */
    @Override
    @Transactional
    public int deleteGoodsAreas(List<String> virtualCodes, String modifyUser) {
	if (CollectionUtils.isEmpty(virtualCodes) || StringUtils.isBlank(modifyUser)) {
	    return FossConstants.FAILURE;
	}
	
	// 清缓存
	Set<String> orgCodeSet = new HashSet<String>();
	for (String virtualCode : virtualCodes) {
	    if (StringUtils.isBlank(virtualCode)) {
		continue;
	    }
	    GoodsAreaEntity entity = queryGoodsAreaByVirtualCode(virtualCode);
	    if (entity == null) {
		continue;
	    }
	    invalidEntity(virtualCode);
	    String key = StringUtils.join(new String[]{entity.getOrganizationCode(), entity.getGoodsAreaCode()}, SymbolConstants.EN_COLON);
	    invalidEntity(key);
	    orgCodeSet.add(entity.getOrganizationCode());
	}
	for (String orgCode : orgCodeSet) {
	    if (StringUtils.isNotBlank(orgCode)) {
		invalidList(orgCode);
	    }
	}
	
	// 更新库位表
	for (String virtualCode : virtualCodes) {
	    List<StorageEntity> list = storageService.queryStorageListByGoodsArea(virtualCode);
	    for (StorageEntity storage : list) {
		storage.setGoodsAreaVirtualCode(null);
		storageService.updateStorage(storage);
	    }
	}
	int result = goodsAreaDao.deleteGoodsAreas(virtualCodes, modifyUser);
	
	// 作废月台到库区的距离
	for (String virtualCode : virtualCodes) {
	    List<PlatAreaDistanceEntity> padlist = platAreaDistanceDao.queryDistanceByGoodsArea(virtualCode);
	    if (CollectionUtils.isEmpty(padlist)) {
	    	continue;
	    }
	    // 清空相关缓存
	    for (PlatAreaDistanceEntity padEntity : padlist) {
	    	invalidDistanceList(padEntity.getPlatformVirtualCode());
	    }
	    platAreaDistanceDao.deleteDistanceByGoodsArea(virtualCode);
	}
	
	return result;
    }
    
    /**
     * 
     * <p>填充外场名称</p> 
     * @author foss-zhujunyong
     * @date Mar 6, 2013 10:10:29 AM
     * @param goodsArea
     * @return
     * @see
     */
    private GoodsAreaEntity enhanceGoodsArea(GoodsAreaEntity goodsArea) {
	if (goodsArea == null) {
	    return null;
	}
	// 填充组织名称
	if (StringUtils.isBlank(goodsArea.getOrganizationName())) {
	    goodsArea.setOrganizationName(orgAdministrativeInfoService.queryOrgAdministrativeInfoNameByCode(goodsArea.getOrganizationCode()));
	}
	// 填充目的站名称
	if (StringUtils.isBlank(goodsArea.getArriveRegionName())) {
	    goodsArea.setArriveRegionName(orgAdministrativeInfoService.queryOrgAdministrativeInfoNameByCode(goodsArea.getArriveRegionCode()));
	}
	// 填充外场编码
	if (StringUtils.isBlank(goodsArea.getTransferCode())) {
	    OutfieldEntity outfield = outfieldService.queryOutfieldByOrgCode(goodsArea.getOrganizationCode());
	    if (outfield != null) {
		goodsArea.setTransferCode(outfield.getCode());
	    }
	}
	return goodsArea;
    }
    
    /**
     * 
     * <p>填充相关的库位信息</p> 
     * @author foss-zhujunyong
     * @date Mar 6, 2013 10:12:31 AM
     * @param goodsArea
     * @return
     * @see
     */
    private GoodsAreaEntity enhanceStorage(GoodsAreaEntity goodsArea) {
	if (goodsArea == null) {
	    return null;
	}
	if (goodsArea.getStorageList() == null && StringUtils.isNotBlank(goodsArea.getVirtualCode())) {
	    List<StorageEntity> storageList = storageService.queryStorageListByGoodsArea(goodsArea.getVirtualCode());
	    goodsArea.setStorageList(storageList);
	}
	return goodsArea;
    }
    
    /**
     * 
     * <p>批量填充外场名称等冗余信息</p> 
     * @author foss-zhujunyong
     * @date Mar 6, 2013 10:12:54 AM
     * @param list
     * @return
     * @see
     */
    private List<GoodsAreaEntity> enhanceGoodsAreaList(List<GoodsAreaEntity> list) {
	if (CollectionUtils.isEmpty(list)) {
	    return new ArrayList<GoodsAreaEntity> ();
	}
	for (GoodsAreaEntity goodsArea : list) {
	    enhanceGoodsArea(goodsArea);
	}
	return list;
    }
 
    /**
     * 
     * <p>按目的站查找库区,先找缓存,没有就找数据库</p> 
     * @author foss-zhujunyong
     * @date Mar 7, 2013 5:33:43 PM
     * @param organizationCode
     * @param arriveRegionCode
     * @return
     * @see
     */
    private List<GoodsAreaEntity> queryGoodsAreaListByArriveRegion(String organizationCode, String arriveRegionCode) {
	List<GoodsAreaEntity> list = new ArrayList<GoodsAreaEntity>();
	if (StringUtils.isBlank(organizationCode) || StringUtils.isBlank(arriveRegionCode)) {
	    return list;
	}
	// 在缓存中查找符合目的站条件的库区列表
	list = queryGoodsAreaByArriveRegionFromCache(organizationCode, arriveRegionCode);
	// 如果找不到就找数据库
	if (CollectionUtils.isEmpty(list)) {
	    GoodsAreaEntity c = new GoodsAreaEntity();
	    c.setActive(FossConstants.ACTIVE);
	    c.setOrganizationCode(organizationCode);
	    c.setArriveRegionCode(arriveRegionCode);
	    // 取出所有符合的库区，包括卡货，普货和混装库区等.
	    list = queryGoodsAreaByCondition(c, 0, Integer.MAX_VALUE);
	}
	return list;
    }
    
    
    /**
     * 
     * <p>根据外场部门编码和目的站部门编码取货区实体</p> 
     * @author foss-zhujunyong
     * @date Jan 6, 2013 1:55:20 PM
     * @param organizationCode
     * @param arriveRegionCode
     * @param productCode
     * @return
     * @see
     */
    @Override
    public GoodsAreaEntity queryGoodsAreaByArriveRegionCode(String organizationCode,
	    String arriveRegionCode, String productCode) {
	if (StringUtils.isBlank(organizationCode) || StringUtils.isBlank(arriveRegionCode)) {
	    return null;
	}
	// 在缓存和数据库中查找符合目的站条件的库区列表
	List<GoodsAreaEntity> list = queryGoodsAreaListByArriveRegion(organizationCode, arriveRegionCode);

	// 如果还是没有就返回null
	if (CollectionUtils.isEmpty(list)) {
	    return null;
	}
	// 如果没有productCode，则给第一个符合的库区
	if (StringUtils.isBlank(productCode)) {
	    return list.get(0);
	}
	ProductEntity product = productService.getProductByCache(productCode, new Date());
	if (product == null) {
	    log.warn("productCode error, can not found product, productCode = " + productCode);
	    return null;
	}
	// 如果是卡航类型的，找混装或卡货库区
	if (LineUtils.isFast(product.getPriority())) {
	    for (GoodsAreaEntity entity : list) {
		if (StringUtils.equals(entity.getGoodsAreaType(), DictionaryValueConstants.BSE_GOODSAREA_TYPE_COMMON) 
			|| StringUtils.equals(entity.getGoodsAreaType(), DictionaryValueConstants.BSE_GOODSAREA_TYPE_FAST)) {
		    return entity;
		}
	    }
	}
	// 如果是普货类型的，找混装或普货货区
	if (LineUtils.isCommon(product.getPriority())) {
	    for (GoodsAreaEntity entity : list) {
		if (StringUtils.equals(entity.getGoodsAreaType(), DictionaryValueConstants.BSE_GOODSAREA_TYPE_COMMON) 
			|| StringUtils.equals(entity.getGoodsAreaType(), DictionaryValueConstants.BSE_GOODSAREA_TYPE_NORMAL)) {
		    return entity;
		}
	    }
	}
	// 如果找不到，则返回第一个
	return list.get(0);
    }

    /**
     * 
     * <p>按条件查询库区列表</p> 
     * @author foss-zhujunyong
     * @date Oct 22, 2012 11:51:51 AM
     * @param goodsArea
     * @param userCode 员工号
     * @return
     * @see
     */
    @Override
    public List<GoodsAreaEntity> queryGoodsAreaByCondition(GoodsAreaEntity goodsArea, int start, int limit, String userCode, String deptCode) {
	// 查询数据权限
	if (StringUtils.isNotBlank(userCode)) {
	    // 查看该用户是否超级管理员
	    boolean isAdmin = userOrgRoleService.checkSystemAdmin(userCode);
	    if(StringUtils.equals(goodsArea.getCountingModeAb(), "true")||StringUtils.equals(goodsArea.getCountingModeKp(),"true")){
			if(StringUtils.equals(goodsArea.getCountingModeAb(), "true")&&!StringUtils.equals(goodsArea.getCountingModeKp(), "true")){
				goodsArea.setCountingMode("AB");
			}else if(!StringUtils.equals(goodsArea.getCountingModeAb(), "true")&&StringUtils.equals(goodsArea.getCountingModeKp(), "true")){
				goodsArea.setCountingMode("KP");
			}else{
				goodsArea.setCountingMode("KPAB");
			}
		}
	    // 如果不是就要查数据权限
	    if (BooleanUtils.isFalse(isAdmin)) {
		List<String> transferOrgCodes = userDeptDataService.queryUserDeptDataInTransferCenter(userCode, deptCode);
		if (CollectionUtils.isEmpty(transferOrgCodes)) {
		    // 如果该用户无任何数据权限，则返回0
		    return new ArrayList<GoodsAreaEntity>();
		} else {
		    goodsArea.setOrgCodeList(transferOrgCodes);
		}
	    }
	}
	return enhanceGoodsAreaList(goodsAreaDao.queryGoodsAreaByCondition(goodsArea, start, limit));
    }

    /**
     * 
     * <p>按照目的站查找库区，只能查找卡,普,混装等有目的站的库区</p> 
     * @author foss-zhujunyong
     * @date Mar 6, 2013 3:22:05 PM
     * @param orgCode 外场部门编码
     * @param arriveRegionCode 到达部门编码
     * @return
     * @see
     */
    private List<GoodsAreaEntity> queryGoodsAreaByArriveRegionFromCache(String orgCode, String arriveRegionCode) {
	List<GoodsAreaEntity> result = new ArrayList<GoodsAreaEntity>();
	if (StringUtils.isBlank(orgCode) || StringUtils.isBlank(arriveRegionCode)) {
	    return result;
	}
	List<GoodsAreaEntity> list = queryListCache(orgCode);
	if (CollectionUtils.isEmpty(list)) {
	    return result;
	}
	for (GoodsAreaEntity entity : list) {
	    if (entity == null) {
		continue;
	    }
	    if (StringUtils.equals(entity.getArriveRegionCode(), arriveRegionCode)) {
		result.add(entity);
	    }
	}
	return result;
     }

    /**
     * 
     * <p>清空指定key的缓存</p> 
     * @author foss-zhujunyong
     * @date Mar 6, 2013 10:13:34 AM
     * @param key
     * @see
     */
    @SuppressWarnings("unchecked")
    private void invalidEntity(String key) {
	((ICache<String, GoodsAreaEntity>)CacheManager.getInstance().getCache(FossTTLCache.GOODSAREA_ENTITY_CACHE_UUID)).invalid(key);
    }

    /**
     * 
     * <p>取缓存中的数据</p> 
     * @author foss-zhujunyong
     * @date Mar 6, 2013 10:13:51 AM
     * @param key
     * @return
     * @see
     */
    @SuppressWarnings({ "unchecked", "rawtypes" })
    private GoodsAreaEntity queryEntityCache(String key) {
	GoodsAreaEntity result = null;
	try {
	    CacheManager cacheManager = CacheManager.getInstance();
	    if (cacheManager == null) {
		return null;
	    }
	    ICache cache = cacheManager.getCache(FossTTLCache.GOODSAREA_ENTITY_CACHE_UUID);
	    if (cache == null) {
		return null;
	    }
	    result = (GoodsAreaEntity) cache.get(key);
	} catch (Exception t) {
	    log.error("cache找不到", t);
	}
	return result;
    }
    
    /**
     * 
     * <p>清空指定key的缓存列表</p> 
     * @author foss-zhujunyong
     * @date Mar 6, 2013 10:14:07 AM
     * @param key
     * @see
     */
    @SuppressWarnings("unchecked")
    private void invalidList(String key) {
	((ICache<String, List<GoodsAreaEntity>>)CacheManager.getInstance().getCache(FossTTLCache.GOODSAREA_LIST_CACHE_UUID)).invalid(key);
    }

    /**
     * 
     * <p>取缓存中的数据</p> 
     * @author foss-zhujunyong
     * @date Mar 6, 2013 10:14:21 AM
     * @param key
     * @return
     * @see
     */
    @SuppressWarnings({ "unchecked", "rawtypes" })
    private List<GoodsAreaEntity> queryListCache(String key) {
	List<GoodsAreaEntity> resultList = new ArrayList<GoodsAreaEntity>();
	try {
	    CacheManager cacheManager = CacheManager.getInstance();
	    if (cacheManager == null) {
		return resultList;
	    }
	    ICache cache = cacheManager.getCache(FossTTLCache.GOODSAREA_LIST_CACHE_UUID);
	    if (cache == null) {
		return resultList;
	    }
	    resultList = (List<GoodsAreaEntity>) cache.get(key);
	} catch (Exception t) {
	    log.error("cache找不到", t);
	}
	return resultList;
    }
    //特殊查询，只提供给库位填充库区名称使用
    /**
     * 
     *<p>根据虚拟编码查询库区实体（从数据库中查询实体，不做填充库位list操作）</p>
     *@author 130566-zengJunfan
     *@date   2013-8-1上午9:48:05
     * @param virtualCode
     * @return
     */
	@Override
	public GoodsAreaEntity searchGoodsAreaEntityByVirtualCode(
			String virtualCode) {
		//非空验证
		if(StringUtils.isBlank(virtualCode)){
			return null;
		}
		return goodsAreaDao.queryGoodsAreaByVirtualCode(virtualCode);
	}
    
	/**
	 * 根据外场编码查询快递货区
	 * 
	 * @author WangPeng
	 * @Date 2013-8-12 下午2:23:39
	 * @param orgCode
	 * @return GoodsAreaEntity 
	 * 
	 */
	public GoodsAreaEntity queryExpressGoodsAreaByTransCenterCode(
			String orgCode, String productCode) {
		//根据外场编码查询货区
		List<GoodsAreaEntity> list = goodsAreaDao
				.queryExpressGoodsAreaByTransCenterCode(orgCode);

		// 如果还是没有就返回null
		if (CollectionUtils.isEmpty(list)) {
			return null;
		}
		// 如果没有productCode，则给第一个符合的库区
		if (StringUtils.isBlank(productCode)) {
			return list.get(0);
		}
		ProductEntity product = productService.getProductByCache(productCode,
				new Date());
		if (product == null) {
			log.warn("productCode error, can not found product, productCode = "
					+ productCode);
			return null;
		}
		//boolean flag=PricingConstants.directDetermineIsExpressByProductCode(productCode);
		boolean flag=productService.onlineDetermineIsExpressByProductCode(productCode, new Date());
		// 如果是卡航类型的，找混装或卡货库区
		if (LineUtils.isFast(product.getPriority())) {
			//313353 sonar
			return this.sonarSplitTwo(list, flag);
		}
		// 如果是普货类型的，找混装或普货货区
		if (LineUtils.isCommon(product.getPriority())) {
			//313353 sonar
			return this.sonarSplitThree(list, flag);
		}
		// 如果找不到，则返回第一个
		return list.get(0);
	}
	
	/**
	 * sonar优化拆分
	 * 
	 * @author 313353
	 */
	private GoodsAreaEntity sonarSplitTwo(List<GoodsAreaEntity> list, boolean flag) {
		GoodsAreaEntity fastEntity = null;
		GoodsAreaEntity commonEntiy = null;
		for (GoodsAreaEntity entity : list) {
			if (flag) {
				if (StringUtils
						.equals(entity.getGoodsAreaType(),
								DictionaryValueConstants.BSE_GOODSAREA_TYPE_EXPRESS)) {// 快递货区
					return entity;
				} else {
					if (StringUtils
							.equals(entity.getGoodsAreaType(),
									DictionaryValueConstants.BSE_GOODSAREA_TYPE_FAST)) {
						fastEntity = entity;
					} else if (StringUtils
							.equals(entity.getGoodsAreaType(),
									DictionaryValueConstants.BSE_GOODSAREA_TYPE_COMMON)) {
						commonEntiy = entity;
					}
				}

			}
		}
		if (null != fastEntity) {
			return fastEntity;
		} else if (null != commonEntiy) {
			return commonEntiy;
		} else {
			return null;
		}
	}
	
	/**
	 * sonar优化拆分
	 * 
	 * @author 313353
	 */
	private GoodsAreaEntity sonarSplitThree(List<GoodsAreaEntity> list, boolean flag) {
		GoodsAreaEntity nomalEntity = null;
		GoodsAreaEntity commonEntiy = null;
		for (GoodsAreaEntity entity : list) {
			if (flag) {
				if (StringUtils
						.equals(entity.getGoodsAreaType(),
								DictionaryValueConstants.BSE_GOODSAREA_TYPE_EXPRESS)) {// 快递货区
					return entity;
				} else {
					if (StringUtils
							.equals(entity.getGoodsAreaType(),
									DictionaryValueConstants.BSE_GOODSAREA_TYPE_COMMON)) {
						commonEntiy = entity;
					} else if (StringUtils
							.equals(entity.getGoodsAreaType(),
									DictionaryValueConstants.BSE_GOODSAREA_TYPE_NORMAL)) {
						nomalEntity = entity;
					}
				}

			}
		}
		if (null != commonEntiy) {
			return commonEntiy;
		} else if (null != nomalEntity) {
			return nomalEntity;
		} else {
			return null;
		}
	}

    /**
     * 根据外场编码查询有计票标志的库区
     * 
     * @author  lifanghong
     * @Date    2014-02-13
     * @param   orgCode
     * @return  List<GoodsAreaEntity>
     *  
     */
    @Override
    public List<GoodsAreaEntity> queryCountingModeGoodsAreaListByOrganizationCode(String organizationCode) {
	List<GoodsAreaEntity> resultList = new ArrayList<GoodsAreaEntity>();
	if (StringUtils.isBlank(organizationCode)) {
	    return resultList;
	}else{
	    resultList = goodsAreaDao.queryCountingModeGoodsAreaListByOrganizationCode(organizationCode);
		}
	return resultList;
    }
    
    public List<List<String>> genDataForExport(GoodsAreaEntity entity, int start, int limit) {
    	List<PlatformEntity> platformList = platformDao.queryPlatformListByOrgCodeAndPlatformCodeLimit(entity.getOrganizationCode(), null, null);
    	List<List<String>> dataList = genExportData(entity, platformList, start, limit);
    	return dataList;
    }
    
    private List<List<String>> genExportData(GoodsAreaEntity goodsArea, List<PlatformEntity> platformList, int start, int limit) {
    	List<GoodsAreaEntity> dataList = this.queryGoodsAreaByCondition(goodsArea, start, limit);
    	if(dataList == null || dataList.size() < 1) {
    		return null;
    	}

    	// 库区类型
    	List<DataDictionaryValueEntity> goodsAreaTypeList = dataDictionaryValueService.queryDataDictionaryValueByTermsCode(DictionaryConstants.BSE_GOODSAREA_TYPE);
    	Map<String, String> goodsAreaTypeMap = new HashMap<String, String>();
    	for (DataDictionaryValueEntity data : goodsAreaTypeList) {
    		goodsAreaTypeMap.put(data.getValueCode(), data.getValueName());
    	}    	
    	// 货物类型
    	List<DataDictionaryValueEntity> goodsTypeList = dataDictionaryValueService.queryDataDictionaryValueByTermsCode(DictionaryConstants.BSE_GOODS_TYPE);
    	Map<String, String> goodsTypeMap = new HashMap<String, String>();
    	for (DataDictionaryValueEntity data : goodsTypeList) {
    		goodsTypeMap.put(data.getValueCode(), data.getValueName());
    	}    	
    	// 库区类别
    	List<DataDictionaryValueEntity> goodsAreaUsageList = dataDictionaryValueService.queryDataDictionaryValueByTermsCode(DictionaryConstants.BSE_GOODSAREA_USAGE);
    	Map<String, String> goodsAreaUsageMap = new HashMap<String, String>();
    	for (DataDictionaryValueEntity data : goodsAreaUsageList) {
    		goodsAreaUsageMap.put(data.getValueCode(), data.getValueName());
    	}
    	List<List<String>> resultList = new ArrayList<List<String>>();
    	for(int i=0; i<dataList.size(); i++) {
    		GoodsAreaEntity entity = dataList.get(i);
    		for(int j=0; j<platformList.size(); j++) {
    			PlatformEntity pEntity = platformList.get(j);
        		PlatAreaDistanceEntity distanceEntity = platAreaDistanceDao.queryDistance(entity.getVirtualCode(), 
        				pEntity.getVirtualCode());
        		List<String> list = new ArrayList<String>();
        		list.add(entity.getTransferCode());
        		list.add(entity.getOrganizationName());
        		list.add(entity.getGoodsAreaCode());
        		list.add(entity.getGoodsAreaName());
        		list.add(goodsAreaTypeMap.get(entity.getGoodsAreaType()));
        		list.add(goodsTypeMap.get(entity.getGoodsType()));
        		list.add(entity.getArriveRegionName());
        		list.add(goodsAreaUsageMap.get(entity.getGoodsAreaUsage()));
        		list.add(entity.getCountingMode());
        		list.add(entity.getAsteriskCode());
        		list.add(entity.getNotes());
//        		list.add(entity.getGoodsAreaLength());
//        		list.add(entity.getGoodsAreaWidth());
        		list.add(entity.getArea());
        		list.add(entity.getGoodsAreaHeight());
        		list.add(entity.getAbscissa());////2014.6.25 横坐标纵坐标
        		list.add(entity.getOrdinate());
        		list.add(pEntity.getPlatformCode());
        		if(distanceEntity != null) {
        			list.add(distanceEntity.getDistance() + "");
        		} else {
        			list.add("");
        		}
        		resultList.add(list);
    		}
    	}
    	return resultList;
    }
    
    public List<List<String>> genTemplateData() {
    	List<List<String>> resultList = new ArrayList<List<String>>();
		List<String> list = new ArrayList<String>();
		for(int i=0; i<NumberConstants.NUMBER_18; i++) {
			list.add("");
		}
		resultList.add(list);
    	return resultList;
    }
    /**
     * 
    * @Title: initPlatAreaDistance 
    * @Description: 根据纵横坐标初始化库区离月台距离 
    * @param GoodsAreaEntity entity
    * @return
    * @see com.deppon.foss.module.base.baseinfo.api.server.service.IGoodsAreaService#initPlatAreaDistance(com.deppon.foss.module.base.baseinfo.api.shared.domain.GoodsAreaEntity)    返回类型 
    * @author 189284 ZhangXu
    * @date 2015-5-13 上午9:52:05
     */
	@Override
	@Transactional
	public List<PlatAreaDistanceEntity> initPlatAreaDistance(GoodsAreaEntity entity) {
		List<PlatAreaDistanceEntity> resultList = new ArrayList<PlatAreaDistanceEntity>();
		UserEntity user = (UserEntity) UserContext.getCurrentUser();
		String userCode = user.getEmployee().getEmpCode();
		/**
		 *  库区 横坐标
		 */
    	String sXPoint = entity.getAbscissa();
    	/**
    	 * 库区 纵坐标
    	 */
    	String sYPoint = entity.getOrdinate();
		if((sXPoint == null || sXPoint.equals("")) || (sYPoint == null || sYPoint.equals(""))) {
			return null;
		}
    	Double iXPoint = Double.parseDouble(sXPoint);
    	Double iYPoint = Double.parseDouble(sYPoint);
    	List<PlatformEntity> platformList = platformDao.queryPlatformListByOrgCodeAndPlatformCodeLimit(entity.getOrganizationCode(), null, null);
    	for(PlatformEntity platform : platformList) {
    		Double distance;
    		/**
    		 * 月台 横坐标
    		 */
    		String pXPoint = platform.getAbscissa();
    		/**
    		 * 月台 纵坐标
    		 */
    		String pYPoint = platform.getOrdinate();
    		if((pXPoint == null || pXPoint.equals("")) || (pYPoint == null || pYPoint.equals(""))) {
    			distance=0.0;
    		} else {
    			Double iPXPoint = Double.parseDouble(pXPoint);
    			Double iPYPoint = Double.parseDouble(pYPoint);
	        	distance = Math.abs(iPXPoint - iXPoint) + Math.abs(iPYPoint - iYPoint);
    		}
    		PlatAreaDistanceEntity paEntity = new PlatAreaDistanceEntity();
    		paEntity.setGoodsAreaVirtualCode(entity.getVirtualCode());
    		paEntity.setPlatformVirtualCode(platform.getVirtualCode());
    		paEntity.setDistance(distance);
    		paEntity.setCreateUser(userCode);
    		platAreaDistanceDao.deleteDistance(paEntity);
    		PlatAreaDistanceEntity result = platAreaDistanceDao.addDistance(paEntity);
    		resultList.add(result);
    	}
    	return resultList;
	}

	@Override
	public long countPlatformByOrgCode(String orgCode) {
		PlatformEntity entity = new PlatformEntity();
		entity.setOrganizationCode(orgCode);
		return platformDao.countPlatformListByCondition(entity);
	}
    @Override
    @Transactional
    public List<Integer> importGoodsAreaList(List<GoodsAreaExcelDto> dtoList, String createUser) {
		if (CollectionUtils.isEmpty(dtoList) || StringUtils.isBlank(createUser)) {
		    return null;
		}
		List<Integer> resultList = new ArrayList<Integer>();
		GoodsAreaExcelDto dto2=null;
		int i=0;
		for (GoodsAreaExcelDto dto : dtoList) {
		    if (dto == null) {
		    	continue;
		    }
		    boolean success = false;
		    try {
		    	// 库区类型
		    	List<DataDictionaryValueEntity> goodsAreaTypeList = dataDictionaryValueService.queryDataDictionaryValueByTermsCode(DictionaryConstants.BSE_GOODSAREA_TYPE);
		    	Map<String, String> goodsAreaTypeMap = new HashMap<String, String>();
		    	for (DataDictionaryValueEntity data : goodsAreaTypeList) {
		    		goodsAreaTypeMap.put(data.getValueName(), data.getValueCode());
		    	}    	
		    	// 货物类型
		    	List<DataDictionaryValueEntity> goodsTypeList = dataDictionaryValueService.queryDataDictionaryValueByTermsCode(DictionaryConstants.BSE_GOODS_TYPE);
		    	Map<String, String> goodsTypeMap = new HashMap<String, String>();
		    	for (DataDictionaryValueEntity data : goodsTypeList) {
		    		goodsTypeMap.put(data.getValueName(), data.getValueCode());
		    	}    	
		    	// 库区类别
		    	List<DataDictionaryValueEntity> goodsAreaUsageList = dataDictionaryValueService.queryDataDictionaryValueByTermsCode(DictionaryConstants.BSE_GOODSAREA_USAGE);
		    	Map<String, String> goodsAreaUsageMap = new HashMap<String, String>();
		    	for (DataDictionaryValueEntity data : goodsAreaUsageList) {
		    		goodsAreaUsageMap.put(data.getValueName(), data.getValueCode());
		    	}   	
		    	// 星标类型
		    	List<DataDictionaryValueEntity> asteriskList = dataDictionaryValueService.queryDataDictionaryValueByTermsCode(DictionaryConstants.ASTERISK_TYPE);
		    	Map<String, String> asteriskMap = new HashMap<String, String>();
		    	for (DataDictionaryValueEntity data : asteriskList) {
		    		asteriskMap.put(data.getValueName(), data.getValueCode());
		    	}
		    	if(i==0&&dto2==null){
		    		dto2=dto;
		    	}else{
		    		i++;
		    			if(dto2==null||dto2.getGoodsAreaCode()!=null&&dto2.getGoodsAreaCode().equals(dto.getGoodsAreaCode())&&dto2.getTransferCode()!=null&&dto2.getTransferCode().equals(dto.getTransferCode())){
		    				dto2=null;
		    			}else{
		    				dto2=dto;
		    			}
		    	}
//		    	System.out.println(dto.getRowNo()+"--------------"+dto2);
		    	success = importGoodsArea(dto, createUser, goodsAreaTypeMap, goodsTypeMap, goodsAreaUsageMap, asteriskMap,dto2);
		    } catch (Exception e) {
		    	e.printStackTrace();
		    	success = false;
		    }
		    if (BooleanUtils.isFalse(success) && dto.getRowNo() != null) {
		    	resultList.add(dto.getRowNo());
		    }
		}
		return resultList;
    }
    
    private boolean importGoodsArea(GoodsAreaExcelDto dto, String createUser,
    		Map<String, String> goodsAreaTypeMap, Map<String, String> goodsTypeMap, Map<String, String> goodsAreaUsageMap, 
    		Map<String, String> asteriskMap,GoodsAreaExcelDto dto2) {
		dto.trimAll();
		if (BooleanUtils.isFalse(dto.validate())) {
		    return false;
		}
		OutfieldEntity outfield = outfieldService.queryOutfieldByCode(dto.getTransferCode());
		if (outfield == null) {
		    return false;
		}
		GoodsAreaEntity entity = new GoodsAreaEntity();
		entity.setOrganizationCode(outfield.getOrgCode());
		entity.setGoodsAreaCode(dto.getGoodsAreaCode());
		entity.setGoodsAreaName(dto.getGoodsAreaName());
		entity.setGoodsAreaType(goodsAreaTypeMap.get(dto.getGoodsAreaType()));
		entity.setGoodsType(goodsTypeMap.get(dto.getGoodsType()));
		entity.setArriveRegionCode(dto.getArriveRegionName());
		entity.setGoodsAreaUsage(goodsAreaUsageMap.get(dto.getGoodsAreaUsage()));
		entity.setNotes(dto.getNotes());
		if(dto.getAsteriskCode()==null||dto.getAsteriskCode().equals("")){
			dto.setAsteriskCode("无");
		}
		if(dto.getAsteriskCode().equals("无")) {
			entity.setArriveRegionCode(dto.getAsteriskCode());
		} else {
			entity.setAsteriskCode(asteriskMap.get(dto.getAsteriskCode()));
		}
		entity.setCountingMode(dto.getCountingMode());
		entity.setGoodsAreaHeight(dto.getGoodsAreaHeight());
		entity.setArea(dto.getArea());
//		entity.setGoodsAreaLength(dto.getGoodsAreaLength());
//		entity.setGoodsAreaWidth(dto.getGoodsAreaWidth());
		entity.setAbscissa(dto.getAbscissa());
		entity.setOrdinate(dto.getOrdinate());
		entity.setCreateUser(createUser);
		entity.setModifyUser(createUser);
		GoodsAreaEntity result =null;
		if(dto2!=null){
			result = addOneGoodsArea(entity,dto.getPlatformCode());
		}else{
			result = queryGoodsAreaByCode(entity.getOrganizationCode(), entity.getGoodsAreaCode());
		}
		
		if(result == null) {
			return false;
		} else {
			PlatAreaDistanceEntity paEntity = new PlatAreaDistanceEntity();
    		paEntity.setGoodsAreaVirtualCode(result.getVirtualCode());
    		PlatformEntity pEntity = platformDao.queryPlatformByCode(result.getOrganizationCode(), dto.getPlatformCode());
    		if(pEntity == null) {
    			return false;
    		}
			paEntity.setPlatformVirtualCode(pEntity.getVirtualCode());
    		paEntity.setDistance(Double.valueOf(dto.getDistance()));
    		paEntity.setCreateUser(createUser);
			PlatAreaDistanceEntity dResult = platAreaDistanceDao.updateDistance(paEntity);
			dResult=dResult == null ? platAreaDistanceDao.addDistance(paEntity) : dResult;
    		return dResult == null ? false : true;
		}
    }
    
    private GoodsAreaEntity addOneGoodsArea(GoodsAreaEntity goodsArea,String platformVirtualCode) {
		if (goodsArea == null) {
		    return null;
		}
		GoodsAreaEntity entity = queryGoodsAreaByCode(goodsArea.getOrganizationCode(), goodsArea.getGoodsAreaCode());
		if (entity != null) {
//			System.out.println("cunzai "+entity);
			//14.6.26 如果存在相同记录 进行更新
			entity.setModifyUser(goodsArea.getModifyUser());
			entity.setAbscissa(goodsArea.getAbscissa());
			entity.setOrdinate(goodsArea.getOrdinate());
			entity.setGoodsAreaHeight(goodsArea.getGoodsAreaHeight());
			//entity.setGoodsAreaLength(goodsArea.getGoodsAreaLength());
			entity.setGoodsAreaType(goodsArea.getGoodsAreaType());
			//entity.setGoodsAreaWidth(goodsArea.getGoodsAreaWidth());
			entity.setArea(goodsArea.getArea());
			entity.setGoodsType(goodsArea.getGoodsType());
			entity.setAsteriskCode(goodsArea.getAsteriskCode());
			entity.setCountingMode(goodsArea.getCountingMode());
			entity = goodsAreaDao.updateGoodsArea(entity);
//		    throw new BusinessException("已经存在相同记录。");
		} else {
//			System.out.println("bcunzai "+entity);
			entity = goodsAreaDao.addGoodsArea(goodsArea);
		}
		
		if (entity != null) {
		    invalidList(entity.getOrganizationCode());
		    //syncToLMS(entity.getOrganizationCode());
		}
		return entity;
    }

	/**
	 * <p>作为接口给中转调用
	 *    	  查询参数：驻地营业部编码
	 *    	  返回参数：快递驻地库区和驻地派送库区，这两个库区的实体（包含code和name）</p> 
	 * @author 232607 
	 * @date 2015-6-8 上午11:04:15
	 * @param code
	 * @return
	 * @see
	 */
    @Override
	public List<GoodsAreaEntity> queryGoodsAreaByStationSalesDept(String code){
		if(null==code){
			return null;
		}
		return goodsAreaDao.queryGoodsAreaByStationSalesDept(code);
	}
}
