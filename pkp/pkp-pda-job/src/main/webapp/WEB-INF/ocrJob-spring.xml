<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/jee 
			http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<bean id="mobileExceptionDaoTwo" class="com.deppon.pda.bdm.module.core.server.dao.impl.MobileExceptionDao">
		<property name="sqlSessionFactory">
			<ref bean="sqlSessionFactory" />
		</property>
	</bean>
	
	<bean id="ocrDao" class="com.deppon.pda.bdm.module.core.server.dao.impl.OcrDao">
		<property name="sqlSessionFactory">
			<ref bean="sqlSessionFactory" />
		</property>
	</bean>
	
	<bean id="ocrService"
		class="com.deppon.pda.bdm.module.core.server.service.impl.OcrService">
		<property name="ocrDao">
			<ref bean='ocrDao'/>
		</property>	
		<property name="pdaWaybillService">
			<ref bean='pdaWaybillService'/>
		</property>
		<property name="mobileExceptionDao">
			<ref bean='mobileExceptionDaoTwo'/>
		</property>
	</bean>
	
	<bean id="ocrJob"
		class="com.deppon.pda.bdm.module.core.server.async.job.OcrJob">
		<property name="ocrService">
			<ref bean="ocrService" />
		</property>
	</bean>
	
	<bean id="ocrJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="ocrJob" />
		</property>
		<property name="targetMethod">
			<value>start</value>
		</property>
		<property name="concurrent" value="false" />
	</bean>

	<bean id="ocrDataTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean"
		scope="prototype">
		<property name="jobDetail">
			<ref bean="ocrJobDetail" />
		</property>
		<!-- 每天半个小时同步一次 -->
		<property name="cronExpression" value="0/30 * * * * ?" />
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="waitForJobsToCompleteOnShutdown" value="true" />
		<property name="triggers">
			<list>
				<ref bean="ocrDataTrigger" />
			</list>
		</property>
		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.threadPool.threadCount">1</prop>
				<prop key="org.quartz.threadPool.threadPriority">5</prop>
				<prop key="org.quartz.scheduler.instanceName">Data Export Job</prop>
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
			</props>
		</property>
	</bean>
	<!-- 数据连接管理 -->
	<bean id="pdaTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="pdaDataSource" />
	</bean>

	<!-- 事务注解支持-->
	<tx:annotation-driven transaction-manager="pdaTransactionManager" />
	
	<!-- myBatis文件 -->
	<bean id="pdaSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="/WEB-INF/ibatis.xml" />
		<property name="mapperLocations"
			value="classpath*:com/deppon/**/META-INF/pdaibatis/*.xml" />
		<property name="dataSource" ref="pdaDataSource" />
	</bean>
</beans>
