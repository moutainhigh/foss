<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="foss.pkp.WaybillEntityMapper">
	<resultMap id="BaseResultMap"
		type="com.deppon.foss.module.pickup.waybill.shared.domain.WaybillEntity">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="ORDER_NO" property="orderNo" jdbcType="VARCHAR" />
		<result column="ORDER_CHANNEL" property="orderChannel"
			jdbcType="VARCHAR" />
		<result column="order_paid_method" property="orderPaidMethod"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_ID" property="deliveryCustomerId"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CODE" property="deliveryCustomerCode"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_NAME" property="deliveryCustomerName"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_MOBILEPHONE" property="deliveryCustomerMobilephone"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_PHONE" property="deliveryCustomerPhone"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CONTACT" property="deliveryCustomerContact"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_NATION_CODE" property="deliveryCustomerNationCode"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_PROV_CODE" property="deliveryCustomerProvCode"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CITY_CODE" property="deliveryCustomerCityCode"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_DIST_CODE" property="deliveryCustomerDistCode"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_ADDRESS" property="deliveryCustomerAddress"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_ID" property="receiveCustomerId"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CODE" property="receiveCustomerCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_NAME" property="receiveCustomerName"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_MOBILEPHONE" property="receiveCustomerMobilephone"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_PHONE" property="receiveCustomerPhone"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CONTACT" property="receiveCustomerContact"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_NATION_CODE" property="receiveCustomerNationCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_PROV_CODE" property="receiveCustomerProvCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CITY_CODE" property="receiveCustomerCityCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_DIST_CODE" property="receiveCustomerDistCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_ADDRESS" property="receiveCustomerAddress"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_ORG_CODE" property="receiveOrgCode"
			jdbcType="VARCHAR" />
		<result column="PRODUCT_ID" property="productId" jdbcType="VARCHAR" />
		<result column="PRODUCT_CODE" property="productCode" jdbcType="VARCHAR" />
		<result column="RECEIVE_METHOD" property="receiveMethod"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_PICKUP_ORG_CODE" property="customerPickupOrgCode"
			jdbcType="VARCHAR" />
		<result column="LOAD_METHOD" property="loadMethod" jdbcType="VARCHAR" />
		<result column="TARGET_ORG_CODE" property="targetOrgCode"
			jdbcType="VARCHAR" />
		<result column="PICKUP_TO_DOOR" property="pickupToDoor"
			jdbcType="CHAR" />
		<result column="DRIVER_CODE" property="driverCode" jdbcType="VARCHAR" />
		<result column="PICKUP_CENTRALIZED" property="pickupCentralized"
			jdbcType="CHAR" />
		<result column="LOAD_LINE_CODE" property="loadLineCode"
			jdbcType="VARCHAR" />
		<result column="LOAD_ORG_CODE" property="loadOrgCode" jdbcType="VARCHAR" />
		<result column="LAST_LOAD_ORG_CODE" property="lastLoadOrgCode"
			jdbcType="VARCHAR" />
		<result column="PRE_DEPARTURE_TIME" property="preDepartureTime"
			jdbcType="TIMESTAMP" />
		<result column="PRE_CUSTOMER_PICKUP_TIME" property="preCustomerPickupTime"
			jdbcType="TIMESTAMP" />
		<result column="CAR_DIRECT_DELIVERY" property="carDirectDelivery"
			jdbcType="CHAR" />
		<result column="GOODS_NAME" property="goodsName" jdbcType="VARCHAR" />
		<result column="GOODS_QTY_TOTAL" property="goodsQtyTotal"
			jdbcType="DECIMAL" />
		<result column="GOODS_WEIGHT_TOTAL" property="goodsWeightTotal"
			jdbcType="DECIMAL" />
		<result column="GOODS_VOLUME_TOTAL" property="goodsVolumeTotal"
			jdbcType="DECIMAL" />
		<result column="GOODS_SIZE" property="goodsSize" jdbcType="VARCHAR"
			typeHandler="org.apache.ibatis.type.ClobTypeHandler" />
		<result column="GOODS_TYPE_CODE" property="goodsTypeCode"
			jdbcType="VARCHAR" />
		<result column="PRECIOUS_GOODS" property="preciousGoods"
			jdbcType="CHAR" />
		<result column="SPECIAL_SHAPED_GOODS" property="specialShapedGoods"
			jdbcType="CHAR" />
		<result column="OUTER_NOTES" property="outerNotes" jdbcType="VARCHAR"
			typeHandler="org.apache.ibatis.type.ClobTypeHandler" />
		<result column="INNER_NOTES" property="innerNotes" jdbcType="VARCHAR"
			typeHandler="org.apache.ibatis.type.ClobTypeHandler" />
		<result column="GOODS_PACKAGE" property="goodsPackage"
			jdbcType="VARCHAR" />
		<result column="INSURANCE_AMOUNT" property="insuranceAmount"
			jdbcType="DECIMAL" />
		<result column="COD_AMOUNT" property="codAmount" jdbcType="DECIMAL" />
		<result column="COD_RATE" property="codRate" jdbcType="DECIMAL" />
		<result column="COD_FEE" property="codFee" jdbcType="DECIMAL" />
		<result column="REFUND_TYPE" property="refundType" jdbcType="VARCHAR" />
		<result column="RETURN_BILL_TYPE" property="returnBillType"
			jdbcType="VARCHAR" />
		<result column="SECRET_PREPAID" property="secretPrepaid"
			jdbcType="CHAR" />
		<result column="TO_PAY_AMOUNT" property="toPayAmount" jdbcType="DECIMAL" />
		<result column="PRE_PAY_AMOUNT" property="prePayAmount"
			jdbcType="DECIMAL" />
		<result column="DELIVERY_GOODS_FEE" property="deliveryGoodsFee"
			jdbcType="DECIMAL" />
		<result column="OTHER_FEE" property="otherFee" jdbcType="DECIMAL" />
		<result column="PACKAGE_FEE" property="packageFee" jdbcType="DECIMAL" />
		<result column="PROMOTIONS_FEE" property="promotionsFee"
			jdbcType="DECIMAL" />
		<result column="BILLING_TYPE" property="billingType" jdbcType="VARCHAR" />
		<result column="TRANSPORT_FEE" property="transportFee"
			jdbcType="DECIMAL" />
		<result column="VALUE_ADD_FEE" property="valueAddFee" jdbcType="DECIMAL" />
		<result column="PAID_METHOD" property="paidMethod" jdbcType="VARCHAR" />
		<result column="ARRIVE_TYPE" property="arriveType" jdbcType="VARCHAR" />
		<result column="ACTIVE" property="active" jdbcType="CHAR" />
		<result column="FORBIDDEN_LINE" property="forbiddenLine"
			jdbcType="CHAR" />
		<result column="FREIGHT_METHOD" property="freightMethod"
			jdbcType="VARCHAR" />
		<result column="FLIGHT_SHIFT" property="flightShift" jdbcType="VARCHAR" />
		<result column="TOTAL_FEE" property="totalFee" jdbcType="DECIMAL" />
		<result column="PROMOTIONS_CODE" property="promotionsCode"
			jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="MODIFY_TIME" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="BILL_TIME" property="billTime" jdbcType="TIMESTAMP" />
		<result column="CREATE_USER_CODE" property="createUserCode"
			jdbcType="VARCHAR" />
		<result column="MODIFY_USER_CODE" property="modifyUserCode"
			jdbcType="VARCHAR" />
		<result column="CREATE_ORG_CODE" property="createOrgCode"
			jdbcType="VARCHAR" />
		<result column="MODIFY_ORG_CODE" property="modifyOrgCode"
			jdbcType="VARCHAR" />
		<result column="REF_ID" property="refId" jdbcType="VARCHAR" />
		<result column="REF_CODE" property="refCode" jdbcType="VARCHAR" />
		<result column="CURRENCY_CODE" property="currencyCode"
			jdbcType="VARCHAR" />
		<result column="IS_WHOLE_VEHICLE" property="isWholeVehicle"
			jdbcType="CHAR" />
		<result column="WHOLE_VEHICLE_APPFEE" property="wholeVehicleAppfee"
			jdbcType="DECIMAL" />
		<result column="WHOLE_VEHICLE_ACTUALFEE" property="wholeVehicleActualfee"
			jdbcType="DECIMAL" />
		<result column="ACCOUNT_NAME" property="accountName" jdbcType="VARCHAR" />
		<result column="ACCOUNT_CODE" property="accountCode" jdbcType="VARCHAR" />
		<result column="ACCOUNT_BANK" property="accountBank" jdbcType="VARCHAR" />
		<result column="BILL_WEIGHT" property="billWeight" jdbcType="DECIMAL" />
		<result column="PICKUP_FEE" property="pickupFee" jdbcType="DECIMAL" />
		<result column="SERVICE_FEE" property="serviceFee" jdbcType="DECIMAL" />
		<result column="PRE_ARRIVE_TIME" property="preArriveTime"
			jdbcType="TIMESTAMP" />
		<result column="TRANSPORT_TYPE" property="transportType"
			jdbcType="VARCHAR" />
		<result column="ADD_TIME" property="addTime" jdbcType="TIMESTAMP" />
		<result column="INSURANCE_RATE" property="insuranceRate"
			jdbcType="DECIMAL" />
		<result column="INSURANCE_FEE" property="insuranceFee"
			jdbcType="DECIMAL" />
		<result column="UNIT_PRICE" property="unitPrice" jdbcType="DECIMAL" />
		<result column="CONTACT_ADDRESS_ID" property="contactAddressId"
			jdbcType="VARCHAR" />
		<result column="FLIGHT_NUMBER_TYPE" property="flightNumberType"
			jdbcType="VARCHAR" />
		<result column="COLLECTION_DEPARTMENT" property="collectionDepartment"
			jdbcType="VARCHAR" />
		<result column="TRANSPORTATION_REMARK" property="transportationRemark"
			jdbcType="VARCHAR" typeHandler="org.apache.ibatis.type.ClobTypeHandler" />
		<result column="IS_PASS_OWN_DEPARTMENT" property="isPassOwnDepartment"
			jdbcType="CHAR" />
		<result column="PAPER_NUM" property="paperNum" jdbcType="NUMERIC" />
		<result column="WOOD_NUM" property="woodNum" jdbcType="NUMERIC" />
		<result column="FIBRE_NUM" property="fibreNum" jdbcType="NUMERIC" />
		<result column="SALVER_NUM" property="salverNum" jdbcType="NUMERIC" />
		<result column="MEMBRANE_NUM" property="membraneNum" jdbcType="NUMERIC" />
		<result column="OTHER_PACKAGE" property="otherPackage"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CONTACT_ID" property="deliverCustContactId"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CONTACT_ID" property="receiverCustContactId"
			jdbcType="VARCHAR" />
		<result column="PENDING_TYPE" property="pendingType" jdbcType="VARCHAR" />
		<result column="LICENSE_PLATE_NUM" property="licensePlateNum"
			jdbcType="VARCHAR" />
		<result column="ORDER_VEHICLE_NUM" property="orderVehicleNum"
			jdbcType="VARCHAR" />
		<result column="CREATE_USER_NAME" property="createUserName"
			jdbcType="VARCHAR" />
		<result column="CREATE_USER_DEPT_NAME" property="createUserDeptName"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_ORG_NAME" property="receiveOrgName"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_PICKUP_ORG_NAME" property="customerPickupOrgName"
			jdbcType="VARCHAR" />
		<result column="LOAD_ORG_NAME" property="loadOrgName" jdbcType="VARCHAR" />
		<result column="LAST_LOAD_ORG_NAME" property="lastLoadOrgName"
			jdbcType="VARCHAR" />
		<result column="TRANSFER_START_ORG_CODE" property="transferStartOrgCode"
			jdbcType="VARCHAR" />
		<result column="TRANSFER_START_ORG_NAME" property="transferStartOrgName"
			jdbcType="VARCHAR" />
		<result column="KILOMETER" property="kilometer" jdbcType="DECIMAL" />
		<result column="IS_INIT" property="isInit" jdbcType="CHAR" />
		<result column="IS_ECONOMY_GOODS" property="isEconomyGoods"
			jdbcType="CHAR" />
		<result column="ECONOMY_GOODS_TYPE" property="economyGoodsType"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_BIG_CUSTOMER" property="deliveryBigCustomer"
			jdbcType="CHAR" />
		<result column="RECEIVE_BIG_CUSTOMER" property="receiveBigCustomer"
			jdbcType="CHAR" />
		<result column="WAYBILL_TYPE" property="waybillType" jdbcType="VARCHAR" />
		<result column="IS_EXPRESS" property="isExpress" jdbcType="CHAR" />
		<result column="FREE_PICKUP_GOODS" property="freePickupGoods" jdbcType="CHAR" />
		<result column="IS_ECS" property="isecs" jdbcType="CHAR" />
	</resultMap>

	<!-- b.special_value_added_service,a.goods_name,a.goods_qty_total,a.receive_method,a.goods_weight_total,a.goods_volume_total,a.goods_type_code -->
	<!-- 德邦家装信息 -->
	<resultMap id="waybillandOther"
		type="com.deppon.foss.module.pickup.waybill.shared.domain.WaybillMessageEntity">
		<result column="special_value_added_service" property="specialValueAddedServiceType"
			jdbcType="VARCHAR" />
		<result column="goods_qty_total" property="goodsQtyTotal"
			jdbcType="INTEGER" />
		<result column="receive_method" property="receiveMethod"
			jdbcType="VARCHAR" />
		<result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
		<result column="goods_weight_total" property="goodsWeightTotal"
			jdbcType="DECIMAL" />
		<result column="goods_volume_total" property="goodsVolumeTotal"
			jdbcType="DECIMAL" />
		<result column="goods_type_code" property="goodsTypeCode"
			jdbcType="VARCHAR" />
			<result column="CUSTOMER_PICKUP_ORG_CODE" property="receiveOrgCode"
			jdbcType="VARCHAR" />
	</resultMap>
	<!--官网查询集合 -->
	<resultMap id="AccountingQueryDtoMap"
		type="com.deppon.foss.module.pickup.waybill.shared.dto.AccountingResultDto">
		<result column="waybillNum" property="waybillNum" jdbcType="VARCHAR" />
		<result column="orderNum" property="orderNum" jdbcType="VARCHAR" />
		<result column="sendDate" property="sendDate" jdbcType="VARCHAR" />
		<result column="departureName" property="departureName"
			jdbcType="VARCHAR" />
		<result column="departureAddress" property="departureAddress"
			jdbcType="VARCHAR" />
		<result column="departuretel" property="departuretel" jdbcType="VARCHAR" />
		<result column="departure" property="departure" jdbcType="VARCHAR" />
		<result column="shipperName" property="shipperName" jdbcType="VARCHAR" />
		<result column="shippertel" property="shippertel" jdbcType="VARCHAR" />
		<result column="shipperMobile" property="shipperMobile"
			jdbcType="VARCHAR" />
		<result column="shipperAddress" property="shipperAddress"
			jdbcType="VARCHAR" />
		<result column="consigneeName" property="consigneeName"
			jdbcType="VARCHAR" />
		<result column="consigneetel" property="consigneetel" jdbcType="VARCHAR" />
		<result column="consigneeMobile" property="consigneeMobile"
			jdbcType="VARCHAR" />
		<result column="consigneeAddress" property="consigneeAddress"
			jdbcType="VARCHAR" />
		<result column="goodsName" property="goodsName" jdbcType="VARCHAR" />
		<result column="weight" property="weight" jdbcType="FLOAT" />
		<result column="cubage" property="cubage" jdbcType="FLOAT" />
		<result column="pieces" property="pieces" jdbcType="INTEGER" />
		<result column="packing" property="packing" jdbcType="VARCHAR" />
		<result column="transProperties" property="transProperties"
			jdbcType="VARCHAR" />
		<result column="deliveryMode" property="deliveryMode" jdbcType="VARCHAR" />
		<result column="payWay" property="payWay" jdbcType="VARCHAR" />
		<result column="insurance" property="insurance" jdbcType="DECIMAL" />
		<result column="insuranceFee" property="insuranceFee" jdbcType="DECIMAL" />
		<result column="refundType" property="refundType" jdbcType="VARCHAR" />
		<result column="refund" property="refund" jdbcType="DECIMAL" />
		<result column="refundFee" property="refundFee" jdbcType="DECIMAL" />
		<result column="tranCharge" property="tranCharge" jdbcType="DECIMAL" />
		<result column="deliveryCharge" property="deliveryCharge"
			jdbcType="DECIMAL" />
		<result column="receiveCharge" property="receiveCharge"
			jdbcType="DECIMAL" />
		<result column="packingCharge" property="packingCharge"
			jdbcType="DECIMAL" />
		<result column="totalCharge" property="totalCharge" jdbcType="DECIMAL" />
		<result column="otherCharge" property="otherCharge" jdbcType="DECIMAL" />
		<result column="returnBillType" property="returnBillType"
			jdbcType="VARCHAR" />
		<result column="transDesc" property="transDesc" jdbcType="VARCHAR" />
		<result column="wayBillState" property="wayBillState" jdbcType="VARCHAR" />
		<result column="wayBillState" property="signedDate" jdbcType="TIMESTAMP" />
		<result column="destination" property="destination" jdbcType="VARCHAR" />
		<result column="stationName" property="stationName" jdbcType="VARCHAR" />
		<result column="stationaddress" property="stationaddress"
			jdbcType="VARCHAR" />
		<result column="stationtel" property="stationtel" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="AdjustPlanResultMap"
		type="com.deppon.foss.module.pickup.waybill.api.shared.dto.AdjustPlanResultDto">
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="RECEIVE_ORG_CODE" property="receiveOrgCode"
			jdbcType="VARCHAR" />
		<result column="OCUSTOMER_PICKUP_ORG_CODE" property="ocustomerPickupOrgCode"
			jdbcType="VARCHAR" />
		<result column="DCUSTOMER_PICKUP_ORG_CODE" property="dcustomerPickupOrgCode"
			jdbcType="VARCHAR" />
		<result column="OPERATE_TIME" property="operateTime" jdbcType="TIMESTAMP" />
		<result column="WAYBILL_RFC_ID" property="waybillRfcId"
			jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="labeledGoodResultMap"
		type="com.deppon.foss.module.pickup.waybill.shared.domain.LabeledGoodEntity">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="SERIAL_NO" property="serialNo" jdbcType="VARCHAR" />
		<result column="ACTIVE" property="active" jdbcType="VARCHAR" />
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="MODIFY_TIME" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="BILL_TIME" property="billTime" jdbcType="TIMESTAMP" />
		<result column="OLD_SERIAL_NO" property="oldSerialNo" jdbcType="VARCHAR" />
		<result column="NUMBER_CHANG_ITEMS" property="numberChangItems"
			jdbcType="VARCHAR" />
		<result column="INITIAL_VALUE" property="initalVale" jdbcType="CHAR" />
		<result column="IS_NEED_WOODEN" property="isNeedWooden"
			jdbcType="CHAR" />
	</resultMap>

	<!--运单查询服务 -->
	<resultMap id="waybillInfoResultMap"
		type="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillInfoDto">
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="TRANSPORT_TYPE" property="transportType"
			jdbcType="VARCHAR" />
		<result column="PRODUCT_CODE" property="productCode" jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CONTACT" property="deliveryCustomerName"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_PHONE" property="deliveryCustomerPhone"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_MOBILEPHONE" property="deliveryCustomerMobilephone"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_ORG_CODE" property="deliveryCustomerCityCode"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_ADDRESS" property="deliveryCustomerAddress"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CONTACT" property="receiveCustomerName"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_PHONE" property="receiveCustomerPhone"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_MOBILEPHONE" property="receiveCustomerMobilephone"
			jdbcType="VARCHAR" />
		<result column="TARGET_ORG_CODE" property="targetOrgCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_ADDRESS" property="receiveCustomerAddress"
			jdbcType="VARCHAR" />
		<result column="GOODS_NAME" property="goodsName" jdbcType="VARCHAR" />
		<result column="GOODS_QTY_TOTAL" property="goodsQtyTotal"
			jdbcType="NUMERIC" />
		<result column="GOODS_WEIGHT_TOTAL" property="goodsWeightTotal"
			jdbcType="DECIMAL" />
		<result column="GOODS_VOLUME_TOTAL" property="goodsVolumeTotal"
			jdbcType="DECIMAL" />
		<result column="TOTAL_FEE" property="totalFee" jdbcType="DECIMAL" />
		<result column="PAID_METHOD" property="paidMethod" jdbcType="VARCHAR" />
		<result column="PRE_PAY_AMOUNT" property="prePayAmount"
			jdbcType="DECIMAL" />
		<result column="TO_PAY_AMOUNT" property="toPayAmount" jdbcType="DECIMAL" />
		<result column="REFUND_TYPE" property="refundType" jdbcType="VARCHAR" />
		<result column="COD_AMOUNT" property="codAmount" jdbcType="DECIMAL" />
		<result column="COD_FEE" property="codFee" jdbcType="DECIMAL" />
		<result column="RECEIVE_METHOD" property="receiveMethod"
			jdbcType="VARCHAR" />
		<result column="PICKUP_FEE" property="pickupFee" jdbcType="DECIMAL" />
		<result column="DELIVERY_GOODS_FEE" property="deliveryGoodsFee"
			jdbcType="DECIMAL" />
		<result column="PACKAGE_FEE" property="packageFee" jdbcType="DECIMAL" />
		<result column="SERVICE_FEE" property="serviceFee" jdbcType="DECIMAL" />
		<result column="TRANSPORT_FEE" property="transportFee"
			jdbcType="DECIMAL" />
		<result column="RECEIVE_ORG_CODE" property="receiveOrgCode"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_PICKUP_ORG_CODE" property="customerPickupOrgCode"
			jdbcType="VARCHAR" />
		<result column="SIGN_SITUATION" property="signSituation"
			jdbcType="VARCHAR" />
		<result column="DELIVERYMAN_NAME" property="deliverymanName"
			jdbcType="VARCHAR" />
		<result column="SIGN_TIME" property="signTime" jdbcType="TIMESTAMP" />
		<result column="SIGN_NOTE" property="signNote" jdbcType="VARCHAR" />
		<result column="ORDER_NO" property="orderNo" jdbcType="VARCHAR" />
		<result column="INSURANCE_AMOUNT" property="insuranceAmount"
			jdbcType="DECIMAL" />
		<result column="INSURANCE_FEE" property="insuranceFee"
			jdbcType="DECIMAL" />
		<result column="GOODS_PACKAGE" property="goodsPackage"
			jdbcType="VARCHAR" />
		<result column="ACTIVE" property="active" jdbcType="VARCHAR" />
		<result column="OTHER_FEE" property="otherFee" jdbcType="DECIMAL" />
		<result column="OUTER_NOTES" property="outerNotes" jdbcType="VARCHAR"
			typeHandler="org.apache.ibatis.type.ClobTypeHandler" />
		<result column="DELIVERY_CUSTOMER_CODE" property="deliveryCustomerCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CODE" property="receiveCustomerCode"
			jdbcType="VARCHAR" />
		<result column="SETTLE_STATUS" property="settleStatus"
			jdbcType="VARCHAR" />
		<result column="RETURN_BILL_TYPE" property="returnBillType"
			jdbcType="VARCHAR" />
		<result column="TRANSPORTATION_REMARK" property="transportationRemark"
			jdbcType="VARCHAR" typeHandler="org.apache.ibatis.type.ClobTypeHandler" />
		<result column="BILL_TIME" property="billTime" jdbcType="TIMESTAMP" />
		<result column="LOAD_ORG_CODE" property="loadOrgCode" jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_PROV_CODE" property="deliveryCustomerProvCode"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CITY_CODE" property="deliveryCustomerCityCode1"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_DIST_CODE" property="deliveryCustomerDistCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_PROV_CODE" property="receiveCustomerProvCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CITY_CODE" property="receiveCustomerCityCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_DIST_CODE" property="receiveCustomerDistCode"
			jdbcType="VARCHAR" />
		<result column="PICKUP_TO_DOOR" property="pickupToDoor"
			jdbcType="VARCHAR" />
		<result column="NOTIFICATION_RESULT" property="notificationResult"
			jdbcType="VARCHAR" />
		<!-- <result column="CREATE_ORG_CODE" property="createOrgCode" jdbcType="VARCHAR" 
			/> -->

		<result column="EXPRESS_EMP_CODE" property="startExpressEmpCode"
			jdbcType="VARCHAR" />
		<result column="EXPRESS_EMP_NAME" property="startExpressEmpName"
			jdbcType="VARCHAR" />
		<result column="EXPRESS_ORG_CODE" property="startExpressOrgCode"
			jdbcType="VARCHAR" />
		<result column="EXPRESS_ORG_NAME" property="startExpressOrgName"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_ADDRESS_NOTE" property="receiveCustomerAddressNote"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_ADDRESS_NOTE" property="deliveryCustomerAddressNote"
			jdbcType="VARCHAR" />
		<result column="OPERATION_ORG_NAME" property="complementOperationOrgName"
			jdbcType="VARCHAR" />
		<result column="OPERATION_ORG_CODE" property="complementOperationOrgCode"
			jdbcType="VARCHAR" />

        <result column="PRINCIPAL_ORG_NAME" property="principalOrgName"
			jdbcType="VARCHAR" />
		<result column="PRINCIPAL_NO" property="principalNo" jdbcType="VARCHAR" />
		<result column="emp_name" property="principalName" jdbcType="VARCHAR" />


		<!-- 增加大客户字段 -->
		<result column="DELIVERY_BIG_CUSTOMER" property="isBigDeliverCustomer"
			jdbcType="CHAR" />
		<!-- 增加俩个字段：返货类型和原运单号 -->
		<result column="RETURN_TYPE" property="returnType" jdbcType="VARCHAR" />
		<result column="PRE_CUSTOMER_PICKUP_TIME" property="preCustomerPickupTime"
			jdbcType="TIMESTAMP" />
		<result column="ORIGINAL_WAYBILL_NO" property="originalWaybillNo"
			jdbcType="VARCHAR" />

		<!-- XULIXIN增加 -->
		<result column="PICKUP_CENTRALIZED" property="pickupCentralized"
			jdbcType="VARCHAR" />
		<result column="CREATE_USER_CODE" property="createUserCode"
			jdbcType="VARCHAR" />
		<result column="CREATE_USER_NAME" property="createUserName"
			jdbcType="VARCHAR" />
		<result column="CREATE_USER_DEPT_NAME" property="createUserDeptName"
			jdbcType="VARCHAR" />
		<result column="CREATE_ORG_CODE" property="createOrgCode"
			jdbcType="VARCHAR" />
		<result column="CREATE_ORG_NAME" property="createOrgName"
			jdbcType="VARCHAR" />
		<result column="DRIVER_CODE" property="driverCode" jdbcType="VARCHAR" />
		<result column="DRIVER_NAME" property="driverName" jdbcType="VARCHAR" />
		<result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
		<result column="MODIFY_USER_CODE" property="modifyUserCode"
			jdbcType="VARCHAR" />
		<result column="MODIFY_USER_NAME" property="modifyUserName"
			jdbcType="VARCHAR" />
		<result column="MODIFY_ORG_CODE" property="modifyOrgCode"
			jdbcType="VARCHAR" />
		<result column="MODIFY_ORG_NAME" property="modifyOrgName"
			jdbcType="VARCHAR" />
		<result column="GOODS_SIZE" property="goodsSize" jdbcType="VARCHAR"
			typeHandler="org.apache.ibatis.type.ClobTypeHandler" />

		<result column="IS_EXPRESS" property="isExpress" jdbcType="VARCHAR" />
		<result column="PRE_ARRIVE_TIME" property="preArriveTime"
			jdbcType="TIMESTAMP" />
		<result column="STATUS" property="waybillStatus" jdbcType="VARCHAR" />
		<collection property="waybillChargeCostDto" resultMap="WaybillChargeCostMap" />
	</resultMap>


	<!--运单查询服务 -->
	<resultMap id="waybillInfoResultMap2"
			   type="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillInfoDto">
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="TRANSPORT_TYPE" property="transportType"
				jdbcType="VARCHAR" />
		<result column="PRODUCT_CODE" property="productCode" jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CONTACT" property="deliveryCustomerName"
				jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_PHONE" property="deliveryCustomerPhone"
				jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_MOBILEPHONE" property="deliveryCustomerMobilephone"
				jdbcType="VARCHAR" />
		<result column="RECEIVE_ORG_CODE" property="deliveryCustomerCityCode"
				jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_ADDRESS" property="deliveryCustomerAddress"
				jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CONTACT" property="receiveCustomerName"
				jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_PHONE" property="receiveCustomerPhone"
				jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_MOBILEPHONE" property="receiveCustomerMobilephone"
				jdbcType="VARCHAR" />
		<result column="TARGET_ORG_CODE" property="targetOrgCode"
				jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_ADDRESS" property="receiveCustomerAddress"
				jdbcType="VARCHAR" />
		<result column="GOODS_NAME" property="goodsName" jdbcType="VARCHAR" />
		<result column="GOODS_QTY_TOTAL" property="goodsQtyTotal"
				jdbcType="NUMERIC" />
		<result column="GOODS_WEIGHT_TOTAL" property="goodsWeightTotal"
				jdbcType="DECIMAL" />
		<result column="GOODS_VOLUME_TOTAL" property="goodsVolumeTotal"
				jdbcType="DECIMAL" />
		<result column="TOTAL_FEE" property="totalFee" jdbcType="DECIMAL" />
		<result column="PAID_METHOD" property="paidMethod" jdbcType="VARCHAR" />
		<result column="PRE_PAY_AMOUNT" property="prePayAmount"
				jdbcType="DECIMAL" />
		<result column="TO_PAY_AMOUNT" property="toPayAmount" jdbcType="DECIMAL" />
		<result column="REFUND_TYPE" property="refundType" jdbcType="VARCHAR" />
		<result column="COD_AMOUNT" property="codAmount" jdbcType="DECIMAL" />
		<result column="COD_FEE" property="codFee" jdbcType="DECIMAL" />
		<result column="RECEIVE_METHOD" property="receiveMethod"
				jdbcType="VARCHAR" />
		<result column="PICKUP_FEE" property="pickupFee" jdbcType="DECIMAL" />
		<result column="DELIVERY_GOODS_FEE" property="deliveryGoodsFee"
				jdbcType="DECIMAL" />
		<result column="PACKAGE_FEE" property="packageFee" jdbcType="DECIMAL" />
		<result column="SERVICE_FEE" property="serviceFee" jdbcType="DECIMAL" />
		<result column="TRANSPORT_FEE" property="transportFee"
				jdbcType="DECIMAL" />
		<result column="RECEIVE_ORG_CODE" property="receiveOrgCode"
				jdbcType="VARCHAR" />
		<result column="CUSTOMER_PICKUP_ORG_CODE" property="customerPickupOrgCode"
				jdbcType="VARCHAR" />
		<result column="SIGN_SITUATION" property="signSituation"
				jdbcType="VARCHAR" />
		<result column="DELIVERYMAN_NAME" property="deliverymanName"
				jdbcType="VARCHAR" />
		<result column="SIGN_TIME" property="signTime" jdbcType="TIMESTAMP" />
		<result column="SIGN_NOTE" property="signNote" jdbcType="VARCHAR" />
		<result column="ORDER_NO" property="orderNo" jdbcType="VARCHAR" />
		<result column="INSURANCE_AMOUNT" property="insuranceAmount"
				jdbcType="DECIMAL" />
		<result column="INSURANCE_FEE" property="insuranceFee"
				jdbcType="DECIMAL" />
		<result column="GOODS_PACKAGE" property="goodsPackage"
				jdbcType="VARCHAR" />
		<result column="ACTIVE" property="active" jdbcType="VARCHAR" />
		<result column="OTHER_FEE" property="otherFee" jdbcType="DECIMAL" />
		<result column="OUTER_NOTES" property="outerNotes" jdbcType="VARCHAR"
				typeHandler="org.apache.ibatis.type.ClobTypeHandler" />
		<result column="DELIVERY_CUSTOMER_CODE" property="deliveryCustomerCode"
				jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CODE" property="receiveCustomerCode"
				jdbcType="VARCHAR" />
		<result column="SETTLE_STATUS" property="settleStatus"
				jdbcType="VARCHAR" />
		<result column="RETURN_BILL_TYPE" property="returnBillType"
				jdbcType="VARCHAR" />
		<result column="TRANSPORTATION_REMARK" property="transportationRemark"
				jdbcType="VARCHAR" typeHandler="org.apache.ibatis.type.ClobTypeHandler" />
		<result column="BILL_TIME" property="billTime" jdbcType="TIMESTAMP" />
		<result column="LOAD_ORG_CODE" property="loadOrgCode" jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_PROV_CODE" property="deliveryCustomerProvCode"
				jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CITY_CODE" property="deliveryCustomerCityCode1"
				jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_DIST_CODE" property="deliveryCustomerDistCode"
				jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_PROV_CODE" property="receiveCustomerProvCode"
				jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CITY_CODE" property="receiveCustomerCityCode"
				jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_DIST_CODE" property="receiveCustomerDistCode"
				jdbcType="VARCHAR" />
		<result column="PICKUP_TO_DOOR" property="pickupToDoor"
				jdbcType="VARCHAR" />
		<result column="NOTIFICATION_RESULT" property="notificationResult"
				jdbcType="VARCHAR" />
		<!-- <result column="CREATE_ORG_CODE" property="createOrgCode" jdbcType="VARCHAR"
			/> -->

		<result column="EXPRESS_EMP_CODE" property="startExpressEmpCode"
				jdbcType="VARCHAR" />
		<result column="EXPRESS_EMP_NAME" property="startExpressEmpName"
				jdbcType="VARCHAR" />
		<result column="EXPRESS_ORG_CODE" property="startExpressOrgCode"
				jdbcType="VARCHAR" />
		<result column="EXPRESS_ORG_NAME" property="startExpressOrgName"
				jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_ADDRESS_NOTE" property="receiveCustomerAddressNote"
				jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_ADDRESS_NOTE" property="deliveryCustomerAddressNote"
				jdbcType="VARCHAR" />
		<result column="OPERATION_ORG_NAME" property="complementOperationOrgName"
				jdbcType="VARCHAR" />
		<result column="OPERATION_ORG_CODE" property="complementOperationOrgCode"
				jdbcType="VARCHAR" />

		<result column="PRINCIPAL_ORG_NAME" property="principalOrgName"
				jdbcType="VARCHAR" />
		<result column="PRINCIPAL_NO" property="principalNo" jdbcType="VARCHAR" />
		<result column="emp_name" property="principalName" jdbcType="VARCHAR" />


		<!-- 增加大客户字段 -->
		<result column="DELIVERY_BIG_CUSTOMER" property="isBigDeliverCustomer"
				jdbcType="CHAR" />
		<!-- 增加俩个字段：返货类型和原运单号 -->
		<result column="RETURN_TYPE" property="returnType" jdbcType="VARCHAR" />

		<result column="ORIGINAL_WAYBILL_NO" property="originalWaybillNo"
				jdbcType="VARCHAR" />

		<!-- XULIXIN增加 -->
		<result column="PICKUP_CENTRALIZED" property="pickupCentralized"
				jdbcType="VARCHAR" />
		<result column="CREATE_USER_CODE" property="createUserCode"
				jdbcType="VARCHAR" />
		<result column="CREATE_USER_NAME" property="createUserName"
				jdbcType="VARCHAR" />
		<result column="CREATE_USER_DEPT_NAME" property="createUserDeptName"
				jdbcType="VARCHAR" />
		<result column="CREATE_ORG_CODE" property="createOrgCode"
				jdbcType="VARCHAR" />
		<result column="CREATE_ORG_NAME" property="createOrgName"
				jdbcType="VARCHAR" />
		<result column="DRIVER_CODE" property="driverCode" jdbcType="VARCHAR" />
		<result column="DRIVER_NAME" property="driverName" jdbcType="VARCHAR" />
		<result column="MODIFY_TIME" property="modifyTime" jdbcType="VARCHAR" />
		<result column="MODIFY_USER_CODE" property="modifyUserCode"
				jdbcType="VARCHAR" />
		<result column="MODIFY_USER_NAME" property="modifyUserName"
				jdbcType="VARCHAR" />
		<result column="MODIFY_ORG_CODE" property="modifyOrgCode"
				jdbcType="VARCHAR" />
		<result column="MODIFY_ORG_NAME" property="modifyOrgName"
				jdbcType="VARCHAR" />
		<result column="GOODS_SIZE" property="goodsSize" jdbcType="VARCHAR"
				typeHandler="org.apache.ibatis.type.ClobTypeHandler" />

		<result column="IS_EXPRESS" property="isExpress" jdbcType="VARCHAR" />
		<result column="PRE_ARRIVE_TIME" property="preArriveTime"
				jdbcType="TIMESTAMP" />

		<collection property="waybillChargeCostDto" resultMap="WaybillChargeCostMap" />
	</resultMap>

	<!--运单查询服务 -->
	<resultMap id="waybillOneYearResultMap"
		type="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillOneYearDto">

		<result column="DELIVERY_CUSTOMER_CODE" property="deliveryCustomerCode"
			jdbcType="VARCHAR" />
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="GOODS_QTY_TOTAL" property="goodsQtyTotal"
			jdbcType="NUMERIC" />
		<result column="GOODS_WEIGHT_TOTAL" property="goodsWeightTotal"
			jdbcType="DECIMAL" />
		<result column="GOODS_VOLUME_TOTAL" property="goodsVolumeTotal"
			jdbcType="DECIMAL" />
	  <result column="GOODS_NAME" property="goodsName" jdbcType="VARCHAR" />
		<result column="PAID_METHOD" property="paidMethod" jdbcType="VARCHAR" />
		<result column="PRE_PAY_AMOUNT" property="prePayAmount"
			jdbcType="DECIMAL" />
		<result column="TO_PAY_AMOUNT" property="toPayAmount" jdbcType="DECIMAL" />
		<result column="REFUND_TYPE" property="refundType" jdbcType="VARCHAR" />
		<result column="COD_AMOUNT" property="codAmount" jdbcType="DECIMAL" />
		<result column="COD_FEE" property="codFee" jdbcType="DECIMAL" />
		<result column="RECEIVE_METHOD" property="receiveMethod"
			jdbcType="VARCHAR" />
		<result column="PICKUP_FEE" property="pickupFee" jdbcType="DECIMAL" />
		<result column="DELIVERY_GOODS_FEE" property="deliveryGoodsFee"
			jdbcType="DECIMAL" />
		<result column="PACKAGE_FEE" property="packageFee" jdbcType="DECIMAL" />
		<result column="SERVICE_FEE" property="serviceFee" jdbcType="DECIMAL" />
		<result column="TRANSPORT_FEE" property="transportFee"
			jdbcType="DECIMAL" />
		<result column="INSURANCE_AMOUNT" property="insuranceAmount"
			jdbcType="DECIMAL" />
		<result column="INSURANCE_FEE" property="insuranceFee"
			jdbcType="DECIMAL" />
		<result column="GOODS_PACKAGE" property="goodsPackage"
			jdbcType="VARCHAR" />
		<result column="OTHER_FEE" property="otherFee" jdbcType="DECIMAL" />
		<result column="DELIVERY_CUSTOMER_CITY_CODE" property="deliveryCustomerCityCode1"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CITY_CODE" property="receiveCustomerCityCode"
			jdbcType="VARCHAR" />
		<result column="CREATE_ORG_CODE" property="createOrgCode"
			jdbcType="VARCHAR" />
	    <result column="CUSTOMER_PICKUP_ORG_CODE" property="customerPickupOrgCode"
			jdbcType="VARCHAR" />
		<result column="ACTIVE" property="active" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="WaybillChargeCostMap"
		type="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillChargeCostDto">
		<result column="PRICING_ENTRY_CODE" property="costType"
			jdbcType="VARCHAR" />
		<result column="NAME" property="costName" jdbcType="VARCHAR" />
		<result column="AMOUNT" property="costMoney" jdbcType="DECIMAL" />
	</resultMap>



	<resultMap id="signDto"
		type="com.deppon.foss.module.pickup.waybill.shared.dto.SignDto">
		<result column="EMP_CODE" property="empCode" jdbcType="VARCHAR" />
		<result column="EMP_NAME" property="empName" jdbcType="VARCHAR" />
		<result column="ORG_CODE" property="orgCode" jdbcType="VARCHAR" />
		<result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
		<result column="CREATE_ORG_CODE" property="createOrgCode"
			jdbcType="VARCHAR" />
		<result column="CREATE_ORG_NAME" property="createOrgName"
			jdbcType="VARCHAR" />
		<result column="CREATE_USER_NAME" property="createUserName"
			jdbcType="VARCHAR" />
		<result column="CREATOR_USER_CODE" property="createUserCode"
			jdbcType="VARCHAR" />

	</resultMap>

	<resultMap id="EarliestCreateTimeMap"
		type="com.deppon.foss.module.pickup.waybill.shared.dto.EarliestCreateTimeDto">
		<result column="waybillNo" property="waybillNo" jdbcType="VARCHAR" />
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
	</resultMap>

	<resultMap id="GrandGoodAbnormalMap"
		type="com.deppon.foss.module.pickup.waybill.shared.domain.GrandGoodAbnormalEntity">
		<result column="waybill_no" property="waybillNo"       jdbcType="VARCHAR" />
		<result column="dangerCause" property="dangerCause"    jdbcType="VARCHAR" />
		<result column="unified_Code" property="unifiedCode"   jdbcType="VARCHAR" />
		<result column="passIsDuty" property="passIsDuty"      jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="WaybillCountMap"
		type="com.deppon.esb.inteface.domain.ccwaybillservice.WaybillCountDto">
		<result column="phone_num" property="phoneNum"       jdbcType="VARCHAR" />
		<result column="count" property="count"    jdbcType="DECIMAL" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, WAYBILL_NO, ORDER_NO, ORDER_CHANNEL,ORDER_PAID_METHOD,
		DELIVERY_CUSTOMER_ID,
		DELIVERY_CUSTOMER_CODE,
		DELIVERY_CUSTOMER_NAME,
		DELIVERY_CUSTOMER_MOBILEPHONE, DELIVERY_CUSTOMER_PHONE,
		DELIVERY_CUSTOMER_CONTACT,
		DELIVERY_CUSTOMER_NATION_CODE,
		DELIVERY_CUSTOMER_PROV_CODE,
		DELIVERY_CUSTOMER_CITY_CODE,
		DELIVERY_CUSTOMER_DIST_CODE, DELIVERY_CUSTOMER_ADDRESS,
		RECEIVE_CUSTOMER_ID,
		RECEIVE_CUSTOMER_CODE,
		RECEIVE_CUSTOMER_NAME,
		RECEIVE_CUSTOMER_MOBILEPHONE, RECEIVE_CUSTOMER_PHONE,
		RECEIVE_CUSTOMER_CONTACT,
		RECEIVE_CUSTOMER_NATION_CODE,
		RECEIVE_CUSTOMER_PROV_CODE, RECEIVE_CUSTOMER_CITY_CODE,
		RECEIVE_CUSTOMER_DIST_CODE, RECEIVE_CUSTOMER_ADDRESS,
		RECEIVE_ORG_CODE, PRODUCT_ID,
		PRODUCT_CODE, RECEIVE_METHOD,
		CUSTOMER_PICKUP_ORG_CODE, LOAD_METHOD,
		TARGET_ORG_CODE,
		PICKUP_TO_DOOR,
		DRIVER_CODE, PICKUP_CENTRALIZED, LOAD_LINE_CODE, LOAD_ORG_CODE,
		LAST_LOAD_ORG_CODE,
		PRE_DEPARTURE_TIME, PRE_CUSTOMER_PICKUP_TIME,
		CAR_DIRECT_DELIVERY, GOODS_NAME,
		GOODS_QTY_TOTAL,
		GOODS_WEIGHT_TOTAL,
		GOODS_VOLUME_TOTAL, GOODS_SIZE, GOODS_TYPE_CODE, PRECIOUS_GOODS,
		SPECIAL_SHAPED_GOODS, OUTER_NOTES, INNER_NOTES, GOODS_PACKAGE,
		INSURANCE_AMOUNT/100 as INSURANCE_AMOUNT,
		COD_AMOUNT/100 as COD_AMOUNT,
		COD_RATE, COD_FEE/100 as COD_FEE, REFUND_TYPE,
		RETURN_BILL_TYPE,
		SECRET_PREPAID,
		TO_PAY_AMOUNT/100 as TO_PAY_AMOUNT,
		PRE_PAY_AMOUNT/100
		as PRE_PAY_AMOUNT,
		DELIVERY_GOODS_FEE/100 as DELIVERY_GOODS_FEE,
		OTHER_FEE/100 as OTHER_FEE, PACKAGE_FEE/100 as PACKAGE_FEE,
		PROMOTIONS_FEE/100 as PROMOTIONS_FEE,
		BILLING_TYPE,
		TRANSPORT_FEE/100 as
		TRANSPORT_FEE, VALUE_ADD_FEE/100 as VALUE_ADD_FEE, PAID_METHOD,
		ARRIVE_TYPE,
		ACTIVE, FORBIDDEN_LINE,
		FREIGHT_METHOD,
		FLIGHT_SHIFT,
		TOTAL_FEE/100 as TOTAL_FEE,
		PROMOTIONS_CODE, CREATE_TIME, MODIFY_TIME,
		BILL_TIME,
		CREATE_USER_CODE,
		MODIFY_USER_CODE, CREATE_ORG_CODE,
		MODIFY_ORG_CODE,
		REF_ID, REF_CODE, CURRENCY_CODE,
		IS_WHOLE_VEHICLE,
		WHOLE_VEHICLE_APPFEE/100 as WHOLE_VEHICLE_APPFEE,
		WHOLE_VEHICLE_ACTUALFEE/100 as WHOLE_VEHICLE_ACTUALFEE,
		ACCOUNT_NAME,
		ACCOUNT_CODE,
		ACCOUNT_BANK, BILL_WEIGHT, PICKUP_FEE/100 as PICKUP_FEE,
		SERVICE_FEE/100 as SERVICE_FEE,
		PRE_ARRIVE_TIME,
		TRANSPORT_TYPE,
		ADD_TIME, INSURANCE_RATE,
		INSURANCE_FEE/100 as INSURANCE_FEE,
		UNIT_PRICE/100 AS UNIT_PRICE,CONTACT_ADDRESS_ID,
		FLIGHT_NUMBER_TYPE,
		COLLECTION_DEPARTMENT,
		TRANSPORTATION_REMARK,IS_PASS_OWN_DEPARTMENT,
		PAPER_NUM,WOOD_NUM,FIBRE_NUM,SALVER_NUM,MEMBRANE_NUM,OTHER_PACKAGE,DELIVERY_CUSTOMER_CONTACT_ID,RECEIVE_CUSTOMER_CONTACT_ID,
		PENDING_TYPE,LICENSE_PLATE_NUM,ORDER_VEHICLE_NUM,
		CREATE_USER_NAME,CREATE_USER_DEPT_NAME
		,RECEIVE_ORG_NAME,CUSTOMER_PICKUP_ORG_NAME,LOAD_ORG_NAME,LAST_LOAD_ORG_NAME,
		TRANSFER_START_ORG_CODE,
		TRANSFER_START_ORG_NAME,KILOMETER,IS_INIT,IS_ECONOMY_GOODS,ECONOMY_GOODS_TYPE,DELIVERY_BIG_CUSTOMER,RECEIVE_BIG_CUSTOMER
	</sql>
	<!-- 用于查询的字段：主要是在金额的字段上除以100 -->
	<sql id="Base_Column_List_Select">
		ID, WAYBILL_NO, ORDER_NO, ORDER_CHANNEL,ORDER_PAID_METHOD,
		DELIVERY_CUSTOMER_ID,
		DELIVERY_CUSTOMER_CODE,
		DELIVERY_CUSTOMER_NAME,
		DELIVERY_CUSTOMER_MOBILEPHONE, DELIVERY_CUSTOMER_PHONE,
		DELIVERY_CUSTOMER_CONTACT,
		DELIVERY_CUSTOMER_NATION_CODE,
		DELIVERY_CUSTOMER_PROV_CODE,
		DELIVERY_CUSTOMER_CITY_CODE,
		DELIVERY_CUSTOMER_DIST_CODE, DELIVERY_CUSTOMER_ADDRESS,
		RECEIVE_CUSTOMER_ID,
		RECEIVE_CUSTOMER_CODE,
		RECEIVE_CUSTOMER_NAME,
		RECEIVE_CUSTOMER_MOBILEPHONE, RECEIVE_CUSTOMER_PHONE,
		RECEIVE_CUSTOMER_CONTACT,
		RECEIVE_CUSTOMER_NATION_CODE,
		RECEIVE_CUSTOMER_PROV_CODE, RECEIVE_CUSTOMER_CITY_CODE,
		RECEIVE_CUSTOMER_DIST_CODE, RECEIVE_CUSTOMER_ADDRESS,
		RECEIVE_ORG_CODE, PRODUCT_ID,
		PRODUCT_CODE, RECEIVE_METHOD,
		CUSTOMER_PICKUP_ORG_CODE, LOAD_METHOD,
		TARGET_ORG_CODE,
		PICKUP_TO_DOOR,
		DRIVER_CODE, PICKUP_CENTRALIZED, LOAD_LINE_CODE, LOAD_ORG_CODE,
		LAST_LOAD_ORG_CODE,
		PRE_DEPARTURE_TIME, PRE_CUSTOMER_PICKUP_TIME,
		CAR_DIRECT_DELIVERY, GOODS_NAME,
		GOODS_QTY_TOTAL,
		GOODS_WEIGHT_TOTAL,
		GOODS_VOLUME_TOTAL, GOODS_SIZE, GOODS_TYPE_CODE, PRECIOUS_GOODS,
		SPECIAL_SHAPED_GOODS, OUTER_NOTES, INNER_NOTES, GOODS_PACKAGE,
		INSURANCE_AMOUNT/100 as INSURANCE_AMOUNT,
		COD_AMOUNT/100 as COD_AMOUNT,
		COD_RATE, COD_FEE/100 as COD_FEE, REFUND_TYPE,
		RETURN_BILL_TYPE,
		SECRET_PREPAID, TO_PAY_AMOUNT/100 as TO_PAY_AMOUNT,
		PRE_PAY_AMOUNT/100
		as PRE_PAY_AMOUNT, DELIVERY_GOODS_FEE/100 as
		DELIVERY_GOODS_FEE,
		OTHER_FEE/100 as OTHER_FEE, PACKAGE_FEE/100 as
		PACKAGE_FEE,
		PROMOTIONS_FEE/100 as PROMOTIONS_FEE, BILLING_TYPE,
		TRANSPORT_FEE/100
		as TRANSPORT_FEE, VALUE_ADD_FEE/100 as VALUE_ADD_FEE, PAID_METHOD,
		ARRIVE_TYPE, ACTIVE, FORBIDDEN_LINE, FREIGHT_METHOD,
		FLIGHT_SHIFT,
		TOTAL_FEE/100 as TOTAL_FEE, PROMOTIONS_CODE, CREATE_TIME,
		MODIFY_TIME,
		BILL_TIME, CREATE_USER_CODE,
		MODIFY_USER_CODE, CREATE_ORG_CODE,
		MODIFY_ORG_CODE, REF_ID, REF_CODE, CURRENCY_CODE,
		IS_WHOLE_VEHICLE,
		WHOLE_VEHICLE_APPFEE/100 as WHOLE_VEHICLE_APPFEE,
		WHOLE_VEHICLE_ACTUALFEE/100 as WHOLE_VEHICLE_ACTUALFEE, ACCOUNT_NAME,
		ACCOUNT_CODE,
		ACCOUNT_BANK, BILL_WEIGHT, PICKUP_FEE/100 as PICKUP_FEE,
		SERVICE_FEE/100 as
		SERVICE_FEE, PRE_ARRIVE_TIME, TRANSPORT_TYPE,
		ADD_TIME, INSURANCE_RATE, INSURANCE_FEE/100 as
		INSURANCE_FEE,UNIT_PRICE/100 AS UNIT_PRICE,CONTACT_ADDRESS_ID,
		FLIGHT_NUMBER_TYPE,
		COLLECTION_DEPARTMENT,
		TRANSPORTATION_REMARK,IS_PASS_OWN_DEPARTMENT,
		PAPER_NUM,WOOD_NUM,FIBRE_NUM,SALVER_NUM,MEMBRANE_NUM,OTHER_PACKAGE,DELIVERY_CUSTOMER_CONTACT_ID,RECEIVE_CUSTOMER_CONTACT_ID,
		PENDING_TYPE,LICENSE_PLATE_NUM,ORDER_VEHICLE_NUM,
		CREATE_USER_NAME,CREATE_USER_DEPT_NAME
		,RECEIVE_ORG_NAME,CUSTOMER_PICKUP_ORG_NAME,LOAD_ORG_NAME,LAST_LOAD_ORG_NAME,
		TRANSFER_START_ORG_CODE,
		TRANSFER_START_ORG_NAME,KILOMETER,IS_INIT,IS_ECONOMY_GOODS,ECONOMY_GOODS_TYPE,DELIVERY_BIG_CUSTOMER,RECEIVE_BIG_CUSTOMER,IS_EXPRESS,FREE_PICKUP_GOODS,IS_ECS
	</sql>
	<!-- 新增免费接货字段 -->
	<sql id="Base_Column_List_FreePickup">
		ID, WAYBILL_NO, ORDER_NO, ORDER_CHANNEL,ORDER_PAID_METHOD,
		DELIVERY_CUSTOMER_ID,
		DELIVERY_CUSTOMER_CODE,
		DELIVERY_CUSTOMER_NAME,
		DELIVERY_CUSTOMER_MOBILEPHONE, DELIVERY_CUSTOMER_PHONE,
		DELIVERY_CUSTOMER_CONTACT,
		DELIVERY_CUSTOMER_NATION_CODE,
		DELIVERY_CUSTOMER_PROV_CODE,
		DELIVERY_CUSTOMER_CITY_CODE,
		DELIVERY_CUSTOMER_DIST_CODE, DELIVERY_CUSTOMER_ADDRESS,
		RECEIVE_CUSTOMER_ID,
		RECEIVE_CUSTOMER_CODE,
		RECEIVE_CUSTOMER_NAME,
		RECEIVE_CUSTOMER_MOBILEPHONE, RECEIVE_CUSTOMER_PHONE,
		RECEIVE_CUSTOMER_CONTACT,
		RECEIVE_CUSTOMER_NATION_CODE,
		RECEIVE_CUSTOMER_PROV_CODE, RECEIVE_CUSTOMER_CITY_CODE,
		RECEIVE_CUSTOMER_DIST_CODE, RECEIVE_CUSTOMER_ADDRESS,
		RECEIVE_ORG_CODE, PRODUCT_ID,
		PRODUCT_CODE, RECEIVE_METHOD,
		CUSTOMER_PICKUP_ORG_CODE, LOAD_METHOD,
		TARGET_ORG_CODE,
		PICKUP_TO_DOOR,
		DRIVER_CODE, PICKUP_CENTRALIZED, LOAD_LINE_CODE, LOAD_ORG_CODE,
		LAST_LOAD_ORG_CODE,
		PRE_DEPARTURE_TIME, PRE_CUSTOMER_PICKUP_TIME,
		CAR_DIRECT_DELIVERY, GOODS_NAME,
		GOODS_QTY_TOTAL,
		GOODS_WEIGHT_TOTAL,
		GOODS_VOLUME_TOTAL, GOODS_SIZE, GOODS_TYPE_CODE, PRECIOUS_GOODS,
		SPECIAL_SHAPED_GOODS, OUTER_NOTES, INNER_NOTES, GOODS_PACKAGE,
		INSURANCE_AMOUNT/100 as INSURANCE_AMOUNT,
		COD_AMOUNT/100 as COD_AMOUNT,
		COD_RATE, COD_FEE/100 as COD_FEE, REFUND_TYPE,
		RETURN_BILL_TYPE,
		SECRET_PREPAID, TO_PAY_AMOUNT/100 as TO_PAY_AMOUNT,
		PRE_PAY_AMOUNT/100
		as PRE_PAY_AMOUNT, DELIVERY_GOODS_FEE/100 as
		DELIVERY_GOODS_FEE,
		OTHER_FEE/100 as OTHER_FEE, PACKAGE_FEE/100 as
		PACKAGE_FEE,
		PROMOTIONS_FEE/100 as PROMOTIONS_FEE, BILLING_TYPE,
		TRANSPORT_FEE/100
		as TRANSPORT_FEE, VALUE_ADD_FEE/100 as VALUE_ADD_FEE, PAID_METHOD,
		ARRIVE_TYPE, ACTIVE, FORBIDDEN_LINE, FREIGHT_METHOD,
		FLIGHT_SHIFT,
		TOTAL_FEE/100 as TOTAL_FEE, PROMOTIONS_CODE, CREATE_TIME,
		MODIFY_TIME,
		BILL_TIME, CREATE_USER_CODE,
		MODIFY_USER_CODE, CREATE_ORG_CODE,
		MODIFY_ORG_CODE, REF_ID, REF_CODE, CURRENCY_CODE,
		IS_WHOLE_VEHICLE,
		WHOLE_VEHICLE_APPFEE/100 as WHOLE_VEHICLE_APPFEE,
		WHOLE_VEHICLE_ACTUALFEE/100 as WHOLE_VEHICLE_ACTUALFEE, ACCOUNT_NAME,
		ACCOUNT_CODE,
		ACCOUNT_BANK, BILL_WEIGHT, PICKUP_FEE/100 as PICKUP_FEE,
		SERVICE_FEE/100 as
		SERVICE_FEE, PRE_ARRIVE_TIME, TRANSPORT_TYPE,
		ADD_TIME, INSURANCE_RATE, INSURANCE_FEE/100 as
		INSURANCE_FEE,UNIT_PRICE/100 AS UNIT_PRICE,CONTACT_ADDRESS_ID,
		FLIGHT_NUMBER_TYPE,
		COLLECTION_DEPARTMENT,
		TRANSPORTATION_REMARK,IS_PASS_OWN_DEPARTMENT,
		PAPER_NUM,WOOD_NUM,FIBRE_NUM,SALVER_NUM,MEMBRANE_NUM,OTHER_PACKAGE,DELIVERY_CUSTOMER_CONTACT_ID,RECEIVE_CUSTOMER_CONTACT_ID,
		PENDING_TYPE,LICENSE_PLATE_NUM,ORDER_VEHICLE_NUM,
		CREATE_USER_NAME,CREATE_USER_DEPT_NAME
		,RECEIVE_ORG_NAME,CUSTOMER_PICKUP_ORG_NAME,LOAD_ORG_NAME,LAST_LOAD_ORG_NAME,
		TRANSFER_START_ORG_CODE,
		TRANSFER_START_ORG_NAME,KILOMETER,IS_INIT,IS_ECONOMY_GOODS,ECONOMY_GOODS_TYPE,DELIVERY_BIG_CUSTOMER,RECEIVE_BIG_CUSTOMER,IS_EXPRESS,FREE_PICKUP_GOODS,IS_ECS
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List_Select" />
		from PKP.T_SRV_WAYBILL
		where ID = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		PKP.T_SRV_WAYBILL
		where ID = #{id,jdbcType=VARCHAR}
	</delete>

	<!-- 根据运单号和订单号查询运单基本信息 。 1.zxy 20130916 修改:active加if判断 -->
	<select id="selectByWaybillNoAndOrderNo" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillQueryArgsDto">

		select * from (
		select	/*模块：接送货-运单查询-根据运单号和订单号查询运单基本信息*/
		<include refid="Base_Column_List_Select" />
		from PKP.T_SRV_WAYBILL
		where 1 = 1
			<if test="active != null and  active != '' ">
				and ACTIVE = #{active,jdbcType=CHAR}
			</if>
			<!-- 防止出现一个运单号对应多个运单号时报错的情况出现 -->

			<if test="waybillNo != null and  waybillNo != '' ">
				and WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>
			<if test="orderNo != null and  orderNo != '' ">
				and ORDER_NO = #{orderNo,jdbcType=VARCHAR}
			</if>
		) where  ROWNUM = 1
	</select>
	
	<select id="selectNewByWaybillNoAndOrderNo" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillQueryArgsDto">

		select 
		  k.WAYBILL_NO, 
		  k.GOODS_QTY_TOTAL,
		  k.GOODS_WEIGHT_TOTAL,
		  k.PRODUCT_CODE
		from PKP.T_SRV_WAYBILL k
		  <where>
		     <if test="active != null and  active != '' ">
				 ACTIVE = #{active,jdbcType=CHAR}
			</if>

			<if test="waybillNo != null and  waybillNo != '' ">
				and WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>
		  </where>
	</select>
	
	<!-- 根据运单号查询运单基本信息 。-->
	<select id="selectWaybillBasicInfoByWaybillNo" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillQueryArgsDto">

		select * from (
		select	/*模块：接送货-变更运单-根据运单号查询运单基本信息*/
		<include refid="Base_Column_List_FreePickup" />
		from PKP.T_SRV_WAYBILL
		where 1 = 1
			<if test="active != null and  active != '' ">
				and ACTIVE = #{active,jdbcType=CHAR}
			</if>
			<!-- 防止出现一个运单号对应多个运单号时报错的情况出现 -->

			<if test="waybillNo != null and  waybillNo != '' ">
				and WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>
			
		order
		by CREATE_TIME desc
		) where  ROWNUM = 1
	</select>

	<!-- 根据查询条件查询该发货客户当天在当前收货部门所发第一票运单信息 -->
	<select id="selectFirstDeliveryWaybill" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.domain.WaybillEntity">

		SELECT	/*模块：接送货-运单查询-查询客户所发第一票货*/
		W.WAYBILL_NO,W.ID,W.PAID_METHOD,W.TO_PAY_AMOUNT/100 AS TO_PAY_AMOUNT,
		W.CUSTOMER_PICKUP_ORG_CODE,W.CURRENCY_CODE,W.PRODUCT_CODE,W.IS_WHOLE_VEHICLE,
		W.RECEIVE_METHOD,W.TOTAL_FEE/100 AS TOTAL_FEE,
		W.INSURANCE_AMOUNT/100
		AS INSURANCE_AMOUNT,
		W.COD_AMOUNT/100 AS
		COD_AMOUNT,W.GOODS_QTY_TOTAL,W.LAST_LOAD_ORG_CODE,W.ORDER_NO,
		W.DELIVERY_CUSTOMER_MOBILEPHONE,W.RECEIVE_CUSTOMER_CONTACT,
		W.RECEIVE_CUSTOMER_MOBILEPHONE,W.DELIVERY_CUSTOMER_CONTACT,
		W.RECEIVE_ORG_CODE,W.WAYBILL_NO,W.FREIGHT_METHOD,W.BILL_TIME

		FROM
		PKP.T_SRV_WAYBILL W
		LEFT JOIN PKP.T_SRV_ACTUAL_FREIGHT F ON
		F.WAYBILL_NO = W.WAYBILL_NO
		WHERE ROWNUM = 1
		  <!-- 必须是有效的 -->
		  AND W.ACTIVE = #{active,jdbcType=CHAR}
		  <!-- 排除作废和中止的运单,为空时表示还未补录 -->
		  AND F.STATUS NOT IN ('ABORTED','OBSOLETE')
		<!-- 收货部门 ，必须要有收货部门 -->
		  AND W.RECEIVE_ORG_CODE = #{receiveOrgCode,jdbcType=VARCHAR}
		  <!-- 发货客户编码 -->
		  <if test="deliveryCustomerCode != null and  deliveryCustomerCode != '' ">
			AND W.DELIVERY_CUSTOMER_CODE =
			#{deliveryCustomerCode,jdbcType=VARCHAR}
 		  </if>
 		  <!-- 发货客户手机 -->
		<if
			test="deliveryCustomerMobilephone != null and  deliveryCustomerMobilephone != '' ">
			AND W.DELIVERY_CUSTOMER_MOBILEPHONE =
			#{deliveryCustomerMobilephone,jdbcType=VARCHAR}
 		  </if>
 		  <!-- 发货客户电话 -->
 		  <if test="deliveryCustomerPhone != null and  deliveryCustomerPhone != '' ">
			AND W.DELIVERY_CUSTOMER_PHONE =
			#{deliveryCustomerPhone,jdbcType=VARCHAR}
 		  </if>

		<!-- 当日8点 AND W.BILL_TIME <![CDATA[ >= ]]> TRUNC(#{billTime,jdbcType=TIMESTAMP})+8/24 -->
		<!-- 次日8点 AND W.BILL_TIME <![CDATA[ < ]]> TRUNC(#{billTime,jdbcType=TIMESTAMP})+1+8/24 -->

		AND (
 		  	<!-- 当前时间大于等于8点时，时间取值范围应该在：当天8点到次日8点之间 -->
		#{billTime,jdbcType=TIMESTAMP} <![CDATA[ >= ]]>
		(TRUNC(#{billTime,jdbcType=TIMESTAMP}) + 8 / 24) AND (W.BILL_TIME <![CDATA[ >= ]]>
		TRUNC(#{billTime,jdbcType=TIMESTAMP}) + 8 / 24 AND W.BILL_TIME <![CDATA[ < ]]>
		TRUNC(#{billTime,jdbcType=TIMESTAMP}) + 1 + 8 / 24)
 		  	<!-- 当前时间小于8点时，时间取值范围应该在：前一天8点到当天8点之间 -->
		OR (#{billTime,jdbcType=TIMESTAMP} <![CDATA[ < ]]>
		(TRUNC(#{billTime,jdbcType=TIMESTAMP}) + 8 / 24) AND (W.BILL_TIME <![CDATA[ >= ]]>
		TRUNC(#{billTime,jdbcType=TIMESTAMP})-1 + 8 / 24 AND W.BILL_TIME <![CDATA[ < ]]>
		TRUNC(#{billTime,jdbcType=TIMESTAMP}) + 8 / 24))
   		  )

   		  <!-- 运输性质去除快递 -->
 		  <if test="productCode != null and  productCode != '' ">
			AND W.PRODUCT_CODE <![CDATA[ <> ]]>
			#{productCode,jdbcType=VARCHAR}
 		  </if>
		  <if test="isExpress!=null and isExpress!=''">
		 <![CDATA[ AND W.PRODUCT_CODE not in ('PACKAGE','RCP','EPEP')]]>
 		  </if>
 		ORDER BY W.BILL_TIME  ASC
	</select>

	<!-- 根据运单号查询不含PDA待补录的运单基本信息 -->
	<select id="selectByWaybillNoExceptPDAPending" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillQueryArgsDto">
		select	/*模块：接送货-运单查询-根据运单号查询不含PDA待补录的运单基本信息 */
		<include refid="Base_Column_List_Select" />
		from PKP.T_SRV_WAYBILL
		<where>
			<!-- 防止出现一个运单号对应多个运单号时报错的情况出现 -->
			ROWNUM = 1
			<if test="active != null and  active != '' ">
				and ACTIVE = #{active,jdbcType=CHAR}
			</if>
			<if test="waybillNo != null and  waybillNo != '' ">
				and WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>
			<if test="waybillStatus != null and waybillStatus != '' ">
				and PENDING_TYPE <![CDATA[  <>  ]]>
				#{waybillStatus,jdbcType=VARCHAR}
			</if>
		</where>
	</select>

	<!-- 根据运单号、流水号查询货签基本信息 -->
	<select id="selectBySerialNo" resultMap="labeledGoodResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillQueryArgsDto">
		select	/*模块：接送货-装车-根据运单号、流水号查询货签基本信息*/
		ID
		from PKP.T_SRV_LABELED_GOOD L
		<where>
			<if test="active != null and  active != '' ">
				ACTIVE = #{active,jdbcType=CHAR}
			</if>
			<if test="waybillNo != null and waybillNo != '' ">
				AND WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>
			<if test="serialNo != null and serialNo != '' ">
				AND SERIAL_NO = #{serialNo,jdbcType=VARCHAR}
			</if>
		</where>
	</select>

	<select id="selectByWaybillNoList" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select	/*模块：接送货-运单-通过运单编号集合查询运单*/
		<include refid="Base_Column_List_Select" />
		from PKP.T_SRV_WAYBILL
		<where>
			and ACTIVE = #{active,jdbcType=CHAR}
			<if test="ids != null">
				and WAYBILL_NO in
				<foreach item="item" index="index" collection="ids" open="("
					separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</select>
	
	<select id="selectTotalAmount" resultType="java.lang.String"
		parameterType="java.util.Map">
		SELECT	/*模块：接送货-运单-通过开单时间和发货客户编码查询(预付+到付-代收货款)总金额*/
		NVL(SUM(PRE_PAY_AMOUNT+TO_PAY_AMOUNT-COD_AMOUNT),0)
		FROM PKP.T_SRV_WAYBILL
		WHERE ACTIVE = 'Y'
			AND BILL_TIME <![CDATA[ >= ]]> #{beginTime,jdbcType=TIMESTAMP} 
			AND BILL_TIME <![CDATA[ < ]]> #{endTime,jdbcType=TIMESTAMP} 
			AND DELIVERY_CUSTOMER_CODE = #{customerCode,jdbcType=VARCHAR}
	</select>

	<select id="selectLastWaybill" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select	/*模块：接送货-运单-查询最近一次建立的运单*/
		<include refid="Base_Column_List_Select" />
		from PKP.T_SRV_WAYBILL
		where CREATE_ORG_CODE =
		#{orgCode,jdbcType=VARCHAR}
		and ACTIVE = #{active,jdbcType=CHAR}
		order
		by CREATE_TIME desc
	</select>

	<insert id="insert"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.domain.WaybillEntity">
		insert into PKP.T_SRV_WAYBILL (ID, WAYBILL_NO, ORDER_NO,
		ORDER_CHANNEL,ORDER_PAID_METHOD,
		DELIVERY_CUSTOMER_ID,
		DELIVERY_CUSTOMER_CODE,
		DELIVERY_CUSTOMER_NAME,
		DELIVERY_CUSTOMER_MOBILEPHONE,
		DELIVERY_CUSTOMER_PHONE,
		DELIVERY_CUSTOMER_CONTACT,
		DELIVERY_CUSTOMER_NATION_CODE,
		DELIVERY_CUSTOMER_PROV_CODE,
		DELIVERY_CUSTOMER_CITY_CODE,
		DELIVERY_CUSTOMER_DIST_CODE,
		DELIVERY_CUSTOMER_ADDRESS,
		RECEIVE_CUSTOMER_ID,
		RECEIVE_CUSTOMER_CODE,
		RECEIVE_CUSTOMER_NAME,
		RECEIVE_CUSTOMER_MOBILEPHONE,
		RECEIVE_CUSTOMER_PHONE,
		RECEIVE_CUSTOMER_CONTACT,
		RECEIVE_CUSTOMER_NATION_CODE,
		RECEIVE_CUSTOMER_PROV_CODE,
		RECEIVE_CUSTOMER_CITY_CODE,
		RECEIVE_CUSTOMER_DIST_CODE,
		RECEIVE_CUSTOMER_ADDRESS,
		RECEIVE_ORG_CODE,
		PRODUCT_ID, PRODUCT_CODE,
		RECEIVE_METHOD,
		CUSTOMER_PICKUP_ORG_CODE,
		LOAD_METHOD,
		TARGET_ORG_CODE,
		PICKUP_TO_DOOR,
		DRIVER_CODE,
		PICKUP_CENTRALIZED, LOAD_LINE_CODE,
		LOAD_ORG_CODE,
		LAST_LOAD_ORG_CODE,
		PRE_DEPARTURE_TIME,
		PRE_CUSTOMER_PICKUP_TIME,
		CAR_DIRECT_DELIVERY,
		GOODS_NAME,
		GOODS_QTY_TOTAL,
		GOODS_WEIGHT_TOTAL,
		GOODS_VOLUME_TOTAL,
		GOODS_SIZE,
		GOODS_TYPE_CODE, PRECIOUS_GOODS,
		SPECIAL_SHAPED_GOODS,
		OUTER_NOTES,
		INNER_NOTES, GOODS_PACKAGE,
		INSURANCE_AMOUNT, COD_AMOUNT,
		COD_RATE,
		COD_FEE, REFUND_TYPE,
		RETURN_BILL_TYPE,
		SECRET_PREPAID,
		TO_PAY_AMOUNT,
		PRE_PAY_AMOUNT,
		DELIVERY_GOODS_FEE, OTHER_FEE,
		PACKAGE_FEE,
		PROMOTIONS_FEE,
		BILLING_TYPE, TRANSPORT_FEE,
		VALUE_ADD_FEE,
		PAID_METHOD,
		ARRIVE_TYPE,
		ACTIVE, FORBIDDEN_LINE, FREIGHT_METHOD,
		FLIGHT_SHIFT,
		TOTAL_FEE,
		PROMOTIONS_CODE,
		CREATE_TIME, MODIFY_TIME,
		BILL_TIME,
		CREATE_USER_CODE,
		MODIFY_USER_CODE, CREATE_ORG_CODE,
		MODIFY_ORG_CODE,
		REF_ID, REF_CODE,
		CURRENCY_CODE, IS_WHOLE_VEHICLE,
		WHOLE_VEHICLE_APPFEE,
		WHOLE_VEHICLE_ACTUALFEE, ACCOUNT_NAME,
		ACCOUNT_CODE,
		ACCOUNT_BANK,
		BILL_WEIGHT, PICKUP_FEE,
		SERVICE_FEE,
		PRE_ARRIVE_TIME, TRANSPORT_TYPE,
		ADD_TIME, INSURANCE_RATE,
		INSURANCE_FEE, UNIT_PRICE,CONTACT_ADDRESS_ID,
		FLIGHT_NUMBER_TYPE,
		COLLECTION_DEPARTMENT,
		TRANSPORTATION_REMARK,IS_PASS_OWN_DEPARTMENT,
		PAPER_NUM,WOOD_NUM,FIBRE_NUM,SALVER_NUM,MEMBRANE_NUM,OTHER_PACKAGE,DELIVERY_CUSTOMER_CONTACT_ID,
		RECEIVE_CUSTOMER_CONTACT_ID,PENDING_TYPE,LICENSE_PLATE_NUM,ORDER_VEHICLE_NUM,
		CREATE_USER_NAME,CREATE_USER_DEPT_NAME
		,RECEIVE_ORG_NAME,CUSTOMER_PICKUP_ORG_NAME,LOAD_ORG_NAME,LAST_LOAD_ORG_NAME,
		TRANSFER_START_ORG_CODE,
		TRANSFER_START_ORG_NAME,KILOMETER,IS_ECONOMY_GOODS,ECONOMY_GOODS_TYPE,DELIVERY_BIG_CUSTOMER,RECEIVE_BIG_CUSTOMER,IS_EXPRESS,
		FREE_PICKUP_GOODS
		)
		values (#{id,jdbcType=VARCHAR}, #{waybillNo,jdbcType=VARCHAR},
		#{orderNo,jdbcType=VARCHAR},
		#{orderChannel,jdbcType=VARCHAR},#{orderPaidMethod,jdbcType=VARCHAR},
		#{deliveryCustomerId,jdbcType=VARCHAR},
		#{deliveryCustomerCode,jdbcType=VARCHAR},
		#{deliveryCustomerName,jdbcType=VARCHAR},
		#{deliveryCustomerMobilephone,jdbcType=VARCHAR},
		#{deliveryCustomerPhone,jdbcType=VARCHAR},
		#{deliveryCustomerContact,jdbcType=VARCHAR},
		#{deliveryCustomerNationCode,jdbcType=VARCHAR},
		#{deliveryCustomerProvCode,jdbcType=VARCHAR},
		#{deliveryCustomerCityCode,jdbcType=VARCHAR},
		#{deliveryCustomerDistCode,jdbcType=VARCHAR},
		#{deliveryCustomerAddress,jdbcType=VARCHAR},
		#{receiveCustomerId,jdbcType=VARCHAR},
		#{receiveCustomerCode,jdbcType=VARCHAR},
		#{receiveCustomerName,jdbcType=VARCHAR},
		#{receiveCustomerMobilephone,jdbcType=VARCHAR},
		#{receiveCustomerPhone,jdbcType=VARCHAR},
		#{receiveCustomerContact,jdbcType=VARCHAR},
		#{receiveCustomerNationCode,jdbcType=VARCHAR},
		#{receiveCustomerProvCode,jdbcType=VARCHAR},
		#{receiveCustomerCityCode,jdbcType=VARCHAR},
		#{receiveCustomerDistCode,jdbcType=VARCHAR},
		#{receiveCustomerAddress,jdbcType=VARCHAR},
		#{receiveOrgCode,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR},
		#{productCode,jdbcType=VARCHAR},
		#{receiveMethod,jdbcType=VARCHAR},
		#{customerPickupOrgCode,jdbcType=VARCHAR},
		#{loadMethod,jdbcType=VARCHAR},
		#{targetOrgCode,jdbcType=VARCHAR},
		#{pickupToDoor,jdbcType=CHAR}, #{driverCode,jdbcType=VARCHAR},
		#{pickupCentralized,jdbcType=CHAR}, #{loadLineCode,jdbcType=VARCHAR},
		#{loadOrgCode,jdbcType=VARCHAR},
		#{lastLoadOrgCode,jdbcType=VARCHAR},
		#{preDepartureTime,jdbcType=TIMESTAMP},
		#{preCustomerPickupTime,jdbcType=TIMESTAMP},
		#{carDirectDelivery,jdbcType=CHAR}, #{goodsName,jdbcType=VARCHAR},
		#{goodsQtyTotal,jdbcType=DECIMAL},
		#{goodsWeightTotal,jdbcType=DECIMAL},
		#{goodsVolumeTotal,jdbcType=DECIMAL},
		#{goodsSize,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
		#{goodsTypeCode,jdbcType=VARCHAR}, #{preciousGoods,jdbcType=CHAR},
		#{specialShapedGoods,jdbcType=CHAR},
		#{outerNotes,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
		#{innerNotes,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
		#{goodsPackage,jdbcType=VARCHAR},
		#{insuranceAmount,jdbcType=DECIMAL}*100,
		#{codAmount,jdbcType=DECIMAL}*100, #{codRate,jdbcType=DECIMAL},
		#{codFee,jdbcType=DECIMAL}*100, #{refundType,jdbcType=VARCHAR},
		#{returnBillType,jdbcType=VARCHAR},
		#{secretPrepaid,jdbcType=CHAR},
		#{toPayAmount,jdbcType=DECIMAL}*100,
		#{prePayAmount,jdbcType=DECIMAL}*100,
		#{deliveryGoodsFee,jdbcType=DECIMAL}*100,
		#{otherFee,jdbcType=DECIMAL}*100, #{packageFee,jdbcType=DECIMAL}*100,
		#{promotionsFee,jdbcType=DECIMAL}*100,
		#{billingType,jdbcType=VARCHAR}, #{transportFee,jdbcType=DECIMAL}*100,
		#{valueAddFee,jdbcType=DECIMAL}*100, #{paidMethod,jdbcType=VARCHAR},
		#{arriveType,jdbcType=VARCHAR},
		#{active,jdbcType=CHAR},
		#{forbiddenLine,jdbcType=CHAR}, #{freightMethod,jdbcType=VARCHAR},
		#{flightShift,jdbcType=VARCHAR}, #{totalFee,jdbcType=DECIMAL}*100,
		#{promotionsCode,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{modifyTime,jdbcType=TIMESTAMP}, #{billTime,jdbcType=TIMESTAMP},
		#{createUserCode,jdbcType=VARCHAR},
		#{modifyUserCode,jdbcType=VARCHAR}, #{createOrgCode,jdbcType=VARCHAR},
		#{modifyOrgCode,jdbcType=VARCHAR}, #{refId,jdbcType=VARCHAR},
		#{refCode,jdbcType=VARCHAR},
		#{currencyCode,jdbcType=VARCHAR},
		#{isWholeVehicle,jdbcType=CHAR},
		#{wholeVehicleAppfee,jdbcType=DECIMAL}*100,
		#{wholeVehicleActualfee,jdbcType=DECIMAL}*100,
		#{accountName,jdbcType=VARCHAR}, #{accountCode,jdbcType=VARCHAR},
		#{accountBank,jdbcType=VARCHAR}, #{billWeight,jdbcType=DECIMAL},
		#{pickupFee,jdbcType=DECIMAL}*100,
		#{serviceFee,jdbcType=DECIMAL}*100,
		#{preArriveTime,jdbcType=TIMESTAMP},
		#{transportType,jdbcType=VARCHAR},
		#{addTime,jdbcType=TIMESTAMP},
		#{insuranceRate,jdbcType=DECIMAL},
		#{insuranceFee,jdbcType=DECIMAL}*100,
		#{unitPrice,jdbcType=DECIMAL}*100,
		#{contactAddressId,jdbcType=VARCHAR},#{flightNumberType,jdbcType=VARCHAR},
		#{collectionDepartment,jdbcType=VARCHAR},
		#{transportationRemark,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
		#{isPassOwnDepartment,jdbcType=CHAR},
		#{paperNum,jdbcType=NUMERIC},#{woodNum,jdbcType=NUMERIC},#{fibreNum,jdbcType=NUMERIC},#{salverNum,jdbcType=NUMERIC},
		#{membraneNum,jdbcType=NUMERIC},#{otherPackage,jdbcType=VARCHAR},
		#{deliverCustContactId,jdbcType=VARCHAR},#{receiverCustContactId,jdbcType=VARCHAR},
		#{pendingType,jdbcType=VARCHAR},#{licensePlateNum,jdbcType=VARCHAR},#{orderVehicleNum,jdbcType=VARCHAR},
		#{createUserName,jdbcType=VARCHAR},
		#{createUserDeptName,jdbcType=VARCHAR},
		#{receiveOrgName,jdbcType=VARCHAR},
		#{customerPickupOrgName,jdbcType=VARCHAR},
		#{loadOrgName,jdbcType=VARCHAR},
		#{lastLoadOrgName,jdbcType=VARCHAR},
		#{transferStartOrgCode,jdbcType=VARCHAR},#{transferStartOrgName,jdbcType=VARCHAR},#{kilometer,jdbcType=DECIMAL},
		#{isEconomyGoods,jdbcType=CHAR},#{economyGoodsType,jdbcType=VARCHAR},#{deliveryBigCustomer,jdbcType=CHAR},
		#{receiveBigCustomer,jdbcType=CHAR},#{isExpress,jdbcType=VARCHAR},
		#{freePickupGoods,jdbcType=CHAR}
		)
	</insert>
	<insert id="insertSelective"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.domain.WaybillEntity">
		insert into PKP.T_SRV_WAYBILL
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="waybillNo != null">
				WAYBILL_NO,
			</if>
			<if test="orderNo != null">
				ORDER_NO,
			</if>
			<if test="orderChannel != null">
				ORDER_CHANNEL,
			</if>
			<if test="orderPaidMethod != null">
				ORDER_PAID_METHOD,
			</if>
			<if test="deliveryCustomerId != null">
				DELIVERY_CUSTOMER_ID,
			</if>
			<if test="deliveryCustomerCode != null">
				DELIVERY_CUSTOMER_CODE,
			</if>
			<if test="deliveryCustomerName != null">
				DELIVERY_CUSTOMER_NAME,
			</if>
			<if test="deliveryCustomerMobilephone != null">
				DELIVERY_CUSTOMER_MOBILEPHONE,
			</if>
			<if test="deliveryCustomerPhone != null">
				DELIVERY_CUSTOMER_PHONE,
			</if>
			<if test="deliveryCustomerContact != null">
				DELIVERY_CUSTOMER_CONTACT,
			</if>
			<if test="deliveryCustomerNationCode != null">
				DELIVERY_CUSTOMER_NATION_CODE,
			</if>
			<if test="deliveryCustomerProvCode != null">
				DELIVERY_CUSTOMER_PROV_CODE,
			</if>
			<if test="deliveryCustomerCityCode != null">
				DELIVERY_CUSTOMER_CITY_CODE,
			</if>
			<if test="deliveryCustomerDistCode != null">
				DELIVERY_CUSTOMER_DIST_CODE,
			</if>
			<if test="deliveryCustomerAddress != null">
				DELIVERY_CUSTOMER_ADDRESS,
			</if>
			<if test="receiveCustomerId != null">
				RECEIVE_CUSTOMER_ID,
			</if>
			<if test="receiveCustomerCode != null">
				RECEIVE_CUSTOMER_CODE,
			</if>
			<if test="receiveCustomerName != null">
				RECEIVE_CUSTOMER_NAME,
			</if>
			<if test="receiveCustomerMobilephone != null">
				RECEIVE_CUSTOMER_MOBILEPHONE,
			</if>
			<if test="receiveCustomerPhone != null">
				RECEIVE_CUSTOMER_PHONE,
			</if>
			<if test="receiveCustomerContact != null">
				RECEIVE_CUSTOMER_CONTACT,
			</if>
			<if test="receiveCustomerNationCode != null">
				RECEIVE_CUSTOMER_NATION_CODE,
			</if>
			<if test="receiveCustomerProvCode != null">
				RECEIVE_CUSTOMER_PROV_CODE,
			</if>
			<if test="receiveCustomerCityCode != null">
				RECEIVE_CUSTOMER_CITY_CODE,
			</if>
			<if test="receiveCustomerDistCode != null">
				RECEIVE_CUSTOMER_DIST_CODE,
			</if>
			<if test="receiveCustomerAddress != null">
				RECEIVE_CUSTOMER_ADDRESS,
			</if>
			<if test="receiveOrgCode != null">
				RECEIVE_ORG_CODE,
			</if>
			<if test="productId != null">
				PRODUCT_ID,
			</if>
			<if test="productCode != null">
				PRODUCT_CODE,
			</if>
			<if test="receiveMethod != null">
				RECEIVE_METHOD,
			</if>
			<if test="customerPickupOrgCode != null">
				CUSTOMER_PICKUP_ORG_CODE,
			</if>
			<if test="loadMethod != null">
				LOAD_METHOD,
			</if>
			<if test="targetOrgCode != null">
				TARGET_ORG_CODE,
			</if>
			<if test="pickupToDoor != null">
				PICKUP_TO_DOOR,
			</if>
			<if test="driverCode != null">
				DRIVER_CODE,
			</if>
			<if test="pickupCentralized != null">
				PICKUP_CENTRALIZED,
			</if>
			<if test="loadLineCode != null">
				LOAD_LINE_CODE,
			</if>
			<if test="loadOrgCode != null">
				LOAD_ORG_CODE,
			</if>
			<if test="lastLoadOrgCode != null">
				LAST_LOAD_ORG_CODE,
			</if>
			<if test="preDepartureTime != null">
				PRE_DEPARTURE_TIME,
			</if>
			<if test="preCustomerPickupTime != null">
				PRE_CUSTOMER_PICKUP_TIME,
			</if>
			<if test="carDirectDelivery != null">
				CAR_DIRECT_DELIVERY,
			</if>
			<if test="goodsName != null">
				GOODS_NAME,
			</if>
			<if test="goodsQtyTotal != null">
				GOODS_QTY_TOTAL,
			</if>
			<if test="goodsWeightTotal != null">
				GOODS_WEIGHT_TOTAL,
			</if>
			<if test="goodsVolumeTotal != null">
				GOODS_VOLUME_TOTAL,
			</if>
			<if test="goodsSize != null">
				GOODS_SIZE,
			</if>
			<if test="goodsTypeCode != null">
				GOODS_TYPE_CODE,
			</if>
			<if test="preciousGoods != null">
				PRECIOUS_GOODS,
			</if>
			<if test="specialShapedGoods != null">
				SPECIAL_SHAPED_GOODS,
			</if>
			<if test="outerNotes != null">
				OUTER_NOTES,
			</if>
			<if test="innerNotes != null">
				INNER_NOTES,
			</if>
			<if test="goodsPackage != null">
				GOODS_PACKAGE,
			</if>
			<if test="insuranceAmount != null">
				INSURANCE_AMOUNT,
			</if>
			<if test="codAmount != null">
				COD_AMOUNT,
			</if>
			<if test="codRate != null">
				COD_RATE,
			</if>
			<if test="codFee != null">
				COD_FEE,
			</if>
			<if test="refundType != null">
				REFUND_TYPE,
			</if>
			<if test="returnBillType != null">
				RETURN_BILL_TYPE,
			</if>
			<if test="secretPrepaid != null">
				SECRET_PREPAID,
			</if>
			<if test="toPayAmount != null">
				TO_PAY_AMOUNT,
			</if>
			<if test="prePayAmount != null">
				PRE_PAY_AMOUNT,
			</if>
			<if test="deliveryGoodsFee != null">
				DELIVERY_GOODS_FEE,
			</if>
			<if test="otherFee != null">
				OTHER_FEE,
			</if>
			<if test="packageFee != null">
				PACKAGE_FEE,
			</if>
			<if test="promotionsFee != null">
				PROMOTIONS_FEE,
			</if>
			<if test="billingType != null">
				BILLING_TYPE,
			</if>
			<if test="transportFee != null">
				TRANSPORT_FEE,
			</if>
			<if test="valueAddFee != null">
				VALUE_ADD_FEE,
			</if>
			<if test="paidMethod != null">
				PAID_METHOD,
			</if>
			<if test="arriveType != null">
				ARRIVE_TYPE,
			</if>
			<if test="active != null">
				ACTIVE,
			</if>
			<if test="forbiddenLine != null">
				FORBIDDEN_LINE,
			</if>
			<if test="freightMethod != null">
				FREIGHT_METHOD,
			</if>
			<if test="flightShift != null">
				FLIGHT_SHIFT,
			</if>
			<if test="totalFee != null">
				TOTAL_FEE,
			</if>
			<if test="promotionsCode != null">
				PROMOTIONS_CODE,
			</if>
			<if test="createTime != null">
				CREATE_TIME,
			</if>
			<if test="modifyTime != null">
				MODIFY_TIME,
			</if>
			<if test="billTime != null">
				BILL_TIME,
			</if>
			<if test="createUserCode != null">
				CREATE_USER_CODE,
			</if>
			<if test="modifyUserCode != null">
				MODIFY_USER_CODE,
			</if>
			<if test="createOrgCode != null">
				CREATE_ORG_CODE,
			</if>
			<if test="modifyOrgCode != null">
				MODIFY_ORG_CODE,
			</if>
			<if test="refId != null">
				REF_ID,
			</if>
			<if test="refCode != null">
				REF_CODE,
			</if>
			<if test="currencyCode != null">
				CURRENCY_CODE,
			</if>
			<if test="isWholeVehicle != null">
				IS_WHOLE_VEHICLE,
			</if>
			<if test="wholeVehicleAppfee != null">
				WHOLE_VEHICLE_APPFEE,
			</if>
			<if test="wholeVehicleActualfee != null">
				WHOLE_VEHICLE_ACTUALFEE,
			</if>
			<if test="accountName != null">
				ACCOUNT_NAME,
			</if>
			<if test="accountCode != null">
				ACCOUNT_CODE,
			</if>
			<if test="accountBank != null">
				ACCOUNT_BANK,
			</if>
			<if test="billWeight != null">
				BILL_WEIGHT,
			</if>
			<if test="pickupFee != null">
				PICKUP_FEE,
			</if>
			<if test="serviceFee != null">
				SERVICE_FEE,
			</if>
			<if test="preArriveTime != null">
				PRE_ARRIVE_TIME,
			</if>
			<if test="transportType != null">
				TRANSPORT_TYPE,
			</if>
			<if test="addTime != null">
				ADD_TIME,
			</if>
			<if test="insuranceRate != null">
				INSURANCE_RATE,
			</if>
			<if test="insuranceFee != null">
				INSURANCE_FEE,
			</if>
			<if test="unitPrice != null">
				UNIT_PRICE,
			</if>
			<if test="contactAddressId != null">
				CONTACT_ADDRESS_ID,
			</if>
			<if test="flightNumberType != null">
				FLIGHT_NUMBER_TYPE,
			</if>
			<if test="collectionDepartment != null">
				COLLECTION_DEPARTMENT,
			</if>
			<if test="transportationRemark != null">
				TRANSPORTATION_REMARK,
			</if>
			<if test="isPassOwnDepartment != null">
				IS_PASS_OWN_DEPARTMENT,
			</if>
			<if test="pendingType != null">
				PENDING_TYPE,
			</if>
			<if test="licensePlateNum != null">
				LICENSE_PLATE_NUM,
			</if>
			<if test="orderVehicleNum != null">
				ORDER_VEHICLE_NUM,
			</if>
			<if test="createUserName != null and createUserName != '' ">
				CREATE_USER_NAME,
			</if>
			<if test="createUserDeptName != null and createUserDeptName != '' ">
				CREATE_USER_DEPT_NAME,
			</if>
			<if test="receiveOrgName != null and receiveOrgName != '' ">
				RECEIVE_ORG_NAME,
			</if>
			<if test="customerPickupOrgName != null and customerPickupOrgName != '' ">
				CUSTOMER_PICKUP_ORG_NAME,
			</if>
			<if test="loadOrgName != null and loadOrgName != '' ">
				LOAD_ORG_NAME,
			</if>
			<if test="lastLoadOrgName != null and lastLoadOrgName != '' ">
				LAST_LOAD_ORG_NAME,
			</if>
			<if test="transferStartOrgCode != null and transferStartOrgCode != '' ">
				TRANSFER_START_ORG_CODE,
			</if>
			<if test="transferStartOrgName != null and transferStartOrgName != '' ">
				TRANSFER_START_ORG_NAME,
			</if>
		    <if test="kilometer != null">
				kilometer,
			</if>
			<if test="isEconomyGoods != null">
				IS_ECONOMY_GOODS,
			</if>
			<if test="economyGoodsType != null">
				ECONOMY_GOODS_TYPE,
			</if>
			<if test="deliveryBigCustomer != null and deliveryBigCustomer != '' ">
				DELIVERY_BIG_CUSTOMER,
			</if>
			<if test="receiveBigCustomer != null and receiveBigCustomer != '' ">
				RECEIVE_BIG_CUSTOMER,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="waybillNo != null">
				#{waybillNo,jdbcType=VARCHAR},
			</if>
			<if test="orderNo != null">
				#{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="orderChannel != null">
				#{orderChannel,jdbcType=VARCHAR},
			</if>
			orderPaidMethod
			<if test="orderPaidMethod != null">
				#{orderPaidMethod,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerId != null">
				#{deliveryCustomerId,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerCode != null">
				#{deliveryCustomerCode,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerName != null">
				#{deliveryCustomerName,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerMobilephone != null">
				#{deliveryCustomerMobilephone,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerPhone != null">
				#{deliveryCustomerPhone,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerContact != null">
				#{deliveryCustomerContact,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerNationCode != null">
				#{deliveryCustomerNationCode,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerProvCode != null">
				#{deliveryCustomerProvCode,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerCityCode != null">
				#{deliveryCustomerCityCode,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerDistCode != null">
				#{deliveryCustomerDistCode,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerAddress != null">
				#{deliveryCustomerAddress,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerId != null">
				#{receiveCustomerId,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerCode != null">
				#{receiveCustomerCode,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerName != null">
				#{receiveCustomerName,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerMobilephone != null">
				#{receiveCustomerMobilephone,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerPhone != null">
				#{receiveCustomerPhone,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerContact != null">
				#{receiveCustomerContact,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerNationCode != null">
				#{receiveCustomerNationCode,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerProvCode != null">
				#{receiveCustomerProvCode,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerCityCode != null">
				#{receiveCustomerCityCode,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerDistCode != null">
				#{receiveCustomerDistCode,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerAddress != null">
				#{receiveCustomerAddress,jdbcType=VARCHAR},
			</if>
			<if test="receiveOrgCode != null">
				#{receiveOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="productId != null">
				#{productId,jdbcType=VARCHAR},
			</if>
			<if test="productCode != null">
				#{productCode,jdbcType=VARCHAR},
			</if>
			<if test="receiveMethod != null">
				#{receiveMethod,jdbcType=VARCHAR},
			</if>
			<if test="customerPickupOrgCode != null">
				#{customerPickupOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="loadMethod != null">
				#{loadMethod,jdbcType=VARCHAR},
			</if>
			<if test="targetOrgCode != null">
				#{targetOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="pickupToDoor != null">
				#{pickupToDoor,jdbcType=CHAR},
			</if>
			<if test="driverCode != null">
				#{driverCode,jdbcType=VARCHAR},
			</if>
			<if test="pickupCentralized != null">
				#{pickupCentralized,jdbcType=CHAR},
			</if>
			<if test="loadLineCode != null">
				#{loadLineCode,jdbcType=VARCHAR},
			</if>
			<if test="loadOrgCode != null">
				#{loadOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="lastLoadOrgCode != null">
				#{lastLoadOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="preDepartureTime != null">
				#{preDepartureTime,jdbcType=TIMESTAMP},
			</if>
			<if test="preCustomerPickupTime != null">
				#{preCustomerPickupTime,jdbcType=TIMESTAMP},
			</if>
			<if test="carDirectDelivery != null">
				#{carDirectDelivery,jdbcType=CHAR},
			</if>
			<if test="goodsName != null">
				#{goodsName,jdbcType=VARCHAR},
			</if>
			<if test="goodsQtyTotal != null">
				#{goodsQtyTotal,jdbcType=DECIMAL},
			</if>
			<if test="goodsWeightTotal != null">
				#{goodsWeightTotal,jdbcType=DECIMAL},
			</if>
			<if test="goodsVolumeTotal != null">
				#{goodsVolumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="goodsSize != null">
				#{goodsSize,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
			</if>
			<if test="goodsTypeCode != null">
				#{goodsTypeCode,jdbcType=VARCHAR},
			</if>
			<if test="preciousGoods != null">
				#{preciousGoods,jdbcType=CHAR},
			</if>
			<if test="specialShapedGoods != null">
				#{specialShapedGoods,jdbcType=CHAR},
			</if>
			<if test="outerNotes != null">
				#{outerNotes,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
			</if>
			<if test="innerNotes != null">
				#{innerNotes,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
			</if>
			<if test="goodsPackage != null">
				#{goodsPackage,jdbcType=VARCHAR},
			</if>
			<if test="insuranceAmount != null">
				#{insuranceAmount,jdbcType=DECIMAL}*100,
			</if>
			<if test="codAmount != null">
				#{codAmount,jdbcType=DECIMAL}*100,
			</if>
			<if test="codRate != null">
				#{codRate,jdbcType=DECIMAL},
			</if>
			<if test="codFee != null">
				#{codFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="refundType != null">
				#{refundType,jdbcType=VARCHAR},
			</if>
			<if test="returnBillType != null">
				#{returnBillType,jdbcType=VARCHAR},
			</if>
			<if test="secretPrepaid != null">
				#{secretPrepaid,jdbcType=CHAR},
			</if>
			<if test="toPayAmount != null">
				#{toPayAmount,jdbcType=DECIMAL}*100,
			</if>
			<if test="prePayAmount != null">
				#{prePayAmount,jdbcType=DECIMAL}*100,
			</if>
			<if test="deliveryGoodsFee != null">
				#{deliveryGoodsFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="otherFee != null">
				#{otherFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="packageFee != null">
				#{packageFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="promotionsFee != null">
				#{promotionsFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="billingType != null">
				#{billingType,jdbcType=VARCHAR},
			</if>
			<if test="transportFee != null">
				#{transportFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="valueAddFee != null">
				#{valueAddFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="paidMethod != null">
				#{paidMethod,jdbcType=VARCHAR},
			</if>
			<if test="arriveType != null">
				#{arriveType,jdbcType=VARCHAR},
			</if>
			<if test="active != null">
				#{active,jdbcType=CHAR},
			</if>
			<if test="forbiddenLine != null">
				#{forbiddenLine,jdbcType=CHAR},
			</if>
			<if test="freightMethod != null">
				#{freightMethod,jdbcType=VARCHAR},
			</if>
			<if test="flightShift != null">
				#{flightShift,jdbcType=VARCHAR},
			</if>
			<if test="totalFee != null">
				#{totalFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="promotionsCode != null">
				#{promotionsCode,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				#{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="billTime != null">
				#{billTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserCode != null">
				#{createUserCode,jdbcType=VARCHAR},
			</if>
			<if test="modifyUserCode != null">
				#{modifyUserCode,jdbcType=VARCHAR},
			</if>
			<if test="createOrgCode != null">
				#{createOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="modifyOrgCode != null">
				#{modifyOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="refId != null">
				#{refId,jdbcType=VARCHAR},
			</if>
			<if test="refCode != null">
				#{refCode,jdbcType=VARCHAR},
			</if>
			<if test="currencyCode != null">
				#{currencyCode,jdbcType=VARCHAR},
			</if>
			<if test="isWholeVehicle != null">
				#{isWholeVehicle,jdbcType=CHAR},
			</if>
			<if test="wholeVehicleAppfee != null">
				#{wholeVehicleAppfee,jdbcType=DECIMAL}*100,
			</if>
			<if test="wholeVehicleActualfee != null">
				#{wholeVehicleActualfee,jdbcType=DECIMAL}*100,
			</if>
			<if test="accountName != null">
				#{accountName,jdbcType=VARCHAR},
			</if>
			<if test="accountCode != null">
				#{accountCode,jdbcType=VARCHAR},
			</if>
			<if test="accountBank != null">
				#{accountBank,jdbcType=VARCHAR},
			</if>
			<if test="billWeight != null">
				#{billWeight,jdbcType=DECIMAL},
			</if>
			<if test="pickupFee != null">
				#{pickupFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="serviceFee != null">
				#{serviceFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="preArriveTime != null">
				#{preArriveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="transportType != null">
				#{transportType,jdbcType=VARCHAR},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="insuranceRate != null">
				#{insuranceRate,jdbcType=DECIMAL},
			</if>
			<if test="insuranceFee != null">
				#{insuranceFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="unitPrice != null">
				#{unitPrice,jdbcType=DECIMAL}*100,
			</if>
			<if test="contactAddressId != null">
				#{contactAddressId,jdbcType=VARCHAR},
			</if>
			<if test="flightNumberType != null">
				#{flightNumberType,jdbcType=VARCHAR},
			</if>
			<if test="collectionDepartment != null">
				#{collectionDepartment,jdbcType=VARCHAR},
			</if>
			<if test="transportationRemark != null">
				#{transportationRemark,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
			</if>
			<if test="isPassOwnDepartment != null">
				#{isPassOwnDepartment,jdbcType=CHAR},
			</if>
			<if test="pendingType != null">
				#{pendingType,jdbcType=VARCHAR},
			</if>
			<if test="licensePlateNum != null">
				#{licensePlateNum,jdbcType=VARCHAR},
			</if>
			<if test="orderVehicleNum != null">
				#{orderVehicleNum,jdbcType=VARCHAR},
			</if>
			<if test="createUserName != null and createUserName != '' ">
				#{createUserName,jdbcType=VARCHAR},
			</if>
			<if test="createUserDeptName != null and createUserDeptName != '' ">
				#{createUserDeptName,jdbcType=VARCHAR},
			</if>
			<if test="receiveOrgName != null and receiveOrgName != '' ">
				#{receiveOrgName,jdbcType=VARCHAR},
			</if>
			<if test="customerPickupOrgName != null and customerPickupOrgName != '' ">
				#{customerPickupOrgName,jdbcType=VARCHAR},
			</if>
			<if test="loadOrgName != null and loadOrgName != '' ">
				#{loadOrgName,jdbcType=VARCHAR},
			</if>
			<if test="lastLoadOrgName != null and lastLoadOrgName != '' ">
				#{lastLoadOrgName,jdbcType=VARCHAR},
			</if>
			<if test="transferStartOrgCode != null and transferStartOrgCode != '' ">
				#{transferStartOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="transferStartOrgName != null and transferStartOrgName != '' ">
				#{transferStartOrgName,jdbcType=VARCHAR},
			</if>
			<if test="kilometer != null">
				#{kilometer,jdbcType=DECIMAL},
			</if>
			<if test="isEconomyGoods != null">
				#{isEconomyGoods,jdbcType=CHAR},
			</if>
			<if test="economyGoodsType != null">
				#{economyGoodsType,jdbcType=VARCHAR},
			</if>
			<if test="deliveryBigCustomer != null and deliveryBigCustomer != '' ">
				#{deliveryBigCustomer,jdbcType=CHAR},
			</if>
			<if test="receiveBigCustomer != null and receiveBigCustomer != '' ">
			    #{receiveBigCustomer,jdbcType=CHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.domain.WaybillEntity">
		update PKP.T_SRV_WAYBILL
		<set>
			<if test="waybillNo != null">
				WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR},
			</if>
			<if test="orderNo != null">
				ORDER_NO = #{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="orderChannel != null">
				ORDER_CHANNEL = #{orderChannel,jdbcType=VARCHAR},
			</if>
			<if test="orderPaidMethod != null">
				order_paid_method = #{orderPaidMethod,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerId != null">
				DELIVERY_CUSTOMER_ID =
				#{deliveryCustomerId,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerCode != null">
				DELIVERY_CUSTOMER_CODE =
				#{deliveryCustomerCode,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerName != null">
				DELIVERY_CUSTOMER_NAME =
				#{deliveryCustomerName,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerMobilephone != null">
				DELIVERY_CUSTOMER_MOBILEPHONE =
				#{deliveryCustomerMobilephone,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerPhone != null">
				DELIVERY_CUSTOMER_PHONE =
				#{deliveryCustomerPhone,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerContact != null">
				DELIVERY_CUSTOMER_CONTACT =
				#{deliveryCustomerContact,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerNationCode != null">
				DELIVERY_CUSTOMER_NATION_CODE =
				#{deliveryCustomerNationCode,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerProvCode != null">
				DELIVERY_CUSTOMER_PROV_CODE =
				#{deliveryCustomerProvCode,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerCityCode != null">
				DELIVERY_CUSTOMER_CITY_CODE =
				#{deliveryCustomerCityCode,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerDistCode != null">
				DELIVERY_CUSTOMER_DIST_CODE =
				#{deliveryCustomerDistCode,jdbcType=VARCHAR},
			</if>
			<if test="deliveryCustomerAddress != null">
				DELIVERY_CUSTOMER_ADDRESS =
				#{deliveryCustomerAddress,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerId != null">
				RECEIVE_CUSTOMER_ID =
				#{receiveCustomerId,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerCode != null">
				RECEIVE_CUSTOMER_CODE =
				#{receiveCustomerCode,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerName != null">
				RECEIVE_CUSTOMER_NAME =
				#{receiveCustomerName,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerMobilephone != null">
				RECEIVE_CUSTOMER_MOBILEPHONE =
				#{receiveCustomerMobilephone,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerPhone != null">
				RECEIVE_CUSTOMER_PHONE =
				#{receiveCustomerPhone,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerContact != null">
				RECEIVE_CUSTOMER_CONTACT =
				#{receiveCustomerContact,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerNationCode != null">
				RECEIVE_CUSTOMER_NATION_CODE =
				#{receiveCustomerNationCode,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerProvCode != null">
				RECEIVE_CUSTOMER_PROV_CODE =
				#{receiveCustomerProvCode,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerCityCode != null">
				RECEIVE_CUSTOMER_CITY_CODE =
				#{receiveCustomerCityCode,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerDistCode != null">
				RECEIVE_CUSTOMER_DIST_CODE =
				#{receiveCustomerDistCode,jdbcType=VARCHAR},
			</if>
			<if test="receiveCustomerAddress != null">
				RECEIVE_CUSTOMER_ADDRESS =
				#{receiveCustomerAddress,jdbcType=VARCHAR},
			</if>
			<if test="receiveOrgCode != null">
				RECEIVE_ORG_CODE = #{receiveOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="productId != null">
				PRODUCT_ID = #{productId,jdbcType=VARCHAR},
			</if>
			<if test="productCode != null">
				PRODUCT_CODE = #{productCode,jdbcType=VARCHAR},
			</if>
			<if test="receiveMethod != null">
				RECEIVE_METHOD = #{receiveMethod,jdbcType=VARCHAR},
			</if>
			<if test="customerPickupOrgCode != null">
				CUSTOMER_PICKUP_ORG_CODE =
				#{customerPickupOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="loadMethod != null">
				LOAD_METHOD = #{loadMethod,jdbcType=VARCHAR},
			</if>
			<if test="targetOrgCode != null">
				TARGET_ORG_CODE = #{targetOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="pickupToDoor != null">
				PICKUP_TO_DOOR = #{pickupToDoor,jdbcType=CHAR},
			</if>
			<if test="driverCode != null">
				DRIVER_CODE = #{driverCode,jdbcType=VARCHAR},
			</if>
			<if test="pickupCentralized != null">
				PICKUP_CENTRALIZED = #{pickupCentralized,jdbcType=CHAR},
			</if>
			<if test="loadLineCode != null">
				LOAD_LINE_CODE = #{loadLineCode,jdbcType=VARCHAR},
			</if>
			<if test="loadOrgCode != null">
				LOAD_ORG_CODE = #{loadOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="lastLoadOrgCode != null">
				LAST_LOAD_ORG_CODE = #{lastLoadOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="preDepartureTime != null">
				PRE_DEPARTURE_TIME =
				#{preDepartureTime,jdbcType=TIMESTAMP},
			</if>
			<if test="preCustomerPickupTime != null">
				PRE_CUSTOMER_PICKUP_TIME =
				#{preCustomerPickupTime,jdbcType=TIMESTAMP},
			</if>
			<if test="carDirectDelivery != null">
				CAR_DIRECT_DELIVERY = #{carDirectDelivery,jdbcType=CHAR},
			</if>
			<if test="goodsName != null">
				GOODS_NAME = #{goodsName,jdbcType=VARCHAR},
			</if>
			<if test="goodsQtyTotal != null">
				GOODS_QTY_TOTAL = #{goodsQtyTotal,jdbcType=DECIMAL},
			</if>
			<if test="goodsWeightTotal != null">
				GOODS_WEIGHT_TOTAL =
				#{goodsWeightTotal,jdbcType=DECIMAL},
			</if>
			<if test="goodsVolumeTotal != null">
				GOODS_VOLUME_TOTAL =
				#{goodsVolumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="goodsSize != null">
				GOODS_SIZE =
				#{goodsSize,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
			</if>
			<if test="goodsTypeCode != null">
				GOODS_TYPE_CODE = #{goodsTypeCode,jdbcType=VARCHAR},
			</if>
			<if test="preciousGoods != null">
				PRECIOUS_GOODS = #{preciousGoods,jdbcType=CHAR},
			</if>
			<if test="specialShapedGoods != null">
				SPECIAL_SHAPED_GOODS =
				#{specialShapedGoods,jdbcType=CHAR},
			</if>
			<if test="outerNotes != null">
				OUTER_NOTES =
				#{outerNotes,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
			</if>
			<if test="innerNotes != null">
				INNER_NOTES =
				#{innerNotes,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
			</if>
			<if test="goodsPackage != null">
				GOODS_PACKAGE = #{goodsPackage,jdbcType=VARCHAR},
			</if>
			<if test="insuranceAmount != null">
				INSURANCE_AMOUNT =
				#{insuranceAmount,jdbcType=DECIMAL}*100,
			</if>
			<if test="codAmount != null">
				COD_AMOUNT = #{codAmount,jdbcType=DECIMAL}*100,
			</if>
			<if test="codRate != null">
				COD_RATE = #{codRate,jdbcType=DECIMAL},
			</if>
			<if test="codFee != null">
				COD_FEE = #{codFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="refundType != null">
				REFUND_TYPE = #{refundType,jdbcType=VARCHAR},
			</if>
			<if test="returnBillType != null">
				RETURN_BILL_TYPE = #{returnBillType,jdbcType=VARCHAR},
			</if>
			<if test="secretPrepaid != null">
				SECRET_PREPAID = #{secretPrepaid,jdbcType=CHAR},
			</if>
			<if test="toPayAmount != null">
				TO_PAY_AMOUNT = #{toPayAmount,jdbcType=DECIMAL}*100,
			</if>
			<if test="prePayAmount != null">
				PRE_PAY_AMOUNT = #{prePayAmount,jdbcType=DECIMAL}*100,
			</if>
			<if test="deliveryGoodsFee != null">
				DELIVERY_GOODS_FEE =
				#{deliveryGoodsFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="otherFee != null">
				OTHER_FEE = #{otherFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="packageFee != null">
				PACKAGE_FEE = #{packageFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="promotionsFee != null">
				PROMOTIONS_FEE = #{promotionsFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="billingType != null">
				BILLING_TYPE = #{billingType,jdbcType=VARCHAR},
			</if>
			<if test="transportFee != null">
				TRANSPORT_FEE = #{transportFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="valueAddFee != null">
				VALUE_ADD_FEE = #{valueAddFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="paidMethod != null">
				PAID_METHOD = #{paidMethod,jdbcType=VARCHAR},
			</if>
			<if test="arriveType != null">
				ARRIVE_TYPE = #{arriveType,jdbcType=VARCHAR},
			</if>
			<if test="active != null">
				ACTIVE = #{active,jdbcType=CHAR},
			</if>
			<if test="forbiddenLine != null">
				FORBIDDEN_LINE = #{forbiddenLine,jdbcType=CHAR},
			</if>
			<if test="freightMethod != null">
				FREIGHT_METHOD = #{freightMethod,jdbcType=VARCHAR},
			</if>
			<if test="flightShift != null">
				FLIGHT_SHIFT = #{flightShift,jdbcType=VARCHAR},
			</if>
			<if test="totalFee != null">
				TOTAL_FEE = #{totalFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="promotionsCode != null">
				PROMOTIONS_CODE = #{promotionsCode,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyTime != null">
				MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="billTime != null">
				BILL_TIME = #{billTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUserCode != null">
				CREATE_USER_CODE = #{createUserCode,jdbcType=VARCHAR},
			</if>
			<if test="modifyUserCode != null">
				MODIFY_USER_CODE = #{modifyUserCode,jdbcType=VARCHAR},
			</if>
			<if test="createOrgCode != null">
				CREATE_ORG_CODE = #{createOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="modifyOrgCode != null">
				MODIFY_ORG_CODE = #{modifyOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="refId != null">
				REF_ID = #{refId,jdbcType=VARCHAR},
			</if>
			<if test="refCode != null">
				REF_CODE = #{refCode,jdbcType=VARCHAR},
			</if>
			<if test="currencyCode != null">
				CURRENCY_CODE = #{currencyCode,jdbcType=VARCHAR},
			</if>
			<if test="isWholeVehicle != null">
				IS_WHOLE_VEHICLE = #{isWholeVehicle,jdbcType=CHAR},
			</if>
			<if test="wholeVehicleAppfee != null">
				WHOLE_VEHICLE_APPFEE =
				#{wholeVehicleAppfee,jdbcType=DECIMAL}*100,
			</if>
			<if test="wholeVehicleActualfee != null">
				WHOLE_VEHICLE_ACTUALFEE =
				#{wholeVehicleActualfee,jdbcType=DECIMAL}*100,
			</if>
			<if test="accountName != null">
				ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR},
			</if>
			<if test="accountCode != null">
				ACCOUNT_CODE = #{accountCode,jdbcType=VARCHAR},
			</if>
			<if test="accountBank != null">
				ACCOUNT_BANK = #{accountBank,jdbcType=VARCHAR},
			</if>
			<if test="billWeight != null">
				BILL_WEIGHT = #{billWeight,jdbcType=DECIMAL},
			</if>
			<if test="pickupFee != null">
				PICKUP_FEE = #{pickupFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="serviceFee != null">
				SERVICE_FEE = #{serviceFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="preArriveTime != null">
				PRE_ARRIVE_TIME = #{preArriveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="transportType != null">
				TRANSPORT_TYPE = #{transportType,jdbcType=VARCHAR},
			</if>
			<if test="addTime != null">
				ADD_TIME = #{addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="insuranceRate != null">
				INSURANCE_RATE = #{insuranceRate,jdbcType=DECIMAL},
			</if>
			<if test="insuranceFee != null">
				INSURANCE_FEE = #{insuranceFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="unitPrice != null">
				UNIT_PRICE = #{unitPrice,jdbcType=DECIMAL}*100,
			</if>
			<if test="contactAddressId != null">
				CONTACT_ADDRESS_ID =
				#{contactAddressId,jdbcType=VARCHAR},
			</if>
			<if test="flightNumberType != null">
				FLIGHT_NUMBER_TYPE =
				#{flightNumberType,jdbcType=VARCHAR},
			</if>
			<if test="collectionDepartment != null">
				COLLECTION_DEPARTMENT =
				#{collectionDepartment,jdbcType=VARCHAR},
			</if>
			<if test="transportationRemark != null">
				TRANSPORTATION_REMARK =
				#{transportationRemark,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
			</if>
			<if test="isPassOwnDepartment != null">
				IS_PASS_OWN_DEPARTMENT =
				#{isPassOwnDepartment,jdbcType=CHAR},
			</if>
			<if test="paperNum != null">
				PAPER_NUM=#{paperNum,jdbcType=NUMERIC},
			</if>
			<if test="woodNum != null">
				WOOD_NUM=#{woodNum,jdbcType=NUMERIC},
			</if>
			<if test="fibreNum != null">
				FIBRE_NUM=#{fibreNum,jdbcType=NUMERIC},
			</if>
			<if test="salverNum != null">
				SALVER_NUM=#{salverNum,jdbcType=NUMERIC},
			</if>
			<if test="membraneNum != null">
				MEMBRANE_NUM=#{membraneNum,jdbcType=NUMERIC},
			</if>
			<if test="otherPackage!=null">
				OTHER_PACKAGE=#{otherPackage,jdbcType=VARCHAR},
			</if>
			<if test="deliverCustContactId!=null">
				DELIVERY_CUSTOMER_CONTACT_ID=#{deliverCustContactId,jdbcType=VARCHAR},
			</if>
			<if test="receiverCustContactId!=null">
				RECEIVE_CUSTOMER_CONTACT_ID=#{receiverCustContactId,jdbcType=VARCHAR},
			</if>
			<if test="pendingType != null">
				PENDING_TYPE = #{pendingType,jdbcType=VARCHAR},
			</if>
			<if test="licensePlateNum != null">
				LICENSE_PLATE_NUM = #{licensePlateNum,jdbcType=VARCHAR},
			</if>
			<if test="orderVehicleNum != null">
				ORDER_VEHICLE_NUM = #{orderVehicleNum,jdbcType=VARCHAR},
			</if>
			<if test="createUserName != null and createUserName != '' ">
				CREATE_USER_NAME = #{createUserName,jdbcType=VARCHAR},
			</if>
			<if test="createUserDeptName != null and createUserDeptName != '' ">
				CREATE_USER_DEPT_NAME =
				#{createUserDeptName,jdbcType=VARCHAR},
			</if>
			<if test="receiveOrgName != null and receiveOrgName != '' ">
				RECEIVE_ORG_NAME = #{receiveOrgName,jdbcType=VARCHAR},
			</if>
			<if test="customerPickupOrgName != null and customerPickupOrgName != '' ">
				CUSTOMER_PICKUP_ORG_NAME =
				#{customerPickupOrgName,jdbcType=VARCHAR},
			</if>
			<if test="loadOrgName != null and loadOrgName != '' ">
				LOAD_ORG_NAME = #{loadOrgName,jdbcType=VARCHAR},
			</if>
			<if test="lastLoadOrgName != null and lastLoadOrgName != '' ">
				LAST_LOAD_ORG_NAME = #{lastLoadOrgName,jdbcType=VARCHAR},
			</if>
			<if test="transferStartOrgCode != null and transferStartOrgCode != '' ">
				TRANSFER_START_ORG_CODE =
				#{transferStartOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="transferStartOrgName != null and transferStartOrgName != '' ">
				TRANSFER_START_ORG_NAME =
				#{transferStartOrgName,jdbcType=VARCHAR},
			</if>
			<if test="kilometer != null">
				kilometer =#{kilometer,jdbcType=DECIMAL},
			</if>
			<if test="isEconomyGoods != null">
				IS_ECONOMY_GOODS = #{isEconomyGoods,jdbcType=CHAR},
			</if>
			<if test="economyGoodsType != null">
				ECONOMY_GOODS_TYPE =
				#{economyGoodsType,jdbcType=VARCHAR},
			</if>
			<if test="deliveryBigCustomer != null and deliveryBigCustomer != '' ">
				DELIVERY_BIG_CUSTOMER =
				#{deliveryBigCustomer,jdbcType=CHAR},
			</if>
			<if test="receiveBigCustomer != null and receiveBigCustomer != '' ">
				RECEIVE_BIG_CUSTOMER =
				#{receiveBigCustomer,jdbcType=CHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByWaybillNo" parameterType="java.util.Map">
		update PKP.T_SRV_WAYBILL
		<set>
			<if test="waybill.waybillNo != null">
				WAYBILL_NO = #{waybill.waybillNo,jdbcType=VARCHAR},
			</if>
			<if test="waybill.orderNo != null">
				ORDER_NO = #{waybill.orderNo,jdbcType=VARCHAR},
			</if>
			<if test="waybill.orderChannel != null">
				ORDER_CHANNEL = #{waybill.orderChannel,jdbcType=VARCHAR},
			</if>
			<if test="waybill.orderPaidMethod != null">
				order_paid_method =
				#{waybill.orderPaidMethod,jdbcType=VARCHAR},
			</if>

			<if test="waybill.deliveryCustomerId != null">
				DELIVERY_CUSTOMER_ID =
				#{waybill.deliveryCustomerId,jdbcType=VARCHAR},
			</if>
			<if test="waybill.deliveryCustomerCode != null">
				DELIVERY_CUSTOMER_CODE =
				#{waybill.deliveryCustomerCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.deliveryCustomerName != null">
				DELIVERY_CUSTOMER_NAME =
				#{waybill.deliveryCustomerName,jdbcType=VARCHAR},
			</if>
			<if test="waybill.deliveryCustomerMobilephone != null">
				DELIVERY_CUSTOMER_MOBILEPHONE =
				#{waybill.deliveryCustomerMobilephone,jdbcType=VARCHAR},
			</if>
			<if test="waybill.deliveryCustomerPhone != null">
				DELIVERY_CUSTOMER_PHONE =
				#{waybill.deliveryCustomerPhone,jdbcType=VARCHAR},
			</if>
			<if test="waybill.deliveryCustomerContact != null">
				DELIVERY_CUSTOMER_CONTACT =
				#{waybill.deliveryCustomerContact,jdbcType=VARCHAR},
			</if>
			<if test="waybill.deliveryCustomerNationCode != null">
				DELIVERY_CUSTOMER_NATION_CODE =
				#{waybill.deliveryCustomerNationCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.deliveryCustomerProvCode != null">
				DELIVERY_CUSTOMER_PROV_CODE =
				#{waybill.deliveryCustomerProvCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.deliveryCustomerCityCode != null">
				DELIVERY_CUSTOMER_CITY_CODE =
				#{waybill.deliveryCustomerCityCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.deliveryCustomerDistCode != null">
				DELIVERY_CUSTOMER_DIST_CODE =
				#{waybill.deliveryCustomerDistCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.deliveryCustomerAddress != null">
				DELIVERY_CUSTOMER_ADDRESS =
				#{waybill.deliveryCustomerAddress,jdbcType=VARCHAR},
			</if>
			<if test="waybill.receiveCustomerId != null">
				RECEIVE_CUSTOMER_ID =
				#{waybill.receiveCustomerId,jdbcType=VARCHAR},
			</if>
			<if test="waybill.receiveCustomerCode != null">
				RECEIVE_CUSTOMER_CODE =
				#{waybill.receiveCustomerCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.receiveCustomerName != null">
				RECEIVE_CUSTOMER_NAME =
				#{waybill.receiveCustomerName,jdbcType=VARCHAR},
			</if>
			<if test="waybill.receiveCustomerMobilephone != null">
				RECEIVE_CUSTOMER_MOBILEPHONE =
				#{waybill.receiveCustomerMobilephone,jdbcType=VARCHAR},
			</if>
			<if test="waybill.receiveCustomerPhone != null">
				RECEIVE_CUSTOMER_PHONE =
				#{waybill.receiveCustomerPhone,jdbcType=VARCHAR},
			</if>
			<if test="waybill.receiveCustomerContact != null">
				RECEIVE_CUSTOMER_CONTACT =
				#{waybill.receiveCustomerContact,jdbcType=VARCHAR},
			</if>
			<if test="waybill.receiveCustomerNationCode != null">
				RECEIVE_CUSTOMER_NATION_CODE =
				#{waybill.receiveCustomerNationCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.receiveCustomerProvCode != null">
				RECEIVE_CUSTOMER_PROV_CODE =
				#{waybill.receiveCustomerProvCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.receiveCustomerCityCode != null">
				RECEIVE_CUSTOMER_CITY_CODE =
				#{waybill.receiveCustomerCityCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.receiveCustomerDistCode != null">
				RECEIVE_CUSTOMER_DIST_CODE =
				#{waybill.receiveCustomerDistCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.receiveCustomerAddress != null">
				RECEIVE_CUSTOMER_ADDRESS =
				#{waybill.receiveCustomerAddress,jdbcType=VARCHAR},
			</if>
			<if test="waybill.receiveOrgCode != null">
				RECEIVE_ORG_CODE =
				#{waybill.receiveOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.productId != null">
				PRODUCT_ID = #{waybill.productId,jdbcType=VARCHAR},
			</if>
			<if test="waybill.productCode != null">
				PRODUCT_CODE = #{waybill.productCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.receiveMethod != null">
				RECEIVE_METHOD =
				#{waybill.receiveMethod,jdbcType=VARCHAR},
			</if>
			<if test="waybill.customerPickupOrgCode != null">
				CUSTOMER_PICKUP_ORG_CODE =
				#{waybill.customerPickupOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.loadMethod != null">
				LOAD_METHOD = #{waybill.loadMethod,jdbcType=VARCHAR},
			</if>
			<if test="waybill.targetOrgCode != null">
				TARGET_ORG_CODE =
				#{waybill.targetOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.pickupToDoor != null">
				PICKUP_TO_DOOR = #{waybill.pickupToDoor,jdbcType=CHAR},
			</if>
			<if test="waybill.driverCode != null">
				DRIVER_CODE = #{waybill.driverCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.pickupCentralized != null">
				PICKUP_CENTRALIZED =
				#{waybill.pickupCentralized,jdbcType=CHAR},
			</if>
			<if test="waybill.loadLineCode != null">
				LOAD_LINE_CODE =
				#{waybill.loadLineCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.loadOrgCode != null">
				LOAD_ORG_CODE = #{waybill.loadOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.lastLoadOrgCode != null">
				LAST_LOAD_ORG_CODE =
				#{waybill.lastLoadOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.preDepartureTime != null">
				PRE_DEPARTURE_TIME =
				#{waybill.preDepartureTime,jdbcType=TIMESTAMP},
			</if>
			<if test="waybill.preCustomerPickupTime != null">
				PRE_CUSTOMER_PICKUP_TIME =
				#{waybill.preCustomerPickupTime,jdbcType=TIMESTAMP},
			</if>
			<if test="waybill.carDirectDelivery != null">
				CAR_DIRECT_DELIVERY =
				#{waybill.carDirectDelivery,jdbcType=CHAR},
			</if>
			<if test="waybill.goodsName != null">
				GOODS_NAME = #{waybill.goodsName,jdbcType=VARCHAR},
			</if>
			<if test="waybill.goodsQtyTotal != null">
				GOODS_QTY_TOTAL =
				#{waybill.goodsQtyTotal,jdbcType=DECIMAL},
			</if>
			<if test="waybill.goodsWeightTotal != null">
				GOODS_WEIGHT_TOTAL =
				#{waybill.goodsWeightTotal,jdbcType=DECIMAL},
			</if>
			<if test="waybill.goodsVolumeTotal != null">
				GOODS_VOLUME_TOTAL =
				#{waybill.goodsVolumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="waybill.goodsSize != null">
				GOODS_SIZE =
				#{waybill.goodsSize,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
			</if>
			<if test="waybill.goodsTypeCode != null">
				GOODS_TYPE_CODE =
				#{waybill.goodsTypeCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.preciousGoods != null">
				PRECIOUS_GOODS = #{waybill.preciousGoods,jdbcType=CHAR},
			</if>
			<if test="waybill.specialShapedGoods != null">
				SPECIAL_SHAPED_GOODS =
				#{waybill.specialShapedGoods,jdbcType=CHAR},
			</if>
			<if test="waybill.outerNotes != null">
				OUTER_NOTES =
				#{waybill.outerNotes,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
			</if>
			<if test="waybill.innerNotes != null">
				INNER_NOTES =
				#{waybill.innerNotes,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
			</if>
			<if test="waybill.goodsPackage != null">
				GOODS_PACKAGE = #{waybill.goodsPackage,jdbcType=VARCHAR},
			</if>
			<if test="waybill.insuranceAmount != null">
				INSURANCE_AMOUNT =
				#{waybill.insuranceAmount,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.codAmount != null">
				COD_AMOUNT = #{waybill.codAmount,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.codRate != null">
				COD_RATE = #{waybill.codRate,jdbcType=DECIMAL},
			</if>
			<if test="waybill.codFee != null">
				COD_FEE = #{waybill.codFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.refundType != null">
				REFUND_TYPE = #{waybill.refundType,jdbcType=VARCHAR},
			</if>
			<if test="waybill.returnBillType != null">
				RETURN_BILL_TYPE =
				#{waybill.returnBillType,jdbcType=VARCHAR},
			</if>
			<if test="waybill.secretPrepaid != null">
				SECRET_PREPAID = #{waybill.secretPrepaid,jdbcType=CHAR},
			</if>
			<if test="waybill.toPayAmount != null">
				TO_PAY_AMOUNT =
				#{waybill.toPayAmount,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.prePayAmount != null">
				PRE_PAY_AMOUNT =
				#{waybill.prePayAmount,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.deliveryGoodsFee != null">
				DELIVERY_GOODS_FEE =
				#{waybill.deliveryGoodsFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.otherFee != null">
				OTHER_FEE = #{waybill.otherFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.packageFee != null">
				PACKAGE_FEE = #{waybill.packageFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.promotionsFee != null">
				PROMOTIONS_FEE =
				#{waybill.promotionsFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.billingType != null">
				BILLING_TYPE = #{waybill.billingType,jdbcType=VARCHAR},
			</if>
			<if test="waybill.transportFee != null">
				TRANSPORT_FEE =
				#{waybill.transportFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.valueAddFee != null">
				VALUE_ADD_FEE =
				#{waybill.valueAddFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.paidMethod != null">
				PAID_METHOD = #{waybill.paidMethod,jdbcType=VARCHAR},
			</if>
			<if test="waybill.arriveType != null">
				ARRIVE_TYPE = #{waybill.arriveType,jdbcType=VARCHAR},
			</if>
			<if test="waybill.active != null">
				ACTIVE = #{waybill.active,jdbcType=CHAR},
			</if>
			<if test="waybill.forbiddenLine != null">
				FORBIDDEN_LINE = #{waybill.forbiddenLine,jdbcType=CHAR},
			</if>
			<if test="waybill.freightMethod != null">
				FREIGHT_METHOD =
				#{waybill.freightMethod,jdbcType=VARCHAR},
			</if>
			<if test="waybill.flightShift != null">
				FLIGHT_SHIFT = #{waybill.flightShift,jdbcType=VARCHAR},
			</if>
			<if test="waybill.totalFee != null">
				TOTAL_FEE = #{waybill.totalFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.promotionsCode != null">
				PROMOTIONS_CODE =
				#{waybill.promotionsCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.createTime != null">
				CREATE_TIME = #{waybill.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="waybill.modifyTime != null">
				MODIFY_TIME = #{waybill.modifyTime,jdbcType=TIMESTAMP},
			</if>
			<if test="waybill.billTime != null">
				BILL_TIME = #{waybill.billTime,jdbcType=TIMESTAMP},
			</if>
			<if test="waybill.createUserCode != null">
				CREATE_USER_CODE =
				#{waybill.createUserCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.modifyUserCode != null">
				MODIFY_USER_CODE =
				#{waybill.modifyUserCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.createOrgCode != null">
				CREATE_ORG_CODE =
				#{waybill.createOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.modifyOrgCode != null">
				MODIFY_ORG_CODE =
				#{waybill.modifyOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.refId != null">
				REF_ID = #{waybill.refId,jdbcType=VARCHAR},
			</if>
			<if test="waybill.refCode != null">
				REF_CODE = #{waybill.refCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.currencyCode != null">
				CURRENCY_CODE = #{waybill.currencyCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.isWholeVehicle != null">
				IS_WHOLE_VEHICLE =
				#{waybill.isWholeVehicle,jdbcType=CHAR},
			</if>
			<if test="waybill.wholeVehicleAppfee != null">
				WHOLE_VEHICLE_APPFEE =
				#{waybill.wholeVehicleAppfee,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.wholeVehicleActualfee != null">
				WHOLE_VEHICLE_ACTUALFEE =
				#{waybill.wholeVehicleActualfee,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.accountName != null">
				ACCOUNT_NAME = #{waybill.accountName,jdbcType=VARCHAR},
			</if>
			<if test="waybill.accountCode != null">
				ACCOUNT_CODE = #{waybill.accountCode,jdbcType=VARCHAR},
			</if>
			<if test="waybill.accountBank != null">
				ACCOUNT_BANK = #{waybill.accountBank,jdbcType=VARCHAR},
			</if>
			<if test="waybill.billWeight != null">
				BILL_WEIGHT = #{waybill.billWeight,jdbcType=DECIMAL},
			</if>
			<if test="waybill.pickupFee != null">
				PICKUP_FEE = #{waybill.pickupFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.serviceFee != null">
				SERVICE_FEE = #{waybill.serviceFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.preArriveTime != null">
				PRE_ARRIVE_TIME =
				#{waybill.preArriveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="waybill.transportType != null">
				TRANSPORT_TYPE =
				#{waybill.transportType,jdbcType=VARCHAR},
			</if>
			<if test="waybill.addTime != null">
				ADD_TIME = #{waybill.addTime,jdbcType=TIMESTAMP},
			</if>
			<if test="waybill.insuranceRate != null">
				INSURANCE_RATE =
				#{waybill.insuranceRate,jdbcType=DECIMAL},
			</if>
			<if test="waybill.insuranceFee != null">
				INSURANCE_FEE =
				#{waybill.insuranceFee,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.unitPrice != null">
				UNIT_PRICE = #{waybill.unitPrice,jdbcType=DECIMAL}*100,
			</if>
			<if test="waybill.contactAddressId != null">
				CONTACT_ADDRESS_ID =
				#{waybill.contactAddressId,jdbcType=VARCHAR},
			</if>
			<if test="waybill.flightNumberType != null">
				FLIGHT_NUMBER_TYPE =
				#{waybill.flightNumberType,jdbcType=VARCHAR},
			</if>
			<if test="waybill.collectionDepartment != null">
				COLLECTION_DEPARTMENT =
				#{waybill.collectionDepartment,jdbcType=VARCHAR},
			</if>
			<if test="waybill.transportationRemark != null">
				TRANSPORTATION_REMARK =
				#{waybill.transportationRemark,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
			</if>
			<if test="waybill.isPassOwnDepartment != null">
				IS_PASS_OWN_DEPARTMENT =
				#{waybill.isPassOwnDepartment,jdbcType=CHAR},
			</if>
			<if test="waybill.paperNum != null">
				PAPER_NUM=#{waybill.paperNum,jdbcType=NUMERIC},
			</if>
			<if test="waybill.woodNum != null">
				WOOD_NUM=#{waybill.woodNum,jdbcType=NUMERIC},
			</if>
			<if test="waybill.fibreNum != null">
				FIBRE_NUM=#{waybill.fibreNum,jdbcType=NUMERIC},
			</if>
			<if test="waybill.salverNum != null">
				SALVER_NUM=#{waybill.salverNum,jdbcType=NUMERIC},
			</if>
			<if test="waybill.membraneNum != null">
				MEMBRANE_NUM=#{waybill.membraneNum,jdbcType=NUMERIC},
			</if>
			<if test="waybill.otherPackage!=null">
				OTHER_PACKAGE=#{waybill.otherPackage,jdbcType=VARCHAR},
			</if>
			<if test="waybill.deliverCustContactId!=null">
				DELIVERY_CUSTOMER_CONTACT_ID=#{waybill.deliverCustContactId,jdbcType=VARCHAR},
			</if>
			<if test="waybill.receiverCustContactId!=null">
				RECEIVE_CUSTOMER_CONTACT_ID=#{waybill.receiverCustContactId,jdbcType=VARCHAR},
			</if>
			<if test="waybill.pendingType != null">
				PENDING_TYPE = #{waybill.pendingType,jdbcType=VARCHAR},
			</if>
			<if test="waybill.licensePlateNum != null">
				LICENSE_PLATE_NUM =
				#{waybill.licensePlateNum,jdbcType=VARCHAR},
			</if>
			<if test="waybill.orderVehicleNum != null">
				ORDER_VEHICLE_NUM =
				#{waybill.orderVehicleNum,jdbcType=VARCHAR},
			</if>
			<if
				test="waybill.createUserName != null and waybill.createUserName != '' ">
				CREATE_USER_NAME = #{waybill.createUserName,jdbcType=VARCHAR},
			</if>
			<if
				test="waybill.createUserDeptName != null and waybill.createUserDeptName != '' ">
				CREATE_USER_DEPT_NAME =
				#{waybill.createUserDeptName,jdbcType=VARCHAR},
			</if>
			<if
				test="waybill.receiveOrgName != null and waybill.receiveOrgName != '' ">
				RECEIVE_ORG_NAME = #{waybill.receiveOrgName,jdbcType=VARCHAR},
			</if>
			<if
				test="waybill.customerPickupOrgName != null and waybill.customerPickupOrgName != '' ">
				CUSTOMER_PICKUP_ORG_NAME =
				#{waybill.customerPickupOrgName,jdbcType=VARCHAR},
			</if>
			<if test="waybill.loadOrgName != null and waybill.loadOrgName != '' ">
				LOAD_ORG_NAME = #{waybill.loadOrgName,jdbcType=VARCHAR},
			</if>
			<if
				test="waybill.lastLoadOrgName != null and waybill.lastLoadOrgName != '' ">
				LAST_LOAD_ORG_NAME =
				#{waybill.lastLoadOrgName,jdbcType=VARCHAR},
			</if>
			<if
				test="waybill.transferStartOrgCode != null and waybill.transferStartOrgCode != '' ">
				TRANSFER_START_ORG_CODE =
				#{waybill.transferStartOrgCode,jdbcType=VARCHAR},
			</if>
			<if
				test="waybill.transferStartOrgName != null and waybill.transferStartOrgName != '' ">
				TRANSFER_START_ORG_NAME =
				#{waybill.transferStartOrgName,jdbcType=VARCHAR}
			</if>
			<if test="waybill.kilometer != null">
				kilometer =
				#{waybill.kilometer,jdbcType=DECIMAL},
			</if>
			<if test="waybill.isEconomyGoods != null">
				IS_ECONOMY_GOODS =
				#{waybill.isEconomyGoods,jdbcType=CHAR},
			</if>
			<if test="waybill.economyGoodsType != null">
				ECONOMY_GOODS_TYPE =
				#{waybill.economyGoodsType,jdbcType=VARCHAR},
			</if>
			<if
				test="waybill.deliveryBigCustomer != null and waybill.deliveryBigCustomer != '' ">
				DELIVERY_BIG_CUSTOMER =
				#{waybill.deliveryBigCustomer,jdbcType=CHAR},
			</if>
			<if
				test="waybill.receiveBigCustomer != null and waybill.receiveBigCustomer != '' ">
				RECEIVE_BIG_CUSTOMER =
				#{waybill.receiveBigCustomer,jdbcType=CHAR},
			</if>
			<if test="waybill.isExpress != null and waybill.isExpress!=''">
				IS_EXPRESS = #{waybill.isExpress,jdbcType=VARCHAR},
			</if>
			<if test="waybill.freePickupGoods != null and waybill.freePickupGoods!=''">
				FREE_PICKUP_GOODS = #{waybill.freePickupGoods,jdbcType=CHAR}
			</if>
		</set>
		where waybill_no = #{oldWaybillNo,jdbcType=VARCHAR}
		and active =
		#{waybill.active,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.domain.WaybillEntity">
		update PKP.T_SRV_WAYBILL
		set WAYBILL_NO =
		#{waybillNo,jdbcType=VARCHAR},
		ORDER_NO = #{orderNo,jdbcType=VARCHAR},
		ORDER_CHANNEL = #{orderChannel,jdbcType=VARCHAR},
		ORDER_PAID_METHOD=
		#{orderPaidMethod,jdbcType=VARCHAR},
		DELIVERY_CUSTOMER_ID
		=
		#{deliveryCustomerId,jdbcType=VARCHAR},
		DELIVERY_CUSTOMER_CODE =
		#{deliveryCustomerCode,jdbcType=VARCHAR},
		DELIVERY_CUSTOMER_NAME =
		#{deliveryCustomerName,jdbcType=VARCHAR},
		DELIVERY_CUSTOMER_MOBILEPHONE =
		#{deliveryCustomerMobilephone,jdbcType=VARCHAR},
		DELIVERY_CUSTOMER_PHONE = #{deliveryCustomerPhone,jdbcType=VARCHAR},
		DELIVERY_CUSTOMER_CONTACT =
		#{deliveryCustomerContact,jdbcType=VARCHAR},
		DELIVERY_CUSTOMER_NATION_CODE =
		#{deliveryCustomerNationCode,jdbcType=VARCHAR},
		DELIVERY_CUSTOMER_PROV_CODE =
		#{deliveryCustomerProvCode,jdbcType=VARCHAR},
		DELIVERY_CUSTOMER_CITY_CODE =
		#{deliveryCustomerCityCode,jdbcType=VARCHAR},
		DELIVERY_CUSTOMER_DIST_CODE =
		#{deliveryCustomerDistCode,jdbcType=VARCHAR},
		DELIVERY_CUSTOMER_ADDRESS =
		#{deliveryCustomerAddress,jdbcType=VARCHAR},
		RECEIVE_CUSTOMER_ID =
		#{receiveCustomerId,jdbcType=VARCHAR},
		RECEIVE_CUSTOMER_CODE =
		#{receiveCustomerCode,jdbcType=VARCHAR},
		RECEIVE_CUSTOMER_NAME =
		#{receiveCustomerName,jdbcType=VARCHAR},
		RECEIVE_CUSTOMER_MOBILEPHONE =
		#{receiveCustomerMobilephone,jdbcType=VARCHAR},
		RECEIVE_CUSTOMER_PHONE
		= #{receiveCustomerPhone,jdbcType=VARCHAR},
		RECEIVE_CUSTOMER_CONTACT =
		#{receiveCustomerContact,jdbcType=VARCHAR},
		RECEIVE_CUSTOMER_NATION_CODE =
		#{receiveCustomerNationCode,jdbcType=VARCHAR},
		RECEIVE_CUSTOMER_PROV_CODE =
		#{receiveCustomerProvCode,jdbcType=VARCHAR},
		RECEIVE_CUSTOMER_CITY_CODE =
		#{receiveCustomerCityCode,jdbcType=VARCHAR},
		RECEIVE_CUSTOMER_DIST_CODE =
		#{receiveCustomerDistCode,jdbcType=VARCHAR},
		RECEIVE_CUSTOMER_ADDRESS =
		#{receiveCustomerAddress,jdbcType=VARCHAR},
		RECEIVE_ORG_CODE =
		#{receiveOrgCode,jdbcType=VARCHAR},
		PRODUCT_ID =
		#{productId,jdbcType=VARCHAR},
		PRODUCT_CODE =
		#{productCode,jdbcType=VARCHAR},
		RECEIVE_METHOD =
		#{receiveMethod,jdbcType=VARCHAR},
		CUSTOMER_PICKUP_ORG_CODE =
		#{customerPickupOrgCode,jdbcType=VARCHAR},
		LOAD_METHOD =
		#{loadMethod,jdbcType=VARCHAR},
		TARGET_ORG_CODE =
		#{targetOrgCode,jdbcType=VARCHAR},
		PICKUP_TO_DOOR =
		#{pickupToDoor,jdbcType=CHAR},
		DRIVER_CODE =
		#{driverCode,jdbcType=VARCHAR},
		PICKUP_CENTRALIZED =
		#{pickupCentralized,jdbcType=CHAR},
		LOAD_LINE_CODE =
		#{loadLineCode,jdbcType=VARCHAR},
		LOAD_ORG_CODE =
		#{loadOrgCode,jdbcType=VARCHAR},
		LAST_LOAD_ORG_CODE =
		#{lastLoadOrgCode,jdbcType=VARCHAR},
		PRE_DEPARTURE_TIME =
		#{preDepartureTime,jdbcType=TIMESTAMP},
		PRE_CUSTOMER_PICKUP_TIME =
		#{preCustomerPickupTime,jdbcType=TIMESTAMP},
		CAR_DIRECT_DELIVERY =
		#{carDirectDelivery,jdbcType=CHAR},
		GOODS_NAME =
		#{goodsName,jdbcType=VARCHAR},
		GOODS_QTY_TOTAL =
		#{goodsQtyTotal,jdbcType=DECIMAL},
		GOODS_WEIGHT_TOTAL =
		#{goodsWeightTotal,jdbcType=DECIMAL},
		GOODS_VOLUME_TOTAL =
		#{goodsVolumeTotal,jdbcType=DECIMAL},
		GOODS_SIZE =
		#{goodsSize,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
		GOODS_TYPE_CODE =
		#{goodsTypeCode,jdbcType=VARCHAR},
		PRECIOUS_GOODS =
		#{preciousGoods,jdbcType=CHAR},
		SPECIAL_SHAPED_GOODS =
		#{specialShapedGoods,jdbcType=CHAR},
		OUTER_NOTES =
		#{outerNotes,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
		INNER_NOTES =
		#{innerNotes,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
		GOODS_PACKAGE =
		#{goodsPackage,jdbcType=VARCHAR},
		INSURANCE_AMOUNT =
		#{insuranceAmount,jdbcType=DECIMAL}*100,
		COD_AMOUNT =
		#{codAmount,jdbcType=DECIMAL}*100,
		COD_RATE =
		#{codRate,jdbcType=DECIMAL},
		COD_FEE = #{codFee,jdbcType=DECIMAL}*100,
		REFUND_TYPE = #{refundType,jdbcType=VARCHAR},
		RETURN_BILL_TYPE =
		#{returnBillType,jdbcType=VARCHAR},
		SECRET_PREPAID =
		#{secretPrepaid,jdbcType=CHAR},
		TO_PAY_AMOUNT =
		#{toPayAmount,jdbcType=DECIMAL}*100,
		PRE_PAY_AMOUNT =
		#{prePayAmount,jdbcType=DECIMAL}*100,
		DELIVERY_GOODS_FEE =
		#{deliveryGoodsFee,jdbcType=DECIMAL}*100,
		OTHER_FEE =
		#{otherFee,jdbcType=DECIMAL}*100,
		PACKAGE_FEE =
		#{packageFee,jdbcType=DECIMAL}*100,
		PROMOTIONS_FEE =
		#{promotionsFee,jdbcType=DECIMAL}*100,
		BILLING_TYPE =
		#{billingType,jdbcType=VARCHAR},
		TRANSPORT_FEE =
		#{transportFee,jdbcType=DECIMAL}*100,
		VALUE_ADD_FEE =
		#{valueAddFee,jdbcType=DECIMAL}*100,
		PAID_METHOD =
		#{paidMethod,jdbcType=VARCHAR},
		ARRIVE_TYPE =
		#{arriveType,jdbcType=VARCHAR},
		ACTIVE = #{active,jdbcType=CHAR},
		FORBIDDEN_LINE = #{forbiddenLine,jdbcType=CHAR},
		FREIGHT_METHOD =
		#{freightMethod,jdbcType=VARCHAR},
		FLIGHT_SHIFT =
		#{flightShift,jdbcType=VARCHAR},
		TOTAL_FEE =
		#{totalFee,jdbcType=DECIMAL}*100,
		PROMOTIONS_CODE =
		#{promotionsCode,jdbcType=VARCHAR},
		CREATE_TIME =
		#{createTime,jdbcType=TIMESTAMP},
		MODIFY_TIME =
		#{modifyTime,jdbcType=TIMESTAMP},
		BILL_TIME =
		#{billTime,jdbcType=TIMESTAMP},
		CREATE_USER_CODE =
		#{createUserCode,jdbcType=VARCHAR},
		MODIFY_USER_CODE =
		#{modifyUserCode,jdbcType=VARCHAR},
		CREATE_ORG_CODE =
		#{createOrgCode,jdbcType=VARCHAR},
		MODIFY_ORG_CODE =
		#{modifyOrgCode,jdbcType=VARCHAR},
		REF_ID = #{refId,jdbcType=VARCHAR},
		REF_CODE = #{refCode,jdbcType=VARCHAR},
		CURRENCY_CODE =
		#{currencyCode,jdbcType=VARCHAR},
		IS_WHOLE_VEHICLE =
		#{isWholeVehicle,jdbcType=CHAR},
		WHOLE_VEHICLE_APPFEE =
		#{wholeVehicleAppfee,jdbcType=DECIMAL}*100,
		WHOLE_VEHICLE_ACTUALFEE =
		#{wholeVehicleActualfee,jdbcType=DECIMAL}*100,
		ACCOUNT_NAME =
		#{accountName,jdbcType=VARCHAR},
		ACCOUNT_CODE =
		#{accountCode,jdbcType=VARCHAR},
		ACCOUNT_BANK =
		#{accountBank,jdbcType=VARCHAR},
		BILL_WEIGHT =
		#{billWeight,jdbcType=DECIMAL},
		PICKUP_FEE =
		#{pickupFee,jdbcType=DECIMAL}*100,
		SERVICE_FEE =
		#{serviceFee,jdbcType=DECIMAL}*100,
		PRE_ARRIVE_TIME =
		#{preArriveTime,jdbcType=TIMESTAMP},
		TRANSPORT_TYPE =
		#{transportType,jdbcType=VARCHAR},
		ADD_TIME =
		#{addTime,jdbcType=TIMESTAMP},
		INSURANCE_RATE =
		#{insuranceRate,jdbcType=DECIMAL},
		INSURANCE_FEE =
		#{insuranceFee,jdbcType=DECIMAL}*100,
		UNIT_PRICE =
		#{unitPrice,jdbcType=DECIMAL}*100,
		CONTACT_ADDRESS_ID =
		#{contactAddressId,jdbcType=VARCHAR},
		FLIGHT_NUMBER_TYPE =
		#{flightNumberType,jdbcType=VARCHAR},
		COLLECTION_DEPARTMENT =
		#{collectionDepartment,jdbcType=VARCHAR},
		TRANSPORTATION_REMARK =
		#{transportationRemark,jdbcType=VARCHAR,typeHandler=org.apache.ibatis.type.ClobTypeHandler},
		IS_PASS_OWN_DEPARTMENT =
		#{isPassOwnDepartment,jdbcType=CHAR},
		PAPER_NUM=#{paperNum,jdbcType=NUMERIC},
		WOOD_NUM=#{woodNum,jdbcType=NUMERIC},
		FIBRE_NUM=#{fibreNum,jdbcType=NUMERIC},
		SALVER_NUM=#{salverNum,jdbcType=NUMERIC},
		MEMBRANE_NUM=#{membraneNum,jdbcType=NUMERIC},
		OTHER_PACKAGE=#{otherPackage,jdbcType=VARCHAR},
		DELIVERY_CUSTOMER_CONTACT_ID=#{deliverCustContactId,jdbcType=VARCHAR},
		RECEIVE_CUSTOMER_CONTACT_ID=#{receiverCustContactId,jdbcType=VARCHAR},
		PENDING_TYPE = #{pendingType,jdbcType=VARCHAR},
		LICENSE_PLATE_NUM =
		#{licensePlateNum,jdbcType=VARCHAR},
		ORDER_VEHICLE_NUM =
		#{orderVehicleNum,jdbcType=VARCHAR},
		CREATE_USER_NAME =
		#{createUserName,jdbcType=VARCHAR},
		CREATE_USER_DEPT_NAME =
		#{createUserDeptName,jdbcType=VARCHAR},
		RECEIVE_ORG_NAME =
		#{receiveOrgName,jdbcType=VARCHAR},
		CUSTOMER_PICKUP_ORG_NAME =
		#{customerPickupOrgName,jdbcType=VARCHAR},
		LOAD_ORG_NAME =
		#{loadOrgName,jdbcType=VARCHAR},
		LAST_LOAD_ORG_NAME =
		#{lastLoadOrgName,jdbcType=VARCHAR},
		TRANSFER_START_ORG_CODE =
		#{transferStartOrgCode,jdbcType=VARCHAR},
		TRANSFER_START_ORG_NAME =
		#{transferStartOrgName,jdbcType=VARCHAR},
		kilometer
		=#{kilometer,jdbcType=DECIMAL},
		IS_ECONOMY_GOODS
		=#{isEconomyGoods,jdbcType=CHAR},
		ECONOMY_GOODS_TYPE
		=#{economyGoodsType,jdbcType=VARCHAR},
		DELIVERY_BIG_CUSTOMER =
		#{deliveryBigCustomer,jdbcType=CHAR},
		RECEIVE_BIG_CUSTOMER =
		#{receiveBigCustomer,jdbcType=CHAR}
		where ID =
		#{id,jdbcType=VARCHAR}
	</update>

	<select id="queryWaybills" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillDto">
		select /*模块：接送货-运单-查询运单*/
		P.ID, P.WAYBILL_NO, ORDER_NO,
		ORDER_CHANNEL,ORDER_PAID_METHOD,
		DELIVERY_CUSTOMER_ID,
		DELIVERY_CUSTOMER_CODE,
		DELIVERY_CUSTOMER_NAME,
		DELIVERY_CUSTOMER_MOBILEPHONE, DELIVERY_CUSTOMER_PHONE,
		DELIVERY_CUSTOMER_CONTACT,
		DELIVERY_CUSTOMER_NATION_CODE,
		DELIVERY_CUSTOMER_PROV_CODE,
		DELIVERY_CUSTOMER_CITY_CODE,
		DELIVERY_CUSTOMER_DIST_CODE, DELIVERY_CUSTOMER_ADDRESS,
		RECEIVE_CUSTOMER_ID,
		RECEIVE_CUSTOMER_CODE,
		RECEIVE_CUSTOMER_NAME,
		RECEIVE_CUSTOMER_MOBILEPHONE, RECEIVE_CUSTOMER_PHONE,
		RECEIVE_CUSTOMER_CONTACT,
		RECEIVE_CUSTOMER_NATION_CODE,
		RECEIVE_CUSTOMER_PROV_CODE, RECEIVE_CUSTOMER_CITY_CODE,
		RECEIVE_CUSTOMER_DIST_CODE, RECEIVE_CUSTOMER_ADDRESS,
		RECEIVE_ORG_CODE, PRODUCT_ID,
		PRODUCT_CODE, RECEIVE_METHOD,
		CUSTOMER_PICKUP_ORG_CODE, LOAD_METHOD,
		TARGET_ORG_CODE,
		PICKUP_TO_DOOR,
		DRIVER_CODE, PICKUP_CENTRALIZED, LOAD_LINE_CODE, LOAD_ORG_CODE,
		LAST_LOAD_ORG_CODE,
		PRE_DEPARTURE_TIME, PRE_CUSTOMER_PICKUP_TIME,
		CAR_DIRECT_DELIVERY, P.GOODS_NAME,
		GOODS_QTY_TOTAL,
		GOODS_WEIGHT_TOTAL,
		GOODS_VOLUME_TOTAL, GOODS_SIZE, P.GOODS_TYPE_CODE, PRECIOUS_GOODS,
		SPECIAL_SHAPED_GOODS, OUTER_NOTES, INNER_NOTES, GOODS_PACKAGE,
		INSURANCE_AMOUNT/100 as INSURANCE_AMOUNT,
		P.COD_AMOUNT/100 as
		COD_AMOUNT,
		COD_RATE, COD_FEE/100 as COD_FEE, REFUND_TYPE,
		RETURN_BILL_TYPE,
		SECRET_PREPAID,
		TO_PAY_AMOUNT/100 as TO_PAY_AMOUNT,
		PRE_PAY_AMOUNT/100
		as PRE_PAY_AMOUNT,
		DELIVERY_GOODS_FEE/100 as
		DELIVERY_GOODS_FEE,
		OTHER_FEE/100 as OTHER_FEE, PACKAGE_FEE/100 as
		PACKAGE_FEE,
		PROMOTIONS_FEE/100 as PROMOTIONS_FEE,
		BILLING_TYPE,
		TRANSPORT_FEE/100 as
		TRANSPORT_FEE, VALUE_ADD_FEE/100 as VALUE_ADD_FEE,
		PAID_METHOD,
		ARRIVE_TYPE,
		ACTIVE, FORBIDDEN_LINE,
		FREIGHT_METHOD,
		FLIGHT_SHIFT,
		TOTAL_FEE/100 as TOTAL_FEE,
		PROMOTIONS_CODE,
		P.CREATE_TIME, P.MODIFY_TIME,
		BILL_TIME,
		CREATE_USER_CODE,
		MODIFY_USER_CODE, CREATE_ORG_CODE,
		MODIFY_ORG_CODE,
		REF_ID, REF_CODE,
		CURRENCY_CODE,
		IS_WHOLE_VEHICLE,
		WHOLE_VEHICLE_APPFEE/100 as
		WHOLE_VEHICLE_APPFEE,
		WHOLE_VEHICLE_ACTUALFEE/100 as
		WHOLE_VEHICLE_ACTUALFEE,
		ACCOUNT_NAME,
		ACCOUNT_CODE,
		ACCOUNT_BANK,
		BILL_WEIGHT, PICKUP_FEE/100 as PICKUP_FEE,
		SERVICE_FEE/100 as
		SERVICE_FEE,
		PRE_ARRIVE_TIME,
		TRANSPORT_TYPE,
		ADD_TIME, INSURANCE_RATE,
		INSURANCE_FEE/100 as INSURANCE_FEE,
		UNIT_PRICE/100 AS
		UNIT_PRICE,CONTACT_ADDRESS_ID,
		FLIGHT_NUMBER_TYPE,
		COLLECTION_DEPARTMENT,
		TRANSPORTATION_REMARK,IS_PASS_OWN_DEPARTMENT,
		PAPER_NUM,WOOD_NUM,FIBRE_NUM,SALVER_NUM,MEMBRANE_NUM,OTHER_PACKAGE,DELIVERY_CUSTOMER_CONTACT_ID,RECEIVE_CUSTOMER_CONTACT_ID,
		PENDING_TYPE,LICENSE_PLATE_NUM,ORDER_VEHICLE_NUM,
		CREATE_USER_NAME,CREATE_USER_DEPT_NAME
		,RECEIVE_ORG_NAME,CUSTOMER_PICKUP_ORG_NAME,LOAD_ORG_NAME,LAST_LOAD_ORG_NAME,
		TRANSFER_START_ORG_CODE,
		TRANSFER_START_ORG_NAME,KILOMETER,IS_INIT,IS_ECONOMY_GOODS,ECONOMY_GOODS_TYPE,DELIVERY_BIG_CUSTOMER,RECEIVE_BIG_CUSTOMER,
		T.WAYBILL_TYPE,P.IS_ECS
		from PKP.T_SRV_WAYBILL p LEFT JOIN
		PKP.T_SRV_ACTUAL_FREIGHT T
		on(P.WAYBILL_NO = T.WAYBILL_NO)
		LEFT JOIN pkp.t_Srv_Waybill_Print_Info pt on(P.WAYBILL_NO = pt.WAYBILL_NO)
		<where>
		    <!-- 限制悟空开的单子，在FOSS出发运单管理中查265475 -->
		        (p.is_ecs != 'Y' or p.is_ecs is null) and 
			<!-- 排除运单状态为RFC_ACTIVE和RFC_ACTIVE的更改单记录 -->
			P.PENDING_TYPE NOT IN ( 'RFC_ACTIVE','RFC_PENDING','PDA_PENDING')
			AND
			p.active = #{waybillEntity.active,jdbcType=VARCHAR}
			<if test='printWaybillType != "Y" '>
				and (pt.PRINT_JUDGE is null)
			</if>
			<if test='printWaybillType == "Y" '>
				and pt.PRINT_JUDGE='Y'
			</if>
			<if test="billStartTime != null and billStartTime != '' ">
				and p.BILL_TIME  <![CDATA[  >=  ]]>
				#{billStartTime,jdbcType=TIMESTAMP}
			</if>
			<if test="billEndTime != null and billEndTime != '' ">
				AND p.BILL_TIME  <![CDATA[  <=  ]]>
				#{billEndTime,jdbcType=TIMESTAMP}
			</if>
			<if test="createStartTime != null and createStartTime !='' ">
				and p.CREATE_TIME <![CDATA[  >=  ]]>
				#{createStartTime,jdbcType=TIMESTAMP}
			</if>
			<if test="createEndTime != null and createEndTime !='' ">
				and p.CREATE_TIME <![CDATA[  <=  ]]>
				#{createEndTime,jdbcType=TIMESTAMP}
			</if>
			<if
				test="waybillEntity.receiveOrgCode != null and waybillEntity.receiveOrgCode !='' ">
				and p.receive_org_code =
				#{waybillEntity.receiveOrgCode,jdbcType=VARCHAR}
			</if>
			<if test="waybillEntity.receiveOrgCodeList != null">
				and p.receive_org_code in
				<foreach collection="waybillEntity.receiveOrgCodeList" item="receiveOrgCode"
					index="index" open="(" separator="," close=")"> #{receiveOrgCode,
					jdbcType=VARCHAR}
				</foreach>
			</if>
			<if
				test="waybillEntity.productCode != null and waybillEntity.productCode != 'all' and waybillEntity.productCode !='' ">
				and p.product_code =
				#{waybillEntity.productCode,jdbcType=VARCHAR}
			</if>
			<!-- 增加是否快递字段 -->
			<if
				test="waybillEntity.isExpress != null  and waybillEntity.isExpress !='' ">
				AND p.product_code IN ('PACKAGE','RCP','EPEP','DEAP')
			</if>
			<if
				test="waybillEntity.pendingType != null and waybillEntity.pendingType != 'all' and waybillEntity.pendingType !='' ">
				and p.pending_type =
				#{waybillEntity.pendingType,jdbcType=VARCHAR}
			</if>
			<if
				test="waybillEntity.createUserCode != null and waybillEntity.createUserCode !='' ">
				and p.create_user_code =
				#{waybillEntity.createUserCode,jdbcType=VARCHAR}
			</if>
			<if
				test="waybillEntity.createOrgCode != null and waybillEntity.createOrgCode !='' ">
				and p.create_org_code =
				#{waybillEntity.createOrgCode,jdbcType=VARCHAR}
			</if>
			<if test="waybillEntity.createOrgCodeList != null">
				and p.create_org_code in
				<foreach collection="waybillEntity.createOrgCodeList" item="createOrgCode"
					index="index" open="(" separator="," close=")"> #{createOrgCode,
					jdbcType=VARCHAR}
				</foreach>
			</if>
			<if test="mixNo != null and mixNo !='' ">
				and p.WAYBILL_NO = #{mixNo,jdbcType=CHAR}
			</if>
			<if test="orderNo != null and orderNo !='' ">
				and p.ORDER_NO =#{orderNo,jdbcType=VARCHAR} and
				p.ORDER_NO is not null
			</if>
			<if test='waybillType !=null and waybillType=="NORMAL"'>
				AND T.WAYBILL_TYPE IS NULL
			</if>
			<if test='waybillType !=null and waybillType=="EWAYBILL"'>
				AND T.WAYBILL_TYPE =#{waybillType,jdbcType=VARCHAR}
			</if>

			<if
				test=" actualFreightEntity!=null and actualFreightEntity.isBatchCreateWaybill !=null and actualFreightEntity.isBatchCreateWaybill!='' ">
				AND T.IS_BATCH_CREATE_WAYBILL
				=#{actualFreightEntity.isBatchCreateWaybill,jdbcType=VARCHAR}
			</if>
		</where>
		order by BILL_TIME asc
	</select>


	<select id="queryWaybillsForPrint" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillDto">
		select /*模块：接送货-运单-查询运单*/
		P.ID, P.WAYBILL_NO, ORDER_NO,
		ORDER_CHANNEL,ORDER_PAID_METHOD,
		DELIVERY_CUSTOMER_ID,
		DELIVERY_CUSTOMER_CODE,
		DELIVERY_CUSTOMER_NAME,
		DELIVERY_CUSTOMER_MOBILEPHONE, DELIVERY_CUSTOMER_PHONE,
		DELIVERY_CUSTOMER_CONTACT,
		DELIVERY_CUSTOMER_NATION_CODE,
		DELIVERY_CUSTOMER_PROV_CODE,
		DELIVERY_CUSTOMER_CITY_CODE,
		DELIVERY_CUSTOMER_DIST_CODE, DELIVERY_CUSTOMER_ADDRESS,
		RECEIVE_CUSTOMER_ID,
		RECEIVE_CUSTOMER_CODE,
		RECEIVE_CUSTOMER_NAME,
		RECEIVE_CUSTOMER_MOBILEPHONE, RECEIVE_CUSTOMER_PHONE,
		RECEIVE_CUSTOMER_CONTACT,
		RECEIVE_CUSTOMER_NATION_CODE,
		RECEIVE_CUSTOMER_PROV_CODE, RECEIVE_CUSTOMER_CITY_CODE,
		RECEIVE_CUSTOMER_DIST_CODE, RECEIVE_CUSTOMER_ADDRESS,
		RECEIVE_ORG_CODE, PRODUCT_ID,
		PRODUCT_CODE, RECEIVE_METHOD,
		CUSTOMER_PICKUP_ORG_CODE, LOAD_METHOD,
		TARGET_ORG_CODE,
		PICKUP_TO_DOOR,
		DRIVER_CODE, PICKUP_CENTRALIZED, LOAD_LINE_CODE, LOAD_ORG_CODE,
		LAST_LOAD_ORG_CODE,
		PRE_DEPARTURE_TIME, PRE_CUSTOMER_PICKUP_TIME,
		CAR_DIRECT_DELIVERY, P.GOODS_NAME,
		GOODS_QTY_TOTAL,
		GOODS_WEIGHT_TOTAL,
		GOODS_VOLUME_TOTAL, GOODS_SIZE, P.GOODS_TYPE_CODE, PRECIOUS_GOODS,
		SPECIAL_SHAPED_GOODS, OUTER_NOTES, INNER_NOTES, GOODS_PACKAGE,
		INSURANCE_AMOUNT/100 as INSURANCE_AMOUNT,
		P.COD_AMOUNT/100 as
		COD_AMOUNT,
		COD_RATE, COD_FEE/100 as COD_FEE, REFUND_TYPE,
		RETURN_BILL_TYPE,
		SECRET_PREPAID,
		TO_PAY_AMOUNT/100 as TO_PAY_AMOUNT,
		PRE_PAY_AMOUNT/100
		as PRE_PAY_AMOUNT,
		DELIVERY_GOODS_FEE/100 as
		DELIVERY_GOODS_FEE,
		OTHER_FEE/100 as OTHER_FEE, PACKAGE_FEE/100 as
		PACKAGE_FEE,
		PROMOTIONS_FEE/100 as PROMOTIONS_FEE,
		BILLING_TYPE,
		TRANSPORT_FEE/100 as
		TRANSPORT_FEE, VALUE_ADD_FEE/100 as VALUE_ADD_FEE,
		PAID_METHOD,
		ARRIVE_TYPE,
		ACTIVE, FORBIDDEN_LINE,
		FREIGHT_METHOD,
		FLIGHT_SHIFT,
		TOTAL_FEE/100 as TOTAL_FEE,
		PROMOTIONS_CODE,
		P.CREATE_TIME, P.MODIFY_TIME,
		BILL_TIME,
		CREATE_USER_CODE,
		MODIFY_USER_CODE, CREATE_ORG_CODE,
		MODIFY_ORG_CODE,
		REF_ID, REF_CODE,
		CURRENCY_CODE,
		IS_WHOLE_VEHICLE,
		WHOLE_VEHICLE_APPFEE/100 as
		WHOLE_VEHICLE_APPFEE,
		WHOLE_VEHICLE_ACTUALFEE/100 as
		WHOLE_VEHICLE_ACTUALFEE,
		ACCOUNT_NAME,
		ACCOUNT_CODE,
		ACCOUNT_BANK,
		BILL_WEIGHT, PICKUP_FEE/100 as PICKUP_FEE,
		SERVICE_FEE/100 as
		SERVICE_FEE,
		PRE_ARRIVE_TIME,
		TRANSPORT_TYPE,
		ADD_TIME, INSURANCE_RATE,
		INSURANCE_FEE/100 as INSURANCE_FEE,
		UNIT_PRICE/100 AS
		UNIT_PRICE,CONTACT_ADDRESS_ID,
		FLIGHT_NUMBER_TYPE,
		COLLECTION_DEPARTMENT,
		TRANSPORTATION_REMARK,IS_PASS_OWN_DEPARTMENT,
		PAPER_NUM,WOOD_NUM,FIBRE_NUM,SALVER_NUM,MEMBRANE_NUM,OTHER_PACKAGE,DELIVERY_CUSTOMER_CONTACT_ID,RECEIVE_CUSTOMER_CONTACT_ID,
		PENDING_TYPE,LICENSE_PLATE_NUM,ORDER_VEHICLE_NUM,
		CREATE_USER_NAME,CREATE_USER_DEPT_NAME
		,RECEIVE_ORG_NAME,CUSTOMER_PICKUP_ORG_NAME,LOAD_ORG_NAME,LAST_LOAD_ORG_NAME,
		TRANSFER_START_ORG_CODE,
		TRANSFER_START_ORG_NAME,KILOMETER,IS_INIT,IS_ECONOMY_GOODS,ECONOMY_GOODS_TYPE,DELIVERY_BIG_CUSTOMER,RECEIVE_BIG_CUSTOMER,
		T.WAYBILL_TYPE
		from PKP.T_SRV_WAYBILL p LEFT JOIN
		PKP.T_SRV_ACTUAL_FREIGHT T
		on(P.WAYBILL_NO = T.WAYBILL_NO)
		<where>
			<!-- 排除运单状态为RFC_ACTIVE和RFC_ACTIVE的更改单记录 -->
			P.PENDING_TYPE NOT IN ( 'RFC_ACTIVE','RFC_PENDING')
			AND
			p.active = #{waybillEntity.active,jdbcType=VARCHAR}
			<if test="billStartTime != null and billStartTime != '' ">
				and p.BILL_TIME  <![CDATA[  >=  ]]>
				#{billStartTime,jdbcType=TIMESTAMP}
			</if>
			<if test="billEndTime != null and billEndTime != '' ">
				AND p.BILL_TIME  <![CDATA[  <=  ]]>
				#{billEndTime,jdbcType=TIMESTAMP}
			</if>
			<if test="createStartTime != null and createStartTime !='' ">
				and p.CREATE_TIME <![CDATA[  >=  ]]>
				#{createStartTime,jdbcType=TIMESTAMP}
			</if>
			<if test="createEndTime != null and createEndTime !='' ">
				and p.CREATE_TIME <![CDATA[  <=  ]]>
				#{createEndTime,jdbcType=TIMESTAMP}
			</if>
			<if
				test="waybillEntity.receiveOrgCode != null and waybillEntity.receiveOrgCode !='' ">
				and p.receive_org_code =
				#{waybillEntity.receiveOrgCode,jdbcType=VARCHAR}
			</if>
			<if test="waybillEntity.receiveOrgCodeList != null">
				and p.receive_org_code in
				<foreach collection="waybillEntity.receiveOrgCodeList" item="receiveOrgCode"
					index="index" open="(" separator="," close=")"> #{receiveOrgCode,
					jdbcType=VARCHAR}
				</foreach>
			</if>
			<if
				test="waybillEntity.productCode != null and waybillEntity.productCode != 'all' and waybillEntity.productCode !='' ">
				and p.product_code =
				#{waybillEntity.productCode,jdbcType=VARCHAR}
			</if>
			<!-- 增加是否快递字段 -->
			<if
				test="waybillEntity.isExpress != null  and waybillEntity.isExpress !='' ">
				AND p.product_code IN ('PACKAGE','RCP','EPEP','DEAP')
			</if>
			<if
				test="waybillEntity.pendingType != null and waybillEntity.pendingType != 'all' and waybillEntity.pendingType !='' ">
				and p.pending_type =
				#{waybillEntity.pendingType,jdbcType=VARCHAR}
			</if>
			<if
				test="waybillEntity.createUserCode != null and waybillEntity.createUserCode !='' ">
				and p.create_user_code =
				#{waybillEntity.createUserCode,jdbcType=VARCHAR}
			</if>
			<if
				test="waybillEntity.createOrgCode != null and waybillEntity.createOrgCode !='' ">
				and p.create_org_code =
				#{waybillEntity.createOrgCode,jdbcType=VARCHAR}
			</if>
			<if test="waybillEntity.createOrgCodeList != null">
				and p.create_org_code in
				<foreach collection="waybillEntity.createOrgCodeList" item="createOrgCode"
					index="index" open="(" separator="," close=")"> #{createOrgCode,
					jdbcType=VARCHAR}
				</foreach>
			</if>
			<if test="mixNo != null and mixNo !='' ">
				and p.WAYBILL_NO = #{mixNo,jdbcType=CHAR}
			</if>
			<if test="orderNo != null and orderNo !='' ">
				and p.ORDER_NO =#{orderNo,jdbcType=VARCHAR} and
				p.ORDER_NO is not null
			</if>
			<if test='waybillType !=null and waybillType=="NORMAL"'>
				AND T.WAYBILL_TYPE IS NULL
			</if>
			<if test='waybillType !=null and waybillType=="EWAYBILL"'>
				AND T.WAYBILL_TYPE =#{waybillType,jdbcType=VARCHAR}
			</if>

			<if
				test=" actualFreightEntity!=null and actualFreightEntity.isBatchCreateWaybill !=null and actualFreightEntity.isBatchCreateWaybill!='' ">
				AND T.IS_BATCH_CREATE_WAYBILL
				=#{actualFreightEntity.isBatchCreateWaybill,jdbcType=VARCHAR}
			</if>
		</where>
		order by BILL_TIME asc
	</select>


	<select id="queryWaybillNoExpress" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillDto">
		select /*模块：接送货-运单-查询运单*/
		<include refid="Base_Column_List" />
		from PKP.T_SRV_WAYBILL p
		<where>
			<!-- 排除运单状态为RFC_ACTIVE和RFC_ACTIVE的更改单记录 -->
			P.PENDING_TYPE NOT IN ( 'RFC_ACTIVE','RFC_PENDING','PDA_PENDING')
			AND
			p.active = #{waybillEntity.active,jdbcType=VARCHAR}
			<if test="billStartTime != null and billStartTime != '' ">
				and p.BILL_TIME  <![CDATA[  >=  ]]>
				#{billStartTime,jdbcType=TIMESTAMP}
			</if>
			<if test="billEndTime != null and billEndTime != '' ">
				AND p.BILL_TIME  <![CDATA[  <=  ]]>
				#{billEndTime,jdbcType=TIMESTAMP}
			</if>
			<if test="createStartTime != null and createStartTime !='' ">
				and p.CREATE_TIME <![CDATA[  >=  ]]>
				#{createStartTime,jdbcType=TIMESTAMP}
			</if>
			<if test="createEndTime != null and createEndTime !='' ">
				and p.CREATE_TIME <![CDATA[  <=  ]]>
				#{createEndTime,jdbcType=TIMESTAMP}
			</if>
			<if
				test="waybillEntity.receiveOrgCode != null and waybillEntity.receiveOrgCode !='' ">
				and p.receive_org_code =
				#{waybillEntity.receiveOrgCode,jdbcType=VARCHAR}
			</if>
			<if test="waybillEntity.receiveOrgCodeList != null">
				and p.receive_org_code in
				<foreach collection="waybillEntity.receiveOrgCodeList" item="receiveOrgCode"
					index="index" open="(" separator="," close=")"> #{receiveOrgCode,
					jdbcType=VARCHAR}
				</foreach>
			</if>
			<if
				test="waybillEntity.productCode != null and waybillEntity.productCode != 'all' and waybillEntity.productCode !='' ">
				and p.product_code =
				#{waybillEntity.productCode,jdbcType=VARCHAR}
			</if>
			 and p.product_code not in ('PACKAGE','RCP','EPEP')
			<if
				test="waybillEntity.pendingType != null and waybillEntity.pendingType != 'all' and waybillEntity.pendingType !='' ">
				and p.pending_type =
				#{waybillEntity.pendingType,jdbcType=VARCHAR}
			</if>
			<if
				test="waybillEntity.createUserCode != null and waybillEntity.createUserCode !='' ">
				and p.create_user_code =
				#{waybillEntity.createUserCode,jdbcType=VARCHAR}
			</if>
			<if
				test="waybillEntity.createOrgCode != null and waybillEntity.createOrgCode !='' ">
				and (p.create_org_code =
				#{waybillEntity.createOrgCode,jdbcType=VARCHAR} or (p.RECEIVE_ORG_CODE = #{waybillEntity.createOrgCode,jdbcType=VARCHAR} AND EXISTS (SELECT 1 FROM PKP.T_SRV_OMS_ORDER IT WHERE IT.WAYBILL_NO = p.WAYBILL_NO)))
			</if>
			<if test="waybillEntity.createOrgCodeList != null">
				and (p.create_org_code in
				<foreach collection="waybillEntity.createOrgCodeList" item="createOrgCode"
					index="index" open="(" separator="," close=")"> #{createOrgCode,
					jdbcType=VARCHAR}
				</foreach>
				OR (
				p.RECEIVE_ORG_CODE in
				<foreach collection="waybillEntity.createOrgCodeList" item="createOrgCode"
					index="index" open="(" separator="," close=")"> #{createOrgCode,
					jdbcType=VARCHAR}
				</foreach>
				and EXISTS (SELECT 1 FROM PKP.T_SRV_OMS_ORDER IT WHERE IT.WAYBILL_NO = p.WAYBILL_NO)
				))
			</if>
			<if test="mixNo != null and mixNo !='' ">
				and p.WAYBILL_NO = #{mixNo,jdbcType=CHAR}
			</if>
			<if test="orderNo != null and orderNo !='' ">
				and p.ORDER_NO =#{orderNo,jdbcType=VARCHAR} and
				p.ORDER_NO is not null
			</if>
		</where>
		order by BILL_TIME asc
	</select>


	<!-- 根据官网提供的参数查询运单基本信息 -->
	<select id="queryWaybillInfosByAccount" resultMap="AccountingQueryDtoMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.AccountingQueryDto">
		select /*模块：接送货-运单-查询运单*/
		waybill.waybill_no waybillNum,
		--运单号
		waybill.order_no orderNum, --订单号
		sysdate sendDate, --发送时间
		org.name
		departureName, --发货网点名称
		org.address departureAddress, --发货网点地址
		org.dep_telephone departuretel, -- 发货网点电话
		org.org_simple_name
		departure, --始发站
		waybill.delivery_customer_contact shipperName, --发货人姓名
		waybill.delivery_customer_phone shippertel, --发货人电话
		waybill.delivery_customer_mobilephone shipperMobile, --发货人手机
		delivery_prov.name + ' ' + delivery_city.name + ' ' +
		delivery_dist.name + ' ' + waybill.delivery_customer_address
		shipperAddress, --发货地址
		waybill.receive_customer_contact consigneeName,
		--收货人姓名
		waybill.receive_customer_phone consigneetel, --收货人电话
		waybill.receive_customer_mobilephone consigneeMobile, --收货人手机
		receive_prov.name + ' ' + receive_city.name + ' ' +
		receive_dist.name +
		' ' + waybill.receive_customer_address consigneeAddress, -- 收货地址
		waybill.goods_name goodsName, --货物名称
		waybill.goods_weight_total weight,
		--货物重量
		waybill.goods_volume_total cubage, -- 货物体积
		waybill.GOODS_QTY_TOTAL pieces, -- 货物件数
		waybill.goods_package packing,
		--货物包装
		waybill.product_code transProperties,--运输性质（即产品类型）
		waybill.RECEIVE_METHOD deliveryMode,--送货方式
		waybill.PAID_METHOD
		payWay,--付款方式(1、现金；2、到付；3、月结；4、银行卡；5、临时欠款)
		waybill.INSURANCE_AMOUNT
		insurance,-- 保价申明
		waybill.INSURANCE_FEE/100 insuranceFee,--保价手续费
		waybill.TRANSPORT_FEE/100 tranCharge,--运输费用.
		waybill.DELIVERY_GOODS_FEE/100 deliveryCharge,-- 送货费用
		waybill.PICKUP_FEE/100 receiveCharge,--接货费
		waybill.package_FEE/100
		packingCharge,--包装费用
		waybill.total_FEE/100
		totalCharge,--总费用（预付款费用+到达费用）
		waybill.OTHER_FEE/100 otherCharge,--其他费用
		waybill.RETURN_BILL_TYPE returnBillType,-- 签收单返还方式
		waybill.TRANSPORTATION_REMARK transDesc,--托运备注（储运事项）
		TARGET_org.Org_Simple_Name destination,--目的站(城市名字)
		TARGET_org.Name
		stationName,-- 提货网点名称
		TARGET_org.address stationaddress, --提货网点地址
		TARGET_org.dep_telephone stationtel,-- 提货网点电话
		from pkp.t_srv_waybill
		waybill
		left join bse.t_bas_org org on waybill.RECEIVE_ORG_CODE =
		org.code
		--发货网点名称
		left join bse.T_BAS_DISTRICT delivery_prov on
		delivery_prov.code =
		waybill.receive_customer_prov_code --省
		left join
		bse.T_BAS_DISTRICT delivery_city on delivery_city.code =
		waybill.receive_customer_city_code --市
		left join bse.T_BAS_DISTRICT
		delivery_dist on delivery_dist.code =
		waybill.receive_customer_dist_code --区
		left join bse.T_BAS_DISTRICT
		receive_prov on receive_prov.code =
		waybill.receive_customer_prov_code
		--省
		left join bse.T_BAS_DISTRICT receive_city on receive_city.code =
		waybill.receive_customer_city_code --市
		left join bse.T_BAS_DISTRICT
		receive_dist on receive_dist.code =
		waybill.receive_customer_dist_code
		--区
		left join bse.t_bas_org TARGET_org on waybill.TARGET_ORG_CODE =
		TARGET_org.code --发货网点名称
	</select>

	<!-- 根据运单号查询运单部分信息 -->
	<select id="queryPartWaybillByNo" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.domain.WaybillEntity">
		SELECT /*模块：接送货-运单-根据运单号查询运单部分信息*/
		PAID_METHOD,TO_PAY_AMOUNT/100 as
		TO_PAY_AMOUNT,CUSTOMER_PICKUP_ORG_CODE,CURRENCY_CODE,
		product_code
		,is_whole_vehicle,
		receive_method,
		total_fee/100 total_fee,
		insurance_amount/100 insurance_amount,
		cod_amount/100
		cod_amount,goods_qty_total,pending_type,
		last_load_org_code,order_no,DELIVERY_CUSTOMER_MOBILEPHONE,receive_customer_contact,
		RECEIVE_CUSTOMER_MOBILEPHONE,delivery_customer_contact,RECEIVE_ORG_CODE,waybill_no,FREIGHT_METHOD,bill_time,IS_EXPRESS,DELIVERY_CUSTOMER_NAME,
		pre_pay_amount/100 pre_pay_amount,DELIVERY_CUSTOMER_PROV_CODE
		FROM
		PKP.T_SRV_WAYBILL
		<where>
			ACTIVE = #{active,jdbcType=CHAR}
			AND WAYBILL_NO =
			#{waybillNo,jdbcType=VARCHAR}
		</where>
	</select>
	<!-- 处理弃货 -->
	<resultMap
		type="com.deppon.foss.module.pickup.waybill.shared.dto.AbandonedGoodsDto"
		id="AbandonedGoodsRM">
		<result column="id" property="id" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="waybillNo" property="waybillNo" jdbcType="VARCHAR" />
		<result column="deliverCustomerMobile" property="deliverCustomerMobile"
			jdbcType="VARCHAR" />
		<result column="respectiveRegional" property="respectiveRegional"
			jdbcType="VARCHAR" />
		<result column="goodsName" property="goodsName" jdbcType="VARCHAR" />
		<result column="weight" property="weight" jdbcType="DECIMAL" />
		<result column="volume" property="volume" jdbcType="DECIMAL" />
		<result column="deliverCustomerContact" property="deliverCustomerContact"
			jdbcType="VARCHAR" />
		<result column="deliverCostomerPhone" property="deliverCostomerPhone"
			jdbcType="VARCHAR" />
		<result column="receiveOrgCode" property="receiveOrgCode"
			jdbcType="VARCHAR" />
		<result column="receiverName" property="receiverName" jdbcType="VARCHAR" />
		<result column="receiverTel" property="receiverTel" jdbcType="VARCHAR" />
		<result column="lastLoadOrgCode" property="lastLoadOrgCode"
			jdbcType="VARCHAR" />
		<result column="storageOrgCode" property="storageOrgCode"
			jdbcType="VARCHAR" />
		<result column="codAmount" property="codAmount" jdbcType="DECIMAL" />
		<result column="insuranceAmount" property="insuranceAmount"
			jdbcType="DECIMAL" />
		<result column="prePayAmount" property="prePayAmount" jdbcType="DECIMAL" />
		<result column="toPayamount" property="toPayamount" jdbcType="DECIMAL" />
		<result column="goodsType" property="goodsType" jdbcType="VARCHAR" />
		<result column="abandoneGoodsStatus" property="abandoneGoodsStatus"
			jdbcType="VARCHAR" />
		<result column="treatTime" property="treatTime" jdbcType="VARCHAR" />
		<result column="preTreatPerson" property="preTreatPerson"
			jdbcType="VARCHAR" />
		<result column="storageDay" property="storageDay" jdbcType="DECIMAL" />
		<result column="notes" property="notes" jdbcType="VARCHAR" />
		<result column="pieces" property="pieces" jdbcType="INTEGER" />
	</resultMap>
	<select id="queryAbandonedGoodsDtoList" resultMap="AbandonedGoodsRM"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.AbandonedGoodsCondition">
		SELECT  <!-- ABANDONGOODS.Id id, ABANDONGOODS.Goods_Weight_Total weight, 
			ABANDONGOODS.Goods_Volume_Total volume, ABANDONGOODS.Goods_Qty_Total pieces, 
			ABANDONGOODS.WAYBILL_NO waybillNo, ABANDONGOODS.CREATE_USER_NAME preTreatPerson, 
			ABANDONGOODS.RECEIVE_CUSTOMER_CONTACT receiverName, ABANDONGOODS.RECEIVE_CUSTOMER_PHONE 
			receiverTel, ABANDONGOODS.PREABANDONEDGOODS_TIME treatTime -->
		ABANDONGOODS.Id id,
		ABANDONGOODS.Status status,
		ABANDONGOODS.WAYBILL_NO
		waybillNo,
		ABANDONGOODS.Delivery_Customer_Mobilephone
		deliverCustomerMobile,
		ABANDONGOODS.Respective_Regional
		respectiveRegional,
		ABANDONGOODS.Goods_Name goodsName,
		ABANDONGOODS.Goods_Weight_Total weight,
		ABANDONGOODS.Goods_Volume_Total volume,
		ABANDONGOODS.Delivery_Customer_Contact deliverCustomerContact,
		ABANDONGOODS.DELIVERY_CUSTOMER_PHONE deliverCostomerPhone,
		ABANDONGOODS.Receive_Org_Code receiveOrgCode,
		ABANDONGOODS.RECEIVE_CUSTOMER_CONTACT receiverName,
		ABANDONGOODS.RECEIVE_CUSTOMER_PHONE receiverTel,
		ABANDONGOODS.Last_Load_Org_Code lastLoadOrgCode,
		ABANDONGOODS.Storage_Org_Code storageOrgCode,
		ABANDONGOODS.Cod_Amount
		codAmount,
		ABANDONGOODS.Insurance_Amount insuranceAmount,
		ABANDONGOODS.Pre_Pay_Amount prePayAmount,
		ABANDONGOODS.To_Pay_Amount
		toPayamount,
		ABANDONGOODS.Abandonedgoods_Type goodsType,
		ABANDONGOODS.Abandonedgoods_Status abandoneGoodsStatus,
		TO_CHAR(ABANDONGOODS.PREABANDONEDGOODS_TIME,'yyyy-mm-dd hh24:mi:ss')
		treatTime,
		ABANDONGOODS.CREATE_USER_NAME preTreatPerson,
		ABANDONGOODS.Storage_Day
		storageDay,
		ABANDONGOODS.Notes notes,
		ABANDONGOODS.Goods_Qty_Total
		pieces
		FROM PKP.T_SRV_ABANDON_GOODS_IMPORT
		ABANDONGOODS
		<where>
			<choose>
				<when test="waybillNo!=null and waybillNo!=''">
					ABANDONGOODS.WAYBILL_NO =
					#{waybillNo,jdbcType=VARCHAR}
					AND ABANDONGOODS.ACTIVE =
					#{active,jdbcType=VARCHAR}
				</when>
				<otherwise>
					<if test="shipper!=null and shipper!=''">
						ABANDONGOODS.DELIVERY_CUSTOMER_CONTACT =
						#{shipper,jdbcType=VARCHAR}
					</if>
					<if test="exceptionType!=null and exceptionType!=''">
						AND ABANDONGOODS.ABANDONEDGOODS_TYPE =
						#{exceptionType,jdbcType=VARCHAR}
					</if>
					<if test="preTreatPerson!=null and preTreatPerson!=''">
						AND ABANDONGOODS.CREATE_USER_NAME =
						#{preTreatPerson,jdbcType=VARCHAR}
					</if>
					AND ABANDONGOODS.PREABANDONEDGOODS_TIME BETWEEN
					#{beginDate,jdbcType=TIMESTAMP}
					AND #{endDate,jdbcType=TIMESTAMP}
					AND ABANDONGOODS.ACTIVE = #{active,jdbcType=VARCHAR}
				</otherwise>

			</choose>
		</where>
	</select>

	<!-- 更新弃货 -->
	<update id="updateAbandonedGoods" parameterType="Map">
		update PKP.T_SRV_ABANDON_GOODS_IMPORT ABANDONGOODS
		set
		ABANDONGOODS.Status = #{status,jdbcType=VARCHAR},
		ABANDONGOODS.ACTIVE =
		#{active,jdbcType=VARCHAR},
		ABANDONGOODS.MODIFY_TIME =
		#{modifyTime,jdbcType=TIMESTAMP},
		ABANDONGOODS.Notes =
		#{notes,jdbcType=VARCHAR}
		where ABANDONGOODS.Waybill_No in
		<foreach collection="oldWaybillNo" item="waybillNo" open="("
			close=")" separator=",">
			#{waybillNo,jdbcType=VARCHAR}
		</foreach>
	</update>

	<!-- CRM查询运单明细 -->
	<resultMap
		type="com.deppon.foss.module.pickup.waybill.shared.dto.CrmWaybillServiceDto"
		id="CrmWaybillServiceRM">
		<result column="waybillNo" property="waybillNo" jdbcType="VARCHAR" />
		<result column="tranType" property="tranType" jdbcType="VARCHAR" />
		<result column="sender" property="sender" jdbcType="VARCHAR" />
		<result column="senderPhone" property="senderPhone" jdbcType="VARCHAR" />
		<result column="senderMobile" property="senderMobile" jdbcType="VARCHAR" />
		<result column="departure" property="departure" jdbcType="VARCHAR" />
		<result column="senderAddress" property="senderAddress"
			jdbcType="VARCHAR" />
		<result column="consignee" property="consignee" jdbcType="VARCHAR" />
		<result column="consigneePhone" property="consigneePhone"
			jdbcType="VARCHAR" />
		<result column="consigneeMobile" property="consigneeMobile"
			jdbcType="VARCHAR" />
		<result column="destination" property="destination" jdbcType="VARCHAR" />
		<result column="consigneeAddress" property="consigneeAddress"
			jdbcType="VARCHAR" />
		<result column="goodName" property="goodName" jdbcType="VARCHAR" />
		<result column="pieces" property="pieces" jdbcType="NUMERIC" />
		<result column="weight" property="weight" jdbcType="NUMERIC" />
		<result column="cubage" property="cubage" jdbcType="NUMERIC" />
		<result column="totalCharge" property="totalCharge" jdbcType="DECIMAL" />
		<result column="payment" property="payment" jdbcType="DECIMAL" />
		<result column="preCharge" property="preCharge" jdbcType="DECIMAL" />
		<result column="arriveCharge" property="arriveCharge" jdbcType="DECIMAL" />
		<result column="refundType" property="refundType" jdbcType="VARCHAR" />
		<result column="refund" property="refund" jdbcType="DECIMAL" />
		<result column="refundFee" property="refundFee" jdbcType="DECIMAL" />
		<result column="deliveryType" property="deliveryType" jdbcType="VARCHAR" />
		<result column="consignCharge" property="consignCharge"
			jdbcType="DECIMAL" />
		<result column="deliveryCharge" property="deliveryCharge"
			jdbcType="DECIMAL" />
		<result column="signBackCharge" property="signBackCharge"
			jdbcType="DECIMAL" />
		<result column="pickCharge" property="pickCharge" jdbcType="DECIMAL" />
		<result column="laborRebate" property="laborRebate" jdbcType="DECIMAL" />
		<result column="publishCharge" property="publishCharge"
			jdbcType="DECIMAL" />
		<result column="departureDeptName" property="departureDeptName"
			jdbcType="VARCHAR" />
		<result column="departureDeptNumber" property="departureDeptNumber"
			jdbcType="VARCHAR" />
		<result column="departureDeptAddr" property="departureDeptAddr"
			jdbcType="VARCHAR" />
		<result column="departureDeptPhone" property="departureDeptPhone"
			jdbcType="VARCHAR" />
		<result column="departureDeptFax" property="departureDeptFax"
			jdbcType="VARCHAR" />
		<result column="ladingStationName" property="ladingStationName"
			jdbcType="VARCHAR" />
		<result column="ladingStationNumber" property="ladingStationNumber"
			jdbcType="VARCHAR" />
		<result column="ladingStationAddr" property="ladingStationAddr"
			jdbcType="VARCHAR" />
		<result column="ladingStationPhone" property="ladingStationPhone"
			jdbcType="VARCHAR" />
		<result column="ladingStationFax" property="ladingStationFax"
			jdbcType="VARCHAR" />
		<result column="isSigned" property="isSigned" jdbcType="VARCHAR" />
		<result column="isNormalSigned" property="isNormalSigned"
			jdbcType="VARCHAR" />
		<result column="signRecorderId" property="signRecorderId"
			jdbcType="VARCHAR" />
		<result column="signed" property="signed" jdbcType="VARCHAR" />
		<result column="signedDesc" property="signedDesc" jdbcType="VARCHAR" />
		<result column="orderNumber" property="orderNumber" jdbcType="VARCHAR" />
		<result column="insuranceValue" property="insuranceValue"
			jdbcType="DECIMAL" />
		<result column="insurance" property="insurance" jdbcType="DECIMAL" />
		<result column="packing" property="packing" jdbcType="VARCHAR" />
		<result column="orderState" property="orderState" jdbcType="VARCHAR" />
		<result column="otherPayment" property="otherPayment" jdbcType="DECIMAL" />
		<result column="tranDesc" property="tranDesc" jdbcType="VARCHAR" />
		<result column="senderNumber" property="senderNumber" jdbcType="VARCHAR" />
		<result column="consigneeNumber" property="consigneeNumber"
			jdbcType="VARCHAR" />
		<result column="isClear" property="isClear" jdbcType="VARCHAR" />
		<result column="signBackType" property="signBackType" jdbcType="VARCHAR" />
		<result column="stowageType" property="stowageType" jdbcType="VARCHAR" />
		<result column="transNotice" property="transNotice" jdbcType="VARCHAR" />
		<result column="sendTime" property="sendTime" jdbcType="DATE" />
		<result column="receiveDeptName" property="receiveDeptName"
			jdbcType="VARCHAR" />
		<result column="receiveDeptNumber" property="receiveDeptNumber"
			jdbcType="VARCHAR" />
		<result column="stowageDept" property="stowageDept" jdbcType="VARCHAR" />
		<result column="senderCityCode" property="senderCityCode"
			jdbcType="VARCHAR" />
		<result column="senderCityName" property="senderCityName"
			jdbcType="VARCHAR" />
		<result column="senderProvinceCode" property="senderProvinceCode"
			jdbcType="VARCHAR" />
		<result column="senderProvinceName" property="senderProvinceName"
			jdbcType="VARCHAR" />
		<result column="consigneeCityCode" property="consigneeCityCode"
			jdbcType="VARCHAR" />
		<result column="consigneeCityName" property="consigneeCityName"
			jdbcType="VARCHAR" />
		<result column="consigneeProvinceCode" property="consigneeProvinceCode"
			jdbcType="VARCHAR" />
		<result column="consigneeProvinceName" property="consigneeProvinceName"
			jdbcType="VARCHAR" />
		<result column="isDoorToDoorPick" property="isDoorToDoorPick"
			jdbcType="VARCHAR" />
		<result column="isSmsNotice" property="isSmsNotice" jdbcType="VARCHAR" />
		<result column="signBillBackWay" property="signBillBackWay"
			jdbcType="VARCHAR" />
		<collection property="waybillCostInfos" resultMap="WaybillCostInfoRM"
			ofType="com.deppon.foss.module.pickup.waybill.shared.domain.WaybillCostInfo" />
	</resultMap>
	<resultMap
		type="com.deppon.foss.module.pickup.waybill.shared.domain.WaybillCostInfo"
		id="WaybillCostInfoRM">
		<result column="costType" property="costType" jdbcType="VARCHAR" />
		<result column="costName" property="costName" jdbcType="VARCHAR" />
		<result column="costMoney" property="costMoney" jdbcType="DECIMAL" />
	</resultMap>
	<select id="queryWaybillDetail" resultMap="CrmWaybillServiceRM"
		parameterType="Map">
		select /*模块：接送货-运单-查询运单明细*/
		waybill.waybill_no waybillNo,
		waybill.Transport_Type tranType,
		waybill.delivery_customer_name sender,
		waybill.delivery_customer_phone senderPhone,
		waybill.delivery_customer_mobilephone senderMobile,
		waybill.receive_org_code departure,
		waybill.delivery_customer_address
		senderAddress,
		waybill.receive_customer_name consignee,
		waybill.receive_customer_phone consigneePhone,
		waybill.receive_customer_mobilephone consigneeMobile,
		waybill.target_org_code destination,
		waybill.receive_customer_address
		consigneeAddress,
		waybill.goods_name goodName,
		waybill.pre_arrive_time
		predictArriveTime,
		waybill.goods_qty_total pieces,
		waybill.goods_weight_total weight,
		waybill.goods_volume_total cubage,
		waybill.total_fee totalCharge,
		waybill.paid_method payment,
		waybill.pre_pay_amount preCharge,
		waybill.to_pay_amount arriveCharge,
		waybill.refund_type refundType,
		waybill.cod_amount refund,
		waybill.cod_fee refundFee,
		waybill.receive_method deliveryType,
		waybill.pickup_fee consignCharge,
		waybill.delivery_goods_fee
		deliveryCharge,
		waybill.service_fee laborRebate,
		waybill.transport_fee
		publishCharge,
		org.name departureDeptName,
		org.code departureDeptNumber,
		org.address departureDeptAddr,
		org.dep_telephone departureDeptPhone,
		org.dep_fax departureDeptFax,
		lad.name ladingStationName,
		lad.code
		ladingStationNumber,
		lad.address ladingStationAddr,
		lad.dep_telephone
		ladingStationPhone,
		lad.dep_fax ladingStationFax,
		(case
		when
		signResult.Waybill_No is null then
		'是'
		else
		'否'
		end) isSigned,
		signResult.Sign_Situation isNormalSigned,
		sheet.create_user_name
		signRecorderId,
		signResult.Sign_Time signedDate,
		signResult.Sign_Note
		signedDesc,
		waybill.order_no orderNumber,
		waybill.insurance_amount
		insuranceValue,
		waybill.goods_package packing,
		waybill.active
		orderState,
		waybill.inner_notes tranDesc,
		waybill.delivery_customer_code senderNumber,
		waybill.receive_customer_code consigneeNumber,
		waybill.return_bill_type signBackType,
		waybill.load_method stowageType,
		waybill.transportation_remark transNotice,
		waybill.create_time
		sendTime,
		org.name receiveDeptName,
		org.code receiveDeptNumber,
		waybill.load_org_code stowageDept,
		waybill.delivery_customer_city_code
		senderCityCode,
		deliverCity.name senderCityName,
		waybill.delivery_customer_prov_code senderProvinceCode,
		deliverPro.Name senderProvinceName,
		waybill.receive_customer_city_code
		consigneeCityCode,
		receiveCity.Name consigneeCityName,
		waybill.receive_customer_prov_code consigneeProvinceCode,
		receivePro.Name consigneeProvinceName,
		waybill.pickup_to_door
		isDoorToDoorPick,
		waybill.return_bill_type signBillBackWay,
		chargeDetail.Pricing_Entry_Code costType,
		'' costName,
		chargeDetail.Amount costMoney
		from pkp.t_srv_waybill waybill
		left join
		pkp.t_Srv_Waybill_Charge_Detail chargeDetail
		on waybill.waybill_no =
		chargeDetail.Waybill_No
		left join bse.t_bas_org org
		on
		waybill.receive_org_code = org.code
		left join bse.t_bas_org lad
		on
		waybill.target_org_code = lad.code
		left join
		pkp.t_srv_waybill_sign_result signResult
		on signResult.Waybill_No =
		waybill.waybill_no
		left join pkp.t_srv_arrivesheet sheet
		on
		sheet.waybill_no = signResult.Waybill_No
		left join bse.t_Bas_District
		deliverCity
		on deliverCity.code = waybill.delivery_customer_city_code
		left join bse.t_bas_district deliverPro
		on deliverPro.Code =
		waybill.delivery_customer_prov_code
		left join bse.t_Bas_District
		receiveCity
		on receiveCity.Code = waybill.receive_customer_city_code
		left join bse.t_Bas_District receivePro
		on receivePro.Code =
		waybill.receive_customer_prov_code
		where waybill.active = 'Y'
		<if test="null!=waybillNoList">
			and waybill.waybill_no in
			<foreach collection="waybillNoList" item="item" open="("
				close=")" separator=",">
				#{item,jdbcType=VARCHAR}
			</foreach>
		</if>
	</select>

	<select id="queryDepartureDeptNumber" parameterType="java.util.Map"
		resultType="String">
		select /*模块：接送货-运单-查询运单明细*/
		distinct
		org.code
		departureDeptNumber
		from pkp.t_srv_waybill waybill
		left join
		pkp.t_Srv_Waybill_Charge_Detail chargeDetail
		on waybill.waybill_no =
		chargeDetail.Waybill_No
		left join bse.t_bas_org org
		on
		waybill.receive_org_code = org.code
		left join bse.t_bas_org lad
		on
		waybill.target_org_code = lad.code
		left join
		pkp.t_srv_waybill_sign_result signResult
		on signResult.Waybill_No =
		waybill.waybill_no
		left join pkp.t_srv_arrivesheet sheet
		on
		sheet.waybill_no = signResult.Waybill_No
		left join bse.t_Bas_District
		deliverCity
		on deliverCity.code = waybill.delivery_customer_city_code
		left join bse.t_bas_district deliverPro
		on deliverPro.Code =
		waybill.delivery_customer_prov_code
		left join bse.t_Bas_District
		receiveCity
		on receiveCity.Code = waybill.receive_customer_city_code
		left join bse.t_Bas_District receivePro
		on receivePro.Code =
		waybill.receive_customer_prov_code
		where waybill.active = 'Y'
		and
		waybill.waybill_no =#{waybillNo,jdbcType=VARCHAR}
	</select>

	<!-- 综合查询:根据不同的查询条件返回运单单号集合 -->
	<select id="queryWaybillListByComplexCondation"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillListByComplexCondationDto"
		resultType="java.lang.String">
		select /*模块：接送货-运单-综合查询:根据不同的查询条件返回运单单号集合*/
		w.waybill_no waybillNo from
		pkp.t_srv_waybill w
		<where>
			<![CDATA[w.is_ecs IS NULL AND ]]>
			w.active = 'Y'
			<!-- 限制住最多返回3000条数据 -->
			<![CDATA[ and ROWNUM <= 1000  ]]>
			<!--运单号查询 -->
			<if test="startWaybillNo!=null and  startWaybillNo!=''">
				and w.waybill_no >=#{startWaybillNo,jdbcType=VARCHAR}
			</if>
			<if test="endWaybillNo!=null and  endWaybillNo!=''">
				and
			<![CDATA[w.waybill_no < =#{endWaybillNo,jdbcType=VARCHAR}]]>
			</if>
			<if
				test="startWaybillNo==null or  startWaybillNo=='' and endWaybillNo==null or endWaybillNo==''">
				<!--起始开单日期, 运单开单日期;结束开单日期, 运单结束日期 -->
				and w.bill_time BETWEEN #{startBillTime,jdbcType=TIMESTAMP}
				and
				#{endBilltime,jdbcType=TIMESTAMP}
				<if test="receiveOrgCode!=null and receiveOrgCode!=''">
					and
					w.receive_org_code=#{receiveOrgCode,jdbcType=VARCHAR}
				</if>
				<!--运输性质,产品条目编码 -->
				<if test="productCode!=null and productCode!=''">
					and
					w.product_code=#{productCode,jdbcType=VARCHAR}
				</if>
				<!--目的站:到达网点/简称 -->
				<if test="targetOrgCode!=null and targetOrgCode!=''">
					and
					w.CUSTOMER_PICKUP_ORG_CODE=#{targetOrgCode,jdbcType=VARCHAR}
				</if>


				<!--发货人 -->
				<if test="deliveryCustomerContact!=null and deliveryCustomerContact!=''">
					and
					w.delivery_Customer_Contact
					=#{deliveryCustomerContact,jdbcType=VARCHAR}
				</if>
				<!--收货人 -->
				<if test="receiveCustomerContact!=null and receiveCustomerContact!=''">
					and
					w.receive_Customer_Contact
					=#{receiveCustomerContact,jdbcType=VARCHAR}
				</if>
				<!--发货人手机 -->
				<if
					test="deliveryCustomerMobilephone!=null and deliveryCustomerMobilephone!=''">
					and
					w.delivery_Customer_Mobilephone=#{deliveryCustomerMobilephone,jdbcType=VARCHAR}

				</if>
				<!--收货人手机 -->
				<if
					test="receiveCustomerMobilephone!=null and receiveCustomerMobilephone!=''">
					and
					w.receive_customer_Mobilephone=#{receiveCustomerMobilephone,jdbcType=VARCHAR}

				</if>
				<!--发货人电话 -->
				<if test="deliveryCustomerPhone!=null and deliveryCustomerPhone!=''">
					and
					w.delivery_Customer_Phone=#{deliveryCustomerPhone,jdbcType=VARCHAR}
				</if>
				<!--收货人电话 -->
				<if test="receiveCustomerPhone!=null and receiveCustomerPhone!=''">
					and
					w.receive_customer_phone=#{receiveCustomerPhone,jdbcType=VARCHAR}
				</if>
			</if>
		</where>
		order by w.bill_time desc
	</select>

	<select id="queryWayBillListByUserDefinedQuery"
		parameterType="com.deppon.foss.module.pickup.waybill.api.shared.dto.SimpleWaybillDto"
		resultType="com.deppon.foss.module.pickup.waybill.api.shared.dto.SimpleWaybillDto">
		select /*模块：接送货-运单-自定义查询*/
		w.waybill_no waybillNo from
		pkp.t_srv_waybill w
		${whereSql} and ACTIVE =
		#{active,jdbcType=VARCHAR}
	</select>

	<sql id="querySalesStatementByComplexCondation_column">
		waybill.bill_time billTime,
		waybill.waybill_no waybillNo,
		nvl(waybill.SERVICE_FEE,0)/100 service_fee,
		(nvl(waybill.SERVICE_FEE,0)+nvl(waybill.COD_AMOUNT,0))/100
		refundAmount,
		waybill.target_org_code targetOrgName,
		waybill.goods_qty_total goodsQtyTotal,
		waybill.goods_weight_total
		goodsWeightTotal,
		waybill.pre_pay_amount/100 prePayAmount,
		waybill.goods_size goodsSize,
		waybill.delivery_customer_contact
		deliveryCustomerContact,
		waybill.bill_weight billWeight,
		waybill.goods_volume_total goodsVolumeTotal,
		waybill.package_fee/100
		packageFee,
		waybill.transport_fee/100 transportFee,
		waybill.to_pay_amount/100 toPayAmount,
		waybill.cod_amount/100
		codAmount,
		waybill.cod_fee/100 codFee,
		/*退款金额？ refundAmount,*/
		waybill.pickup_fee/100 deliveryGoodsFee,
		waybill.delivery_goods_fee/100 arriveDeliGoodsFee,
		waybill.total_fee/100 totalFee,
		sta.name receiveOrgName,
		/*对账部门
		checkAccountOrgName,*/
		cre.name createOrgName,
		waybill.goods_name
		goodsName,
		waybill.goods_package goodsPackage,
		waybill.receive_customer_contact receiveCustomerName,
		waybill.receive_customer_address receiveCustomerAddress,
		sr.deliveryman_name signer,
		waybill.insurance_fee/100 insuranceFee,
		waybill.insurance_amount/100 insuranceAmount,
		waybill.paid_method
		paidMethod,
		waybill.product_code transportType,
		emp.emp_name
		createUserName,
		waybill.unit_price/100 unitPrice,
		waybill.receive_method receiveMethod,
		waybill.transportation_remark
		transportationRemark,
		fre.status isInvalid,
		deliverorg.name
		deliverDeptName,
		waybill.receive_customer_phone receiverCustomerTel,
		waybill.receive_customer_mobilephone receiveCustomerMobilephone,
		waybill.delivery_customer_phone deliveryCustomerPhone,
		waybill.delivery_customer_mobilephone deliveryCustomerMobilephone,
		bas1.name receiverCustomerProv,
        bas2.name receiverCustomerCity,
        bas3.name receiverCustomerDist,
        fre.RECEIVE_CUSTOMER_VILLAGE_CODE receiverCustomerVillageCode,
        waybill.value_add_fee/100 valueAddFee,        
        waybill.promotions_fee/100 promotionsFee,
        fre.CREATE_TIME createTime,
       	decode(waybill.pending_type, 'PDA_ACTIVE', 'Y', 'N') isPdaCreate,
        driver.EMP_CODE emp_code,
        fre.FLABELLEAVEMONTH	</sql>
	<sql id="querySalesStatementByComplexCondation_from_where">
		from pkp.t_srv_waybill waybill
		left join bse.t_bas_org sta on
		waybill.receive_org_code =
		sta.code and sta.active='Y'
		left join
		bse.t_bas_org cre on waybill.create_org_code =
		cre.code and
		cre.active='Y'
		left join bse.t_bas_employee emp on emp.emp_code
		=waybill.create_user_code
		and emp.active='Y'
		left join
		pkp.t_srv_waybill_sign_result sr on sr.waybill_no
		=waybill.waybill_no
		and sr.active = 'Y'
		left join bse.t_bas_org deliverorg on
		deliverorg.code =
		waybill.last_load_org_code and deliverorg.active =
		'Y'
		left join bse.t_bas_district bas1 on
		waybill.receive_customer_prov_code=bas1.code and bas1.active='Y'
		left
		join bse.t_bas_district bas2 on
		waybill.receive_customer_city_code=bas2.code and bas2.active='Y'
		left
		join bse.t_bas_district bas3 on
		waybill.receive_customer_dist_code=bas3.code and bas3.active='Y'
		inner
		join pkp.t_srv_actual_freight fre on waybill.waybill_no
		=fre.waybill_no
		left join BSE.t_bas_owndriver driver on
		driver.emp_code=waybill.driver_code and driver.active='Y'
		<where>
			waybill.active='Y'
			and fre.status != 'ABORTED'
			<choose>
				<when test="waybillNo!=null and waybillNo!=''">
					and waybill.waybill_no =
					#{waybillNo,jdbcType=VARCHAR}
				</when>
				<otherwise>
				    <if test="flabelleavemonth!=null and flabelleavemonth!=''">
			            and fre.flabelleavemonth = #{flabelleavemonth,jdbcType=VARCHAR}
		            </if>
					<if test="startBillTime!=null and endBilltime!=null">
						and waybill.bill_time between
						#{startBillTime,jdbcType=TIMESTAMP} and
						#{endBilltime,jdbcType=TIMESTAMP}
					</if>
					<if test="deliveryCustomerContact!=null and deliveryCustomerContact!=''">
						and waybill.delivery_customer_contact like
						'%'||#{deliveryCustomerContact,jdbcType=VARCHAR}||'%'
					</if>
					<!-- <if test="productCode!=null and productCode!=''"> and waybill.transport_type 
						= #{productCode,jdbcType=VARCHAR} </if> -->
					<if test="payMethod!=null and payMethod!=''">
						and waybill.paid_method = #{payMethod,jdbcType=VARCHAR}
					</if>
					<if test="receiveOrgCode!=null and receiveOrgCode!=''">
						and waybill.receive_org_code =
						#{receiveOrgCode,jdbcType=VARCHAR}
					</if>
					<if test="createOrgCode!=null and createOrgCode!=''">
						and waybill.create_org_code =
						#{createOrgCode,jdbcType=VARCHAR}
					</if>
					<if test="loadOrgCode!=null and loadOrgCode!=''">
						and waybill.load_org_code =
						#{loadOrgCode,jdbcType=VARCHAR}
					</if>
					<if test="receiveCustomerContact!=null and receiveCustomerContact!=''">
						and waybill.receive_customer_contact =
						#{receiveCustomerContact,jdbcType=VARCHAR}
					</if>
					<if test="targetOrgCode!=null and targetOrgCode!=''">
						and waybill.customer_pickup_org_code =
						#{targetOrgCode,jdbcType=VARCHAR}
					</if>
					<if test="deliverDept!=null and deliverDept!=''">
						and waybill.last_load_org_code =
						#{deliverDept,jdbcType=VARCHAR}
					</if>
					<if test="beginDeliverTime!=null and endDeliverTime!=null">
						and sr.sign_time between
						#{beginDeliverTime,jdbcType=TIMESTAMP}
						and
						#{endDeliverTime,jdbcType=TIMESTAMP}
					</if>
					<if
						test="receiveCustomerMobilephone!=null and receiveCustomerMobilephone!=''">
						and waybill.receive_customer_mobilephone =
						#{receiveCustomerMobilephone,jdbcType=VARCHAR}
					</if>
					<if test="deliveryCustomerPhone!=null and deliveryCustomerPhone!=''">
						and waybill.delivery_customer_phone =
						#{deliveryCustomerPhone,jdbcType=VARCHAR}
					</if>
					<if test="receiveCustomerPhone!=null and receiveCustomerPhone!=''">
						and waybill.receive_customer_phone =
						#{receiveCustomerPhone,jdbcType=VARCHAR}
					</if>
					<if
						test="deliveryCustomerMobilephone!=null and deliveryCustomerMobilephone!=''">
						and waybill.delivery_customer_mobilephone =
						#{deliveryCustomerMobilephone,jdbcType=VARCHAR}
					</if>
					<if test="productCode!=null and productCode!=''">
						and waybill.product_code =
						#{productCode,jdbcType=VARCHAR}
					</if>
					<!-- 支持营业报表清单多选查询 DMANA-4340 -->
					<if test="productCodes != null and productCodes.size != 0">
							and waybill.product_code in
						<foreach collection="productCodes" index="index" item="code"
							open="(" separator="," close=")">
							#{code}
						</foreach>
						
					</if>
					<if test="deleteWaybillNos!=null and deleteWaybillNos!=''">
						and waybill.waybill_no not in(${deleteWaybillNos})
					</if>
				</otherwise>
			</choose>
		</where>
	</sql>
	<select id="querySalesStatementByComplexCondation"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillListByComplexCondationDto"
		resultType="com.deppon.foss.module.pickup.waybill.shared.dto.SalesStatementByComplexCondationResultDto">
		select * from (
			select
			/*模块：接送货-运单-综合查询*/
			<include refid="querySalesStatementByComplexCondation_column" />
			<include refid="querySalesStatementByComplexCondation_from_where" />
		)
		<if
			test="sortField !=null and sortField !='' and sortType != null and sortType != '' ">
				<![CDATA[order by ${sortField}  ${sortType}	]]>
		</if>
		
	</select>

	<resultMap
		type="com.deppon.foss.module.pickup.waybill.api.shared.dto.QueryMoneyDto"
		id="queryMoneyResultMap">
		<result column="WAYBILL_NO" property="waybillNo" />
		<result column="IS_SENDER" property="isSender" />
		<result column="SERVICE_FEE" property="serviceFee" />
		<result column="TO_PAY_AMOUNT" property="arrivePayment" />
		<result column="PRE_PAY_AMOUNT" property="prePayment" />
		<result column="COD_AMOUNT" property="refund" />
	</resultMap>

	<!-- 查询到货金额 -->
	<select id="queryRecieveMoney" resultMap="queryMoneyResultMap">
		select /*模块：接送货-运单-查询到货金额 */
		WAYBILL_NO,
		0 IS_SENDER,
		SERVICE_FEE / 100
		SERVICE_FEE,
		TO_PAY_AMOUNT / 100 TO_PAY_AMOUNT,
		PRE_PAY_AMOUNT / 100
		PRE_PAY_AMOUNT,
		COD_AMOUNT /100 COD_AMOUNT
		from PKP.T_SRV_WAYBILL
		<where>
			ACTIVE = #{active,jdbcType=VARCHAR}
			<if test="mobile != null and mobile != ''">
				and RECEIVE_CUSTOMER_MOBILEPHONE =
				#{mobile,jdbcType=VARCHAR}
			</if>
			<if test="telephone != null and telephone != ''">
				and RECEIVE_CUSTOMER_PHONE =
				#{telephone,jdbcType=VARCHAR}
			</if>
			<if test="name != null and name != ''">
				and RECEIVE_CUSTOMER_CONTACT = #{name,jdbcType=VARCHAR}
			</if>
			<if test="customerCode != null and customerCode != ''">
				and RECEIVE_CUSTOMER_CODE =
				#{customerCode,jdbcType=VARCHAR}
			</if>
			<![CDATA[
			and BILL_TIME > ADD_MONTHS(LAST_DAY(TRUNC(SYSDATE)) + 1, -1)
      		and BILL_TIME < ADD_MONTHS(LAST_DAY(TRUNC(SYSDATE)) + 1, 0)
      		]]>
		</where>
	</select>

	<!-- 查询发货金额 -->
	<select id="queryDeliveryMoney" resultMap="queryMoneyResultMap">
		select /*模块：接送货-运单-查询发货金额*/
		WAYBILL_NO,
		1 IS_SENDER,
		SERVICE_FEE / 100
		SERVICE_FEE,
		TO_PAY_AMOUNT / 100 TO_PAY_AMOUNT,
		PRE_PAY_AMOUNT / 100
		PRE_PAY_AMOUNT,
		COD_AMOUNT /100 COD_AMOUNT
		from PKP.T_SRV_WAYBILL
		<where>
			ACTIVE = #{active,jdbcType=VARCHAR}
			<if test="mobile != null and mobile != ''">
				and DELIVERY_CUSTOMER_MOBILEPHONE =
				#{mobile,jdbcType=VARCHAR}
			</if>
			<if test="telephone != null and telephone != ''">
				and DELIVERY_CUSTOMER_PHONE =
				#{telephone,jdbcType=VARCHAR}
			</if>
			<if test="name != null and name != ''">
				and DELIVERY_CUSTOMER_CONTACT = #{name,jdbcType=VARCHAR}
			</if>
			<if test="customerCode != null and customerCode != ''">
				and DELIVERY_CUSTOMER_CODE =
				#{customerCode,jdbcType=VARCHAR}
			</if>
			<![CDATA[
			and BILL_TIME > ADD_MONTHS(LAST_DAY(TRUNC(SYSDATE)) + 1, -1)
      		and BILL_TIME < ADD_MONTHS(LAST_DAY(TRUNC(SYSDATE)) + 1, 0)
      		]]>
		</where>
	</select>
	<!-- 根据运单号查询运单信息 -->
	<select id="queryWaybillInfoByWaybillNo" parameterType="java.util.Map"
		resultType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillInfoByWaybillNoReultDto">
		select
		/*模块：接送货-运单-根据运单号查询运单信息*/
		distinct waybill.receive_org_name
		receiveOrgName,
		recOrg.Dep_Telephone
		receiveOrgPhone,
		recOrg.CITY_CODE
		receiveOrgCity,
		waybill.PRODUCT_CODE
		productCode,
		waybill.FREIGHT_METHOD
		freightMethod,
		pro.name productName,
		waybill.load_method loadMethod,
		waybill.LOAD_ORG_CODE loadOrgCode,
		PKP.F_EMP_ORG_NAME(2,PKP.F_FOSS_CONSTANTS('NO'),waybill.LOAD_ORG_CODE)
		loadOrgName,
		waybill.load_line_code loadLineCode,
		PKP.F_DATA_DICTIONARY(PKP.F_FOSS_CONSTANTS('PICKUP_GOODS'),waybill.receive_method,PKP.F_FOSS_CONSTANTS('YES'))
		receiveMethod,
		waybill.RECEIVE_ORG_CODE receiveOrgCode,
		waybill.CREATE_USER_CODE createUserCode,
		PKP.F_EMP_ORG_NAME(1,null,waybill.CREATE_USER_CODE) createUserName,
		waybill.target_org_code targetOrgCode,
		waybill.customer_pickup_org_code customerPickupOrgCode,
		decode(pickup.name,null,outer.agent_dept_name,pickup.name)
		customerPickupOrgName,
		decode(pickup.name,null,outer.address,pickup.name,pickup.address)
		customerPickupOrgAddress,
		decode(pickup.name,null,outer.contact_phone,pickup.name,pickup.dep_telephone)
		customerPickupOrgPhone,
		waybill.delivery_customer_name
		deliveryCustomerName,
		waybill.delivery_customer_code
		deliveryCustomerCode,
		waybill.delivery_customer_mobilephone
		deliveryCustomerMobilephone,
		waybill.delivery_customer_phone
		deliveryCustomerPhone,
		waybill.delivery_customer_contact
		deliveryCustomerContact,
		delivery_prov.name || delivery_city.name ||
		delivery_dist.name ||
		waybill.delivery_customer_address
		deliveryCustomerAddress,
		fre.DELIVERY_CUSTOMER_ADDRESS_NOTE
		deliveryCustomerAddressNote,
		waybill.receive_customer_name
		receiveCustomerName,
		waybill.receive_customer_code receiveCustomerCode,
		waybill.receive_customer_mobilephone receiveCustomerMobilephone,
		waybill.receive_customer_phone receiveCustomerPhone,
		waybill.receive_customer_contact receiveCustomerContact,
		receive_prov.name || receive_city.name || receive_dist.name ||
		receive_village.name ||
		waybill.receive_customer_address
		receiveCustomerAddress,
		fre.RECEIVE_CUSTOMER_ADDRESS_NOTE
		receiveCustomerAddressNote,
		waybill.goods_name goodsName,
		waybill.goods_type_code goodsTypeCode,
		waybill.goods_package
		goodsPackage,
		waybill.goods_qty_total goodsQtyTotal,
		waybill.goods_weight_total goodsWeightTotal,
		waybill.goods_volume_total goodsVolumeTotal,
		waybill.order_channel
		orderChannel,
		to_char(waybill.goods_size) goodsSize,
		to_char(waybill.inner_notes) innerNotes,
		to_char(waybill.outer_notes)
		outerNotes,
		to_char(waybill.transportation_remark)
		transportationRemark,
		PKP.F_DATA_DICTIONARY(PKP.F_FOSS_CONSTANTS('BILLING_WAY'),waybill.billing_type,PKP.F_FOSS_CONSTANTS('NO'))
		billingType,
		waybill.unit_price/100 transportFee,
		waybill.transport_fee/100 totalFee,
		PKP.F_DATA_DICTIONARY(PKP.F_FOSS_CONSTANTS('SETTLEMENT__PAYMENT_TYPE'),waybill.paid_method,PKP.F_FOSS_CONSTANTS('NO'))
		paidMethod,
		waybill.pre_pay_amount/100 prePayAmount,
		waybill.to_pay_amount/100 toPayAmount,
		PKP.F_DATA_DICTIONARY(PKP.F_FOSS_CONSTANTS('RETURN_BILL_TYPE'),waybill.return_bill_type,PKP.F_FOSS_CONSTANTS('NO'))
		returnBillType,
		waybill.insurance_amount/100 insuranceAmount,
		waybill.insurance_fee/100 insuranceFee,
		waybill.cod_amount/100
		codAmount,
		waybill.cod_fee/100 codFee,
		waybill.cod_rate codRate,
		PKP.F_DATA_DICTIONARY(PKP.F_FOSS_CONSTANTS('REFUND_TYPE'),waybill.refund_type,PKP.F_FOSS_CONSTANTS('NO'))
		refundType,
		waybill.pickup_fee/100 pickUpFee,
		waybill.delivery_goods_fee/100 deliveryGoodsFee,
		waybill.package_fee/100 packageFee,
		waybill.service_fee/100 serviceFee,
		waybill.other_fee/100 otherFee,
		waybill.pre_departure_time flightShift,
		waybill.flight_number_type flightNumberType,
		waybill.pre_customer_pickup_time preCustomerPickupTime,
		decode(waybill.pickup_centralized,'Y','是','N','否','')
		pickupCentralized,
		/*是否展会货*/
		decode(fre.is_exhibit_cargo,'Y','是','N','否','') isExhibitCargo,
		decode(waybill.car_direct_delivery,'Y','是','N','否','')
		carDirectDelivery,
		decode(waybill.IS_WHOLE_VEHICLE,'Y','是','N','否','')
		isWholeVehicle,
		/*是否整车到达客户处*/
		decode(waybill.is_pass_own_department,'Y','是','N','否','')
		isPassOwnDepartment,
		decode(waybill.precious_goods,'Y','是','N','否','')
		preciousGoods,
		decode(waybill.special_shaped_goods,'Y','是','N','否','')
		specialShapedGoods,
		waybill.order_vehicle_num  orderVehicleNum,
		waybill.bill_time billTime,
		fre.status waybillStatus,
		waybill.delivery_big_customer deliveryBigCustomer,
		waybill.receive_big_customer receiveBigCustomer,
		waybill.secret_prepaid secretPrepaid,
		fre.waybill_Type waybillType,
		fre.INDUSTRY_SOURCE_CATEGORY category,
		fre.TO_PAY_AMOUNT_DISCOUNT/100 toPayAmountDiscount,
		fre.PRE_PAY_AMOUNT_DISCOUN/100 prePayAmountDiscount,
		emp.emp_name || signResult.SEND_EXPRESS_EMP_CODE as signcourier, 
		ep.emp_name || bescode.EXPRESS_EMP_CODE as billingcourier,
        fre.FLABELLEAVEMONTH 
  
		from pkp.t_srv_waybill waybill
		left join
		pkp.t_srv_product pro
		on pro.code = waybill.product_code
		and pro.active
		= #{active,jdbcType=CHAR} and waybill.bill_time between
		pro.BEGIN_TIME
		and pro.END_TIME
		left join bse.t_bas_org recOrg
		on recOrg.code =
		waybill.receive_org_code and recOrg.active = #{active,jdbcType=CHAR}
		<!-- waybill.bill_time between recOrg.create_time and recOrg.modify_time -->
		left join bse.t_bas_org pickup
		on pickup.code =
		waybill.customer_pickup_org_code and pickup.active =
		#{active,jdbcType=CHAR}
		<!-- waybill.bill_time between pickup.create_time and pickup.modify_time -->
		left join bse.t_bas_outer_branch outer on outer.agent_dept_code =
		waybill.customer_pickup_org_code and outer.active =
		#{active,jdbcType=CHAR}
		<!--waybill.bill_time between outer.create_time and outer.modify_time -->
		left join bse.t_bas_district delivery_prov
		on delivery_prov.code =
		waybill.DELIVERY_CUSTOMER_PROV_CODE
		and delivery_prov.active =
		#{active,jdbcType=CHAR}
		left join bse.t_bas_district delivery_city
		on
		delivery_city.code = waybill.DELIVERY_CUSTOMER_CITY_CODE
		and
		delivery_city.active = #{active,jdbcType=CHAR}
		left join
		bse.t_bas_district delivery_dist
		on delivery_dist.code =
		waybill.DELIVERY_CUSTOMER_DIST_CODE
		and delivery_dist.active =
		#{active,jdbcType=CHAR}
		left join bse.t_bas_district receive_prov
		on
		receive_prov.code = waybill.RECEIVE_CUSTOMER_PROV_CODE
		and
		receive_prov.active = #{active,jdbcType=CHAR}
		left join
		bse.t_bas_district receive_city
		on receive_city.code =
		waybill.RECEIVE_CUSTOMER_CITY_CODE
		and receive_city.active =
		#{active,jdbcType=CHAR}
		left join bse.t_bas_district receive_dist
		on
		receive_dist.code = waybill.RECEIVE_CUSTOMER_DIST_CODE
		and
		receive_dist.active = #{active,jdbcType=CHAR}
		inner join
		pkp.t_srv_actual_freight fre
		on fre.waybill_no = waybill.waybill_no
		left join bse.t_bas_district receive_village
		on receive_village.code=fre.RECEIVE_CUSTOMER_VILLAGE_CODE
		and receive_village.active = 'Y'
		left join pkp.t_srv_waybill_express bescode
        on bescode.waybill_no = waybill.waybill_no
        and bescode.EXPRESS_EMP_CODE is not null 
        left join pkp.t_srv_waybill_sign_result signResult
        on signResult.waybill_no = waybill.waybill_no
        and signResult.active = 'Y'
        and signResult.SEND_EXPRESS_EMP_CODE is not null
        left join bse.t_bas_employee emp
        on signResult.SEND_EXPRESS_EMP_CODE= emp.emp_code
        and emp.active = 'Y'
        left join bse.t_bas_employee ep
        on bescode.EXPRESS_EMP_CODE= ep.emp_code
        and ep.active = 'Y'
		where waybill.waybill_no = #{waybillNO,jdbcType=VARCHAR}
		and waybill.active = #{active,jdbcType=CHAR}
	</select>
	<select id="countQuerySalesStatementByComplexCondation"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillListByComplexCondationDto"
		resultType="int">
		select count(1)
		<include refid="querySalesStatementByComplexCondation_from_where" />
	</select>
	<sql id="select_page_Where">
		<!-- 页面录入运单号， 收货部门，提货网点 ,变更类型 -->
		<if test="waybillNo != null and waybillNo != ''">
			AND A.WAYBILL_NO = #{waybillNo, jdbcType=VARCHAR}
		</if>
		<if test="receiveOrgCode != null and receiveOrgCode != ''">
			AND C.RECEIVE_ORG_CODE = #{receiveOrgCode,
			jdbcType=VARCHAR}
		</if>
		<if test="customerPickupOrgCode != null and customerPickupOrgCode != ''">
			AND B.CUSTOMER_PICKUP_ORG_CODE = #{customerPickupOrgCode,
			jdbcType=VARCHAR}
		</if>
		<if test="rfcType != null and rfcType != ''">
			AND A.RFC_TYPE = #{rfcType, jdbcType=VARCHAR}
		</if>
		<!-- 变更受理时间 -->
		<if test="operateTimeStart != null and operateTimeStart !=''">	
			<![CDATA[ and A.OPERATE_TIME  >=  ]]>
			#{operateTimeStart, jdbcType=TIMESTAMP}
		</if>
		<if test="operateTimeEnd !=null and operateTimeEnd != ''">	
			<![CDATA[ and A.OPERATE_TIME  <=  ]]>
			#{operateTimeEnd, jdbcType=TIMESTAMP}
		</if>
	</sql>
	<!-- 手工调整运单计划List -->
	<select id="queryAdjustPlanList" resultMap="AdjustPlanResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.api.shared.dto.AdjustPlanSearcherDto">
		SELECT /*模块：接送货-运单-手工调整运单计划List*/

		distinct
		A.WAYBILL_NO AS WAYBILL_NO,
		C.RECEIVE_ORG_CODE AS RECEIVE_ORG_CODE,
		B.CUSTOMER_PICKUP_ORG_CODE AS
		OCUSTOMER_PICKUP_ORG_CODE,
		C.CUSTOMER_PICKUP_ORG_CODE AS
		DCUSTOMER_PICKUP_ORG_CODE,
		A.OPERATE_TIME AS OPERATE_TIME,
		A.ID AS
		WAYBILL_RFC_ID


		FROM PKP.T_SRV_WAYBILLRFC A, PKP.T_SRV_WAYBILL B,
		PKP.T_SRV_WAYBILL C,
		PKP.T_SRV_LABELEDGOOD_TODO todo
		<where>
			A.OLD_VERSION_WAYBILL_ID = B.ID
			AND
			A.NEW_VERSION_WAYBILL_ID = C.ID
			AND
			A.ID = todo.T_SRV_WAYBILL_RFC_ID
			AND todo.STATUS='Y' AND
			todo.IS_PRINTED='N'
			<include refid="select_page_Where" />
		</where>
		ORDER BY A.OPERATE_TIME
	</select>
	<!-- 手工调整运单计划COUNT -->
	<select id="queryAdjustPlanListCount" resultType="Long"
		parameterType="com.deppon.foss.module.pickup.waybill.api.shared.dto.AdjustPlanSearcherDto">
		SELECT /*模块：接送货-运单-手工调整运单计划COUNT*/
		COUNT(DISTINCT( A.ID ))
		FROM
		PKP.T_SRV_WAYBILLRFC A, PKP.T_SRV_WAYBILL B, PKP.T_SRV_WAYBILL C,
		PKP.T_SRV_LABELEDGOOD_TODO todo
		<where>
			A.OLD_VERSION_WAYBILL_ID = B.ID
			AND
			A.NEW_VERSION_WAYBILL_ID = C.ID
			AND
			A.ID = todo.T_SRV_WAYBILL_RFC_ID
			AND todo.STATUS='Y' AND
			todo.IS_PRINTED='N'
			<include refid="select_page_Where" />
		</where>
	</select>
	<sql id="queryWaybillInfoByCondition_select_column">
		select distinct	/*模块：接送货-运单查询服务-官网我的发货单明细查询*/
		waybill.waybill_no
		waybillNo,
		waybill.order_no orderNumber,
		waybill.bill_time sendTime,
		depart.name departureDeptName,
		depart.address departureDeptAddr,
		depart.dep_telephone departureDeptPhone,
		depart.code
		departureDeptNumber,
		depart.dep_fax departureDeptFax,
		waybill.DELIVERY_CUSTOMER_CONTACT sender,
		waybill.delivery_customer_phone senderPhone,
		waybill.delivery_customer_mobilephone senderMobile,
		waybill.delivery_customer_address senderAddress,
		waybill.receive_customer_contact consignee,
		waybill.receive_customer_phone consigneePhone,
		waybill.receive_customer_mobilephone consigneeMobile,
		waybill.receive_customer_address consigneeAddress,
		waybill.goods_name
		goodName,
		waybill.goods_weight_total weight,
		waybill.goods_volume_total
		cubage,
		waybill.goods_qty_total pieces,
		waybill.goods_package packing,
		waybill.receive_method deliveryType,
		waybill.transport_type tranType,
		waybill.product_code transProperties,
		/* waybill.deliver*/
		waybill.target_org_code destination,
		waybill.paid_method payment,
		waybill.insurance_amount/100 insurance,
		waybill.insurance_fee/100
		insuranceValue,
		waybill.refund_type refundType,
		waybill.cod_amount/100
		refund,
		waybill.cod_fee/100 refundFee,
		waybill.transport_fee/100
		transportFee,
		waybill.delivery_goods_fee/100 deliveryCharge,
		waybill.pickup_fee/100 pickCharge,
		waybill.package_fee/100 packingFee,
		waybill.total_fee/100 totalCharge,
		waybill.other_fee/100 otherFee,
		waybill.return_bill_type returnBillType,
		TO_CHAR(waybill.transportation_remark) tranDesc,
		waybill.paid_method
		paidMethod,
		signre.sign_time signedDate,
		waybill.target_org_code
		ladingStationNumber,
		decode(lading.name,null,agen.agent_dept_name,lading.name)
		ladingStationName,
		decode(lading.name,null,agen.address,lading.name,lading.address)
		ladingStationAddr,
		decode(lading.name,null,agen.contact_phone,lading.name,lading.dep_telephone)
		ladingStationPhone,
		lading.dep_fax ladingStationFax,
		<!-- @author:218371-foss-zhaoyanjun @date:2014-10-30下午21:43 -->
		f.WHETHER_ELECTRONIC_INVOICE isElectronicInvoice,
		<!-- @author:218371-foss-zhaoyanjun @date:2014-10-30下午21:43 -->
		f.INVOICE_MOBILE_PHONE_NO invoiceMobilePhone,
		<!-- @author:218371-foss-zhaoyanjun @date:2014-10-30下午21:43 -->
		f.EMAIL email,
		F.RECEIVE_CUSTOMER_ADDRESS_NOTE
		receiveCustomerAddressNote,
		F.DELIVERY_CUSTOMER_ADDRESS_NOTE
		deliveryCustomerAddressNote
	</sql>

	<sql id="queryAppWaybillInfoByCondition_select_column">
		select distinct	/*模块：接送货-运单查询服务-APP我的发货单明细查询*/
		waybill.waybill_no waybillNo,
		waybill.create_time createTime,
		waybill.order_no orderNumber,
		waybill.bill_time sendTime,
		depart.name departureDeptName,
		depart.address departureDeptAddr,
		depart.dep_telephone
		departureDeptPhone,
		depart.code departureDeptNumber,
		depart.dep_fax
		departureDeptFax,
		waybill.DELIVERY_CUSTOMER_CONTACT sender,
		waybill.delivery_customer_phone senderPhone,
		waybill.delivery_customer_mobilephone senderMobile,
		waybill.delivery_customer_address senderAddress,
		waybill.receive_customer_contact consignee,
		waybill.receive_customer_phone consigneePhone,
		waybill.receive_customer_mobilephone consigneeMobile,
		waybill.receive_customer_address consigneeAddress,
		waybill.goods_name
		goodName,
		waybill.goods_weight_total weight,
		waybill.goods_volume_total
		cubage,
		waybill.goods_qty_total pieces,
		waybill.goods_package packing,
		waybill.receive_method deliveryType,
		waybill.transport_type tranType,
		waybill.product_code transProperties,
		/* waybill.deliver*/
		waybill.target_org_code destination,
		waybill.paid_method payment,
		waybill.insurance_amount/100 insurance,
		waybill.insurance_fee/100
		insuranceValue,
		waybill.refund_type refundType,
		waybill.cod_amount/100
		refund,
		waybill.cod_fee/100 refundFee,
		waybill.transport_fee/100
		transportFee,
		waybill.delivery_goods_fee/100 deliveryCharge,
		waybill.pickup_fee/100 pickCharge,
		waybill.package_fee/100 packingFee,
		waybill.total_fee/100 totalCharge,
		waybill.other_fee/100 otherFee,
		waybill.return_bill_type returnBillType,
		TO_CHAR(waybill.transportation_remark) tranDesc,
		waybill.paid_method
		paidMethod,
		signre.sign_time signedDate,
		waybill.target_org_code
		ladingStationNumber,
		decode(lading.name,null,agen.agent_dept_name,lading.name)
		ladingStationName,
		decode(lading.name,null,agen.address,lading.name,lading.address)
		ladingStationAddr,
		decode(lading.name,null,agen.contact_phone,lading.name,lading.dep_telephone)
		ladingStationPhone,
		lading.dep_fax ladingStationFax,
		depa.name
		departureCityName,
    	dest.name destinationCityName,
    	waybill.PRE_ARRIVE_TIME predictArriveTime,
		F.RECEIVE_CUSTOMER_ADDRESS_NOTE
		receiveCustomerAddressNote,
		F.DELIVERY_CUSTOMER_ADDRESS_NOTE
		deliveryCustomerAddressNote
	</sql>

	<sql id="queryWaybillInfoByCondition_from_where">
		from pkp.t_srv_waybill waybill
		left join bse.t_bas_org depart on
		waybill.receive_org_code = depart.code
		and
		depart.active=#{active,jdbcType=VARCHAR}
		left join
		pkp.t_srv_waybill_sign_result signre on signre.waybill_no =
		waybill.waybill_no and signre.active=#{active,jdbcType=VARCHAR}
		left
		join bse.t_bas_outer_branch agen on waybill.customer_pickup_org_code=
		agen.agent_dept_code and agen.active=#{active,jdbcType=VARCHAR}
		inner
		join pkp.t_srv_actual_freight f on f.waybill_no=waybill.waybill_no 
		<if test="startDate!=null and endDate!=null">
		  And (f.create_time between #{startDate,jdbcType=TIMESTAMP} and
					#{endDate,jdbcType=TIMESTAMP} )
		</if>
		left join bse.t_bas_org lading on waybill.customer_pickup_org_code =
		lading.code and lading.active=#{active,jdbcType=VARCHAR}
		where
		waybill.active = #{active,jdbcType=VARCHAR}
		<choose>
			<!-- 关键字为运单号 -->
			<when test="waybillNumber!=null and waybillNumber!=''">
				and waybill.waybill_no
				=#{waybillNumber,jdbcType=VARCHAR}
			</when>
			<!--关键字条件为‘收货人’ -->
			<when test="consigneeName!=null and consigneeName!=''">
				and waybill.receive_customer_contact
				=#{consigneeName,jdbcType=VARCHAR}
			</when>
			<!--关键字条件为‘货物名称’ -->
			<when test="goodsName!=null and goodsName!=''">
				and waybill.goods_name like
				CONCAT(#{goodsName,jdbcType=VARCHAR},'%')
			</when>
			<otherwise>
				<!--剩余查询条件 -->
				<if test="startDate!=null and endDate!=null">
					and waybill.bill_time between #{startDate,jdbcType=TIMESTAMP} and
					#{endDate,jdbcType=TIMESTAMP}
				</if>
				<if test="payWay!=null and payWay!=''">
					and waybill.paid_method = #{payWay,jdbcType=VARCHAR}
				</if>
			</otherwise>
		</choose>
		<choose>
			<when test="linkmanId!=null and linkmanId!=''">
				and waybill.delivery_customer_contact_id = #{linkmanId,jdbcType=VARCHAR}
			</when>
			<otherwise>
				<if test="userName!=null and userName!=''">
					and f.CHANNELCUSTID = #{userName,jdbcType=VARCHAR}
				</if>
			</otherwise>
		</choose>
	</sql>
	
	<sql id="queryWaybillInfoByCondition_from_where1">
		from pkp.t_srv_waybill waybill
		left join bse.t_bas_org depart on
		waybill.receive_org_code = depart.code
		and
		depart.active=#{active,jdbcType=VARCHAR}
		left join
		pkp.t_srv_waybill_sign_result signre on signre.waybill_no =
		waybill.waybill_no and signre.active=#{active,jdbcType=VARCHAR}
		left
		join bse.t_bas_outer_branch agen on waybill.customer_pickup_org_code=
		agen.agent_dept_code and agen.active=#{active,jdbcType=VARCHAR}
		inner
		join pkp.t_srv_actual_freight f on f.waybill_no=waybill.waybill_no 
		<if test="startDate!=null and endDate!=null">
		 And (f.create_time between #{startDate,jdbcType=TIMESTAMP} and
					#{endDate,jdbcType=TIMESTAMP} )
		</if>
		left join bse.t_bas_org lading on waybill.customer_pickup_org_code =
		lading.code and lading.active=#{active,jdbcType=VARCHAR}
		where
		waybill.active = #{active,jdbcType=VARCHAR}
		<choose>
			<!-- 关键字为运单号 -->
			<when test="waybillNumber!=null and waybillNumber!=''">
				and waybill.waybill_no
				=#{waybillNumber,jdbcType=VARCHAR}
			</when>
			<!--关键字条件为‘收货人’ -->
			<when test="consigneeName!=null and consigneeName!=''">
				and waybill.receive_customer_contact
				=#{consigneeName,jdbcType=VARCHAR}
			</when>
			<!--关键字条件为‘货物名称’ -->
			<when test="goodsName!=null and goodsName!=''">
				and waybill.goods_name like
				CONCAT(#{goodsName,jdbcType=VARCHAR},'%')
			</when>
			<otherwise>
				<!--剩余查询条件 -->
				<if test="startDate!=null and endDate!=null">
					and waybill.bill_time between
					#{startDate,jdbcType=TIMESTAMP} and
					#{endDate,jdbcType=TIMESTAMP}
				</if>
				<if test="payWay!=null and payWay!=''">
					and waybill.paid_method = #{payWay,jdbcType=VARCHAR}
				</if>
			</otherwise>
		</choose>
		<if test="linkmanId!=null and linkmanId!=''">
			and waybill.delivery_customer_contact_id = #{linkmanId,jdbcType=VARCHAR}
		</if>
	</sql>
	
	
	<sql id="queryWaybillInfoByCondition_from_where2">
		from pkp.t_srv_waybill waybill
		left join bse.t_bas_org depart on
		waybill.receive_org_code = depart.code
		and
		depart.active=#{active,jdbcType=VARCHAR}
		left join
		pkp.t_srv_waybill_sign_result signre on signre.waybill_no =
		waybill.waybill_no and signre.active=#{active,jdbcType=VARCHAR}
		left
		join bse.t_bas_outer_branch agen on waybill.customer_pickup_org_code=
		agen.agent_dept_code and agen.active=#{active,jdbcType=VARCHAR}
		inner 
		join pkp.t_srv_actual_freight f on f.waybill_no=waybill.waybill_no 
		<if test="startDate!=null and endDate!=null">
		  And (f.create_time between #{startDate,jdbcType=TIMESTAMP} and
					#{endDate,jdbcType=TIMESTAMP} )
		</if>
		left join bse.t_bas_org lading on waybill.customer_pickup_org_code =
		lading.code and lading.active=#{active,jdbcType=VARCHAR}
		where
		waybill.active = #{active,jdbcType=VARCHAR}
		<choose>
			<!-- 关键字为运单号 -->
			<when test="waybillNumber!=null and waybillNumber!=''">
				and waybill.waybill_no
				=#{waybillNumber,jdbcType=VARCHAR}
			</when>
			<!--关键字条件为‘收货人’ -->
			<when test="consigneeName!=null and consigneeName!=''">
				and waybill.receive_customer_contact
				=#{consigneeName,jdbcType=VARCHAR}
			</when>
			<!--关键字条件为‘货物名称’ -->
			<when test="goodsName!=null and goodsName!=''">
				and waybill.goods_name like
				CONCAT(#{goodsName,jdbcType=VARCHAR},'%')
			</when>
			<otherwise>
				<!--剩余查询条件 -->
				<if test="startDate!=null and endDate!=null">
					and waybill.bill_time between
					#{startDate,jdbcType=TIMESTAMP} and
					#{endDate,jdbcType=TIMESTAMP}
				</if>
				<if test="payWay!=null and payWay!=''">
					and waybill.paid_method = #{payWay,jdbcType=VARCHAR}
				</if>
			</otherwise>
		</choose>
		<if test="userName!=null and userName!=''">
			and f.CHANNELCUSTID = #{userName,jdbcType=VARCHAR}
		</if>
	</sql>

	<!-- 根据单号查询运单状态 -->
	<select id="queryWaybillStatus" statementType="CALLABLE"
		resultType="java.util.Map">
	<![CDATA[  
    	{call pkp.foss_procedure_pkg.foss_cc_status_trace(#{waybillNo,mode=IN,jdbcType=VARCHAR},
    		  #{msg,mode=OUT,jdbcType=VARCHAR},
    		  #{v_goods_status,mode=OUT,jdbcType=VARCHAR})
    	}  
	]]>
	</select>
	<select id="queryWaybillInfoByCondition" parameterType="java.util.Map"
		resultType="com.deppon.foss.module.pickup.waybill.shared.dto.CrmWaybillServiceDto">
		<choose>
			<when test="linkmanId!=null and linkmanId!='' and userName!=null and userName!=''">
				select * from 
				<![CDATA[ ( ]]>
		<include refid="queryWaybillInfoByCondition_select_column" />
					<include refid="queryWaybillInfoByCondition_from_where1" />
					UNION
					<include refid="queryWaybillInfoByCondition_select_column" />
					<include refid="queryWaybillInfoByCondition_from_where2" />
				<![CDATA[ ) T ]]>
				order by T.sendTime desc
			</when>
			<otherwise>
				<include refid="queryWaybillInfoByCondition_select_column" />
		<include refid="queryWaybillInfoByCondition_from_where" />
				order by waybill.bill_time desc
			</otherwise>
		</choose>
	</select>
	<select id="countQueryWaybillInfoByCondition" parameterType="java.util.Map"
		resultType="int">
		<choose>
			<when test="linkmanId!=null and linkmanId!='' and userName!=null and userName!=''">
				SELECT COUNT(1) FROM 
					<![CDATA[ ( ]]>
					SELECT waybill.waybill_no
					<include refid="queryWaybillInfoByCondition_from_where1" />
					UNION
					SELECT waybill.waybill_no
					<include refid="queryWaybillInfoByCondition_from_where2" />
					<![CDATA[ ) ]]>
			</when>
			<otherwise>
				SELECT COUNT(1) FROM 
					<![CDATA[ ( ]]>
					SELECT distinct(waybill.waybill_no)
		<include refid="queryWaybillInfoByCondition_from_where" />
					<![CDATA[ ) ]]>
			</otherwise>
		</choose>
	</select>

	<!-- wutao 添加发货客户大客户字段 -->
	<select id="queryWaybillInfo"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillQueryInfoDto"
		resultMap="waybillInfoResultMap">
		select  /*模块：接送货-运单-根据运单集合返回运单详细信息*/
		w.waybill_no ,
		w.transport_type ,
		w.product_code,
		w.delivery_customer_name ,
		w.delivery_customer_contact,
		w.delivery_customer_phone ,
		w.delivery_customer_mobilephone ,
		w.delivery_big_customer ,<!-- 增加发货客户为大客户 -->
		w.receive_org_code ,
		w.delivery_customer_address ,
		w.receive_customer_name ,
		w.receive_customer_contact,
		w.receive_customer_phone ,
		w.receive_customer_mobilephone,
		w.target_org_code,
		w.receive_customer_address,
		w.goods_name,
		w.goods_qty_total,
		w.goods_weight_total,
		w.goods_volume_total,
		w.total_fee/100 as total_fee,
		w.paid_method,
		w.pre_pay_amount/100 as
		pre_pay_amount,
		w.to_pay_amount/100 as to_pay_amount,
		w.refund_type,
		w.cod_amount/100 as cod_amount,
		w.cod_fee/100 as cod_fee,
		w.receive_method,
		w.pickup_fee/100 as pickup_fee,
		w.delivery_goods_fee/100 as delivery_goods_fee,
		w.package_fee/100 as
		package_fee,
		w.service_fee/100 as service_fee,
		w.transport_fee/100 as
		transport_fee,
		w.receive_org_code,
		w.customer_pickup_org_code,
		w.pre_arrive_time,
		r.sign_situation,
		r.deliveryman_name,
		r.sign_time,
		r.sign_note,
		w.order_no,
		w.insurance_amount/100 as insurance_amount,
		w.insurance_fee/100 as insurance_fee,
		w.goods_package,
		w.active,
		w.other_fee/100 as other_fee,
		w.outer_notes,
		w.delivery_customer_code,
		w.receive_customer_code,
		f.settle_status,
		w.return_bill_type,
		w.transportation_remark,
		w.goods_package,
		w.bill_time,
		w.load_org_code ,
		w.delivery_customer_prov_code ,
		w.delivery_customer_city_code ,
		w.delivery_customer_dist_code,
		w.receive_customer_prov_code ,
		w.receive_customer_city_code ,
		w.receive_customer_dist_code,
		w.pickup_to_door,

		w.PICKUP_CENTRALIZED,
		w.CREATE_USER_CODE,
		w.CREATE_USER_NAME,
		w.CREATE_USER_DEPT_NAME,

		w.CREATE_ORG_CODE as
		CREATE_ORG_CODE,
		bso.name as CREATE_ORG_NAME,
		w.DRIVER_CODE,
		bsem2.emp_name as DRIVER_NAME,
		w.IS_EXPRESS,


		w.MODIFY_TIME,
	    bsem3.emp_code as MODIFY_USER_CODE,
	    bsem3.emp_name as MODIFY_USER_NAME,
	    mbso.UNIFIED_CODE as MODIFY_ORG_CODE,
	    mbso.NAME as MODIFY_ORG_NAME,
	    w.GOODS_SIZE,

		exp.EXPRESS_EMP_CODE ,
		exp.EXPRESS_EMP_NAME,
		exp.EXPRESS_ORG_CODE,
		exp.EXPRESS_ORG_NAME,


		F.RECEIVE_CUSTOMER_ADDRESS_NOTE AS RECEIVE_CUSTOMER_ADDRESS_NOTE,
		F.DELIVERY_CUSTOMER_ADDRESS_NOTE AS DELIVERY_CUSTOMER_ADDRESS_NOTE,
		f.notification_result,
		d.pricing_entry_code,
		e.name,
		d.amount/100 as
		amount,

		tcg.OPERATION_ORG_NAME,
		tcg.OPERATION_ORG_CODE,
		bso.name as
		PRINCIPAL_ORG_NAME,
		bso.PRINCIPAL_NO,
		bsem.emp_name,

		wr.RETURN_TYPE,  <!-- 添加新字段，返货类型 -->
		wr.ORIGINAL_WAYBILL_NO,  <!-- 添加新字段，原运单号 -->
        w.pre_customer_pickup_time, <!-- 添加新字段，预计派送/提货时间 -->
        f.STATUS <!-- 添加新字段，运单状态 -->
        from pkp.t_srv_waybill w
		left join pkp.t_srv_waybill_charge_detail d on
		d.waybill_no = w.waybill_no
		and d.active = 'Y'
		<!-- 关联表 wutao -->
		left join pkp.t_srv_waybill_return wr on wr.waybill_no = w.waybill_no
		left join pkp.t_srv_pricing_entry e on e.code = d.pricing_entry_code
		and
		e.active = 'Y'
		left join pkp.t_srv_waybill_sign_result r on
		r.waybill_no = w.waybill_no
		and r.active = 'Y'
		inner join
		pkp.t_srv_actual_freight f on f.waybill_no = w.waybill_no
		left join
		pkp.T_SRV_WAYBILL_EXPRESS exp on exp.WAYBILL_ID = w.ID
		left join
		(select tc.* from tfr.t_opt_complement_log tc where
		tc.operation_time=(
		select max(operation_time) from
		tfr.t_opt_complement_log where waybill_no=tc.waybill_no))tcg
		on
		tcg.waybill_no = w.waybill_no
		left join bse.t_bas_org bso on
		bso.code=w.CREATE_ORG_CODE and bso.active='Y'
		left join bse.t_bas_org
		mbso on mbso.code=w.MODIFY_ORG_CODE and mbso.active='Y'
		left join
		bse.t_bas_employee bsem on bsem.emp_code=bso.PRINCIPAL_NO and
		bsem.active='Y'
		left join bse.t_bas_employee bsem2 on
		bsem2.emp_code=w.DRIVER_CODE and bsem2.active='Y'
		left join
		bse.t_bas_employee bsem3 on bsem3.emp_code=w.MODIFY_USER_CODE and
		bsem3.active='Y'
		where w.waybill_no in
		<foreach collection="waybillList" open="(" close=")"
			separator="," item="waybillNo">
			<if test="waybillNo!=null and waybillNo != ''">
    	      <![CDATA[	#{waybillNo,jdbcType=VARCHAR} ]]>
			</if>
		</foreach>
		<if test="state!=null and state!= ''">
			and w.active =  <![CDATA[#{state,jdbcType=VARCHAR}]]>
		</if>
	</select>

	<!-- 根据运单号查询含PDA待补录的运单基本信息 -->
	<select id="selectByWaybillExistPDAPending" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillQueryArgsDto">
		select /*模块：接送货-运单-根据运单号查询含PDA待补录的运单基本信息*/
		<include refid="Base_Column_List_Select" />
		from PKP.T_SRV_WAYBILL
		<where>
			<!-- ACTIVE = #{active,jdbcType=CHAR} -->
			<!-- AND  -->
			<!-- 防止出现一个运单号对应多个运单号时报错的情况出现 -->
			ROWNUM = 1
			<if test="waybillNo != null">
				and WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>
			<if test="waybillStatus != null">
				and PENDING_TYPE = #{waybillStatus,jdbcType=VARCHAR}
			</if>
		</where>
	</select>

	<!-- 是否存在id为传入值 并且active=y的运单 -->
	<select id="existsActiveWaybillById" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select /*模块：接送货-运单-是否存在id为传入值 并且active=y的运单*/
		<include refid="Base_Column_List_Select" />
		from PKP.T_SRV_WAYBILL
		<where>
			ACTIVE = #{active,jdbcType=CHAR}
			AND ID = #{id,jdbcType=VARCHAR}
			AND ROWNUM = 1 FOR UPDATE nowait
		</where>
	</select>

  <update id="updateLastOrgcode"  parameterType="java.util.Map">
  update pkp.t_srv_waybill waybill
		set waybill.last_load_org_code =
		#{lastOrgCode,jdbcType=CHAR}
  <if test="lastOrgName != null">
  , waybill.last_load_org_name =#{lastOrgName,jdbcType=CHAR}
		</if>
 where waybill.id = #{waybillID,jdbcType=CHAR}
  </update>

 <update id="updateEndStockOrgcode"  parameterType="java.util.Map">
		update
		pkp.t_srv_actual_freight af
		set
		af.end_stock_org_code=#{lastOrgCode,jdbcType=CHAR}
		where
		af.waybill_no=#{waybillNO,jdbcType=CHAR}
 </update>

  <!-- 根据运单号和查询未补录的运单 -->
  <select id="selectWaybillNoMakeupByWaybillNo" resultType="java.lang.String"
    parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillQueryInfoDto">
		select waybill_No value
    from PKP.T_SRV_WAYBILL
    <where>
      ACTIVE = #{active,jdbcType=CHAR}
      <choose>
        <when test="waybillList!= null and waybillList.size>0">
          and waybill_no in
					<foreach collection="waybillList" open="(" close=")"
						separator="," item="waybill">
            <if test="waybill!=null and waybill != ''">
                    <![CDATA[  #{waybill,jdbcType=VARCHAR} ]]>
                    </if>
          </foreach>
        </when>
        <otherwise>
          and waybill_no = ''
        </otherwise>
      </choose>
      <if test="pendingTypes!= null and pendingTypes.size>0">
          and pending_Type not in
				<foreach collection="pendingTypes" open="(" close=")"
					separator="," item="type">
						<if test="type!=null and type != ''">
		        	      <![CDATA[	#{type,jdbcType=VARCHAR} ]]>
		                </if>
					</foreach>
			</if>
		</where>
	</select>

	<!-- 根据单号查询运单状态 -->
	<select id='getWaybillStatus' parameterType="java.util.Map"
		resultType="String">
		select f.status
		from pkp.t_srv_actual_freight f
		where
		f.waybill_no=#{waybill,jdbcType=VARCHAR}
				 and rownum=1

	</select>


	<select id="getWaybillSignInfo" parameterType="java.util.Map"
		resultMap="signDto">
		select SEND_EXPRESS_ORG_CODE AS ORG_CODE,
		SEND_EXPRESS_ORG_NAME AS ORG_NAME,
		SEND_EXPRESS_EMP_CODE AS EMP_CODE,
		SEND_EXPRESS_EMP_NAME AS EMP_NAME,
		CREATE_ORG_CODE AS CREATE_ORG_CODE,
		CREATE_ORG_NAME AS CREATE_ORG_NAME,
		CREATOR AS CREATE_USER_NAME,
		CREATOR_CODE AS CREATOR_USER_CODE
		from pkp.T_SRV_WAYBILL_SIGN_RESULT
	 	where  WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR} and active='Y'
	</select>




	<resultMap id="dataDictValueResultMap"
		type="com.deppon.foss.module.base.dict.api.shared.domain.DataDictionaryValueEntity">
		<result property="id" column="ID"  jdbcType="VARCHAR" />
		<result property="virtualCode" column="VIRTUAL_CODE"  jdbcType="VARCHAR" />
		<result property="termsCode" column="TERMS_CODE"  jdbcType="VARCHAR" />
		<result property="termsName" column="TERMS_NAME"  jdbcType="VARCHAR" />
		<result property="valueSeq" column="VALUE_SEQ"  jdbcType="VARCHAR" />
		<result property="valueName" column="VALUE_NAME"  jdbcType="VARCHAR" />
		<result property="valueCode" column="VALUE_CODE"  jdbcType="VARCHAR" />
		<result property="language" column="LANGUAGE"  jdbcType="VARCHAR" />

		<result property="extAttribute1" column="EXTATTRIBUTE1"
			jdbcType="VARCHAR" />
		<result property="noteInfo" column="NOTE_INFO"  jdbcType="VARCHAR" />
		<result property="versionNo" column="VERSION_NO"  jdbcType="DECIMAL" />
		<result property="active" column="ACTIVE"  jdbcType="CHAR" />
		<result property="createDate" column="CREATE_TIME"  jdbcType="TIMESTAMP" />
		<result property="modifyDate" column="MODIFY_TIME"  jdbcType="TIMESTAMP" />
		<result property="createUser" column="CREATE_USER_CODE"
			jdbcType="VARCHAR" />
		<result property="modifyUser" column="MODIFY_USER_CODE"
			jdbcType="VARCHAR" />
	</resultMap>
	<sql id="dataDictValue_Column_List">
		A.ID AS ID, /** ID **/
		A.VIRTUAL_CODE AS VIRTUAL_CODE, /**
		虚拟编码 **/
		A.TERMS_CODE AS TERMS_CODE, /** 词条代码 **/
		A.TERMS_NAME AS
		TERMS_NAME, /** 词条名称 **/
		A.VALUE_SEQ AS VALUE_SEQ, /** 序号 **/
		A.VALUE_NAME AS VALUE_NAME, /** 值名称 **/
		A.VALUE_CODE AS VALUE_CODE, /**
		值代码 **/
		A.LANGUAGE AS LANGUAGE, /** 语言 **/
		A.ACTIVE AS ACTIVE, /** 是否启用
		**/
		A.CREATE_TIME AS CREATE_TIME, /** 创建时间 **/
		A.MODIFY_TIME AS
		MODIFY_TIME, /** 更新时间 **/
		A.CREATE_USER_CODE AS CREATE_USER_CODE, /**
		创建人 **/
		A.MODIFY_USER_CODE AS MODIFY_USER_CODE		/** 更新人     **/
	</sql>
	<!-- 通过词条代码查询 -->
	<select id="selectDataDictValueByTermsCode" resultMap="dataDictValueResultMap"
		parameterType="com.deppon.foss.module.base.dict.api.shared.domain.DataDictionaryValueEntity">
		select
    	<include refid="dataDictValue_Column_List" />
    	from BSE.T_BAS_DATA_DICTIONARY_VALUE A
		where A.TERMS_CODE =
		#{termsCode,jdbcType=VARCHAR}
		and A.ACTIVE = #{active,jdbcType=CHAR}
    		order by A.VALUE_SEQ
  	</select>

	<resultMap id="sysConfigResultMap"
		type="com.deppon.foss.module.base.dict.api.shared.domain.ConfigurationParamsEntity">
        <result property="id" column="ID"  jdbcType="VARCHAR" />
		<result property="code" column="CODE"  jdbcType="VARCHAR" />
		<result property="confName" column="CONF_NAME"  jdbcType="VARCHAR" />
		<result property="confValue" column="CONF_VALUE"  jdbcType="VARCHAR" />
		<result property="unit" column="UNIT"  jdbcType="VARCHAR" />
		<result property="notes" column="NOTES"  jdbcType="VARCHAR" />
		<result property="versionNo" column="VERSION_NO"  jdbcType="NUMERIC" />
		<result property="active" column="ACTIVE"  jdbcType="CHAR" />
		<result property="createDate" column="CREATE_TIME"  jdbcType="DATE" />
		<result property="modifyDate" column="MODIFY_TIME"  jdbcType="DATE" />
		<result property="createUser" column="CREATE_USER_CODE"
			jdbcType="VARCHAR" />
		<result property="modifyUser" column="MODIFY_USER_CODE"
			jdbcType="VARCHAR" />
		<result property="orgCode" column="ORG_CODE"  jdbcType="VARCHAR" />
		<result property="confType" column="CONF_TYPE"  jdbcType="VARCHAR" />
		<result property="dataType" column="DATA_TYPE"  jdbcType="VARCHAR" />
		<result property="virtualCode" column="VIRTUAL_CODE" jdbcType="VARCHAR" />
  </resultMap>

	<sql id="sysConfig_Column_List">
		ID, CODE, CONF_NAME, CONF_VALUE, UNIT, NOTES, ACTIVE,
		CREATE_TIME,
		MODIFY_TIME, CREATE_USER_CODE,
		MODIFY_USER_CODE, ORG_CODE,
		CONF_TYPE, DATA_TYPE, VIRTUAL_CODE
  </sql>

  	<!-- 通过配置项集合查询系统配置 -->
	<select id="selectSysConfigByConfCodeArray" resultMap="sysConfigResultMap"
  		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.SysConfigDto">
		select
		<include refid="sysConfig_Column_List" />
		from BSE.T_BAS_SYS_CONFIG
		where ACTIVE = #{active,jdbcType=VARCHAR}
			<if test="orgCode != null">
 				and ORG_CODE IN ( ${orgCode} )
			</if>
			<if test="confType != null">
			and CONF_TYPE = #{confType,jdbcType=VARCHAR}
			</if>
		and CODE in
		<foreach item="item" index="index" collection="confCodes"
                   open="(" separator="," close=")">
            	#{item}
            </foreach>
  </select>

	<!-- 通过配置项标示查询系统配置,根据confCode和orgCode一起查询 -->
	<select id="selectSysConfigByConfCode" resultMap="sysConfigResultMap"
  parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.SysConfigDto">
		select
		<include refid="sysConfig_Column_List" />
		from BSE.T_BAS_SYS_CONFIG
		where ACTIVE = #{active,jdbcType=VARCHAR}
		and
		CODE = #{confCode,jdbcType=VARCHAR}
			<if test="orgCode != null">
 				and ORG_CODE IN (${orgCode})
			</if>
			<if test="confType != null">
 				and CONF_TYPE = #{confType,jdbcType=VARCHAR}
			</if>
  </select>

	<!-- 查询网点自提区域信息 -->
  <select id="selectByCodeAndPickup" resultType="String"
		parameterType="String">
		<![CDATA[
		SELECT 
	        DESC_CONTENT
	    	FROM BSE.T_BAS_SALES_DESC_EXPAND
		]]>
		<where>
			CODE = #{code,jdbcType=VARCHAR}
			AND DESC_TYPE = 'DELIVERY'
			AND
			ACTIVE = 'Y' ORDER BY DESC_ORDER
		</where>
  </select>

	<!-- 查询网点自提区域信息 -->
  <select id="selectByCodeAndDelivery" resultType="String"
		parameterType="String">
		<![CDATA[
		SELECT 
	        DESC_CONTENT
	    	FROM BSE.T_BAS_SALES_DESC_EXPAND
		]]>
		<where>
			CODE = #{code,jdbcType=VARCHAR}
			AND DESC_TYPE = 'DELIVERY'
			AND
			ACTIVE = 'Y' ORDER BY DESC_ORDER
		</where>
  </select>

	<!-- 根据产品查询自有网点 -->
	<select id="queryListByDepartmentAndPro"
		resultType="com.deppon.foss.module.pickup.waybill.shared.vo.BranchQueryVo"
  		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.SaleDepartmentEntity">
    select distinct sales.code as code,
		sales.name as name,
		sales.Pickup_Area_Desc as pickupAreaDesc, /**自提描述**/
		sales.DELIVERY_AREA_DESC as deliveryAreaDesc, /**派送描述**/
		sales.Pickup_Self as chbPickupTwo,/**可自提**/
		sales.Delivery as
		chbDeliverTwo,/**可派送**/
		sales.CAN_PAY_SERVICE_FEE as
		chbPayServicefee,/**是否可开装卸费**/
		sales.CAN_RETURN_SIGN_BILL as
		chbReturnBill,/**是否可返回签单**/
		sales.CAN_CASH_ON_DELIVERY as
		chbArrivePayment, /**是否可货到付款**/
		sales.CAN_AGENT_COLLECTED as
		chbCod,/**是否可代收货款**/
		sales.PICKUP_AREA_IS_EXPAND as
		pickUpAreaIsExpand,/**自提区域扩展**/
		sales.DELIVERY_AREA_IS_EXPAND as
		deliveryAreaIsExpand,/**自提区域扩展**/
		org.org_simple_name as targetOrgName,
		/**简称**/
		org.Dep_Telephone as phone,/**部门联系电话**/
		org.ADDRESS as
		branchAddress, /**地址**/
		org.prov_code as province,  /**省**/
		org.city_code as city /**市**/
	 from bse.t_bas_sales_department sales
	 left join bse.t_bas_org org
	 on sales.code = org.code
		left join
		BSE.T_BAS_PRO_SALESDEPT salesdept on sales.code =
		salesdept.sales_dept_code
    <where>
    	<if test="name !=null and name!= '' ">
				and sales.NAME like
				CONCAT(CONCAT('%',#{name,jdbcType=VARCHAR}),'%')
    	</if>
    	<if test="active != null and active != '' ">
    		and sales.active = #{active,jdbcType=VARCHAR}
				and
				org.active = #{active,jdbcType=VARCHAR}
    	</if>
    	<if test="pickupSelf != null and pickupSelf != '' ">
    		and sales.Pickup_Self = #{pickupSelf,jdbcType=VARCHAR}
    	</if>
    	<if test="delivery != null and delivery != '' ">
    		and sales.Delivery = #{delivery,jdbcType=VARCHAR}
    	</if>
    	<if test="openingDate != null">
			<![CDATA[and sales.OPENING_DATE <= #{openingDate,jdbcType=TIMESTAMP}]]>
		</if>
		<if test="isBigGoods != null and isBigGoods == 'Y'.toString()">
			<![CDATA[
				and salesdept.active = 'Y'
				and salesdept.product_code in ('BGFLF','BGLRF','BGFSF','BGSRF') 
			]]>
		</if>
    </where>
	</select>


	<!-- 查询自有网点 -->
	<select id="queryListByDepartment"
		resultType="com.deppon.foss.module.pickup.waybill.shared.vo.BranchQueryVo"
  		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.SaleDepartmentEntity">
		select
		sales.code as code,
		sales.name as name,
		sales.Pickup_Area_Desc as
		pickupAreaDesc,
		/**自提描述**/
		sales.DELIVERY_AREA_DESC as deliveryAreaDesc,
		/**派送描述**/
		sales.Pickup_Self as chbPickupTwo,/**可自提**/
		sales.Delivery as
		chbDeliverTwo,/**可派送**/
		sales.CAN_PAY_SERVICE_FEE as
		chbPayServicefee,/**是否可开装卸费**/
		sales.CAN_RETURN_SIGN_BILL as
		chbReturnBill,/**是否可返回签单**/
		sales.CAN_CASH_ON_DELIVERY as
		chbArrivePayment, /**是否可货到付款**/
		sales.CAN_AGENT_COLLECTED as
		chbCod,/**是否可代收货款**/
		sales.PICKUP_AREA_IS_EXPAND as
		pickUpAreaIsExpand,/**自提区域扩展**/
		sales.DELIVERY_AREA_IS_EXPAND as
		deliveryAreaIsExpand,/**自提区域扩展**/
		org.org_simple_name as targetOrgName,
		/**简称**/
		org.Dep_Telephone as phone,/**部门联系电话**/
		org.ADDRESS as
		branchAddress, /**地址**/
		org.prov_code as province,  /**省**/
		org.city_code as city /**市**/
	 from bse.t_bas_sales_department sales
	 left join bse.t_bas_org org
	 on sales.code = org.code
    <where>
    	<if test="name !=null and name!= '' ">
				and sales.NAME like
				CONCAT(CONCAT('%',#{name,jdbcType=VARCHAR}),'%')
    	</if>
    	<if test="active != null and active != '' ">
    		and sales.active = #{active,jdbcType=VARCHAR}
				and
				org.active = #{active,jdbcType=VARCHAR}
    	</if>
    	<if test="pickupSelf != null and pickupSelf != '' ">
    		and sales.Pickup_Self = #{pickupSelf,jdbcType=VARCHAR}
    	</if>
    	<if test="delivery != null and delivery != '' ">
    		and sales.Delivery = #{delivery,jdbcType=VARCHAR}
    	</if>
    	<if test="openingDate != null">
			<![CDATA[and sales.OPENING_DATE <= #{openingDate,jdbcType=TIMESTAMP}]]>
		</if>
    </where>
	</select>

	<!-- 查询汽运偏线、空运网点 -->
	<select id="queryListByBranch"
		parameterType="com.deppon.foss.module.base.baseinfo.api.shared.domain.OuterBranchEntity"
	 	resultType="com.deppon.foss.module.pickup.waybill.shared.vo.BranchQueryVo">
	 	select
		  ob.AGENT_DEPT_CODE as code, /**代理网点编码**/
		ob.AGENT_DEPT_NAME as
		name, /**代理网点名称**/
		  ob.AGENT_COMPANY,	/**代理公司**/
		ob.SIMPLENAME as
		targetOrgName, /** 代理简称**/
		  ob.PROV_CODE as province,	/**	省份**/
		  ob.AIR_WAYBILL_TEL as airBillPhone, /**	正单联系电话**/
		ob.AIR_WAYBILL_NAME
		as airBillName, /** 正单开单名称**/
		  ob.CITY_CODE as city,	/**城市**/
		ob.ADDRESS
		as branchAddress, /**网点地址**/
		  ob.PICKUP_SELF as chbPickupTwo,/**是否可自提**/
		  ob.PICKUP_TO_DOOR as chbDeliverTwo, /**是否送货上门**/
		ob.RETURN_BILL as
		chbReturnBill, /**是否支持返回签单**/
		ob.ARRIVE_CHARGE as chbArrivePayment,
		/**是否支持货到付款**/
		  ob.HELP_CHARGE as chbCod,	/**是否支持代收货款**/
		ob.PICKUP_AREA
		as pickupAreaDesc, /**自提区域**/
		ob.DELIVER_AREA as deliveryAreaDesc,
		/**派送区域**/
		  ob.CONTACT_PHONE as phone,	/**	联系电话**/
		ob.BRANCHTYPE as
		branchType, /** 网点类型 KY:空运代理网点 PX：偏线代理网点**/
		ob.IS_AIRPORT as IS_AIRPORT
		/** 是否是机场 **/
		from bse.t_bas_outer_branch ob
		<where>
			<if test="agentDeptName !=null and agentDeptName != '' ">
				and ob.AGENT_DEPT_NAME like
				CONCAT(CONCAT('%',#{agentDeptName,jdbcType=VARCHAR}),'%')
    		</if>
    		<if test="active != null and active != '' ">
    			and ob.active = #{active,jdbcType=VARCHAR}
    		</if>
    		<if test="pickupSelf != null and pickupSelf != '' ">
    			and ob.PICKUP_SELF = #{pickupSelf,jdbcType=VARCHAR}
	    	</if>
	    	<if test="pickupToDoor!= null and pickupToDoor != '' ">
	    		and ob.PICKUP_TO_DOOR = #{pickupToDoor,jdbcType=VARCHAR}
	    	</if>
	    	<if test="branchtype != null and branchtype != '' ">
	    		and ob.BRANCHTYPE = #{branchtype,jdbcType=VARCHAR}
	    	</if>
			<if test="isAirport != null">
      			and ob.IS_AIRPORT = #{isAirport, jdbcType=CHAR}
      		</if>
		</where>
	</select>
	<select id="queryBranchCustomerPickupOrgNameByWayno"
		parameterType="java.util.Map" resultType="String">
		 	select *
		from (select
		b.agent_dept_name from bse.t_bas_outer_branch b
		where b.agent_dept_code
		= #{orgcode,jdbcType=VARCHAR}
          				   order by b.create_time desc)
		where rownum
		= 1
	</select>
	<select id="queryBranchCustomerPickupOrgNameByWaynoActive"
		parameterType="java.util.Map" resultType="String">
		 	select *
		from (select
		b.agent_dept_name from bse.t_bas_outer_branch b
		where b.agent_dept_code
		= #{orgcode,jdbcType=VARCHAR}
          				   and b.active=#{active,jdbcType=VARCHAR})
  					where rownum = 1
	</select>
	<select id="queryOrgCustomerPickupOrgNameByWayno" parameterType="java.util.Map"
		resultType="String">
		    select *
   					from (select b.name from bse.t_Bas_Org b
		where
		b.code = #{orgcode,jdbcType=VARCHAR}
          				   order by b.create_time desc)
		where
		rownum = 1
	</select>
	<select id="queryOrgCustomerPickupOrgNameByWaynoActive"
		parameterType="java.util.Map" resultType="String">
		    select *
		from (select b.name
		from bse.t_Bas_Org b
          	               where b.code = #{orgcode,jdbcType=VARCHAR}
		and
		b.active=#{active,jdbcType=VARCHAR})
  					where rownum = 1
	</select>

	<select id="queryReceiveOrgNameByWayno" parameterType="java.util.Map"
		resultType="String">
			select *
   					from (select b.name from bse.t_Bas_Org b
		where
		b.code = #{orgcode,jdbcType=VARCHAR}
          				   order by b.create_time desc)
		where
		rownum = 1
	</select>

	<resultMap id="salesBillingGroupResultMap"
   			type="com.deppon.foss.module.base.baseinfo.api.shared.domain.SalesBillingGroupEntity">
		<result property="id" column="ID"  jdbcType="VARCHAR" />
		<result property="virtualCode" column="VIRTUAL_CODE"  jdbcType="VARCHAR" />
		<result property="salesDeptCode" column="SALESDEPT_CODE"
			jdbcType="VARCHAR" />
		<result property="salesDeptName" column="SALESDEPT_NAME"
			jdbcType="VARCHAR" />
		<result property="billingGroupCode" column="BILLINGGROUP_CODE"
			jdbcType="VARCHAR" />
		<result property="billingGroupName" column="BILLINGGROUP_NAME"
			jdbcType="VARCHAR" />
		<result property="createDate" column="CREATE_TIME"  jdbcType="TIMESTAMP" />
		<result property="modifyDate" column="MODIFY_TIME"  jdbcType="TIMESTAMP" />
		<result property="active" column="ACTIVE"  jdbcType="CHAR" />
		<result property="createUser" column="CREATE_USER_CODE"
			jdbcType="VARCHAR" />
		<result property="modifyUser" column="MODIFY_USER_CODE"
			jdbcType="VARCHAR" />
		<result property="version" column="VERSION_NO" jdbcType="NUMERIC" />
	</resultMap>

	<sql id="salesBillingGroupColumns">
		T.ID,
		T.VIRTUAL_CODE,
		T.SALESDEPT_CODE,
		T.SALESDEPT_NAME,
		T.BILLINGGROUP_CODE,
		T.BILLINGGROUP_NAME,
		T.CREATE_TIME,
		T.MODIFY_TIME,
		T.ACTIVE,
		T.CREATE_USER_CODE,
		T.MODIFY_USER_CODE,
		T.VERSION_NO
	</sql>

	<select id="querySalesBillGroupByCodeAndBillCode" resultMap="salesBillingGroupResultMap"
		parameterType="java.util.Map">
		select
		<include refid="salesBillingGroupColumns" />
		from BSE.T_BAS_SALESDEPT_BILLINGGROUP T
		<where>
				and T.ACTIVE = #{active,jdbcType=CHAR}
			<if test="code !=null">
    			and T.SALESDEPT_CODE = #{code,jdbcType=VARCHAR}
    		</if>
    		<if test="billingGroup != null">
				and T.BILLINGGROUP_CODE =
				#{billingGroup,jdbcType=VARCHAR}
			</if>
		</where>
	</select>

	<!-- 按单号且创建时间升序查询运单 -->
	<select id="queryWaybillNo" resultMap="BaseResultMap"
		parameterType="java.util.Map">

		select * from (
		select	/*模块：接送货-运单查询-根据运单号和订单号查询运单基本信息*/
		<include refid="Base_Column_List_Select" />
		from PKP.T_SRV_WAYBILL
		where
			<if test="waybillNo != null and  waybillNo != '' ">
				 WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>
		and ACTIVE ='Y'
		order
		by CREATE_TIME
		) where  ROWNUM = 1
	</select>
	<select id="queryWaybillIsPcOrPdaOrRfcActive" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from pkp.t_srv_waybill w
		where waybill_no=#{waybillNo,jdbcType=VARCHAR}
		and
		w.active=#{active,jdbcType=VARCHAR}
		<if test="pendingTypeList != null">
			and w.pending_type in
			<foreach collection="pendingTypeList" open="(" close=")"
				separator="," item="pendingType">
					<if test="pendingType!=null and pendingType != ''">
		    	      <![CDATA[	#{pendingType,jdbcType=VARCHAR} ]]>
		            </if>
				</foreach>
		</if>
	</select>

	<select id="queryPendingByNo" resultMap="BaseResultMapPending"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.domain.WaybillPendingEntity">
		SELECT /*模块：接送货-运单-查询待处理运单*/
		<include refid="Base_Column_List_pending" />
		FROM PKP.T_SRV_WAYBILL_PENDING P
		WHERE P.ACTIVE =
		#{active,jdbcType=VARCHAR}
		AND (P.WAYBILL_NO =
		#{waybillNo,jdbcType=VARCHAR} OR P.ORDER_NO =
		#{waybillNo,jdbcType=VARCHAR})
	</select>

	<resultMap id="BaseResultMapPending"
		type="com.deppon.foss.module.pickup.waybill.shared.domain.WaybillPendingEntity">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="ORDER_NO" property="orderNo" jdbcType="VARCHAR" />
		<result column="ORDER_CHANNEL" property="orderChannel"
			jdbcType="VARCHAR" />
		<result column="ORDER_PAID_METHOD" property="orderPaidMethod"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_ID" property="deliveryCustomerId"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CODE" property="deliveryCustomerCode"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_NAME" property="deliveryCustomerName"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_MOBILEPHONE" property="deliveryCustomerMobilephone"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_PHONE" property="deliveryCustomerPhone"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CONTACT" property="deliveryCustomerContact"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_NATION_CODE" property="deliveryCustomerNationCode"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_PROV_CODE" property="deliveryCustomerProvCode"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CITY_CODE" property="deliveryCustomerCityCode"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_DIST_CODE" property="deliveryCustomerDistCode"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_ADDRESS" property="deliveryCustomerAddress"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_ID" property="receiveCustomerId"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CODE" property="receiveCustomerCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_NAME" property="receiveCustomerName"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_MOBILEPHONE" property="receiveCustomerMobilephone"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_PHONE" property="receiveCustomerPhone"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CONTACT" property="receiveCustomerContact"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_NATION_CODE" property="receiveCustomerNationCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_PROV_CODE" property="receiveCustomerProvCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CITY_CODE" property="receiveCustomerCityCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_DIST_CODE" property="receiveCustomerDistCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_ADDRESS" property="receiveCustomerAddress"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_ORG_CODE" property="receiveOrgCode"
			jdbcType="VARCHAR" />
		<result column="PRODUCT_ID" property="productId" jdbcType="VARCHAR" />
		<result column="PRODUCT_CODE" property="productCode" jdbcType="VARCHAR" />
		<result column="RECEIVE_METHOD" property="receiveMethod"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_PICKUP_ORG_CODE" property="customerPickupOrgCode"
			jdbcType="VARCHAR" />
		<result column="LOAD_METHOD" property="loadMethod" jdbcType="VARCHAR" />
		<result column="TARGET_ORG_CODE" property="targetOrgCode"
			jdbcType="VARCHAR" />
		<result column="PICKUP_TO_DOOR" property="pickupToDoor"
			jdbcType="CHAR" />
		<result column="DRIVER_CODE" property="driverCode" jdbcType="VARCHAR" />
		<result column="PICKUP_CENTRALIZED" property="pickupCentralized"
			jdbcType="CHAR" />
		<result column="LOAD_LINE_CODE" property="loadLineCode"
			jdbcType="VARCHAR" />
		<result column="LOAD_ORG_CODE" property="loadOrgCode" jdbcType="VARCHAR" />
		<result column="LAST_LOAD_ORG_CODE" property="lastLoadOrgCode"
			jdbcType="VARCHAR" />
		<result column="PRE_DEPARTURE_TIME" property="preDepartureTime"
			jdbcType="TIMESTAMP" />
		<result column="PRE_CUSTOMER_PICKUP_TIME" property="preCustomerPickupTime"
			jdbcType="TIMESTAMP" />
		<result column="CAR_DIRECT_DELIVERY" property="carDirectDelivery"
			jdbcType="CHAR" />
		<result column="GOODS_NAME" property="goodsName" jdbcType="VARCHAR" />
		<result column="GOODS_QTY_TOTAL" property="goodsQtyTotal"
			jdbcType="DECIMAL" />
		<result column="GOODS_WEIGHT_TOTAL" property="goodsWeightTotal"
			jdbcType="DECIMAL" />
		<result column="GOODS_VOLUME_TOTAL" property="goodsVolumeTotal"
			jdbcType="DECIMAL" />
		<result column="GOODS_SIZE" property="goodsSize" jdbcType="VARCHAR" />
		<result column="GOODS_TYPE_CODE" property="goodsTypeCode"
			jdbcType="VARCHAR" />
		<result column="PRECIOUS_GOODS" property="preciousGoods"
			jdbcType="CHAR" />
		<result column="SPECIAL_SHAPED_GOODS" property="specialShapedGoods"
			jdbcType="CHAR" />
		<result column="OUTER_NOTES" property="outerNotes" jdbcType="VARCHAR" />
		<result column="INNER_NOTES" property="innerNotes" jdbcType="VARCHAR" />
		<result column="GOODS_PACKAGE" property="goodsPackage"
			jdbcType="VARCHAR" />
		<result column="INSURANCE_AMOUNT" property="insuranceAmount"
			jdbcType="DECIMAL" />
		<result column="INSURANCE_RATE" property="insuranceRate"
			jdbcType="DECIMAL" />
		<result column="INSURANCE_FEE" property="insuranceFee"
			jdbcType="DECIMAL" />
		<result column="COD_AMOUNT" property="codAmount" jdbcType="DECIMAL" />
		<result column="COD_RATE" property="codRate" jdbcType="DECIMAL" />
		<result column="COD_FEE" property="codFee" jdbcType="DECIMAL" />
		<result column="REFUND_TYPE" property="refundType" jdbcType="VARCHAR" />
		<result column="RETURN_BILL_TYPE" property="returnBillType"
			jdbcType="VARCHAR" />
		<result column="SECRET_PREPAID" property="secretPrepaid"
			jdbcType="CHAR" />
		<result column="TO_PAY_AMOUNT" property="toPayAmount" jdbcType="DECIMAL" />
		<result column="PRE_PAY_AMOUNT" property="prePayAmount"
			jdbcType="DECIMAL" />
		<result column="DELIVERY_GOODS_FEE" property="deliveryGoodsFee"
			jdbcType="DECIMAL" />
		<result column="OTHER_FEE" property="otherFee" jdbcType="DECIMAL" />
		<result column="PACKAGE_FEE" property="packageFee" jdbcType="DECIMAL" />
		<result column="PROMOTIONS_FEE" property="promotionsFee"
			jdbcType="DECIMAL" />
		<result column="BILLING_TYPE" property="billingType" jdbcType="VARCHAR" />
		<result column="UNIT_PRICE" property="unitPrice" jdbcType="DECIMAL" />
		<result column="TRANSPORT_FEE" property="transportFee"
			jdbcType="DECIMAL" />
		<result column="VALUE_ADD_FEE" property="valueAddFee" jdbcType="DECIMAL" />
		<result column="PAID_METHOD" property="paidMethod" jdbcType="VARCHAR" />
		<result column="ARRIVE_TYPE" property="arriveType" jdbcType="VARCHAR" />
		<result column="ACTIVE" property="active" jdbcType="CHAR" />
		<result column="FORBIDDEN_LINE" property="forbiddenLine"
			jdbcType="CHAR" />
		<result column="FREIGHT_METHOD" property="freightMethod"
			jdbcType="VARCHAR" />
		<result column="FLIGHT_SHIFT" property="flightShift" jdbcType="VARCHAR" />
		<result column="TOTAL_FEE" property="totalFee" jdbcType="DECIMAL" />
		<result column="PROMOTIONS_CODE" property="promotionsCode"
			jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="MODIFY_TIME" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="BILL_TIME" property="billTime" jdbcType="TIMESTAMP" />
		<result column="CREATE_USER_CODE" property="createUserCode"
			jdbcType="VARCHAR" />
		<result column="MODIFY_USER_CODE" property="modifyUserCode"
			jdbcType="VARCHAR" />
		<result column="CREATE_ORG_CODE" property="createOrgCode"
			jdbcType="VARCHAR" />
		<result column="MODIFY_ORG_CODE" property="modifyOrgCode"
			jdbcType="VARCHAR" />
		<result column="REF_ID" property="refId" jdbcType="VARCHAR" />
		<result column="REF_CODE" property="refCode" jdbcType="VARCHAR" />
		<result column="CURRENCY_CODE" property="currencyCode"
			jdbcType="VARCHAR" />
		<result column="IS_WHOLE_VEHICLE" property="isWholeVehicle"
			jdbcType="CHAR" />
		<result column="WHOLE_VEHICLE_APPFEE" property="wholeVehicleAppfee"
			jdbcType="DECIMAL" />
		<result column="WHOLE_VEHICLE_ACTUALFEE" property="wholeVehicleActualfee"
			jdbcType="DECIMAL" />
		<result column="ACCOUNT_NAME" property="accountName" jdbcType="VARCHAR" />
		<result column="ACCOUNT_CODE" property="accountCode" jdbcType="VARCHAR" />
		<result column="ACCOUNT_BANK" property="accountBank" jdbcType="VARCHAR" />
		<result column="BILL_WEIGHT" property="billWeight" jdbcType="DECIMAL" />
		<result column="PICKUP_FEE" property="pickupFee" jdbcType="DECIMAL" />
		<result column="SERVICE_FEE" property="serviceFee" jdbcType="DECIMAL" />
		<result column="PRE_ARRIVE_TIME" property="preArriveTime"
			jdbcType="TIMESTAMP" />
		<result column="ADD_TIME" property="addTime" jdbcType="TIMESTAMP" />
		<result column="PENDING_TYPE" property="pendingType" jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CONTACT_ID" property="receiveCustomerContactId"
			jdbcType="VARCHAR" />
		<result column="PAPER_NUM" property="paperNum" jdbcType="DECIMAL" />
		<result column="WOOD_NUM" property="woodNum" jdbcType="DECIMAL" />
		<result column="FIBRE_NUM" property="fibreNum" jdbcType="DECIMAL" />
		<result column="SALVER_NUM" property="salverNum" jdbcType="DECIMAL" />
		<result column="MEMBRANE_NUM" property="membraneNum" jdbcType="DECIMAL" />
		<result column="OTHER_PACKAGE" property="otherPackage"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CONTACT_ID" property="deliveryCustomerContactId"
			jdbcType="VARCHAR" />
		<result column="TRANSPORT_TYPE" property="transportType"
			jdbcType="VARCHAR" />
		<result column="TRANSPORTATION_REMARK" property="transportationRemark"
			jdbcType="VARCHAR" />
		<result column="CONTACT_ADDRESS_ID" property="contactAddressId"
			jdbcType="VARCHAR" />
		<result column="FLIGHT_NUMBER_TYPE" property="flightNumberType"
			jdbcType="VARCHAR" />
		<result column="IS_PASS_OWN_DEPARTMENT" property="isPassOwnDepartment"
			jdbcType="CHAR" />
		<result column="COLLECTION_DEPARTMENT" property="collectionDepartment"
			jdbcType="VARCHAR" />
		<result column="LICENSE_PLATE_NUM" property="licensePlateNum"
			jdbcType="VARCHAR" />
		<result column="HANDOVER_STATUS" property="handoverStatus"
			jdbcType="VARCHAR" />
		<result column="IS_OUTER_BRANCH" property="isOuterBranch"
			jdbcType="CHAR" />
		<result column="ORDER_VEHICLE_NUM" property="orderVehicleNum"
			jdbcType="VARCHAR" />
		<result column="KILOMETER" property="kilometer" jdbcType="DECIMAL" />
	</resultMap>
	<sql id="Base_Column_List_pending">
		ID, WAYBILL_NO, ORDER_NO, ORDER_CHANNEL,ORDER_PAID_METHOD,
		DELIVERY_CUSTOMER_ID,
		DELIVERY_CUSTOMER_CODE, DELIVERY_CUSTOMER_NAME,
		DELIVERY_CUSTOMER_MOBILEPHONE, DELIVERY_CUSTOMER_PHONE,
		DELIVERY_CUSTOMER_CONTACT,
		DELIVERY_CUSTOMER_NATION_CODE,
		DELIVERY_CUSTOMER_PROV_CODE, DELIVERY_CUSTOMER_CITY_CODE,
		DELIVERY_CUSTOMER_DIST_CODE, DELIVERY_CUSTOMER_ADDRESS,
		RECEIVE_CUSTOMER_ID, RECEIVE_CUSTOMER_CODE,
		RECEIVE_CUSTOMER_NAME,
		RECEIVE_CUSTOMER_MOBILEPHONE, RECEIVE_CUSTOMER_PHONE,
		RECEIVE_CUSTOMER_CONTACT,
		RECEIVE_CUSTOMER_NATION_CODE,
		RECEIVE_CUSTOMER_PROV_CODE, RECEIVE_CUSTOMER_CITY_CODE,
		RECEIVE_CUSTOMER_DIST_CODE, RECEIVE_CUSTOMER_ADDRESS,
		RECEIVE_ORG_CODE, PRODUCT_ID,
		PRODUCT_CODE, RECEIVE_METHOD,
		CUSTOMER_PICKUP_ORG_CODE, LOAD_METHOD,
		TARGET_ORG_CODE,
		PICKUP_TO_DOOR,
		DRIVER_CODE, PICKUP_CENTRALIZED, LOAD_LINE_CODE, LOAD_ORG_CODE,
		LAST_LOAD_ORG_CODE,
		PRE_DEPARTURE_TIME, PRE_CUSTOMER_PICKUP_TIME,
		CAR_DIRECT_DELIVERY, GOODS_NAME,
		GOODS_QTY_TOTAL,
		GOODS_WEIGHT_TOTAL,
		GOODS_VOLUME_TOTAL, GOODS_SIZE, GOODS_TYPE_CODE, PRECIOUS_GOODS,
		SPECIAL_SHAPED_GOODS, OUTER_NOTES, INNER_NOTES, GOODS_PACKAGE,
		INSURANCE_AMOUNT/100 as INSURANCE_AMOUNT,
		INSURANCE_RATE,
		INSURANCE_FEE/100 as INSURANCE_FEE, COD_AMOUNT/100 as COD_AMOUNT,
		COD_RATE, COD_FEE/100 as COD_FEE, REFUND_TYPE, RETURN_BILL_TYPE,
		SECRET_PREPAID, TO_PAY_AMOUNT/100 as TO_PAY_AMOUNT, PRE_PAY_AMOUNT/100
		as PRE_PAY_AMOUNT, DELIVERY_GOODS_FEE/100 as DELIVERY_GOODS_FEE,
		OTHER_FEE/100 as OTHER_FEE, PACKAGE_FEE/100 as PACKAGE_FEE,
		PROMOTIONS_FEE/100 as PROMOTIONS_FEE, BILLING_TYPE, UNIT_PRICE/100 AS
		UNIT_PRICE,
		TRANSPORT_FEE/100 as TRANSPORT_FEE,
		VALUE_ADD_FEE/100 as
		VALUE_ADD_FEE, PAID_METHOD,
		ARRIVE_TYPE, ACTIVE, FORBIDDEN_LINE,
		FREIGHT_METHOD, FLIGHT_SHIFT,
		TOTAL_FEE/100 as TOTAL_FEE,
		PROMOTIONS_CODE,
		CREATE_TIME, MODIFY_TIME,
		BILL_TIME, CREATE_USER_CODE,
		MODIFY_USER_CODE,
		CREATE_ORG_CODE,
		MODIFY_ORG_CODE, REF_ID, REF_CODE,
		CURRENCY_CODE, IS_WHOLE_VEHICLE,
		WHOLE_VEHICLE_APPFEE/100 as
		WHOLE_VEHICLE_APPFEE,
		WHOLE_VEHICLE_ACTUALFEE/100 as
		WHOLE_VEHICLE_ACTUALFEE,ACCOUNT_NAME,
		ACCOUNT_CODE, ACCOUNT_BANK,
		BILL_WEIGHT, PICKUP_FEE/100 as PICKUP_FEE,
		SERVICE_FEE/100 as
		SERVICE_FEE, PRE_ARRIVE_TIME, ADD_TIME,
		PENDING_TYPE,
		RECEIVE_CUSTOMER_CONTACT_ID,
		PAPER_NUM, WOOD_NUM,
		FIBRE_NUM, SALVER_NUM,
		MEMBRANE_NUM, OTHER_PACKAGE,
		DELIVERY_CUSTOMER_CONTACT_ID,
		TRANSPORT_TYPE, TRANSPORTATION_REMARK,
		CONTACT_ADDRESS_ID,
		FLIGHT_NUMBER_TYPE,
		IS_PASS_OWN_DEPARTMENT,
		COLLECTION_DEPARTMENT,
		LICENSE_PLATE_NUM, HANDOVER_STATUS,
		IS_OUTER_BRANCH,kilometer
	</sql>
<!-- 	<resultMap id="productResultMap"
		type="com.deppon.foss.module.pickup.pricing.api.shared.domain.ProductEntity">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="CODE" property="code" jdbcType="VARCHAR" />
		<result column="NAME" property="name" jdbcType="VARCHAR" />
		<result column="ACTIVE" property="active" jdbcType="CHAR" />
		<result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
		<result column="VERSION_NO" property="versionNo" jdbcType="DECIMAL" />
		<result column="BEGIN_TIME" property="beginTime" jdbcType="DATE" />
		<result column="END_TIME" property="endTime" jdbcType="DATE" />
		<result column="TRANSPORT_TYPE" property="transportType"
			jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createDate" jdbcType="DATE" />
		<result column="MODIFY_TIME" property="modifyDate" jdbcType="DATE" />
		<result column="CREATE_USER_CODE" property="createUser"
			jdbcType="VARCHAR" />
		<result column="MODIFY_USER_CODE" property="modifyUser"
			jdbcType="VARCHAR" />
		<result column="CREATE_ORG_CODE" property="createOrgCode"
			jdbcType="VARCHAR" />
		<result column="MODIFY_ORG_CODE" property="modifyOrgCode"
			jdbcType="VARCHAR" />
		<result column="LEVELS" property="levels" jdbcType="DECIMAL" />
		<result column="PARENT_CODE" property="parentCode" jdbcType="VARCHAR" />
		<result column="REF_ID" property="refId" jdbcType="VARCHAR" />
		<result column="SHORT_NAME" property="shortName" jdbcType="VARCHAR" />
		<result column="PRIORITY" property="priority" jdbcType="VARCHAR" />
		<result column="SEQ" property="seq" jdbcType="INTEGER" />
		<result column="DEST_NET_TYPE" property="destNetType" jdbcType="VARCHAR" />
	</resultMap> -->

	<resultMap id="installResultMap"
		type="com.deppon.foss.module.pickup.waybill.shared.domain.InstallationEntity">
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="SPECIAL_VALUE_ADDED_SERVICE" property="specialValueAddedServiceType" jdbcType="VARCHAR" />
		<result column="INSTALLATION_NAME" property="installationName" jdbcType="VARCHAR" />
		<result column="AMOUNT" property="amount" jdbcType="DECIMAL" />
		<result column="INSTALL_PACKAGES" property="installPackages" jdbcType="VARCHAR" />
		<result column="HANDLING_VOLUME" property="handlingVolume" jdbcType="VARCHAR" />
		<result column="EXCEED_NUMBER_FLOORS" property="exceedNumberFloors" jdbcType="VARCHAR" />
		<result column="INSTALLATION_CODE" property="installationCode" jdbcType="VARCHAR" />
		
	</resultMap>
	 <resultMap id="productResultMap" type="com.deppon.foss.module.pickup.pricing.api.shared.domain.ProductEntity" >
   <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="CODE" property="code" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="ACTIVE" property="active" jdbcType="CHAR" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="VERSION_NO" property="versionNo" jdbcType="DECIMAL" />
    <result column="BEGIN_TIME" property="beginTime" jdbcType="DATE" />
    <result column="END_TIME" property="endTime" jdbcType="DATE" />
    <result column="TRANSPORT_TYPE" property="transportType" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createDate" jdbcType="DATE" />
    <result column="MODIFY_TIME" property="modifyDate" jdbcType="DATE" />
    <result column="CREATE_USER_CODE" property="createUser" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_CODE" property="modifyUser" jdbcType="VARCHAR" />
    <result column="CREATE_ORG_CODE" property="createOrgCode" jdbcType="VARCHAR" />
    <result column="MODIFY_ORG_CODE" property="modifyOrgCode" jdbcType="VARCHAR" />    
    <result column="LEVELS" property="levels" jdbcType="DECIMAL" />
    <result column="PARENT_CODE" property="parentCode" jdbcType="VARCHAR" />
    <result column="REF_ID" property="refId" jdbcType="VARCHAR" />
    <result column="SHORT_NAME" property="shortName" jdbcType="VARCHAR" />
    <result column="PRIORITY" property="priority" jdbcType="VARCHAR" />
    <result column="SEQ" property="seq" jdbcType="INTEGER" />
    <result column="DEST_NET_TYPE" property="destNetType" jdbcType="VARCHAR" />
  </resultMap>
	<sql id="product_Column_List">
		A.ID, A.CODE, A.NAME, A.ACTIVE, A.DESCRIPTION,
		A.VERSION_NO, A.BEGIN_TIME,
		A.END_TIME, A.TRANSPORT_TYPE,
		A.CREATE_TIME, A.MODIFY_TIME, A.CREATE_USER_CODE, A.MODIFY_USER_CODE,
		A.CREATE_ORG_CODE, A.MODIFY_ORG_CODE,
		A.LEVELS, A.PARENT_CODE,
		A.REF_ID, A.SHORT_NAME, A.PRIORITY, A.SEQ,
		A.DEST_NET_TYPE
	</sql>
	
	<!--根据运单单好查询查询安装费得相关信息 -->
	<select id="selectInstallInstation" resultMap="installResultMap"
		parameterType="java.lang.String">
		select 
		WAYBILL_NO,
		SPECIAL_VALUE_ADDED_SERVICE,
		INSTALLATION_NAME,
		AMOUNT,
		INSTALL_PACKAGES,
		HANDLING_VOLUME,
		EXCEED_NUMBER_FLOORS,
		INSTALLATION_CODE
		 from  pkp.t_srv_installation a
		where
		a.waybill_no=#{waybillNo,jdbcType=VARCHAR} and a.active='Y'
	</select>
	<select id="selectProductByPrimaryKey" resultMap="productResultMap"
		parameterType="java.lang.String">
		select
		<include refid="product_Column_List" />
		from PKP.T_SRV_PRODUCT A
		where ID = #{id,jdbcType=VARCHAR}
	</select>


	<select id="queryWaybillByReturnBillNo" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillQueryArgsDto">

		select * from (
		select
		<include refid="Base_Column_List_Select2" />
		from PKP.T_SRV_WAYBILL w inner join PKP.T_SRV_WAYBILL_EXPRESS e
		on
		w.WAYBILL_NO = e.WAYBILL_NO
		where
			w.ACTIVE = #{active,jdbcType=CHAR}

			<if test="waybillNo != null and  waybillNo != '' ">
				and e.ORIGINAL_WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>

		order
		by w.CREATE_TIME desc
		) where  ROWNUM = 1
	</select>


	<sql id="Base_Column_List_Select2">
		w.ID, w.WAYBILL_NO, w.ORDER_NO,
		w.ORDER_CHANNEL,w.ORDER_PAID_METHOD,
		w.DELIVERY_CUSTOMER_ID,
		w.DELIVERY_CUSTOMER_CODE,
		w.DELIVERY_CUSTOMER_NAME,
		w.DELIVERY_CUSTOMER_MOBILEPHONE, w.DELIVERY_CUSTOMER_PHONE,
		w.DELIVERY_CUSTOMER_CONTACT,
		w.DELIVERY_CUSTOMER_NATION_CODE,
		w.DELIVERY_CUSTOMER_PROV_CODE,
		w.DELIVERY_CUSTOMER_CITY_CODE,
		w.DELIVERY_CUSTOMER_DIST_CODE, w.DELIVERY_CUSTOMER_ADDRESS,
		w.RECEIVE_CUSTOMER_ID,
		w.RECEIVE_CUSTOMER_CODE,
		w.RECEIVE_CUSTOMER_NAME,
		w.RECEIVE_CUSTOMER_MOBILEPHONE,
		w.RECEIVE_CUSTOMER_PHONE,
		w.RECEIVE_CUSTOMER_CONTACT,
		w.RECEIVE_CUSTOMER_NATION_CODE,
		w.RECEIVE_CUSTOMER_PROV_CODE,
		w.RECEIVE_CUSTOMER_CITY_CODE,
		w.RECEIVE_CUSTOMER_DIST_CODE,
		w.RECEIVE_CUSTOMER_ADDRESS,
		w.RECEIVE_ORG_CODE, w.PRODUCT_ID,
		w.PRODUCT_CODE, w.RECEIVE_METHOD,
		w.CUSTOMER_PICKUP_ORG_CODE,
		w.LOAD_METHOD,
		w.TARGET_ORG_CODE,
		w.PICKUP_TO_DOOR,
		w.DRIVER_CODE,
		w.PICKUP_CENTRALIZED, w.LOAD_LINE_CODE, w.LOAD_ORG_CODE,
		w.LAST_LOAD_ORG_CODE,
		w.PRE_DEPARTURE_TIME, w.PRE_CUSTOMER_PICKUP_TIME,
		w.CAR_DIRECT_DELIVERY, w.GOODS_NAME,
		w.GOODS_QTY_TOTAL,
		w.GOODS_WEIGHT_TOTAL,
		w.GOODS_VOLUME_TOTAL, w.GOODS_SIZE,
		w.GOODS_TYPE_CODE, w.PRECIOUS_GOODS,
		w.SPECIAL_SHAPED_GOODS,
		w.OUTER_NOTES, w.INNER_NOTES, w.GOODS_PACKAGE,
		w.INSURANCE_AMOUNT/100
		as INSURANCE_AMOUNT,
		w.COD_AMOUNT/100 as COD_AMOUNT,
		w.COD_RATE,
		w.COD_FEE/100 as COD_FEE, w.REFUND_TYPE,
		w.RETURN_BILL_TYPE,
		w.SECRET_PREPAID, w.TO_PAY_AMOUNT/100 as TO_PAY_AMOUNT,
		w.PRE_PAY_AMOUNT/100
		as PRE_PAY_AMOUNT, w.DELIVERY_GOODS_FEE/100 as
		DELIVERY_GOODS_FEE,
		w.OTHER_FEE/100 as OTHER_FEE, w.PACKAGE_FEE/100 as
		PACKAGE_FEE,
		w.PROMOTIONS_FEE/100 as PROMOTIONS_FEE, w.BILLING_TYPE,
		w.TRANSPORT_FEE/100
		as TRANSPORT_FEE, w.VALUE_ADD_FEE/100 as
		VALUE_ADD_FEE, w.PAID_METHOD,
		w.ARRIVE_TYPE, ACTIVE, w.FORBIDDEN_LINE,
		w.FREIGHT_METHOD,
		w.FLIGHT_SHIFT,
		w.TOTAL_FEE/100 as TOTAL_FEE,
		w.PROMOTIONS_CODE, w.CREATE_TIME,
		w.MODIFY_TIME,
		w.BILL_TIME,
		w.CREATE_USER_CODE,
		w.MODIFY_USER_CODE, w.CREATE_ORG_CODE,
		w.MODIFY_ORG_CODE, w.REF_ID, w.REF_CODE, w.CURRENCY_CODE,
		w.IS_WHOLE_VEHICLE,
		w.WHOLE_VEHICLE_APPFEE/100 as WHOLE_VEHICLE_APPFEE,
		w.WHOLE_VEHICLE_ACTUALFEE/100 as WHOLE_VEHICLE_ACTUALFEE,
		w.ACCOUNT_NAME,
		w.ACCOUNT_CODE,
		w.ACCOUNT_BANK, w.BILL_WEIGHT,
		w.PICKUP_FEE/100 as PICKUP_FEE,
		w.SERVICE_FEE/100 as
		SERVICE_FEE,
		w.PRE_ARRIVE_TIME, w.TRANSPORT_TYPE,
		w.ADD_TIME, w.INSURANCE_RATE,
		w.INSURANCE_FEE/100 as
		INSURANCE_FEE,w.UNIT_PRICE/100 AS
		UNIT_PRICE,CONTACT_ADDRESS_ID,
		w.FLIGHT_NUMBER_TYPE,
		w.COLLECTION_DEPARTMENT,
		w.TRANSPORTATION_REMARK,w.IS_PASS_OWN_DEPARTMENT,
		w.PAPER_NUM,w.WOOD_NUM,w.FIBRE_NUM,w.SALVER_NUM,w.MEMBRANE_NUM,w.OTHER_PACKAGE,w.DELIVERY_CUSTOMER_CONTACT_ID,w.RECEIVE_CUSTOMER_CONTACT_ID,
		w.PENDING_TYPE,w.LICENSE_PLATE_NUM,w.ORDER_VEHICLE_NUM,
		w.CREATE_USER_NAME,w.CREATE_USER_DEPT_NAME , w.RECEIVE_ORG_NAME,
		w.CUSTOMER_PICKUP_ORG_NAME, w.LOAD_ORG_NAME, w.LAST_LOAD_ORG_NAME,
		w.TRANSFER_START_ORG_CODE, w.TRANSFER_START_ORG_NAME, w.KILOMETER,
		w.IS_INIT, w.IS_ECONOMY_GOODS, w.ECONOMY_GOODS_TYPE,
		w.DELIVERY_BIG_CUSTOMER,w.RECEIVE_BIG_CUSTOMER,w.IS_EXPRESS
	</sql>



	<select id="selectByWaybillNoNoActive" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillQueryArgsDto">

		select * from (
		select
		<include refid="Base_Column_List_Select" />
		from PKP.T_SRV_WAYBILL
		where
			 WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}

		order
		by CREATE_TIME desc
		)
	</select>

	<select id="queryIsExpressBill" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select
		<include refid="Base_Column_List_Select" />
		from PKP.T_SRV_WAYBILL
		<where>
			<if test="waybillNo != null and waybillNo!=''">
				and WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>
			<if test="productCode != null and productCode!=''">
				and product_code = #{productCode,jdbcType=VARCHAR}
			</if>
			<if test="isExpress!=null and isExpress!=''">
			     <![CDATA[	 and product_code IN ('PACKAGE','RCP','EPEP')]]>
			</if>
		</where>
	</select>

	<!-- 更新代办事项 -->
	<select id="selectPdaWaybillCreateTime" parameterType="java.util.Map"
		resultMap="EarliestCreateTimeMap">
		select  /*模块：接送货-运单-根据运单集合查询FOSS最早开单时间*/
			min(waybill_no) waybillNo,
			min(w.create_time) createTime
  		from pkp.t_srv_waybill w
		<choose>
			<when test="waybillNoList!= null and waybillNoList.size>0">
				where waybill_no in
				<foreach collection="waybillNoList" open="(" close=")"
					separator="," item="waybillNo">
					<if test="waybillNo!=null and waybillNo != ''">
		    	      <![CDATA[	#{waybillNo,jdbcType=VARCHAR} ]]>
		            </if>
				</foreach>
			</when>
			<otherwise>
				where waybill_no =''
			</otherwise>
		</choose>
		<![CDATA[group by w.waybill_no]]>
	</select>

	<update id="updateActualFreightEntity"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.domain.ActualFreightEntity">
		update pkp.t_srv_actual_freight
		set invoice =
		#{invoice,jdbcType=VARCHAR},
		 MODIFY_TIME = SYSDATE
		where WAYBILL_NO =
		 #{waybillNo,jdbcType=VARCHAR}
	</update>

	<!-- 获取刚提交运单时的那条运单信息 -->
	<select id="selectByWaybillNoForFirst" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillQueryArgsDto">
		select * from (
		select	/*模块：接送货-运单查询-根据运单号获取刚提交运单时的那条运单信息*/
		<include refid="Base_Column_List_Select" />
		from PKP.T_SRV_WAYBILL
		where 1 = 1
			<if test="waybillNo != null and  waybillNo != '' ">
				and WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
		</if>
		order
		by CREATE_TIME asc
		) where  ROWNUM = 1
	</select>

  <!-- 根据运单号删除运单信息 -->
	<update id="deleteWaybillByWaybillNo" parameterType="java.util.Map">
		UPDATE
		PKP.T_SRV_WAYBILL
     SET ACTIVE = #{active,jdbcType=CHAR}
		WHERE WAYBILL_NO
		= #{waybillNo,jdbcType=VARCHAR}
      AND ACTIVE = #{conActive,jdbcType=CHAR}
      AND PENDING_TYPE = #{pendingType,jdbcType=VARCHAR}
  </update>

	<select id="queryWaybillEntityByDeliverbillById" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select /*模块：接送货-运单查询-根据派送单Id查询运单信息*/
		<include refid="Base_Column_List_Select" />
		  from pkp.t_srv_waybill w
		 where w.waybill_no in
		       (select waybill_no
		from
		pkp.t_srv_deliverbill_detail d
		where d.t_srv_deliverbill_id
		=#{deliverBillId,jdbcType=VARCHAR})
		and active =
		#{active,jdbcType=VARCHAR}
	</select>

	<select id="queryWaybillEntityByHandoverBillNo" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select /*模块：接送货-运单查询-根据交接单No查询运单信息*/
	    <include refid="Base_Column_List_Select" />
	      from pkp.t_srv_waybill w
	     where w.waybill_no in
	           (select waybill_no
		from
		tfr.t_opt_handoverbill_detail d
		where d.handover_no
		=#{handoverBillNo,jdbcType=VARCHAR})
		and active =
		#{active,jdbcType=VARCHAR}
	</select>


	<sql id="queryWaybillInfoByCrm_select_column">
		SELECT /*模块：接送货-运单查询服务-CRM发货客户查询*/
		W.WAYBILL_NO,W.RECEIVE_CUSTOMER_NAME,W.RECEIVE_CUSTOMER_CONTACT,W.RECEIVE_CUSTOMER_MOBILEPHONE,W.RECEIVE_CUSTOMER_PHONE,
		(PROV.NAME || CITY.NAME || DIST.NAME || W.RECEIVE_CUSTOMER_ADDRESS)
		RECEIVE_CUSTOMER_ADDRESS,P.NAME
		PRODUCT_CODE,W.CUSTOMER_PICKUP_ORG_NAME,W.BILL_TIME,
		DIS.SUB_TYPE_NAME
		ACTIVE_NAME,MARK.ACTIVITYTYPE
		ACTIVE_TYPE,DIS.ACTIVE_CODE,DIS.PRICING_ENTRY_NAME
		DISCOUNT_TYPE,DIS.ACTIVE_START_TIME,DIS.ACTIVE_END_TIME
	</sql>
	<sql id="queryWaybillInfoByCrm_from_where">
		FROM PKP.T_SRV_WAYBILL W
		LEFT JOIN PKP.T_SRV_WAYBILL_DIS_DETAIL DIS ON
		W.WAYBILL_NO=DIS.WAYBILL_NO
		AND DIS.ACTIVE=#{active,jdbcType=VARCHAR}
		AND
		DIS.TYPE=#{discountType,jdbcType=VARCHAR}
		LEFT JOIN
		PKP.T_SRV_PRODUCT P ON W.PRODUCT_CODE=P.CODE AND
		P.ACTIVE=#{active,jdbcType=VARCHAR}
		LEFT JOIN BSE.T_BAS_DISTRICT PROV
		ON
		W.RECEIVE_CUSTOMER_PROV_CODE=PROV.CODE AND
		PROV.ACTIVE=#{active,jdbcType=VARCHAR}
		LEFT JOIN BSE.T_BAS_DISTRICT
		CITY ON
		W.RECEIVE_CUSTOMER_CITY_CODE=CITY.CODE AND
		CITY.ACTIVE=#{active,jdbcType=VARCHAR}
		LEFT JOIN BSE.T_BAS_DISTRICT
		DIST ON
		W.RECEIVE_CUSTOMER_DIST_CODE=DIST.CODE AND
		DIST.ACTIVE=#{active,jdbcType=VARCHAR}
		LEFT JOIN
		BSE.T_BAS_MARK_ACTIVITIES MARK ON DIS.ACTIVE_CODE=MARK.CODE AND
		MARK.ACTIVE=#{active,jdbcType=VARCHAR}
		LEFT JOIN
		PKP.T_SRV_ACTUAL_FREIGHT ACT ON W.WAYBILL_NO=ACT.WAYBILL_NO
		WHERE
		W.ACTIVE=#{active,jdbcType=VARCHAR}
		 <if test="startDate!=null">
			 AND W.BILL_TIME<![CDATA[  >=  ]]>#{startDate,jdbcType=TIMESTAMP}
		 </if>
		 <if test="endDate!=null">
			 AND W.BILL_TIME<![CDATA[  <  ]]>#{endDate,jdbcType=TIMESTAMP}
		 </if>
		 <if test="deliveryCustomerCode!=null and deliveryCustomerCode!=''">
			AND W.DELIVERY_CUSTOMER_CODE =
			#{deliveryCustomerCode,jdbcType=VARCHAR}
		 </if>
		 <if test="obsolete!=null and obsolete!=''">
			 AND ACT.STATUS<![CDATA[  <>  ]]>#{obsolete,jdbcType=VARCHAR}
		 </if>
		 <if test="aborted!=null and aborted!=''">
			 AND ACT.STATUS<![CDATA[  <>  ]]>#{aborted,jdbcType=VARCHAR}
		</if>
		 ORDER BY W.BILL_TIME
	</sql>
	<resultMap id="CrmResultMap"
		type="com.deppon.foss.module.pickup.waybill.shared.dto.CrmResultDto">
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_NAME" property="receiveCustomerName"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CONTACT" property="receiveCustomerContact"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_MOBILEPHONE" property="receiveCustomerMobilephone"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_PHONE" property="receiveCustomerPhone"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_ADDRESS" property="receiveCustomerAddress"
			jdbcType="VARCHAR" />
		<result column="PRODUCT_CODE" property="productCode" jdbcType="VARCHAR" />
		<result column="CUSTOMER_PICKUP_ORG_NAME" property="customerPickupOrgCode"
			jdbcType="VARCHAR" />
		<result column="BILL_TIME" property="billTime" jdbcType="TIMESTAMP" />
		<result column="ACTIVE_NAME" property="activeName" jdbcType="VARCHAR" />
		<result column="ACTIVE_TYPE" property="activeType" jdbcType="VARCHAR" />
		<result column="ACTIVE_CODE" property="activeCode" jdbcType="VARCHAR" />
		<result column="DISCOUNT_TYPE" property="discountType"
			jdbcType="VARCHAR" />
		<result column="ACTIVE_START_TIME" property="activeStartTime"
			jdbcType="TIMESTAMP" />
		<result column="ACTIVE_END_TIME" property="activeEndTime"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<select id="queryWaybillInfoByCrm"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.vo.CrmParamVo"
		resultMap="CrmResultMap">
		<include refid="queryWaybillInfoByCrm_select_column" />
		<include refid="queryWaybillInfoByCrm_from_where" />
	</select>
	<select id="countQueryWaybillInfoByCrm"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.vo.CrmParamVo"
		resultType="int">
		SELECT COUNT(1)
		<include refid="queryWaybillInfoByCrm_from_where" />
	</select>

	<!-- 查询该发货客户当天是否收取过接货费 -->
	<select id="queryIsGetPickFeeByCust" resultType="int"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.domain.WaybillEntity">
		SELECT	/*模块：接送货-运单查询-查询该发货客户当天是否收取过接货费*/
		COUNT(1)
		FROM PKP.T_SRV_WAYBILL
		W
		LEFT JOIN PKP.T_SRV_ACTUAL_FREIGHT F ON
		F.WAYBILL_NO = W.WAYBILL_NO
		WHERE
		  <!-- 必须是有效的 -->
		  W.ACTIVE = #{active,jdbcType=CHAR}
		  <!-- 排除作废和中止的运单,为空时表示还未补录 -->
		  AND F.STATUS NOT IN ('ABORTED','OBSOLETE')
		<!-- 收货部门 ，必须要有收货部门 -->
		  AND W.RECEIVE_ORG_CODE = #{receiveOrgCode,jdbcType=VARCHAR}
		  <!-- 发货客户编码 -->
		  <if test="deliveryCustomerCode != null and  deliveryCustomerCode != '' ">
			AND W.DELIVERY_CUSTOMER_CODE =
			#{deliveryCustomerCode,jdbcType=VARCHAR}
 		  </if>
 		  <!-- 发货客户手机 -->
		<if
			test="deliveryCustomerMobilephone != null and  deliveryCustomerMobilephone != '' ">
			AND W.DELIVERY_CUSTOMER_MOBILEPHONE =
			#{deliveryCustomerMobilephone,jdbcType=VARCHAR}
 		  </if>
 		  <!-- 发货客户电话 -->
 		  <if test="deliveryCustomerPhone != null and  deliveryCustomerPhone != '' ">
			AND W.DELIVERY_CUSTOMER_PHONE =
			#{deliveryCustomerPhone,jdbcType=VARCHAR}
		</if>
		AND (
 		  	<!-- 当前时间大于等于8点时，时间取值范围应该在：当天8点到次日8点之间 -->
		#{billTime,jdbcType=TIMESTAMP} <![CDATA[ >= ]]>
		(TRUNC(#{billTime,jdbcType=TIMESTAMP}) + 8 / 24) AND (W.BILL_TIME <![CDATA[ >= ]]>
		TRUNC(#{billTime,jdbcType=TIMESTAMP}) + 8 / 24 AND W.BILL_TIME <![CDATA[ < ]]>
		TRUNC(#{billTime,jdbcType=TIMESTAMP}) + 1 + 8 / 24)
 		  	<!-- 当前时间小于8点时，时间取值范围应该在：前一天8点到当天8点之间 -->
		OR (#{billTime,jdbcType=TIMESTAMP} <![CDATA[ < ]]>
		(TRUNC(#{billTime,jdbcType=TIMESTAMP}) + 8 / 24) AND (W.BILL_TIME <![CDATA[ >= ]]>
		TRUNC(#{billTime,jdbcType=TIMESTAMP})-1 + 8 / 24 AND W.BILL_TIME <![CDATA[ < ]]>
		TRUNC(#{billTime,jdbcType=TIMESTAMP}) + 8 / 24))
   		  )
   		  <!-- 接货费规定值 -->
   		  <if test="pickupToDoor != null">
 		  	AND W.Pickup_To_Door =  #{pickupToDoor,jdbcType=VARCHAR}
 		  </if>
 		  <!-- 除本运单之外有没有收取过接货费 -->
   		  <if test="waybillNo != null">
			AND W.WAYBILL_NO <![CDATA[ <> ]]>
			#{waybillNo,jdbcType=VARCHAR}
		</if>
 		  <!-- 运输性质去除快递 -->
 		  <if test="productCode != null and  productCode != '' ">
			AND W.PRODUCT_CODE <![CDATA[ <> ]]>
			#{productCode,jdbcType=VARCHAR}
		</if>
		  <if test="isExpress!=null and isExpress!=''">
		 <![CDATA[  AND W.PRODUCT_CODE NOT IN ('PACKAGE','RCP','EPEP')]]>
		</if>
	</select>

	<insert id="insertGrangGood"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.domain.GrandGoodAbnormalEntity">
		insert into pkp.t_srv_grandGood_Abnormal
		(ID, WAYBILL_NO,
		dangerCause,unified_Code,passIsDuty)
		values
		(#{id,jdbcType=VARCHAR},
	    #{waybillNo,jdbcType=VARCHAR},
		#{dangerCause,jdbcType=VARCHAR},
		#{unifiedCode,jdbcType=VARCHAR},
		#{passIsDuty,jdbcType=VARCHAR}
		)
	</insert>

	<select id="queryGrandGoodAbnormal" resultMap="GrandGoodAbnormalMap"
		parameterType="java.lang.String">
		select  waybill_no,
		        dangerCause,
		        unified_Code,
		passIsDuty
		from pkp.t_srv_grandGood_Abnormal
		where waybill_no =
		#{waybillNo,jdbcType=VARCHAR}
	</select>

	<update id="updateGrandGoodAbnormal"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.domain.GrandGoodAbnormalEntity">
		update  pkp.t_srv_grandGood_Abnormal
		<set>
			<if test="dangerCause != null">
				dangerCause= #{dangerCause,jdbcType=VARCHAR},
			</if>
			<if test="unifiedCode != null">
				unified_Code = #{unifiedCode,jdbcType=VARCHAR},
			</if>
			<if test="passIsDuty != null">
				passIsDuty = #{passIsDuty,jdbcType=VARCHAR},
			</if>
		</set>
		where waybill_no = #{waybillNo,jdbcType=VARCHAR}
	</update>

	<!-- APP查询我的发货单/收货单信息 -->
	<select id="queryAppWaybillInfoByCondition" parameterType="java.util.Map"
		resultType="com.deppon.foss.module.pickup.waybill.shared.dto.CrmWaybillServiceDto">
		<include refid="queryAppWaybillInfoByCondition_select_column" />
		<include refid="queryAppWaybillInfoByCondition_from_where" />
	</select>
	<select id="countQueryAppWaybillInfoByCondition" parameterType="java.util.Map"
		resultType="int">
		SELECT COUNT(1)
		<include refid="queryAppWaybillInfoByCondition_from_where" />
	</select>
	<sql id="queryAppWaybillInfoByCondition_from_where">
		from pkp.t_srv_waybill waybill
		left join bse.t_bas_org depart on waybill.receive_org_code = depart.code
		and depart.active=#{active,jdbcType=VARCHAR}
		left join pkp.t_srv_waybill_sign_result signre on signre.waybill_no =


		waybill.waybill_no and signre.active=#{active,jdbcType=VARCHAR}
		left
		join bse.t_bas_outer_branch agen on waybill.customer_pickup_org_code=
		agen.agent_dept_code and agen.active=#{active,jdbcType=VARCHAR}
		inner
		join pkp.t_srv_actual_freight f on f.waybill_no=waybill.waybill_no
		left join bse.t_bas_org lading on waybill.customer_pickup_org_code =
		lading.code and lading.active=#{active,jdbcType=VARCHAR}
		left join
		bse.t_bas_district depa on
		waybill.DELIVERY_CUSTOMER_CITY_CODE=depa.code and
		depa.active=#{active,jdbcType=VARCHAR}
		left join bse.t_bas_district
		dest on
		waybill.RECEIVE_CUSTOMER_CITY_CODE=dest.code and
		dest.active=#{active,jdbcType=VARCHAR}
		where waybill.active =
		#{active,jdbcType=VARCHAR}
<if test="deliverMobile!=null and receiveMobile!=null">
			and (waybill.delivery_customer_mobilephone
			=#{deliverMobile,jdbcType=VARCHAR} or
			waybill.receive_customer_mobilephone
			=#{receiveMobile,jdbcType=VARCHAR})
		</if>
		<if test="deliverMobile!=null and receiveMobile==null">
			and waybill.delivery_customer_mobilephone
			=#{deliverMobile,jdbcType=VARCHAR}
		</if>
		<if test="receiveMobile!=null and deliverMobile==null">
			and waybill.receive_customer_mobilephone
			=#{receiveMobile,jdbcType=VARCHAR}
		</if>
		<if test="startDate!=null and endDate!=null">
			and waybill.create_time between
			#{startDate,jdbcType=TIMESTAMP} and
			#{endDate,jdbcType=TIMESTAMP}
		</if>
		<!-- keyWords关键字，进行模糊查询匹配,发货人姓名、电话, 运单号、订单号、发货城市字段 如果keywords关键字不为空,则后面的都要进行查询 -->		<if test="keyWords != null and keyWords != ''">
				and (
				<choose>
					<when test=" type=='DELIVER' ">
					  waybill.receive_customer_contact like '%${keyWords}%' <!-- 收货人姓名 -->
					   or  waybill.receive_customer_phone like '%${keyWords}%' <!-- 收货人电话 -->
						or waybill.receive_customer_mobilephone like '%${keyWords}%' <!-- 收货人手机 -->
					   or  dest.name like '%${keyWords}%' <!-- 收货城市 -->
					</when>
					<when test=" type=='RECEIVE' ">
					   waybill.delivery_customer_contact like '%${keyWords}%' <!-- 发货人姓名 -->
					   or  waybill.delivery_customer_phone like '%${keyWords}%' <!-- 发货人电话 -->
						or waybill.delivery_customer_mobilephone like '%${keyWords}%' <!-- 发货人手机 -->
						or depa.name like '%${keyWords}%' <!-- 发货城市 -->
					</when>
					<otherwise>
					    waybill.receive_customer_contact like '%${keyWords}%' <!-- 收货人姓名 -->
					    or waybill.delivery_customer_contact like '%${keyWords}%' <!-- 发货人姓名 -->
					    or  waybill.delivery_customer_phone like '%${keyWords}%' <!-- 发货人电话 -->
						or waybill.delivery_customer_mobilephone like '%${keyWords}%' <!-- 发货人手机 -->
					    or  waybill.receive_customer_phone like '%${keyWords}%' <!-- 收货人电话 -->
						or waybill.receive_customer_mobilephone like '%${keyWords}%' <!-- 收货人手机 -->
						or  dest.name like '%${keyWords}%' <!-- 发货城市 -->
						or depa.name like '%${keyWords}%' <!-- 收货城市 -->
					</otherwise>
				</choose>
				or waybill.waybill_no like '%${keyWords}%'  <!-- 运单号 -->
				or waybill.order_no like '%${keyWords}%' ) <!-- 订单号 -->
		</if>		
		<if test="startDate!=null and endDate!=null">
			and waybill.create_time between #{startDate,jdbcType=TIMESTAMP} and
			#{endDate,jdbcType=TIMESTAMP}
		</if>
		<if test="deliverMobile!=null and receiveMobile!=null and deliverMobile != '' and receiveMobile!='' ">
			and (waybill.delivery_customer_mobilephone =#{deliverMobile,jdbcType=VARCHAR} or waybill.receive_customer_mobilephone =#{receiveMobile,jdbcType=VARCHAR}) 
		</if>
		<if test="deliverMobile!=null and deliverMobile != ''  and receiveMobile==null">
			and waybill.delivery_customer_mobilephone =#{deliverMobile,jdbcType=VARCHAR}
		</if>
		<if test="receiveMobile!=null and receiveMobile!='' and deliverMobile==null">
			and waybill.receive_customer_mobilephone =#{receiveMobile,jdbcType=VARCHAR}
		</if>		
		order by waybill.bill_time desc		</sql>

	<select id="queryWaybillByPhone" resultMap="WaybillCountMap"
		parameterType="java.lang.String">
		select phone_num ,count(waybill_no) count from
		(
			select distinct * from
			(
			 	(select DELIVERY_CUSTOMER_MOBILEPHONE as phone_num,
		waybill_no from
		pkp.t_srv_waybill
					where DELIVERY_CUSTOMER_MOBILEPHONE in  
					<![CDATA[(]]>
						${mobilePhones}		
					<![CDATA[)]]>
					and BILL_TIME <![CDATA[>]]>=#{startDate,jdbcType=TIMESTAMP}
					and BILL_TIME <![CDATA[<]]>=#{endDate,jdbcType=TIMESTAMP}
					AND ACTIVE='Y'
				)union
			 	(select DELIVERY_CUSTOMER_PHONE as phone_num,
		 			waybill_no from pkp.t_srv_waybill
					where DELIVERY_CUSTOMER_PHONE in  
					<![CDATA[(]]>
						${phones}		
					<![CDATA[)]]>
					and BILL_TIME <![CDATA[>]]>=#{startDate,jdbcType=TIMESTAMP}
					and BILL_TIME <![CDATA[<]]>=#{endDate,jdbcType=TIMESTAMP}
					AND ACTIVE='Y'
				)
			<if test='isAssociatedConsignee == "Y"'>
				union
				(select RECEIVE_CUSTOMER_MOBILEPHONE as phone_num,
			waybill_no
			from pkp.t_srv_waybill
					where RECEIVE_CUSTOMER_MOBILEPHONE in  
					<![CDATA[(]]>
						${mobilePhones}		
					<![CDATA[)]]>
					and BILL_TIME <![CDATA[>]]>=#{startDate,jdbcType=TIMESTAMP}
					and BILL_TIME <![CDATA[<]]>=#{endDate,jdbcType=TIMESTAMP}
					AND ACTIVE='Y'
				)union
			 	(select RECEIVE_CUSTOMER_PHONE as phone_num,
		 			waybill_no from pkp.t_srv_waybill
					where RECEIVE_CUSTOMER_PHONE in  
					<![CDATA[(]]>
						${phones}		
					<![CDATA[)]]>
					and BILL_TIME <![CDATA[>]]>=#{startDate,jdbcType=TIMESTAMP}
					and BILL_TIME <![CDATA[<]]>=#{endDate,jdbcType=TIMESTAMP}
					AND ACTIVE='Y'
				)
				</if>
			)
		)
		group by phone_num
	</select>
	<!-- 官网查询已激活的电子运单信息 -->
	<select id="queryActiveEWaybillInfoByCondition" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		<include refid="queryActiveEWaybillInfoByCondition_select_column" />
		<include refid="queryActiveEWaybillInfoByCondition_from_where" />
	</select>
	  <!-- 官网查询已激活的电子运单信息数量 -->
	<select id="countQueryActiveEWaybillInfoByCondition" resultType="java.lang.Integer"
		parameterType="java.util.Map">
	  SELECT COUNT(1) from (
		<include refid="queryActiveEWaybillInfoByCondition_select_column" />
		<include refid="queryActiveEWaybillInfoByCondition_from_where" />
	  )
	</select>

	<sql id="queryActiveEWaybillInfoByCondition_select_column">
		select DISTINCT/*模块：接送货-电子运单查询-官网查询已激活电子运单详情*/
		waybill.WAYBILL_NO WAYBILL_NO,
		waybill.ORDER_NO ORDER_NO,
		dispatchOrder.ORDER_TIME BILL_TIME,
		waybill.BILL_WEIGHT BILL_WEIGHT,
		waybill.PACKAGE_FEE/100 PACKAGE_FEE,
		waybill.INSURANCE_FEE/100
		INSURANCE_FEE,
		waybill.COD_FEE/100 COD_FEE,
		waybill.TRANSPORT_FEE/100
		TRANSPORT_FEE,
		waybill.TOTAL_FEE/100 TOTAL_FEE,
		waybill.CREATE_ORG_CODE
		CREATE_ORG_CODE,
		waybill.CUSTOMER_PICKUP_ORG_CODE
		CUSTOMER_PICKUP_ORG_CODE,
        waybill.PRODUCT_CODE PRODUCT_CODE,
        waybill.DELIVERY_CUSTOMER_CITY_CODE DELIVERY_CUSTOMER_CITY_CODE,
        waybill.RECEIVE_CUSTOMER_CITY_CODE RECEIVE_CUSTOMER_CITY_CODE,
		org.NAME DELIVERY_CUSTOMER_CITY_NAME
   </sql>

	<sql id="queryActiveEWaybillInfoByCondition_from_where">
	  	from pkp.t_srv_waybill waybill /*模块：接送货-电子运单查询-官网查询打印已激活电子运单数量*/
		inner
		join pkp.t_srv_actual_freight freight on
		freight.waybill_no=waybill.waybill_no
		inner join
		pkp.t_srv_dispatch_order dispatchOrder on dispatchOrder.order_no
		=
		waybill.order_no
		inner join bse.t_bas_org org on org.code =
		waybill.CUSTOMER_PICKUP_ORG_CODE
		where waybill.active =
		#{active,jdbcType=VARCHAR}
	  	and org.active ='Y'
		and freight.waybill_type=
		#{waybillType,jdbcType=VARCHAR}
	  	<if test="linkmanId!=null and linkmanId!=''">
				and <![CDATA[ (  ]]>
					waybill.delivery_customer_contact_id = #{linkmanId,jdbcType=VARCHAR}
					<if test="userName!=null and userName!=''">
						or freight.CHANNELCUSTID = #{userName,jdbcType=VARCHAR}
					</if>
				<![CDATA[ )  ]]>
		</if>
	  	<choose>
	  		<!-- 关键字为运单号 -->
			<when test="waybillNO !=null and waybillNO!=''">
				and waybill.waybill_no =#{waybillNO,jdbcType=VARCHAR}
			</when>
			<!--关键字条件为订单号 -->
			<when test="orderNo!=null and orderNo!=''">
				and waybill.order_no  =#{orderNo,jdbcType=VARCHAR}
			</when>
			<otherwise>
				<!--关键字条件为发货人姓名 -->
				<if test="deliveryCustomerName!=null and deliveryCustomerName!=''">
					and waybill.DELIVERY_CUSTOMER_CONTACT like
					CONCAT(#{deliveryCustomerName,jdbcType=VARCHAR},'%')
				</if>
				<!--关键字条件为收货人姓名 -->
				<if test="receiveCustomerName!=null and receiveCustomerName!=''">
					and waybill.RECEIVE_CUSTOMER_NAME like
					CONCAT(#{receiveCustomerName,jdbcType=VARCHAR},'%')
				</if>
				<!--关键字条件为货物名称 -->
				<if test="goodsName!=null and goodsName!=''">
					and waybill.goods_name like
					CONCAT(#{goodsName,jdbcType=VARCHAR},'%')
				</if>
				<!--日期 -->
				<if test="startDate!=null and endDate!=null">
					and dispatchOrder.ORDER_TIME between
					#{startDate,jdbcType=TIMESTAMP} and
					#{endDate,jdbcType=TIMESTAMP}
				</if>
			</otherwise>
		</choose>
	  	order by dispatchOrder.ORDER_TIME desc
	 </sql>

	 <!-- 激活运单 -->
	<update id="setWaybillActive" parameterType="Map">
		<if test="null!=waybillNoList">
				UPDATE PKP.T_SRV_WAYBILL A SET A.ACTIVE ='Y'
				WHERE  A.waybill_no in
				<foreach collection="waybillNoList" item="item" open="("
					close=")" separator=",">
					#{item,jdbcType=VARCHAR}
				</foreach>
			</if>
	</update>



	<!--批量发送短信相关 -->
	<select id="querySendAndReceiveGoodsCount"
		resultType="com.deppon.foss.module.pickup.waybill.shared.dto.BatchSendSMSDto"
		parameterType="java.lang.String">
		select count(W.WAYBILL_NO) as deliveryCount,
		sum( DECODE
		(W.RETURN_BILL_TYPE, 'FAX' ,1,'ORIGINAL',1,'ARRIVESHEET_FAX',1,0)) as
		signBillBackCount ,W.DELIVERY_CUSTOMER_MOBILEPHONE as customerMobile
		from PKP.T_SRV_WAYBILL W
		INNER JOIN PKP.T_SRV_ACTUAL_FREIGHT AF ON
		W.WAYBILL_NO =AF.WAYBILL_NO
		<where>
        <![CDATA[ 1 = 1  ]]>
			AND W.BILL_TIME <![CDATA[  >=  ]]>
			to_date(to_char(sysdate-(#{time,jdbcType=INTEGER}), 'yyyy-mm-dd') ||
			' 00:00:00','yyyy-mm-dd hh24:mi:ss') and w.BILL_TIME <![CDATA[  <=  ]]>
			to_date(to_char(sysdate-1, 'yyyy-mm-dd') || ' 23:59:59','yyyy-mm-dd
			hh24:mi:ss')
			AND W.ACTIVE='Y'
        	<if test="custCode !=null "><![CDATA[ and w.DELIVERY_CUSTOMER_CODE = #{custCode,jdbcType=VARCHAR}  ]]></if>
			AND W.DELIVERY_CUSTOMER_MOBILEPHONE IS NOT NULL AND (AF.STATUS IS
			NULL OR AF.STATUS NOT IN ('OBSOLETE','ABORTED'))
			AND W.PRODUCT_CODE IN
			('PACKAGE','RCP','EPEP')
		</where>
		GROUP BY W.DELIVERY_CUSTOMER_MOBILEPHONE
	</select>

	<!--<select id="queryReceiveAndSignBillGoodsCount" resultType="com.deppon.foss.module.pickup.waybill.shared.dto.BatchSendSMSDto" 
		parameterType="java.lang.String"> select COUNT(SR.WAYBILL_NO) as signBillSuccessCount 
		,COUNT(RPRO.WAYBILL_NO) as signBillSuccessBackCount,W.DELIVERY_CUSTOMER_MOBILEPHONE 
		as customerMobile from PKP.T_SRV_WAYBILL w INNER JOIN PKP.T_SRV_ACTUAL_FREIGHT 
		af on w.WAYBILL_NO =AF.WAYBILL_NO INNER JOIN PKP.T_SRV_WAYBILL_SIGN_RESULT 
		sr on w.waybill_no =sr.waybill_no LEFT JOIN PKP.T_SRV_RETURNBILL_PROCESS 
		rpro on rpro.waybill_no = w.waybill_no and rpro.RETURNBILL_STATUS='ALREADY_RETURN_BILL' 
		<where> <![CDATA[ 1 = 1 ]]> AND SR.SIGN_TIME <![CDATA[ >= ]]> to_date(to_char(sysdate-(#{time,jdbcType=INTEGER}), 
		'yyyy-mm-dd') || ' 00:00:00','yyyy-mm-dd hh24:mi:ss') and SR.SIGN_TIME <![CDATA[ 
		<= ]]> to_date(to_char(sysdate-1, 'yyyy-mm-dd') || ' 23:59:59','yyyy-mm-dd 
		hh24:mi:ss') AND W.ACTIVE='Y' AND SR.ACTIVE ='Y' <if test="custCode !=null 
		"><![CDATA[ AND W.DELIVERY_CUSTOMER_CODE = #{custCode,jdbcType=VARCHAR} ]]></if> 
		AND W.DELIVERY_CUSTOMER_MOBILEPHONE IS NOT NULL AND W.PRODUCT_CODE IN ('PACKAGE','RCP') 
		AND (AF.STATUS IS NULL OR AF.STATUS NOT IN ('OBSOLETE','ABORTED')) </where> 
		GROUP BY W.DELIVERY_CUSTOMER_MOBILEPHONE </select> -->

	<select id="queryReceiveAndSignBillGoodsCount"
		resultType="com.deppon.foss.module.pickup.waybill.shared.dto.BatchSendSMSDto"
		parameterType="java.lang.String">
		select
		A.signBillSuccessCount,B.signBillSuccessBackCount,B.customerMobile
		FROM
		(select COUNT(SR.WAYBILL_NO) AS
		signBillSuccessCount,W.DELIVERY_CUSTOMER_MOBILEPHONE AS customerMobile
		FROM PKP.T_SRV_WAYBILL W
		INNER JOIN PKP.T_SRV_ACTUAL_FREIGHT AF ON
		W.WAYBILL_NO =AF.WAYBILL_NO
		INNER JOIN PKP.T_SRV_WAYBILL_SIGN_RESULT SR
		ON W.WAYBILL_NO =SR.WAYBILL_NO
		<where>
					<![CDATA[ 1 = 1  ]]>
			AND SR.SIGN_TIME <![CDATA[  >=  ]]>
			to_date(to_char(sysdate-(#{time,jdbcType=INTEGER}), 'yyyy-mm-dd') ||
			' 00:00:00','yyyy-mm-dd hh24:mi:ss') AND SR.SIGN_TIME  <![CDATA[  <=  ]]>
			to_date(to_char(sysdate-1, 'yyyy-mm-dd') || ' 23:59:59','yyyy-mm-dd
			hh24:mi:ss')
			AND SR.ACTIVE ='Y'
					<include refid="Batch_Query_List" />
				</where>
			GROUP BY W.DELIVERY_CUSTOMER_MOBILEPHONE) A,(
		select
		COUNT(RPRO.WAYBILL_NO) AS
		signBillSuccessBackCount,W.DELIVERY_CUSTOMER_MOBILEPHONE AS
		customerMobile
		FROM PKP.T_SRV_WAYBILL W
		INNER JOIN
		PKP.T_SRV_ACTUAL_FREIGHT AF ON W.WAYBILL_NO =AF.WAYBILL_NO
		LEFT JOIN
		PKP.T_SRV_RETURNBILL_PROCESS RPRO ON RPRO.WAYBILL_NO =
		W.WAYBILL_NO
				<where>
					<![CDATA[ 1 = 1  ]]>
			AND RPRO.RETURNBILL_TIME <![CDATA[  >=  ]]>
			to_date(to_char(sysdate-(#{time,jdbcType=INTEGER}), 'yyyy-mm-dd') ||
			' 00:00:00','yyyy-mm-dd hh24:mi:ss') AND RPRO.RETURNBILL_TIME  <![CDATA[  <=  ]]>
			to_date(to_char(sysdate-1, 'yyyy-mm-dd') || ' 23:59:59','yyyy-mm-dd
			hh24:mi:ss')
			AND RPRO.RETURNBILL_STATUS='ALREADY_RETURN_BILL'
					<include refid="Batch_Query_List" />
				</where>
			GROUP BY W.DELIVERY_CUSTOMER_MOBILEPHONE
		) B
	</select>
	<sql id='Batch_Query_List'>
		AND W.ACTIVE='Y'
		<if test="custCode !=null "><![CDATA[ AND W.DELIVERY_CUSTOMER_CODE = #{custCode,jdbcType=VARCHAR}  ]]></if>
		AND W.DELIVERY_CUSTOMER_MOBILEPHONE IS NOT NULL AND W.PRODUCT_CODE IN
		('PACKAGE','RCP','EPEP')
		AND (AF.STATUS IS NULL OR AF.STATUS NOT IN
		('OBSOLETE','ABORTED'))
	</sql>

	<!--短信通知2 count 分开统计  成功签收#票 -->
	<select id="querySignBillGoodsCount"
		resultType="com.deppon.foss.module.pickup.waybill.shared.dto.BatchSendSMSDto"
		parameterType="java.lang.String">
		select COUNT(SR.WAYBILL_NO) AS
		signBillSuccessCount,W.DELIVERY_CUSTOMER_MOBILEPHONE AS customerMobile
		FROM PKP.T_SRV_WAYBILL W
		INNER JOIN PKP.T_SRV_ACTUAL_FREIGHT AF ON
		W.WAYBILL_NO =AF.WAYBILL_NO
		INNER
		JOIN PKP.T_SRV_WAYBILL_SIGN_RESULT SR
		ON W.WAYBILL_NO =SR.WAYBILL_NO
		<where>
		<![CDATA[ 1 = 1  ]]>
			AND SR.SIGN_TIME <![CDATA[  >=  ]]>
			to_date(to_char(sysdate-(#{time,jdbcType=INTEGER}), 'yyyy-mm-dd') ||
			' 00:00:00','yyyy-mm-dd hh24:mi:ss') AND SR.SIGN_TIME <![CDATA[  <=  ]]>
			to_date(to_char(sysdate-1, 'yyyy-mm-dd') || ' 23:59:59','yyyy-mm-dd
			hh24:mi:ss')
			    AND W.ACTIVE='Y' AND SR.ACTIVE ='Y'
				<if test="custCode !=null "><![CDATA[ and w.DELIVERY_CUSTOMER_CODE = #{custCode,jdbcType=VARCHAR}  ]]></if>
			AND W.DELIVERY_CUSTOMER_MOBILEPHONE IS NOT NULL AND W.PRODUCT_CODE IN
			('PACKAGE','RCP','EPEP')
			AND (AF.STATUS IS NULL OR AF.STATUS NOT IN
			('OBSOLETE','ABORTED'))
		</where>
		GROUP BY W.DELIVERY_CUSTOMER_MOBILEPHONE
	</select>

	<!--短信通知2 count 分开统计 成功返回的签单共有#票 -->
	<select id="queryReceiveGoodsCount"
		resultType="com.deppon.foss.module.pickup.waybill.shared.dto.BatchSendSMSDto"
		parameterType="java.lang.String">
		select COUNT(RPRO.WAYBILL_NO) AS
		signBillSuccessBackCount,W.DELIVERY_CUSTOMER_MOBILEPHONE AS
		customerMobile
		FROM PKP.T_SRV_WAYBILL W
		INNER JOIN
		PKP.T_SRV_ACTUAL_FREIGHT AF ON W.WAYBILL_NO =AF.WAYBILL_NO
		LEFT
		JOIN
		PKP.T_SRV_RETURNBILL_PROCESS RPRO ON RPRO.WAYBILL_NO =
		W.WAYBILL_NO
		<where>
		<![CDATA[ 1 = 1  ]]>
			AND RPRO.RETURNBILL_TIME <![CDATA[  >=  ]]>
			to_date(to_char(sysdate-(#{time,jdbcType=INTEGER}), 'yyyy-mm-dd') ||
			' 00:00:00','yyyy-mm-dd hh24:mi:ss') AND RPRO.RETURNBILL_TIME  <![CDATA[  <=  ]]>
			to_date(to_char(sysdate-1, 'yyyy-mm-dd') || ' 23:59:59','yyyy-mm-dd
			hh24:mi:ss')
			AND RPRO.RETURNBILL_STATUS='ALREADY_RETURN_BILL' AND
			W.ACTIVE='Y'
			<if test="custCode !=null "><![CDATA[ and w.DELIVERY_CUSTOMER_CODE = #{custCode,jdbcType=VARCHAR}  ]]></if>
			AND W.DELIVERY_CUSTOMER_MOBILEPHONE IS NOT NULL AND W.PRODUCT_CODE IN
			('PACKAGE','RCP','EPEP')
			AND (AF.STATUS IS NULL OR AF.STATUS NOT IN
			('OBSOLETE','ABORTED'))
		</where>
		GROUP BY W.DELIVERY_CUSTOMER_MOBILEPHONE
	</select>

	<!-- 根据客户编码、开始时间、结束时间查询运单信息 -->
	<select id="queryWaybillOneYear"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillQueryOneYearDto"
		resultMap="waybillOneYearResultMap">
		select  /*模块：接送货-运单-根据客户编码、开始时间、结束时间返回运单详细信息*/
		w.delivery_customer_code
		,
		w.waybill_no ,
		w.create_time ,
		w.goods_name,
		w.goods_package,
		w.goods_qty_total ,
		w.goods_weight_total ,
		w.goods_volume_total ,
		w.paid_method ,
		w.pre_pay_amount/100 as pre_pay_amount,
		w.to_pay_amount/100 as to_pay_amount,
		w.refund_type ,
		w.cod_amount/100
		as cod_amount,
		w.cod_fee/100 as cod_fee,
		w.receive_method ,
		w.pickup_fee/100 as pickup_fee,
		w.delivery_goods_fee/100 as
		delivery_goods_fee,
		w.package_fee/100 as package_fee,
		w.service_fee/100
		as service_fee,
		w.transport_fee/100 as transport_fee,
		w.insurance_amount/100 as insurance_amount,
		w.insurance_fee/100 as
		insurance_fee,
		w.other_fee/100 as other_fee,
		w.CREATE_ORG_CODE,
		w.customer_pickup_org_code ,
		w.active
		from pkp.t_srv_waybill w
		<where>
		<if test="deliveryCustomerCode != null and deliveryCustomerCode != ''">
				w.delivery_customer_code =
				#{deliveryCustomerCode,jdbcType=VARCHAR}
		</if>
		AND w.create_time <![CDATA[  >=  ]]>#{startTime,jdbcType=TIMESTAMP}
			AND w.create_time <![CDATA[  <  ]]>
			#{endTime,jdbcType=TIMESTAMP}
		<if test="state!=null and state!= ''">
			and w.active =  #{state,jdbcType=VARCHAR}
		</if>
		</where>
	</select>

	<!-- APP根据用户手机号码查询相应月份内的费用信息 -->
	<select id="queryComponentDetail"
	parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.ReportComponentDto"
	resultMap="componentDetail">
		select
	count(waybill_no) as countWaybill,
		sum(PICKUP_FEE /100) as
		PICKUP_FEE,
	sum(DELIVERY_GOODS_FEE /100) as DELIVERY_GOODS_FEE,
	sum(PACKAGE_FEE /100) as PACKAGE_FEE,
		sum(TRANSPORT_FEE /100) as
		TRANSPORT_FEE,
	sum(INSURANCE_FEE /100) as INSURANCE_FEE,
		sum(COD_FEE
		/100) as COD_FEE,
	sum(OTHER_FEE /100) as OTHER_FEE,
		sum((PICKUP_FEE+DELIVERY_GOODS_FEE+PACKAGE_FEE+TRANSPORT_FEE+INSURANCE_FEE+COD_FEE+OTHER_FEE)/100)
		as total_amount
		from pkp.t_srv_waybill
		<where>
		<if test="mibilephone != null and mibilephone != ''">
				delivery_customer_mobilephone =
				#{mibilephone,jdbcType=VARCHAR}
		</if>
		AND create_time <![CDATA[  >=  ]]>#{startTime,jdbcType=TIMESTAMP}
			AND create_time <![CDATA[  <  ]]>
			#{endTime,jdbcType=TIMESTAMP}
		<if test="active !=null and active != ''">
			and active =  #{active,jdbcType=VARCHAR}
		</if>
		</where>
	</select>

	<resultMap id="componentDetail"
    type="com.deppon.foss.module.pickup.waybill.shared.dto.ComponentDto">
    <result column="countWaybill" property="countWaybill" jdbcType="INTEGER" />
    <result column="PICKUP_FEE" property="pickupFee" jdbcType="DECIMAL" />
		<result column="DELIVERY_GOODS_FEE" property="deliveryGoodsFee"
			jdbcType="DECIMAL" />
    <result column="PACKAGE_FEE" property="packageFee" jdbcType="DECIMAL" />
		<result column="TRANSPORT_FEE" property="transportFee"
			jdbcType="DECIMAL" />
		<result column="INSURANCE_FEE" property="insuranceFee"
			jdbcType="DECIMAL" />
    <result column="COD_FEE" property="codFee" jdbcType="DECIMAL" />
    <result column="OTHER_FEE" property="otherFee" jdbcType="DECIMAL" />
    <result column="total_amount" property="total_amount" jdbcType="DECIMAL" />
  </resultMap>

  <!-- APP二期根据用户手机号码查询电子账单 -->
    <select id="queryBillingDetail"
    parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.ReportBillingDto"
    resultMap="billingDetail">
   select w.waybill_no as waybill_no ,
		to_char(w.bill_time, 'yyyy-mm-dd
		hh24:mi:ss') as shipping_date,
       w.paid_method as pay_type_code,
       decode(w.paid_method,
              'CD',
              '银行卡',
              'NT',
              '支票',
              'CH',
              '现金',
              'TT',
              '电汇',
              'OL',
              '网上支付',
              'CT',
              '月结',
              'DT',
              '临时欠款',
              'FC',
              '到付') as pay_type_name,
		(w.total_fee
		- w.cod_amount) / 100 as total_amount,
       decode(w.product_code,
              'FLF',
              '精准卡航',
              'AF',
              '精准空运',
              'FSF',
              '精准城运',
              'LRF',
              '精准汽运(长途)',
              'SRF',
              '精准汽运(短途)',
              'AIR_FREIGHT',
              '空运',
              'PLF',
              '汽运偏线',
              'TRANS_VEHICLE',
              '汽运',
              'BGLRF',
              '精准大票汽运(长)',
              'YTY',
              '场到场',
              'BGFLF',
              '精准大票卡航',
              'RCP',
              '3.60特惠件',
              'EPEP',
              '电商尊享件',
              'WVH',
              '整车（三级）',
              'DTD',
              '门到门',
              'PACKAGE',
              '标准快递',
              'BGFSF',
              '精准大票城运',
              'BGSRF',
              '精准大票汽运(短)',
              'PCP',
              '精准包裹') as trans_type,
       w.goods_name as cargo_name,
		f.name
		as sender_city_name,
       i.name as consignee_city_name,
		w.goods_qty_total as
		cargo_count,
       w.delivery_customer_contact as poster_name,
       w.receive_customer_contact as receiver_name
  from pkp.t_srv_waybill w
  left join bse.t_bas_org a on w.receive_org_code = a.code
		and a.active =
		'Y'
  left join bse.t_bas_org b on a.parent_org_code = b.code
		and b.active
		= 'Y'
  left join bse.t_bas_org c on b.parent_org_code = c.code
		and
		c.active = 'Y'
  left join bse.t_bas_org d on c.parent_org_code = d.code
                           and d.active = 'Y'
		left join bse.t_bas_org e on d.parent_org_code =
		e.code
                           and e.active = 'Y'
		left join bse.t_bas_district f on a.city_code
		= f.code
                                and f.active = 'Y'
		left join bse.t_bas_org h on
		w.customer_pickup_org_code = h.code
                           and h.active = 'Y'
		left join
		bse.t_bas_district i on h.city_code = i.code
                                and i.active = 'Y'
		<where>
		<if test="mibilephone != null and mibilephone != ''">
				w.delivery_customer_mobilephone =
				#{mibilephone,jdbcType=VARCHAR}
		</if>
		AND w.create_time <![CDATA[  >=  ]]>#{startTime,jdbcType=TIMESTAMP}
			AND w.create_time <![CDATA[  <  ]]>
			#{endTime,jdbcType=TIMESTAMP}
		<if test="active !=null and active != ''">
			and w.active =  #{active,jdbcType=VARCHAR}
		</if>
		</where>
    </select>

    <resultMap id="billingDetail"
    type="com.deppon.foss.module.pickup.waybill.shared.dto.BillingDto">
    <result column="waybill_no" property="waybillNo" jdbcType="VARCHAR" />
		<result column="shipping_date" property="shipping_date"
			jdbcType="TIMESTAMP" />
		<result column="pay_type_code" property="pay_type_code"
			jdbcType="VARCHAR" />
		<result column="pay_type_name" property="pay_type_name"
			jdbcType="VARCHAR" />
    <result column="total_amount" property="total_amount" jdbcType="DECIMAL" />
    <result column="trans_type" property="trans_type" jdbcType="VARCHAR" />
      <result column="cargo_name" property="cargo_name" jdbcType="VARCHAR" />
		<result column="sender_city_name" property="sender_city_name"
			jdbcType="VARCHAR" />
		<result column="consignee_city_name" property="consignee_city_name"
			jdbcType="VARCHAR" />
    <result column="cargo_count" property="cargo_count" jdbcType="INTEGER" />
    <result column="poster_name" property="poster_name" jdbcType="VARCHAR" />
		<result column="receiver_name" property="receiver_name"
			jdbcType="VARCHAR" />
  </resultMap>

	<resultMap id="EWaybillSalesDepartResultMap"
		type="com.deppon.foss.module.pickup.waybill.shared.dto.EWaybillSalesDepartDto">
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="ORDER_NO" property="orderNo" jdbcType="VARCHAR" />
		<result column="RECEIVE_ORG_NAME" property="receiveOrgName"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_ORG_CODE" property="receiveOrgCode"
			jdbcType="VARCHAR" />
		<result column="CREATE_ORG_NAME" property="createOrgName"
			jdbcType="VARCHAR" />
		<result column="CREATE_ORG_CODE" property="createOrgCode"
			jdbcType="VARCHAR" />

		<result column="BILL_TIME" property="billTime" jdbcType="TIMESTAMP" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="SCAN_TIME" property="scanTime" jdbcType="TIMESTAMP" />
		<result column="DELIVERY_CUSTOMER_CODE" property="deliveryCustomerCode"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_NAME" property="deliveryCustomerName"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CONTACT" property="deliveryCustomerContact"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CONTACT" property="receiveCustomerContact"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CITY_CODE" property="departCity"
			jdbcType="VARCHAR" />

		<result column="CUSTOMER_PICKUP_ORG_CODE" property="customerPickupOrgCode"
			jdbcType="VARCHAR" />
		<result column="WEIGHT" property="orderWeight" jdbcType="DECIMAL" />
		<result column="VOLUME" property="orderVolume" jdbcType="DECIMAL" />
		<result column="GOODS_WEIGHT_TOTAL" property="waybillWeight"
			jdbcType="DECIMAL" />
		<result column="GOODS_VOLUME_TOTAL" property="waybillVolume"
			jdbcType="DECIMAL" />
		<result column="GOODS_QTY" property="orderGoodTotal" jdbcType="DECIMAL" />
		<result column="GOODS_QTY_TOTAL" property="waybillGoodTotal"
			jdbcType="DECIMAL" />

		<result column="PRODUCT_CODE" property="productCode" jdbcType="VARCHAR" />
		<result column="PAID_METHOD" property="paidMethod" jdbcType="VARCHAR" />
		<result column="TOTAL_FEE" property="totalFee" jdbcType="DECIMAL" />
		<result column="COD_AMOUNT" property="codeAmount" jdbcType="DECIMAL" />

		<result column="DRIVER_CODE" property="driverCode" jdbcType="VARCHAR" />
		<result column="ORDER_CHANNEL" property="orderChannel"
			jdbcType="VARCHAR" />
		<result column="FAIL_REASON" property="orderReturnReason"
			jdbcType="VARCHAR" />
		<result column="FAIL_REASON" property="createFailReason"
			jdbcType="VARCHAR" />
		<result column="WAYBILL_STATUS" property="waybillStatus"
			jdbcType="VARCHAR" />
	</resultMap>

	<select id="queryEWaybillSalesDepart" resultMap="EWaybillSalesDepartResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.ClientEWaybillConditionDto">
	SELECT P.WAYBILL_NO WAYBILL_NO,
       P.ORDER_NO ORDER_NO,
		P.CREATE_ORG_CODE
		CREATE_ORG_CODE,
       P.RECEIVE_ORG_CODE RECEIVE_ORG_CODE,
		P.BILL_TIME
		BILL_TIME,
       P.CREATE_TIME CREATE_TIME,
		P.DELIVERY_CUSTOMER_CODE
		DELIVERY_CUSTOMER_CODE,
		P.DELIVERY_CUSTOMER_CONTACT
		DELIVERY_CUSTOMER_CONTACT,
		P.RECEIVE_CUSTOMER_CONTACT
		RECEIVE_CUSTOMER_CONTACT,
		P.DELIVERY_CUSTOMER_CITY_CODE
		DELIVERY_CUSTOMER_CITY_CODE,
		P.CUSTOMER_PICKUP_ORG_CODE
		CUSTOMER_PICKUP_ORG_CODE,
       P.CREATE_USER_CODE CREATE_USER_CODE,
       P.ORDER_CHANNEL ORDER_CHANNEL,
       P.PRODUCT_CODE PRODUCT_CODE,
       P.GOODS_WEIGHT_TOTAL GOODS_WEIGHT_TOTAL,
		P.GOODS_VOLUME_TOTAL
		GOODS_VOLUME_TOTAL,
       P.PAID_METHOD PAID_METHOD,
		P.TOTAL_FEE / 100
		TOTAL_FEE,
       P.COD_AMOUNT / 100 COD_AMOUNT,
       P.DRIVER_CODE DRIVER_CODE,
       ORD.GOODS_QTY   GOODS_QTY,
       p.GOODS_QTY_TOTAL GOODS_QTY_TOTAL,
       ORD.ORDER_STATUS ORDER_STATUS,
       ORD.VOLUME VOLUME,
       ORD.WEIGHT WEIGHT,
       SCSNN.SCAN_TIME SCAN_TIME
       FROM
		PKP.T_SRV_WAYBILL P
		LEFT JOIN PKP.T_SRV_DISPATCH_ORDER ORD ON
		ORD.ORDER_NO=P.ORDER_NO
		LEFT JOIN (SELECT DISTINCT S.WAYBILL_NO
		WAYBILL_NO,SUM(NVL(S.WEIGHT, 0))
		GOODS_WEIGHT_TOTAL,
		COUNT(S.WAYBILL_NO) GOODS_QTY_TOTAL,SUM(NVL(S.VOLUME, 0))
		GOODS_VOLUME_TOTAL,
		MIN(S.SCAN_TIME) SCAN_TIME FROM PKP.T_SRV_PDA_SCAN
		S WHERE
		 S.ACTIVE = 'Y' AND S.SCAN_TIME >=
		to_date(to_char(sysdate,'yyyy-mm-dd ') ||
		'00:00:00','yyyy-mm-dd
		hh24:mi:ss')
		AND S.SCAN_TIME &lt;= to_date(to_char(sysdate,'yyyy-mm-dd
		') ||
		'23:59:59','yyyy-mm-dd hh24:mi:ss')
            <if test="waybillType != null and waybillType !=''">
		    	<![CDATA[ AND S.WAYBILL_TYPE = #{waybillType,jdbcType=VARCHAR} ]]>
	   		</if>
	   		<if test="scanType != null and scanType !=''">
		    	<![CDATA[ AND S.SCAN_TYPE = #{scanType,jdbcType=VARCHAR} ]]>
	   		</if>
	   		<if test="whetherComplete != null and whetherComplete !=''">
		    	<![CDATA[ AND S.WHETHER_COMPLETE = #{whetherComplete,jdbcType=VARCHAR} ]]>
	   		</if>
	   		<if test="currentDeptCode != null and currentDeptCode !=''">
		    	<![CDATA[ AND S.CREATE_ORG_CODE = #{currentDeptCode,jdbcType=VARCHAR} ]]>
	   		</if>
           <choose>
			<when test="eWaybillNoList != null and eWaybillNoList.size()>0">
				AND S.WAYBILL_NO IN
				<foreach collection="eWaybillNoList" item="eWaybillNo"
					index="index" open="(" separator="," close=")">
					#{eWaybillNo,jdbcType=VARCHAR}
				</foreach>
			</when>
			<when test="orderNoList != null and orderNoList.size()>0">
				AND S.ORDER_NO IN
				<foreach collection="orderNoList" item="orderNo" index="index"
					open="(" separator="," close=")">
					#{orderNo,jdbcType=VARCHAR}
				</foreach>
			</when>
			<otherwise>
				<if test="driverCodeList != null and driverCodeList.size()>0">
					AND S.DRIVER_CODE IN
					<foreach collection="driverCodeList" item="driverCode"
						index="index" open="(" separator="," close=")">
						#{driverCode,jdbcType=VARCHAR}
					</foreach>
				</if>
				<!-- <if test="beginScanTime != null"> -->
				<!-- <![CDATA[ AND S.SCAN_TIME >= #{beginScanTime,jdbcType=TIMESTAMP}]]> -->
				<!-- </if> -->
				<!-- <if test="endScanTime != null"> -->
				<!-- <![CDATA[AND S.SCAN_TIME <= #{endScanTime,jdbcType=TIMESTAMP}]]> -->
				<!-- </if> -->
			</otherwise>
		</choose>
		GROUP BY S.WAYBILL_NO) SCSNN ON SCSNN.WAYBILL_NO = P.WAYBILL_NO WHERE
		1=1
		<!-- 限制悟空开的单子，在FOSS出发运单管理中查265475-->
		 AND (P.is_ecs != 'Y' or P.is_ecs is null )
	   <if test="currentDeptCode != null and currentDeptCode !=''">
        	<![CDATA[ AND (P.RECEIVE_ORG_CODE=#{currentDeptCode,jdbcType=VARCHAR} OR P.CREATE_ORG_CODE=#{currentDeptCode,jdbcType=VARCHAR}) ]]>
	   </if>
	   <if test="active != null and active !=''">
        	<![CDATA[ AND P.ACTIVE=#{active,jdbcType=VARCHAR}]]>
	   </if>
	   <if test="waybillType != null and waybillType !=''">
        	<![CDATA[ AND ORD.WAYBILL_TYPE=#{waybillType,jdbcType=VARCHAR}]]>
	   </if>
	   <choose>
		   	<when test="eWaybillNoList != null and eWaybillNoList.size()>0">
				AND P.WAYBILL_NO IN
				<foreach collection="eWaybillNoList" item="eWaybillNo"
					index="index" open="(" separator="," close=")">
					#{eWaybillNo,jdbcType=VARCHAR}
				</foreach>
			</when>
		   	<when test="orderNoList != null and orderNoList.size()>0">
				AND P.ORDER_NO IN
				<foreach collection="orderNoList" item="orderNo" index="index"
					open="(" separator="," close=")">
					#{orderNo,jdbcType=VARCHAR}
				</foreach>
			</when>
		   	<otherwise>
		   		<if test="customerCodeList != null and customerCodeList.size()>0">
		        	AND P.DELIVERY_CUSTOMER_CODE IN
					<foreach collection="customerCodeList" item="customerCode"
						index="index" open="(" separator="," close=")">
						#{customerCode,jdbcType=VARCHAR}
					</foreach>
				</if>
				<if test="billStartTime != null and billStartTime !=''">
		        	<![CDATA[ AND ORD.ORDER_TIME >= #{billStartTime,jdbcType=TIMESTAMP} ]]>
			    </if>
			    <if test="billEndTime != null and billEndTime !=''">
		        	 <![CDATA[ AND ORD.ORDER_TIME <= #{billEndTime,jdbcType=TIMESTAMP} ]]>
			    </if>
		   	</otherwise>
	   </choose>
	</select>
	<select id="queryDiscountFee" resultType="Long"  parameterType="Map">
		select sum(w.promotions_fee)
        from pkp.t_srv_actual_freight f
		left join
		pkp.t_srv_waybill w on w.waybill_no = f.waybill_no

		where
		f.employee_no =
		#{employeeNo}
    		and w.active = 'Y'
    		and f.STATUS = 'EFFECTIVE'
    		<![CDATA[ and w.bill_time >= #{firstMonthDate} ]]>
    		<![CDATA[ and w.bill_time <= #{lastMonthDate} ]]>
	</select>
	<select id="queryTotalFee" resultType="Long"  parameterType="Map">
		select sum(w.TOTAL_FEE)/100
        from pkp.t_srv_actual_freight f
		left join
		pkp.t_srv_waybill w on w.waybill_no = f.waybill_no

		where
    		w.DELIVERY_CUSTOMER_CODE = #{code}
    		and w.active = 'Y'
		and f.STATUS = 'EFFECTIVE'
    		and w.product_code not in ('PACKAGE','RCP','EPEP')
    		<![CDATA[ and w.bill_time >= #{firstMonthDate} ]]>
    		<![CDATA[ and w.bill_time <= #{lastMonthDate} ]]>
	</select>
	<select id="queryDiscountInfo" resultType="String"
		parameterType="Map">
		select distinct d.rate
		from pkp.T_SRV_WAYBILL_DIS_DETAIL d
		where
    			d.WAYBILL_NO = #{waybillNo}
    		<![CDATA[ and d.pricing_entry_code = #{entryCode} ]]>
    		<![CDATA[ and d.TYPE = #{type}]]>
	</select>

	<!-- 快递签收状态 详细信息 -->
	<resultMap id="WaybillSignDetailMap"
		type="com.deppon.foss.module.pickup.waybill.shared.vo.WaybillSignDetailVo">
		<result column="id" property="id" jdbcType="VARCHAR" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="waybill_no" property="waybillNo" jdbcType="VARCHAR" />
		<result column="bill_time" property="billTime" jdbcType="TIMESTAMP" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="delivery_customer_name" property="deliveryCustomerName"
			jdbcType="VARCHAR" />
		<result column="pre_customer_pickup_time" property="preCustomerPickupTime" jdbcType="TIMESTAMP" />
		<result column="receive_customer_name" property="receiveCustomerName"
			jdbcType="VARCHAR" />
		<result column="name" property="customerPickupOrgCode"
			jdbcType="VARCHAR" />
		<result column="goods_qty_total" property="goodsQtyTotal"
			jdbcType="NUMERIC" />
		<result column="goods_weight_total" property="goodsWeightTotal"
			jdbcType="DECIMAL" />
		<result column="transport_fee" property="transportFee"
			jdbcType="DECIMAL" />
		<result column="COD_FEE" property="codFee" jdbcType="DECIMAL" />
		<result column="insurance_fee" property="insuranceFee"
			jdbcType="DECIMAL" />
		<result column="other_fee" property="otherFee" jdbcType="DECIMAL" />
		<result column="total_fee" property="totalFee" jdbcType="DECIMAL" />
		<result column="sign_status" property="signStatus" jdbcType="VARCHAR" />
		<result column="sign_time" property="signTime" jdbcType="TIMESTAMP" />
		<result column="deliveryman_name" property="deliverymanName"
			jdbcType="VARCHAR" />
		<result column="sign_note" property="signNote" />
	</resultMap>

	<!-- 根据客户编码、开始时间、结束时间查询 快递签收状态 详细信息 -->
	<select id="queryWayBillSignDetail" resultMap="WaybillSignDetailMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.vo.WaybillSignDetailQueryVo">
		select wb.id ,
		wb.order_no ,
		wb.waybill_no ,
		wb.bill_time ,
		wb.create_time ,
		wb.delivery_customer_name ,
		wb.receive_customer_name ,
		wb.pre_customer_pickup_time ,
		nvl(sd.name,ob.agent_dept_name) as name ,
		wb.goods_qty_total,
		wb.goods_weight_total,
		wb.transport_fee/100 as transport_fee,
		wb.cod_fee/100 as cod_fee,
		wb.insurance_fee/100 as insurance_fee,
		wb.other_fee/100 as other_fee,
		wb.total_fee/100 as total_fee ,
		v.value_name as sign_status,
		sr.sign_time,
		sr.deliveryman_name,
		sr.sign_note
		from pkp.t_srv_waybill wb  left join  pkp.t_srv_waybill_sign_result sr 
		on  wb.waybill_no = sr.waybill_no  AND sr.active = 'Y' 
		left join bse.t_bas_data_dictionary_value v 
        on sr.sign_status = v.value_code and v.active='Y' AND v.terms_code in ('PKP_SIGN_STATUS', 'PKP_SIGN_SITUATION')
		left join bse.t_bas_sales_department sd 
	     on wb.customer_pickup_org_code = sd.code and sd.active = 'Y'
	    left join bse.t_bas_outer_branch ob
	     on wb.customer_pickup_org_code = ob.agent_dept_code and ob.active = 'Y'
		<where>
			 wb.active = 'Y' 
			AND wb.product_code in('EPEP','RCP','PACKAGE')
			AND wb.delivery_customer_code = #{deliveryCustomerCode}
			AND wb.bill_time BETWEEN
			#{startTime,jdbcType=TIMESTAMP} AND #{endTime,jdbcType=TIMESTAMP}
			
		</where>
	</select>

	<!-- 快递签收状态 详细信息 总数  -->
	<select id="countQueryWayBillSignDetail" resultType="java.lang.Integer" parameterType="com.deppon.foss.module.pickup.waybill.shared.vo.WaybillSignDetailQueryVo">
		select count(1) 
		from pkp.t_srv_waybill wb left join  pkp.t_srv_waybill_sign_result sr 
		on  wb.waybill_no = sr.waybill_no  AND sr.active = 'Y' 
		left join bse.t_bas_data_dictionary_value v 
        on sr.sign_status = v.value_code and v.active='Y' AND v.terms_code in ('PKP_SIGN_STATUS', 'PKP_SIGN_SITUATION')
		left join bse.t_bas_sales_department sd 
	     on wb.customer_pickup_org_code = sd.code and sd.active = 'Y'
	    left join bse.t_bas_outer_branch ob
	     on wb.customer_pickup_org_code = ob.agent_dept_code and ob.active = 'Y'
		<where>
			 wb.active = 'Y' 
			AND wb.product_code in('EPEP','RCP','PACKAGE')
			AND wb.delivery_customer_code = #{deliveryCustomerCode}
			AND wb.bill_time BETWEEN
			#{startTime,jdbcType=TIMESTAMP} AND #{endTime,jdbcType=TIMESTAMP}
			
		</where>
	</select>
	<!-- 根据运单号获取作废的票数 -->
	<select id="queryWaybillInvalid" resultType="java.lang.Integer"
		parameterType="java.util.List">
		select count(1) from pkp.t_srv_actual_freight tf
		<where>
			tf.waybill_no in
			<foreach collection="list" item="waybillNum" index="index"
				open="(" separator="," close=")">
				#{waybillNum,jdbcType=VARCHAR}
			</foreach>
			and
			tf.status in ('OBSOLETE' ,'ABORTED')
		</where>

	</select>

	<!-- 根据运单号获取退回的票数 -->
	<select id="queryWaybillBack" resultType="java.lang.Integer"
		parameterType="java.util.List">
		select count(1) from pkp.t_srv_waybill_return tr
		<where>
			tr.ORIGINAL_WAYBILL_NO in
			<foreach collection="list" item="waybillNum" index="index"
				open="(" separator="," close=")">
				#{waybillNum,jdbcType=VARCHAR}
			</foreach>
			and
			tr.return_type = 'RETURN_CARGO'

		</where>

	</select>
	<update id="updateWaybillActiveByWaybillNo"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.domain.WaybillEntity">
		update PKP.T_SRV_WAYBILL
		<set>
			ACTIVE = 'N',
			<if test="pendingType != null and pendingType != '' ">
			 pending_type = #{pendingType,jdbcType=VARCHAR},
			</if>
		</set>
		where waybill_no = #{waybillNo,jdbcType=VARCHAR}
		and ACTIVE = 'Y'
	</update>	
	<!-- 发货清单 -->
	<resultMap type="com.deppon.foss.module.pickup.waybill.shared.vo.DeliverGoodsListVo" id="DeliverGoodsListVoMap">
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="waybillNo" property="waybillNo" jdbcType="VARCHAR" />
		<result column="ReceiveCustomerDetailAddress" property="ReceiveCustomerDetailAddress" jdbcType="VARCHAR" />
		<result column="receiveCustomerName" property="receiveCustomerName" jdbcType="VARCHAR" />
		<result column="goodsWeightTotal" property="goodsWeightTotal" jdbcType="DECIMAL" />
		<result column="goodsVolumeTotal" property="goodsVolumeTotal" jdbcType="DECIMAL" />
		<result column="transportFee" property="transportFee" jdbcType="DECIMAL" />
		<result column="insuranceFee" property="insuranceFee" jdbcType="DECIMAL" />
		<result column="codAmount" property="codAmount" jdbcType="DECIMAL" />
		<result column="codFee" property="codFee" jdbcType="DECIMAL" />
		<result column="totalCost" property="totalCost" jdbcType="DECIMAL" />
		<result column="deliveryCustomerName" property="deliveryCustomerName" jdbcType="VARCHAR" />
		<result column="goodsStatus" property="goodsStatus" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- 发货清单列表 -->
	<select id="queryWaybillDeliverGoodsList" resultMap="DeliverGoodsListVoMap" parameterType="com.deppon.foss.module.pickup.waybill.shared.vo.DeliverGoodsListQueryVo">
		select 
		 to_date(to_char(wb.create_time,'yyyy-MM-dd'),'yyyy-mm-dd') as createTime,
		 wb.waybill_no as waybillNo , 
		 (select  bd.name from bse.t_bas_district bd 
		 where bd.code = wb.receive_customer_city_code and rownum = 1 ) as ReceiveCustomerDetailAddress, 
		 wb.receive_customer_name as receiveCustomerName, 
		 wb.goods_weight_total as goodsWeightTotal ,
		 wb.goods_volume_total as goodsVolumeTotal,
		 wb.transport_fee/100 as transportFee,
		 wb.insurance_fee/100 as insuranceFee,
		 wb.cod_amount/100 as codAmount, 
		 wb.cod_fee/100 as codFee, 
		 (wb.total_fee-wb.cod_amount)/100 as totalCost,
		 wb.delivery_customer_name as deliveryCustomerName ,
		 sr.sign_status as goodsStatus
		from pkp.t_srv_waybill wb 
		     left join pkp.t_srv_waybill_sign_result sr 
		     on wb.waybill_no = sr.waybill_no and sr.active = 'Y' 
		     ,pkp.t_srv_actual_freight tf 
		<where>
		   wb.active = 'Y'
		    AND tf.waybill_no = wb.waybill_no and tf.status = 'EFFECTIVE' 
		   <if test="deliveryCustomerCode != null and deliveryCustomerCode !=''">
			 <![CDATA[ AND wb.delivery_customer_code = #{deliveryCustomerCode,jdbcType=VARCHAR}  ]]>
			</if>
			<choose>
				<when test="beginMonthTime != null and beginMonthTime !='' and endMonthTime != null and endMonthTime!='' ">
				   <![CDATA[ AND wb.create_time between Trunc(#{beginMonthTime,jdbcType=DATE },'MONTH') and LAST_DAY(Trunc(#{endMonthTime,jdbcType=DATE },'MONTH'))+1-1/ 86400 ]]>
				</when>
				<when test="startTime != null and startTime !='' and endTime != null and endTime != '' ">
				    <![CDATA[ AND wb.create_time between Trunc(#{startTime,jdbcType=DATE },'dd') and Trunc(#{endTime,jdbcType=DATE },'dd')+1-1/ 86400 ]]>
				</when>
			</choose>
			<!-- 
			 <if test="startTime != null and startTime !='' and endTime != null and endTime != '' "  >
			   <![CDATA[ AND wb.create_time between #{startTime,jdbcType=VARCHAR } and #{endTime,jdbcType=VARCHAR } ]]>
			 </if>
			  -->
			 <if test="waybillNoList != null and waybillNoList.size() > 0 and waybillNoList !='' " >
			 	AND wb.waybill_no in 
			 	<foreach collection="waybillNoList" item="waybillNoList" index="index" open="(" separator="," close=")"> 
			 		#{waybillNoList,jdbcType=VARCHAR}
			 	</foreach>
			 </if>
		</where>
		
	</select>
	
	<!-- 发货清单 查询总数 -->
	<select id="queryWaybillDeliverGoodsListCount" resultType="java.lang.Integer" parameterType="com.deppon.foss.module.pickup.waybill.shared.vo.DeliverGoodsListQueryVo">
		select count(1) 
		from pkp.t_srv_waybill wb 
		     left join pkp.t_srv_waybill_sign_result sr 
		     on wb.waybill_no = sr.waybill_no and sr.active = 'Y' 
		      ,pkp.t_srv_actual_freight tf 
		<where>
		   wb.active = 'Y'
		    AND tf.waybill_no = wb.waybill_no and tf.status = 'EFFECTIVE' 
		   <if test="deliveryCustomerCode != null and deliveryCustomerCode !=''">
			 <![CDATA[ AND wb.delivery_customer_code = #{deliveryCustomerCode,jdbcType=VARCHAR}  ]]>
			</if>
			<choose>
				<when test="beginMonthTime != null and beginMonthTime !='' and endMonthTime != null and endMonthTime!='' ">
				   <![CDATA[ AND wb.create_time between Trunc(#{beginMonthTime,jdbcType=DATE },'MONTH') and LAST_DAY(Trunc(#{endMonthTime,jdbcType=DATE },'MONTH'))+1-1/ 86400 ]]>
				</when>
				<when test="startTime != null and startTime !='' and endTime != null and endTime != '' ">
				    <![CDATA[ AND wb.create_time between Trunc(#{startTime,jdbcType=DATE },'dd') and Trunc(#{endTime,jdbcType=DATE },'dd')+1-1/ 86400 ]]>
				</when>
			</choose>
			<!-- 
			 <if test="startTime != null and startTime !='' and endTime != null and endTime != '' "  >
			   <![CDATA[ AND wb.create_time between #{startTime,jdbcType=VARCHAR } and #{endTime,jdbcType=VARCHAR } ]]>
			 </if>
			  -->
			 <if test="waybillNoList != null and waybillNoList.size() > 0 and waybillNoList !='' " >
			 	AND wb.waybill_no in 
			 	<foreach collection="waybillNoList" item="waybillNoList" index="index" open="(" separator="," close=")"> 
			 		#{waybillNoList,jdbcType=VARCHAR}
			 	</foreach>
			 </if>
		</where>
	</select>
	<!-- wangzengming 添加返货单号-->
	<select id="queryWaybillInfoForSOC"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillQueryInfoDto"
		resultMap="waybillInfoResultMap2">
		select  /*模块：接送货-运单-根据运单集合返回运单详细信息*/
		w.waybill_no ,
		w.transport_type ,
		w.product_code,
		w.delivery_customer_name ,
		w.delivery_customer_contact,
		w.delivery_customer_phone ,
		w.delivery_customer_mobilephone ,
		w.delivery_big_customer ,<!-- 增加发货客户为大客户 -->
		w.receive_org_code ,
		w.delivery_customer_address ,
		w.receive_customer_name ,
		w.receive_customer_contact,
		w.receive_customer_phone ,
		w.receive_customer_mobilephone,
		w.target_org_code,
		w.receive_customer_address,
		w.goods_name,
		w.goods_qty_total,
		w.goods_weight_total,
		w.goods_volume_total,
		w.total_fee/100 as total_fee,
		w.paid_method,
		w.pre_pay_amount/100 as pre_pay_amount,
		w.to_pay_amount/100 as to_pay_amount,
		w.refund_type,
		w.cod_amount/100 as cod_amount,
		w.cod_fee/100 as cod_fee,
		w.receive_method,
		w.pickup_fee/100 as pickup_fee,
		w.delivery_goods_fee/100 as delivery_goods_fee,
		w.package_fee/100 as package_fee,
		w.service_fee/100 as service_fee,
		w.transport_fee/100 as transport_fee,
		w.receive_org_code,
		w.customer_pickup_org_code,
		w.pre_arrive_time,
		r.sign_situation,
		r.deliveryman_name,
		r.sign_time,
		r.sign_note,
		w.order_no,
		w.insurance_amount/100 as insurance_amount,
		w.insurance_fee/100 as insurance_fee,
		w.goods_package,
		w.active,
		w.other_fee/100 as other_fee,
		w.outer_notes,
		w.delivery_customer_code,
		w.receive_customer_code,
		f.settle_status,
		w.return_bill_type,
		w.transportation_remark,
		w.goods_package,
		w.bill_time,
		w.load_org_code ,
		w.delivery_customer_prov_code ,
		w.delivery_customer_city_code ,
		w.delivery_customer_dist_code,
		w.receive_customer_prov_code ,
		w.receive_customer_city_code ,
		w.receive_customer_dist_code,
		w.pickup_to_door,
		
		w.PICKUP_CENTRALIZED,
		w.CREATE_USER_CODE,
		w.CREATE_USER_NAME,
		w.CREATE_USER_DEPT_NAME,
		
		w.CREATE_ORG_CODE as CREATE_ORG_CODE,
		bso.name as CREATE_ORG_NAME,
		w.DRIVER_CODE,
		bsem2.emp_name as DRIVER_NAME,
		w.IS_EXPRESS,
		
		
		w.MODIFY_TIME,
	    bsem3.emp_code as MODIFY_USER_CODE,
	    bsem3.emp_name as MODIFY_USER_NAME,
	    mbso.UNIFIED_CODE as MODIFY_ORG_CODE,
	    mbso.NAME as MODIFY_ORG_NAME,
	    w.GOODS_SIZE,
		
		exp.EXPRESS_EMP_CODE ,
		exp.EXPRESS_EMP_NAME,
		exp.EXPRESS_ORG_CODE,
		exp.EXPRESS_ORG_NAME,
		exp.RETURN_TYPE,  
		exp.ORIGINAL_WAYBILL_NO,
		
		
		F.RECEIVE_CUSTOMER_ADDRESS_NOTE AS RECEIVE_CUSTOMER_ADDRESS_NOTE,
		F.DELIVERY_CUSTOMER_ADDRESS_NOTE AS DELIVERY_CUSTOMER_ADDRESS_NOTE,
		f.notification_result,
		d.pricing_entry_code,
		e.name,
		d.amount/100 as amount,
		
		tcg.OPERATION_ORG_NAME,
		tcg.OPERATION_ORG_CODE,
		bso.name as PRINCIPAL_ORG_NAME,
		bso.PRINCIPAL_NO,
		bsem.emp_name
		
		from pkp.t_srv_waybill w
		left join pkp.t_srv_waybill_charge_detail d on d.waybill_no = w.waybill_no
		and d.active = 'Y'
		<!-- 关联表  wutao-->
		left join pkp.t_srv_waybill_return wr on wr.waybill_no = w.waybill_no
		left join pkp.t_srv_pricing_entry e on e.code = d.pricing_entry_code and
		e.active = 'Y'
		left join pkp.t_srv_waybill_sign_result r on r.waybill_no = w.waybill_no
		and r.active = 'Y'
		inner join pkp.t_srv_actual_freight f on f.waybill_no = w.waybill_no
				left join pkp.T_SRV_WAYBILL_EXPRESS exp on exp.WAYBILL_ID = w.ID
		left join (select tc.* from tfr.t_opt_complement_log tc where tc.operation_time=(
		select max(operation_time) from tfr.t_opt_complement_log where waybill_no=tc.waybill_no))tcg 
		on tcg.waybill_no = w.waybill_no
		left join bse.t_bas_org bso on bso.code=w.CREATE_ORG_CODE and bso.active='Y'
		left join bse.t_bas_org mbso on mbso.code=w.MODIFY_ORG_CODE and mbso.active='Y'
		left join bse.t_bas_employee bsem on bsem.emp_code=bso.PRINCIPAL_NO and bsem.active='Y'
		left join bse.t_bas_employee bsem2 on bsem2.emp_code=w.DRIVER_CODE and bsem2.active='Y'
		left join bse.t_bas_employee bsem3 on bsem3.emp_code=w.MODIFY_USER_CODE and bsem3.active='Y'
		where w.waybill_no in
		<foreach collection="waybillList" open="(" close=")"
			separator="," item="waybillNo">
			<if test="waybillNo!=null and waybillNo != ''">
    	      <![CDATA[	#{waybillNo,jdbcType=VARCHAR} ]]>
			</if>
		</foreach>
		<if test="state!=null and state!= ''">
			and w.active =  <![CDATA[#{state,jdbcType=VARCHAR}]]>
		</if>
	</select>
	
	<select id="getWaybillSignList" parameterType="java.util.List" resultMap="WaybillSignDetailMap" >
		select  SIGN_SITUATION AS SIGN_STATUS,WAYBILL_NO
	 	from pkp.T_SRV_WAYBILL_SIGN_RESULT  
	 	where  WAYBILL_NO in
	 	<foreach collection="list" item="waybillNo" index="index" open="(" separator="," close=")"> 
				#{waybillNo,jdbcType=VARCHAR}
			</foreach>
			and active = 'Y'
	</select>
	<!-- 德邦家装信息查询 -->
	<select id="queryWaybillandOther" resultMap="waybillandOther"
		parameterType="String">
		select
		b.special_value_added_service,a.goods_name,a.goods_qty_total,a.receive_method,a.goods_weight_total,a.goods_volume_total,a.goods_type_code,a.CUSTOMER_PICKUP_ORG_CODE
		from pkp.t_srv_waybill a, pkp.t_srv_actual_freight b where
		a.waybill_no=b.waybill_no
		and a.waybill_no = #{waybillNo} and
		a.active='Y' and SPECIAL_VALUE_ADDED_SERVICE is not null
	</select>
	
	<!-- 查询子母件 -->
	<select id="queryWaybillListWayBillNo" resultMap="BaseResultMap"
		parameterType="java.util.List">
	  select	/*模块：接送货-运单查询-根据运单号和订单号查询运单基本信息*/
		<include refid="Base_Column_List_Select" />
		from PKP.T_SRV_WAYBILL
		where 1 = 1
			<if test="active != null and  active != '' ">
				and ACTIVE = #{active,jdbcType=CHAR}
			</if>
				and WAYBILL_NO IN
			<foreach collection="list" open="(" close=")"
			separator="," item="waybillNo">
			<if test="waybillNo!=null and waybillNo != ''">
    	      <![CDATA[	#{waybillNo,jdbcType=VARCHAR} ]]>
			</if>
		</foreach>
			<if test="orderNo != null and  orderNo != '' ">
				and ORDER_NO = #{orderNo,jdbcType=VARCHAR}
			</if>
		/*order by CREATE_TIME desc*/
	</select>
	<!-- 根据运单号查询第一次开单时运单基本信息(给结算提供的接口) DN201511140004 liding add -->
	<select id="selectFirstWaybillByWaybillNo" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillQueryArgsDto">

		select * from (
		select /*模块：接送货-运单查询-根据运单号和订单号查询运单基本信息*/
		<include refid="Base_Column_List_Select" />
		from PKP.T_SRV_WAYBILL
		where 1 = 1
		<!-- 防止出现一个运单号对应多个运单号时报错的情况出现 -->

		<if test="waybillNo != null and  waybillNo != '' ">
			and WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
		</if>
		order
		by CREATE_TIME ASC
		) where ROWNUM = 1
	</select>
	<select id="queryPickupGoods" resultType="java.lang.String" parameterType="java.lang.String">
		select 
		FREE_PICKUP_GOODS 
		from PKP.T_SRV_WAYBILL  
		where WAYBILL_NO=#{waybillNo,jdbcType=VARCHAR} and ACTIVE='Y'
	</select>
	<!-- 添加零担电子运单查询 -->
	<select id="queryLTLWaybillNoExpress" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.pickup.waybill.shared.dto.WaybillDto">
		select /*模块：接送货-运单-查询运单*/
		<include refid="Base_Column_List" />
		from PKP.T_SRV_WAYBILL p
		<where>
			<!-- 排除运单状态为RFC_ACTIVE和RFC_ACTIVE的更改单记录 -->
			P.PENDING_TYPE NOT IN ( 'RFC_ACTIVE','RFC_PENDING','PDA_PENDING')
			AND
			p.active = #{waybillEntity.active,jdbcType=VARCHAR}
			<if test="billStartTime != null and billStartTime != '' ">
				and p.BILL_TIME  <![CDATA[  >=  ]]>
				#{billStartTime,jdbcType=TIMESTAMP}
			</if>
			<if test="billEndTime != null and billEndTime != '' ">
				AND p.BILL_TIME  <![CDATA[  <=  ]]>
				#{billEndTime,jdbcType=TIMESTAMP}
			</if>
			<if test="createStartTime != null and createStartTime !='' ">
				and p.CREATE_TIME <![CDATA[  >=  ]]>
				#{createStartTime,jdbcType=TIMESTAMP}
			</if>
			<if test="createEndTime != null and createEndTime !='' ">
				and p.CREATE_TIME <![CDATA[  <=  ]]>
				#{createEndTime,jdbcType=TIMESTAMP}
			</if>
			<if
				test="waybillEntity.receiveOrgCode != null and waybillEntity.receiveOrgCode !='' ">
				and p.receive_org_code =
				#{waybillEntity.receiveOrgCode,jdbcType=VARCHAR}
			</if>
			<if test="waybillEntity.receiveOrgCodeList != null">
				and p.receive_org_code in
				<foreach collection="waybillEntity.receiveOrgCodeList" item="receiveOrgCode"
					index="index" open="(" separator="," close=")"> #{receiveOrgCode,
					jdbcType=VARCHAR}
				</foreach>
			</if>
			<if
				test="waybillEntity.productCode != null and waybillEntity.productCode != 'all' and waybillEntity.productCode !='' ">
				and p.product_code =
				#{waybillEntity.productCode,jdbcType=VARCHAR}
			</if>
			 and p.product_code not in ('PACKAGE','RCP','EPEP')
			<if
				test="waybillEntity.pendingType != null and waybillEntity.pendingType != 'all' and waybillEntity.pendingType !='' ">
				and p.pending_type =
				#{waybillEntity.pendingType,jdbcType=VARCHAR}
			</if>
			<if
				test="waybillEntity.createUserCode != null and waybillEntity.createUserCode !='' ">
				and p.create_user_code =
				#{waybillEntity.createUserCode,jdbcType=VARCHAR}
			</if>
			<if test="mixNo != null and mixNo !='' ">
				and p.WAYBILL_NO = #{mixNo,jdbcType=CHAR}
			</if>
			<if test="orderNo != null and orderNo !='' ">
				and p.ORDER_NO =#{orderNo,jdbcType=VARCHAR} and
				p.ORDER_NO is not null
			</if>
		</where>
		order by BILL_TIME asc
	</select>
	
	<!-- 根据运单号查询是否是悟空快递单 -->
	<select id="queryIsECSByWayBillNo" resultType="java.lang.String"
		parameterType="java.lang.String">
		select
		 IS_ECS
		from PKP.T_SRV_WAYBILL
		where waybill_no = #{waybillNo,jdbcType=VARCHAR}
		and active ='Y'
	</select>
	
	<!-- 根据运单号查询是否是合伙人运单 -->
	<select id="partnerWayBillNo" resultType="java.lang.String"
		parameterType="java.lang.String">
		select
		 l.IS_LEAGUE_SALEDEPT
		from PKP.T_SRV_WAYBILL k 
		LEFT JOIN bse.t_Bas_Sales_Department l ON (k.customer_pickup_org_code = l.code)
		where k.waybill_no = #{waybillNo,jdbcType=VARCHAR} 
		and l.active='Y' and k.active='Y'
	</select>
</mapper>