<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.deppon.foss.module.pickup.predeliver.api.server.dao.DeliverHandoverbillEntityMapper" >
   <resultMap id="BaseResultMap" type="com.deppon.foss.module.pickup.predeliver.api.shared.domain.DeliverHandoverbillEntity" >
    <result column="ID" property="id" jdbcType="VARCHAR" />
    <result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
    <result column="PRODUCT_CODE" property="productCode" jdbcType="VARCHAR" />
    <result column="NOTICE_CONTENT" property="noticeContent" jdbcType="VARCHAR" />
    <result column="RECEIVE_METHOD" property="receiveMethod" jdbcType="VARCHAR" />
    <result column="PRE_DELIVER_DATE" property="preDeliverDate" jdbcType="TIMESTAMP" />
    <result column="DELIVERY_TIME_INTERVAL" property="deliveryTimeInterval" jdbcType="VARCHAR" />
    <result column="GOODS_QTY_TOTAL" property="goodsQtyTotal" jdbcType="DECIMAL" />
    <result column="GOODS_WEIGHT" property="goodsWeight" jdbcType="DECIMAL" />
    <result column="GOODS_VOLUME" property="goodsVolume" jdbcType="DECIMAL" />
    <result column="INVOICE_TYPE" property="invoiceType" jdbcType="VARCHAR" />
    <result column="ACTIVE" property="active" jdbcType="CHAR" />
    <result column="BILL_TYPE" property="billType" jdbcType="VARCHAR" />
    <result column="BILL_OPERATE_NAME" property="billOperateName" jdbcType="VARCHAR" />
    <result column="BILL_OPERATE_CODE" property="billOperateCode" jdbcType="VARCHAR" />
    <result column="BILL_TIME" property="billTime" jdbcType="TIMESTAMP" />
    <result column="VEHICLE_NO" property="vehicleNo" jdbcType="VARCHAR" />
    <result column="BILL_QTY" property="billQty" jdbcType="DECIMAL" />
    <result column="LAST_LOAD_ORG_CODE" property="lastLoadOrgCode" jdbcType="VARCHAR" />
    <result column="DELIVERY_TIME_START" property="deliveryTimeStart" jdbcType="VARCHAR" />
    <result column="DELIVERY_TIME_OVER" property="deliveryTimeOver" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="BILL_OPERATE_ORG_CODE" property="billOperateOrgCode" jdbcType="VARCHAR" />
    <result column="BILL_OPERATE_ORG_NAME" property="billOperateOrgName" jdbcType="VARCHAR" />
    <result column="SMALLZONE_CODE" property="smallzoneCode" jdbcType="VARCHAR" />
    <result column="TALLYMAN_RETURN_REASON" property="tallymanReturnReason" jdbcType="VARCHAR" />
    <result column="LATE_NO" property="lateNo" jdbcType="CHAR" />
    <result column="GOODS_PACKAGE" property="goodsPackage" jdbcType="VARCHAR" />
    <result column="RECEIVE_CUSTOMER_PROV_CODE" property="receiveCustomerProvCode" jdbcType="VARCHAR" />
    <result column="RECEIVE_CUSTOMER_CITY_CODE" property="receiveCustomerCityCode" jdbcType="VARCHAR" />
    <result column="RECEIVE_CUSTOMER_DIST_CODE" property="receiveCustomerDistCode" jdbcType="VARCHAR" />
    <result column="RECEIVE_CUSTOMER_ADDRESS_NOTE" property="receiveCustomerAddressNote" jdbcType="VARCHAR" />
    <result column="RECEIVE_CUSTOMER_ADDRESS" property="receiveCustomerAddress" jdbcType="VARCHAR" />
    <result column="LONGITUDE" property="longitude" jdbcType="VARCHAR" />
    <result column="LATITUDE" property="latitude" jdbcType="VARCHAR" />
    <result column="MATCH_TYPE" property="matchType" jdbcType="VARCHAR" />
    <result column="SPECIAL_ADDRESS_TYPE" property="specialAddressType" jdbcType="VARCHAR" />
    <result column="TO_PAY_AMOUNT" property="toPayAmount" jdbcType="DECIMAL" />
    <result column="GOODS_SIZE" property="goodsSize" jdbcType="CLOB" />
    <result column="IS_EXHIBITION" property="isExhibition" jdbcType="CHAR" />
    <result column="UITRA_LONG_DELIVERY" property="uitraLongDelivery" jdbcType="CHAR" />
  	<result column="IS_GIS_DEAL" property="isGisDeal" jdbcType="CHAR" />
    <result column="IS_VEHICLE_SCHEDULING" property="isVehicleScheduling" jdbcType="CHAR" />
 	 <result column="IS_USED" property="isUsed" jdbcType="CHAR" />
  	 <result column="SMALLZONE_NAME" property="smallzoneName" jdbcType="VARCHAR" />
  	<result column="DELIVER_REQUIRE" property="deliverRequire" jdbcType="VARCHAR" />
  	<result column="ACTUAL_SMALLZONE_CODE" property="actualSmallzoneCode" jdbcType="VARCHAR" />
    <result column="ACTUAL_SMALLZONE_NAME" property="actualSmallzoneName" jdbcType="VARCHAR" />
    <result column="ACTUAL_VEHICLE_NO" property="actualVehicleNo" jdbcType="VARCHAR" />
    <result column="INVOICE_DETAIL" property="invoiceDetail" jdbcType="VARCHAR" /> 
   </resultMap>
  <sql id="Base_Column_List">
		ID, WAYBILL_NO, PRODUCT_CODE,
      NOTICE_CONTENT, RECEIVE_METHOD, PRE_DELIVER_DATE, 
      DELIVERY_TIME_INTERVAL, GOODS_QTY_TOTAL, GOODS_WEIGHT, 
      GOODS_VOLUME, INVOICE_TYPE, ACTIVE, 
      BILL_TYPE, BILL_OPERATE_NAME, BILL_OPERATE_CODE, 
      BILL_TIME, VEHICLE_NO, BILL_QTY, 
      LAST_LOAD_ORG_CODE, DELIVERY_TIME_START, DELIVERY_TIME_OVER, 
      MODIFY_TIME, BILL_OPERATE_ORG_CODE, BILL_OPERATE_ORG_NAME, 
      SMALLZONE_CODE, TALLYMAN_RETURN_REASON, LATE_NO,
      GOODS_PACKAGE, RECEIVE_CUSTOMER_PROV_CODE,
      RECEIVE_CUSTOMER_CITY_CODE, RECEIVE_CUSTOMER_DIST_CODE,
      RECEIVE_CUSTOMER_ADDRESS_NOTE, RECEIVE_CUSTOMER_ADDRESS,
      LONGITUDE, LATITUDE, MATCH_TYPE,
      SPECIAL_ADDRESS_TYPE, TO_PAY_AMOUNT/100 as TO_PAY_AMOUNT, IS_EXHIBITION,
      UITRA_LONG_DELIVERY, IS_GIS_DEAL, IS_VEHICLE_SCHEDULING,IS_USED,SMALLZONE_NAME,GOODS_SIZE,DELIVER_REQUIRE
      , ACTUAL_SMALLZONE_CODE, ACTUAL_SMALLZONE_NAME, ACTUAL_VEHICLE_NO,INVOICE_DETAIL
	</sql>
    <insert id="insert" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.DeliverHandoverbillEntity" >
    insert into pkp.T_SRV_DELIVER_HANDOVERBILL (ID, WAYBILL_NO, PRODUCT_CODE, 
      NOTICE_CONTENT, RECEIVE_METHOD, PRE_DELIVER_DATE, 
      DELIVERY_TIME_INTERVAL, GOODS_QTY_TOTAL, GOODS_WEIGHT, 
      GOODS_VOLUME, INVOICE_TYPE, ACTIVE, 
      BILL_TYPE, BILL_OPERATE_NAME, BILL_OPERATE_CODE, 
      BILL_TIME, VEHICLE_NO, BILL_QTY, 
      LAST_LOAD_ORG_CODE, DELIVERY_TIME_START, DELIVERY_TIME_OVER, 
      MODIFY_TIME, BILL_OPERATE_ORG_CODE, BILL_OPERATE_ORG_NAME, 
      SMALLZONE_CODE, TALLYMAN_RETURN_REASON, LATE_NO, 
      GOODS_PACKAGE, RECEIVE_CUSTOMER_PROV_CODE, 
      RECEIVE_CUSTOMER_CITY_CODE, RECEIVE_CUSTOMER_DIST_CODE, 
      RECEIVE_CUSTOMER_ADDRESS_NOTE, RECEIVE_CUSTOMER_ADDRESS, 
      LONGITUDE, LATITUDE, MATCH_TYPE, 
      SPECIAL_ADDRESS_TYPE, TO_PAY_AMOUNT, IS_EXHIBITION, 
      UITRA_LONG_DELIVERY, IS_GIS_DEAL, IS_VEHICLE_SCHEDULING, 
      IS_USED, SMALLZONE_NAME, DELIVER_REQUIRE, 
      ACTUAL_SMALLZONE_CODE, ACTUAL_SMALLZONE_NAME, 
      ACTUAL_VEHICLE_NO,INVOICE_DETAIL, GOODS_SIZE, IS_EMPTY_CAR)
    values (#{id,jdbcType=VARCHAR}, #{waybillNo,jdbcType=VARCHAR}, #{productCode,jdbcType=VARCHAR}, 
      #{noticeContent,jdbcType=VARCHAR}, #{receiveMethod,jdbcType=VARCHAR}, #{preDeliverDate,jdbcType=TIMESTAMP}, 
      #{deliveryTimeInterval,jdbcType=VARCHAR}, #{goodsQtyTotal,jdbcType=DECIMAL}, #{goodsWeight,jdbcType=DECIMAL}, 
      #{goodsVolume,jdbcType=DECIMAL}, #{invoiceType,jdbcType=VARCHAR}, #{active,jdbcType=CHAR}, 
      #{billType,jdbcType=VARCHAR}, #{billOperateName,jdbcType=VARCHAR}, #{billOperateCode,jdbcType=VARCHAR}, 
      #{billTime,jdbcType=TIMESTAMP}, #{vehicleNo,jdbcType=VARCHAR}, #{billQty,jdbcType=DECIMAL}, 
      #{lastLoadOrgCode,jdbcType=VARCHAR}, #{deliveryTimeStart,jdbcType=VARCHAR}, #{deliveryTimeOver,jdbcType=VARCHAR}, 
      #{modifyTime,jdbcType=TIMESTAMP}, #{billOperateOrgCode,jdbcType=VARCHAR}, #{billOperateOrgName,jdbcType=VARCHAR}, 
      #{smallzoneCode,jdbcType=VARCHAR}, #{tallymanReturnReason,jdbcType=VARCHAR}, #{lateNo,jdbcType=CHAR}, 
      #{goodsPackage,jdbcType=VARCHAR}, #{receiveCustomerProvCode,jdbcType=VARCHAR}, 
      #{receiveCustomerCityCode,jdbcType=VARCHAR}, #{receiveCustomerDistCode,jdbcType=VARCHAR}, 
      #{receiveCustomerAddressNote,jdbcType=VARCHAR}, #{receiveCustomerAddress,jdbcType=VARCHAR}, 
      #{longitude,jdbcType=VARCHAR}, #{latitude,jdbcType=VARCHAR}, #{matchType,jdbcType=VARCHAR}, 
      #{specialAddressType,jdbcType=VARCHAR}, #{toPayAmount,jdbcType=DECIMAL}*100, #{isExhibition,jdbcType=CHAR}, 
      #{uitraLongDelivery,jdbcType=CHAR}, #{isGisDeal,jdbcType=CHAR}, #{isVehicleScheduling,jdbcType=CHAR}, 
      #{isUsed,jdbcType=CHAR}, #{smallzoneName,jdbcType=VARCHAR}, #{deliverRequire,jdbcType=VARCHAR}, 
      #{actualSmallzoneCode,jdbcType=VARCHAR}, #{actualSmallzoneName,jdbcType=VARCHAR}, 
      #{actualVehicleNo,jdbcType=VARCHAR},#{invoiceDetail,jdbcType=VARCHAR}, #{goodsSize,jdbcType=CLOB}, #{isEmptyCar, jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.DeliverHandoverbillEntity" >
    insert into pkp.T_SRV_DELIVER_HANDOVERBILL
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="waybillNo != null" >
        WAYBILL_NO,
      </if>
      <if test="productCode != null" >
        PRODUCT_CODE,
      </if>
      <if test="noticeContent != null" >
        NOTICE_CONTENT,
      </if>
      <if test="receiveMethod != null" >
        RECEIVE_METHOD,
      </if>
      <if test="preDeliverDate != null" >
        PRE_DELIVER_DATE,
      </if>
      <if test="deliveryTimeInterval != null" >
        DELIVERY_TIME_INTERVAL,
      </if>
      <if test="goodsQtyTotal != null" >
        GOODS_QTY_TOTAL,
      </if>
      <if test="goodsWeight != null" >
        GOODS_WEIGHT,
      </if>
      <if test="goodsVolume != null" >
        GOODS_VOLUME,
      </if>
      <if test="invoiceType != null" >
        INVOICE_TYPE,
      </if>
      <if test="active != null" >
        ACTIVE,
      </if>
      <if test="billType != null" >
        BILL_TYPE,
      </if>
      <if test="billOperateName != null" >
        BILL_OPERATE_NAME,
      </if>
      <if test="billOperateCode != null" >
        BILL_OPERATE_CODE,
      </if>
      <if test="billTime != null" >
        BILL_TIME,
      </if>
      <if test="vehicleNo != null" >
        VEHICLE_NO,
      </if>
      <if test="billQty != null" >
        BILL_QTY,
      </if>
      <if test="lastLoadOrgCode != null" >
        LAST_LOAD_ORG_CODE,
      </if>
      <if test="deliveryTimeStart != null" >
        DELIVERY_TIME_START,
      </if>
      <if test="deliveryTimeOver != null" >
        DELIVERY_TIME_OVER,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="billOperateOrgCode != null" >
        BILL_OPERATE_ORG_CODE,
      </if>
      <if test="billOperateOrgName != null" >
        BILL_OPERATE_ORG_NAME,
      </if>
      <if test="smallzoneCode != null" >
        SMALLZONE_CODE,
      </if>
      <if test="tallymanReturnReason != null" >
        TALLYMAN_RETURN_REASON,
      </if>
      <if test="lateNo != null" >
        LATE_NO,
      </if>
      <if test="goodsPackage != null" >
        GOODS_PACKAGE,
      </if>
      <if test="receiveCustomerProvCode != null" >
        RECEIVE_CUSTOMER_PROV_CODE,
      </if>
      <if test="receiveCustomerCityCode != null" >
        RECEIVE_CUSTOMER_CITY_CODE,
      </if>
      <if test="receiveCustomerDistCode != null" >
        RECEIVE_CUSTOMER_DIST_CODE,
      </if>
      <if test="receiveCustomerAddressNote != null" >
        RECEIVE_CUSTOMER_ADDRESS_NOTE,
      </if>
      <if test="receiveCustomerAddress != null" >
        RECEIVE_CUSTOMER_ADDRESS,
      </if>
      <if test="longitude != null" >
        LONGITUDE,
      </if>
      <if test="latitude != null" >
        LATITUDE,
      </if>
      <if test="matchType != null" >
        MATCH_TYPE,
      </if>
      <if test="specialAddressType != null" >
        SPECIAL_ADDRESS_TYPE,
      </if>
      <if test="toPayAmount != null" >
        TO_PAY_AMOUNT,
      </if>
      <if test="isExhibition != null" >
        IS_EXHIBITION,
      </if>
      <if test="uitraLongDelivery != null" >
        UITRA_LONG_DELIVERY,
      </if>
      <if test="isGisDeal != null" >
        IS_GIS_DEAL,
      </if>
      <if test="isVehicleScheduling != null" >
        IS_VEHICLE_SCHEDULING,
      </if>
      <if test="isUsed != null" >
        IS_USED,
      </if>
      <if test="smallzoneName != null" >
        SMALLZONE_NAME,
      </if>
      <if test="goodsSize != null" >
        GOODS_SIZE,
      </if>
      <if test="deliverRequire != null" >
        DELIVER_REQUIRE,
      </if>
      <if test="actualSmallzoneCode != null" >
        ACTUAL_SMALLZONE_CODE,
      </if>
      <if test="actualSmallzoneName != null" >
        ACTUAL_SMALLZONE_NAME,
      </if>
      <if test="actualVehicleNo != null" >
        ACTUAL_VEHICLE_NO,
      </if>
      <if test="isEmptyCar != null">
      	IS_EMPTY_CAR,
      </if>
      <if test="invoiceDetail != null" >
        INVOICE_DETAIL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="waybillNo != null" >
        #{waybillNo,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null" >
        #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="noticeContent != null" >
        #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="receiveMethod != null" >
        #{receiveMethod,jdbcType=VARCHAR},
      </if>
      <if test="preDeliverDate != null" >
        #{preDeliverDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryTimeInterval != null" >
        #{deliveryTimeInterval,jdbcType=VARCHAR},
      </if>
      <if test="goodsQtyTotal != null" >
        #{goodsQtyTotal,jdbcType=DECIMAL},
      </if>
      <if test="goodsWeight != null" >
        #{goodsWeight,jdbcType=DECIMAL},
      </if>
      <if test="goodsVolume != null" >
        #{goodsVolume,jdbcType=DECIMAL},
      </if>
      <if test="invoiceType != null" >
        #{invoiceType,jdbcType=VARCHAR},
      </if>
      <if test="active != null" >
        #{active,jdbcType=CHAR},
      </if>
      <if test="billType != null" >
        #{billType,jdbcType=VARCHAR},
      </if>
      <if test="billOperateName != null" >
        #{billOperateName,jdbcType=VARCHAR},
      </if>
      <if test="billOperateCode != null" >
        #{billOperateCode,jdbcType=VARCHAR},
      </if>
      <if test="billTime != null" >
        #{billTime,jdbcType=TIMESTAMP},
      </if>
      <if test="vehicleNo != null" >
        #{vehicleNo,jdbcType=VARCHAR},
      </if>
      <if test="billQty != null" >
        #{billQty,jdbcType=DECIMAL},
      </if>
      <if test="lastLoadOrgCode != null" >
        #{lastLoadOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="deliveryTimeStart != null" >
        #{deliveryTimeStart,jdbcType=VARCHAR},
      </if>
      <if test="deliveryTimeOver != null" >
        #{deliveryTimeOver,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="billOperateOrgCode != null" >
        #{billOperateOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="billOperateOrgName != null" >
        #{billOperateOrgName,jdbcType=VARCHAR},
      </if>
      <if test="smallzoneCode != null" >
        #{smallzoneCode,jdbcType=VARCHAR},
      </if>
      <if test="tallymanReturnReason != null" >
        #{tallymanReturnReason,jdbcType=VARCHAR},
      </if>
      <if test="lateNo != null" >
        #{lateNo,jdbcType=CHAR},
      </if>
      <if test="goodsPackage != null" >
        #{goodsPackage,jdbcType=VARCHAR},
      </if>
      <if test="receiveCustomerProvCode != null" >
        #{receiveCustomerProvCode,jdbcType=VARCHAR},
      </if>
      <if test="receiveCustomerCityCode != null" >
        #{receiveCustomerCityCode,jdbcType=VARCHAR},
      </if>
      <if test="receiveCustomerDistCode != null" >
        #{receiveCustomerDistCode,jdbcType=VARCHAR},
      </if>
      <if test="receiveCustomerAddressNote != null" >
        #{receiveCustomerAddressNote,jdbcType=VARCHAR},
      </if>
      <if test="receiveCustomerAddress != null" >
        #{receiveCustomerAddress,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="matchType != null" >
        #{matchType,jdbcType=VARCHAR},
      </if>
      <if test="specialAddressType != null" >
        #{specialAddressType,jdbcType=VARCHAR},
      </if>
      <if test="toPayAmount != null" >
        #{toPayAmount,jdbcType=DECIMAL}*100,
      </if>
      <if test="isExhibition != null" >
        #{isExhibition,jdbcType=CHAR},
      </if>
      <if test="uitraLongDelivery != null" >
        #{uitraLongDelivery,jdbcType=CHAR},
      </if>
      <if test="isGisDeal != null" >
        #{isGisDeal,jdbcType=CHAR},
      </if>
      <if test="isVehicleScheduling != null" >
        #{isVehicleScheduling,jdbcType=CHAR},
      </if>
      <if test="isUsed != null" >
        #{isUsed,jdbcType=CHAR},
      </if>
      <if test="smallzoneName != null" >
        #{smallzoneName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSize != null" >
        #{goodsSize,jdbcType=CLOB},
      </if>
      <if test="deliverRequire != null" >
        #{deliverRequire,jdbcType=VARCHAR},
      </if>
      <if test="actualSmallzoneCode != null" >
        #{actualSmallzoneCode,jdbcType=VARCHAR},
      </if>
      <if test="actualSmallzoneName != null" >
        #{actualSmallzoneName,jdbcType=VARCHAR},
      </if>
      <if test="actualVehicleNo != null" >
        #{actualVehicleNo,jdbcType=VARCHAR},
      </if>
      <if test="isEmptyCar != null">
      	 #{isEmptyCar, jdbcType=VARCHAR},
      </if>
      <if test="invoiceDetail != null" >
        #{invoiceDetail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
    <update id="updateByWaybillNoSelective" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.DeliverHandoverbillEntity" >
    update pkp.T_SRV_DELIVER_HANDOVERBILL
    <set >
      <if test="productCode != null" >
        PRODUCT_CODE = #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="noticeContent != null" >
        NOTICE_CONTENT = #{noticeContent,jdbcType=VARCHAR},
      </if>
      <if test="receiveMethod != null" >
        RECEIVE_METHOD = #{receiveMethod,jdbcType=VARCHAR},
      </if>
      <if test="preDeliverDate != null" >
        PRE_DELIVER_DATE = #{preDeliverDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deliveryTimeInterval != null" >
        DELIVERY_TIME_INTERVAL = #{deliveryTimeInterval,jdbcType=VARCHAR},
      </if>
      <if test="goodsQtyTotal != null" >
        GOODS_QTY_TOTAL = #{goodsQtyTotal,jdbcType=DECIMAL},
      </if>
      <if test="goodsWeight != null" >
        GOODS_WEIGHT = #{goodsWeight,jdbcType=DECIMAL},
      </if>
      <if test="goodsVolume != null" >
        GOODS_VOLUME = #{goodsVolume,jdbcType=DECIMAL},
      </if>
      <if test="invoiceType != null" >
        INVOICE_TYPE = #{invoiceType,jdbcType=VARCHAR},
      </if>
      <if test="active != null" >
        ACTIVE = #{active,jdbcType=CHAR},
      </if>
      <if test="billType != null" >
        BILL_TYPE = #{billType,jdbcType=VARCHAR},
      </if>
      <if test="billOperateName != null" >
        BILL_OPERATE_NAME = #{billOperateName,jdbcType=VARCHAR},
      </if>
      <if test="billOperateCode != null" >
        BILL_OPERATE_CODE = #{billOperateCode,jdbcType=VARCHAR},
      </if>
      <if test="billTime != null" >
        BILL_TIME = #{billTime,jdbcType=TIMESTAMP},
      </if>
      <if test="vehicleNo != null" >
        VEHICLE_NO = #{vehicleNo,jdbcType=VARCHAR},
      </if>
      <if test="billQty != null" >
        BILL_QTY = #{billQty,jdbcType=DECIMAL},
      </if>
      <if test="lastLoadOrgCode != null" >
        LAST_LOAD_ORG_CODE = #{lastLoadOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="deliveryTimeStart != null" >
        DELIVERY_TIME_START = #{deliveryTimeStart,jdbcType=VARCHAR},
      </if>
      <if test="deliveryTimeOver != null" >
        DELIVERY_TIME_OVER = #{deliveryTimeOver,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="billOperateOrgCode != null" >
        BILL_OPERATE_ORG_CODE = #{billOperateOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="billOperateOrgName != null" >
        BILL_OPERATE_ORG_NAME = #{billOperateOrgName,jdbcType=VARCHAR},
      </if>
      <if test="smallzoneCode != null" >
        SMALLZONE_CODE = #{smallzoneCode,jdbcType=VARCHAR},
      </if>
      <if test="tallymanReturnReason != null" >
        TALLYMAN_RETURN_REASON = #{tallymanReturnReason,jdbcType=VARCHAR},
      </if>
      <if test="lateNo != null" >
        LATE_NO = #{lateNo,jdbcType=CHAR},
      </if>
      <if test="goodsPackage != null" >
        GOODS_PACKAGE = #{goodsPackage,jdbcType=VARCHAR},
      </if>
      <if test="receiveCustomerProvCode != null" >
        RECEIVE_CUSTOMER_PROV_CODE = #{receiveCustomerProvCode,jdbcType=VARCHAR},
      </if>
      <if test="receiveCustomerCityCode != null" >
        RECEIVE_CUSTOMER_CITY_CODE = #{receiveCustomerCityCode,jdbcType=VARCHAR},
      </if>
      <if test="receiveCustomerDistCode != null" >
        RECEIVE_CUSTOMER_DIST_CODE = #{receiveCustomerDistCode,jdbcType=VARCHAR},
      </if>
      <if test="receiveCustomerAddressNote != null" >
        RECEIVE_CUSTOMER_ADDRESS_NOTE = #{receiveCustomerAddressNote,jdbcType=VARCHAR},
      </if>
      <if test="receiveCustomerAddress != null" >
        RECEIVE_CUSTOMER_ADDRESS = #{receiveCustomerAddress,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null" >
        LONGITUDE = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null" >
        LATITUDE = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="matchType != null" >
        MATCH_TYPE = #{matchType,jdbcType=VARCHAR},
      </if>
      <if test="specialAddressType != null" >
        SPECIAL_ADDRESS_TYPE = #{specialAddressType,jdbcType=VARCHAR},
      </if>
      <if test="toPayAmount != null" >
        TO_PAY_AMOUNT = #{toPayAmount,jdbcType=DECIMAL}*100,
      </if>
      <if test="isExhibition != null" >
        IS_EXHIBITION = #{isExhibition,jdbcType=CHAR},
      </if>
      <if test="uitraLongDelivery != null" >
        UITRA_LONG_DELIVERY = #{uitraLongDelivery,jdbcType=CHAR},
      </if>
      <if test="isGisDeal != null" >
        IS_GIS_DEAL = #{isGisDeal,jdbcType=CHAR},
      </if>
      <if test="isVehicleScheduling != null" >
        IS_VEHICLE_SCHEDULING = #{isVehicleScheduling,jdbcType=CHAR},
      </if>
      <if test="isUsed != null" >
        IS_USED = #{isUsed,jdbcType=CHAR},
      </if>
      <if test="smallzoneName != null" >
        SMALLZONE_NAME = #{smallzoneName,jdbcType=VARCHAR},
      </if>
      <if test="goodsSize != null" >
        GOODS_SIZE = #{goodsSize,jdbcType=CLOB},
      </if>
      <if test="deliverRequire != null" >
        DELIVER_REQUIRE = #{deliverRequire,jdbcType=VARCHAR},
      </if>
      <if test="actualSmallzoneCode != null" >
        ACTUAL_SMALLZONE_CODE = #{actualSmallzoneCode,jdbcType=VARCHAR},
      </if>
      <if test="actualSmallzoneName != null" >
        ACTUAL_SMALLZONE_NAME = #{actualSmallzoneName,jdbcType=VARCHAR},
      </if>
      <if test="actualVehicleNo != null and actualVehicleNo!='N/A'" >
        ACTUAL_VEHICLE_NO = #{actualVehicleNo,jdbcType=VARCHAR},
      </if>
      <if test="actualVehicleNo != null and actualVehicleNo=='N/A'" >
        ACTUAL_VEHICLE_NO = null,
      </if>
      <if test="invoiceDetail != null" >
        INVOICE_DETAIL = #{invoiceDetail,jdbcType=VARCHAR},
      </if>
    </set>
    where waybill_No = #{waybillNo,jdbcType=VARCHAR}
        <if test="oldActive != null and oldActive != ''">
            AND Active= #{oldActive, jdbcType=VARCHAR}
        </if>
  </update>
  <sql id="select_receiveMethodTmp_where">
	  <if test="receiveMethodTmp != null and receiveMethodTmp != ''">	
		AND waybill.RECEIVE_METHOD like '%' || #{receiveMethodTmp, jdbcType=VARCHAR} || '%'
		</if>
  </sql>
  <!-- 过滤家装提货方式 -->
  <sql id="select_NotReceiveMethodTmp_where">
    <if test="notReceiveMethodTmp !=null and notReceiveMethodTmp.size > 0">
        AND waybill.RECEIVE_METHOD NOT IN
         <foreach collection="notReceiveMethodTmp" index="index" item="rmethod" open="(" separator="," close=")">
             #{rmethod}
         </foreach>
    </if>
  </sql>
  <sql id="select_position_where">
  		<!-- 库位-->
		<if test="position != null and position !=''">	
			<![CDATA[ AND WS.position_Qty >0]]>
		</if>
  </sql>
   <sql id="select_handoverNo_where">
  		<if test="handoverNo != null and handoverNo != ''">
			and	H.HANDOVER_NO=#{handoverNo,jdbcType=VARCHAR}
			AND H.HANDOVERBILL_STATE!=90
   		</if>
  </sql>
  <sql id="select_vehicleAssembleNo_where">
  		<if test="vehicleAssembleNo != null and vehicleAssembleNo != ''">
   			and VAB.VEHICLEASSEMBLE_NO=#{vehicleAssembleNo,jdbcType=VARCHAR}
   			AND VAB.State!=90
   			AND H.HANDOVERBILL_STATE!=90
   		</if>
  </sql>
   <sql id="select_other_Where">
       <choose>
       <when test="waybillNoList !=null and waybillNoList.length > 0">
          and  waybill.WAYBILL_NO IN
           <foreach collection="waybillNoList" index="index" item="waybillNo" open="(" separator="," close=")">
               #{waybillNo}
           </foreach>
       </when>
       <otherwise>
            <if test="receiveMethod != null and receiveMethod != ''">
                AND waybill.RECEIVE_METHOD = #{receiveMethod, jdbcType=VARCHAR}
            </if>
            <if test="productCode != null and productCode != ''">
                AND waybill.PRODUCT_CODE = #{productCode, jdbcType=VARCHAR}
            </if>
            <if test="noticeResult != null and noticeResult != ''">
                AND (decode(af.notification_org_code, #{lastLoadOrgCode,jdbcType=VARCHAR} ,AF.NOTIFICATION_RESULT, 'NONE_NOTICE')) = #{noticeResult, jdbcType=VARCHAR}
            </if>
            <if test="deliveryTimeInterval != null and deliveryTimeInterval != ''">
                AND af.DELIVERY_TIME_INTERVAL = #{deliveryTimeInterval, jdbcType=VARCHAR}
            </if>
            <if test="deliveryTimeStart != null and deliveryTimeStart != ''">
                AND af.DELIVERY_TIME_START >= #{deliveryTimeStart, jdbcType=VARCHAR}
            </if>
            <if test="deliveryTimeOver != null and deliveryTimeOver != ''">
                <![CDATA[AND af.DELIVERY_TIME_OVER <= #{deliveryTimeOver, jdbcType=VARCHAR}]]>
            </if>
            <if test="(deliveryTimeOver != null and deliveryTimeOver != '') or (
                deliveryTimeStart != null and deliveryTimeStart != ''
            ) or (deliveryTimeInterval != null and deliveryTimeInterval != '')">
                <include refid="select_notificationOrgCode_Where"/>
            </if>
            <include refid="select_preDeliverDateTime_Where"/>
       </otherwise>
   </choose>
  </sql>
  
  <sql id="select_preDeliverDateTime_Where">
		 <choose>
	   		<when test="preDeliverDateFrom != null and preDeliverDateFrom !='' and 
	   		preDeliverDateTo !=null and preDeliverDateTo != '' 
	   		and noDeliverDate != null and noDeliverDate != ''">
	   			<![CDATA[ and (af.deliver_date is null or 
	   				(af.deliver_date  >= #{preDeliverDateFrom,jdbcType=TIMESTAMP}
				 	and af.deliver_date  <=  #{preDeliverDateTo,jdbcType=TIMESTAMP}
				 	and (af.notification_org_code  = #{lastLoadOrgCode,jdbcType=VARCHAR}
				 	or af.UP_DELIVER_DATE_ORG_CODE  = #{lastLoadOrgCode,jdbcType=VARCHAR}))
				 	 or (af.deliver_date is not null  and nvl(af.notification_org_code ,' ') != #{lastLoadOrgCode,jdbcType=VARCHAR}
				 	and nvl(af.UP_DELIVER_DATE_ORG_CODE,' ')  != #{lastLoadOrgCode,jdbcType=VARCHAR}))]]>
	   		</when>
	   		<when test="preDeliverDateFrom != null and preDeliverDateFrom !='' and 
	   		preDeliverDateTo !=null and preDeliverDateTo != ''">
				<![CDATA[ and af.deliver_date  >= #{preDeliverDateFrom,jdbcType=TIMESTAMP}]]>
				<![CDATA[ and af.deliver_date  <=  #{preDeliverDateTo,jdbcType=TIMESTAMP}]]>
				<if test="lastLoadOrgCode != null and lastLoadOrgCode !=''">
            	<![CDATA[ and (af.notification_org_code  = #{lastLoadOrgCode,jdbcType=VARCHAR}
				 			or af.UP_DELIVER_DATE_ORG_CODE  = #{lastLoadOrgCode,jdbcType=VARCHAR})
				 			]]>
       			 </if>
	   		</when>
	   		<when test="noDeliverDate != null and noDeliverDate != ''">
				<![CDATA[AND (af.deliver_date is null or (af.deliver_date is not null  and nvl(af.notification_org_code,' ')  != #{lastLoadOrgCode,jdbcType=VARCHAR}
				 	and nvl(af.UP_DELIVER_DATE_ORG_CODE,' ')  != #{lastLoadOrgCode,jdbcType=VARCHAR}))]]>
	   		</when>
   		</choose>
  </sql>
    <sql id="select_notificationOrgCode_Where">
        <!-- 通知部门 -->
        <if test="lastLoadOrgCode != null and lastLoadOrgCode !=''">
            <![CDATA[ and af.notification_org_code  = #{lastLoadOrgCode,jdbcType=VARCHAR}]]>
        </if>

    </sql>
  <sql id="select_truck_task_Where">
		<!-- 车辆到达部门 传入外场或当前部门-->
		<if test="endStockOrgCode != null and endStockOrgCode !=''">	
		<![CDATA[ and TTD.DEST_ORG_CODE  = #{endStockOrgCode, jdbcType=VARCHAR}]]>
		</if>
</sql> 	
	 <sql id="select_planArrive_Where">
	 	<if test="stockStatus != null and stockStatus != ''">	
			AND ttd.status = #{stockStatus, jdbcType=VARCHAR}
			AND H.HANDOVERBILL_STATE!=90
		</if>
		<!-- 预计到达时间 -->
		<if test="stockTimeFrom != null and stockTimeFrom !=''">	
		<![CDATA[ and TTD.PLAN_ARRIVE_TIME  >= #{stockTimeFrom,jdbcType=TIMESTAMP}]]>
		</if>
		<if test="stockTimeTo !=null and stockTimeTo != ''">	
		<![CDATA[ and TTD.PLAN_ARRIVE_TIME  <=  #{stockTimeTo,jdbcType=TIMESTAMP}]]>
		</if>
	</sql>
	<sql id="select_arrive_Where">
		<if test="stockStatus != null and stockStatus != ''">	
			AND (TTD.status  = #{stockStatus, jdbcType=VARCHAR} OR TTD.status = 'UNLOADED')
		</if>
		<!-- 车辆实际到达时间 -->
		<if test="stockTimeFrom != null and stockTimeFrom !=''">	
		<![CDATA[ and TTD.ACTUAL_ARRIVE_TIME  >= #{stockTimeFrom,jdbcType=TIMESTAMP}]]>
		</if>
		<if test="stockTimeTo !=null and stockTimeTo != ''">	
		<![CDATA[ and TTD.ACTUAL_ARRIVE_TIME  <= #{stockTimeTo,jdbcType=TIMESTAMP}]]>
		</if>
        <if test="stockStatus != null and stockStatus != ''">
            AND H.HANDOVERBILL_STATE!=90
        </if>
	</sql>
	<sql id="select_inStock_Where">
		<if test="stockStatus != null and stockStatus != ''">	
			and ws.stock_goods_qty > 0
		</if>
		<!-- 入库时间 -->
		<if test="stockTimeFrom != null and stockTimeFrom !=''">	
		<![CDATA[ and WS.IN_STOCK_TIME  >= #{stockTimeFrom,jdbcType=TIMESTAMP}]]>
		</if>
		<if test="stockTimeTo !=null and stockTimeTo != ''">	
		<![CDATA[ and WS.IN_STOCK_TIME  <=  #{stockTimeTo,jdbcType=TIMESTAMP}]]>
		</if>
	</sql>
	<sql id="select_stockOrgCode_Where">
		<!-- 库存部门 -->
		<if test="endStockOrgCode != null and endStockOrgCode !=''">	
		<![CDATA[ and  ws.org_code  = #{endStockOrgCode, jdbcType=VARCHAR}]]>
		</if>
		<if test="goodsAreaCode !=null and goodsAreaCode != ''">	
		<![CDATA[ and ws.GOODS_AREA_CODE  =   #{goodsAreaCode, jdbcType=VARCHAR}]]>
		</if>
	</sql>
	<sql id="select_default_Where_1">
		<!-- 过滤快递、空运、偏线运单,
		            过滤已全部签收运单,
		            车辆状态为预计到达或者已到达 或者在库存的
		            待交单件数<开单件数
		            已排单件数<开单件数
		           运单状态为有效的-->	
		 <![CDATA[  
	 	 and  af.arrange_goods_qty<waybill.goods_qty_total and   waybill.goods_qty_total > nvl(af.deliver_bill_qty,0)]]>
		<if test="productCodes !=null and productCodes.length > 0">
			AND waybill.PRODUCT_CODE NOT IN
			<foreach collection="productCodes" index="index" item="productc" open="(" separator="," close=")">
				#{productc}
			</foreach>
		</if>
		<![CDATA[
		AND NOT EXISTS (SELECT 1
          FROM PKP.t_Srv_Waybill_Sign_Result WSR
         WHERE WSR.WAYBILL_NO = waybill.WAYBILL_NO
           AND WSR.SIGN_STATUS = 'SIGN_STATUS_ALL' 
           AND WSR.ACTIVE = 'Y') 
        ]]>
        <!-- 运单版本 -->
		<if test="active != null and active !=''">	
		<![CDATA[ and waybill.ACTIVE  = #{active, jdbcType=VARCHAR}]]>
		</if>
		 <if test="lastLoadOrgCode != null and lastLoadOrgCode !=''">
            <![CDATA[ and waybill.LAST_LOAD_ORG_CODE  = #{lastLoadOrgCode, jdbcType=VARCHAR}]]>
        </if>
	</sql>
<sql id="waybillNo_List_distinct">
 distinct waybill.waybill_no waybillNo, /*运单号*/
</sql>
<sql id="waybillNo_List">
 waybill.waybill_no waybillNo, /*运单号*/
</sql>
  <!-- 列表显示字段 通用 -->
	<sql id="Base_Column_List_pre">
	 waybill.product_code productCode,
	 waybill.receive_method receiveMethod,
	 waybill.goods_qty_total -nvl(af.DELIVER_BILL_QTY, 0)  billQty,
	 waybill.goods_qty_total goodsQtyTotal,
	 waybill.goods_weight_total goodsWeight,
	 waybill.goods_volume_total goodsVolume,
	 waybill.PENDING_TYPE pendingType,
      DECODE(AF.NOTIFICATION_ORG_CODE,
      NULL,
      'NONE_NOTICE',
      #{lastLoadOrgCode,jdbcType=VARCHAR},
      AF.NOTIFICATION_RESULT,
      'NONE_NOTICE') AS noticeResult,
      CASE
	   WHEN AF.NOTIFICATION_ORG_CODE = #{lastLoadOrgCode,jdbcType=VARCHAR} THEN
	   af.deliver_date
	   WHEN AF.UP_DELIVER_DATE_ORG_CODE= #{lastLoadOrgCode,jdbcType=VARCHAR} THEN
	   af.deliver_date
	   ELSE
	    NULL
	 END AS preDeliverDate,
      DECODE(AF.NOTIFICATION_ORG_CODE,
      NULL,
      NULL,
      #{lastLoadOrgCode,jdbcType=VARCHAR},
      af.delivery_time_interval,
      NULL) AS deliveryTimeInterval,
      DECODE(AF.NOTIFICATION_ORG_CODE,
      NULL,
      NULL,
      #{lastLoadOrgCode,jdbcType=VARCHAR},
      af.delivery_time_over,
      NULL) AS deliveryTimeOver,
      DECODE(AF.NOTIFICATION_ORG_CODE,
      NULL,
      NULL,
      #{lastLoadOrgCode,jdbcType=VARCHAR},
      af.invoice_type,
      null)as  invoiceType,
      DECODE(AF.NOTIFICATION_ORG_CODE,
      NULL,
      NULL,
      #{lastLoadOrgCode,jdbcType=VARCHAR},
      af.delivery_time_start,
      NULL) AS deliveryTimeStart,
	 af.RECEIVE_CUSTOMER_ADDRESS_NOTE receiveCustomerAddressNote,
     nvl(af.DELIVER_BILL_QTY, 0) deliverBillQty,
     (select 'Y'
	    from pkp.t_srv_exception ex
	   where ex.waybill_no = waybill.waybill_no
	     and ex.status = 'HANDLING' and rownum=1) hasException,
	 rfc.status waybillRfcStatus,
   waybill.LAST_LOAD_ORG_CODE lastLoadOrgCode,
   waybill.GOODS_PACKAGE goodsPackage,
   to_char(waybill.GOODS_SIZE)   goodsSize,
   waybill.RECEIVE_CUSTOMER_PROV_CODE   receiveCustomerProvCode,
   waybill.RECEIVE_CUSTOMER_CITY_CODE   receiveCustomerCityCode,
   waybill.RECEIVE_CUSTOMER_DIST_CODE   receiveCustomerDistCode,
   waybill.RECEIVE_CUSTOMER_ADDRESS   receiveCustomerAddress,
    waybill.to_pay_amount/100 toPayAmount,
    waybill.paid_method paidMethod,
	af.cash_time cashTime,
    HRE.RETURN_REASON_NOTES deliverReturnReasoNotes,
    HRE.RETURN_REASON deliverReturnReason,
    HRE.CREATER_NAME deliverReturnOperate,
    hre.create_date deliverReturnTime
	</sql>
	<!-- 库存 -->
	<sql id ="Stock_Column_List">
	ws.stock_goods_qty stockGoodsQty,
	'库存中' stockStatus,
	 ws.in_stock_time inStockTime,
	</sql>
	<sql id ="plan_arrive_Column_List">
	 TTD.PLAN_ARRIVE_TIME planArriveTime,
	 '预计到达' stockStatus,
	</sql>
	<sql id ="arrive_Column_List">
	 <!-- af.arrive_goods_qty arriveGoodsQty,-->
  case ttd.status when 'UNLOADED' then hd.handover_goods_qty else af.arrive_goods_qty end arriveGoodsQty , 
	'已到达' stockStatus,
	</sql>
	<select id="selectPreDeliverHandoverByVehicleNo" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.PreDeliverHandoverbillQueryDto" 
          resultType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.PreDeliverHandoverbillDto">
	  select
	  <include refid="waybillNo_List_distinct" />
	/*模块：-派送交单-查询待交单运单-到达*/
	TTD.PLAN_ARRIVE_TIME planArriveTime,
	CASE
		WHEN ws.stock_goods_qty > 0 THEN
	    '库存中'
	   WHEN ttd.status = 'ARRIVED' THEN
	    '已到达'
	    WHEN ttd.status = 'ONTHEWAY' THEN
	    '预计到达'
	    WHEN ttd.status = 'UNLOADED' THEN
	    '已到达'
	   ELSE
	    ''
	 END AS stockStatus,
	CASE
	   WHEN ttd.status = 'ARRIVED' THEN
	    af.arrive_goods_qty
    <!--  按交接单查询时，交接单(车次号)已卸车，则列表中“到达件数”等于“交接单件数" -->
	   WHEN ttd.status = 'UNLOADED' THEN
	    HD.HANDOVER_GOODS_QTY
	   ELSE
	    0
	 END AS arriveGoodsQty,
	 ws.stock_goods_qty stockGoodsQty,
	 ws.in_stock_time inStockTime,
	<include refid="Base_Column_List_pre" />
	  from TFR.T_OPT_VEHICLEASSEMBLEBILL VAB
		INNER JOIN 
		TFR.T_OPT_VEHICLEASSEMBLE_DETAIL VABD
		ON VAB.ID = VABD.VEHICLEASSEMBLEBILL_ID
		INNER JOIN TFR.T_OPT_HANDOVERBILL H
			on VABD.HANDOVER_NO = H.HANDOVER_NO
		INNER JOIN 
			TFR.T_OPT_HANDOVERBILL_DETAIL HD
		ON
			H.HANDOVER_NO = HD.HANDOVER_NO
		INNER JOIN 	
			TFR.T_OPT_TRUCK_TASK_BILL TTB 
		ON
			H.HANDOVER_NO = TTB.BILL_NO
		INNER JOIN
			TFR.T_OPT_TRUCK_TASK_DETAIL TTD
		ON
			TTB.TRUCK_TASK_DETAIL_ID = TTD.ID 
	   inner join pkp.t_srv_waybill waybill
	   on waybill.waybill_no = hd.waybill_no
	 inner join pkp.t_srv_actual_freight af
	    on waybill.waybill_no = af.waybill_no
	  left join pkp.t_srv_waybillrfc rfc
	    on rfc.waybill_no = waybill.waybill_no
	   and rfc.status in ('PRE_AUDIT', 'PRE_ACCECPT')
	  left join tfr.T_OPT_WAYBILL_STOCK ws
	    on waybill.waybill_no = ws.waybill_no
	<include refid="select_stockOrgCode_Where"/>
	  left join pkp.T_SRV_HANDOVERBILL_RETURN  hre on hre.waybill_no = waybill.waybill_no
   	 and hre.active = 'Y'
	 <where>
	 	 <include refid="select_receiveMethodTmp_where"/>
	 	 <include refid="select_default_Where_1"/>
	 	 <include refid="select_vehicleAssembleNo_where"/>
	 	  <include refid="select_truck_task_Where"/>
	 	 <![CDATA[  and (ttd.status in ('ONTHEWAY', 'ARRIVED','UNLOADED') or ws.stock_goods_qty>0)]]>
	 </where> 
  </select>
   <select id="selectPreDeliverHandoverByVehicleNoCount" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.PreDeliverHandoverbillQueryDto" 
   resultType="Long">
	  select count(distinct waybill.waybill_No)
	  from TFR.T_OPT_VEHICLEASSEMBLEBILL VAB
		INNER JOIN 
		TFR.T_OPT_VEHICLEASSEMBLE_DETAIL VABD
		ON VAB.ID = VABD.VEHICLEASSEMBLEBILL_ID
		INNER JOIN TFR.T_OPT_HANDOVERBILL H
			on VABD.HANDOVER_NO = H.HANDOVER_NO
		INNER JOIN 
			TFR.T_OPT_HANDOVERBILL_DETAIL HD
		ON
			H.HANDOVER_NO = HD.HANDOVER_NO
		INNER JOIN 	
			TFR.T_OPT_TRUCK_TASK_BILL TTB 
		ON
			H.HANDOVER_NO = TTB.BILL_NO
		INNER JOIN
			TFR.T_OPT_TRUCK_TASK_DETAIL TTD
		ON
			TTB.TRUCK_TASK_DETAIL_ID = TTD.ID 
	   inner join pkp.t_srv_waybill waybill
	   on waybill.waybill_no = hd.waybill_no
	   inner join pkp.t_srv_actual_freight af
	    on waybill.waybill_no = af.waybill_no
	    left join tfr.T_OPT_WAYBILL_STOCK ws
	    on waybill.waybill_no = ws.waybill_no
		<include refid="select_stockOrgCode_Where"/>
	 <where>
	 	 <include refid="select_receiveMethodTmp_where"/>
	 	 <include refid="select_default_Where_1"/>
	 	 <include refid="select_vehicleAssembleNo_where"/>
	 	  <include refid="select_truck_task_Where"/>
	 	  <![CDATA[  and (ttd.status in ('ONTHEWAY', 'ARRIVED','UNLOADED') or ws.stock_goods_qty>0)]]>
	 </where>
  </select>
	<select id="selectPreDeliverHandoverByhandoverNo" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.PreDeliverHandoverbillQueryDto" 
          resultType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.PreDeliverHandoverbillDto">
	  select
	/*模块：-派送交单-查询待交单运单-到达*/
	TTD.PLAN_ARRIVE_TIME planArriveTime,
	CASE
		WHEN ws.stock_goods_qty > 0 THEN
	    '库存中'
	   WHEN ttd.status = 'ARRIVED' THEN
	    '已到达'
	    WHEN ttd.status = 'ONTHEWAY' THEN
	    '预计到达'
	    WHEN ttd.status = 'UNLOADED' THEN
	    '已到达'
	   ELSE
	    ''
	 END AS stockStatus,
	CASE
	   WHEN ttd.status = 'ARRIVED' THEN
	    af.arrive_goods_qty
     <!-- 按交接单查询时，交接单已卸车，则列表中“到达件数”等于“交接单件数" -->
	   WHEN ttd.status = 'UNLOADED' THEN
	    hd.HANDOVER_GOODS_QTY
	   ELSE
	    0
	 END AS arriveGoodsQty,
	 ws.stock_goods_qty stockGoodsQty,
	 ws.in_stock_time inStockTime,
	 <include refid="waybillNo_List" />
	<include refid="Base_Column_List_pre" />
	  from TFR.T_OPT_HANDOVERBILL H
		INNER JOIN 
			TFR.T_OPT_HANDOVERBILL_DETAIL HD
		ON
			H.HANDOVER_NO = HD.HANDOVER_NO
		INNER JOIN 	
			TFR.T_OPT_TRUCK_TASK_BILL TTB 
		ON
			H.HANDOVER_NO = TTB.BILL_NO
		INNER JOIN
			TFR.T_OPT_TRUCK_TASK_DETAIL TTD
		ON
			TTB.TRUCK_TASK_DETAIL_ID = TTD.ID 
	   inner join pkp.t_srv_waybill waybill
	   on waybill.waybill_no = hd.waybill_no
	 inner join pkp.t_srv_actual_freight af
	    on waybill.waybill_no = af.waybill_no
	  left join pkp.t_srv_waybillrfc rfc
	    on rfc.waybill_no = waybill.waybill_no
	   and rfc.status in ('PRE_AUDIT', 'PRE_ACCECPT')
	  left join tfr.T_OPT_WAYBILL_STOCK ws
	    on waybill.waybill_no = ws.waybill_no
	<include refid="select_stockOrgCode_Where"/>
	  left join pkp.T_SRV_HANDOVERBILL_RETURN  hre on hre.waybill_no = waybill.waybill_no
   	 and hre.active = 'Y'
	 <where>
	 	 <include refid="select_receiveMethodTmp_where"/>
	 	 <include refid="select_default_Where_1"/>
	 	  <include refid="select_truck_task_Where"/>
	 	  <include refid="select_handoverNo_where"/>
	 	 <![CDATA[  and (ttd.status in ('ONTHEWAY', 'ARRIVED','UNLOADED') or ws.stock_goods_qty>0)]]>
	 </where> 
  </select>
   <select id="selectPreDeliverHandoverByhandoverNoCount" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.PreDeliverHandoverbillQueryDto" 
   resultType="Long">
	  select count(1)
	  from TFR.T_OPT_HANDOVERBILL H
		INNER JOIN 
			TFR.T_OPT_HANDOVERBILL_DETAIL HD
		ON
			H.HANDOVER_NO = HD.HANDOVER_NO
		INNER JOIN 	
			TFR.T_OPT_TRUCK_TASK_BILL TTB 
		ON
			H.HANDOVER_NO = TTB.BILL_NO
		INNER JOIN
			TFR.T_OPT_TRUCK_TASK_DETAIL TTD
		ON
			TTB.TRUCK_TASK_DETAIL_ID = TTD.ID 
	   inner join pkp.t_srv_waybill waybill
	   on waybill.waybill_no = hd.waybill_no
	   inner join pkp.t_srv_actual_freight af
	    on waybill.waybill_no = af.waybill_no
	    left join tfr.T_OPT_WAYBILL_STOCK ws
	    on waybill.waybill_no = ws.waybill_no
		<include refid="select_stockOrgCode_Where"/>
	 <where>
	 	 <include refid="select_receiveMethodTmp_where"/>
	 	 <include refid="select_default_Where_1"/>
	 	  <include refid="select_truck_task_Where"/>
	 	  <include refid="select_handoverNo_where"/>
      <!--  按交接单查询时，交接单已卸车，则列表中“到达件数”等于“交接单件数" -->
	 	  <![CDATA[  and (ttd.status in ('ONTHEWAY', 'ARRIVED', 'UNLOADED') or ws.stock_goods_qty>0)]]>
	 </where>
  </select>
	<select id="selectPreDeliverHandoverArrive" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.PreDeliverHandoverbillQueryDto" 
          resultType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.PreDeliverHandoverbillDto">
	  select
	/*模块：-派送交单-查询待交单运单-到达*/
	<include refid="arrive_Column_List" />
	<include refid="waybillNo_List" />
	<include refid="Base_Column_List_pre" />
	  from TFR.T_OPT_HANDOVERBILL H
		INNER JOIN 
			TFR.T_OPT_HANDOVERBILL_DETAIL HD
		ON
			H.HANDOVER_NO = HD.HANDOVER_NO
		INNER JOIN 	
			TFR.T_OPT_TRUCK_TASK_BILL TTB 
		ON
			H.HANDOVER_NO = TTB.BILL_NO
		INNER JOIN
			TFR.T_OPT_TRUCK_TASK_DETAIL TTD
		ON
			TTB.TRUCK_TASK_DETAIL_ID = TTD.ID 
	   inner join pkp.t_srv_waybill waybill
	   on waybill.waybill_no = hd.waybill_no
	 inner join pkp.t_srv_actual_freight af
	    on waybill.waybill_no = af.waybill_no
	  left join pkp.t_srv_waybillrfc rfc
	    on rfc.waybill_no = waybill.waybill_no
	   and rfc.status in ('PRE_AUDIT', 'PRE_ACCECPT')
	  left join pkp.T_SRV_HANDOVERBILL_RETURN  hre on hre.waybill_no = waybill.waybill_no
   	 and hre.active = 'Y'
	 <where>
	 	 <include refid="select_NotReceiveMethodTmp_where"/>
	 	 <include refid="select_receiveMethodTmp_where"/>
         <include refid="select_other_Where"/>
	 	 <include refid="select_default_Where_1"/>
         <include refid="select_truck_task_Where"/>
	 	 <include refid="select_arrive_Where"/>
     <!-- 已到达.已卸车状态，查询时候去除在库存中的 -->
     and not exists (
       select 1 from tfr.t_opt_waybill_stock st where st.waybill_no = waybill.waybill_no
     )
	 </where> 
  </select>
   <select id="selectPreDeliverHandoverArriveCount" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.PreDeliverHandoverbillQueryDto" 
   resultType="Long">
	  select count(1)
	  from TFR.T_OPT_HANDOVERBILL H
		INNER JOIN 
			TFR.T_OPT_HANDOVERBILL_DETAIL HD
		ON
			H.HANDOVER_NO = HD.HANDOVER_NO
		INNER JOIN 	
			TFR.T_OPT_TRUCK_TASK_BILL TTB 
		ON
			H.HANDOVER_NO = TTB.BILL_NO
		INNER JOIN
			TFR.T_OPT_TRUCK_TASK_DETAIL TTD
		ON
			TTB.TRUCK_TASK_DETAIL_ID = TTD.ID 
	   inner join pkp.t_srv_waybill waybill
	   on waybill.waybill_no = hd.waybill_no
	   inner join pkp.t_srv_actual_freight af
	    on waybill.waybill_no = af.waybill_no
	 <where>
	 	 <include refid="select_receiveMethodTmp_where"/>
         <include refid="select_other_Where"/>
	 	 <include refid="select_default_Where_1"/>
         <include refid="select_truck_task_Where"/>
	 	 <include refid="select_arrive_Where"/>
     <!-- 已到达.已卸车状态，查询时候去除在库存中的 -->
     and not exists (
       select 1 from tfr.t_opt_waybill_stock st where st.waybill_no = waybill.waybill_no
     )
	 </where>
  </select>
	<select id="selectPreDeliverHandoverPreArrive" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.PreDeliverHandoverbillQueryDto" 
          resultType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.PreDeliverHandoverbillDto">
	  select
	/*模块：-派送交单-查询待交单运单-预计到达*/
	<include refid="plan_arrive_Column_List" />
	<include refid="waybillNo_List" />
	<include refid="Base_Column_List_pre" />
	  from TFR.T_OPT_HANDOVERBILL H
		INNER JOIN 
			TFR.T_OPT_HANDOVERBILL_DETAIL HD
		ON
			H.HANDOVER_NO = HD.HANDOVER_NO
		INNER JOIN 	
			TFR.T_OPT_TRUCK_TASK_BILL TTB 
		ON
			H.HANDOVER_NO = TTB.BILL_NO
		INNER JOIN
			TFR.T_OPT_TRUCK_TASK_DETAIL TTD
		ON
			TTB.TRUCK_TASK_DETAIL_ID = TTD.ID 
	   inner join pkp.t_srv_waybill waybill
	   on waybill.waybill_no = hd.waybill_no
	 inner join pkp.t_srv_actual_freight af
	    on waybill.waybill_no = af.waybill_no
	  left join pkp.t_srv_waybillrfc rfc
	    on rfc.waybill_no = waybill.waybill_no
	   and rfc.status in ('PRE_AUDIT', 'PRE_ACCECPT')
	  left join pkp.T_SRV_HANDOVERBILL_RETURN  hre on hre.waybill_no = waybill.waybill_no
   	 and hre.active = 'Y'
	 <where>
     <include refid="select_NotReceiveMethodTmp_where"/>
	 	 <include refid="select_receiveMethodTmp_where"/>
	 	 <include refid="select_default_Where_1"/>
	 	 <include refid="select_planArrive_Where"/>
	 	  <include refid="select_truck_task_Where"/>
	 	  <include refid="select_other_Where"/>
	 </where> 
  </select>
   <select id="selectPreDeliverHandoverPreArriveCount" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.PreDeliverHandoverbillQueryDto" 
   resultType="Long">
	  select count(1)
	  from TFR.T_OPT_HANDOVERBILL H
		INNER JOIN 
			TFR.T_OPT_HANDOVERBILL_DETAIL HD
		ON
			H.HANDOVER_NO = HD.HANDOVER_NO
		INNER JOIN 	
			TFR.T_OPT_TRUCK_TASK_BILL TTB 
		ON
			H.HANDOVER_NO = TTB.BILL_NO
		INNER JOIN
			TFR.T_OPT_TRUCK_TASK_DETAIL TTD
		ON
			TTB.TRUCK_TASK_DETAIL_ID = TTD.ID 
	   inner join pkp.t_srv_waybill waybill
	   on waybill.waybill_no = hd.waybill_no
	   inner join pkp.t_srv_actual_freight af
	    on waybill.waybill_no = af.waybill_no
	 <where>
         <include refid="select_receiveMethodTmp_where"/>
         <include refid="select_default_Where_1"/>
         <include refid="select_planArrive_Where"/>
         <include refid="select_truck_task_Where"/>
         <include refid="select_other_Where"/>
	 </where>
  </select>
  <select id="selectPreDeliverHandoverStock" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.PreDeliverHandoverbillQueryDto" 
          resultType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.PreDeliverHandoverbillDto">
	  select
	/*模块：-派送交单-查询待交单运单-库存中*/
	<include refid="Stock_Column_List" />
	<include refid="waybillNo_List" />
	<include refid="Base_Column_List_pre" />
	  from tfr.T_OPT_WAYBILL_STOCK ws 
	   inner join pkp.t_srv_waybill waybill
	   on waybill.waybill_no = ws.waybill_no
	 inner join pkp.t_srv_actual_freight af
	    on waybill.waybill_no = af.waybill_no
	  left join pkp.t_srv_waybillrfc rfc
	    on rfc.waybill_no = waybill.waybill_no
	   and rfc.status in ('PRE_AUDIT', 'PRE_ACCECPT')
	  left join pkp.T_SRV_HANDOVERBILL_RETURN  hre on hre.waybill_no = waybill.waybill_no
   	 and hre.active = 'Y'
	 <where>
     <include refid="select_NotReceiveMethodTmp_where"/>
	 	 <include refid="select_receiveMethodTmp_where"/>
	 	 <include refid="select_stockOrgCode_Where"/>
	 	 <include refid="select_default_Where_1"/>
	 	 <include refid="select_position_where"/>
	 	 <include refid="select_inStock_Where"/>
	 	 <include refid="select_other_Where"/>
	 </where> 
  </select>
   <select id="selectPreDeliverHandoverStockCount" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.PreDeliverHandoverbillQueryDto" 
   resultType="Long">
	  select count(1)
	   from tfr.T_OPT_WAYBILL_STOCK ws 
	   inner join pkp.t_srv_waybill waybill
	   on waybill.waybill_no = ws.waybill_no
	   inner join pkp.t_srv_actual_freight af
	    on waybill.waybill_no = af.waybill_no
	 <where>
	 	 <include refid="select_receiveMethodTmp_where"/>
	 	 <include refid="select_stockOrgCode_Where"/>
	 	 <include refid="select_default_Where_1"/>
	 	 <include refid="select_position_where"/>
	 	 <include refid="select_inStock_Where"/>
	 	 <include refid="select_other_Where"/>
	 </where>
  </select>
    <select id="queryDeliverHandoverbillByWaybillNo" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.DeliverHandoverbillEntity"
            resultMap="BaseResultMap">
        select /*模块：派送交单-- 查询是否存在派送交单运单*/
        <include refid="Base_Column_List"/>  from PKP.T_SRV_DELIVER_HANDOVERBILL
        <where>
            <choose>
                <when test=" waybillNo != null  and waybillNo != ''  ">
                    WAYBILL_NO=#{waybillNo,jdbcType=VARCHAR}
                </when>
                <when test=" id != null and id != '' ">
                     id=#{id,jdbcType=VARCHAR}
                </when>
                <otherwise>
                    WAYBILL_NO = ''
                </otherwise>
            </choose>
            <if test="active!=null and active!=''">
                and	active=#{active,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <select id="queryDeliverHandoverbillListByWaybillNo" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.DeliverHandoverbillEntity"
            resultMap="BaseResultMap">
        select /*模块：派送交单-- 查询派送交单运单列表*/
        <include refid="Base_Column_List"/>  from PKP.T_SRV_DELIVER_HANDOVERBILL
        <where>
            <if test=" waybillNo != null  and waybillNo != ''  ">
                WAYBILL_NO=#{waybillNo,jdbcType=VARCHAR}
            </if>
        </where>
        order by bill_time desc
    </select>
    <update id="updatePartByParams" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.DeliverHandoverbillEntity" >
        update PKP.T_SRV_DELIVER_HANDOVERBILL
        <set >
            <if test="modifyTime != null and modifyTime != '' " >
                MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="active!=null and active!=''">
                active=#{active,jdbcType=VARCHAR},
            </if>
        </set>
        <where>
            <choose>
                <when test=" waybillNo != null  and waybillNo != ''  ">
                    WAYBILL_NO=#{waybillNo,jdbcType=VARCHAR}
                </when>
                <when test="id != null and id != '' ">
                     id=#{id,jdbcType=VARCHAR}
                </when>
                <otherwise>
                    WAYBILL_NO = ''
                </otherwise>
            </choose>
            <if test="oldActive != null and oldActive != '' ">
               and  active=#{oldActive,jdbcType=VARCHAR}
            </if>
        </where>
    </update>
    <update id="updateBywaybillNOs" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.PreDeliverHandoverbillQueryDto" >
        update PKP.T_SRV_DELIVER_HANDOVERBILL
        <set >
            <if test="modifyTime != null and modifyTime != '' " >
                MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="active!=null and active!=''">
                active=#{active,jdbcType=VARCHAR},
            </if>
        </set>
        <where>
            <choose>
                <when test=" waybillNoList !=null and waybillNoList.length > 0 ">
                    WAYBILL_NO in
                    <foreach collection="waybillNoList" index="index" item="waybillNo" open="(" separator="," close=")">
                        #{waybillNo}
                    </foreach>
                </when>
                <otherwise>
                    WAYBILL_NO = ''
                </otherwise>
            </choose>
            <if test="oldActive != null and oldActive != '' ">
               and  active=#{oldActive,jdbcType=VARCHAR}
            </if>
        </where>
    </update>
    <!-- 派送交单查询条件  输入运单号 、交接单、车次号具有排他性，优先级运单号然后交接单号然后车次号再然后就是其他条件-->
    <sql id="select_Where_deliverHandover">
        <choose>
            <when test="waybillNoList !=null and waybillNoList.length > 0">
               and d.WAYBILL_NO IN
                <foreach collection="waybillNoList" index="index" item="waybillNo" open="(" separator="," close=")">
                    #{waybillNo}
                </foreach>
            </when>
            <when test="handoverNo != null and handoverNo !=''">
                and HB.handover_no = #{handoverNo, jdbcType=VARCHAR}
                and HB.HANDOVERBILL_STATE != 90
            </when>
            <when test="vehicleAssembleNo != null and vehicleAssembleNo !=''">
                and VAB.VEHICLEASSEMBLE_NO = #{vehicleAssembleNo, jdbcType=VARCHAR}
                and HB.HANDOVERBILL_STATE != 90
            </when>
            <otherwise>
                <if test="receiveMethod != null and receiveMethod != ''">
                    AND d.RECEIVE_METHOD = #{receiveMethod, jdbcType=VARCHAR}
                </if>
                <if test="productCode != null and productCode != ''">
                    AND d.PRODUCT_CODE = #{productCode, jdbcType=VARCHAR}
                </if>
                <if test="noticeResult != null and noticeResult != ''">
                    AND d.NOTICE_CONTENT= #{noticeResult, jdbcType=VARCHAR}
                </if>
                <if test="deliveryTimeInterval != null and deliveryTimeInterval != ''">
                    AND d.DELIVERY_TIME_INTERVAL = #{deliveryTimeInterval, jdbcType=VARCHAR}
                </if>
                <if test="deliveryTimeStart != null and deliveryTimeStart != ''">
                    AND d.DELIVERY_TIME_START >= #{deliveryTimeStart, jdbcType=VARCHAR}
                </if>
                <if test="deliveryTimeOver != null and deliveryTimeOver != ''">
                    <![CDATA[AND d.DELIVERY_TIME_OVER <= #{deliveryTimeOver, jdbcType=VARCHAR}]]>
                </if>
                <!-- 预计送货日期 -->
                <if test="preDeliverDateFrom != null and preDeliverDateFrom !=''">
                    <![CDATA[ and d.PRE_DELIVER_DATE  >= #{preDeliverDateFrom,jdbcType=TIMESTAMP}]]>
                </if>
                <if test="preDeliverDateTo !=null and preDeliverDateTo != ''">
                    <![CDATA[ and d.PRE_DELIVER_DATE  <=  #{preDeliverDateTo,jdbcType=TIMESTAMP}]]>
                </if>
                <!-- 交单日期 -->
                <if test="handoverbillTimeStart != null and handoverbillTimeStart !=''">
                    <![CDATA[ and d.BILL_TIME  >= #{handoverbillTimeStart,jdbcType=TIMESTAMP}]]>
                </if>
                <if test="handoverbillTimeEnd !=null and handoverbillTimeEnd != ''">
                    <![CDATA[ and d.BILL_TIME  <=  #{handoverbillTimeEnd,jdbcType=TIMESTAMP}]]>
                </if>
                <if test="deliverbillStatus != null and deliverbillStatus != ''">
                    AND ed.status = #{deliverbillStatus, jdbcType=VARCHAR}
                </if>
            </otherwise>
        </choose>
        <if test="active != null and active !=''">
            <![CDATA[ and d.ACTIVE  = #{active, jdbcType=VARCHAR}]]>
        </if>
        <if test="lastLoadOrgCode != null and lastLoadOrgCode !=''">
            <![CDATA[ and d.LAST_LOAD_ORG_CODE  = #{lastLoadOrgCode, jdbcType=VARCHAR}]]>
        </if>
    </sql>
    <!-- 派送交单-查询已交单信息-->
    <select id="selectDeliverHandoverCount" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.DeliverHandoverbillQueryDto"
            resultType="Long">
        select /*模块：派送交单-- 查询已交单信息汇总*/ count(1)
   from pkp.t_srv_deliver_handoverbill d
        <if test="deliverbillStatus != null and deliverbillStatus != ''">
            inner JOIN (SELECT *
            FROM (SELECT DE.WAYBILL_NO,db.status,
            DE.ID AS ID,
            ROW_NUMBER() OVER(PARTITION BY DE.WAYBILL_NO ORDER BY DB.OPERATE_TIME DESC) AS MAXID
            FROM PKP.T_SRV_DELIVERBILL_DETAIL DE
            INNER JOIN PKP.T_SRV_DELIVERBILL DB
            ON DB.ID = DE.T_SRV_DELIVERBILL_ID
                where  db.status = #{deliverbillStatus, jdbcType=VARCHAR}
            )
            WHERE MAXID = 1) ED
            ON D.WAYBILL_NO = ED.WAYBILL_NO
        </if>
        <if test="handoverNo != null and handoverNo != '' " >
          inner join  TFR.T_OPT_HANDOVERBILL_DETAIL HBD on d.waybill_no = hbd.waybill_no
          inner join  TFR.T_OPT_HANDOVERBILL HB on hb.handover_no = hbd.handover_no
        </if>
        <if test="vehicleAssembleNo != null and vehicleAssembleNo !='' " >
          inner join  TFR.T_OPT_HANDOVERBILL_DETAIL HBD on d.waybill_no = hbd.waybill_no
          inner join  TFR.T_OPT_HANDOVERBILL HB on hb.handover_no = hbd.handover_no
          inner join  TFR.T_OPT_VEHICLEASSEMBLE_DETAIL de on hb.handover_no = de.handover_no
          inner join  TFR.T_OPT_VEHICLEASSEMBLEBILL VAB on vab.id = de.vehicleassemblebill_id
        </if>
        <if test="noArrageBill != null and noArrageBill !='' and noArrageBill == 'Y'.toString()">
          inner join pkp.t_srv_actual_freight af
          on af.waybill_no = d.waybill_no 
        </if>
        <where>
            <include refid="select_Where_deliverHandover"/>
            <if test="noArrageBill != null and noArrageBill !='' and noArrageBill == 'Y'.toString()">
              <![CDATA[ and nvl(af.ARRANGE_GOODS_QTY, 0) = 0 ]]>
            </if>
        </where>
    </select>
    <!-- 派送交单-查询已交单信息-->
    <select id="selectDeliverHandoverByParams" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.DeliverHandoverbillQueryDto"
            resultType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.DeliverHandoverbillDto">
        select /*模块：派送交单-- 查询已交单信息*/ d.Waybill_No waybillNo,
        D.PRODUCT_CODE productCode,
        D.RECEIVE_METHOD receiveMethod,
        D.BILL_QTY billQty,
        D.GOODS_QTY_TOTAL goodsQtyTotal,
        D.GOODS_WEIGHT goodsWeight,
        D.GOODS_VOLUME goodsVolume,
        D.NOTICE_CONTENT noticeContent,
        D.PRE_DELIVER_DATE preDeliverDate,
        D.DELIVERY_TIME_INTERVAL deliveryTimeInterval,
        D.DELIVERY_TIME_START deliveryTimeStart,
        D.DELIVERY_TIME_OVER deliveryTimeOver,
        D.INVOICE_TYPE invoiceType,
        D.BILL_OPERATE_NAME billOperateName,
        D.BILL_TYPE billType,
        D.BILL_TIME billTime,
        D.INVOICE_DETAIL invoiceDetail,
		af.cash_time cashTime,
        af.arrange_goods_qty arrangeGoodsQty
        <if test="deliverbillStatus != null and deliverbillStatus != ''">
        , ed.status deliverBillStatus
        </if>
        from pkp.t_srv_deliver_handoverbill d
        inner join pkp.t_srv_actual_freight af
        on af.waybill_no = d.waybill_no
        <if test="deliverbillStatus != null and deliverbillStatus != ''">
            inner JOIN (SELECT *
            FROM (SELECT DE.WAYBILL_NO,db.status,
            DE.ID AS ID,
            ROW_NUMBER() OVER(PARTITION BY DE.WAYBILL_NO ORDER BY DB.OPERATE_TIME DESC) AS MAXID
            FROM PKP.T_SRV_DELIVERBILL_DETAIL DE
            INNER JOIN PKP.T_SRV_DELIVERBILL DB
            ON DB.ID = DE.T_SRV_DELIVERBILL_ID
            where  db.status = #{deliverbillStatus, jdbcType=VARCHAR})
            WHERE MAXID = 1) ED
            ON af.WAYBILL_NO = ED.WAYBILL_NO
        </if>
        <if test="handoverNo != null and handoverNo != ''" >
          inner join  TFR.T_OPT_HANDOVERBILL_DETAIL HBD on d.waybill_no = hbd.waybill_no
          inner join  TFR.T_OPT_HANDOVERBILL HB on hb.handover_no = hbd.handover_no
        </if>
        <if test="vehicleAssembleNo != null and vehicleAssembleNo !=''" >
          inner join  TFR.T_OPT_HANDOVERBILL_DETAIL HBD on d.waybill_no = hbd.waybill_no
          inner join  TFR.T_OPT_HANDOVERBILL HB on hb.handover_no = hbd.handover_no
          inner join  TFR.T_OPT_VEHICLEASSEMBLE_DETAIL de on hb.handover_no = de.handover_no
          inner join  TFR.T_OPT_VEHICLEASSEMBLEBILL VAB on vab.id = de.vehicleassemblebill_id
        </if>
        <where>
            <include refid="select_Where_deliverHandover"/>
            <if test="noArrageBill != null and noArrageBill !='' and noArrageBill == 'Y'.toString()">
              <![CDATA[ and nvl(af.ARRANGE_GOODS_QTY, 0) = 0 ]]>
            </if>
        </where>
    </select>
    <sql id="select_AutoDeliverHandover_where">
     <![CDATA[
    (AF.STATUS IS NULL OR AF.STATUS NOT IN ('OBSOLETE', 'ABORTED'))
   AND AF.ARRANGE_GOODS_QTY < WAYBILL.GOODS_QTY_TOTAL ]]>  
   AND (
       AF.NOTIFICATION_ORG_CODE = WAYBILL.LAST_LOAD_ORG_CODE OR
      AF.UP_DELIVER_DATE_ORG_CODE = WAYBILL.LAST_LOAD_ORG_CODE)
   AND NVL(AF.DELIVER_BILL_QTY, 0) = 0
   and waybill.PENDING_TYPE not in('PDA_PENDING','PC_PENDING')
   AND WS.STOCK_GOODS_QTY = WAYBILL.GOODS_QTY_TOTAL 
   AND HBB.ACTIVE = 'Y'
   AND ((HBB.AUTOMATION_MARK = 'Y' AND WS.POSITION_QTY > 0) OR
     NVL(HBB.AUTOMATION_MARK, ' ') != 'Y')
     	<if test="productCodes !=null and productCodes.length > 0">
			AND waybill.PRODUCT_CODE NOT IN
			<foreach collection="productCodes" index="index" item="productc" open="(" separator="," close=")">
				#{productc}
			</foreach>
		</if>
		<!-- 运单版本 -->
		<if test="active != null and active !=''">	
		<![CDATA[ and waybill.ACTIVE  = #{active, jdbcType=VARCHAR}]]>
		</if>
  		<if test="receiveMethodTmp != null and receiveMethodTmp != ''">	
		AND waybill.RECEIVE_METHOD like '%' || #{receiveMethodTmp, jdbcType=VARCHAR} || '%'
		</if>
		<if test="oneDayNowTime != null and oneDayNowTime !=''">	
		<![CDATA[ and HBB.ENDDATE_ONEDAY  > #{oneDayNowTime, jdbcType=VARCHAR}
				  AND HBB.STARTDATE_ONEDAY < #{oneDayNowTime, jdbcType=VARCHAR}
				  AND AF.DELIVER_DATE  >= TRUNC(SYSDATE)
				  AND AF.DELIVER_DATE < TRUNC(SYSDATE + 1)
		]]>
		</if>
		<if test="twoDayNowTime != null and twoDayNowTime !=''">	
		<![CDATA[ and HBB.Enddate_Twoday  > #{twoDayNowTime, jdbcType=VARCHAR}
				  AND HBB.Startdate_Twoday < #{twoDayNowTime, jdbcType=VARCHAR}
				  AND AF.DELIVER_DATE  >= TRUNC(SYSDATE+1)
				  AND AF.DELIVER_DATE < TRUNC(SYSDATE + 2)
		]]>
		</if>
		
  </sql>
    <select id="selectByAutoDeliverHandover" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.AutoPreDeliverHandoverbillDto" 
          resultType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.AutoPreDeliverHandoverbillDto"> 
	  SELECT WAYBILL.WAYBILL_NO waybillNo,  waybill.paid_method paidMethod
  from BSE.T_BAS_HANDOVER_BILL_BASICINFO hbb
 inner join pkp.t_srv_waybill waybill
    on hbb.department = waybill.last_load_org_code
 inner join tfr.t_opt_waybill_stock ws
    on waybill.waybill_no = ws.waybill_no
 inner join pkp.t_srv_actual_freight af
    on waybill.waybill_no = af.waybill_no
   AND NOT EXISTS (SELECT 1
          FROM PKP.T_SRV_WAYBILLRFC RFC
         WHERE RFC.WAYBILL_NO = WAYBILL.WAYBILL_NO
           AND RFC.STATUS IN ('PRE_AUDIT', 'PRE_ACCECPT'))
   AND NOT EXISTS (SELECT 1
          FROM PKP.T_SRV_EXCEPTION EX
         WHERE EX.WAYBILL_NO = WAYBILL.WAYBILL_NO
           AND EX.STATUS = 'HANDLING')
   AND NOT EXISTS (SELECT 1
          FROM PKP.T_SRV_WAYBILL_SIGN_RESULT WSR
         WHERE WSR.WAYBILL_NO = WAYBILL.WAYBILL_NO
           AND WSR.SIGN_STATUS = 'SIGN_STATUS_ALL'
           AND WSR.ACTIVE = 'Y')
   AND NOT EXISTS (SELECT 1
          FROM PKP.t_Srv_Auto_Deliver_Handover adh
         WHERE adh.WAYBILL_NO = WAYBILL.WAYBILL_NO
          )
     <where>
     <include refid="select_AutoDeliverHandover_where"/>
     and  WS.ORG_CODE = WAYBILL.LAST_LOAD_ORG_CODE 
	 </where>
   UNION 
 SELECT WAYBILL.WAYBILL_NO waybillNo,  waybill.paid_method paidMethod
 from BSE.T_BAS_HANDOVER_BILL_BASICINFO hbb
 inner join pkp.t_srv_waybill waybill
    on hbb.department = waybill.last_load_org_code
 inner join tfr.t_opt_waybill_stock ws
    on waybill.waybill_no = ws.waybill_no
 inner join pkp.t_srv_actual_freight af
    on waybill.waybill_no = af.waybill_no
 JOIN BSE.T_BAS_SALES_DEPARTMENT S ON S.CODE = waybill.LAST_LOAD_ORG_CODE
 join bse.t_bas_goods_area ga on GA.ORG_CODE = S.TRANSFER_CENTER
   AND NOT EXISTS (SELECT 1
          FROM PKP.T_SRV_WAYBILLRFC RFC
         WHERE RFC.WAYBILL_NO = WAYBILL.WAYBILL_NO
           AND RFC.STATUS IN ('PRE_AUDIT', 'PRE_ACCECPT'))
   AND NOT EXISTS (SELECT 1
          FROM PKP.T_SRV_EXCEPTION EX
         WHERE EX.WAYBILL_NO = WAYBILL.WAYBILL_NO
           AND EX.STATUS = 'HANDLING')
   AND NOT EXISTS (SELECT 1
          FROM PKP.T_SRV_WAYBILL_SIGN_RESULT WSR
         WHERE WSR.WAYBILL_NO = WAYBILL.WAYBILL_NO
           AND WSR.SIGN_STATUS = 'SIGN_STATUS_ALL'
           AND WSR.ACTIVE = 'Y')
    AND NOT EXISTS (SELECT 1
          FROM PKP.t_Srv_Auto_Deliver_Handover adh
         WHERE adh.WAYBILL_NO = WAYBILL.WAYBILL_NO
          )
	 <where>
     <include refid="select_AutoDeliverHandover_where"/>
     and s.station = 'Y'
     and s.active = 'Y'
   	 and GA.GOODS_AREA_TYPE = 'BSE_GOODSAREA_TYPE_STATION' 
     AND GA.ACTIVE = 'Y'
     and ws.org_code = s.transfer_center
     and ws.goods_area_code = ga.goods_area_code
	 </where> 
  </select>
  <select id="queryDeliverHandoverbillByWaybillNos" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.DeliverHandoverbillOtherDto"
            resultMap="BaseResultMap">
        select /*模块：派送交单-- 查询是否存在派送交单运单集合*/
        <include refid="Base_Column_List"/>  from PKP.T_SRV_DELIVER_HANDOVERBILL
        <where>
            <choose>
	            <when test="waybillNos !=null and waybillNos.size > 0">
				AND WAYBILL_NO  IN
					<foreach collection="waybillNos" index="index" item="waybillN" open="(" separator="," close=")">
						#{waybillN,jdbcType=VARCHAR}
					</foreach>
				</when>
                
                <otherwise>
                 and   WAYBILL_NO = ''
                </otherwise>
            </choose>
            <if test="active!=null and active!=''">
                and	active=#{active,jdbcType=VARCHAR}
            </if>
        </where>
    </select>
    <update id="updatePartByWaybillNos" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.DeliverHandoverbillOtherDto" >
        update PKP.T_SRV_DELIVER_HANDOVERBILL
        <set >
            <if test="modifyTime != null and modifyTime != '' " >
                MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="longitude != null" >
	        LONGITUDE = #{longitude,jdbcType=VARCHAR},
	      </if>
	      <if test="latitude != null" >
	        LATITUDE = #{latitude,jdbcType=VARCHAR},
	      </if>
	       <if test="smallzoneCode != null" >
	        SMALLZONE_CODE = #{smallzoneCode,jdbcType=VARCHAR},
	      </if>
	      <if test="smallzoneName != null" >
	        SMALLZONE_NAME = #{smallzoneName,jdbcType=VARCHAR},
	      </if>
        </set>
        <where>
            <choose>
                <when test="waybillNos !=null and waybillNos.size > 0">
				AND WAYBILL_NO  IN
					<foreach collection="waybillNos" index="index" item="waybillN" open="(" separator="," close=")">
						#{waybillN,jdbcType=VARCHAR}
					</foreach>
				</when>
                <otherwise>
                  and  WAYBILL_NO = ''
                </otherwise>
            </choose>
            <if test="active != null and active != '' ">
               and  active=#{active,jdbcType=VARCHAR}
            </if>
        </where>
    </update>
</mapper>