<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="foss.pickup.predeliver.notify" >
	<!-- 运单返回resultMap -->
	<resultMap id="notifyMap" type="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerDto">
		<result property="noticeResult" column="NOTIFICATION_RESULT" jdbcType = "VARCHAR" />
		<result property="waybillNo" column="WAYBILL_NO" jdbcType = "VARCHAR" />
		<result property="receiveCustomerContact" column="RECEIVE_CUSTOMER_CONTACT" jdbcType = "VARCHAR"/>
		<result property="receiveCustomerMobilephone" column="RECEIVE_CUSTOMER_MOBILEPHONE" jdbcType = "VARCHAR" />
		<result property="receiveCustomerPhone" column="RECEIVE_CUSTOMER_PHONE" jdbcType = "VARCHAR" />
		<result property="receiveCustomerName" column="RECEIVE_CUSTOMER_NAME" jdbcType = "VARCHAR" />
		<result property="receiveMethod" column="RECEIVE_METHOD" jdbcType = "VARCHAR" />
		<result property="receiveCustomerAddress" column="RECEIVE_CUSTOMER_ADDRESS" jdbcType = "VARCHAR" />
		<result property="goodsQtyTotal" column="GOODS_QTY_TOTAL" jdbcType = "DECIMAL" />
		<result property="inStockTime" column="IN_STOCK_TIME" jdbcType = "TIMESTAMP" />
		<result property="stockQty" column="STOCK_GOODS_QTY" jdbcType = "DECIMAL" />
		<result property="planArriveTime" column="PLAN_ARRIVE_TIME" jdbcType = "TIMESTAMP" />
		<result property="handoverGoodsQty" column="HANDOVER_GOODS_QTY" jdbcType = "DECIMAL" />
		<result property="handoverNo" column="HANDOVER_NO" jdbcType = "VARCHAR" />
		<result property="arriveGoodsQty" column="ARRIVE_GOODS_QTY" jdbcType = "DECIMAL" />
		<result property="arriveTime" column="ARRIVE_TIME" jdbcType = "TIMESTAMP" />
		<result property="storageDay" column="STORAGE_DAY" jdbcType = "DECIMAL" />
		<result property="deliveryCustomerName" column="DELIVERY_CUSTOMER_NAME"  jdbcType = "VARCHAR" />
		<result property="taskStatus" column="TASK_STATUS" jdbcType = "VARCHAR" />
        <result property="waybillStatus" column="STATUS" jdbcType = "VARCHAR" />
        <result property="secretPrepaid" column="SECRET_PREPAID" jdbcType = "VARCHAR" />
		<result property="productCode" column="PRODUCT_CODE"  jdbcType = "VARCHAR" />
		<result property="loadOrgCode" column="LOAD_ORG_CODE"  jdbcType = "VARCHAR" />
		<result property="goodsName" column="GOODS_NAME"  jdbcType = "VARCHAR" />
		<result property="goodsQtyTotal" column="GOODS_QTY_TOTAL"  jdbcType = "DECIMAL" />
		<result property="goodsWeightTotal" column="GOODS_WEIGHT_TOTAL"  jdbcType = "DECIMAL" />
		<result property="goodsVolumeTotal" column="GOODS_VOLUME_TOTAL"  jdbcType = "DECIMAL" />
		<result property="goodsSize" column="GOODS_SIZE"  jdbcType = "VARCHAR" typeHandler="org.apache.ibatis.type.ClobTypeHandler"/>
		<result property="insuranceAmount" column="INSURANCE_AMOUNT"  jdbcType = "DECIMAL" />
		<result property="insuranceFee" column="INSURANCE_FEE"  jdbcType = "DECIMAL" />
		<result property="codAmount" column="COD_AMOUNT"  jdbcType = "DECIMAL" />
		<result property="toPayAmount" column="TO_PAY_AMOUNT"  jdbcType = "DECIMAL" />
		<result property="deliveryGoodsFee" column="DELIVERY_GOODS_FEE"  jdbcType = "DECIMAL" />
		<result property="otherFee" column="OTHER_FEE"  jdbcType = "DECIMAL" />
		<result property="transportFee" column="TRANSPORT_FEE"  jdbcType = "DECIMAL" />
		<result property="paidMethod" column="PAID_METHOD"  jdbcType = "VARCHAR" />
		<result property="paidMethodVir"  column="PAID_METHOD"  jdbcType="VARCHAR"  />
		<result property="notificationTime" column="NOTIFICATION_TIME"  jdbcType = "TIMESTAMP" />
		<result property="storageCharge" column="STORAGE_CHARGE"  jdbcType = "DECIMAL" />
		<result property="notificationTimeSpace" column="NOTIFICATION_TIME_SPACE"  jdbcType = "DECIMAL" />
		<result property="receiveOrgCode" column="RECEIVE_ORG_CODE"  jdbcType = "VARCHAR" />
		<result property="goodsPackage" column="GOODS_PACKAGE"  jdbcType = "VARCHAR" />
		<result property="receiveCustomerCode" column="RECEIVE_CUSTOMER_CODE"  jdbcType = "VARCHAR" />
		<result property="overdueDay" column="OVERDUE_DAY"  jdbcType = "VARCHAR" />
		<result property="exceptionType" column="EXCEPTION_TYPE"  jdbcType = "VARCHAR" />
		<result property="exceptionNotes" column="EXCEPTION_NOTES"  jdbcType = "VARCHAR" />
		<result property="lastInStockTime" column="LAST_IN_STOCK_TIME"  jdbcType = "TIMESTAMP" />
		<result property="contactAddressId" column="CONTACT_ADDRESS_ID"  jdbcType = "VARCHAR" />
		<result property="createOrgCode" column="CREATE_ORG_CODE"  jdbcType = "VARCHAR" />
		<result property="deliveryCustomerContact" column="DELIVERY_CUSTOMER_CONTACT"  jdbcType = "VARCHAR" />
		<result property="lastLoadOrgCode" column="LAST_LOAD_ORG_CODE"  jdbcType = "VARCHAR" />
		<result property="billTime" column="BILL_TIME"  jdbcType = "TIMESTAMP" />
		<result property="preCustomerPickupTime" column="PRE_CUSTOMER_PICKUP_TIME"  jdbcType = "TIMESTAMP" />
		<result property="loadLineCode" column="LOAD_LINE_CODE"  jdbcType = "VARCHAR" />
		<result property="customerPickupOrgCode" column="CUSTOMER_PICKUP_ORG_CODE"  jdbcType = "VARCHAR" />
		<result column="RECEIVE_CUSTOMER_PROV_CODE" property="receiveCustomerProvCode" jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CITY_CODE" property="receiveCustomerCityCode" jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_DIST_CODE" property="receiveCustomerDistCode" jdbcType="VARCHAR" />
		<result column="IS_VOICESUCCESS" property="isVoiceSuccess" jdbcType="VARCHAR" />
		<result column="IS_SMSSUCCESS" property="isSmsSuccess" jdbcType="VARCHAR" />
		<result column="VEHICLEASSEMBLE_NO" property="vehicleAssembleNo" jdbcType="VARCHAR" />
		<result column="VEHICLE_NO" property="vehicleNo" jdbcType="VARCHAR" />
		<result column="PACKAGE_FEE" property="packageFee" jdbcType="DECIMAL" />
		<result column="TRANSPORTATION_REMARK" property="transportationRemark" jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_PHONE" property="deliveryCustomerPhone" jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_MOBILEPHONE" property="deliveryCustomerMobilephone" jdbcType="VARCHAR" />
		<result column="isPrinted" property="isPrinted" jdbcType="VARCHAR" />
		<result column="pending_type" property="pendingType" jdbcType="VARCHAR" />
		<result column="RFC_STATUS" property="rfcStatus" jdbcType="VARCHAR" />
		<result column="IS_NOTICE_SUCCESS" property="isNoticeSuccess" jdbcType="VARCHAR" />
		<result column="IS_EXPRESS" property="isExpress" jdbcType="CHAR" />
		<result column="RECEIVE_CUSTOMER_ADDRESS_NOTE" property="receiveCustomerAddressNote" jdbcType="VARCHAR" />
		<result column="isBatchStowageNOtHere" property="batchStowageNOtHere" jdbcType="VARCHAR"/>
		<result column="IS_EXHIBIT_CARGO" property="isExhibitCargo" jdbcType="VARCHAR"/>
		<result column="SPECIAL_VALUE_ADDED_SERVICE" property="specialValueAddedService" jdbcType="VARCHAR"/><!-- 特殊增值服務類 add by 243921 -->
		<result column="HANDOVERBILL_STATE" property="handoverBillState" jdbcType="INTEGER"/><!-- 新增货物状态 add by 329757 -->
		<result column="CUSTOMER_PICKUP_ORG_NAME" property="destOrgName" jdbcType="VARCHAR"/><!-- 新增到达部门名称 add by 329757 -->
		<result column="CUSTOMER_PICKUP_ORG_CODE" property="destOrgCode" jdbcType="VARCHAR"/><!-- 新增到达部门CODE add by 329757 -->
		<result column="NOTIFICATION_ORG_CODE" property="notificationOrgCode" jdbcType="VARCHAR"/><!-- 新增通知部门code add by 329757 -->
		<result column="PICKUP_FEE" property="pickupFee" jdbcType="INTEGER"/><!-- 新增接货费  add by 329757 -->
		<result property="actualArriveTime" column="ACTUAL_ARRIVE_TIME" jdbcType="TIMESTAMP" /><!--add by 329757 实际到达时间 -->
		<result property="receiveOrgName" column="RECEIVE_ORG_NAME" jdbcType = "VARCHAR" /><!--add by 329757 出发部门 -->
	</resultMap>
	<!-- 列表显示字段 通用 -->
	<sql id="Base_Column_List">
		DECODE(AF.NOTIFICATION_ORG_CODE,
        NULL,
        AF.NOTIFICATION_RESULT,
        #{lastLoadOrgCode,jdbcType=VARCHAR},
        AF.NOTIFICATION_RESULT,
        'NONE_NOTICE') AS NOTIFICATION_RESULT, <!-- 运单关联表.通知状态 -->
		AF.NOTIFICATION_TIME AS NOTIFICATION_TIME, <!-- 运单关联表.通知时间 -->
        AF.RECEIVE_CUSTOMER_ADDRESS_NOTE AS RECEIVE_CUSTOMER_ADDRESS_NOTE,
        AF.IS_EXHIBIT_CARGO as IS_EXHIBIT_CARGO,<!-- 是否会展货 -->
		WB.WAYBILL_NO AS WAYBILL_NO, <!-- 运单表.运单号 -->
		WB.PRODUCT_CODE AS PRODUCT_CODE,<!-- 运单表.运输性质-->
		WB.RECEIVE_CUSTOMER_CONTACT AS RECEIVE_CUSTOMER_CONTACT, <!-- 运单表.联系人 -->
		WB.RECEIVE_CUSTOMER_MOBILEPHONE AS RECEIVE_CUSTOMER_MOBILEPHONE,<!-- 运单表.联系电话 -->
		WB.RECEIVE_CUSTOMER_PHONE AS RECEIVE_CUSTOMER_PHONE,<!-- 运单表.联系手机 -->
		WB.RECEIVE_CUSTOMER_CODE AS RECEIVE_CUSTOMER_CODE,<!-- 运单表.收货客户编码 -->
		WB.RECEIVE_CUSTOMER_NAME AS RECEIVE_CUSTOMER_NAME,<!-- 运单表.收货客户名称 -->
		WB.RECEIVE_METHOD AS RECEIVE_METHOD,<!-- 运单表.派送方式 -->
		WB.RECEIVE_CUSTOMER_ADDRESS AS RECEIVE_CUSTOMER_ADDRESS,<!-- 运单表.收货地址 -->
		WB.GOODS_QTY_TOTAL AS GOODS_QTY_TOTAL,<!-- 运单表.开单件数 -->
		AF.STATUS AS STATUS,<!-- 运单关联表.运单状态 -->
		AF.RECEIVE_CUSTOMER_VILLAGE_CODE as receiveCustomerVillageCode ,<!-- 收货乡镇(街道) -->
		AF.ARRIVE_GOODS_QTY AS ARRIVE_GOODS_QTY,<!-- 运单关联表.到达件数-->
		TRUNC(SYSDATE - (AF.NOTIFICATION_TIME + 0)) AS NOTIFICATION_TIME_SPACE, <!-- 最后通知日期与当前日期的间隔天数-->
		WB.CONTACT_ADDRESS_ID AS CONTACT_ADDRESS_ID, <!-- 送货人地址ID-->
		WB.PAID_METHOD AS PAID_METHOD,<!-- 运单表.开单付款方式-->
		WB.PAID_METHOD AS PAIDMETHODVIR, <!-- 运单表.开单付款方式虚拟不显示-239284  -->
		WB.CUSTOMER_PICKUP_ORG_CODE AS customerPickupOrgCode, <!-- 运单表.提货网点 -->
		WB.RECEIVE_CUSTOMER_PROV_CODE AS RECEIVE_CUSTOMER_PROV_CODE, <!-- 运单表.省CODE -->
		WB.RECEIVE_CUSTOMER_CITY_CODE AS RECEIVE_CUSTOMER_CITY_CODE, <!-- 运单表.市CODE -->
		WB.RECEIVE_CUSTOMER_DIST_CODE AS RECEIVE_CUSTOMER_DIST_CODE, <!-- 运单表.区CODE -->
		WB.PACKAGE_FEE/100 PACKAGE_FEE,<!-- 包装费 -->
		WB.TRANSPORTATION_REMARK TRANSPORTATION_REMARK, <!-- 储运事项 -->
		WB.DELIVERY_CUSTOMER_PHONE DELIVERY_CUSTOMER_PHONE,<!-- 发货客户电话 -->
	    WB.DELIVERY_CUSTOMER_MOBILEPHONE DELIVERY_CUSTOMER_MOBILEPHONE,<!-- 发货客户手机 -->
	    WB.RECEIVE_BIG_CUSTOMER as receiveBigCustomer, <!-- 收货人是否大客户标志 -->
		WB.IS_EXPRESS AS IS_EXPRESS,<!-- 是否快递 -->
		WB.GOODS_VOLUME_TOTAL AS GOODS_VOLUME_TOTAL,<!-- 运单表.货物总体积-->
		WB.GOODS_WEIGHT_TOTAL AS GOODS_WEIGHT_TOTAL,<!-- 运单表.货物总重量-->
		WB.pending_type,
		WB.TO_PAY_AMOUNT / 100 AS TO_PAY_AMOUNT,<!-- 运单表.到付金额-->
	</sql>
	
	<!-- 列表显示字段 按库存查询 -->
	<sql id="Stock_Column_List">
		WS.IN_STOCK_TIME AS IN_STOCK_TIME, <!-- 库存表.入库时间-->
		WS.STOCK_GOODS_QTY AS STOCK_GOODS_QTY, <!-- 库存表.库存件数 -->
		WS.position_Qty AS positionQty, <!-- 库存表.库位件数 -->
		AF.STORAGE_DAY AS STORAGE_DAY<!-- 运单关联表.在库天数-->
	</sql>
	
	<!-- 列表显示字段 按交接单、车次、预计交货时间查询 -->
	<sql id="Other_Column_List">
		TTD.ACTUAL_ARRIVE_TIME AS ACTUAL_ARRIVE_TIME,<!-- 运单关联表.到达时间-->
		TTD.PLAN_ARRIVE_TIME AS PLAN_ARRIVE_TIME, <!-- 任务车辆明细.预计到达时间-->
		HBD.HANDOVER_GOODS_QTY AS HANDOVER_GOODS_QTY, <!-- 交接明细.已配件数 -->
		HB.HANDOVER_NO AS HANDOVER_NO,<!-- 交接.交接单号 -->
		TTD.STATUS AS TASK_STATUS,<!-- 任务车辆明细.状态-->
		TTD.VEHICLE_NO AS VEHICLE_NO<!-- 任务车辆明细.车牌号-->
	</sql>
	
	<!-- 列表 WayBillOtherForBSEDto  -->
	<sql id="Other_Column_For_Bse_List">
		WB.BILL_TIME AS BILL_TIME,<!-- 运单表.开单时间-->
		WB.PRE_CUSTOMER_PICKUP_TIME AS PRE_CUSTOMER_PICKUP_TIME,<!-- 运单表.预计到达时间-->
		WB.LOAD_LINE_CODE AS LOAD_LINE_CODE,<!-- 运单表.干线走货路径-->
		WB.CUSTOMER_PICKUP_ORG_CODE AS CUSTOMER_PICKUP_ORG_CODE<!-- 运单表.提货网点-->
	</sql>
	
	<!-- 运单明细信息 -->
	<sql id="detail_Column_List">
		WB.DELIVERY_CUSTOMER_NAME AS DELIVERY_CUSTOMER_NAME,<!-- 运单表.发货客户联系人-->
		WB.DELIVERY_CUSTOMER_CONTACT AS DELIVERY_CUSTOMER_CONTACT,<!-- 运单表.发货客户联系人-->
		WB.PRODUCT_CODE AS PRODUCT_CODE,<!-- 运单表.运输性质-->
		WB.LOAD_ORG_CODE AS LOAD_ORG_CODE,<!-- 运单表.配载部门-->
		WB.GOODS_NAME AS GOODS_NAME,<!-- 运单表.货物名称-->
		WB.GOODS_QTY_TOTAL AS GOODS_QTY_TOTAL,<!-- 运单表.货物总件数-->
		WB.GOODS_WEIGHT_TOTAL AS GOODS_WEIGHT_TOTAL,<!-- 运单表.货物总重量-->
		WB.GOODS_VOLUME_TOTAL AS GOODS_VOLUME_TOTAL,<!-- 运单表.货物总体积-->
		WB.GOODS_SIZE AS GOODS_SIZE,<!-- 运单表.货物尺寸-->
		WB.INSURANCE_AMOUNT / 100 AS INSURANCE_AMOUNT,<!-- 运单表.保价声明价值-->
		WB.INSURANCE_FEE / 100 AS INSURANCE_FEE,<!-- 运单表.保价费-->
		WB.COD_AMOUNT / 100 AS COD_AMOUNT,<!-- 运单表.代收货款-->
		WB.TO_PAY_AMOUNT / 100 AS TO_PAY_AMOUNT,<!-- 运单表.到付金额-->
		WB.DELIVERY_GOODS_FEE  / 100AS DELIVERY_GOODS_FEE,<!-- 运单表.送货费-->
		WB.OTHER_FEE / 100 AS OTHER_FEE,<!-- 运单表.其他费用-->
		WB.TRANSPORT_FEE / 100 AS TRANSPORT_FEE,<!-- 运单表.公布价运费-->
		WB.PAID_METHOD AS PAID_METHOD,<!-- 运单表.开单付款方式-->
		WB.SECRET_PREPAID AS SECRET_PREPAID,<!-- 运单表.预付费保密-->
		AF.NOTIFICATION_TIME AS NOTIFICATION_TIME,<!-- 运单表.最后通知时间-->
		AF.STORAGE_CHARGE / 100 AS STORAGE_CHARGE,<!-- 运单表.仓储费-->
		AF.STORAGE_DAY AS STORAGE_DAY,<!-- 运单关联表.在库天数-->
		WB.RECEIVE_ORG_CODE AS RECEIVE_ORG_CODE,<!-- 运单表.收货部门-->
		WB.GOODS_PACKAGE AS GOODS_PACKAGE,<!-- 运单表.包装-->
		WB.RECEIVE_CUSTOMER_CODE AS RECEIVE_CUSTOMER_CODE,<!-- 运单表.收货客户编码-->
		WB.CREATE_ORG_CODE AS CREATE_ORG_CODE,<!-- 运单表.开单组织-->
		AF.SPECIAL_VALUE_ADDED_SERVICE,<!-- 实际承运表 特殊增值服务类型-->
	</sql>

	<sql id="select_default_Where">
		<!--1 到达部门为当前登录用户所在部门(提货网点),变更为当前部门如果有外场，进行外场比对，如果没有，进行营业部比对
			2 派送方式为送货并且通知成功且约定了送货日期的在送货日期当日可以查询
			3 运单付款方式为非临时欠款等收款放货
			4  正常的运单以及申请了运单变更，但状态为“已受理”的运单
			5 货物（运单或货件）状态为非异常 不是通知异常，不等于未处理-->
		AND (WB.LAST_LOAD_ORG_CODE = #{lastLoadOrgCode,jdbcType=VARCHAR} or WB.customer_pickup_org_code = #{lastLoadOrgCode,jdbcType=VARCHAR}) 
		<if test="isQueryDeliveyDate == null">
		<![CDATA[ AND AF.DELIVER_DATE <= #{deliverDateDef,jdbcType=TIMESTAMP} ]]>
		</if>
		<if test=" paidMethod !=null and paidMethod != '' ">
			AND WB.PAID_METHOD != #{paidMethod,jdbcType=VARCHAR}
		</if>
		AND 
		NOT EXISTS (SELECT 1 FROM PKP.T_SRV_WAYBILLRFC WBR WHERE WBR.WAYBILL_NO = WB.WAYBILL_NO AND WBR.STATUS not in
		<foreach collection="wbrStatus" index="index" item="wbr" open="(" separator="," close=")">
			 #{wbr,jdbcType=VARCHAR}
		</foreach>
		)
		AND
		NOT EXISTS(SELECT 1 FROM PKP.T_SRV_EXCEPTION EP WHERE EP.WAYBILL_NO = WB.WAYBILL_NO AND 
			EP.STATUS IN
			<foreach collection="exceptionStatus" index="index" item="exceptionS" open="(" separator="," close=")">
				#{exceptionS}
			</foreach>
			AND
			(CASE 
				WHEN EP.EXCEPTION_TYPE = #{exceptionType,jdbcType=VARCHAR} AND EP.EXCEPTION_LINK = #{exceptionLink1,jdbcType=VARCHAR} THEN 1
				WHEN EP.EXCEPTION_TYPE = #{exceptionType,jdbcType=VARCHAR} AND EP.EXCEPTION_LINK = #{exceptionLink2,jdbcType=VARCHAR} THEN 1
				ELSE 0
				END) = 0)
	</sql>
	<sql id="select_productCodes_Where">
		<!-- 运输性质 不等于 空运、偏线、中转下线 -->
		<if test="productCodes !=null and productCodes.length > 0">
			AND WB.PRODUCT_CODE NOT IN
			<foreach collection="productCodes" index="index" item="productCodeTmp" open="(" separator="," close=")">
				#{productCodeTmp}
			</foreach>
		</if>
	</sql>
			
	<sql id="select_status_Where">
		<!-- 页面录入派送方式， 运输性质，通知情况 
		<if test="receiveMethod != null and receiveMethod != ''">	
			AND WB.RECEIVE_METHOD like '%' || #{receiveMethod, jdbcType=VARCHAR} || '%'
		</if>
		<if test="productCode != null and productCode != ''">	
			AND WB.PRODUCT_CODE = #{productCode, jdbcType=VARCHAR}
		</if> -->
		<if test="noticeResult != null and noticeResult != ''">	
			AND (decode(af.notification_org_code, #{lastLoadOrgCode,jdbcType=VARCHAR} ,AF.NOTIFICATION_RESULT, 'NONE_NOTICE')) = #{noticeResult, jdbcType=VARCHAR}
		</if>
	</sql>
	<!-- add by 329757 页面传入的通知状态 -->
	<sql id="select_status_Where2">
		<if test="noticeResult != null and noticeResult != '' and noticeResult !='全部'">	
			<choose>
				<when test="noticeResult=='通知成功'">
					AND AF.NOTIFICATION_RESULT ='SUCCESS'
				</when>
				<when test="noticeResult=='通知失败'">
					AND AF.NOTIFICATION_RESULT ='FAILURE'
				</when>
				<when test="noticeResult=='未通知'">
					AND AF.NOTIFICATION_RESULT ='NONE_NOTICE'
				</when>
			</choose>
		</if>
	</sql>
	<sql id="select_planArriveTime_Where">
		<!-- 预计到达时间 -->
		<if test="planArriveTimeFrom != null and planArriveTimeFrom !=''">	
		<![CDATA[ and TTD.PLAN_ARRIVE_TIME  >= to_date( ]]> #{planArriveTimeFrom, jdbcType=TIMESTAMP} <![CDATA[,'yyyy-MM-dd hh24:mi:ss')]]>
		</if>
		<if test="planArriveTimeTo !=null and planArriveTimeTo != ''">	
		<![CDATA[ and TTD.PLAN_ARRIVE_TIME  <= to_date( ]]> #{planArriveTimeTo, jdbcType=TIMESTAMP} <![CDATA[,'yyyy-MM-dd hh24:mi:ss')]]>
		</if>
	</sql>
	<sql id="select_preArriveTime_Where">
		<!--add by 329757 计划到达通知使用的 承诺到到达时间 -->
		<if test="planArriveTimeFrom != null and planArriveTimeFrom !=''">	
		<![CDATA[ and WB.pre_arrive_time  >= to_date( ]]> #{planArriveTimeFrom, jdbcType=TIMESTAMP} <![CDATA[,'yyyy-MM-dd hh24:mi:ss')]]>
		</if>
		<if test="planArriveTimeTo !=null and planArriveTimeTo != ''">	
		<![CDATA[ and WB.pre_arrive_time  <= to_date( ]]> #{planArriveTimeTo, jdbcType=TIMESTAMP} <![CDATA[,'yyyy-MM-dd hh24:mi:ss')]]>
		</if>
	</sql>
	
	<!-- 条件中派送(提货)方式-239284 -->
   <sql id="select_receiveMethodCon_Where">
		<if test="receiveMethodCons != null and receiveMethodCons.length >0" >
			and WB.RECEIVE_METHOD  in
			<foreach collection="receiveMethodCons" open="(" close=")" separator="," item="rMethodCode">
				#{rMethodCode,jdbcType=VARCHAR}
			</foreach>
		</if>
		<if test="receiveMethod != null and receiveMethod != ''" >
			<choose>
				<!-- 派送方式为‘家装送装',可查询符合条件的所有在当前部门库存的带有“特殊增值服务”标识的运单     add by 243921 -->
				<when test="receiveMethod == 'EQUIP'">
					AND AF.SPECIAL_VALUE_ADDED_SERVICE like '%' || #{receiveMethod, jdbcType=VARCHAR} || '%'
				</when>
				<otherwise>
					AND WB.RECEIVE_METHOD like '%' || #{receiveMethod, jdbcType=VARCHAR} || '%'
				</otherwise>
			</choose>
		</if>
   </sql>
   
   <!-- 条件中车次号-239284 -->
   <sql id="select_vehicleAssembleNo_Where">
		<if test="vehicleAssembleNos != null and vehicleAssembleNos.length >0">
			and VAB.VEHICLEASSEMBLE_NO  in
			<foreach collection="vehicleAssembleNos" open="(" close=")" separator=","
				item="vehicleAssembleNo">
	       	      #{vehicleAssembleNo, jdbcType=VARCHAR}
			</foreach>
       </if>
   </sql>
  
  <!-- 条件中运输性质-239284 -->
   <sql id="select_productCodeCon_Where">
		<if test="productCodeCons != null and productCodeCons.length >0">
			and WB.PRODUCT_CODE  in
			<foreach collection="productCodeCons" open="(" close=")" separator=","
				item="productCode">
	       	      #{productCode, jdbcType=VARCHAR}
			</foreach>
       </if>
   </sql>

   <!-- 条件中的省、市、行政区域-239284 -->
   <sql id="select_deliverDistCode_Where">
   		<if test="deliverProv !=null and deliverProv !='' ">
   			and WB.RECEIVE_CUSTOMER_PROV_CODE = #{deliverProv, jdbcType=VARCHAR }
   		</if>
   		<if test="deliverCity != null and deliverCity !='' ">
   			and WB.RECEIVE_CUSTOMER_CITY_CODE = #{deliverCity, jdbcType=VARCHAR }
   		</if>
		<if test="deliverDistCodes != null and deliverDistCodes.length >0">
			and WB.RECEIVE_CUSTOMER_DIST_CODE  in
			<foreach collection="deliverDistCodes" open="(" close=")" separator=","
				item="deliverDistCode">
	       	      #{deliverDistCode, jdbcType=VARCHAR}
			</foreach>
     </if>
   </sql>
   
	<sql id="select_arriveTime_Where">
		<!-- 车辆实际到达时间 -->
		<if test="arriveTimeFrom != null and arriveTimeFrom !=''">	
		<![CDATA[ and TTD.ACTUAL_ARRIVE_TIME  >= to_date( ]]> #{arriveTimeFrom, jdbcType=TIMESTAMP} <![CDATA[,'yyyy-MM-dd hh24:mi:ss')]]>
		</if>
		<if test="arriveTimeTo !=null and arriveTimeTo != ''">	
		<![CDATA[ and TTD.ACTUAL_ARRIVE_TIME  <= to_date( ]]> #{arriveTimeTo, jdbcType=TIMESTAMP} <![CDATA[,'yyyy-MM-dd hh24:mi:ss')]]>
		</if>
	</sql>
	<sql id="select_arriveTime_Where2">
		<!-- add by 329757 计划到达时间页面的实际到达时间 -->
		<if test="planArriveTimeFrom != null and planArriveTimeFrom !=''">	
		<![CDATA[ and TTD.ACTUAL_ARRIVE_TIME  >= to_date( ]]> #{planArriveTimeFrom, jdbcType=TIMESTAMP} <![CDATA[,'yyyy-MM-dd hh24:mi:ss')]]>
		</if>
		<if test="planArriveTimeTo !=null and planArriveTimeTo != ''">	
		<![CDATA[ and TTD.ACTUAL_ARRIVE_TIME  <= to_date( ]]> #{planArriveTimeTo, jdbcType=TIMESTAMP} <![CDATA[,'yyyy-MM-dd hh24:mi:ss')]]>
		</if>
	</sql>
	<sql id="select_noticeTime_Where">
		<!-- 通知时间 -329757-->
		<if test="planArriveTimeFrom != null and planArriveTimeFrom !=''">	
		<![CDATA[ and AF.NOTIFICATION_TIME  >= to_date( ]]> #{planArriveTimeFrom, jdbcType=TIMESTAMP} <![CDATA[,'yyyy-MM-dd hh24:mi:ss')]]>
		</if>
		<if test="planArriveTimeTo !=null and planArriveTimeTo != ''">	
		<![CDATA[ and AF.NOTIFICATION_TIME  <= to_date( ]]> #{planArriveTimeTo, jdbcType=TIMESTAMP} <![CDATA[,'yyyy-MM-dd hh24:mi:ss')]]>
		</if>
	</sql>
	<sql id="select_inStockTime_Where">
		<!-- 入库时间 -->
		<if test="inStockTimeFrom != null and inStockTimeFrom !=''">	
		<![CDATA[ and WS.IN_STOCK_TIME  >= to_date( ]]> #{inStockTimeFrom, jdbcType=TIMESTAMP} <![CDATA[,'yyyy-MM-dd hh24:mi:ss')]]>
		</if>
		<if test="inStockTimeTo !=null and inStockTimeTo != ''">	
		<![CDATA[ and WS.IN_STOCK_TIME  <= to_date( ]]> #{inStockTimeTo, jdbcType=TIMESTAMP} <![CDATA[,'yyyy-MM-dd hh24:mi:ss')]]>
		</if>
	</sql>
	
	<sql id="select_truck_task_Where">
		<!-- 车辆状态 -->
		<if test="taskStatus != null and taskStatus !=''">	
		<![CDATA[ and TTD.STATUS  != #{taskStatus, jdbcType=VARCHAR}]]>
		</if>
		<!-- 车辆到达部门 传入外场或当前部门-->
		<if test="endStockOrgCode != null and endStockOrgCode !=''">	
		<![CDATA[ and TTD.DEST_ORG_CODE  = #{endStockOrgCode, jdbcType=VARCHAR}]]>
		</if>
	</sql>
	
	<sql id="select_waybill_active_Where">
		<!-- 运单版本 -->
		<if test="active != null and active !=''">	
		<![CDATA[ and WB.ACTIVE  = #{active, jdbcType=VARCHAR}]]>
		</if>
	</sql>
	
	<sql id="select_not_exists_sign_Where">
		<![CDATA[
		AND NOT EXISTS (SELECT 1
          FROM PKP.t_Srv_Waybill_Sign_Result WSR
         WHERE WSR.WAYBILL_NO = WB.WAYBILL_NO
           AND WSR.SIGN_STATUS = 'SIGN_STATUS_ALL' 
           AND WSR.ACTIVE = 'Y')
        ]]>
	</sql>
	
	<!--库存部门、库区关联 -->
	<sql id="select_stock_area_Where">
	    <!-- 最后库存code=库存的部门编码 -->
		<if test="endStockOrgCode != null and endStockOrgCode !=''">	
			<![CDATA[ and WS.ORG_CODE  = #{endStockOrgCode, jdbcType=VARCHAR}]]>
		</if>
		<!-- 库区-->
		<!--add by chenjunying DMANA-9499 判断保留之前的条件，新加多库区查询条件-->
		<if test="goodsAreaCode != null and goodsAreaCode !=''">	
			<![CDATA[ AND WS.GOODS_AREA_CODE = #{goodsAreaCode, jdbcType=VARCHAR}]]>
		</if>
		<if test="goodsAreaCodes!= null and goodsAreaCodes.size>0">
		and ws.GOODS_AREA_CODE  in
		<foreach collection="goodsAreaCodes" open="(" close=")" separator=","
			item="mgoodsAreaCode">
       	      #{mgoodsAreaCode,jdbcType=VARCHAR}
		</foreach>
    </if>
		<!-- 库位-->
		<if test="position != null and position !=''">	
			<![CDATA[ AND WS.position_Qty >0]]>
		</if>
	</sql>
	
	<!-- 在库天数 -->
	<sql id="select_storageDay_Where">
		
	   <if test=" storageDayStatus == 1">
			<![CDATA[ AND AF.STORAGE_DAY > #{storageDay,jdbcType=NUMERIC}]]>
	   </if>
	   <if test=" storageDayStatus == 0 and storageDay != null and storageDay != ''">
			<![CDATA[ AND AF.STORAGE_DAY = #{storageDay,jdbcType=NUMERIC}]]>
	   </if>
	</sql>
	
	<!-- 是否语音、短信通知成功过 -->
	<sql id="Notification_Column_List">
		,DECODE((SELECT VOICE.NOTICE_RESULT
          FROM PKP.T_SRV_NOTIFICATION VOICE
         WHERE VOICE.WAYBILL_NO = WB.WAYBILL_NO
           AND VOICE.NOTICE_TYPE = 'VOICE_NOTICE'
           AND TRUNC(VOICE.OPERATE_TIME) = TRUNC(SYSDATE)
           AND VOICE.NOTICE_RESULT = 'SUCCESS'
           AND VOICE.OPERATE_ORG_CODE = #{lastLoadOrgCode,jdbcType=VARCHAR}
           AND rownum = 1),
        NULL,
        'N',
        'SUCCESS',
        'Y',
        'N') IS_VOICESUCCESS,
 		DECODE((SELECT SMS.NOTICE_RESULT
          FROM PKP.T_SRV_NOTIFICATION SMS
         WHERE SMS.WAYBILL_NO = WB.WAYBILL_NO
           AND SMS.NOTICE_TYPE = 'SMS_NOTICE'
           AND TRUNC(SMS.OPERATE_TIME) = TRUNC(SYSDATE)
           AND SMS.NOTICE_RESULT = 'SUCCESS'
           AND SMS.OPERATE_ORG_CODE = #{lastLoadOrgCode,jdbcType=VARCHAR}
           AND rownum = 1), NULL, 'N', 'SUCCESS', 'Y', 'N') IS_SMSSUCCESS 
	</sql>
	<sql id = "getTotalCountforParams">
		count(wb.waybill_no) totalVotes ,<!--总票数-->
   		sum(wb.goods_qty_total) goodsQtyTotals,<!--总件数-->
    	sum(wb.goods_weight_total/1000) goodsWeightTotals,<!--总重量 取的是吨-->
    	sum(wb.goods_volume_total) goodsvolumeTotals<!--总体积-->
	</sql>
	<!-- 运单通知列表查询-按库存方式查询-->
	<select id="selectByStockInfo" resultMap="notifyMap" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" >
	    select /*模块：接送货-通知客户管理- 运单通知列表查询-按库存方式查询 */
	    <![CDATA[
	    	case 
	    		when (nvl(WS.STOCK_GOODS_QTY, 0) + nvl(WSR.SIGN_GOODS_QTY, 0)) < nvl(WB.GOODS_QTY_TOTAL, 0) then 'Y'
	    		when (nvl(WS.STOCK_GOODS_QTY, 0) + nvl(WSR.SIGN_GOODS_QTY, 0)) = nvl(WB.GOODS_QTY_TOTAL, 0) then 'N'
	    		else 'N' 
	    	end as isBatchStowageNOtHere,
	    ]]>		
			<include refid="Base_Column_List" />
			<include refid="Stock_Column_List" />
			<include refid="Notification_Column_List"/>
			<!-- 运单表，运单附属表，库存表 -->
	    FROM PKP.T_SRV_WAYBILL WB 
	    	INNER JOIN 
	    		PKP.T_SRV_ACTUAL_FREIGHT AF
			ON 
				WB.WAYBILL_NO= AF.WAYBILL_NO 
			<if test="arrayWaybillNos !=null and arrayWaybillNos.length > 0">
				LEFT JOIN 
			</if>
			<if test="arrayWaybillNos ==null or arrayWaybillNos.length == 0">
				INNER JOIN 
			</if>	
			 	TFR.T_OPT_WAYBILL_STOCK WS 
			ON
			    WB.WAYBILL_NO = WS.WAYBILL_NO
			    <if test="arrayWaybillNos !=null and arrayWaybillNos.length > 0">
				    <include refid="select_stock_area_Where"/>
			    </if> 
			left join PKP.t_Srv_Waybill_Sign_Result WSR on WSR.WAYBILL_NO = WB.WAYBILL_NO
		    AND WSR.ACTIVE = 'Y' AND WSR.SIGN_STATUS != 'SIGN_STATUS_ALL' 
	    <where>
	    	<!-- AF.END_STOCK_ORG_CODE = WS.ORG_CODE                最后库存code=库存的部门编码 -->
			<if test="arrayWaybillNos !=null and arrayWaybillNos.length > 0">
    			WB.WAYBILL_NO IN
				<foreach collection="arrayWaybillNos" index="index" item="waybillNo" open="(" separator="," close=")">
					#{waybillNo}
				</foreach>
				<![CDATA[ and (ws.STOCK_GOODS_QTY > 0 or (STOCK_GOODS_QTY is null and AF.NOTIFICATION_RESULT != 'NONE_NOTICE'))]]>
    		</if>
    		<if test="arrayWaybillNos == null or arrayWaybillNos.length == 0">
    			<include refid="select_stock_area_Where"/>
    		</if>
			<include refid="select_storageDay_Where"/>
			<include refid="select_inStockTime_Where"/>
			<include refid="select_status_Where"/>
			<include refid="select_default_Where"/>
			<include refid='select_productCodes_Where'/>
			<include refid='select_waybill_active_Where'/>
			<if test="batchStowage != null and batchStowage != '' ">
				<![CDATA[ and (nvl(WS.STOCK_GOODS_QTY, 0) + nvl(WSR.SIGN_GOODS_QTY, 0)) < nvl(WB.GOODS_QTY_TOTAL, 0)]]>  		     			 
    		</if>
			<include refid="select_receiveMethodCon_Where" />
			<include refid="select_productCodeCon_Where" />
			<include refid="select_deliverDistCode_Where" />
		</where>
		order by WB.RECEIVE_CUSTOMER_CONTACT,WB.GOODS_WEIGHT_TOTAL DESC, WB.GOODS_VOLUME_TOTAL DESC, WB.TO_PAY_AMOUNT DESC
	</select>
	<!-- 运单通知列表Count查询-按库存方式查询-->
	<select id="getTotalCountForStock" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" resultType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto">
		select /*模块：接送货-通知客户管理- 运单通知列表Count查询-按库存方式查询 */
		<include refid="getTotalCountforParams"/>
        FROM PKP.T_SRV_WAYBILL WB 
	    	INNER JOIN 
	    		PKP.T_SRV_ACTUAL_FREIGHT AF
			ON 
				WB.WAYBILL_NO= AF.WAYBILL_NO 
			<if test="arrayWaybillNos !=null and arrayWaybillNos.length > 0">
				LEFT JOIN 
			</if>
			<if test="arrayWaybillNos ==null or arrayWaybillNos.length == 0">
				INNER JOIN 
			</if>	
			 	TFR.T_OPT_WAYBILL_STOCK WS 
			ON
			    WB.WAYBILL_NO = WS.WAYBILL_NO
			    <if test="arrayWaybillNos !=null and arrayWaybillNos.length > 0">
				    <include refid="select_stock_area_Where"/>
			    </if>
			left join PKP.t_Srv_Waybill_Sign_Result WSR on WSR.WAYBILL_NO = WB.WAYBILL_NO
		    AND WSR.ACTIVE = 'Y' AND WSR.SIGN_STATUS != 'SIGN_STATUS_ALL' 
	    <where>
	    	<!-- AF.END_STOCK_ORG_CODE = WS.ORG_CODE                运单最后库存所在地=库存的部门编码 -->
			<if test="arrayWaybillNos !=null and arrayWaybillNos.length > 0">
    			WB.WAYBILL_NO IN
				<foreach collection="arrayWaybillNos" index="index" item="waybillNo" open="(" separator="," close=")">
					#{waybillNo}
				</foreach>
				<![CDATA[ and (ws.STOCK_GOODS_QTY > 0 or (STOCK_GOODS_QTY is null and AF.NOTIFICATION_RESULT != 'NONE_NOTICE'))]]>
    		</if>    		
       		<if test="arrayWaybillNos == null or arrayWaybillNos.length == 0">
    			<include refid="select_stock_area_Where"/>
    		</if>
			<include refid="select_storageDay_Where"/>
			<include refid="select_inStockTime_Where"/>
			<include refid="select_status_Where"/>
			<include refid="select_default_Where"/>
			<include refid='select_productCodes_Where'/>
			<include refid='select_waybill_active_Where'/>
			<if test="batchStowage != null and batchStowage != '' ">
				<![CDATA[ and (nvl(WS.STOCK_GOODS_QTY, 0) + nvl(WSR.SIGN_GOODS_QTY, 0)) < nvl(WB.GOODS_QTY_TOTAL, 0)]]>  		     			 
    		</if>
			<include refid="select_receiveMethodCon_Where" />
			<include refid="select_productCodeCon_Where" />
			<include refid="select_deliverDistCode_Where" />
		</where>
	</select> 
	<!-- 运单通知列表查询-交接单号-->
	<select id="selectByHandoverNo" resultMap="notifyMap" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" >
	    select /*模块：接送货-通知客户管理- 运单通知列表查询-交接单号 */
	    	<![CDATA[
	    		case 
	    			when nvl(AF.ARRIVE_GOODS_QTY, 0) < nvl(WB.GOODS_QTY_TOTAL, 0) then 'Y'
	    			when nvl(AF.ARRIVE_GOODS_QTY, 0) = nvl(WB.GOODS_QTY_TOTAL, 0) then 'N'
	    			else 'N' 
	    		end as isBatchStowageNOtHere,
	    	]]>	
			<include refid="Base_Column_List" />
			<include refid="Other_Column_List" />
			<include refid="Notification_Column_List"/>
			,A.VEHICLEASSEMBLE_NO AS VEHICLEASSEMBLE_NO
			<!-- 交接单主表，交接单明细表，单据明细，任务车辆明细， 运单表，运单附属表 -->
	    FROM TFR.T_OPT_HANDOVERBILL HB
			INNER JOIN 
				TFR.T_OPT_HANDOVERBILL_DETAIL HBD
			ON
				HB.HANDOVER_NO = HBD.HANDOVER_NO
			INNER JOIN 	
				TFR.T_OPT_TRUCK_TASK_BILL TTB 
			ON
				HB.HANDOVER_NO = TTB.BILL_NO
			INNER JOIN
				TFR.T_OPT_TRUCK_TASK_DETAIL TTD
			ON
				TTB.TRUCK_TASK_DETAIL_ID = TTD.ID
			INNER JOIN
				PKP.T_SRV_WAYBILL WB
			ON
				HBD.WAYBILL_NO = WB.WAYBILL_NO
			INNER JOIN
				PKP.T_SRV_ACTUAL_FREIGHT AF
			ON
				WB.WAYBILL_NO= AF.WAYBILL_NO
			left JOIN 
			
			(SELECT VAB.VEHICLEASSEMBLE_NO,VABD.HANDOVER_NO FROM  TFR.T_OPT_VEHICLEASSEMBLE_DETAIL VABD
                  INNER JOIN TFR.T_OPT_VEHICLEASSEMBLEBILL VAB
                    ON VAB.ID = VABD.VEHICLEASSEMBLEBILL_ID
                  WHERE   VAB.STATE != 90
                    
            <if test="handoverNo != null and handoverNo != ''" >
				AND VABD.HANDOVER_NO=#{handoverNo,jdbcType=VARCHAR}
	    	</if>
	    	) A  ON  A.HANDOVER_NO = HB.HANDOVER_NO
			
	    <where>
			<if test="handoverNo != null and handoverNo != ''" >
				HB.HANDOVER_NO=#{handoverNo,jdbcType=VARCHAR}
	    	</if>
	    	AND HB.HANDOVERBILL_STATE!=90
			<include refid="select_status_Where"/>
			<include refid="select_planArriveTime_Where"/>
			<include refid="select_arriveTime_Where"/>
			<include refid="select_truck_task_Where"/>
			<include refid="select_default_Where"/>
			<include refid='select_productCodes_Where'/>
			<include refid='select_waybill_active_Where'/>
			<include refid='select_not_exists_sign_Where'/>
			<include refid="select_receiveMethodCon_Where" />
			<include refid="select_productCodeCon_Where" />
			<include refid="select_deliverDistCode_Where" />
			<if test="batchStowage != null and batchStowage != '' ">
				<![CDATA[ and nvl(HBD.HANDOVER_GOODS_QTY, 0) < nvl(WB.GOODS_QTY_TOTAL,0) ]]>
			</if>
		</where>
		order by WB.RECEIVE_CUSTOMER_CONTACT,WB.GOODS_WEIGHT_TOTAL DESC, WB.GOODS_VOLUME_TOTAL DESC, WB.TO_PAY_AMOUNT DESC
	</select>
	<!-- 运单通知列表Count查询-按交接单方式查询-->
	<select id="getTotalCountForHandoverNo" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" resultType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto">
		SELECT /*模块：接送货-通知客户管理- 运单通知列表查询-运单通知列表Count查询-按交接单方式查询 */
		<include refid="getTotalCountforParams"/>
        FROM TFR.T_OPT_HANDOVERBILL HB
			INNER JOIN 
				TFR.T_OPT_HANDOVERBILL_DETAIL HBD
			ON
				HB.HANDOVER_NO = HBD.HANDOVER_NO
			INNER JOIN 	
				TFR.T_OPT_TRUCK_TASK_BILL TTB 
			ON
				HB.HANDOVER_NO = TTB.BILL_NO
			INNER JOIN
				TFR.T_OPT_TRUCK_TASK_DETAIL TTD
			ON
				TTB.TRUCK_TASK_DETAIL_ID = TTD.ID
			INNER JOIN
				PKP.T_SRV_WAYBILL WB
			ON
				HBD.WAYBILL_NO = WB.WAYBILL_NO
			INNER JOIN
				PKP.T_SRV_ACTUAL_FREIGHT AF
			ON
				WB.WAYBILL_NO= AF.WAYBILL_NO 
	    <where>
	    	<if test="handoverNo != null and handoverNo != ''" >
				HB.HANDOVER_NO=#{handoverNo,jdbcType=VARCHAR}
	    	</if>
	    	AND HB.HANDOVERBILL_STATE!=90
			<include refid="select_status_Where"/>
			<include refid="select_planArriveTime_Where"/>
			<include refid="select_arriveTime_Where"/>
			<include refid="select_truck_task_Where"/>
			<include refid="select_default_Where"/>
			<include refid='select_productCodes_Where'/>
			<include refid='select_waybill_active_Where'/>
			<include refid='select_not_exists_sign_Where'/>
			<include refid="select_receiveMethodCon_Where" />
			<include refid="select_productCodeCon_Where" />
			<include refid="select_deliverDistCode_Where" />
			<if test="batchStowage != null and batchStowage != '' ">
				<![CDATA[ and nvl(HBD.HANDOVER_GOODS_QTY, 0) < nvl(WB.GOODS_QTY_TOTAL, 0) ]]>
			</if>
		</where>
	</select> 
	<!-- 运单通知列表查询-车次号-->
	<select id="selectByVehicleAssembleNo" resultMap="notifyMap" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" >
	    select /*模块：接送货-通知客户管理- 运单通知列表查询-车次号 */
	    	<![CDATA[
	    		case 
	    			when nvl(AF.ARRIVE_GOODS_QTY, 0) < nvl(WB.GOODS_QTY_TOTAL, 0) then 'Y'
	    			when nvl(AF.ARRIVE_GOODS_QTY, 0) = nvl(WB.GOODS_QTY_TOTAL, 0) then 'N'
	    			else 'N' 
	    		end as isBatchStowageNOtHere,
	    	]]>	
			<include refid="Base_Column_List" />
			<include refid="Other_Column_List" />
			<include refid="Notification_Column_List"/>
			,VAB.VEHICLEASSEMBLE_NO AS VEHICLEASSEMBLE_NO
			<!-- 汽运配载单，汽运配载单明细，交接单主表，交接单明细表，单据明细，任务车辆明细， 运单表，运单附属表 -->
	    FROM TFR.T_OPT_VEHICLEASSEMBLEBILL VAB
			INNER JOIN 
				TFR.T_OPT_VEHICLEASSEMBLE_DETAIL VABD
			ON
				VAB.ID = VABD.VEHICLEASSEMBLEBILL_ID
			INNER JOIN 
				TFR.T_OPT_HANDOVERBILL HB
			ON
				VABD.HANDOVER_NO = HB.HANDOVER_NO
			INNER JOIN 
	    		TFR.T_OPT_HANDOVERBILL_DETAIL HBD
			ON
				HB.HANDOVER_NO = HBD.HANDOVER_NO
			INNER JOIN 	
				TFR.T_OPT_TRUCK_TASK_BILL TTB
			ON
				HB.HANDOVER_NO = TTB.BILL_NO
			INNER JOIN
				TFR.T_OPT_TRUCK_TASK_DETAIL TTD
			ON
				TTB.TRUCK_TASK_DETAIL_ID = TTD.ID
			INNER JOIN 		
				PKP.T_SRV_WAYBILL WB
			ON
				HBD.WAYBILL_NO = WB.WAYBILL_NO
			INNER JOIN 		
				PKP.T_SRV_ACTUAL_FREIGHT AF
			ON
				WB.WAYBILL_NO= AF.WAYBILL_NO
	    <where>
		 <!-- <if test="vehicleAssembleNo != null and vehicleAssembleNo != ''" >
				VAB.VEHICLEASSEMBLE_NO=#{vehicleAssembleNo,jdbcType=VARCHAR}
				and VAB.State!=90
	    	</if>  -->	
	    	<include refid="select_vehicleAssembleNo_Where" />
	    	AND VAB.State!=90
	    	AND HB.HANDOVERBILL_STATE!=90
			<include refid="select_status_Where"/>
			<include refid="select_truck_task_Where"/>
			<include refid="select_default_Where"/>
			<include refid='select_productCodes_Where'/>
			<include refid='select_waybill_active_Where'/>
			<include refid='select_not_exists_sign_Where'/>
			<include refid="select_receiveMethodCon_Where" />
			<include refid="select_productCodeCon_Where" />
			<include refid="select_deliverDistCode_Where" />
			<if test="batchStowage != null and batchStowage !='' ">
				<![CDATA[ and nvl(HBD.HANDOVER_GOODS_QTY, 0) < nvl(WB.GOODS_QTY_TOTAL, 0) ]]>
			</if>
		</where>
		ORDER BY  WB.GOODS_WEIGHT_TOTAL DESC, WB.GOODS_VOLUME_TOTAL DESC, WB.TO_PAY_AMOUNT DESC
	</select>
	<!-- 运单通知列表Count查询-按车次方式查询-->
	<select id="getTotalCountForVehicleAssembleNo" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" resultType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto">
		SELECT /*模块：接送货-通知客户管理- 运单通知列表Count查询-按车次方式查询 */
		<include refid="getTotalCountforParams"/>
        FROM TFR.T_OPT_VEHICLEASSEMBLEBILL VAB
			INNER JOIN 
				TFR.T_OPT_VEHICLEASSEMBLE_DETAIL VABD
			ON
				VAB.ID = VABD.VEHICLEASSEMBLEBILL_ID
			INNER JOIN 
				TFR.T_OPT_HANDOVERBILL HB
			ON
				VABD.HANDOVER_NO = HB.HANDOVER_NO
			INNER JOIN 
	    		TFR.T_OPT_HANDOVERBILL_DETAIL HBD
			ON
				HB.HANDOVER_NO = HBD.HANDOVER_NO
			INNER JOIN 	
				TFR.T_OPT_TRUCK_TASK_BILL TTB
			ON
				HB.HANDOVER_NO = TTB.BILL_NO
			INNER JOIN
				TFR.T_OPT_TRUCK_TASK_DETAIL TTD
			ON
				TTB.TRUCK_TASK_DETAIL_ID = TTD.ID
			INNER JOIN 		
				PKP.T_SRV_WAYBILL WB
			ON
				HBD.WAYBILL_NO = WB.WAYBILL_NO
			INNER JOIN 		
				PKP.T_SRV_ACTUAL_FREIGHT AF
			ON
				WB.WAYBILL_NO= AF.WAYBILL_NO
	    <where>
	    	<!-- <if test="vehicleAssembleNo != null and vehicleAssembleNo != ''" >
				VAB.VEHICLEASSEMBLE_NO=#{vehicleAssembleNo,jdbcType=VARCHAR}
				and VAB.State!=90
	    	</if>  -->
	    	<include refid="select_vehicleAssembleNo_Where" />
	    	AND VAB.State!=90
	    	AND HB.HANDOVERBILL_STATE!=90
			<include refid="select_status_Where"/>
			<include refid="select_truck_task_Where"/>
			<include refid="select_default_Where"/>
			<include refid='select_productCodes_Where'/>
			<include refid='select_waybill_active_Where'/>
			<include refid='select_not_exists_sign_Where'/>
			<include refid="select_receiveMethodCon_Where" />
			<include refid="select_productCodeCon_Where" />
			<include refid="select_deliverDistCode_Where" />
			<if test="batchStowage != null and batchStowage != '' ">
				<![CDATA[ and nvl(HBD.HANDOVER_GOODS_QTY, 0) < nvl(WB.GOODS_QTY_TOTAL, 0) ]]>
			</if>
		</where>
	</select> 
	<!-- 查询运单明细 -->
	<select id="selectDetailByWayBillNo" resultMap="notifyMap" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" >
		 select /*模块：接送货-通知客户管理- 查询运单明细 */
			<include refid="Base_Column_List" />
			<include refid="detail_Column_List" />
			<include refid="Other_Column_For_Bse_List" />
			<!-- 运单表，运单附属表 -->
	    FROM PKP.T_SRV_WAYBILL WB 
	    	INNER JOIN 
	    		PKP.T_SRV_ACTUAL_FREIGHT AF
			ON 
				WB.WAYBILL_NO= AF.WAYBILL_NO 
	    <where>
	    	<choose>
	    		<when test=" waybillNo != null  and waybillNo != ''  ">
	    			WB.WAYBILL_NO=#{waybillNo,jdbcType=VARCHAR}
	    		</when>
	    		<otherwise>
	    			WB.WAYBILL_NO = ''
	    		</otherwise>
	    	</choose>
	    	<include refid='select_waybill_active_Where'/>
		</where>
	</select>
	
	<update id="updateByWaybillNo" parameterType="com.deppon.foss.module.pickup.waybill.shared.domain.ActualFreightEntity" >
    update PKP.T_SRV_ACTUAL_FREIGHT/*模块：接送货-通知客户管理- 更新实际承运表*/
    <set >
      <if test="goodsName != null" >
        GOODS_NAME = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        WEIGHT = #{weight,jdbcType=DECIMAL},
      </if>
      <if test="volume != null" >
        VOLUME = #{volume,jdbcType=DECIMAL},
      </if>
      <if test="goodsQty != null" >
        GOODS_QTY = #{goodsQty,jdbcType=DECIMAL},
      </if>
      <if test="dimension != null" >
        DIMENSION = #{dimension,jdbcType=VARCHAR},
      </if>
      <if test="insuranceValue != null" >
        INSURANCE_VALUE = #{insuranceValue,jdbcType=DECIMAL},
      </if>
      <if test="packingFee != null" >
        PACKING_FEE = #{packingFee,jdbcType=DECIMAL},
      </if>
      <if test="deliverFee != null" >
        DELIVER_FEE = #{deliverFee,jdbcType=DECIMAL},
      </if>
      <if test="laborFee != null" >
        LABOR_FEE = #{laborFee,jdbcType=DECIMAL},
      </if>
      <if test="codAmount != null" >
        COD_AMOUNT = #{codAmount,jdbcType=DECIMAL},
      </if>
      <if test="valueaddFee != null" >
        VALUEADD_FEE = #{valueaddFee,jdbcType=DECIMAL},
      </if>
      <if test="freight != null" >
        FREIGHT = #{freight,jdbcType=DECIMAL},
      </if>
      <if test="settleStatus != null" >
        SETTLE_STATUS = #{settleStatus,jdbcType=CHAR},
      </if>
      <if test="settleTime != null" >
        SETTLE_TIME = #{settleTime,jdbcType=TIMESTAMP},
      </if>
      <if test="notificationResult != null" >
        NOTIFICATION_RESULT = #{notificationResult,jdbcType=VARCHAR},
      </if>
      <if test="notificationTime != null" >
        NOTIFICATION_TIME = #{notificationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deliverDate != null" >
        DELIVER_DATE = #{deliverDate,jdbcType=TIMESTAMP},
      </if>
      <if test="actualDeliverType != null" >
        ACTUAL_DELIVER_TYPE = #{actualDeliverType,jdbcType=VARCHAR},
      </if>
      <if test="storageDay != null" >
        STORAGE_DAY = #{storageDay,jdbcType=DECIMAL},
      </if>
      <if test="storageCharge != null" >
        STORAGE_CHARGE = #{storageCharge,jdbcType=DECIMAL} * 100,
      </if>
      <if test="overdueDay != null" >
        OVERDUE_DAY = #{overdueDay,jdbcType=DECIMAL},
      </if>
      <if test="arriveGoodsQty != null" >
        ARRIVE_GOODS_QTY = #{arriveGoodsQty,jdbcType=DECIMAL},
      </if>
      <if test="arriveTime != null" >
        ARRIVE_TIME = #{arriveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="arrangeGoodsQty != null" >
        ARRANGE_GOODS_QTY = #{arrangeGoodsQty,jdbcType=DECIMAL},
      </if>
      <if test="arriveNotoutGoodsQty != null" >
        ARRIVE_NOTOUT_GOODS_QTY = #{arriveNotoutGoodsQty,jdbcType=DECIMAL},
      </if>
      <if test="exceptionGoodsQty != null" >
        EXCEPTION_GOODS_QTY = #{exceptionGoodsQty,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null and paymentType != ''">
        PAYMENT_TYPE = #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="deliverRegionCode != null and deliverRegionCode != ''">
        DELIVER_REGION_CODE = #{deliverRegionCode,jdbcType=VARCHAR},
      </if>
      <if test="everTelnoticeSuccess != null and everTelnoticeSuccess != ''">
        EVER_TELNOTICE_SUCCESS = #{everTelnoticeSuccess,jdbcType=VARCHAR},
      </if>
      <if test="notificationOrgCode != null and notificationOrgCode != ''">
        NOTIFICATION_ORG_CODE = #{notificationOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="isCollect != null">
		IS_COLLECT = #{isCollect,jdbcType=VARCHAR},
	  </if>
	  <if test="togetherSendCode != null and togetherSendCode!='N/A'">
		together_Send_Code = #{togetherSendCode,jdbcType=VARCHAR},
	  </if>
	  <if test="togetherSendCode != null  and togetherSendCode=='N/A'">
		together_Send_Code = null,
	  </if>
	   <if test="togetherSendMark != null and togetherSendMark!='N/A'">
		together_Send_Mark = #{togetherSendMark,jdbcType=VARCHAR},
	  </if>
	  <if test="togetherSendMark != null  and togetherSendMark=='N/A'">
		together_Send_Mark = null,
	  </if>
	  <if test="deliveryTimeInterval != null and deliveryTimeInterval !='' ">
		delivery_time_interval = #{deliveryTimeInterval,jdbcType=VARCHAR},
	  </if>
	  <if test="deliveryTimeInterval == null or deliveryTimeInterval =='' ">
		delivery_time_interval = null,
	  </if>
	  <if test="deliveryTimeStart != null  and deliveryTimeStart !='' ">
		delivery_time_start = #{deliveryTimeStart,jdbcType=VARCHAR},
	  </if>
	  <if test="deliveryTimeStart == null  or deliveryTimeStart =='' ">
		delivery_time_start = null,
	  </if>
	  <if test="deliveryTimeOver != null  and deliveryTimeOver !='' ">
		delivery_time_over = #{deliveryTimeOver,jdbcType=VARCHAR},
	  </if>
	  <if test="deliveryTimeOver == null  or deliveryTimeOver =='' ">
		delivery_time_over = null,
	  </if>
	  <if test="invoiceType != null  and invoiceType !='' ">
		invoice_type = #{invoiceType,jdbcType=VARCHAR},
	  </if>
	  <if test="invoiceType == null  or invoiceType =='' ">
		invoice_type = null,
	  </if>
	  <if test="modifyTime != null">
         MODIFY_TIME=#{modifyTime,jdbcType=TIMESTAMP},
        </if>
	  <if test="cashTime != null" >
        CASH_TIME = #{cashTime,jdbcType=TIMESTAMP}
      </if>        
    </set>
    where WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
  </update>
  
  <resultMap type="com.deppon.foss.module.pickup.waybill.shared.domain.ActualFreightEntity" id="actualFreightMap">
  	<result property="waybillNo" column="WAYBILL_NO" jdbcType = "VARCHAR" />
  </resultMap>
  
  <select id="queryActualFreightByWaybillNo" resultMap="actualFreightMap">
  	SELECT /*模块：接送货-通知客户管理- 根据运单号查询ActualFreight */
  	WAYBILL_NO FROM PKP.T_SRV_ACTUAL_FREIGHT
  	<where>
	  	<if test="waybillNo != null and waybillNo != ''">
	       AND WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR} 
	    </if>
	    <if test="notificationResult != null and notificationResult != ''">
	       AND NOTIFICATION_RESULT = #{notificationResult,jdbcType=VARCHAR}
	    </if>
	    <if test="notificationTime != null and notificationTime != ''">
	       AND TRUNC(NOTIFICATION_TIME) = TRUNC(#{notificationTime,jdbcType=TIMESTAMP})
	    </if>
  	</where>
  </select>
  
  <!-- 根据运单号列表查询运单信息-批量通知及仓储费相关字段 -->
  <select id="selectWaybillsForNos" resultMap="notifyMap" parameterType="java.util.Map">
		SELECT /*模块：接送货-通知客户管理- 根据运单号列表查询运单信息-批量通知及仓储费相关字段 */
		WB.WAYBILL_NO AS WAYBILL_NO, 
			WB.RECEIVE_CUSTOMER_CONTACT AS RECEIVE_CUSTOMER_CONTACT,
			WB.RECEIVE_CUSTOMER_MOBILEPHONE AS RECEIVE_CUSTOMER_MOBILEPHONE,
			WB.RECEIVE_METHOD AS RECEIVE_METHOD,
			AF.STORAGE_DAY AS STORAGE_DAY,
			AF.OVERDUE_DAY AS OVERDUE_DAY,
			AF.STORAGE_CHARGE /100 AS STORAGE_CHARGE,
			AF.SPECIAL_VALUE_ADDED_SERVICE,
			WB.GOODS_QTY_TOTAL AS GOODS_QTY_TOTAL,
			WB.DELIVERY_CUSTOMER_CONTACT AS DELIVERY_CUSTOMER_CONTACT,
			WB.TO_PAY_AMOUNT /100 AS TO_PAY_AMOUNT,WB.GOODS_WEIGHT_TOTAL,WB.GOODS_VOLUME_TOTAL
		FROM
			PKP.T_SRV_WAYBILL WB 
    	INNER JOIN 
    		PKP.T_SRV_ACTUAL_FREIGHT AF
		ON 
			WB.WAYBILL_NO = AF.WAYBILL_NO 
		<where>
			<choose>
	    		<when test="waybillNos !=null and waybillNos.length > 0">
	    			WB.WAYBILL_NO IN
					<foreach collection="waybillNos" index="index" item="waybillNo" open="(" separator="," close=")">
						#{waybillNo}
					</foreach>
	    		</when>
	    		<otherwise>
	    			WB.WAYBILL_NO = ''
	    		</otherwise>
	    	</choose>
	    	<include refid='select_waybill_active_Where'/>
		</where>
	</select>
	
	<select id="selectWaybillsForCCF" resultMap="notifyMap" parameterType="java.util.Map">
		<!--1:附加.到达件数 ≥ 开单件数
			2:运单最后库存所在地=库存的部门编码
			3:库存件数 > 0
			4:运输性质  空运、偏线、中转下线的不计算仓储费 -->
		SELECT /*模块：接送货-通知客户管理- 初步查询出需要统计仓储费的运单信息 */
		WB.WAYBILL_NO AS WAYBILL_NO,
		       WB.GOODS_VOLUME_TOTAL AS GOODS_VOLUME_TOTAL,
		       WS.LAST_IN_STOCK_TIME AS LAST_IN_STOCK_TIME,
		       AF.STORAGE_DAY AS STORAGE_DAY,
		       AF.STORAGE_CHARGE/100 AS STORAGE_CHARGE,
		       AF.OVERDUE_DAY AS OVERDUE_DAY
		  FROM PKP.T_SRV_WAYBILL WB
		 INNER JOIN PKP.T_SRV_ACTUAL_FREIGHT AF
		    ON WB.WAYBILL_NO = AF.WAYBILL_NO
		 INNER JOIN TFR.T_OPT_WAYBILL_STOCK WS
		    ON WB.WAYBILL_NO = WS.WAYBILL_NO
	    <where>
		   <![CDATA[(AF.ARRIVE_GOODS_QTY - WB.GOODS_QTY_TOTAL) >= 0
		   		AND WS.STOCK_GOODS_QTY > 0
		   		AND AF.END_STOCK_ORG_CODE = WS.ORG_CODE
		   		AND AF.GOODS_AREA_CODE = NVL(WS.GOODS_AREA_CODE,'N/A')]]>
		   <include refid='select_productCodes_Where'/>
		   <include refid='select_waybill_active_Where'/>
		</where>
	</select>
	<!-- 仓储异常运单 -->
	<select id="queryWaybillsWithWarehousingTimeout" resultMap="notifyMap" parameterType="java.util.Map">
		<!--1:库存件数 ≥ 开单件数
			2:运单最后库存所在地=库存的部门编码
			3:入库天数 >= 仓储期
			4:运输性质  空运、偏线、中转下线的 -->
		SELECT /*模块：接送货-通知客户管理- 仓储异常运单 */
		WB.WAYBILL_NO AS WAYBILL_NO,LAST_LOAD_ORG_CODE AS LAST_LOAD_ORG_CODE
		  FROM PKP.T_SRV_WAYBILL WB
		 INNER JOIN PKP.T_SRV_ACTUAL_FREIGHT AF
		    ON WB.WAYBILL_NO = AF.WAYBILL_NO
		 INNER JOIN TFR.T_OPT_WAYBILL_STOCK WS
		    ON WB.WAYBILL_NO = WS.WAYBILL_NO
	    <where>
		   <![CDATA[
		   		WS.STOCK_GOODS_QTY >= WB.GOODS_QTY_TOTAL
		   		AND AF.END_STOCK_ORG_CODE = WS.ORG_CODE
		   		AND AF.GOODS_AREA_CODE = NVL(WS.GOODS_AREA_CODE,'N/A')
		   	]]>
		    <if test=" storageDay != null  and storageDay != ''  ">
				AND AF.STORAGE_DAY >= #{storageDay,jdbcType=NUMERIC}<!-- 在库天数 -->
			</if>
		   <include refid='select_productCodes_Where'/>
		   <include refid='select_waybill_active_Where'/>
		</where>
	</select>
	
	<!-- 批量更新运单附加表的通知状态 -->
  <update id="updateAfByParam" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.NotificationEntity" >
    update PKP.T_SRV_ACTUAL_FREIGHT
    <set >
      <if test="newNoticeResult != null and newNoticeResult != '' " >
        NOTIFICATION_RESULT = #{newNoticeResult,jdbcType=VARCHAR},
        MODIFY_TIME = SYSDATE
      </if>
    </set>
    <where>
    	<!-- 通过结果 短信通知中、语音通知中、通知未果 -->
		<if test="notifyResults !=null and notifyResults.length > 0">
			NOTIFICATION_RESULT IN
			<foreach collection="notifyResults" index="index" item="notifyResult" open="(" separator="," close=")">
				#{notifyResult}
			</foreach>
		</if>
		<if test="operateTime != null" >
	        <![CDATA[ 
	        AND NOTIFICATION_TIME BETWEEN  #{operateTime,jdbcType=TIMESTAMP} - 2 and #{operateTime,jdbcType=TIMESTAMP} - 1
	        ]]>
	    </if>
	</where>
  </update>
  
  <select id="queryVoiceNoticeSuccessByNo" resultType="java.lang.Integer">
  	select count(*) 
  	from pkp.t_srv_notification
  	where waybill_no = #{waybillNo,jdbcType=VARCHAR}
	  	 <if test="operateOrgCode != null and operateOrgCode != '' " >
	       and  OPERATE_ORG_CODE = #{operateOrgCode,jdbcType=VARCHAR}
	      </if>
  			and trunc(OPERATE_TIME) = trunc(sysdate)
  			and notice_type = 'VOICE_NOTICE'
  			and notice_result = 'SUCCESS'
  </select>
  
  <select id="querySmsNoticeSuccessByNo" resultType="java.lang.Integer">
  	select count(*) 
  	from pkp.t_srv_notification
  	where waybill_no = #{waybillNo,jdbcType=VARCHAR}
  	 		<if test="operateOrgCode != null and operateOrgCode != '' " >
	       and  OPERATE_ORG_CODE = #{operateOrgCode,jdbcType=VARCHAR}
	      </if>
  			and trunc(OPERATE_TIME) = trunc(sysdate)
  			and notice_type = 'SMS_NOTICE'
  			and notice_result = 'SUCCESS'
  </select>
  <sql id="select_beforeNotice_arrStatus_Where">
		<!-- 到达联状态 生成、派送中-->
		<if test="arrStatus !=null and arrStatus.size > 0">
			AND arrive.status  IN
			<foreach collection="arrStatus" index="index" item="statusTmp" open="(" separator="," close=")">
				#{statusTmp}
			</foreach>
		</if>
  </sql>
	<sql id="select_beforeNotice_default_Where">
		AND (WB.LAST_LOAD_ORG_CODE = #{lastLoadOrgCode,jdbcType=VARCHAR} or WB.customer_pickup_org_code = #{lastLoadOrgCode,jdbcType=VARCHAR}) 
		<!-- 运单版本 -->
		<if test="active != null and active !=''">	
		<![CDATA[ and WB.ACTIVE  = #{active, jdbcType=VARCHAR}]]>
		</if>
		<if test=" paidMethod !=null and paidMethod != '' ">
			AND WB.PAID_METHOD != #{paidMethod,jdbcType=VARCHAR}
		</if>
		<!-- 运输性质 不等于 空运、偏线、中转下线 -->
		<if test="productCodes !=null and productCodes.length > 0">
			AND WB.PRODUCT_CODE NOT IN
			<foreach collection="productCodes" index="index" item="productCodeTmp" open="(" separator="," close=")">
				#{productCodeTmp}
			</foreach>
		</if>
		<include refid="select_productCodeCon_Where"></include>
		
	<!--	<if test="productCode != null and productCode != ''">	
			AND WB.PRODUCT_CODE = #{productCode, jdbcType=VARCHAR}
		</if> -->
		<!--根据是否快递字段  过滤快递运单 
		 <if test="isExpress !=null and isExpress !=''">
		 	<![CDATA[ and WB.IS_EXPRESS  != #{isExpress, jdbcType=VARCHAR} OR wb.IS_EXPRESS IS NULL]]>
		</if>  -->
		<!-- 默认派送方式 -->
		<if test="receiveMethodTmp != null and receiveMethodTmp != ''">	
			AND WB.RECEIVE_METHOD like '%' || #{receiveMethodTmp, jdbcType=VARCHAR} || '%'
		</if> 
		<!-- 提货方式多选 -->
		<if test="receiveMethodCons !=null and receiveMethodCons.length > 0">
			AND WB.RECEIVE_METHOD IN
			<foreach collection="receiveMethodCons" index="index" item="rMethodCon" open="(" separator="," close=")">
				#{rMethodCon}
			</foreach>
		</if>
		
		<!-- 派送省、市、行政区域 -->
		<include refid="select_deliverDistCode_Where"></include>  
		
		<!-- 运单状态 不等于中止、作废 -->
		<if test="afStatus !=null and afStatus.size > 0">
			AND( af.status is null or af.status NOT IN
			<foreach collection="afStatus" index="index" item="statusTmp" open="(" separator="," close=")">
				#{statusTmp}
			</foreach>
			)
		</if>
		<![CDATA[
		AND NOT EXISTS (SELECT 1
          FROM PKP.t_Srv_Waybill_Sign_Result WSR
         WHERE WSR.WAYBILL_NO = WB.WAYBILL_NO
           AND WSR.SIGN_STATUS = 'SIGN_STATUS_ALL' 
           AND WSR.ACTIVE = 'Y')
        ]]>
		AND
		NOT EXISTS(SELECT 1 FROM PKP.T_SRV_EXCEPTION EP WHERE EP.WAYBILL_NO = WB.WAYBILL_NO AND 
			EP.STATUS IN
			<foreach collection="exceptionStatus" index="index" item="exceptionS" open="(" separator="," close=")">
				#{exceptionS}
			</foreach>
			AND
			(CASE 
				WHEN EP.EXCEPTION_TYPE = #{exceptionType,jdbcType=VARCHAR} AND EP.EXCEPTION_LINK = #{exceptionLink1,jdbcType=VARCHAR} THEN 1
				WHEN EP.EXCEPTION_TYPE = #{exceptionType,jdbcType=VARCHAR} AND EP.EXCEPTION_LINK = #{exceptionLink2,jdbcType=VARCHAR} THEN 1
				ELSE 0
				END) = 0)
	</sql>
	<!-- add by 329757 计划到达通知默认查询条件 -->
	<sql id="select_arriveNotice_default_Where">
		AND  WB.customer_pickup_org_code = #{lastLoadOrgCode,jdbcType=VARCHAR} 
		<!-- 运单版本 -->
		<if test="active != null and active !=''">	
		<![CDATA[ and WB.ACTIVE  = #{active, jdbcType=VARCHAR}]]>
		</if>
		<if test=" paidMethod !=null and paidMethod != '' ">
			AND WB.PAID_METHOD != #{paidMethod,jdbcType=VARCHAR}
		</if>
		<!-- 条件中运输性质 -->
		<include refid="select_productCodeCon_Where"/>
		<!-- 默认不包含的运输性质  偏线，空运，快递 -->
		<include refid="select_productCodes_Where"/>
		
		<!-- 默认派送方式 -->
		<if test="receiveMethod != null and receiveMethod != ''">	
			AND WB.RECEIVE_METHOD not like '%' || #{receiveMethod, jdbcType=VARCHAR} || '%'
		</if> 
		<!-- 提货方式多选 -->
		<if test="receiveMethodCons !=null and receiveMethodCons.length > 0">
			AND WB.RECEIVE_METHOD IN
			<foreach collection="receiveMethodCons" index="index" item="rMethodCon" open="(" separator="," close=")">
				#{rMethodCon}
			</foreach>
		</if>
		<!-- 派送省、市、行政区域 -->
		<include refid="select_deliverDistCode_Where"/>  
		
		<!-- 运单状态 不等于中止、作废 -->
		<if test="afStatus !=null and afStatus.size > 0">
			AND( af.status is null or af.status NOT IN
			<foreach collection="afStatus" index="index" item="statusTmp" open="(" separator="," close=")">
				#{statusTmp}
			</foreach>
			)
		</if>
		<![CDATA[
		AND NOT EXISTS (SELECT 1
          FROM PKP.t_Srv_Waybill_Sign_Result WSR
         WHERE WSR.WAYBILL_NO = WB.WAYBILL_NO
           AND WSR.SIGN_STATUS = 'SIGN_STATUS_ALL' 
           AND WSR.ACTIVE = 'Y')
        ]]>
		AND
		NOT EXISTS(SELECT 1 FROM PKP.T_SRV_EXCEPTION EP WHERE EP.WAYBILL_NO = WB.WAYBILL_NO AND 
			EP.STATUS IN
			<foreach collection="exceptionStatus" index="index" item="exceptionS" open="(" separator="," close=")">
				#{exceptionS}
			</foreach>
			AND
			(CASE 
				WHEN EP.EXCEPTION_TYPE = #{exceptionType,jdbcType=VARCHAR} AND EP.EXCEPTION_LINK = #{exceptionLink1,jdbcType=VARCHAR} THEN 1
				WHEN EP.EXCEPTION_TYPE = #{exceptionType,jdbcType=VARCHAR} AND EP.EXCEPTION_LINK = #{exceptionLink2,jdbcType=VARCHAR} THEN 1
				ELSE 0
				END) = 0)
	</sql>
	<!-- 是否通知成功过 -->
	<sql id="has_Notice_SUCCESS">
		,DECODE((SELECT VOICE.NOTICE_RESULT
          FROM PKP.T_SRV_NOTIFICATION VOICE
         WHERE VOICE.WAYBILL_NO = WB.WAYBILL_NO
           AND VOICE.NOTICE_RESULT = 'SUCCESS'
           and module_name='PKP_NOTIFY'
           AND VOICE.OPERATE_ORG_CODE = #{lastLoadOrgCode,jdbcType=VARCHAR}
           AND rownum = 1),
        NULL,
        'N',
        'SUCCESS',
        'Y',
        'N') IS_NOTICE_SUCCESS
	</sql>
  <!-- 派送提前通知Count查询-按车次方式查询-->
	<select id="getBeforeNoticeTotalCountForVehicleAssembleNo" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" resultType="Long">
		SELECT /*模块：接送货-派送提前通知- 运单通知列表Count查询-按车次方式查询 */
		count(1)
        FROM TFR.T_OPT_VEHICLEASSEMBLEBILL VAB
			INNER JOIN 
				TFR.T_OPT_VEHICLEASSEMBLE_DETAIL VABD
			ON
				VAB.ID = VABD.VEHICLEASSEMBLEBILL_ID
			INNER JOIN 
				TFR.T_OPT_HANDOVERBILL HB
			ON
				VABD.HANDOVER_NO = HB.HANDOVER_NO
			INNER JOIN 
	    		TFR.T_OPT_HANDOVERBILL_DETAIL HBD
			ON
				HB.HANDOVER_NO = HBD.HANDOVER_NO
			INNER JOIN 	
				TFR.T_OPT_TRUCK_TASK_BILL TTB
			ON
				HB.HANDOVER_NO = TTB.BILL_NO
			INNER JOIN
				TFR.T_OPT_TRUCK_TASK_DETAIL TTD
			ON
				TTB.TRUCK_TASK_DETAIL_ID = TTD.ID
			INNER JOIN 		
				PKP.T_SRV_WAYBILL WB
			ON
				HBD.WAYBILL_NO = WB.WAYBILL_NO
			INNER JOIN 		
				PKP.T_SRV_ACTUAL_FREIGHT AF
			ON
				WB.WAYBILL_NO= AF.WAYBILL_NO
	    <where>
	    	<!-- <if test="vehicleAssembleNo != null and vehicleAssembleNo != ''" >
				VAB.VEHICLEASSEMBLE_NO=#{vehicleAssembleNo,jdbcType=VARCHAR}
				and VAB.State != 90
	    	</if> -->
	    	<!-- 多个车次号条件 -->
	    	<include refid="select_vehicleAssembleNo_Where" />
	    	AND HB.HANDOVERBILL_STATE!=90
			<include refid="select_planArriveTime_Where"/>
			<include refid="select_truck_task_Where"/>
			<include refid="select_beforeNotice_default_Where"/>
			
		</where>
	</select>
	<!-- 派送提前通知Count查询-按运单号查询-->
	<select id="getBeforeNoticeCountForWaybillNo" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" resultType="Long">
		select /*模块：接送货-派送提前通知- 派送提前通知Count查询-按运单号查询 */
		count(1)
        FROM PKP.T_SRV_WAYBILL WB 
	    	INNER JOIN 
	    		PKP.T_SRV_ACTUAL_FREIGHT AF
			ON 
				WB.WAYBILL_NO= AF.WAYBILL_NO 
	    <where>
			<if test="arrayWaybillNos !=null and arrayWaybillNos.length > 0">
    			WB.WAYBILL_NO IN
				<foreach collection="arrayWaybillNos" index="index" item="waybillNo" open="(" separator="," close=")">
					#{waybillNo}
				</foreach>
    		</if>
			<include refid="select_beforeNotice_default_Where"/>
		</where>
	</select>
	<!--add by 329757  计划到达通知Count查询-按运单号查询总条数-->
	<select id="getArriveNoticeCountForWaybillNo" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" resultType="Long">
		select /*模块：接送货-计划到达通知- 计划到达通知Count查询-按运单号查询 */
		count(1)
       FROM PKP.T_SRV_WAYBILL WB 
             INNER JOIN PKP.T_SRV_ACTUAL_FREIGHT AF
                    ON WB.WAYBILL_NO = AF.WAYBILL_NO
			LEFT JOIN pkp.t_srv_arrivesheet arrive 
	   		on arrive.waybill_no = WB.waybill_no 
	   		and arrive.active = #{active,jdbcType=VARCHAR}
	   	    and arrive.destroyed ='N' 
	   	    and arrive.SIGN_STATUS!='SIGN_STATUS_ALL'
	   	    <include refid="select_beforeNotice_arrStatus_Where"/>
	   	    left join PKP.T_SRV_WAYBILLRFC WBR on WBR.WAYBILL_NO = WB.WAYBILL_NO 
	  		AND WBR.STATUS in
			<foreach collection="wbrStatus" index="index" item="wbr" open="(" separator="," close=")">
				 #{wbr,jdbcType=VARCHAR}
			</foreach>
	    <where>
	    	WB.GOODS_WEIGHT_TOTAL!=0 AND WB.GOODS_VOLUME_TOTAL!=0
			<if test="arrayWaybillNos !=null and arrayWaybillNos.length > 0">
    			AND WB.WAYBILL_NO IN
				<foreach collection="arrayWaybillNos" index="index" item="waybillNo" open="(" separator="," close=")">
					#{waybillNo}
				</foreach>
    		</if>
			<include refid="select_arriveNotice_default_Where"/>
		</where>
	</select>
	<!--add by 329757  计划到达通知Count查询-按计划到达时间查询总条数-->
	<select id="getArriveNoticeCountForPlanArriveTime" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" resultType="Long">
		select /*模块：接送货-计划到达通知- 计划到达通知Count查询-按计划到达时间查询 */
		count(1)
        FROM  PKP.T_SRV_WAYBILL WB
			INNER JOIN 		
				PKP.T_SRV_ACTUAL_FREIGHT AF
			ON
				WB.WAYBILL_NO= AF.WAYBILL_NO
	    <where>
	    WB.GOODS_WEIGHT_TOTAL!=0 AND WB.GOODS_VOLUME_TOTAL!=0
			<include refid="select_status_Where2"/>
    		<include refid="select_preArriveTime_Where"/>
		<include refid="select_arriveNotice_default_Where"/>
		</where>
	</select>
	<!--add by 329757  计划到达通知Count查询-按实际到达时间查询总条数-->
	<select id="getArriveNoticeCountForArriveTime" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" resultType="Long">
		select /*模块：接送货-计划到达通知- 计划到达通知Count查询-按实际到达时间查询 */
		count(1)
        FROM 
				TFR.T_OPT_HANDOVERBILL HB
		
			INNER JOIN 
	    		TFR.T_OPT_HANDOVERBILL_DETAIL HBD
			ON
				HB.HANDOVER_NO = HBD.HANDOVER_NO
			INNER JOIN 	
				TFR.T_OPT_TRUCK_TASK_BILL TTB
			ON
				HB.HANDOVER_NO = TTB.BILL_NO
			INNER JOIN
				TFR.T_OPT_TRUCK_TASK_DETAIL TTD
			ON
				TTB.TRUCK_TASK_DETAIL_ID = TTD.ID
			INNER JOIN 		
				PKP.T_SRV_WAYBILL WB
			ON
				HBD.WAYBILL_NO = WB.WAYBILL_NO
			INNER JOIN 		
				PKP.T_SRV_ACTUAL_FREIGHT AF
			ON
				WB.WAYBILL_NO= AF.WAYBILL_NO
	    <where>
	    WB.GOODS_WEIGHT_TOTAL!=0 AND WB.GOODS_VOLUME_TOTAL!=0 AND
		HB.HANDOVERBILL_STATE!=90
		<!-- AND HB.HANDOVERBILL_STATE=40  -->
   		AND HB.DEST_ORG_NAME = #{outName,jdbcType=VARCHAR} 
		<include refid="select_status_Where2"/>
   		<include refid="select_arriveTime_Where2"/>
   		<!-- <include refid="select_truck_task_Where"/>  -->
		<include refid="select_arriveNotice_default_Where"/>
		</where>
	</select>
	<!--add by 329757  计划到达通知Count查询-按通知时间查询总条数-->
	<select id="getArriveNoticeCountForNoticeTime" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" resultType="Long">
		select /*模块：接送货-计划到达通知- 计划到达通知Count查询-按通知时间查询 */
		count(1)
        FROM PKP.T_SRV_WAYBILL WB
			
			INNER JOIN
				PKP.T_SRV_ACTUAL_FREIGHT AF
			ON
				WB.WAYBILL_NO= AF.WAYBILL_NO 
			LEFT JOIN pkp.t_srv_arrivesheet arrive 
	   		on arrive.waybill_no = WB.waybill_no 
	   		and arrive.active = #{active,jdbcType=VARCHAR}
	   	    and arrive.destroyed ='N'
	   	    and arrive.SIGN_STATUS!='SIGN_STATUS_ALL'
	   	    <include refid="select_beforeNotice_arrStatus_Where"/>
	   	    left join PKP.T_SRV_WAYBILLRFC WBR on WBR.WAYBILL_NO = WB.WAYBILL_NO 
		  	 AND WBR.STATUS in
			<foreach collection="wbrStatus" index="index" item="wbr" open="(" separator="," close=")">
				 #{wbr,jdbcType=VARCHAR}
			</foreach>
	    <where>
	    	WB.GOODS_WEIGHT_TOTAL!=0 AND WB.GOODS_VOLUME_TOTAL!=0 
	    	AND AF.NOTIFICATION_ORG_CODE=#{lastLoadOrgCode,jdbcType=VARCHAR}
			<include refid="select_status_Where2"/>
			<include refid="select_noticeTime_Where"/>
			<include refid="select_arriveNotice_default_Where"/>
		</where>
	</select>
	
	<!-- 派送提前通知Count查询-按交接单方式查询-->
	<select id="getBeforeNoticeCountForHandoverNo" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" resultType="Long">
		SELECT /*模块：接送货-派送提前通知- 派送提前通知Count查询*/
		count(1)
        FROM TFR.T_OPT_HANDOVERBILL HB
			INNER JOIN 
				TFR.T_OPT_HANDOVERBILL_DETAIL HBD
			ON
				HB.HANDOVER_NO = HBD.HANDOVER_NO
			INNER JOIN 	
				TFR.T_OPT_TRUCK_TASK_BILL TTB 
			ON
				HB.HANDOVER_NO = TTB.BILL_NO
			INNER JOIN
				TFR.T_OPT_TRUCK_TASK_DETAIL TTD
			ON
				TTB.TRUCK_TASK_DETAIL_ID = TTD.ID
			INNER JOIN
				PKP.T_SRV_WAYBILL WB
			ON
				HBD.WAYBILL_NO = WB.WAYBILL_NO
			INNER JOIN
				PKP.T_SRV_ACTUAL_FREIGHT AF
			ON
				WB.WAYBILL_NO= AF.WAYBILL_NO 
			<!--add-->
			 left JOIN 	
	       (SELECT VAB.VEHICLEASSEMBLE_NO,VABD.HANDOVER_NO FROM  TFR.T_OPT_VEHICLEASSEMBLE_DETAIL VABD
                  INNER JOIN TFR.T_OPT_VEHICLEASSEMBLEBILL VAB
                    ON VAB.ID = VABD.VEHICLEASSEMBLEBILL_ID
                  WHERE   VAB.STATE != 90
	    	) A  ON  A.HANDOVER_NO = HB.HANDOVER_NO	
	    <where>
	    	<if test="handoverNo != null and handoverNo != ''" >
				HB.HANDOVER_NO=#{handoverNo,jdbcType=VARCHAR}
	    	</if>
	    	AND HB.HANDOVERBILL_STATE!=90
			<include refid="select_planArriveTime_Where"/>
			<include refid="select_arriveTime_Where"/>
			<include refid="select_truck_task_Where"/>
			<include refid="select_beforeNotice_default_Where"/>
		</where>
	</select> 
	<!-- 派送提前通知查询-按运单号查询-->
	<select id="getBeforeNoticeForWaybillNos" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" resultMap="notifyMap">
		select /*模块：接送货-派送提前通知- 派送提前通知Count查询-按运单号查询 */
		<include refid="Base_Column_List" />
		arrive.IS_PRINTED as isPrinted
		<include refid="has_Notice_SUCCESS"/>
		, /**是否打印**/WBR.status AS RFC_STATUS
        FROM PKP.T_SRV_WAYBILL WB 
	    	INNER JOIN 
	    		PKP.T_SRV_ACTUAL_FREIGHT AF
			ON 
				WB.WAYBILL_NO= AF.WAYBILL_NO 
			LEFT JOIN pkp.t_srv_arrivesheet arrive 
	   		on arrive.waybill_no = WB.waybill_no 
	   		and arrive.active = #{active,jdbcType=VARCHAR}
	   	    and arrive.destroyed ='N'
	   	    <include refid="select_beforeNotice_arrStatus_Where"/>
	   	    left join PKP.T_SRV_WAYBILLRFC WBR on WBR.WAYBILL_NO = WB.WAYBILL_NO 
		  	 AND WBR.STATUS in
			<foreach collection="wbrStatus" index="index" item="wbr" open="(" separator="," close=")">
				 #{wbr,jdbcType=VARCHAR}
			</foreach>
	    <where>
			<if test="arrayWaybillNos !=null and arrayWaybillNos.length > 0">
    			WB.WAYBILL_NO IN
				<foreach collection="arrayWaybillNos" index="index" item="waybillNo" open="(" separator="," close=")">
					#{waybillNo}
				</foreach>
    		</if>
			<include refid="select_beforeNotice_default_Where"/>
		</where>
		<!-- 新增排序-239284 -->
		order by WB.GOODS_WEIGHT_TOTAL DESC, WB.GOODS_VOLUME_TOTAL DESC, WB.TO_PAY_AMOUNT DESC
	</select> 
	<!--add by 329757  计划到达通知查询-按运单号查询-->
	<select id="getArriveNoticeForWaybillNos" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" resultMap="notifyMap">
		select /*模块：接送货-计划到达通知- 计划到达通知-按运单号查询 */
		<include refid="Base_Column_List" />
		WB.CUSTOMER_PICKUP_ORG_NAME,<!-- 到达部门 -->
		WB.CUSTOMER_PICKUP_ORG_CODE,<!-- 新增到达部门code -->
		AF.NOTIFICATION_ORG_CODE,<!--通知部门 -->
		WB.PRE_CUSTOMER_PICKUP_TIME AS PRE_CUSTOMER_PICKUP_TIME,<!-- 承诺到达时间 -->
		WB.RECEIVE_ORG_NAME,<!-- 收货部门 -->
		arrive.IS_PRINTED as isPrinted
		<include refid="has_Notice_SUCCESS"/>
		, /**是否打印**/WBR.status AS RFC_STATUS
        FROM PKP.T_SRV_WAYBILL WB 
             INNER JOIN PKP.T_SRV_ACTUAL_FREIGHT AF
                    ON WB.WAYBILL_NO = AF.WAYBILL_NO
			LEFT JOIN pkp.t_srv_arrivesheet arrive 
	   		on arrive.waybill_no = WB.waybill_no 
	   		and arrive.active = #{active,jdbcType=VARCHAR}
	   	    and arrive.destroyed ='N' 
	   	    and arrive.SIGN_STATUS!='SIGN_STATUS_ALL'
	   	    <include refid="select_beforeNotice_arrStatus_Where"/>
	   	    left join PKP.T_SRV_WAYBILLRFC WBR on WBR.WAYBILL_NO = WB.WAYBILL_NO 
	  		AND WBR.STATUS in
			<foreach collection="wbrStatus" index="index" item="wbr" open="(" separator="," close=")">
				 #{wbr,jdbcType=VARCHAR}
			</foreach>
	    <where>
	    	WB.GOODS_WEIGHT_TOTAL!=0 AND WB.GOODS_VOLUME_TOTAL!=0
			<if test="arrayWaybillNos !=null and arrayWaybillNos.length > 0">
    			AND WB.WAYBILL_NO IN
				<foreach collection="arrayWaybillNos" index="index" item="waybillNo" open="(" separator="," close=")">
					#{waybillNo}
				</foreach>
    		</if>
			<include refid="select_arriveNotice_default_Where"/>
		</where>
		<!-- 新增排序-239284 -->
		order by WB.GOODS_WEIGHT_TOTAL DESC, WB.GOODS_VOLUME_TOTAL DESC, WB.TO_PAY_AMOUNT DESC
	</select> 
	<!-- 派送提前通知查询-交接单号-->
	<select id="selectBeforeNoticeByHandoverNo" resultMap="notifyMap" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" >
	    select /*模块：接送货-通知客户管理- 运单通知列表查询-交接单号 */
			<include refid="Base_Column_List" />
			<include refid="Other_Column_List" />
			<include refid="has_Notice_SUCCESS"/>
			,A.VEHICLEASSEMBLE_NO AS VEHICLEASSEMBLE_NO
			,WBR.status AS RFC_STATUS,arrive.IS_PRINTED as isPrinted /**是否打印**/
			<!-- 交接单主表，交接单明细表，单据明细，任务车辆明细， 运单表，运单附属表 -->
	    FROM TFR.T_OPT_HANDOVERBILL HB
			INNER JOIN 
				TFR.T_OPT_HANDOVERBILL_DETAIL HBD
			ON
				HB.HANDOVER_NO = HBD.HANDOVER_NO
			INNER JOIN 	
				TFR.T_OPT_TRUCK_TASK_BILL TTB 
			ON
				HB.HANDOVER_NO = TTB.BILL_NO
			INNER JOIN
				TFR.T_OPT_TRUCK_TASK_DETAIL TTD
			ON
				TTB.TRUCK_TASK_DETAIL_ID = TTD.ID
			INNER JOIN
				PKP.T_SRV_WAYBILL WB
			ON
				HBD.WAYBILL_NO = WB.WAYBILL_NO
			INNER JOIN
				PKP.T_SRV_ACTUAL_FREIGHT AF
			ON
				WB.WAYBILL_NO= AF.WAYBILL_NO
	       left JOIN 	
	       (SELECT VAB.VEHICLEASSEMBLE_NO,VABD.HANDOVER_NO FROM  TFR.T_OPT_VEHICLEASSEMBLE_DETAIL VABD
                  INNER JOIN TFR.T_OPT_VEHICLEASSEMBLEBILL VAB
                    ON VAB.ID = VABD.VEHICLEASSEMBLEBILL_ID
                  WHERE   VAB.STATE != 90
	    	) A  ON  A.HANDOVER_NO = HB.HANDOVER_NO	
			<!--left JOIN 
				TFR.T_OPT_VEHICLEASSEMBLE_DETAIL VABD
			ON  VABD.HANDOVER_NO = HB.HANDOVER_NO
			 left join TFR.T_OPT_VEHICLEASSEMBLEBILL VAB  
			on VAB.ID = VABD.VEHICLEASSEMBLEBILL_ID
				and VAB.State!=90-->
			LEFT JOIN pkp.t_srv_arrivesheet arrive 
	   		on arrive.waybill_no = WB.waybill_no 
	   		and arrive.active = #{active,jdbcType=VARCHAR}
	   	    and arrive.destroyed ='N'
	   	    <include refid="select_beforeNotice_arrStatus_Where"/>
	   	    left join PKP.T_SRV_WAYBILLRFC WBR on WBR.WAYBILL_NO = WB.WAYBILL_NO 
		  	 AND WBR.STATUS in
			<foreach collection="wbrStatus" index="index" item="wbr" open="(" separator="," close=")">
				 #{wbr,jdbcType=VARCHAR}
			</foreach>
	    <where>
			<if test="handoverNo != null and handoverNo != ''" >
				HB.HANDOVER_NO=#{handoverNo,jdbcType=VARCHAR}
	    	</if>
	    	AND HB.HANDOVERBILL_STATE!=90
			<include refid="select_planArriveTime_Where"/>
			<include refid="select_truck_task_Where"/>
			<include refid="select_beforeNotice_default_Where"/>
		</where>
		 order by WB.GOODS_WEIGHT_TOTAL DESC, WB.GOODS_VOLUME_TOTAL DESC, WB.TO_PAY_AMOUNT DESC
	</select>
	<!-- 运单通知列表查询-车次号-->
	<select id="selectBeforeNoticeByVehicleAssembleNo" resultMap="notifyMap" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" >
	    select /*模块：接送货-通知客户管理- 运单通知列表查询-车次号 */
			<include refid="Base_Column_List" />
			<include refid="Other_Column_List" />
			<include refid="has_Notice_SUCCESS"/>
			,VAB.VEHICLEASSEMBLE_NO AS VEHICLEASSEMBLE_NO,WBR.status AS RFC_STATUS,<!--更改单状态-->
			arrive.IS_PRINTED as isPrinted /**是否打印**/
			<!-- 汽运配载单，汽运配载单明细，交接单主表，交接单明细表，单据明细，任务车辆明细， 运单表，运单附属表 -->
	    FROM TFR.T_OPT_VEHICLEASSEMBLEBILL VAB
			INNER JOIN 
				TFR.T_OPT_VEHICLEASSEMBLE_DETAIL VABD
			ON
				VAB.ID = VABD.VEHICLEASSEMBLEBILL_ID
			INNER JOIN 
				TFR.T_OPT_HANDOVERBILL HB
			ON
				VABD.HANDOVER_NO = HB.HANDOVER_NO
			INNER JOIN 
	    		TFR.T_OPT_HANDOVERBILL_DETAIL HBD
			ON
				HB.HANDOVER_NO = HBD.HANDOVER_NO
			INNER JOIN 	
				TFR.T_OPT_TRUCK_TASK_BILL TTB
			ON
				HB.HANDOVER_NO = TTB.BILL_NO
			INNER JOIN
				TFR.T_OPT_TRUCK_TASK_DETAIL TTD
			ON
				TTB.TRUCK_TASK_DETAIL_ID = TTD.ID
			INNER JOIN 		
				PKP.T_SRV_WAYBILL WB
			ON
				HBD.WAYBILL_NO = WB.WAYBILL_NO
			INNER JOIN 		
				PKP.T_SRV_ACTUAL_FREIGHT AF
			ON
				WB.WAYBILL_NO= AF.WAYBILL_NO
			LEFT JOIN pkp.t_srv_arrivesheet arrive 
	   		on arrive.waybill_no = WB.waybill_no 
	   		and arrive.active = #{active,jdbcType=VARCHAR}
	   	    and arrive.destroyed ='N'
	   	    <include refid="select_beforeNotice_arrStatus_Where"/>
	   	    left join PKP.T_SRV_WAYBILLRFC WBR on WBR.WAYBILL_NO = WB.WAYBILL_NO 
		  	 AND WBR.STATUS in
			<foreach collection="wbrStatus" index="index" item="wbr" open="(" separator="," close=")">
				 #{wbr,jdbcType=VARCHAR}
			</foreach>
	    <where>
			<!-- <if test="vehicleAssembleNo != null and vehicleAssembleNo != ''" >
				VAB.VEHICLEASSEMBLE_NO=#{vehicleAssembleNo,jdbcType=VARCHAR}
				and VAB.State!=90
	    	</if> -->
	    	<!--  -->
	    	<include refid="select_vehicleAssembleNo_Where" />
	    	AND HB.HANDOVERBILL_STATE!=90
			<include refid="select_truck_task_Where"/>
			<include refid="select_beforeNotice_default_Where"/>
			<include refid="select_planArriveTime_Where"/>
		</where>
		 order by WB.GOODS_WEIGHT_TOTAL DESC, WB.GOODS_VOLUME_TOTAL DESC, WB.TO_PAY_AMOUNT DESC
	</select>
	<!-- 根据计划到达时间查询运单通知信息  add by 329757 -->
	<select id="getArriveNoticeForPlanArriveTime" resultMap="notifyMap" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" >
	  select /*模块：接送货-通知客户管理- 运单通知列表查询-计划到达时间 */
			<include refid="Base_Column_List" />
			WB.CUSTOMER_PICKUP_ORG_CODE,<!-- 新增到达部门code -->
		AF.NOTIFICATION_ORG_CODE,<!-- 通知部门 -->
		WB.PRE_CUSTOMER_PICKUP_TIME AS PRE_CUSTOMER_PICKUP_TIME,<!--承诺到达时间 -->
		WB.RECEIVE_ORG_NAME,<!-- 收货部门 -->
		WB.CUSTOMER_PICKUP_ORG_NAME<!--到达部门 -->
			<include refid="has_Notice_SUCCESS"/>
			,WBR.status AS RFC_STATUS,arrive.IS_PRINTED as isPrinted /**是否打印**/ 
	    FROM  PKP.T_SRV_WAYBILL WB
			INNER JOIN 		
				PKP.T_SRV_ACTUAL_FREIGHT AF
			ON
				WB.WAYBILL_NO= AF.WAYBILL_NO
			LEFT JOIN pkp.t_srv_arrivesheet arrive 
	   		on arrive.waybill_no = WB.waybill_no 
	   		and arrive.active = #{active,jdbcType=VARCHAR}
	   	    and arrive.destroyed ='N'
	   	    and arrive.SIGN_STATUS!='SIGN_STATUS_ALL'
	   	    <include refid="select_beforeNotice_arrStatus_Where"/>
	   	    left join PKP.T_SRV_WAYBILLRFC WBR on WBR.WAYBILL_NO = WB.WAYBILL_NO 
		  	 AND WBR.STATUS in
			<foreach collection="wbrStatus" index="index" item="wbr" open="(" separator="," close=")">
				 #{wbr,jdbcType=VARCHAR}
			</foreach>
	    <where>
	    	WB.GOODS_WEIGHT_TOTAL!=0 AND WB.GOODS_VOLUME_TOTAL!=0 
			<!-- HB.HANDOVERBILL_STATE!=90 -->
			<include refid="select_status_Where2"/>
			<include refid="select_preArriveTime_Where"/>
			<include refid="select_arriveNotice_default_Where"/>
		</where>
		 order by WB.pre_arrive_time DESC
	</select>
	<!-- 根据实际到达时间查询运单通知信息  add by 329757 -->
	<select id="getArriveNoticeForArriveTime" resultMap="notifyMap" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" >
	    select /*模块：接送货-通知客户管理- 运单通知列表查询-实际到达时间 */
			<include refid="Base_Column_List" />
			 <!-- HB.DEST_ORG_CODE, 到达部门 -->
			 WB.CUSTOMER_PICKUP_ORG_NAME,<!--到达部门 -->
		AF.NOTIFICATION_ORG_CODE,<!--  通知部门 -->
		WB.CUSTOMER_PICKUP_ORG_CODE,<!-- 新增到达部门code -->
		WB.PRE_CUSTOMER_PICKUP_TIME AS PRE_CUSTOMER_PICKUP_TIME,<!-- 承诺到达时间 -->
			<!-- <include refid="Other_Column_List" /> -->
			TTD.ACTUAL_ARRIVE_TIME<!-- 实际到达时间-->
			<include refid="has_Notice_SUCCESS"/>
			,WBR.status AS RFC_STATUS,arrive.IS_PRINTED as isPrinted /**是否打印**/
			<!-- 交接单主表，交接单明细表，单据明细，任务车辆明细， 运单表，运单附属表 -->
	    FROM TFR.T_OPT_HANDOVERBILL HB
			INNER JOIN 
				TFR.T_OPT_HANDOVERBILL_DETAIL HBD
			ON
				HB.HANDOVER_NO = HBD.HANDOVER_NO
			INNER JOIN 	
				TFR.T_OPT_TRUCK_TASK_BILL TTB 
			ON
				HB.HANDOVER_NO = TTB.BILL_NO
			INNER JOIN
				TFR.T_OPT_TRUCK_TASK_DETAIL TTD
			ON
				TTB.TRUCK_TASK_DETAIL_ID = TTD.ID
			INNER JOIN
				PKP.T_SRV_WAYBILL WB
			ON
				HBD.WAYBILL_NO = WB.WAYBILL_NO
			INNER JOIN
				PKP.T_SRV_ACTUAL_FREIGHT AF
			ON
				WB.WAYBILL_NO= AF.WAYBILL_NO
			LEFT JOIN pkp.t_srv_arrivesheet arrive 
	   		on arrive.waybill_no = WB.waybill_no 
	   		and arrive.active = #{active,jdbcType=VARCHAR}
	   	    and arrive.destroyed ='N'
	   	    and arrive.SIGN_STATUS!='SIGN_STATUS_ALL'
	   	    <include refid="select_beforeNotice_arrStatus_Where"/>
	   	    left join PKP.T_SRV_WAYBILLRFC WBR on WBR.WAYBILL_NO = WB.WAYBILL_NO 
		  	 AND WBR.STATUS in
			<foreach collection="wbrStatus" index="index" item="wbr" open="(" separator="," close=")">
				 #{wbr,jdbcType=VARCHAR}
			</foreach>
	    <where>
	    	WB.GOODS_WEIGHT_TOTAL!=0 AND WB.GOODS_VOLUME_TOTAL!=0 
	    	AND HB.HANDOVERBILL_STATE!=90
			<!-- AND HB.HANDOVERBILL_STATE=40  -->
			AND HB.DEST_ORG_NAME = #{outName,jdbcType=VARCHAR} 
			<include refid="select_status_Where2"/>
			<include refid="select_arriveTime_Where2"/>
			<!-- <include refid="select_truck_task_Where"/> -->
			<include refid="select_arriveNotice_default_Where"/>
		</where>
		 order by WB.GOODS_WEIGHT_TOTAL DESC, WB.GOODS_VOLUME_TOTAL DESC, WB.TO_PAY_AMOUNT DESC
	</select>
	<!-- 根据通知时间查询运单通知信息  add by 329757 -->
	<select id="getArriveNoticeForNoticeTime" resultMap="notifyMap" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" >
	    select /*模块：接送货-通知客户管理- 运单通知列表查询-通知时间 */
			<include refid="Base_Column_List" />
			WB.CUSTOMER_PICKUP_ORG_NAME,<!-- 到达部门 -->
			WB.CUSTOMER_PICKUP_ORG_CODE,<!-- 新增到达部门code -->
		AF.NOTIFICATION_ORG_CODE,<!-- 通知部门 -->
		WB.PRE_CUSTOMER_PICKUP_TIME AS PRE_CUSTOMER_PICKUP_TIME,<!-- 承诺到达时间 -->
		WB.RECEIVE_ORG_NAME<!-- 收货部门 -->
			<include refid="has_Notice_SUCCESS"/>
			,WBR.status AS RFC_STATUS,arrive.IS_PRINTED as isPrinted /**是否打印**/

	    FROM PKP.T_SRV_WAYBILL WB
			
			INNER JOIN
				PKP.T_SRV_ACTUAL_FREIGHT AF
			ON
				WB.WAYBILL_NO= AF.WAYBILL_NO 
			LEFT JOIN pkp.t_srv_arrivesheet arrive 
	   		on arrive.waybill_no = WB.waybill_no 
	   		and arrive.active = #{active,jdbcType=VARCHAR}
	   	    and arrive.destroyed ='N'
	   	    and arrive.SIGN_STATUS!='SIGN_STATUS_ALL'
	   	    <include refid="select_beforeNotice_arrStatus_Where"/>
	   	    left join PKP.T_SRV_WAYBILLRFC WBR on WBR.WAYBILL_NO = WB.WAYBILL_NO 
		  	 AND WBR.STATUS in
			<foreach collection="wbrStatus" index="index" item="wbr" open="(" separator="," close=")">
				 #{wbr,jdbcType=VARCHAR}
			</foreach>
	    <where>
	    	WB.GOODS_WEIGHT_TOTAL!=0 AND WB.GOODS_VOLUME_TOTAL!=0 
	    	AND AF.NOTIFICATION_ORG_CODE=#{lastLoadOrgCode,jdbcType=VARCHAR}
			<include refid="select_status_Where2"/>
			<include refid="select_noticeTime_Where"/>
			<include refid="select_arriveNotice_default_Where"/>
		</where>
		 order by WB.GOODS_WEIGHT_TOTAL DESC, WB.GOODS_VOLUME_TOTAL DESC, WB.TO_PAY_AMOUNT DESC
	</select>
	<!-- add by 329757 根据运单号查询运单是否在库存表中  如果在  查询当前库存部门名称 -->
	<select id="getOrgNameByWaybillNo" resultType="String" parameterType="java.lang.String" >
		select *	/**根据运单号查询运单是否在库存表中  如果在  查询当前库存部门名称**/
			from (select bo.name
							FROM   tfr.t_opt_stock ws 
		          INNER JOIN BSE.T_BAS_ORG bo ON bo.code=ws.org_code
	            	WHERE
			ws.waybill_no=#{waybillNo,jdbcType=VARCHAR}
						 order by ws.in_stock_time desc)
		where rownum = 1
	</select>
	<!-- add by 329757 根据运单号查询最新一条交接单记录-->
	<select id="selectOneHandoverBillState" resultType="Integer" parameterType="java.lang.Integer" >
					select *	/**根据运单号查询最新一条交接单记录**/
			from (select HB.HANDOVERBILL_STATE 
							 FROM PKP.T_SRV_WAYBILL WB 
        	INNER JOIN TFR.T_OPT_HANDOVERBILL_DETAIL HBD
                    ON HBD.WAYBILL_NO = WB.WAYBILL_NO
             INNER JOIN TFR.T_OPT_HANDOVERBILL HB 
					ON HB.HANDOVER_NO = HBD.HANDOVER_NO
			 WHERE WB.waybill_no=#{waybillNo,jdbcType=VARCHAR} AND WB.ACTIVE='Y'
						 order BY HB.CREATE_TIME DESC)
		where rownum = 1
	</select>
	<!-- add by 329757 根据运单号查询交接单中的始发部门-->
	<select id="selectOneOrigOrgName" resultType="String" parameterType="java.lang.String" >
					select *	/**根据运单号查询交接单中的始发部门**/
			from (select HB.ORIG_ORG_NAME 
							 FROM PKP.T_SRV_WAYBILL WB 
        	INNER JOIN TFR.T_OPT_HANDOVERBILL_DETAIL HBD
                    ON HBD.WAYBILL_NO = WB.WAYBILL_NO
             INNER JOIN TFR.T_OPT_HANDOVERBILL HB 
					ON HB.HANDOVER_NO = HBD.HANDOVER_NO
			 WHERE WB.waybill_no=#{waybillNo,jdbcType=VARCHAR} AND WB.ACTIVE='Y'
						 order BY HB.CREATE_TIME DESC)
		where rownum = 1
	</select>
	<!-- add by 329757 根据运单号查询交接单中的到达部门-->
	<select id="selectOneDestOrgName" resultType="String" parameterType="java.lang.String" >
					select *	/**根据运单号查询交接单中的到达部门**/
			from (select HB.DEST_ORG_NAME 
							 FROM PKP.T_SRV_WAYBILL WB 
        	INNER JOIN TFR.T_OPT_HANDOVERBILL_DETAIL HBD
                    ON HBD.WAYBILL_NO = WB.WAYBILL_NO
             INNER JOIN TFR.T_OPT_HANDOVERBILL HB 
					ON HB.HANDOVER_NO = HBD.HANDOVER_NO
			 WHERE WB.waybill_no=#{waybillNo,jdbcType=VARCHAR} AND WB.ACTIVE='Y'
						 order BY HB.CREATE_TIME DESC)
		where rownum = 1
	</select>
	<!-- add by 329757 根据运单号查询到达联状态-->
	<select id="selectArriveSheetStatus" resultType="String" parameterType="java.lang.String" >
		select * from (SELECT /**根据运单号查询到达联状态**/ a.STATUS FROM PKP.T_SRV_ARRIVESHEET a 
		WHERE a.waybill_no=#{waybillNo,jdbcType=VARCHAR} AND a.active='Y' order by a.CREATE_TIME DESC) where rownum = 1
	</select>
	<!-- add by 329757 根据运单号查询到达联部门-->
	<select id="selectArriveSheetAddress" resultType="String" parameterType="java.lang.String" >
		select * from (SELECT /**根据运单号查询到达联部门**/ a.CREATE_ORG_NAME FROM PKP.T_SRV_ARRIVESHEET a 
		WHERE a.waybill_no=#{waybillNo,jdbcType=VARCHAR} AND a.active='Y' order by a.CREATE_TIME DESC) where rownum = 1
	</select>
	<!-- add by 329757 根据运单号查询到达联时间-->
	<select id="selectArriveSheetTime" resultType="Date" parameterType="java.util.Date" >
		select * from (SELECT /** 根据运单号查询到达联时间**/ a.CREATE_TIME FROM PKP.T_SRV_ARRIVESHEET a 
		WHERE a.waybill_no=#{waybillNo,jdbcType=VARCHAR} AND a.active='Y' order by a.CREATE_TIME DESC) where rownum = 1
	</select>
	<!-- add by 329757 查询所属部门的外场-->
	<select id="selectOutNameByOrgName" resultType="String" parameterType="java.lang.String" >
		SELECT * FROM (SELECT /**查询所属部门的外场**/ TC.NAME FROM  BSE.T_BAS_ORG bo 
		INNER JOIN BSE.T_BAS_TRANSFER_CENTER TC ON bo.deliver_outfield=TC.ORG_CODE WHERE bo.Code=#{orgCode,jdbcType=VARCHAR} 
		AND bo.transfer_center='N' ORDER BY TC.Create_Time DESC) WHERE Rownum=1
	</select>
	<!-- add by 329757 根据运单号查询实际到达时间-->
	<select id="selectOneActualArriveTime" resultType="Date" parameterType="java.util.Date" >
			SELECT *
				  FROM (SELECT AF.ARRIVE_TIME
				          FROM PKP.T_SRV_ACTUAL_FREIGHT AF
				         WHERE AF.WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
				         ORDER BY AF.ARRIVE_TIME DESC)
				 WHERE ROWNUM = 1
	</select>
	
	<!-- 运单明细信息 -->
	<sql id="beforeNotice_Column_List">
		WB.WAYBILL_NO AS WAYBILL_NO, <!-- 运单表.运单号 -->
		WB.GOODS_NAME AS GOODS_NAME,<!-- 运单表.货物名称-->
		WB.RECEIVE_CUSTOMER_CONTACT AS RECEIVE_CUSTOMER_CONTACT, <!-- 运单表.联系人 -->
		WB.INSURANCE_AMOUNT / 100 AS INSURANCE_AMOUNT,<!-- 运单表.保价声明价值-->
		WB.RECEIVE_CUSTOMER_PHONE AS RECEIVE_CUSTOMER_PHONE,<!-- 运单表.联系手机 -->
		WB.GOODS_QTY_TOTAL AS GOODS_QTY_TOTAL,<!-- 运单表.开单件数 -->
		WB.RECEIVE_CUSTOMER_MOBILEPHONE AS RECEIVE_CUSTOMER_MOBILEPHONE,<!-- 运单表.联系电话 -->
		WS.STOCK_GOODS_QTY AS STOCK_GOODS_QTY, <!-- 库存表.库存件数 -->
		WB.RECEIVE_CUSTOMER_ADDRESS AS RECEIVE_CUSTOMER_ADDRESS,<!-- 运单表.收货地址 -->
		WB.GOODS_PACKAGE AS GOODS_PACKAGE,<!-- 运单表.包装-->
		WB.GOODS_WEIGHT_TOTAL AS GOODS_WEIGHT_TOTAL,<!-- 运单表.货物总重量-->
		WB.GOODS_VOLUME_TOTAL AS GOODS_VOLUME_TOTAL,<!-- 运单表.货物总体积-->
		WB.GOODS_SIZE AS GOODS_SIZE,<!-- 运单表.货物尺寸-->
		WB.TRANSPORT_FEE / 100 AS TRANSPORT_FEE,<!-- 运单表.公布价运费-->
		WB.RECEIVE_ORG_CODE AS RECEIVE_ORG_CODE,<!-- 运单表.收货部门-->
		WB.DELIVERY_GOODS_FEE  / 100AS DELIVERY_GOODS_FEE,<!-- 运单表.送货费-->
		WB.DELIVERY_CUSTOMER_CONTACT AS DELIVERY_CUSTOMER_CONTACT,<!-- 运单表.发货客户联系人-->
		WB.OTHER_FEE / 100 AS OTHER_FEE,<!-- 运单表.其他费用-->
		WB.DELIVERY_CUSTOMER_PHONE DELIVERY_CUSTOMER_PHONE,<!-- 发货客户电话 -->
		WB.INSURANCE_FEE / 100 AS INSURANCE_FEE,<!-- 运单表.保价费-->
		WB.DELIVERY_CUSTOMER_MOBILEPHONE DELIVERY_CUSTOMER_MOBILEPHONE,<!-- 发货客户手机 -->
		WB.COD_AMOUNT / 100 AS COD_AMOUNT,<!-- 运单表.代收货款-->
		WB.PRODUCT_CODE AS PRODUCT_CODE,<!-- 运单表.运输性质-->
		WB.TO_PAY_AMOUNT / 100 AS TO_PAY_AMOUNT,<!-- 运单表.到付金额-->
		WB.RECEIVE_METHOD AS RECEIVE_METHOD,<!-- 运单表.派送方式 -->
		WB.PACKAGE_FEE/100 PACKAGE_FEE,<!-- 包装费 -->
		WB.PAID_METHOD AS PAID_METHOD,<!-- 运单表.开单付款方式-->
		WB.TRANSPORTATION_REMARK TRANSPORTATION_REMARK, <!-- 储运事项 -->
		AF.STATUS AS STATUS,<!-- 运单关联表.运单状态 -->
		AF.ARRIVE_GOODS_QTY AS ARRIVE_GOODS_QTY,<!-- 运单关联表.到达件数-->	
		AF.RECEIVE_CUSTOMER_ADDRESS_NOTE RECEIVE_CUSTOMER_ADDRESS_NOTE,	<!-- 运单关联表.到达地址备注-->	
		AF.STORAGE_CHARGE / 100 AS STORAGE_CHARGE,<!-- 运单关联表.仓储费-->
		AF.STORAGE_DAY AS STORAGE_DAY,<!-- 运单关联表.在库天数-->
		TRUNC(SYSDATE - (AF.NOTIFICATION_TIME + 0)) AS NOTIFICATION_TIME_SPACE, <!-- 最后通知日期与当前日期的间隔天数-->
		WB.CONTACT_ADDRESS_ID AS CONTACT_ADDRESS_ID, <!-- 送货人地址ID-->
		WB.CUSTOMER_PICKUP_ORG_CODE AS customerPickupOrgCode, <!-- 运单表.提货网点 -->
		WB.RECEIVE_CUSTOMER_PROV_CODE AS RECEIVE_CUSTOMER_PROV_CODE, <!-- 运单表.省CODE -->
		WB.RECEIVE_CUSTOMER_CITY_CODE AS RECEIVE_CUSTOMER_CITY_CODE, <!-- 运单表.市CODE -->
		WB.RECEIVE_CUSTOMER_DIST_CODE AS RECEIVE_CUSTOMER_DIST_CODE, <!-- 运单表.区CODE -->
		WB.LOAD_ORG_CODE AS LOAD_ORG_CODE,<!-- 运单表.配载部门-->
		AF.NOTIFICATION_TIME AS NOTIFICATION_TIME,<!-- 运单表.最后通知时间-->
		WB.RECEIVE_CUSTOMER_CODE AS RECEIVE_CUSTOMER_CODE,<!-- 运单表.收货客户编码-->
		WB.RECEIVE_CUSTOMER_NAME AS RECEIVE_CUSTOMER_NAME,<!-- 运单表.收货客户名称 -->
		WB.CREATE_ORG_CODE AS CREATE_ORG_CODE,<!-- 运单表.开单组织-->
		WB.BILL_TIME as billtime, <!-- 运单表.开单时间-->
		WB.Last_Load_Org_Code as lastLoadOrgCode <!-- 运单表.最终配载部门-->
	</sql>
	<!-- 查询派送提前通知运单明细 -->
	<select id="selectBeforeNoticeDetailByWayBillNo" resultMap="notifyMap" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto" >
		 select /*模块：接送货-派送提前通知- 查询运单明细 */
			<include refid="beforeNotice_Column_List" />
			,WB.PICKUP_FEE/100 AS pickupFee<!-- 运单表 .接货费  -->
			<!-- 运单表，运单附属表 -->
	    FROM PKP.T_SRV_WAYBILL WB 
	    	INNER JOIN 
	    		PKP.T_SRV_ACTUAL_FREIGHT AF
			ON 
				WB.WAYBILL_NO= AF.WAYBILL_NO 
			left join TFR.T_OPT_WAYBILL_STOCK WS 
			ON
			    WB.WAYBILL_NO = WS.WAYBILL_NO
			 <!-- 最后库存code=库存的部门编码 -->
			<if test="endStockOrgCode != null and endStockOrgCode !=''">	
			<![CDATA[ and WS.ORG_CODE  = #{endStockOrgCode, jdbcType=VARCHAR}]]>
			</if>
			<!-- 库区-->
			<!--add by chenjunying DMANA-9499 判断保留之前的条件，新加多库区查询条件-->
			<if test="goodsAreaCode != null and goodsAreaCode !=''">	
			<![CDATA[ AND WS.GOODS_AREA_CODE = #{goodsAreaCode, jdbcType=VARCHAR}]]>
			</if>
		    <if test="goodsAreaCodes!= null and goodsAreaCodes.size>0">
		    and ws.GOODS_AREA_CODE  in
		    <foreach collection="goodsAreaCodes" open="(" close=")" separator=","
			item="mgoodsAreaCode">
       	      #{mgoodsAreaCode,jdbcType=VARCHAR}
		    </foreach>
            </if>
	    <where>
	    	<choose>
	    		<when test=" waybillNo != null  and waybillNo != ''  ">
	    			WB.WAYBILL_NO=#{waybillNo,jdbcType=VARCHAR}
	    		</when>
	    		<otherwise>
	    			WB.WAYBILL_NO = ''
	    		</otherwise>
	    	</choose>
	    	<!-- 运单版本 -->
			<if test="active != null and active !=''">	
			<![CDATA[ and WB.ACTIVE  = #{active, jdbcType=VARCHAR}]]>
			</if>
		</where>
	</select>
	<!-- 运单库存查询 -->
	<select id="waybillStockQuery"  parameterType="com.deppon.foss.module.transfer.stock.api.shared.domain.WaybillStockEntity" resultType="java.lang.String">
		SELECT WAYBILL_NO
		FROM pkp.t_srv_actual_freight af 
		where af.WAYBILL_NO in
		<foreach collection="arrayWaybillNos" open="(" close=")" separator="," index="index" item="item">
			#{item}
		</foreach>
		and not exists ( select 1 from tfr.t_opt_waybill_stock ws where ws.waybill_no = af.waybill_no
			<!-- 最后库存code=库存的部门编码 -->
			<if test="endStockOrgCode != null and endStockOrgCode !=''">	
				<![CDATA[ and WS.ORG_CODE  = #{endStockOrgCode, jdbcType=VARCHAR}]]>
			</if>
			<!-- 库区-->
			<!--add by chenjunying DMANA-9499 判断保留之前的条件，新加多库区查询条件-->
			<if test="goodsAreaCode != null and goodsAreaCode !=''">	
				<![CDATA[ AND WS.GOODS_AREA_CODE = #{goodsAreaCode, jdbcType=VARCHAR}]]>
			</if>
		    <if test="goodsAreaCodes!= null and goodsAreaCodes.size>0">
 		    and ws.GOODS_AREA_CODE  in
		    <foreach collection="goodsAreaCodes" open="(" close=")" separator=","
			item="mgoodsAreaCode">
       	      #{mgoodsAreaCode,jdbcType=VARCHAR}
		    </foreach>
    </if>
		)
		
	</select>
	<!--多票合送  -->
	<update id="mergeNoticeWaybill" parameterType="map" >
		update pkp.t_srv_actual_freight set TOGETHER_SEND_CODE= #{code} , TOGETHER_SEND_MARK=#{mark},MODIFY_TIME= SYSDATE where waybill_no = #{bill} and TOGETHER_SEND_CODE is null
	</update>
	<!-- 解绑多单合送 -->
	<update id="relieveNoticeWaybill"  parameterType="java.util.List" >
		update pkp.t_srv_actual_freight set TOGETHER_SEND_CODE=null, TOGETHER_SEND_MARK=null,MODIFY_TIME= SYSDATE
		<where>
			<choose>
	    		<when test="list !=null and list.size()> 0">
	    			WAYBILL_NO IN
					<foreach collection="list" index="index" item="waybillNo" open="(" separator="," close=")">
						#{waybillNo}
					</foreach>
	    		</when>
	    		<otherwise>
	    			WAYBILL_NO = ''
	    		</otherwise>
	    	</choose>
	    	and TOGETHER_SEND_CODE is not null
		</where>
	</update>
	<resultMap id="multiMap" type="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyMultibillDto">
		<result property="receiveCustomerCode" column="RECEIVE_CUSTOMER_CODE" jdbcType = "VARCHAR" />
		<result property="waybillNo" column="WAYBILL_NO" jdbcType = "VARCHAR" />
		<result property="receiveCustomerContact" column="RECEIVE_CUSTOMER_CONTACT" jdbcType = "VARCHAR"/>
		<result property="receiveCustomerMobilephone" column="RECEIVE_CUSTOMER_MOBILEPHONE" jdbcType = "VARCHAR" />
		<result property="receiveCustomerPhone" column="RECEIVE_CUSTOMER_PHONE" jdbcType = "VARCHAR" />
		<result property="receiveMethod" column="RECEIVE_METHOD" jdbcType = "VARCHAR" />
		<result property="receiveCustomerAddress" column="RECEIVE_CUSTOMER_ADDRESS" jdbcType = "VARCHAR" />
		<result property="stockGoodsQty" column="STOCK_GOODS_QTY" jdbcType = "DECIMAL" />
		<result property="planArriveTime" column="PLAN_ARRIVE_TIME" jdbcType = "TIMESTAMP" />
        <result property="status" column="STATUS" jdbcType = "VARCHAR" />
		<result column="RECEIVE_CUSTOMER_PROV_CODE" property="receiveCustomerProvCode" jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CITY_CODE" property="receiveCustomerCityCode" jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_DIST_CODE" property="receiveCustomerDistCode" jdbcType="VARCHAR" />
		<result column="PAID_METHOD" property="paidMethod" jdbcType="VARCHAR" />
		<result column="TASK_STATUS" property="taskStatus" jdbcType="VARCHAR" />
		<result column="TOGETHER_SEND_CODE" property="togetherSendCode" jdbcType="VARCHAR" />
		<result column="TOGETHER_SEND_MARK" property="togetherSendMark" jdbcType="VARCHAR" />
		<result column="pending_type" property="pendingType" jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_ADDRESS_NOTE" property="receiveCustomerAddressNote" jdbcType="VARCHAR" />
	</resultMap>
	
	<select id="getMultibillListByCustomer" resultMap="multiMap" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.NotifyCustomerConditionDto">
	SELECT /*模块：接送货-派送提前通知- 查询多票信息列表*/
		WB.RECEIVE_CUSTOMER_CODE,  <!-- 客户编码 -->
		 WB.WAYBILL_NO,    <!-- 运单号 -->
		 AF.STATUS AS STATUS,  <!-- 运单状态 -->
		 WB.PAID_METHOD AS PAID_METHOD, <!--付款方式  -->
		 WB.RECEIVE_CUSTOMER_CONTACT, <!-- 收货人 -->
		 WB.RECEIVE_CUSTOMER_MOBILEPHONE, <!--手机  -->
		 WB.RECEIVE_CUSTOMER_PHONE, <!-- 收货人电话 -->
		 AF.TOGETHER_SEND_CODE, <!-- 合送编码 -->
		 AF.TOGETHER_SEND_MARK, <!--合送标示  -->
		 WS.STOCK_GOODS_QTY, <!--库存件数  -->
		 WB.RECEIVE_CUSTOMER_PROV_CODE AS RECEIVE_CUSTOMER_PROV_CODE, <!--省份  --> 
		 WB.RECEIVE_CUSTOMER_CITY_CODE AS RECEIVE_CUSTOMER_CITY_CODE,  <!--城市  -->
		 WB.RECEIVE_CUSTOMER_DIST_CODE AS RECEIVE_CUSTOMER_DIST_CODE,      <!-- 区县 -->
		 TTT.PLAN_ARRIVE_TIME, <!--预计到达时间  -->
		 TTT.STATUS AS TASK_STATUS, <!--车辆状态  -->
		 WB.RECEIVE_METHOD AS RECEIVE_METHOD,<!-- 运单表.派送方式 -->
		 WB.RECEIVE_CUSTOMER_ADDRESS AS RECEIVE_CUSTOMER_ADDRESS,<!-- 运单表.收货地址 -->
		 AF.RECEIVE_CUSTOMER_ADDRESS_NOTE RECEIVE_CUSTOMER_ADDRESS_NOTE,<!-- 运单表.收货地址备注 -->
		 WB.pending_type
		  FROM PKP.T_SRV_WAYBILL WB
		 inner JOIN PKP.T_SRV_ACTUAL_FREIGHT AF ON WB.WAYBILL_NO = AF.WAYBILL_NO
		  LEFT JOIN (select TTD.PLAN_ARRIVE_TIME,
                    TTD.STATUS,
                    HBD.WAYBILL_NO
               from TFR.T_OPT_HANDOVERBILL H
              inner join TFR.T_OPT_HANDOVERBILL_DETAIL HBD
                 on H.Handover_No = HBD.HANDOVER_NO
                 <if test="endStockOrgCode != null and endStockOrgCode !=''">	
					<![CDATA[ and H.DEST_ORG_CODE  = #{endStockOrgCode, jdbcType=VARCHAR}]]>
				</if>
                AND H.HANDOVERBILL_STATE != 90
              INNER JOIN TFR.T_OPT_TRUCK_TASK_BILL TTB
                 ON HBD.HANDOVER_NO = TTB.BILL_NO
              INNER JOIN TFR.T_OPT_TRUCK_TASK_DETAIL TTD
                 ON TTB.TRUCK_TASK_DETAIL_ID = TTD.ID
                AND TTD.STATUS != 'CANCLED'
                 <if test="endStockOrgCode != null and endStockOrgCode !=''">	
					<![CDATA[ and TTD.DEST_ORG_CODE  = #{endStockOrgCode, jdbcType=VARCHAR}]]>
				</if>
                ) TTT
    ON TTT.WAYBILL_NO = WB.WAYBILL_NO
		  left join TFR.T_OPT_WAYBILL_STOCK WS ON WB.WAYBILL_NO = WS.WAYBILL_NO
		<if test="endStockOrgCode != null and endStockOrgCode !=''">	
		<![CDATA[  and WS.ORG_CODE = #{endStockOrgCode, jdbcType=VARCHAR}]]>
		</if>
		<!--add by chenjunying DMANA-9499 判断保留之前的条件，新加多库区查询条件-->
		  <if test="goodsAreaCode != null and goodsAreaCode !=''">	
			<![CDATA[ AND WS.GOODS_AREA_CODE = #{goodsAreaCode, jdbcType=VARCHAR}]]>
		</if>                                   
		<if test="goodsAreaCodes!= null and goodsAreaCodes.size>0">
		and ws.GOODS_AREA_CODE  in
		<foreach collection="goodsAreaCodes" open="(" close=")" separator=","
			item="mgoodsAreaCode">
       	      #{mgoodsAreaCode,jdbcType=VARCHAR}
		</foreach>
    </if>                               
		 WHERE  WB.ACTIVE = 'Y' and WB.BILL_TIME >= sysdate -10  /**开发测试用10天*/
		 and wb.receive_customer_code =#{notifyCustomerDto.receiveCustomerCode}
		 
		 <!-- 运输性质 等于 整车、精准汽运(短途)、精准城运、精准卡航、精准汽运(长途) -->
		<if test="productCodesContain !=null and productCodesContain.length > 0">
			AND WB.PRODUCT_CODE  IN
			<foreach collection="productCodesContain" index="index" item="productCodeTmp" open="(" separator="," close=")">
				#{productCodeTmp}
			</foreach>
		</if>
		 <include refid="select_beforeNotice_default_Where"/>
	
	</select>
	
	<!-- 查询通知记录表的送货要求(取最新的一条) --> 
	<select id="selectDeliverRequireByWaybillNo" parameterType="String" resultType="java.lang.String">
		select *
			from (select n.DELIVER_REQUIRE
							from PKP.T_SRV_NOTIFICATION n
						 where n.WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
						 order by n.OPERATE_TIME desc)
		where rownum = 1
	</select>
	
</mapper>