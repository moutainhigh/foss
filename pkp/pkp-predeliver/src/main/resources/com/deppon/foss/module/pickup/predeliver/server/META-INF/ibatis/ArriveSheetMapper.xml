<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deppon.foss.module.pickup.predeliver.api.shared.domain.ArriveSheetEntity">
	<resultMap id="BaseResultMap" type="com.deppon.foss.module.pickup.predeliver.api.shared.domain.ArriveSheetEntity">
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
    <result column="ARRIVESHEET_NO" property="arrivesheetNo" jdbcType="VARCHAR" />
    <result column="DELIVERYMAN_NAME" property="deliverymanName" jdbcType="VARCHAR" />
    <result column="IDENTIFY_TYPE" property="identifyType" jdbcType="VARCHAR" />
    <result column="IDENTIFY_CODE" property="identifyCode" jdbcType="VARCHAR" />
    <result column="SITUATION" property="situation" jdbcType="VARCHAR" />
    <result column="ARRIVE_SHEET_GOODS_QTY" property="arriveSheetGoodsQty" jdbcType="DECIMAL" />
    <result column="SIGN_NOTE" property="signNote" jdbcType="VARCHAR" />
    <result column="SIGN_TIME" property="signTime" jdbcType="TIMESTAMP" />
    <result column="IS_PRINTED" property="isPrinted" jdbcType="CHAR" />
    <result column="PRINTTIMES" property="printtimes" jdbcType="DECIMAL" />
    <result column="CREATE_USER_NAME" property="createUserName" jdbcType="VARCHAR" />
    <result column="CREATE_USER_CODE" property="createUserCode" jdbcType="VARCHAR" />
    <result column="CREATE_ORG_NAME" property="createOrgName" jdbcType="VARCHAR" />
    <result column="CREATE_ORG_CODE" property="createOrgCode" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="IS_PDA_SIGN" property="isPdaSign" jdbcType="CHAR" />
    <result column="SIGN_GOODS_QTY" property="signGoodsQty" jdbcType="DECIMAL" />
    <result column="ACTIVE" property="active" jdbcType="CHAR" />
    <result column="IS_SENT_REQUIRED" property="isSentRequired" jdbcType="CHAR" />
    <result column="IS_NEED_INVOICE" property="isNeedInvoice" jdbcType="CHAR" />
    <result column="PRE_NOTICE_CONTENT" property="preNoticeContent" jdbcType="VARCHAR" />
    <result column="DELIVER_REQUIRE" property="deliverRequire" jdbcType="VARCHAR" />
    <result column="IS_RFCING" property="isRfcing" jdbcType="CHAR" />
    <result column="OPERATE_TIME" property="operateTime" jdbcType="TIMESTAMP" />
    <result column="OPERATOR" property="operator" jdbcType="VARCHAR" />
    <result column="OPERATOR_CODE" property="operatorCode" jdbcType="VARCHAR" />
    <result column="OPERATE_ORG_NAME" property="operateOrgName" jdbcType="VARCHAR" />
    <result column="OPERATE_ORG_CODE" property="operateOrgCode" jdbcType="VARCHAR" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="SIGN_STATUS" property="signStatus" jdbcType="VARCHAR" />
    <result column="DESTROYED" property="destroyed" jdbcType="CHAR" />
    <result column="DELIVER_DATE" property="deliverDate" jdbcType="TIMESTAMP" />
    <result column="RECEIVE_METHOD" property="receiveMethod" jdbcType="VARCHAR" />
     <result column="together_Send_Code" property="togetherSendCode" jdbcType="VARCHAR" />
     <result column="DELIVERMAN_TYPE" property="deliverymanType" jdbcType="VARCHAR" />
     <!-- add by 231438 -->
     <result column="IS_COURIER_DELIVERY" property="isCourierDelivery" jdbcType="CHAR" />
     <result column="SEND_EXPRESS_EMP_CODE" property="sendExpressEmpCode" jdbcType="VARCHAR" />
     <result column="NEXT_DELIVER_TIME" property="nextDeliverTime" jdbcType="TIMESTAMP" />
	</resultMap>
	
	<resultMap type="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetDto" id="SelectByResult">
		<result column="ID" jdbcType="VARCHAR" property="id" />
		<result column="WAYBILL_NO" jdbcType="VARCHAR" property="waybillNo" />
		<result column="ARRIVESHEET_NO" jdbcType="VARCHAR" property="arrivesheetNo" />
		<result column="PRINTTIMES" jdbcType="NUMERIC" property="printtimes" />
		<result column="STATUS" jdbcType="VARCHAR" property="status" />
		<result column="ARRIVE_SHEET_GOODS_QTY" jdbcType="NUMERIC" property="arriveSheetGoodsQty" />
		<result column="GOODS_QTY_TOTAL" jdbcType="NUMERIC" property="goodsQtyTotal" />
		<result column="GOODS_NAME" jdbcType="VARCHAR" property="goodsName" />
		<result column="ARRANGE_GOODS_QTY" jdbcType="NUMERIC" property="arrangeGoodsGty" />
		<result column="RECEIVE_CUSTOMER_NAME" jdbcType="VARCHAR" property="receiveCustomerName" />
		<result column="ARRIVE_NOTOUT_GOODS_QTY" jdbcType="NUMERIC" property="arriveNotoutGoodsQty" />
		<result column="ACTIVE" jdbcType="VARCHAR" property="active"/>
		<result column="DESTROYED" jdbcType="VARCHAR" property="destroyed"/>
		<result column="PRINT_TIME" jdbcType="TIMESTAMP" property="printTime"/>
		<result column="PRINT_ORG_NAME" jdbcType="VARCHAR" property="printOrgName"/>
		<result column="PRINT_USER_NAME" jdbcType="VARCHAR" property="printUserName"/>
		<result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime"/>
	</resultMap>
  
	<resultMap id="arrivesheetResultMap" type="com.deppon.foss.module.pickup.predeliver.api.shared.dto.SignArriveSheetDto">
		<id column="ID" jdbcType="VARCHAR" property="id" /><!--id-->
		<result property="waybillNo" column="WAYBILL_NO" /><!--单号-->
		<result property="arrivesheetNo" column="ARRIVESHEET_NO" /><!--到达联编号-->
		<result property="arriveSheetGoodsQty" column="ARRIVE_SHEET_GOODS_QTY" /><!--到达联件数-->
		<result property="deliverymanName" column="DELIVERYMAN_NAME" /><!--提货人-->
		<result property="identifyCode" column="IDENTIFY_CODE" /><!--证件号码-->
		<result column="IDENTIFY_TYPE" jdbcType="VARCHAR" property="identifyType" /><!--证件类型-->
		<result column="IS_WHOLE_VEHICLE" property="isWholeVehicle" jdbcType="CHAR" /><!--是否整车运单-->
		<result column="PRODUCT_CODE" property="productCode" jdbcType="VARCHAR" /><!--运输性质 -->
		<result property="stockGoodsQty" column="STOCK_GOODS_QTY" jdbcType = "DECIMAL" /><!--库存件数-->
		<result column="ORDER_NO" property="orderNo" jdbcType="VARCHAR" /><!--订单号-->
		<result column="RECEIVE_CUSTOMER_CONTACT" property="receiveCustomerContact" jdbcType="VARCHAR" />  <!-- 收货客户联系人名称 -->
		<result column="SPECIAL_VALUE_ADDED_SERVICE" property="specialValueAddedService" jdbcType="VARCHAR" /><!--特殊增值服务字段-->
		<result column="RECEIVE_METHOD" property="receiveMethod" jdbcType="VARCHAR" /><!--提货方式-->
	</resultMap>
	
	<resultMap id="resultArriveWaybillMap" type="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetWaybillDto" >
    <result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />						<!-- 运单号 -->
    <result column="RECEIVE_CUSTOMER_NAME" property="receiveCustomerName" jdbcType="VARCHAR" />  <!-- 收货客户姓名 -->
    <result column="RECEIVE_CUSTOMER_MOBILEPHONE" property="receiveCustomerMobilephone" jdbcType="VARCHAR" /> <!-- 收货客户手机 -->
    <result column="RECEIVE_CUSTOMER_PHONE" property="receiveCustomerPhone" jdbcType="VARCHAR" />    <!-- 收货客户电话 -->
    <result column="RECEIVE_CUSTOMER_ADDRESS" property="receiveCustomerAddress" jdbcType="VARCHAR" /> <!-- 收货具体地址 -->
    <result column="TARGET_ORG_CODE" property="targetOrgCode" jdbcType="VARCHAR" />					<!-- 目的站 -->
    <result column="GOODS_NAME" property="goodsName" jdbcType="VARCHAR" />							<!-- 货物名称 -->
    <result column="GOODS_QTY_TOTAL" property="goodsQtyTotal" jdbcType="DECIMAL" />					<!-- 货物总件数 -->
   	<result column="ARRIVE_NOTOUT_GOODS_QTY" property="arriveNotoutGoodsQty" jdbcType="NUMERIC" />	<!-- 到达未出库件数 -->
    <result column="ARRIVE_GOODS_QTY" property="arriveGoodsQty" jdbcType="NUMERIC" />				<!-- 到达件数 -->		
    <result column="GENERATE_GOODS_QTY" property="generateGoodsQty" jdbcType="NUMERIC" />			<!-- 已生成到达联件数-->		
    <result column="RETURN_BILL_TYPE" property="returnBillType" jdbcType="VARCHAR" />				<!-- 返单类型 -->
    <result column="D.STATUS" property="waybillrfcStatus" jdbcType="VARCHAR" />						<!-- 更改单状态 -->
    <result column="RECEIVE_CUSTOMER_CONTACT" property="receiveCustomerContact" jdbcType="VARCHAR" />  <!-- 收货客户联系人名称 -->
  </resultMap>
  
	<resultMap id="actualFreightMap" type="com.deppon.foss.module.pickup.waybill.shared.dto.ActualFreightDto" >
	    <result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />						<!-- 运单号 -->
	   	<result column="ARRIVE_NOTOUT_GOODS_QTY" property="arriveNotoutGoodsQty" jdbcType="NUMERIC" />	<!-- 到达未出库件数 -->
	    <result column="GENERATE_GOODS_QTY" property="generateGoodsQty" jdbcType="NUMERIC" />			<!-- 已生成到达联件数-->		
	    <result column="ARRIVE_GOODS_QTY" property="arriveGoodsQty" jdbcType="NUMERIC" />				<!-- 到达件数 -->		
	    <result column="goods_qty" property="goodsQty" jdbcType="DECIMAL" />					<!-- 货物总件数 -->
	    <result column="sign_goods_qty" property="signQty" jdbcType="DECIMAL" />					<!-- 签收件数 -->
	    <result column="stock_goods_qty" property="stockQty" jdbcType="DECIMAL" />					<!-- 库存件数 -->
	    <result column="last_in_stock_time" property="inStockDate" jdbcType="TIMESTAMP" />					<!-- 最后入库时间 -->
	</resultMap>
	<select id="queryArrivesheetList" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.SignDto" resultMap="arrivesheetResultMap">
		select /*模块：接送货-签收出库-根据条件查询满足的信息 */
		arr.id,arr.waybill_no,arr.arrivesheet_no,
		arr.ARRIVE_SHEET_GOODS_QTY,arr.deliveryman_name,arr.identify_code ,
		arr.IDENTIFY_TYPE,
		WS.STOCK_GOODS_QTY,waybill.IS_WHOLE_VEHICLE,waybill.PRODUCT_CODE,waybill.ORDER_NO,WAYBILL.RECEIVE_CUSTOMER_CONTACT,
		actual.SPECIAL_VALUE_ADDED_SERVICE 
		from  pkp.t_SRV_Waybill waybill 
		inner join pkp.t_Srv_Arrivesheet arr
		on waybill.waybill_no=arr.waybill_no 
		inner join pkp.t_srv_actual_freight actual 
		on arr.waybill_no=actual.waybill_no
		INNER JOIN TFR.T_OPT_WAYBILL_STOCK WS ON
		arr.WAYBILL_NO = WS.WAYBILL_NO
		<include refid="select_Where"/>
	</select>
	<select id="getTotalCount" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.SignDto" resultType="Long">
		select /*模块：接送货-签收出库-根据条件查询满足的记录数 */ count(arr.waybill_no) 
		from  pkp.t_SRV_Waybill waybill 
		 inner join pkp.t_Srv_Arrivesheet arr
		on waybill.waybill_no=arr.waybill_no 
		inner join pkp.t_srv_actual_freight actual 
		on arr.waybill_no=actual.waybill_no
		INNER JOIN TFR.T_OPT_WAYBILL_STOCK WS ON
		arr.WAYBILL_NO = WS.WAYBILL_NO
		<include refid="select_Where"/>
	</select> 
	
	<sql id="select_Where">
		<where>
			arr.waybill_no=WS.WAYBILL_NO
			<if test="lastLoadOrgCode!=null and lastLoadOrgCode!='' ">	
			AND waybill.last_load_org_code = #{lastLoadOrgCode,jdbcType=VARCHAR}
			</if>
			<!-- 到达联状态为派送中,生成的可查出来-->
			<if test="ArriveSheetstatus !=null and ArriveSheetstatus.length > 0">
				and arr.STATUS IN
				<foreach collection="ArriveSheetstatus" index="index" item="statu" open="(" separator="," close=")">
					#{statu,jdbcType=VARCHAR}
				</foreach>
			</if>
			<if test="waybillNo!=null and waybillNo!='' ">	
			and waybill.WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>
			<if test="waybillNo==null or waybillNo=='' ">	
			and actual.settle_status = #{settleStatus,jdbcType=VARCHAR}
			</if>
			<if test="arrivesheetNo!=null and arrivesheetNo!='' ">	
			and arr.ARRIVESHEET_NO = #{arrivesheetNo,jdbcType=VARCHAR}
			</if>
			<if test="receiveCustomerName!=null and receiveCustomerName!='' ">	
			and waybill.RECEIVE_CUSTOMER_CONTACT = #{receiveCustomerName,jdbcType=VARCHAR}
			</if>
			<if test="receiveCustomerPhone!=null and receiveCustomerPhone!='' ">	
			and waybill.RECEIVE_CUSTOMER_PHONE = #{receiveCustomerPhone,jdbcType=VARCHAR}
			</if>
			<if test="receiveCustomerMobilephone!=null and receiveCustomerMobilephone!='' ">	
			and waybill.RECEIVE_CUSTOMER_MOBILEPHONE = #{receiveCustomerMobilephone,jdbcType=VARCHAR}
			</if>
			<if test="settleTimeStart!=null and settleTimeStart!=''">
			<![CDATA[and actual.settle_Time >= #{settleTimeStart,jdbcType=TIMESTAMP}]]>
			</if>
			<if test="settleTimeEnd!=null and settleTimeEnd!='' ">	
			<![CDATA[and actual.settle_Time <= #{settleTimeEnd,jdbcType=TIMESTAMP}]]>
			</if>
			<if test="active !=null and active !='' ">
				<![CDATA[and arr.ACTIVE=#{active,jdbcType=VARCHAR}]]>
					and waybill.ACTIVE  = #{active,jdbcType=VARCHAR}
			</if>
			<if test="destroyed != null and destroyed !=''" >
       		 	and arr.DESTROYED = #{destroyed,jdbcType=CHAR}
     		 </if>
     		 <!-- 最后库存code=库存的部门编码 -->
			<if test="endStockOrgCode != null and endStockOrgCode !=''">	
				<![CDATA[ and WS.ORG_CODE  = #{endStockOrgCode, jdbcType=VARCHAR}]]>
			</if>
			<!-- 库区-->
			<!--add by chenjunying DMANA-9499 判断保留之前的条件，新加多库区查询条件-->
            <if test="goodsAreaCode != null and goodsAreaCode !=''">	
				<![CDATA[ AND WS.GOODS_AREA_CODE = #{goodsAreaCode, jdbcType=VARCHAR}]]>
			</if>
		    <if test="goodsAreaCodes!= null and goodsAreaCodes.size>0">
		    and ws.GOODS_AREA_CODE  in
		    <foreach collection="goodsAreaCodes" open="(" close=")" separator=","
			    item="mgoodsAreaCode">
       	        #{mgoodsAreaCode,jdbcType=VARCHAR}
		    </foreach>
    </if>
			<choose>
			<when test="productCodeList!= null and productCodeList.size>0">
					and waybill.PRODUCT_CODE not in
					<foreach collection="productCodeList" open="(" close=")" separator=","
						item="productCode">
						<if test="productCode!=null and productCode != ''">
		        	      <![CDATA[	#{productCode,jdbcType=VARCHAR} ]]>
		                </if>
					</foreach>
			</when>
			<otherwise>
				and  waybill.PRODUCT_CODE = ''
			</otherwise>
		</choose>
		</where>
	</sql>
	<sql id="queryArriveSheetData_where">
		<where>
			<if test="waybillNo!=null and waybillNo!='' ">
				<![CDATA[and A.WAYBILL_NO=#{waybillNo,jdbcType=VARCHAR}]]>
			</if>
			<if test="arrivesheetNo!=null and arrivesheetNo!='' ">
				<![CDATA[and A.ARRIVESHEET_NO=#{arrivesheetNo,jdbcType=VARCHAR}]]>
			</if>
			<if test="status!=null and status!='' ">
				<![CDATA[and A.STATUS=#{status,jdbcType=VARCHAR}]]>
			</if> 
			<if test="isPrinted !=null and isPrinted !='' ">
				<![CDATA[and A.IS_PRINTED=#{isPrinted,jdbcType=VARCHAR}]]>
			</if>
			<if test="createBeginTime !=null and createBeginTime !='' ">
				<![CDATA[and A.CREATE_TIME > #{createBeginTime,jdbcType=TIMESTAMP}]]>
			</if>
			<if test="createEndTime !=null and createEndTime !='' ">
				<![CDATA[and A.CREATE_TIME <= #{createEndTime,jdbcType=TIMESTAMP}]]>
			</if>
			<if test="createUserName !=null and createUserName !='' ">
				and A.CREATE_USER_NAME = #{createUserName, jdbcType=VARCHAR}
			</if>
			<if test="goodsName !=null and goodsName!='' ">
				and B.GOODS_NAME = #{goodsName, jdbcType=VARCHAR}
			</if>
			<if test="receiveCustomerMobilephone !=null and receiveCustomerMobilephone !='' ">
				<![CDATA[and B.RECEIVE_CUSTOMER_PHONE=#{receiveCustomerMobilephone,jdbcType=VARCHAR}]]>
			</if>
			<if test="receiveCustomerName !=null and receiveCustomerName !='' ">
				<![CDATA[and B.RECEIVE_CUSTOMER_NAME=#{receiveCustomerName,jdbcType=VARCHAR}]]>
			</if>
			<if test="active !=null and active !='' ">
				<![CDATA[and A.ACTIVE=#{active,jdbcType=VARCHAR}]]>
			</if>
			<if test="waybillActive != null and waybillActive != '' ">
				<![CDATA[and B.ACTIVE =#{waybillActive,jdbcType=VARCHAR}]]>
			</if>
			<if test="destroyed != null and destroyed != '' ">
				<![CDATA[and A.DESTROYED =#{destroyed,jdbcType=VARCHAR}]]>
			</if>
			<if test="lastLoadOrgCode != null and lastLoadOrgCode != '' ">
				<![CDATA[and B.last_load_org_code =#{lastLoadOrgCode,jdbcType=VARCHAR}]]>
				<if test="waybillNo == null or waybillNo =='' ">
					<![CDATA[and A.CREATE_ORG_CODE=#{lastLoadOrgCode,jdbcType=VARCHAR}]]>
				</if>
			</if>
		</where>
	</sql>
	<sql id="Base_Column_List">
    ID, WAYBILL_NO, ARRIVESHEET_NO, DELIVERYMAN_NAME, IDENTIFY_TYPE, IDENTIFY_CODE, SITUATION, 
    ARRIVE_SHEET_GOODS_QTY, SIGN_NOTE, SIGN_TIME, IS_PRINTED, PRINTTIMES, CREATE_USER_NAME, 
    CREATE_USER_CODE, CREATE_ORG_NAME, CREATE_ORG_CODE, CREATE_TIME, STATUS, IS_PDA_SIGN, 
    SIGN_GOODS_QTY, ACTIVE, IS_SENT_REQUIRED, IS_NEED_INVOICE, PRE_NOTICE_CONTENT, DELIVER_REQUIRE, 
    IS_RFCING, OPERATE_TIME, OPERATOR, OPERATOR_CODE, OPERATE_ORG_NAME, OPERATE_ORG_CODE,SIGN_STATUS, 
    MODIFY_TIME, DESTROYED,DELIVER_DATE,RECEIVE_METHOD,together_Send_Code,ALITTLESHORT,PACKINGRESULT,DELIVERMAN_TYPE,NEXT_DELIVER_TIME 
	</sql>
	<!-- 根据条件查询到达联信息 -->
	<select id="queryArriveSheetData" 
		parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetDto" resultMap="SelectByResult">
    select /*模块：接送货-到达联-根据条件查询到达联信息*/
	    A.ID,   
	    A.WAYBILL_NO,
	    A.ARRIVESHEET_NO, 
	    A.PRINTTIMES,
	    A.STATUS,
	    A.ARRIVE_SHEET_GOODS_QTY,
	    A.ACTIVE,
	    B.goods_qty_total , /**开单件数**/ 
	    B.GOODS_NAME,
	    B.RECEIVE_CUSTOMER_NAME,
	    B.RECEIVE_CUSTOMER_PHONE, 
	    C.ARRIVE_NOTOUT_GOODS_QTY, /**库存件数**/
	    D.ARRANGE_GOODS_QTY, /**排单件数**/ 
	    A.DESTROYED, /**是否作废**/
		A.PRINT_TIME, /**打印时间**/
		A.PRINT_ORG_NAME, /**打印部门**/
		A.PRINT_USER_NAME, /**打印人**/
		A.CREATE_TIME /**到达联生成时间**/
		,B.RECEIVE_BIG_CUSTOMER as receiveBigCustomer
	from pkp.t_srv_arrivesheet A
	inner join pkp.t_srv_waybill B ON A.WAYBILL_NO = B.WAYBILL_NO
	inner join pkp.t_srv_actual_freight C on a.waybill_no = C.WAYBILL_NO
	left join pkp.t_srv_deliverbill_detail D ON D.ARRIVESHEET_NO = A.ARRIVESHEET_NO /**派送单明细表**/ 
	<include refid="queryArriveSheetData_where"/>
	ORDER BY (A.WAYBILL_NO)
	</select>
	
	<!-- 根据条件查询到达联信息总条数 -->
	<select id="getArriveSheetCount" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetDto" resultType="Long">
	SELECT /*模块：接送货-到达联-根据条件查询到达联信息总条数*/
		COUNT(A.ID)
  	from pkp.t_srv_arrivesheet A
	inner join pkp.t_srv_waybill B ON A.WAYBILL_NO = B.WAYBILL_NO
	inner join pkp.t_srv_actual_freight C on a.waybill_no = C.WAYBILL_NO
	left join pkp.t_srv_deliverbill_detail D ON D.ARRIVESHEET_NO = A.ARRIVESHEET_NO  /**派送单明细表**/
	<include refid="queryArriveSheetData_where"/>
	</select>
	
	<!-- 作废、激活、修改到达联 -->
	<update id="updateArriveById" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.ArriveSheetEntity">
		update PKP.T_SRV_ARRIVESHEET
    <set >
		<if test="arriveSheetGoodsQty !=null and arriveSheetGoodsQty != '' ">
			 ARRIVE_SHEET_GOODS_QTY = #{arriveSheetGoodsQty,jdbcType=NUMERIC},
		</if>
		<if test="destroyed !=null and destroyed != '' ">
			 destroyed = #{destroyed,jdbcType=NUMERIC},
		</if>
		<if test="modifyTime != null">
        	 MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
	    </if>
    </set>
    	where ID = #{id,jdbcType=VARCHAR}
    </update>
	
	<sql id="where_selectWaybillByWaybillNo">
			<!-- 收货人信息 -->
			<if test="active != null and active != '' ">
				and A.ACTIVE = #{active,jdbcType=VARCHAR}
			</if>
			<if test="receiveCustomerName != null and receiveCustomerName != '' ">
			    and A.RECEIVE_CUSTOMER_CONTACT like '%' || #{receiveCustomerName,jdbcType=VARCHAR} || '%'			 
			</if>
			<if test="receiveCustomerMobilephone != null and receiveCustomerMobilephone != '' ">
				and A.receive_customer_mobilephone = #{receiveCustomerMobilephone, jdbcType=VARCHAR}
			</if>
			<if test="receiveCustomerPhone != null and receiveCustomerPhone != '' ">
				and A.receive_customer_phone = #{receiveCustomerPhone,jdbcType=VARCHAR}
			</if>
			<!-- 提货方式 -->
			<if test="receiveMethod != null and receiveMethod != '' ">
				and A.receive_method like '%' || #{receiveMethod, jdbcType=VARCHAR} || '%'
			</if>
			<!-- 部门 -->
			<if test="orgCode != null and orgCode != '' ">
				and A.TARGET_ORG_CODE = #{orgCode,jdbcType=VARCHAR}
			</if>
			<!-- 开单付款方式 -->
			<if test="paidMethod != null and paidMethod != '' ">
				and A.PAID_METHOD = #{paidMethod,jdbcType=VARCHAR}
			</if>
			<if test="isPrinted != null and isPrinted != '' ">
				and arrive.IS_PRINTED = #{isPrinted,jdbcType=VARCHAR}
			</if>
			<if test="isPrintedStatus == 1 ">
				and arrive.IS_PRINTED = 'Y'
			</if>
			<if test="isPrintedStatus == 0 ">
				and (arrive.IS_PRINTED is Null  or arrive.IS_PRINTED = 'N')
			</if>
			<!-- 到达时间起 -->
	  		<if test = "arriveStartTime!=null and arriveStartTime!=''">
	    		<![CDATA[and B.arrive_time >= #{arriveStartTime,jdbcType=TIMESTAMP}]]>
	    	</if>
	    	<!-- 到达时间止 -->
	    	<if test = "arriveEndTime!=null and arriveEndTime!=''">
	    		<![CDATA[and B.arrive_time <= #{arriveEndTime,jdbcType=TIMESTAMP}]]>
	    	</if>
	</sql>
	
	<!-- 查询已到达运单信息表格列 -->
	<sql id="selectWaybillGirdCloumn">
     	B.ARRIVE_NOTOUT_GOODS_QTY as arriveNotoutGoodsQty, /**到达未出库件数**/
		B.ARRIVE_GOODS_QTY as arriveGoodsQty , /**到达件数**/
		B.GENERATE_GOODS_QTY as generateGoodsQty , /**已生成到达联件数**/
		B.END_STOCK_ORG_CODE as targetOrgCode, /**目的站**/
		A.WAYBILL_NO as waybillNo, /**运单号**/
		A.RETURN_BILL_TYPE as returnBillType, /**返单类型**/
		A.RECEIVE_CUSTOMER_NAME as receiveCustomerName, /**收货客户名称**/
		A.RECEIVE_CUSTOMER_MOBILEPHONE as receiveCustomerMobilephone, /**收货客户手机**/
		A.RECEIVE_CUSTOMER_PHONE as receiveCustomerPhone, /**收货客户电话**/
		A.RECEIVE_CUSTOMER_ADDRESS as receiveCustomerAddress, /**收货具体地址**/
		A.RECEIVE_CUSTOMER_CONTACT as receiveCustomerContact, /**收货联系人名称**/
		A.RECEIVE_BIG_CUSTOMER as receiveBigCustomer, /**收货人大客户标记**/
		A.GOODS_NAME as goodsName, /**货物名称**/
		A.GOODS_QTY_TOTAL as goodsQtyTotal, /**开单件数 **/
		D.status AS waybillrfcStatus, /**受理状态 **/
		A.paid_method as paidMethod, /**开单付款方式**/
		
		arrive.IS_PRINTED as isPrinted, /**是否打印**/
		arrive.PRINTTIMES as printtimes, /**打印次数**/
		arrive.PRINT_TIME as printTime, /**打印时间**/
		arrive.PRINT_ORG_NAME as printOrgName, /**打印部门**/
		arrive.PRINT_USER_NAME as printUserName, /**打印人**/
		A.Transport_Type transportType,/*运输类型*/
		A.receive_method as receiveMethod /**提货方式**/
	</sql>
	<!-- 根据运单号查询已到达运单信息-->
	<select id="queryArriveSheetByWaybill" resultMap="resultArriveWaybillMap"
		parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetWaybillDto">
		select /*模块：接送货-到达联- 根据运单号查询已到达运单信息*/
		<include refid="selectWaybillGirdCloumn"/>
		from pkp.t_srv_waybill A 
		INNER JOIN PKP.T_SRV_ACTUAL_FREIGHT B ON A.WAYBILL_NO = B.WAYBILL_NO
		LEFT JOIN pkp.T_SRV_WAYBILLRFC D on D.waybill_no = A.waybill_no 
		<!-- 更改单状态 -->
		<if test="waybillRfcStatus != null">
			and D.STATUS in 
			<foreach collection="waybillRfcStatus" item="item" index="index" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		LEFT JOIN pkp.t_srv_arrivesheet arrive 
	    on arrive.waybill_no = a.waybill_no 
	    and arrive.active = #{active,jdbcType=VARCHAR}
	    and arrive.destroyed = #{destroyed,jdbcType=VARCHAR}
		<if test="arriveSheetStatus != null and arriveSheetStatus.size > 0">
		    and arrive.status in
			<foreach collection="arriveSheetStatus" item="item" index="index" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		WHERE B.ARRIVE_NOTOUT_GOODS_QTY >0
			<if test="active != null and active != '' ">
				and A.ACTIVE = #{active,jdbcType=VARCHAR}
			</if>
			<!-- 单号不为空
			<if test="waybillNo != null and waybillNo != '' ">
				and A.WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if> -->
			<if test="arrayWaybillNos !=null and arrayWaybillNos.length > 0">
    			and A.WAYBILL_NO IN
				<foreach collection="arrayWaybillNos" index="index" item="waybillNo" open="(" separator="," close=")">
					#{waybillNo}
				</foreach>
    		</if>
			<!-- 提货方式 -->
			<if test="receiveMethod != null and receiveMethod != '' ">
				and A.receive_method like '%' || #{receiveMethod, jdbcType=VARCHAR} || '%'
			</if>
			<!-- 开单付款方式 -->
			<if test="paidMethod != null and paidMethod != '' ">
				and A.PAID_METHOD = #{paidMethod,jdbcType=VARCHAR}
			</if>
	</select>
	
	<!-- 根据交接单号查询已到达运单信息 -->
	<select id="queryArriveSheeetByHandoverNo" resultMap="resultArriveWaybillMap"
		parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetWaybillDto">
		select /*模块：接送货-运单- 根据交接单号查询已到达运单信息*/
		<include refid="selectWaybillGirdCloumn"/>
		from pkp.t_srv_waybill A 
		INNER JOIN PKP.T_SRV_ACTUAL_FREIGHT B ON A.WAYBILL_NO = B.WAYBILL_NO
		INNER JOIN TFR.T_OPT_HANDOVERBILL_DETAIL C ON A.WAYBILL_NO = C.WAYBILL_NO
		LEFT JOIN pkp.T_SRV_WAYBILLRFC D on D.waybill_no = A.waybill_no
		<!-- 更改单状态 -->
		<if test="waybillRfcStatus != null">
			and D.STATUS in 
			<foreach collection="waybillRfcStatus" item="item" index="index" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		LEFT JOIN pkp.t_srv_arrivesheet arrive 
	    on arrive.waybill_no = a.waybill_no 
	    and arrive.active = #{active,jdbcType=VARCHAR}
	    and arrive.destroyed = #{destroyed,jdbcType=VARCHAR}
		<if test="arriveSheetStatus != null and arriveSheetStatus.size > 0">
		    and arrive.status in
			<foreach collection="arriveSheetStatus" item="item" index="index" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		WHERE B.ARRIVE_NOTOUT_GOODS_QTY >0
			<if test="active != null and active != '' ">
				and A.ACTIVE = #{active,jdbcType=VARCHAR}
			</if>
			<!-- 交接单号不为空 -->
			<if test="handoverNo != null and handoverNo != '' ">
				AND C.HANDOVER_NO = #{handoverNo,jdbcType=VARCHAR}
			</if>
			<!-- 提货方式 -->
			<if test="receiveMethod != null and receiveMethod != '' ">
				and A.receive_method like '%' || #{receiveMethod, jdbcType=VARCHAR} || '%'
			</if>
			<!-- 部门 -->
			<if test="orgCode != null and orgCode != '' ">
				and A.TARGET_ORG_CODE = #{orgCode,jdbcType=VARCHAR}
			</if>
			<!-- 开单付款方式 -->
			<if test="paidMethod != null and paidMethod != '' ">
				and A.PAID_METHOD = #{paidMethod,jdbcType=VARCHAR}
			</if>
	</select>
	
	<!-- 根据预派送单号查询已到达运单信息 -->
	<select id="queryArriveSheeetByDeliverbillId" resultMap="resultArriveWaybillMap"
		parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetWaybillDto">
		select /*模块：接送货-到达联- 根据预派送单号查询已到达运单信息*/
		<include refid="selectWaybillGirdCloumn"/>
		from pkp.t_srv_waybill A 
		INNER JOIN PKP.T_SRV_ACTUAL_FREIGHT B ON A.WAYBILL_NO = B.WAYBILL_NO
		INNER JOIN PKP.T_SRV_DELIVERBILL_DETAIL C ON A.WAYBILL_NO = C.WAYBILL_NO
		inner join pkp.t_srv_deliverbill E  on E.id = C.T_SRV_DELIVERBILL_ID
		LEFT JOIN pkp.T_SRV_WAYBILLRFC D on D.waybill_no = A.waybill_no
		<!-- 更改单状态 -->
		<if test="waybillRfcStatus != null">
			and D.STATUS in 
			<foreach collection="waybillRfcStatus" item="item" index="index" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		LEFT JOIN pkp.t_srv_arrivesheet arrive 
	    on arrive.waybill_no = a.waybill_no 
	    and arrive.active = #{active,jdbcType=VARCHAR}
	    and arrive.destroyed = #{destroyed,jdbcType=VARCHAR}
		<if test="arriveSheetStatus != null and arriveSheetStatus.size > 0">
		    and arrive.status in
			<foreach collection="arriveSheetStatus" item="item" index="index" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		WHERE B.ARRIVE_NOTOUT_GOODS_QTY >0
		<!-- 更改单表   left join T_SRV_WAYBILLRFC I on a.waybill_no = i.waybill_no  -->
			<if test="active != null and active != '' ">
				and A.ACTIVE = #{active,jdbcType=VARCHAR}
			</if>
			<!-- 预派送单不为空 -->
			<if test="deliverbillId != null and deliverbillId != '' ">
				AND E.DELIVERBILL_NO = #{deliverbillId,jdbcType=VARCHAR}
			</if>
			<!-- 提货方式 -->
			<if test="receiveMethod != null and receiveMethod != '' ">
				and A.receive_method like '%' || #{receiveMethod, jdbcType=VARCHAR} || '%'
			</if>
			<!-- 部门 -->
			<if test="orgCode != null and orgCode != '' ">
				and A.TARGET_ORG_CODE = #{orgCode,jdbcType=VARCHAR}
			</if>
			<!-- 开单付款方式 -->
			<if test="paidMethod != null and paidMethod != '' ">
				and A.PAID_METHOD = #{paidMethod,jdbcType=VARCHAR}
			</if>
	</select>
	
	<!-- 根据客户信息查询已到达运单信息 -->
	<select id="queryArriveSheeetByCustomer" resultMap="resultArriveWaybillMap" 
		parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetWaybillDto">
		select /*模块：接送货-到达联- 根据客户信息查询已到达运单信息*/
		<include refid="selectWaybillGirdCloumn"/>
		from pkp.t_srv_waybill A 
		INNER JOIN PKP.T_SRV_ACTUAL_FREIGHT B ON A.WAYBILL_NO = B.WAYBILL_NO
		INNER JOIN tfr.t_opt_waybill_stock ws ON A.WAYBILL_NO = ws.WAYBILL_NO
		LEFT JOIN pkp.T_SRV_WAYBILLRFC D on D.waybill_no = A.waybill_no
		<!-- 更改单状态 -->
		<if test="waybillRfcStatus != null">
			and D.STATUS in 
			<foreach collection="waybillRfcStatus" item="item" index="index" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		LEFT JOIN pkp.t_srv_arrivesheet arrive 
	    on arrive.waybill_no = a.waybill_no 
	    and arrive.active = #{active,jdbcType=VARCHAR}
	    and arrive.destroyed = #{destroyed,jdbcType=VARCHAR}
		<if test="arriveSheetStatus != null and arriveSheetStatus.size > 0">
		    and arrive.status in
			<foreach collection="arriveSheetStatus" item="item" index="index" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		WHERE B.ARRIVE_NOTOUT_GOODS_QTY >0
		<include refid="where_selectWaybillByWaybillNo"/>
		<include refid="select_stock_org_Where"/>
	</select>
	<!-- 根据入库时间查询运单信息 -->
	<select id="queryWaybillDetailByInStockTime" resultMap="resultArriveWaybillMap" 
		parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetWaybillDto">
		select /*模块：接送货-到达联- 根据入库时间查询运单信息*/
		<include refid="selectWaybillGirdCloumn"/>
		from pkp.t_srv_waybill A 
		INNER JOIN PKP.T_SRV_ACTUAL_FREIGHT B ON A.WAYBILL_NO = B.WAYBILL_NO
		INNER JOIN tfr.t_opt_waybill_stock ws ON A.WAYBILL_NO = ws.WAYBILL_NO
		LEFT JOIN pkp.T_SRV_WAYBILLRFC D on D.waybill_no = A.waybill_no
		<!-- 更改单状态 -->
		<if test="waybillRfcStatus != null">
			and D.STATUS in 
			<foreach collection="waybillRfcStatus" item="item" index="index" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		LEFT JOIN pkp.t_srv_arrivesheet arrive 
	    on arrive.waybill_no = a.waybill_no 
	    and arrive.active = #{active,jdbcType=VARCHAR}
	    and arrive.destroyed = #{destroyed,jdbcType=VARCHAR}
		<if test="arriveSheetStatus != null and arriveSheetStatus.size > 0">
		    and arrive.status in
			<foreach collection="arriveSheetStatus" item="item" index="index" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		WHERE B.ARRIVE_NOTOUT_GOODS_QTY >0
		<include refid="select_inStockTime_Where"/>
		<include refid="select_stock_org_Where"/>
		<include refid="where_selectWaybillByWaybillNo"/>
	</select>
	<sql id="select_inStockTime_Where">
		<!-- 入库时间 -->
		<if test="inStockTimeFrom != null and inStockTimeFrom !=''">	
		<![CDATA[ and WS.IN_STOCK_TIME  >=  ]]> #{inStockTimeFrom, jdbcType=TIMESTAMP}
		</if>
		<if test="inStockTimeTo !=null and inStockTimeTo != ''">	
		<![CDATA[ and WS.IN_STOCK_TIME  <= ]]> #{inStockTimeTo, jdbcType=TIMESTAMP}
		</if>
	</sql>
	<sql id="select_stock_org_Where">
		AND (A.LAST_LOAD_ORG_CODE = #{lastLoadOrgCode,jdbcType=VARCHAR} or A.customer_pickup_org_code = #{lastLoadOrgCode,jdbcType=VARCHAR})
		 <!-- 最后库存code=库存的部门编码 -->
		<if test="endStockOrgCode != null and endStockOrgCode !=''">	
			<![CDATA[ and WS.ORG_CODE  = #{endStockOrgCode, jdbcType=VARCHAR}]]>
		</if>
		<!-- 库区-->
		<if test="goodsAreaCode != null and goodsAreaCode !=''">	
			<![CDATA[ AND WS.GOODS_AREA_CODE = #{goodsAreaCode, jdbcType=VARCHAR}]]>
		</if>
		<!--add by chenjunying DMANA-9499 判断保留之前的库区条件，新加多库区查询条件-->
		<if test="goodsAreaCodes!= null and goodsAreaCodes.size>0">
		and ws.GOODS_AREA_CODE  in
		<foreach collection="goodsAreaCodes" open="(" close=")" separator=","
			item="mgoodsAreaCode">
       	      #{mgoodsAreaCode,jdbcType=VARCHAR}
		</foreach>
    </if>
	</sql>	
	<!-- 根据到达时间查询运单信息 -->
	<select id="queryWaybillDetailByArriveTime" resultMap="resultArriveWaybillMap" 
		parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetWaybillDto">
		select /*模块：接送货-到达联- 根据到达时间查询运单信息*/
		<include refid="selectWaybillGirdCloumn"/>
		from pkp.t_srv_waybill A 
		INNER JOIN PKP.T_SRV_ACTUAL_FREIGHT B ON A.WAYBILL_NO = B.WAYBILL_NO
		LEFT JOIN pkp.T_SRV_WAYBILLRFC D on D.waybill_no = A.waybill_no
		<!-- 更改单状态 -->
		<if test="waybillRfcStatus != null">
			and D.STATUS in 
			<foreach collection="waybillRfcStatus" item="item" index="index" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		LEFT JOIN pkp.t_srv_arrivesheet arrive 
	    on arrive.waybill_no = a.waybill_no 
	    and arrive.active = #{active,jdbcType=VARCHAR}
	    and arrive.destroyed = #{destroyed,jdbcType=VARCHAR}
		<if test="arriveSheetStatus != null and arriveSheetStatus.size > 0">
		    and arrive.status in
			<foreach collection="arriveSheetStatus" item="item" index="index" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</if>
		WHERE B.ARRIVE_NOTOUT_GOODS_QTY >0
		<include refid="where_select_stock_org"/>
		<include refid="where_selectWaybillByWaybillNo"/>
	</select>
	<sql id="where_select_stock_org">
		AND (A.LAST_LOAD_ORG_CODE = #{lastLoadOrgCode,jdbcType=VARCHAR} or A.customer_pickup_org_code = #{lastLoadOrgCode,jdbcType=VARCHAR})
	</sql>
	<!-- 根据运单号，查询运单的各种件数等信息  纠正到达件数专用 -->
	<select id="queryWaybillAllQty" resultMap="actualFreightMap" 
		parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetWaybillDto">
		select /*模块：接送货-到达联- 根据运单号，查询运单的各种件数等信息  纠正到达件数专用*/
		af.waybill_no,
        af.goods_qty,
        af.arrive_goods_qty,
        af.arrive_notout_goods_qty,
        af.generate_goods_qty,
        sr.sign_goods_qty,
        ws.stock_goods_qty,
        ws.last_in_stock_time
		from  pkp.t_srv_waybill wb
		 inner join pkp.t_srv_actual_freight af
		    on wb.waybill_no = af.waybill_no
		 inner join tfr.t_opt_waybill_stock ws
		    on af.waybill_no = ws.waybill_no
		 left join pkp.t_srv_waybill_sign_result sr
		    on af.waybill_no = sr.waybill_no
		    and sr.active = 'Y'
		 LEFT JOIN BSE.T_BAS_SALES_DEPARTMENT S ON S.CODE = WB.LAST_LOAD_ORG_CODE
                                        and S.ACTIVE = 'Y'
		 LEFT join bse.t_bas_goods_area station on station.ORG_CODE =
		                                            S.TRANSFER_CENTER
		                                        AND station.ACTIVE = 'Y'
		                                        and station.GOODS_AREA_TYPE =
		                                            'BSE_GOODSAREA_TYPE_STATION'
		 LEFT join bse.t_bas_goods_area other on other.ORG_CODE =
		                                          wb.last_load_org_code
		                                      AND other.ACTIVE = 'Y'
		                                      and other.GOODS_AREA_TYPE =
		                                          'BSE_GOODSAREA_TYPE_OTHER'
		 LEFT join bse.t_bas_goods_area station1 on station1.ORG_CODE =
		                                            S.TRANSFER_CENTER
		                                        AND station1.ACTIVE = 'Y'
		                                        and station1.GOODS_AREA_TYPE =
		                                            'BSE_GOODSAREA_TYPE_EXPRESS_STATION'
		 LEFT JOIN BSE.T_BAS_TRANSFER_CENTER A on A.AIR_DISPATCH_CODE =
		                                           WB.LAST_LOAD_ORG_CODE
		                                       and A.ACTIVE = 'Y'
		 left join bse.t_bas_goods_area air on air.org_code = a.org_code
		                                    and air.active = 'Y'
		                                    and air.goods_area_type =
		                                        'BSE_GOODSAREA_TYPE_AIRFREIGHT'
   	    <where> 
   	    	wb.waybill_no in 
			<foreach collection="arrayWaybillNos" index="index" item="waybillNo" open="(" separator="," close=")">
				#{waybillNo}
			</foreach>
			 and (wb.last_load_org_code = ws.org_code 
			 or (af.end_stock_org_code = ws.org_code and af.goods_area_code = ws.goods_area_code)
			 or (ws.org_code = s.transfer_center and ws.goods_area_code = station.goods_area_code) 
			 or (ws.org_code = wb.last_load_org_code and ws.goods_area_code = other.goods_area_code)
			 or (ws.org_code = s.transfer_center and ws.goods_area_code = station1.goods_area_code)
			 or (ws.org_code = A.Org_Code and ws.goods_area_code = air.goods_area_code))
			 and wb.active = 'Y'
   	    </where>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select  /*模块：接送货-到达联- 根据ID查询到达联信息*/
		<include refid="Base_Column_List" />
    from PKP.T_SRV_ARRIVESHEET
    where ID = #{id,jdbcType=VARCHAR}
	</select>
	
	<insert id="insert" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.ArriveSheetEntity">
	insert into PKP.T_SRV_ARRIVESHEET (ID, WAYBILL_NO, ARRIVESHEET_NO, 
      DELIVERYMAN_NAME, IDENTIFY_TYPE, IDENTIFY_CODE, 
      SITUATION, ARRIVE_SHEET_GOODS_QTY, SIGN_NOTE, 
      SIGN_TIME, IS_PRINTED, PRINTTIMES, 
      CREATE_USER_NAME, CREATE_USER_CODE, CREATE_ORG_NAME, 
      CREATE_ORG_CODE, CREATE_TIME, STATUS, 
      IS_PDA_SIGN, SIGN_GOODS_QTY,DELIVER_DATE,NEXT_DELIVER_TIME,RECEIVE_METHOD,MODIFY_TIME)
    values (#{id,jdbcType=VARCHAR}, #{waybillNo,jdbcType=VARCHAR}, #{arrivesheetNo,jdbcType=VARCHAR}, 
      #{deliverymanName,jdbcType=VARCHAR}, #{identifyType,jdbcType=VARCHAR}, #{identifyCode,jdbcType=VARCHAR}, 
      #{situation,jdbcType=VARCHAR}, #{arriveSheetGoodsQty,jdbcType=DECIMAL}, #{signNote,jdbcType=VARCHAR}, 
      #{signTime,jdbcType=TIMESTAMP}, #{isPrinted,jdbcType=CHAR}, #{printtimes,jdbcType=DECIMAL}, 
      #{createUserName,jdbcType=VARCHAR}, #{createUserCode,jdbcType=VARCHAR}, #{createOrgName,jdbcType=VARCHAR}, 
      #{createOrgCode,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=VARCHAR}, 
      #{isPdaSign,jdbcType=CHAR}, #{signGoodsQty,jdbcType=DECIMAL}, #{deliverDate,jdbcType=TIMESTAMP},
      #{nextDeliverTime,jdbcType=TIMESTAMP},#{receiveMethod,jdbcType=VARCHAR}), #{modifyTime,jdbcType=TIMESTAMP})
	</insert>
    <insert id="insertSelective" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.ArriveSheetEntity">
    insert into PKP.T_SRV_ARRIVESHEET
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="waybillNo != null" >
        WAYBILL_NO,
      </if>
      <if test="arrivesheetNo != null" >
        ARRIVESHEET_NO,
      </if>
      <if test="deliverymanName != null" >
        DELIVERYMAN_NAME,
      </if>
      <if test="identifyType != null" >
        IDENTIFY_TYPE,
      </if>
      <if test="identifyCode != null" >
        IDENTIFY_CODE,
      </if>
      <if test="situation != null" >
        SITUATION,
      </if>
      <if test="arriveSheetGoodsQty != null" >
        ARRIVE_SHEET_GOODS_QTY,
      </if>
      <if test="signNote != null" >
        SIGN_NOTE,
      </if>
      <if test="signTime != null" >
        SIGN_TIME,
      </if>
      <if test="isPrinted != null" >
        IS_PRINTED,
      </if>
      <if test="printtimes != null" >
        PRINTTIMES,
      </if>
      <if test="createUserName != null" >
        CREATE_USER_NAME,
      </if>
      <if test="createUserCode != null" >
        CREATE_USER_CODE,
      </if>
      <if test="createOrgName != null" >
        CREATE_ORG_NAME,
      </if>
      <if test="createOrgCode != null" >
        CREATE_ORG_CODE,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="isPdaSign != null" >
        IS_PDA_SIGN,
      </if>
      <if test="signGoodsQty != null" >
        SIGN_GOODS_QTY,
      </if>
      <if test="active != null" >
        ACTIVE,
      </if>
      <if test="isSentRequired != null" >
        IS_SENT_REQUIRED,
      </if>
      <if test="isNeedInvoice != null" >
        IS_NEED_INVOICE,
      </if>
      <if test="preNoticeContent != null" >
        PRE_NOTICE_CONTENT,
      </if>
      <if test="deliverRequire != null" >
        DELIVER_REQUIRE,
      </if>
      <if test="isRfcing != null" >
        IS_RFCING,
      </if>
      <if test="operateTime != null" >
        OPERATE_TIME,
      </if>
      <if test="operator != null" >
        OPERATOR,
      </if>
      <if test="operatorCode != null" >
        OPERATOR_CODE,
      </if>
      <if test="operateOrgName != null" >
        OPERATE_ORG_NAME,
      </if>
      <if test="operateOrgCode != null" >
        OPERATE_ORG_CODE,
      </if>
      <if test="modifyTime != null" >
        MODIFY_TIME,
      </if>
      <if test="destroyed != null" >
        DESTROYED,
      </if>
      <if test="signStatus != null" >
        SIGN_STATUS,
      </if>
      <if test="deliverDate != null" >
        DELIVER_DATE,
      </if>
      <if test="receiveMethod != null" >
        RECEIVE_METHOD,
      </if>
       <if test="togetherSendCode != null" >
        together_Send_Code,
      </if>
      <if test="nextDeliverTime != null" >
        NEXT_DELIVER_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="waybillNo != null" >
        #{waybillNo,jdbcType=VARCHAR},
      </if>
      <if test="arrivesheetNo != null" >
        #{arrivesheetNo,jdbcType=VARCHAR},
      </if>
      <if test="deliverymanName != null" >
        #{deliverymanName,jdbcType=VARCHAR},
      </if>
      <if test="identifyType != null" >
        #{identifyType,jdbcType=VARCHAR},
      </if>
      <if test="identifyCode != null" >
        #{identifyCode,jdbcType=VARCHAR},
      </if>
      <if test="situation != null" >
        #{situation,jdbcType=VARCHAR},
      </if>
      <if test="arriveSheetGoodsQty != null" >
        #{arriveSheetGoodsQty,jdbcType=DECIMAL},
      </if>
      <if test="signNote != null" >
        #{signNote,jdbcType=VARCHAR},
      </if>
      <if test="signTime != null" >
        #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPrinted != null" >
        #{isPrinted,jdbcType=CHAR},
      </if>
      <if test="printtimes != null" >
        #{printtimes,jdbcType=DECIMAL},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createUserCode != null" >
        #{createUserCode,jdbcType=VARCHAR},
      </if>
      <if test="createOrgName != null" >
        #{createOrgName,jdbcType=VARCHAR},
      </if>
      <if test="createOrgCode != null" >
        #{createOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="isPdaSign != null" >
        #{isPdaSign,jdbcType=CHAR},
      </if>
      <if test="signGoodsQty != null" >
        #{signGoodsQty,jdbcType=DECIMAL},
      </if>
      <if test="active != null" >
        #{active,jdbcType=CHAR},
      </if>
      <if test="isSentRequired != null" >
        #{isSentRequired,jdbcType=CHAR},
      </if>
      <if test="isNeedInvoice != null" >
        #{isNeedInvoice,jdbcType=CHAR},
      </if>
      <if test="preNoticeContent != null" >
        #{preNoticeContent,jdbcType=VARCHAR},
      </if>
      <if test="deliverRequire != null" >
        #{deliverRequire,jdbcType=VARCHAR},
      </if>
      <if test="isRfcing != null" >
        #{isRfcing,jdbcType=CHAR},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operatorCode != null" >
        #{operatorCode,jdbcType=VARCHAR},
      </if>
      <if test="operateOrgName != null" >
        #{operateOrgName,jdbcType=VARCHAR},
      </if>
      <if test="operateOrgCode != null" >
        #{operateOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null" >
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="destroyed != null" >
        #{destroyed,jdbcType=CHAR},
      </if>
      <if test="signStatus != null" >
        #{signStatus,jdbcType=VARCHAR},
      </if>
       <if test="deliverDate != null" >
        #{deliverDate,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveMethod != null" >
        #{receiveMethod,jdbcType=VARCHAR},
      </if>
      <if test="togetherSendCode != null" >
        #{togetherSendCode,jdbcType=VARCHAR},
      </if>
      <if test="nextDeliverTime != null" >
         #{nextDeliverTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
	
	 <update id="updateByPrimaryKeySelective" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.ArriveSheetEntity" >
    update PKP.T_SRV_ARRIVESHEET
    <set>
      <if test="waybillNo != null and waybillNo != ''" >
        WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR},
      </if>
      <if test="arrivesheetNo != null and arrivesheetNo != ''" >
        ARRIVESHEET_NO = #{arrivesheetNo,jdbcType=VARCHAR},
      </if>
      <if test="deliverymanName != null and deliverymanName != ''" >
        DELIVERYMAN_NAME = #{deliverymanName,jdbcType=VARCHAR},
      </if>
      <if test="identifyType != null and identifyType != ''" >
        IDENTIFY_TYPE = #{identifyType,jdbcType=VARCHAR},
      </if>
      <if test="identifyCode != null and identifyCode != ''" >
        IDENTIFY_CODE = #{identifyCode,jdbcType=VARCHAR},
      </if>
      <if test="situation != null and situation != ''" >
        SITUATION = #{situation,jdbcType=VARCHAR},
      </if>
      <if test="arriveSheetGoodsQty != null" >
        ARRIVE_SHEET_GOODS_QTY = #{arriveSheetGoodsQty,jdbcType=DECIMAL},
      </if>
      <if test="signNote != null and signNote != ''" >
        SIGN_NOTE = #{signNote,jdbcType=VARCHAR},
      </if>
      <if test="signTime != null and signTime != ''" >
        SIGN_TIME = #{signTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPrinted != null and isPrinted != ''" >
        IS_PRINTED = #{isPrinted,jdbcType=CHAR},
      </if>
      <if test="printtimes != null and printtimes != ''" >
        PRINTTIMES = #{printtimes,jdbcType=DECIMAL},
      </if>
      <if test="createUserName != null and createUserName != ''" >
        CREATE_USER_NAME = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createUserCode != null and createUserCode != ''" >
        CREATE_USER_CODE = #{createUserCode,jdbcType=VARCHAR},
      </if>
      <if test="createOrgName != null and createOrgName != ''" >
        CREATE_ORG_NAME = #{createOrgName,jdbcType=VARCHAR},
      </if>
      <if test="createOrgCode != null and createOrgCode != ''" >
        CREATE_ORG_CODE = #{createOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null and createTime != ''" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null and status != ''" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="isPdaSign != null and isPdaSign != ''" >
        IS_PDA_SIGN = #{isPdaSign,jdbcType=CHAR},
      </if>
      <if test="signGoodsQty != null" >
        SIGN_GOODS_QTY = #{signGoodsQty,jdbcType=DECIMAL},
      </if>
      <if test="active != null and active != ''" >
        ACTIVE = #{active,jdbcType=CHAR},
      </if>
      <if test="isSentRequired != null and isSentRequired != ''" >
        IS_SENT_REQUIRED = #{isSentRequired,jdbcType=CHAR},
      </if>
      <if test="isNeedInvoice != null and isNeedInvoice != ''" >
        IS_NEED_INVOICE = #{isNeedInvoice,jdbcType=CHAR},
      </if>
      <if test="preNoticeContent != null and preNoticeContent != ''" >
        PRE_NOTICE_CONTENT = #{preNoticeContent,jdbcType=VARCHAR},
      </if>
      <if test="deliverRequire != null and deliverRequire != ''" >
        DELIVER_REQUIRE = #{deliverRequire,jdbcType=VARCHAR},
      </if>
      <if test="isRfcing != null and isRfcing != ''" >
        IS_RFCING = #{isRfcing,jdbcType=CHAR},
      </if>
      <if test="operateTime != null and operateTime != ''" >
        OPERATE_TIME = #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null and operator != ''" >
        OPERATOR = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operatorCode != null and operatorCode != ''" >
        OPERATOR_CODE = #{operatorCode,jdbcType=VARCHAR},
      </if>
      <if test="operateOrgName != null and operateOrgName != ''" >
        OPERATE_ORG_NAME = #{operateOrgName,jdbcType=VARCHAR},
      </if>
      <if test="operateOrgCode != null and operateOrgCode != ''" >
        OPERATE_ORG_CODE = #{operateOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="modifyTime != null and modifyTime != ''" >
        MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="destroyed != null and destroyed != ''" >
        DESTROYED = #{destroyed,jdbcType=CHAR},
      </if>
       <if test="signStatus != null" >
        SIGN_STATUS = #{signStatus,jdbcType=VARCHAR},
     </if>
      <if test="deliverDate != null and deliverDate != ''">
        DELIVER_DATE = #{deliverDate,jdbcType=TIMESTAMP},
      </if>
      <if test="receiveMethod != null and receiveMethod != ''" >
        RECEIVE_METHOD = #{receiveMethod,jdbcType=VARCHAR},
      </if>
        <if test="togetherSendCode != null and  togetherSendCode != ''" >
       together_Send_Code = #{togetherSendCode,jdbcType=VARCHAR},
      </if>
       <if test="nextDeliverTime != null and nextDeliverTime != ''" >
        NEXT_DELIVER_TIME = #{nextDeliverTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
     <if test="oldArriveSheetGoodsQty != null and oldArriveSheetGoodsQty != ''" >
        and ARRIVE_SHEET_GOODS_QTY = #{oldArriveSheetGoodsQty,jdbcType=DECIMAL}
      </if>
       <if test="oldStatus != null and oldStatus != ''" >
        and STATUS = #{oldStatus,jdbcType=VARCHAR}
      </if>
  </update>
	<!--更具运单号，更新到达联，提货信息，证件类型，证件号码-->
	<!--更具运单号，更新DELIVER_REQUIRE送货要求，IS_SENT_REQUIRED是否必须送货，IS_NEED_INVOICE是否需要发票，PRE_NOTICE_CONTENT提前通知内容-->
	<update id="updateArriveSheetByWaybillNo" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.ArriveSheetEntity" >
    update PKP.T_SRV_ARRIVESHEET
    <set >
      <if test="identifyType != null and identifyType != ''" >
        IDENTIFY_TYPE = #{identifyType,jdbcType=VARCHAR},
      </if>
      <if test="identifyCode != null and identifyCode != ''" >
        IDENTIFY_CODE = #{identifyCode,jdbcType=VARCHAR},
      </if>
      <if test="deliverymanName != null and deliverymanName != ''" >
        DELIVERYMAN_NAME = #{deliverymanName,jdbcType=VARCHAR},
      </if>
      <if test="deliverRequire != null and deliverRequire != ''" >
        DELIVER_REQUIRE = #{deliverRequire,jdbcType=VARCHAR},
      </if>
      <if test="isSentRequired != null and isSentRequired != ''" >
        IS_SENT_REQUIRED = #{isSentRequired,jdbcType=VARCHAR},
      </if>
      <if test="isNeedInvoice != null and isNeedInvoice != ''" >
        IS_NEED_INVOICE = #{isNeedInvoice,jdbcType=VARCHAR},
      </if>
      <if test="preNoticeContent != null and preNoticeContent != ''" >
        PRE_NOTICE_CONTENT = #{preNoticeContent,jdbcType=VARCHAR},
      </if>
      <if test="deliverDate != null and deliverDate != ''">
        DELIVER_DATE = #{deliverDate,jdbcType=TIMESTAMP},
      </if>
	  <if test="modifyTime != null and modifyTime != ''">
		MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
	  </if>
      <if test="togetherSendCode != null and togetherSendCode !='N/A'">
		together_Send_Code = #{togetherSendCode,jdbcType=VARCHAR},
	  </if>
	  <if test="togetherSendCode != null  and togetherSendCode=='N/A'">
		together_Send_Code = null,
	  </if>
	  <if test="nextDeliverTime != null and nextDeliverTime != ''" >
        NEXT_DELIVER_TIME = #{nextDeliverTime,jdbcType=TIMESTAMP},
      </if>
    </set>
     where WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
     and   STATUS = #{status,jdbcType=VARCHAR}
  </update>
	
	<!--修改到达联 根据到达联编号,active ='Y' 有效, DESTROYED是否作废为N 未作废   MEIYING-->
	<update id="updateByArrivesheetNo" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.ArriveSheetEntity">
   	 update pkp.T_SRV_ARRIVESHEET
		<set>
			<if test="waybillNo != null">
        WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR},
			</if>
			<if test="deliverymanName != null and deliverymanName != ''">
        DELIVERYMAN_NAME = #{deliverymanName,jdbcType=VARCHAR},
			</if>
			<if test="identifyType != null">
        IDENTIFY_TYPE = #{identifyType,jdbcType=VARCHAR},
			</if>
			<if test="identifyCode != null">
        IDENTIFY_CODE = #{identifyCode,jdbcType=VARCHAR},
			</if>
			<if test="situation != null">
        SITUATION = #{situation,jdbcType=VARCHAR},
			</if>
			<if test="arriveSheetGoodsQty != null" >
        ARRIVE_SHEET_GOODS_QTY = #{arriveSheetGoodsQty,jdbcType=DECIMAL},
			</if>
			<if test="signNote!= null">
        SIGN_NOTE = #{signNote,jdbcType=VARCHAR},
			</if>
			<if test="signTime != null">
        SIGN_TIME = #{signTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isPrinted != null">
        IS_PRINTED = #{isPrinted,jdbcType=CHAR},
			</if>
			<if test="printtimes != null">
        PRINTTIMES = #{printtimes,jdbcType=DECIMAL},
			</if>
			<if test="createUserName != null">
        CREATE_USER_NAME = #{createUserName,jdbcType=VARCHAR},
			</if>
			<if test="createUserCode != null">
        CREATE_USER_CODE = #{createUserCode,jdbcType=VARCHAR},
			</if>
			<if test="createOrgName != null">
        CREATE_ORG_NAME = #{createOrgName,jdbcType=VARCHAR},
			</if>
			<if test="createOrgCode != null">
        CREATE_ORG_CODE = #{createOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
        STATUS = #{status,jdbcType=VARCHAR},
			</if>
			<if test="isPdaSign != null" >
        IS_PDA_SIGN = #{isPdaSign,jdbcType=CHAR},
			</if>
			<if test="signGoodsQty != null" >
        SIGN_GOODS_QTY = #{signGoodsQty,jdbcType=DECIMAL},
			</if>
			<if test="operator != null" >
	    OPERATOR = #{operator,jdbcType=VARCHAR},
	      </if>
	      <if test="operatorCode != null" >
	    OPERATOR_CODE = #{operatorCode,jdbcType=VARCHAR},
	      </if>
	      <if test="operateOrgName != null" >
	    OPERATE_ORG_NAME = #{operateOrgName,jdbcType=VARCHAR},
	      </if>
	       <if test="signStatus != null" >
        SIGN_STATUS = #{signStatus,jdbcType=VARCHAR},
     	 </if>
	      <if test="operateOrgCode != null" >
	    OPERATE_ORG_CODE = #{operateOrgCode,jdbcType=VARCHAR},
	      </if>
	      <if test="operateTime != null" >
        OPERATE_TIME = #{operateTime,jdbcType=TIMESTAMP},
      	  </if>
      	  <if test="receiveMethod != null" >
        RECEIVE_METHOD = #{receiveMethod,jdbcType=VARCHAR},
      </if>
	  <if test="modifyTime != null">
        MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
	  </if>
       <if test="togetherSendCode != null and  togetherSendCode != ''" >
       together_Send_Code = #{togetherSendCode,jdbcType=VARCHAR},
      </if>
      <if test="nextDeliverTime != null and nextDeliverTime != ''" >
        NEXT_DELIVER_TIME = #{nextDeliverTime,jdbcType=TIMESTAMP},
      </if>
      <!--update-->
     <if test="alittleShort != null and  alittleShort != ''" >
       ALITTLESHORT = #{alittleShort,jdbcType=VARCHAR},
     </if>
     <if test="packingResult != null and  packingResult != ''" >
       PACKINGRESULT = #{packingResult,jdbcType=VARCHAR},
     </if>
      <if test="deliverymanType != null and  deliverymanType != ''" >
       DELIVERMAN_TYPE = #{deliverymanType,jdbcType=VARCHAR},
     </if>
     <!-- add by 231438 添加快递员工号-->
     <if test="isCourierDelivery != null and isCourierDelivery !=''" >
       IS_COURIER_DELIVERY = #{isCourierDelivery,jdbcType=CHAR},
     </if>
     <if test="sendExpressEmpCode != null and sendExpressEmpCode !=''">
       SEND_EXPRESS_EMP_CODE = #{sendExpressEmpCode,jdbcType=VARCHAR},
     </if>
     <!-- 添加伙伴信息 -->
     <if test="isPartner != null and isPartner != ''" >
        	is_Partner = #{isPartner,jdbcType=VARCHAR},
    	  </if>
    	  <if test="partnerName != null and partnerName != ''" >
        	partner_Name = #{partnerName,jdbcType=VARCHAR},
    	  </if>
    	  <if test="partnerPhone != null and partnerPhone != ''" >
        	partner_Phone = #{partnerPhone,jdbcType=VARCHAR}
    	  </if>
	</set>
   	 where ARRIVESHEET_NO = #{arrivesheetNo,jdbcType=VARCHAR}
     	<if test="active != null and active != ''" >
        	and ACTIVE = #{active,jdbcType=VARCHAR}
		</if>
		<if test="destroyed != null and destroyed !=''" >
       		and DESTROYED = #{destroyed,jdbcType=CHAR}
     	</if>
     	<if test="oldArriveSheetGoodsQty != null and oldArriveSheetGoodsQty != ''" >
        	and ARRIVE_SHEET_GOODS_QTY = #{oldArriveSheetGoodsQty,jdbcType=DECIMAL}
      	</if>
       <if test="oldStatus != null and oldStatus != ''" >
        	and STATUS = #{oldStatus,jdbcType=VARCHAR}
    	  </if>
	</update>
	
	<!--修改到达联打印次数-->
	<update id="updatePrintTimesByArrivesheetNo" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.ArriveSheetEntity">
   	 update pkp.T_SRV_ARRIVESHEET
		<set>
			<if test="isPrinted != null">
        	IS_PRINTED = #{isPrinted,jdbcType=CHAR},
			</if>
			<if test="printTime != null">
        	PRINT_TIME = #{printTime,jdbcType=TIMESTAMP},
			</if>
			<if test="printOrgCode != null and printOrgCode != ''">
        	PRINT_ORG_CODE = #{printOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="printOrgName != null and printOrgName != ''">
        	PRINT_ORG_NAME = #{printOrgName,jdbcType=VARCHAR},
			</if>
			<if test="printUserName != null and printUserName != ''">
        	PRINT_USER_NAME = #{printUserName,jdbcType=VARCHAR},
			</if>
			<if test="printUserCode != null">
        	PRINT_USER_CODE = #{printUserCode,jdbcType=VARCHAR},
			</if>
        	PRINTTIMES = PRINTTIMES + 1
		</set>
   		where ARRIVESHEET_NO = #{arrivesheetNo,jdbcType=VARCHAR}
	</update>
	
	<select id="queryArriveExistSign" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.ArriveSheetEntity" resultType="java.lang.Long">
		select	/*模块：接送货-到达联- 查询到达联是否存在*/
		 count(id) from pkp.T_SRV_ARRIVESHEET arrive 
		<where>
			<choose>
				<when test="waybillNo != null and waybillNo!=''">
					and arrive.WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
				</when>
				<otherwise>
					and arrive.WAYBILL_NO = ''
				</otherwise>
			</choose>
			<if test="situation != null and situation!=''">
			<![CDATA[ and arrive.situation <> #{situation,jdbcType=VARCHAR}]]>
			</if>
			<if test="status!=null and status!=''">
    			and	arrive.STATUS=#{status,jdbcType=VARCHAR}
			</if>
			<if test="active != null and active != '' ">
				and arrive.ACTIVE = #{active,jdbcType=VARCHAR}
			</if>
			<if test="destroyed != null and destroyed !=''" >
       		 	and arrive.DESTROYED = #{destroyed,jdbcType=CHAR}
     		 </if>
		</where>
	</select>
	
	<select id="queryArriveSheetByEntity" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.ArriveSheetEntity" 
		resultMap="BaseResultMap">
  		 select /*模块：接送货-到达联- 查询到达联信息*/
  		  <include refid="Base_Column_List"/>  from pkp.T_SRV_ARRIVESHEET
		<where>
			<if test="arrivesheetNo != null and arrivesheetNo!=''">
       			and ARRIVESHEET_NO = #{arrivesheetNo,jdbcType=VARCHAR}
			</if>
			<if test="waybillNo != null and waybillNo != ''">
       			and waybill_No = #{waybillNo,jdbcType=VARCHAR}
			</if>
			<if test="status!=null and status!=''">
    			and	STATUS=#{status,jdbcType=VARCHAR}
			</if>
			<if test="active!=null and active!=''">
    			and	active=#{active,jdbcType=VARCHAR}
			</if>
			<if test="destroyed != null and destroyed !=''" >
       		 	and DESTROYED = #{destroyed,jdbcType=CHAR}
     		 </if>
			<if test="id != null and id != ''">
				and id=#{id,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<select id="queryArriveSheetByWayBillNo" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.ArriveSheetEntity" 
		resultMap="BaseResultMap">
  		 select  /*模块：接送货-到达联- 根据运单号查询到达联信息*/
  		 <include refid="Base_Column_List"/>
  		 from PKP.T_SRV_ARRIVESHEET 
		<where>
			<if test="waybillNo != null and waybillNo != '' ">
				and WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>
			<if test="active != null and active != '' ">
				and ACTIVE = #{active,jdbcType=VARCHAR}
			</if>
			<if test="status !=null and status!='' ">
    			and	STATUS = #{status,jdbcType=VARCHAR}
			</if>
			<if test="destroyed !=null and destroyed !='' ">
    			and	destroyed = #{destroyed,jdbcType=VARCHAR}
			</if>
			<if test="signStatus !=null and signStatus !='' ">
    			and	SIGN_STATUS = #{signStatus,jdbcType=VARCHAR}
			</if>
		</where>
		order by ARRIVESHEET_NO DESC
	</select>
	
	<select id="queryArriveSheetByLifeCycle" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetDto" 
		resultMap="BaseResultMap">
  		 select  /*模块：接送货-到达联- 根据运单号查询到达联信息*/
  		 <include refid="Base_Column_List"/>
  		 from PKP.T_SRV_ARRIVESHEET 
		<where>
			<if test="waybillNo != null and waybillNo != '' ">
				and WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>
			<if test="active != null and active != '' ">
				and ACTIVE = #{active,jdbcType=VARCHAR}
			</if>
			<if test="arriveSheetStatus !=null">
				and STATUS in 
				<foreach collection="arriveSheetStatus" item="item" index="index" open="("
					separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test="isRfcing !=null and isRfcing!='' ">
    			<![CDATA[ and IS_RFCING = #{isRfcing,jdbcType=CHAR}]]>
			</if>
			<!-- 是否作废 -->
			<if test="destroyed != null and destroyed !=''" >
       		 	and DESTROYED = #{destroyed,jdbcType=CHAR}
     		 </if>
		</where>
		order by ARRIVESHEET_NO DESC
	</select>
	
	<select id="queryMaxArriveSheetNoByWayBillNo" parameterType="java.lang.String" resultType="java.lang.Long">
  		 select /*模块：接送货-到达联- 根据运单号查询最大的到达联*/
  		 max(to_number(t.ARRIVESHEET_NO)) as maxValues 
  		 	from PKP.t_Srv_Arrivesheet T
  		 where T.WAYBILL_NO = #{value,jdbcType=VARCHAR}
	</select>
	
	<select id="getCountArriveSheetByNo" resultType="int">
  		 select count(*) /*模块：接送货-到达联- 根据到达联编号查询满足条件的记录数*/
  		  from pkp.T_SRV_ARRIVESHEET
		<where>
			<if test="arrivesheetNo != null and arrivesheetNo!=''">
       			and ARRIVESHEET_NO = #{arrivesheetNo,jdbcType=VARCHAR}
			</if>
			<if test="status!=null and status!=''">
    			and	STATUS=#{status,jdbcType=VARCHAR}
			</if>
			<if test="active!=null and active!=''">
    			and	ACTIVE=#{active,jdbcType=VARCHAR}
			</if>
			<if test="destroyed !=null and destroyed !='' ">
    			and	destroyed = #{destroyed,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<select id="getCountArriveSheetByWaybillNo" resultType="int">
		select /*模块：接送货-到达联- 根据运单号查询满足条件的记录数*/
		COUNT(id) from pkp.t_srv_arrivesheet t 
		<where>
			waybill_no = #{waybillNo,jdbcType=VARCHAR}
			and is_printed = #{isPrinted,jdbcType=VARCHAR}
			and active = #{active,jdbcType=VARCHAR}
		</where>
	</select>
	<select id="queryWaybillByArriveSheetNo" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetDto" 
		resultType="com.deppon.foss.module.pickup.pda.api.shared.dto.ValidateArriveSheetDto">
		select /*模块：接送货-到达联- 根据到达联编号，查询运单信息*/
			a.waybill_no as waybillNo,
			a.arrive_sheet_goods_qty as arriveSheetGoodsQty,
			b.product_code as productCode,
			b.customer_pickup_org_code as customerPickupOrgCode,
			b.receive_method as receiveMethod,
			b.goods_volume_total as goodsVolumeTotal,
			af.COMPLAIN_STATUS as complainStatus,
			af.SPECIAL_VALUE_ADDED_SERVICE as specialValueAddedService
		  from pkp.t_srv_arrivesheet a
		 inner join pkp.t_srv_waybill b
		    on a.waybill_no = b.waybill_no
		 inner join pkp.t_Srv_Actual_Freight af 
		    on a.waybill_no = af.waybill_no
		 where a.arrivesheet_no = #{arrivesheetNo,jdbcType=VARCHAR} 
		 and a.active = #{active,jdbcType=VARCHAR}
		  and a.DESTROYED = #{destroyed,jdbcType=CHAR}
		  and b.active = #{active,jdbcType=VARCHAR}
		  and a.status=#{status,jdbcType=VARCHAR} 
	</select>
	
	<select id="queryArriveSheetByWayblillNo" 
		parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetActualFreightDto"
		resultType="int">
		select /*模块：接送货-到达联- 根据运单号、最终库存部门CODE 查询到达联*/
		 count(a.id)
			from pkp.t_srv_arrivesheet a 
			inner join pkp.t_srv_actual_freight b
			on a.waybill_no = b.waybill_no
		<where>
			<if test="waybillNo != null and waybillNo != '' ">
				and a.waybill_no = #{waybillNo,jdbcType=VARCHAR}
			</if>
			<if test="active != null and active != '' ">
				and a.active = #{active,jdbcType=VARCHAR}
			</if>
			<if test="endStockOrgCode != null and endStockOrgCode != '' ">
				and b.end_stock_org_code = #{endStockOrgCode,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<select id="queryArriveSheetByDriverCode"
		resultType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArrivesheetDeliverDto"
		parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArrivesheetDeliverDto">
		select /*模块：接送货-到达联- 根据条件查询到达联的派送记录 返回 运单、派送单信息*/
			 b.waybill_no as waybillNo, /**运单号**/
			 b.arrange_goods_qty as arriveSheetGoodsQty,
			 b.weight as weight, /**重量**/
			 b.goods_volume_total as goodsVolumeTotal, /**体积**/
			 d.return_bill_type as returnBillType, /**是否有返单**/
			 e.actual_freight / 100 + e.cod_amount / 100 as totalFee, /**金额**/
			 a.vehicle_no as vehicleNo /**车牌号**/
			  from pkp.t_srv_deliverbill a
			 inner join pkp.t_srv_deliverbill_detail b
			    on a.id = b.t_srv_deliverbill_id
			   and a.driver_code =  #{driverCode,jdbcType=VARCHAR}
			 inner join pkp.t_srv_arrivesheet arr on arr.arrivesheet_no = b.arrivesheet_no
			 inner join pkp.t_srv_waybill d
			  on d.waybill_no = b.waybill_no
			   and d.active = #{active,jdbcType=VARCHAR}
			 inner join pkp.t_srv_repayment e
			    on e.waybill_no = b.waybill_no
		 <where>
			<if test="active != null and active != '' ">
				and e.active = #{active,jdbcType=VARCHAR}
				and arr.active = #{active,jdbcType=VARCHAR}
			</if>
			<if test="destroyed != null and destroyed !=''" >
       		 	and arr.DESTROYED = #{destroyed,jdbcType=CHAR}
     		 </if>
			<if test="status != null and status != '' ">
				and arr.status = #{status,jdbcType=VARCHAR}
			</if>
			<if test="deliverbillStatus != null and deliverbillStatus != '' ">
				and a.status = #{deliverbillStatus,jdbcType=VARCHAR}
			</if>
			<if test="stlbillGeneratedStatus != null and stlbillGeneratedStatus != '' ">
				and e.STLBILL_GENERATED_STATUS = #{stlbillGeneratedStatus,jdbcType=VARCHAR}
			</if>
			<if test="operateBeginTime != null">
				<![CDATA[and e.payment_time > #{operateBeginTime,jdbcType=TIMESTAMP}]]>
			</if>
			<if test="operateEndTime != null">
				<![CDATA[and e.payment_time < #{operateEndTime,jdbcType=TIMESTAMP}]]>
			</if>
		</where>
		order by e.waybill_no
	</select>
	
	<select id="queryExpressArriveSheetByDriverCode"
		resultType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArrivesheetDeliverDto"
		parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArrivesheetDeliverDto">
		select /*模块：接送货-快递到达联- 根据条件查询到达联的派送记录 返回 运单、派送单信息*/
			 b.waybill_no as waybillNo, /**运单号**/
			 b.arrange_goods_qty as arriveSheetGoodsQty,
			 b.weight as weight, /**重量**/
			 b.goods_volume_total as goodsVolumeTotal, /**体积**/
			 d.return_bill_type as returnBillType, /**是否有返单**/
			 e.actual_freight / 100 + e.cod_amount / 100 as totalFee, /**金额**/
			 a.vehicle_no as vehicleNo, /**车牌号**/
			 DECODE(E.BANK_TRADE_SERIAL,NULL,0,e.actual_freight / 100 + e.cod_amount / 100) as cardIncome, /**刷卡收入**/
       		 DECODE(E.BANK_TRADE_SERIAL,NULL,e.actual_freight / 100 + e.cod_amount / 100,0) as cashIncome  /**现金收入**/
			  from pkp.t_srv_deliverbill a
			 inner join pkp.t_srv_deliverbill_detail b
			    on a.id = b.t_srv_deliverbill_id
			   and a.driver_code =  #{driverCode,jdbcType=VARCHAR}
			 inner join pkp.t_srv_arrivesheet arr on arr.arrivesheet_no = b.arrivesheet_no
			 inner join pkp.t_srv_waybill d
			  on d.waybill_no = b.waybill_no
			   and d.active = #{active,jdbcType=VARCHAR}
			 inner join pkp.t_srv_repayment e
			    on e.waybill_no = b.waybill_no
			 LEFT JOIN PKP.T_SRV_WAYBILL_EXPRESS E ON d.WAYBILL_NO=E.WAYBILL_NO
		 <where>
			<if test="active != null and active != '' ">
				and e.active = #{active,jdbcType=VARCHAR}
				and arr.active = #{active,jdbcType=VARCHAR}
			</if>
			<if test="destroyed != null and destroyed !=''" >
       		 	and arr.DESTROYED = #{destroyed,jdbcType=CHAR}
     		 </if>
			<if test="status != null and status != '' ">
				and arr.status = #{status,jdbcType=VARCHAR}
			</if>
			<if test="deliverbillStatus != null and deliverbillStatus != '' ">
				and a.status = #{deliverbillStatus,jdbcType=VARCHAR}
			</if>
			<if test="stlbillGeneratedStatus != null and stlbillGeneratedStatus != '' ">
				and e.STLBILL_GENERATED_STATUS = #{stlbillGeneratedStatus,jdbcType=VARCHAR}
			</if>
			<if test="operateBeginTime != null">
				<![CDATA[and e.payment_time >= #{operateBeginTime,jdbcType=TIMESTAMP}]]>
			</if>
			<if test="operateEndTime != null">
				<![CDATA[and e.payment_time < #{operateEndTime,jdbcType=TIMESTAMP}]]>
			</if>
		</where>
		order by e.waybill_no
	</select>	
	
	<!-- 根据到达联编号,是否有效  -有效,是否作废 -未作废  查运单运输性质  是否整车运单,到达联id,提货人证件号码,证件类型 ,到达联件数,最终配载部门,订单号，提货方式 -->
	<select id="queryPartWaybillPartArriveSheet" 
		parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.ArriveSheetEntity"
		resultType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.SignDto">
		select /*模块：接送货-签收-根据到达联编号查询满足的信息 */
		 w.product_code productCode,
		 w.is_whole_vehicle isWholeVehicle,
		 w.order_no orderNo,w.receive_method receiveMethod,
		 w.goods_qty_total goodsQtyTotal,
		 w.last_load_org_code lastLoadOrgCode,
		 w.DELIVERY_CUSTOMER_MOBILEPHONE deliveryCustomerMobilephone,
		 w.receive_customer_contact receiveCustomerContact,
    	 w.RECEIVE_CUSTOMER_MOBILEPHONE receiveCustomerMobilephone,
    	 w.delivery_customer_contact deliveryCustomerContact,
    	 w.RECEIVE_ORG_CODE receiveOrgCode,
    	 w.total_fee/100 totalFee,
		 w.insurance_amount/100 insuranceAmount,
		 w.cod_amount/100 codAmount,
		 w.bill_time billTime,
		 w.waybill_no waybillNo,
		 w.pending_type pendingType,
		 w.receive_Customer_Code receiveCustomerCode,
		 w.delivery_Customer_Code deliveryCustomerCode,
		 w.DELIVERY_CUSTOMER_NAME deliveryCustomerName,
		 w.pre_pay_amount/100 prePayAmount,w.DELIVERY_CUSTOMER_PROV_CODE deliveryCustomerProvCode,
		 sheet.deliveryman_name deliverymanName,
		 sheet.identify_type identifyType,
		 sheet.identify_code identifyCode,
		 sheet.id id,
		 sheet.arrive_sheet_goods_qty arriveSheetGoodsQty,
		 w.customer_pickup_org_code customerPickupOrgCode,
		 w.IS_EXPRESS  isExpress
	from pkp.t_srv_waybill w join pkp.t_srv_arrivesheet sheet
 	on w.waybill_no = sheet.waybill_no 
		<where>
			<choose>
			<!-- 到达联编号 -->
				<when test="arrivesheetNo != null and arrivesheetNo != ''">
					<![CDATA[ and sheet.arrivesheet_no = #{arrivesheetNo,jdbcType=VARCHAR} ]]>
				</when>
				<otherwise>
					and sheet.arrivesheet_no =  ''
				</otherwise>
			</choose>
			<!-- 是否有效 -->
			<if test="active != null and active != '' ">
				and w.active  = #{active,jdbcType=VARCHAR}
				and sheet.active = #{active,jdbcType=VARCHAR}
			</if>
			<!-- 是否作废 -->
			<if test="destroyed != null and destroyed !=''" >
       		 	and sheet.DESTROYED = #{destroyed,jdbcType=CHAR}
     		 </if>
     		 <!--到达联状态 -->
     		 <if test="status!=null and status!=''">
    			and	sheet.STATUS=#{status,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	<!-- 根据到达联编号查询该到达联的第一次创建时间 -->
	<select id="queryArriveSheetCreateTime" parameterType="java.lang.String" resultMap="BaseResultMap">
		select /*模块：接送货-到达联- 根据到达联编号查询该到达联的第一次创建时间 */
  		 <include refid="Base_Column_List"/>
  		 from PKP.T_SRV_ARRIVESHEET
  		 where CREATE_TIME = (select  min(CREATE_TIME) createTime from PKP.T_SRV_ARRIVESHEET 
                               where ARRIVESHEET_NO = #{value,jdbcType=VARCHAR})
          and ARRIVESHEET_NO = #{value,jdbcType=VARCHAR}
	</select>
	
	<sql id="Waybill_Column_List_Select">
		WAYBILL.ID, WAYBILL.WAYBILL_NO, WAYBILL.ORDER_NO, WAYBILL.ORDER_CHANNEL,WAYBILL.ORDER_PAID_METHOD,
		WAYBILL.DELIVERY_CUSTOMER_ID,
		WAYBILL.DELIVERY_CUSTOMER_CODE,
		WAYBILL.DELIVERY_CUSTOMER_NAME,
		WAYBILL.DELIVERY_CUSTOMER_MOBILEPHONE, WAYBILL.DELIVERY_CUSTOMER_PHONE,
		WAYBILL.DELIVERY_CUSTOMER_CONTACT,WAYBILL.DELIVERY_CUSTOMER_ADDRESS,
		WAYBILL.RECEIVE_CUSTOMER_CODE,
		WAYBILL.RECEIVE_CUSTOMER_NAME,
		WAYBILL.RECEIVE_CUSTOMER_MOBILEPHONE, WAYBILL.RECEIVE_CUSTOMER_PHONE,
		WAYBILL.RECEIVE_CUSTOMER_CONTACT,
		receive_prov.name || receive_city.name || receive_dist.name || receive_village.name || WAYBILL.receive_customer_address RECEIVE_CUSTOMER_ADDRESS,
		RECEIVE_CITY.NAME RECEIVE_CUSTOMER_CITY_CODE,
		WAYBILL.RECEIVE_METHOD,
		WAYBILL.LOAD_METHOD,
		WAYBILL.TARGET_ORG_CODE,
		WAYBILL.PICKUP_TO_DOOR,
		WAYBILL.DRIVER_CODE, WAYBILL.PICKUP_CENTRALIZED, WAYBILL.LOAD_LINE_CODE, WAYBILL.LOAD_ORG_CODE,
		WAYBILL.LAST_LOAD_ORG_CODE,
		WAYBILL.PRE_DEPARTURE_TIME, WAYBILL.PRE_CUSTOMER_PICKUP_TIME,
		WAYBILL.CAR_DIRECT_DELIVERY, WAYBILL.GOODS_NAME,
		WAYBILL.GOODS_QTY_TOTAL,
		WAYBILL.GOODS_WEIGHT_TOTAL,
		WAYBILL.GOODS_VOLUME_TOTAL, WAYBILL.GOODS_SIZE, WAYBILL.GOODS_TYPE_CODE, WAYBILL.PRECIOUS_GOODS,
		WAYBILL.SPECIAL_SHAPED_GOODS, WAYBILL.OUTER_NOTES, WAYBILL.INNER_NOTES, WAYBILL.GOODS_PACKAGE,
		WAYBILL.INSURANCE_AMOUNT/100 as INSURANCE_AMOUNT,
		WAYBILL.COD_AMOUNT/100 as COD_AMOUNT,
		WAYBILL.COD_RATE, WAYBILL.COD_FEE/100 as COD_FEE, WAYBILL.REFUND_TYPE,
		WAYBILL.RETURN_BILL_TYPE,
		WAYBILL.SECRET_PREPAID, WAYBILL.TO_PAY_AMOUNT/100 as TO_PAY_AMOUNT,
		WAYBILL.PRE_PAY_AMOUNT/100 as PRE_PAY_AMOUNT, 
		WAYBILL.DELIVERY_GOODS_FEE/100 as DELIVERY_GOODS_FEE,
		WAYBILL.OTHER_FEE/100 as OTHER_FEE, WAYBILL.PACKAGE_FEE/100 as PACKAGE_FEE,
		WAYBILL.PROMOTIONS_FEE/100 as PROMOTIONS_FEE, WAYBILL.BILLING_TYPE,
		WAYBILL.TRANSPORT_FEE/100
		as TRANSPORT_FEE, WAYBILL.VALUE_ADD_FEE/100 as VALUE_ADD_FEE, WAYBILL.PAID_METHOD,
		WAYBILL.ARRIVE_TYPE, WAYBILL.ACTIVE, WAYBILL.FORBIDDEN_LINE, WAYBILL.FREIGHT_METHOD,
		WAYBILL.FLIGHT_SHIFT,
		WAYBILL.TOTAL_FEE/100 as TOTAL_FEE, WAYBILL.PROMOTIONS_CODE, WAYBILL.CREATE_TIME,
		WAYBILL.MODIFY_TIME,
		WAYBILL.BILL_TIME,
		WAYBILL.MODIFY_USER_CODE,
		WAYBILL.MODIFY_ORG_CODE, WAYBILL.REF_ID, WAYBILL.REF_CODE, WAYBILL.CURRENCY_CODE,
		WAYBILL.IS_WHOLE_VEHICLE,
		WAYBILL.WHOLE_VEHICLE_APPFEE/100 as WHOLE_VEHICLE_APPFEE,
		WAYBILL.WHOLE_VEHICLE_ACTUALFEE/100 as WHOLE_VEHICLE_ACTUALFEE, WAYBILL.ACCOUNT_NAME,
		WAYBILL.ACCOUNT_CODE,
		WAYBILL.ACCOUNT_BANK, WAYBILL.BILL_WEIGHT, WAYBILL.PICKUP_FEE/100 as PICKUP_FEE,
		WAYBILL.SERVICE_FEE/100 as SERVICE_FEE, WAYBILL.PRE_ARRIVE_TIME, WAYBILL.TRANSPORT_TYPE,
		WAYBILL.ADD_TIME, WAYBILL.INSURANCE_RATE, WAYBILL.INSURANCE_FEE/100 as INSURANCE_FEE,
		WAYBILL.UNIT_PRICE/100 AS UNIT_PRICE,WAYBILL.CONTACT_ADDRESS_ID,
		WAYBILL.FLIGHT_NUMBER_TYPE,
		WAYBILL.Is_Init,
		WAYBILL.COLLECTION_DEPARTMENT, WAYBILL.TRANSPORTATION_REMARK,WAYBILL.IS_PASS_OWN_DEPARTMENT,
		WAYBILL.PAPER_NUM,WAYBILL.WOOD_NUM,WAYBILL.FIBRE_NUM,WAYBILL.SALVER_NUM,WAYBILL.MEMBRANE_NUM,WAYBILL.OTHER_PACKAGE,WAYBILL.DELIVERY_CUSTOMER_CONTACT_ID,WAYBILL.RECEIVE_CUSTOMER_CONTACT_ID,
		WAYBILL.PENDING_TYPE,WAYBILL.LICENSE_PLATE_NUM,WAYBILL.ORDER_VEHICLE_NUM,
		RECEIVEORG.NAME RECEIVE_ORG_NAME,
		RECEIVEORG.CODE RECEIVE_ORG_CODE,
		RECEIVEORG.ADDRESS RECEIVE_ORG_ADDRESS,
		RECEIVEORG.DEP_TELEPHONE RECEIVE_DEP_TELEPHONE,
		receiveorg_dist.name DELIVERY_CUSTOMER_CITY_CODE,
		PICKUPORG.NAME CUSTOMER_PICKUP_ORG_CODE,
		PICKUPORG.ADDRESS CUSTOMER_PICKUP_ORG_ADDRESS,
		PICKUPORG.DEP_TELEPHONE CUSTOMER_PICKUP_TELEPHONE,
		PICKUPORG.PROV_CODE CUSTOMER_PICKUP_PROV_CODE,
		PICKUPORG.CITY_CODE CUSTOMER_PICKUP_CITY_CODE,
		EMPLOYEE.EMP_NAME CREATE_USER_CODE,
        CREATE_ORG.NAME CREATE_ORG_CODE,
        pro.NAME PRODUCT_CODE,
        WAYBILL.DELIVERY_BIG_CUSTOMER,
        WAYBILL.RECEIVE_BIG_CUSTOMER,
		 WAYBILL.IS_EXPRESS,WAYBILL.ORDER_CHANNEL
	</sql>
	
	<sql id="Charge_Column_List_Select" >
	    CHARGE.PRICING_ENTRY_CODE,PRICE.NAME PRICE_ENTRY_NAME, CHARGE.AMOUNT/100 as AMOUNT, CHARGE.PRICING_CRI_DETAIL_ID,CHARGE.CURRENCY_CODE
  	</sql>
  	
  	<sql id="Freight_Column_List_Select" >
	    AF.ARRIVE_NOTOUT_GOODS_QTY,AF.SETTLE_STATUS,AF.STORAGE_CHARGE/100 as STORAGE_CHARGE,AF.RECEIVE_CUSTOMER_ADDRESS_NOTE AS RECEIVE_CUSTOMER_ADDRESS_NOTE,AF.DELIVERY_CUSTOMER_ADDRESS_NOTE AS DELIVERY_CUSTOMER_ADDRESS_NOTE
  	</sql>
  	
  	<resultMap type="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetWaybillAddPropertyDto" id="arriveSheetWaybillMap">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="ORDER_NO" property="orderNo" jdbcType="VARCHAR" />
		<result column="ORDER_CHANNEL" property="orderChannel"
			jdbcType="VARCHAR" />
		<result column="order_paid_method" property="orderPaidMethod"
			jdbcType="VARCHAR" />	
		<result column="DELIVERY_CUSTOMER_ID" property="deliveryCustomerId"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CODE" property="deliveryCustomerCode"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_NAME" property="deliveryCustomerName"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_MOBILEPHONE" property="deliveryCustomerMobilephone"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_PHONE" property="deliveryCustomerPhone"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CONTACT" property="deliveryCustomerContact"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_ADDRESS" property="deliveryCustomerAddress"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_ID" property="receiveCustomerId"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CODE" property="receiveCustomerCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_NAME" property="receiveCustomerName"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_MOBILEPHONE" property="receiveCustomerMobilephone"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_PHONE" property="receiveCustomerPhone"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CONTACT" property="receiveCustomerContact"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_ORG_CODE" property="receiveOrgCode"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_ORG_NAME" property="receiveOrgName"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_ORG_ADDRESS" property="receiveOrgAddress"
			jdbcType="VARCHAR" />
		<result column="PRODUCT_CODE" property="productCode" jdbcType="VARCHAR" />
		<result column="RECEIVE_METHOD" property="receiveMethod"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_PICKUP_ORG_CODE" property="customerPickupOrgCode"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_PICKUP_ORG_ADDRESS" property="customerPickupOrgAddress"
			jdbcType="VARCHAR" />
		<result column="LOAD_METHOD" property="loadMethod" jdbcType="VARCHAR" />
		<result column="TARGET_ORG_CODE" property="targetOrgCode"
			jdbcType="VARCHAR" />
		<result column="PICKUP_TO_DOOR" property="pickupToDoor"
			jdbcType="CHAR" />
		<result column="DRIVER_CODE" property="driverCode" jdbcType="VARCHAR" />
		<result column="PICKUP_CENTRALIZED" property="pickupCentralized"
			jdbcType="CHAR" />
		<result column="LOAD_LINE_CODE" property="loadLineCode"
			jdbcType="VARCHAR" />
		<result column="LOAD_ORG_CODE" property="loadOrgCode" jdbcType="VARCHAR" />
		<result column="LAST_LOAD_ORG_CODE" property="lastLoadOrgCode"
			jdbcType="VARCHAR" />
		<result column="PRE_DEPARTURE_TIME" property="preDepartureTime"
			jdbcType="TIMESTAMP" />
		<result column="PRE_CUSTOMER_PICKUP_TIME" property="preCustomerPickupTime"
			jdbcType="TIMESTAMP" />
		<result column="CAR_DIRECT_DELIVERY" property="carDirectDelivery"
			jdbcType="CHAR" />
		<result column="GOODS_NAME" property="goodsName" jdbcType="VARCHAR" />
		<result column="GOODS_QTY_TOTAL" property="goodsQtyTotal"
			jdbcType="DECIMAL" />
		<result column="GOODS_WEIGHT_TOTAL" property="goodsWeightTotal"
			jdbcType="DECIMAL" />
		<result column="GOODS_VOLUME_TOTAL" property="goodsVolumeTotal"
			jdbcType="DECIMAL" />
		<result column="GOODS_SIZE" property="goodsSize" jdbcType="VARCHAR" />
		<result column="GOODS_TYPE_CODE" property="goodsTypeCode"
			jdbcType="VARCHAR" />
		<result column="PRECIOUS_GOODS" property="preciousGoods"
			jdbcType="CHAR" />
		<result column="SPECIAL_SHAPED_GOODS" property="specialShapedGoods"
			jdbcType="CHAR" />
		<result column="OUTER_NOTES" property="outerNotes" jdbcType="VARCHAR" />
		<result column="INNER_NOTES" property="innerNotes" jdbcType="VARCHAR" />
		<result column="GOODS_PACKAGE" property="goodsPackage"
			jdbcType="VARCHAR" />
		<result column="INSURANCE_AMOUNT" property="insuranceAmount"
			jdbcType="DECIMAL" />
		<result column="COD_AMOUNT" property="codAmount" jdbcType="DECIMAL" />
		<result column="COD_RATE" property="codRate" jdbcType="DECIMAL" />
		<result column="COD_FEE" property="codFee" jdbcType="DECIMAL" />
		<result column="REFUND_TYPE" property="refundType" jdbcType="VARCHAR" />
		<result column="RETURN_BILL_TYPE" property="returnBillType"
			jdbcType="VARCHAR" />
		<result column="SECRET_PREPAID" property="secretPrepaid"
			jdbcType="CHAR" />
		<result column="TO_PAY_AMOUNT" property="toPayAmount" jdbcType="DECIMAL" />
		<result column="PRE_PAY_AMOUNT" property="prePayAmount"
			jdbcType="DECIMAL" />
		<result column="DELIVERY_GOODS_FEE" property="deliveryGoodsFee"
			jdbcType="DECIMAL" />
		<result column="OTHER_FEE" property="otherFee" jdbcType="DECIMAL" />
		<result column="PACKAGE_FEE" property="packageFee" jdbcType="DECIMAL" />
		<result column="PROMOTIONS_FEE" property="promotionsFee"
			jdbcType="DECIMAL" />
		<result column="BILLING_TYPE" property="billingType" jdbcType="VARCHAR" />
		<result column="TRANSPORT_FEE" property="transportFee"
			jdbcType="DECIMAL" />
		<result column="VALUE_ADD_FEE" property="valueAddFee" jdbcType="DECIMAL" />
		<result column="PAID_METHOD" property="paidMethod" jdbcType="VARCHAR" />
		<result column="ARRIVE_TYPE" property="arriveType" jdbcType="VARCHAR" />
		<result column="ACTIVE" property="active" jdbcType="CHAR" />
		<result column="FORBIDDEN_LINE" property="forbiddenLine"
			jdbcType="CHAR" />
		<result column="FREIGHT_METHOD" property="freightMethod"
			jdbcType="VARCHAR" />
		<result column="FLIGHT_SHIFT" property="flightShift" jdbcType="VARCHAR" />
		<result column="TOTAL_FEE" property="totalFee" jdbcType="DECIMAL" />
		<result column="PROMOTIONS_CODE" property="promotionsCode"
			jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="MODIFY_TIME" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="BILL_TIME" property="billTime" jdbcType="TIMESTAMP" />
		<result column="CREATE_USER_CODE" property="createUserCode"
			jdbcType="VARCHAR" />
		<result column="MODIFY_USER_CODE" property="modifyUserCode"
			jdbcType="VARCHAR" />
		<result column="CREATE_ORG_CODE" property="createOrgCode"
			jdbcType="VARCHAR" />
		<result column="MODIFY_ORG_CODE" property="modifyOrgCode"
			jdbcType="VARCHAR" />
		<result column="REF_ID" property="refId" jdbcType="VARCHAR" />
		<result column="REF_CODE" property="refCode" jdbcType="VARCHAR" />
		<result column="CURRENCY_CODE" property="currencyCode"
			jdbcType="VARCHAR" />
		<result column="IS_WHOLE_VEHICLE" property="isWholeVehicle"
			jdbcType="CHAR" />
		<result column="WHOLE_VEHICLE_APPFEE" property="wholeVehicleAppfee"
			jdbcType="DECIMAL" />
		<result column="WHOLE_VEHICLE_ACTUALFEE" property="wholeVehicleActualfee"
			jdbcType="DECIMAL" />
		<result column="ACCOUNT_NAME" property="accountName" jdbcType="VARCHAR" />
		<result column="ACCOUNT_CODE" property="accountCode" jdbcType="VARCHAR" />
		<result column="ACCOUNT_BANK" property="accountBank" jdbcType="VARCHAR" />
		<result column="BILL_WEIGHT" property="billWeight" jdbcType="DECIMAL" />
		<result column="PICKUP_FEE" property="pickupFee" jdbcType="DECIMAL" />
		<result column="SERVICE_FEE" property="serviceFee" jdbcType="DECIMAL" />
		<result column="PRE_ARRIVE_TIME" property="preArriveTime"
			jdbcType="TIMESTAMP" />
		<result column="TRANSPORT_TYPE" property="transportType"
			jdbcType="VARCHAR" />
		<result column="ADD_TIME" property="addTime" jdbcType="TIMESTAMP" />
		<result column="INSURANCE_RATE" property="insuranceRate"
			jdbcType="DECIMAL" />
		<result column="INSURANCE_FEE" property="insuranceFee"
			jdbcType="DECIMAL" />
		<result column="UNIT_PRICE" property="unitPrice" jdbcType="DECIMAL" />
		<result column="CONTACT_ADDRESS_ID" property="contactAddressId"
			jdbcType="VARCHAR" />
		<result column="FLIGHT_NUMBER_TYPE" property="flightNumberType"
			jdbcType="VARCHAR" />
		<result column="COLLECTION_DEPARTMENT" property="collectionDepartment"
			jdbcType="VARCHAR" />
		<result column="TRANSPORTATION_REMARK" property="transportationRemark"
			jdbcType="VARCHAR" />
		<result column="IS_PASS_OWN_DEPARTMENT" property="isPassOwnDepartment"
			jdbcType="CHAR" />
		<result column="PAPER_NUM" property="paperNum" jdbcType="NUMERIC" />
		<result column="WOOD_NUM" property="woodNum" jdbcType="NUMERIC" />
		<result column="FIBRE_NUM" property="fibreNum" jdbcType="NUMERIC" />
		<result column="SALVER_NUM" property="salverNum" jdbcType="NUMERIC" />
		<result column="MEMBRANE_NUM" property="membraneNum" jdbcType="NUMERIC" />
		<result column="OTHER_PACKAGE" property="otherPackage"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CONTACT_ID" property="deliverCustContactId"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_CONTACT_ID" property="receiverCustContactId"
			jdbcType="VARCHAR" />
		<result column="PENDING_TYPE" property="pendingType" jdbcType="VARCHAR" />
		<result column="LICENSE_PLATE_NUM" property="licensePlateNum"
			jdbcType="VARCHAR" />
		<result column="ORDER_VEHICLE_NUM" property="orderVehicleNum"
			jdbcType="VARCHAR" />
		<result column="SETTLE_STATUS" property="settleStatus"
			jdbcType="VARCHAR" />
		<result column="ARRIVE_NOTOUT_GOODS_QTY" property="arriveNotoutGoodsQty"
			jdbcType="VARCHAR" />
		<!--新增保管费字段-->
		<result column="STORAGE_CHARGE" property="storageCharge"
			jdbcType="DECIMAL" />
		<result column="RECEIVE_CUSTOMER_ADDRESS" property="receiveCustomerAddress"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_DEP_TELEPHONE" property="receiveDepTelephone"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_PICKUP_TELEPHONE" property="customerPickupTelephone"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_PICKUP_PROV_CODE" property="customerPickupProvCode"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_CITY_CODE" property="deliveryCustomerCityCode"
			jdbcType="VARCHAR" />
		<result column="Is_Init" property="isInit"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_BIG_CUSTOMER" property="deliveryBigCustomer"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_BIG_CUSTOMER" property="receiveBigCustomer"
			jdbcType="VARCHAR" />
		<!--新增是否快递字段  -->
		<result column="IS_EXPRESS" property="isExpress" jdbcType="CHAR"/>
		<!-- 新增提货网点对应的城市的CODE -->
		<result column="CUSTOMER_PICKUP_CITY_CODE" property="customerPickupCityCode"
			jdbcType="VARCHAR" />
		<result column="DELIVERY_CUSTOMER_ADDRESS_NOTE" property="deliveryCustomerAddressNote"
			jdbcType="VARCHAR" />
		<result column="RECEIVE_CUSTOMER_ADDRESS_NOTE" property="receiveCustomerAddressNote"
			jdbcType="VARCHAR" />
		<collection property="waybillChargeDtlPrintDtos" resultMap="waybillChargeDtlPrintDtos" />
  	</resultMap>
  	
  	<resultMap id="waybillChargeDtlPrintDtos" type="com.deppon.foss.module.pickup.predeliver.api.shared.dto.WaybillChargeDtlPrintDto">
	    <result column="PRICE_ENTRY_NAME" property="pricingEntryName" jdbcType="VARCHAR" />
	    <result column="PRICING_ENTRY_CODE" property="pricingEntryCode" jdbcType="VARCHAR" />
	    <result column="AMOUNT" property="amount" jdbcType="DECIMAL" />
	    <result column="PRICING_CRI_DETAIL_ID" property="pricingCriDetailId" jdbcType="VARCHAR" />
	    <result column="CURRENCY_CODE" property="currencyCode" jdbcType="VARCHAR"/>
	</resultMap>
	
	<select id="queryPrintInfoByWaybillNo" resultMap="arriveSheetWaybillMap">
		select 
		<include refid="Waybill_Column_List_Select"/>,
		<include refid="Charge_Column_List_Select"/>,
		<include refid="Freight_Column_List_Select"/>
		 from PKP.T_SRV_WAYBILL WAYBILL
		LEFT JOIN PKP.T_SRV_WAYBILL_CHARGE_DETAIL CHARGE ON WAYBILL.WAYBILL_NO = CHARGE.WAYBILL_NO
		and CHARGE.ACTIVE = #{active,jdbcType=VARCHAR}
		left join bse.T_BAS_DISTRICT receive_prov on receive_prov.code = waybill.receive_customer_prov_code and receive_prov.active = #{active,jdbcType=VARCHAR}
		left join bse.T_BAS_DISTRICT receive_city on receive_city.code =
		waybill.receive_customer_city_code and receive_city.active = #{active,jdbcType=VARCHAR}
		left join bse.T_BAS_DISTRICT
		receive_dist on receive_dist.code = waybill.receive_customer_dist_code and receive_dist.active = #{active,jdbcType=VARCHAR}
		left join bse.t_bas_org receiveOrg on WAYBILL.RECEIVE_ORG_CODE = RECEIVEORG.CODE and receiveOrg.active = #{active,jdbcType=VARCHAR}
  		LEFT JOIN BSE.T_BAS_ORG PICKUPORG ON WAYBILL.CUSTOMER_PICKUP_ORG_CODE = PICKUPORG.CODE and PICKUPORG.active = #{active,jdbcType=VARCHAR}
  		LEFT JOIN bse.T_BAS_DISTRICT receiveorg_dist on receiveorg_dist.code =
                                               RECEIVEORG.CITY_CODE and receiveorg_dist.active = #{active,jdbcType=VARCHAR}
		LEFT JOIN BSE.T_BAS_EMPLOYEE EMPLOYEE ON WAYBILL.CREATE_USER_CODE = EMPLOYEE.EMP_CODE and EMPLOYEE.active = #{active,jdbcType=VARCHAR}
		LEFT JOIN BSE.T_BAS_ORG CREATE_ORG ON WAYBILL.CREATE_ORG_CODE = CREATE_ORG.CODE and CREATE_ORG.active = #{active,jdbcType=VARCHAR}
		left join pkp.t_srv_product pro on pro.code = waybill.product_code
		and pro.active = #{active,jdbcType=CHAR} and waybill.bill_time between
		pro.BEGIN_TIME and pro.END_TIME
		left join PKP.T_SRV_PRICING_ENTRY PRICE ON CHARGE.PRICING_ENTRY_CODE = PRICE.CODE
		and PRICE.active = #{active,jdbcType=CHAR} and waybill.bill_time between
		PRICE.BEGIN_TIME and PRICE.END_TIME
		JOIN PKP.T_SRV_ACTUAL_FREIGHT AF ON WAYBILL.WAYBILL_NO = AF.WAYBILL_NO
		left join bse.T_BAS_DISTRICT receive_village
		on receive_village.code = af.receive_customer_village_code
		   and receive_village.active = #{active, jdbcType=VARCHAR}
		WHERE WAYBILL.WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR} and WAYBILL.ACTIVE = #{active,jdbcType=VARCHAR}
	</select>
	<!--更改运单到达部门-->
	<insert id="insertONTempForPKP" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.AutoTaskDTO">
		insert into PKP.T_SRV_VEHICLE_ARRIVE_TEMP
		  (id, T_OPT_TRUCK_TASK_DETAIL_ID, TASK_DETAIL_TYPE)
		    values
		  (#{id}, #{taskDetailId}, #{taskDetailType})
	</insert>
	<!--单件出入库-->
	<insert id="insertIOTempForPKP" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.AutoTaskDTO">
		insert into PKP.T_SRV_VEHICLE_ARRIVE_TEMP
		  (id, T_OPT_TRUCK_TASK_DETAIL_ID, TASK_DETAIL_TYPE, IO_QTY, STOCK_ORG_CODE)
		    values
		  (#{id}, #{taskDetailId}, #{taskDetailType}, #{ioQty}, #{stockOrgCode})
	</insert>
	<!--到达联操作日志-->
	<insert id="insertArriveSheetLogEntity" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.domain.ArriveSheetLogEntity">
		insert into PKP.t_srv_arrive_sheet_log
		  (id, waybill_no, operate_content, arrive_sheet_no, operator, operator_code, operate_org_name, operate_org_code, operate_time)
		values
		  (#{id}, #{waybillNo}, #{operateContent}, #{arriveSheetNo}, #{operator}, #{operatorCode}, #{operateOrgName}, #{operateOrgCode}, #{operateTime,jdbcType=TIMESTAMP})
	</insert>
	
	<update id="updateTogetherSendCodeByWaybillNos" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetDto" >
    update PKP.T_SRV_ARRIVESHEET
    <set >
      <if test="deliverRequire != null and deliverRequire != ''" >
        DELIVER_REQUIRE = #{deliverRequire,jdbcType=VARCHAR},
      </if>
      <if test="togetherSendCode != null and togetherSendCode !='N/A'">
		together_Send_Code = #{togetherSendCode,jdbcType=VARCHAR},
	  </if>
	  <if test="togetherSendCode != null  and togetherSendCode=='N/A'">
		together_Send_Code = null,
	  </if>
	  <if test="modifyDate != null">
		MODIFY_TIME = #{modifyDate,jdbcType=TIMESTAMP},
	  </if>
    </set>
    <where>
    	<choose>
	    		<when test=" waybillNos !=null and waybillNos.length > 0">
	    			WAYBILL_NO IN
						<foreach collection="waybillNos" index="index" item="waybillNo" open="(" separator="," close=")">
							#{waybillNo}
						</foreach>
	    		</when>
	    		<otherwise>
	    			WAYBILL_NO = ''
	    		</otherwise>
	    	</choose>
			and active = 'Y' AND DESTROYED = 'N'
    </where>
  </update>
  <!--快递自提   -->
  	<select id="getTotalCountExp" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.SignDto" resultType="Long">
		select /*模块：接送货-签收出库-根据条件查询满足的记录数 */ count(arr.waybill_no) 
		from  pkp.t_SRV_Waybill waybill 
		 inner join pkp.t_Srv_Arrivesheet arr
		on waybill.waybill_no=arr.waybill_no 
		inner join pkp.t_srv_actual_freight actual 
		on arr.waybill_no=actual.waybill_no
		INNER JOIN TFR.T_OPT_WAYBILL_STOCK WS ON
		arr.WAYBILL_NO = WS.WAYBILL_NO
		<include refid="select_Where_Exp"/>
	</select> 

	<sql id="select_Where_Exp">
		<where>
			arr.waybill_no=WS.WAYBILL_NO
			<if test="lastLoadOrgCode!=null and lastLoadOrgCode!='' ">	
			AND waybill.last_load_org_code = #{lastLoadOrgCode,jdbcType=VARCHAR}
			</if>
			<!-- 到达联状态为派送中,生成的可查出来-->
			<if test="ArriveSheetstatus !=null and ArriveSheetstatus.length > 0">
				and arr.STATUS IN
				<foreach collection="ArriveSheetstatus" index="index" item="statu" open="(" separator="," close=")">
					#{statu,jdbcType=VARCHAR}
				</foreach>
			</if>
			<if test="waybillNo!=null and waybillNo!='' ">	
			and waybill.WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>
			<if test="waybillNo==null or waybillNo=='' ">	
			and actual.settle_status = #{settleStatus,jdbcType=VARCHAR}
			</if>
			<if test="arrivesheetNo!=null and arrivesheetNo!='' ">	
			and arr.ARRIVESHEET_NO = #{arrivesheetNo,jdbcType=VARCHAR}
			</if>
			<if test="receiveCustomerName!=null and receiveCustomerName!='' ">	
			and waybill.RECEIVE_CUSTOMER_CONTACT = #{receiveCustomerName,jdbcType=VARCHAR}
			</if>
			<if test="receiveCustomerPhone!=null and receiveCustomerPhone!='' ">	
			and waybill.RECEIVE_CUSTOMER_PHONE = #{receiveCustomerPhone,jdbcType=VARCHAR}
			</if>
			<if test="receiveCustomerMobilephone!=null and receiveCustomerMobilephone!='' ">	
			and waybill.RECEIVE_CUSTOMER_MOBILEPHONE = #{receiveCustomerMobilephone,jdbcType=VARCHAR}
			</if>
			<if test="settleTimeStart!=null and settleTimeStart!=''">
			<![CDATA[and actual.settle_Time >= #{settleTimeStart,jdbcType=TIMESTAMP}]]>
			</if>
			<if test="settleTimeEnd!=null and settleTimeEnd!='' ">	
			<![CDATA[and actual.settle_Time <= #{settleTimeEnd,jdbcType=TIMESTAMP}]]>
			</if>
			<if test="active !=null and active !='' ">
				<![CDATA[and arr.ACTIVE=#{active,jdbcType=VARCHAR}]]>
					and waybill.ACTIVE  = #{active,jdbcType=VARCHAR}
			</if>
			<if test="destroyed != null and destroyed !=''" >
       		 	and arr.DESTROYED = #{destroyed,jdbcType=CHAR}
     		 </if>
     		 <!-- 最后库存code=库存的部门编码 -->
			<if test="endStockOrgCode != null and endStockOrgCode !=''">	
				<![CDATA[ and WS.ORG_CODE  = #{endStockOrgCode, jdbcType=VARCHAR}]]>
			</if>
			<!-- 库区-->
			<!--add by chenjunying DMANA-9499 判断保留之前的条件，新加多库区查询条件-->
			<if test="goodsAreaCode != null and goodsAreaCode !=''">	
				<![CDATA[ AND WS.GOODS_AREA_CODE = #{goodsAreaCode, jdbcType=VARCHAR}]]>
			</if>
		<if test="goodsAreaCodes!= null and goodsAreaCodes.size>0">
		and ws.GOODS_AREA_CODE  in
		<foreach collection="goodsAreaCodes" open="(" close=")" separator=","
			item="goodsAreaCode">
       	      #{goodsAreaCode,jdbcType=VARCHAR}
		</foreach>
    </if>
			<choose>
			<when test="productCodeList!= null and productCodeList.size>0">
					and waybill.PRODUCT_CODE in
					<foreach collection="productCodeList" open="(" close=")" separator=","
						item="productCode">
						<if test="productCode!=null and productCode != ''">
		        	      <![CDATA[	#{productCode,jdbcType=VARCHAR} ]]>
		                </if>
					</foreach>
			</when>
			<otherwise>
				and  waybill.PRODUCT_CODE = ''
			</otherwise>
		</choose>
		</where>
	</sql>
	
	<select id="queryArrivesheetListExp" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.SignDto" resultMap="arrivesheetResultMap">
		select /*模块：接送货-签收出库-根据条件查询满足的信息 */
		arr.id,arr.waybill_no,arr.arrivesheet_no,
		arr.ARRIVE_SHEET_GOODS_QTY,arr.deliveryman_name,arr.identify_code ,
		arr.IDENTIFY_TYPE,
		WS.STOCK_GOODS_QTY,waybill.IS_WHOLE_VEHICLE,waybill.PRODUCT_CODE,waybill.ORDER_NO,WAYBILL.RECEIVE_CUSTOMER_CONTACT
		from  pkp.t_SRV_Waybill waybill 
		inner join pkp.t_Srv_Arrivesheet arr
		on waybill.waybill_no=arr.waybill_no 
		inner join pkp.t_srv_actual_freight actual 
		on arr.waybill_no=actual.waybill_no
		INNER JOIN TFR.T_OPT_WAYBILL_STOCK WS ON
		arr.WAYBILL_NO = WS.WAYBILL_NO
		<include refid="select_Where_Exp"/>
	</select>
	
	<!-- 查询最新一次的到达联签收记录  -->
	<select id="queryArriveSheetBySignTimeDesc" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.ArriveSheetDto" 
		resultMap="BaseResultMap">
  	  SELECT * FROM(
  		 select  /*模块：接送货-到达联- 根据运单号查询到达联信息*/
  		 <include refid="Base_Column_List"/>
  		 from PKP.T_SRV_ARRIVESHEET 
		<where>
			<if test="waybillNo != null and waybillNo != '' ">
				and WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>
			<if test="active != null and active != '' ">
				and ACTIVE = #{active,jdbcType=VARCHAR}
			</if>
			<if test="arriveSheetStatus !=null">
				and STATUS in 
				<foreach collection="arriveSheetStatus" item="item" index="index" open="("
					separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
		order by sign_time DESC
	  ) WHERE ROWNUM=1
	</select>
	
	<sql id="select_PTP_Where">
		<where>
			arr.waybill_no=WS.WAYBILL_NO
			<if test="lastLoadOrgCode!=null and lastLoadOrgCode!='' ">	
			AND waybill.last_load_org_code = #{lastLoadOrgCode,jdbcType=VARCHAR}
			</if>
			<!-- 到达联状态为派送中,生成的可查出来-->
			<if test="ArriveSheetstatus !=null and ArriveSheetstatus.length > 0">
				and arr.STATUS IN
				<foreach collection="ArriveSheetstatus" index="index" item="statu" open="(" separator="," close=")">
					#{statu,jdbcType=VARCHAR}
				</foreach>
			</if>
			<if test="waybillNo!=null and waybillNo!='' ">	
			and waybill.WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>
			<if test="arrivesheetNo!=null and arrivesheetNo!='' ">	
			and arr.ARRIVESHEET_NO = #{arrivesheetNo,jdbcType=VARCHAR}
			</if>
			<if test="receiveCustomerName!=null and receiveCustomerName!='' ">	
			and waybill.RECEIVE_CUSTOMER_CONTACT = #{receiveCustomerName,jdbcType=VARCHAR}
			</if>
			<if test="receiveCustomerPhone!=null and receiveCustomerPhone!='' ">	
			and waybill.RECEIVE_CUSTOMER_PHONE = #{receiveCustomerPhone,jdbcType=VARCHAR}
			</if>
			<if test="receiveCustomerMobilephone!=null and receiveCustomerMobilephone!='' ">	
			and waybill.RECEIVE_CUSTOMER_MOBILEPHONE = #{receiveCustomerMobilephone,jdbcType=VARCHAR}
			</if>
			<if test="inStockTimeStart and inStockTimeStart !=''">
			<![CDATA[and WS.IN_STOCK_TIME >= #{inStockTimeStart,jdbcType=TIMESTAMP}]]>
			</if>
			<if test="inStockTimeEnd !=null and inStockTimeEnd  !='' ">	
			<![CDATA[and WS.IN_STOCK_TIME <= #{inStockTimeEnd,jdbcType=TIMESTAMP}]]>
			</if>
			<if test="active !=null and active !='' ">
				<![CDATA[and arr.ACTIVE=#{active,jdbcType=VARCHAR}]]>
					and waybill.ACTIVE  = #{active,jdbcType=VARCHAR}
			</if>
			<if test="destroyed != null and destroyed !=''" >
       		 	and arr.DESTROYED = #{destroyed,jdbcType=CHAR}
     		 </if>
     		 <!-- 最后库存code=库存的部门编码 -->
			<if test="endStockOrgCode != null and endStockOrgCode !=''">	
				<![CDATA[ and WS.ORG_CODE  = #{endStockOrgCode, jdbcType=VARCHAR}]]>
			</if>
			<!-- 库区-->
			<!--add by chenjunying DMANA-9499 判断保留之前的条件，新加多库区查询条件-->
            <if test="goodsAreaCode != null and goodsAreaCode !=''">	
				<![CDATA[ AND WS.GOODS_AREA_CODE = #{goodsAreaCode, jdbcType=VARCHAR}]]>
			</if>
		    <if test="goodsAreaCodes!= null and goodsAreaCodes.size>0">
			    and ws.GOODS_AREA_CODE  in
			    <foreach collection="goodsAreaCodes" open="(" close=")" separator=","
				    item="mgoodsAreaCode">
	       	        #{mgoodsAreaCode,jdbcType=VARCHAR}
			    </foreach>
    		</if>
    		<!-- 合伙人零担签收.410数据初始化开关 -->
    		<if test="conBillTime != null">
    			and waybill.bill_time > #{conBillTime,jdbcType=TIMESTAMP}
    		</if>
    		<!-- 合伙人零担签收不查询整车运单 -->
    		<if test="isWholeVehicle != null and isWholeVehicle !=''">	
				<![CDATA[ and waybill.is_whole_vehicle  = #{isWholeVehicle, jdbcType=VARCHAR}]]>
			</if>
			<choose>
			<when test="productCodeList!= null and productCodeList.size>0">
					and waybill.PRODUCT_CODE not in
					<foreach collection="productCodeList" open="(" close=")" separator=","
						item="productCode">
						<if test="productCode!=null and productCode != ''">
		        	      <![CDATA[	#{productCode,jdbcType=VARCHAR} ]]>
		                </if>
					</foreach>
			</when>
			<otherwise>
				and  waybill.PRODUCT_CODE = ''
			</otherwise>
		</choose>
		</where>
	</sql>
	
	<select id="getPtpTotalCount" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.SignDto" resultType="Long">
		select /*模块：接送货-合伙人零担签收出库-根据条件查询满足的记录数 */ count(arr.waybill_no) 
		from  pkp.t_SRV_Waybill waybill 
		 inner join pkp.t_Srv_Arrivesheet arr
		on waybill.waybill_no=arr.waybill_no 
		inner join pkp.t_srv_actual_freight actual 
		on arr.waybill_no=actual.waybill_no
		INNER JOIN TFR.T_OPT_WAYBILL_STOCK WS ON
		arr.WAYBILL_NO = WS.WAYBILL_NO
		<include refid="select_PTP_Where"/>
	</select> 
	
	<select id="queryPtpArrivesheetList" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.SignDto" resultMap="arrivesheetResultMap">
		select /*模块：接送货-合伙人零担签收出库-根据条件查询满足的信息 */
		arr.id,arr.waybill_no,arr.arrivesheet_no,
		arr.ARRIVE_SHEET_GOODS_QTY,arr.deliveryman_name,arr.identify_code ,
		arr.IDENTIFY_TYPE,
		waybill.RECEIVE_METHOD,
		WS.STOCK_GOODS_QTY,waybill.IS_WHOLE_VEHICLE,waybill.PRODUCT_CODE,waybill.ORDER_NO,WAYBILL.RECEIVE_CUSTOMER_CONTACT,
		actual.SPECIAL_VALUE_ADDED_SERVICE 
		from  pkp.t_SRV_Waybill waybill 
		inner join pkp.t_Srv_Arrivesheet arr
		on waybill.waybill_no=arr.waybill_no 
		inner join pkp.t_srv_actual_freight actual 
		on arr.waybill_no=actual.waybill_no
		INNER JOIN TFR.T_OPT_WAYBILL_STOCK WS ON
		arr.WAYBILL_NO = WS.WAYBILL_NO
		<include refid="select_PTP_Where"/>
	</select>
	
	
	<!-- 合伙人快递自提签收查询where -->
	<sql id="Select_PtpExp_Where">
		<where>
			arr.waybill_no=WS.WAYBILL_NO
			<if test="lastLoadOrgCode!=null and lastLoadOrgCode!='' ">	
			AND waybill.last_load_org_code = #{lastLoadOrgCode,jdbcType=VARCHAR}
			</if>
			<!-- 到达联状态为派送中,生成的可查出来-->
			<if test="ArriveSheetstatus !=null and ArriveSheetstatus.length > 0">
				and arr.STATUS not in
				<foreach collection="ArriveSheetstatus" index="index" item="statu" open="(" separator="," close=")">
					#{statu,jdbcType=VARCHAR}
				</foreach>
			</if>
			<if test="waybillNo!=null and waybillNo!='' ">	
			and waybill.WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>
			<if test="arrivesheetNo!=null and arrivesheetNo!='' ">	
			and arr.ARRIVESHEET_NO = #{arrivesheetNo,jdbcType=VARCHAR}
			</if>
			<if test="receiveCustomerName!=null and receiveCustomerName!='' ">	
			and waybill.RECEIVE_CUSTOMER_CONTACT = #{receiveCustomerName,jdbcType=VARCHAR}
			</if>
			<if test="receiveCustomerPhone!=null and receiveCustomerPhone!='' ">	
			and waybill.RECEIVE_CUSTOMER_PHONE = #{receiveCustomerPhone,jdbcType=VARCHAR}
			</if>
			<if test="receiveCustomerMobilephone!=null and receiveCustomerMobilephone!='' ">	
			and waybill.RECEIVE_CUSTOMER_MOBILEPHONE = #{receiveCustomerMobilephone,jdbcType=VARCHAR}
			</if>
			<if test="inStockTimeStart!=null and inStockTimeStart!=''">
			<![CDATA[and ws.in_stock_time >= #{inStockTimeStart,jdbcType=TIMESTAMP}]]>
			</if>
			<if test="inStockTimeEnd!=null and inStockTimeEnd!='' ">	
			<![CDATA[and ws.in_stock_time <= #{inStockTimeEnd,jdbcType=TIMESTAMP}]]>
			</if>
			<!-- 合伙人零担签收.410数据初始化开关 -->
    		<if test="conBillTime != null">
    			and waybill.bill_time > #{conBillTime,jdbcType=TIMESTAMP}
    		</if>
			<if test="active !=null and active !='' ">
				<![CDATA[and arr.ACTIVE=#{active,jdbcType=VARCHAR}]]>
					and waybill.ACTIVE  = #{active,jdbcType=VARCHAR}
			</if>
			<if test="destroyed != null and destroyed !=''" >
       		 	and arr.DESTROYED = #{destroyed,jdbcType=CHAR}
     		 </if>
     		 <!-- 最后库存code=库存的部门编码 -->
			<if test="endStockOrgCode != null and endStockOrgCode !=''">	
				<![CDATA[ and WS.ORG_CODE  = #{endStockOrgCode, jdbcType=VARCHAR}]]>
			</if>
			<!-- 库区-->
			<!--add by chenjunying DMANA-9499 判断保留之前的条件，新加多库区查询条件-->
			<if test="goodsAreaCode != null and goodsAreaCode !=''">	
				<![CDATA[ AND WS.GOODS_AREA_CODE = #{goodsAreaCode, jdbcType=VARCHAR}]]>
			</if>
			<if test="goodsAreaCodes!= null and goodsAreaCodes.size>0">
				and ws.GOODS_AREA_CODE  in
				<foreach collection="goodsAreaCodes" open="(" close=")" separator=","
					item="goodsAreaCode">
		       	      #{goodsAreaCode,jdbcType=VARCHAR}
				</foreach>
		    </if>
			<choose>
			<when test="productCodeList!= null and productCodeList.size>0">
					and waybill.PRODUCT_CODE in
					<foreach collection="productCodeList" open="(" close=")" separator=","
						item="productCode">
						<if test="productCode!=null and productCode != ''">
		        	      <![CDATA[	#{productCode,jdbcType=VARCHAR} ]]>
		                </if>
					</foreach>
			</when>
			<otherwise>
				and  waybill.PRODUCT_CODE = ''
			</otherwise>
		</choose>
		</where>
	</sql>
	
	<!-- 合伙人快递自提签收   查询到达联总数 -->
	<select id="queryPtpExpArriveSheetInfoCountByParams" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.SignDto" resultType="long">
		select /*合伙人快递自提签收出库-根据条件查询满足的记录数 */ count(arr.waybill_no) 
		from  pkp.t_SRV_Waybill waybill 
		left join pkp.t_Srv_Arrivesheet arr
		on waybill.waybill_no=arr.waybill_no 
		inner join pkp.t_srv_actual_freight actual 
		on arr.waybill_no=actual.waybill_no
		INNER JOIN TFR.T_OPT_WAYBILL_STOCK WS ON
		arr.WAYBILL_NO = WS.WAYBILL_NO
		<include refid="Select_PtpExp_Where"/>
	</select>
	
	<!-- 合伙人快递自提签收   查询到达联信息集合  -->
	<select id="queryPtpExpArriveSheetInfoByParams" parameterType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.SignDto" resultMap="arrivesheetResultMap">
		select /*合伙人快递自提签收出库-根据条件查询满足的信息 */
		arr.id,arr.waybill_no,arr.arrivesheet_no,
		arr.ARRIVE_SHEET_GOODS_QTY,arr.deliveryman_name,arr.identify_code ,
		arr.IDENTIFY_TYPE,
		WS.STOCK_GOODS_QTY,waybill.IS_WHOLE_VEHICLE,waybill.PRODUCT_CODE,waybill.ORDER_NO,WAYBILL.RECEIVE_CUSTOMER_CONTACT
		from  pkp.t_SRV_Waybill waybill 
		left join pkp.t_Srv_Arrivesheet arr
		on waybill.waybill_no=arr.waybill_no 
		inner join pkp.t_srv_actual_freight actual 
		on arr.waybill_no=actual.waybill_no
		INNER JOIN TFR.T_OPT_WAYBILL_STOCK WS ON
		arr.WAYBILL_NO = WS.WAYBILL_NO
		<include refid="Select_PtpExp_Where"/>
	</select>
</mapper>