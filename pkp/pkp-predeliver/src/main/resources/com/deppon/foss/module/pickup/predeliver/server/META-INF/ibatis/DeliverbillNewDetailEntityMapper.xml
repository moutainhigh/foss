<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.deppon.foss.module.pickup.predeliver.api.server.dao.IDeliverbillNewDetailDao">
	<resultMap id="BaseResultMap"
		type="com.deppon.foss.module.pickup.predeliver.api.shared.domain.DeliverbillDetailEntity">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="T_SRV_DELIVERBILL_ID" property="tSrvDeliverbillId"
			jdbcType="VARCHAR" />
		<result column="SERIAL_NO" property="serialNo" jdbcType="DECIMAL" />
		<result column="ARRIVESHEET_NO" property="arrivesheetNo"
			jdbcType="VARCHAR" />
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="ARRANGE_STATUS" property="arrangeStatus"
			jdbcType="VARCHAR" />
		<result column="PRE_ARRANGE_GOODS_QTY" property="preArrangeGoodsQty"
			jdbcType="DECIMAL" />
		<result column="ARRANGE_GOODS_QTY" property="arrangeGoodsQty"
			jdbcType="DECIMAL" />
		<result column="WEIGHT" property="weight" jdbcType="DECIMAL" />
		<result column="DIMENSION" property="dimension" jdbcType="VARCHAR" />
		<result column="GOODS_NAME" property="goodsName" jdbcType="VARCHAR" />
		<result column="WAYBILL_GOODS_QTY" property="waybillGoodsQty"
			jdbcType="DECIMAL" />
		<result column="TRANSPORT_TYPE" property="transportType"
			jdbcType="VARCHAR" />
		<result column="ARRIVE_TIME" property="arriveTime" jdbcType="TIMESTAMP" />
		<result column="CONSIGNEE" property="consignee" jdbcType="VARCHAR" />
		<result column="CONSIGNEE_CONTACT" property="consigneeContact"
			jdbcType="VARCHAR" />
		<result column="CONSIGNEE_ADDRESS" property="consigneeAddress"
			jdbcType="VARCHAR" />
		<result column="DELIVER_REQUIRE" property="deliverRequire"
			jdbcType="VARCHAR" />
		<result column="GOODS_STATUS" property="goodsStatus" jdbcType="VARCHAR" />
		<result column="IS_EXCEPTION" property="isException" jdbcType="CHAR" />
		<result column="IS_ALREADY_CONTACT" property="isAlreadyContact"
			jdbcType="CHAR" />
		<result column="ESTIMATED_DELIVER_TIME" property="estimatedDeliverTime"
			jdbcType="TIMESTAMP" />
		<result column="IS_NEED_INVOICE" property="isNeedInvoice"
			jdbcType="CHAR" />
		<result column="PAYMENT_TYPE" property="paymentType" jdbcType="VARCHAR" />
		<result column="NOTES" property="notes" jdbcType="VARCHAR" />
		<result column="DELIVER_TYPE" property="deliverType" jdbcType="VARCHAR" />
		<result column="GOODS_VOLUME_TOTAL" property="goodsVolumeTotal"
			jdbcType="DECIMAL" />
		<result column="PAY_AMOUNT" property="payAmount" jdbcType="DECIMAL" />
		<result column="FAST_WAYBILL_FLAG" property="fastWaybillFlag"
			jdbcType="DECIMAL" />
		<result column="CURRENCY_CODE" property="currencyCode"
			jdbcType="VARCHAR" />
		<result column="GOODS_PACKAGE" property="goodsPackage"
			jdbcType="VARCHAR" />
		<result column="RETURN_BILL_TYPE" property="returnBillType"
			jdbcType="VARCHAR" />
		<result column="DESTROYED" property="destroyed"
			jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createDate" jdbcType="TIMESTAMP"/>
    <result column="MODIFY_TIME" property="modifyDate" jdbcType="TIMESTAMP"/>
    <result column="DELIVER_DATE" property="deliverDate" jdbcType="TIMESTAMP"/>
    <result column="T_SRV_DELIVER_HANDOVERBILL_ID" property="srvDeliverHandoverbillId" jdbcType="VARCHAR"/>
	<result column="PRINTTIMES" property="printtimes" javaType="INTEGER" />
	</resultMap>
	

	<resultMap id="BaseResultWithStockMap"
		type="com.deppon.foss.module.pickup.predeliver.api.shared.domain.DeliverbillDetailEntity"
		extends="BaseResultMap">
		<result column="STOCK_GOODS_QTY" property="stockGoodQty"
			jdbcType="DECIMAL" />
		<result column="DISTRICT_NAME" property="districtName"
			jdbcType="VARCHAR" />
		<result column="PREDELIVERDATE" property="preDeliverDate" jdbcType="VARCHAR" />	
		<result column="DELIVERYTIMEINTERVAL" property="deliveryTimeInterval" jdbcType="VARCHAR" />	
		<result column="DELIVERYTIMEOVER" property="deliveryTimeOver" jdbcType="VARCHAR" />	
		<result column="DELIVERYTIMESTART" property="deliveryTimeStart" jdbcType="VARCHAR" />	
	</resultMap>
	
	<resultMap id="BaseResultWithPrintMap"
		type="com.deppon.foss.module.pickup.predeliver.api.shared.domain.DeliverbillDetailEntity"
		extends="BaseResultMap">
		<result column="DISTRICT_NAME" property="districtName"
			jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="BaseResultWithWaybillRfcMap"
		type="com.deppon.foss.module.pickup.predeliver.api.shared.domain.DeliverbillDetailEntity"
		extends="BaseResultMap">
		<result column="STATUS" property="waybillrfcStatus"
			jdbcType="VARCHAR" />
	</resultMap>


	<sql id="Base_Column_List">
		/*模块：接送货-排单-查询排单明细*/
		ID, T_SRV_DELIVERBILL_ID, SERIAL_NO, ARRIVESHEET_NO,
		WAYBILL_NO,
		ARRANGE_STATUS,
		PRE_ARRANGE_GOODS_QTY, ARRANGE_GOODS_QTY,
		WEIGHT, DIMENSION, GOODS_NAME, WAYBILL_GOODS_QTY,
		TRANSPORT_TYPE,
		ARRIVE_TIME, CONSIGNEE, CONSIGNEE_CONTACT,
		CONSIGNEE_ADDRESS,
		DELIVER_REQUIRE,
		GOODS_STATUS, IS_EXCEPTION, IS_ALREADY_CONTACT,
		ESTIMATED_DELIVER_TIME,
		IS_NEED_INVOICE,
		PAYMENT_TYPE, NOTES,
		DELIVER_TYPE, GOODS_VOLUME_TOTAL, PAY_AMOUNT/100 as
		PAY_AMOUNT,
		FAST_WAYBILL_FLAG,
		CURRENCY_CODE, GOODS_PACKAGE, RETURN_BILL_TYPE,
		T_SRV_DELIVER_HANDOVERBILL_ID,DELIVER_DATE
	</sql>
	
	<sql id="Base_Column_List_Print">
		/*模块：接送货-排单-查询排单明细用于打印*/
		 DBD.ID,
		 DBD.T_SRV_DELIVERBILL_ID,
		 DBD.SERIAL_NO,
		 DBD.ARRIVESHEET_NO,
		 DBD.WAYBILL_NO,
		 DBD.ARRANGE_STATUS,
		 DBD.PRE_ARRANGE_GOODS_QTY,
		 DBD.ARRANGE_GOODS_QTY,
		 DBD.WEIGHT,
		 DBD.DIMENSION,
		 DBD.GOODS_NAME,
		 DBD.WAYBILL_GOODS_QTY,
		 DBD.TRANSPORT_TYPE,
		 DBD.ARRIVE_TIME,
		 DBD.CONSIGNEE,
		 DBD.CONSIGNEE_CONTACT,
		 DBD.CONSIGNEE_ADDRESS,
		 DBD.DELIVER_REQUIRE,
		 DBD.GOODS_STATUS,
		 DBD.IS_EXCEPTION,
		 DBD.IS_ALREADY_CONTACT,
		 DBD.ESTIMATED_DELIVER_TIME,
		 DBD.IS_NEED_INVOICE,
		 DBD.PAYMENT_TYPE,
		 DBD.NOTES,
		 DBD.DELIVER_TYPE,
		 DBD.GOODS_VOLUME_TOTAL,
		 DBD.PAY_AMOUNT / 100 AS PAY_AMOUNT,
		 DBD.FAST_WAYBILL_FLAG,
		 DBD.CURRENCY_CODE,
		 DBD.GOODS_PACKAGE,
		 DBD.RETURN_BILL_TYPE,
		 BD.NAME AS DISTRICT_NAME
	</sql>
	
	<sql id="Deliverbill_Arrivesheet_Column_List">
		/*模块：接送货-排单-根据派送单ID查找已生成到达联的派送明细列表*/
	    d.ID, 
	    d.T_SRV_DELIVERBILL_ID, 
	    d.SERIAL_NO, 
	    decode(d.arrivesheet_no,'N/A',a.arrivesheet_no,d.arrivesheet_no) arrivesheet_no,
	    d.WAYBILL_NO,
	    d.ARRANGE_STATUS,
	    d.PRE_ARRANGE_GOODS_QTY, 
	    d.ARRANGE_GOODS_QTY,
	    d.WEIGHT, 
	    d.DIMENSION, 
	    d.GOODS_NAME, 
	    d.WAYBILL_GOODS_QTY,
	    d.TRANSPORT_TYPE,
	    d.ARRIVE_TIME, 
	    d.CONSIGNEE, 
	    d.CONSIGNEE_CONTACT,
	    d.CONSIGNEE_ADDRESS,
	    d.DELIVER_REQUIRE,
	    d.GOODS_STATUS, 
	    d.IS_EXCEPTION, 
	    d.IS_ALREADY_CONTACT,
	    d.ESTIMATED_DELIVER_TIME,
	    d.IS_NEED_INVOICE,
	    d.PAYMENT_TYPE, 
	    d.NOTES,
	    d.DELIVER_TYPE, 
	    d.GOODS_VOLUME_TOTAL, 
	    d.PAY_AMOUNT/100 as PAY_AMOUNT,
	    d.FAST_WAYBILL_FLAG,
	    d.CURRENCY_CODE, 
	    d.GOODS_PACKAGE, 
	    d.RETURN_BILL_TYPE,
		r.STATUS,
		a.destroyed
	</sql>

	<sql id="Base_Column_With_Stock_List">
		/*模块：接送货-排单-查询排单明细*/
		dbd.ID, dbd.T_SRV_DELIVERBILL_ID, dbd.SERIAL_NO,
		dbd.ARRIVESHEET_NO,
		dbd.WAYBILL_NO, dbd.ARRANGE_STATUS,
		dbd.PRE_ARRANGE_GOODS_QTY, dbd.ARRANGE_GOODS_QTY, dbd.WEIGHT,
 		dbd.DIMENSION,
		dbd.GOODS_NAME,
		dbd.WAYBILL_GOODS_QTY,
		dbd.TRANSPORT_TYPE, dbd.ARRIVE_TIME, dbd.CONSIGNEE,
		dbd.CONSIGNEE_CONTACT,
		dbd.CONSIGNEE_ADDRESS, dbd.DELIVER_REQUIRE,
		dbd.GOODS_STATUS, dbd.IS_EXCEPTION, dbd.IS_ALREADY_CONTACT,
		dbd.ESTIMATED_DELIVER_TIME,
		dbd.IS_NEED_INVOICE,
		dbd.PAYMENT_TYPE,
		dbd.NOTES, dbd.DELIVER_TYPE, dbd.GOODS_VOLUME_TOTAL,
		dbd.PAY_AMOUNT/100 as PAY_AMOUNT, dbd.FAST_WAYBILL_FLAG,
		dbd.CURRENCY_CODE, dbd.GOODS_PACKAGE, dbd.RETURN_BILL_TYPE,
<!-- 		AF.DIMENSION, -->
		CASE
     		WHEN AF.NOTIFICATION_ORG_CODE = W.LAST_LOAD_ORG_CODE THEN af.deliver_date
     		WHEN AF.UP_DELIVER_DATE_ORG_CODE= W.LAST_LOAD_ORG_CODE THEN af.deliver_date
     	ELSE
      		NULL
 		END AS preDeliverDate,
   		DECODE(AF.NOTIFICATION_ORG_CODE, W.LAST_LOAD_ORG_CODE, af.delivery_time_interval, NULL) AS deliveryTimeInterval,
   		DECODE(AF.NOTIFICATION_ORG_CODE, W.LAST_LOAD_ORG_CODE,af.delivery_time_over, NULL) AS deliveryTimeOver,
   		DECODE(AF.NOTIFICATION_ORG_CODE, W.LAST_LOAD_ORG_CODE, af.delivery_time_start, NULL) AS deliveryTimeStart, 
		ws.STOCK_GOODS_QTY,
		w.RECEIVE_BIG_CUSTOMER as receiveBigCustomer,
		BD.NAME AS DISTRICT_NAME 
	</sql>
	
	<select id="selectDeliverbillDetailByDeliverbillId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select 
		<include refid="Base_Column_List" />
		from PKP.T_SRV_DELIVERBILL_DETAIL t
		where t.t_srv_deliverbill_id = #{id,jdbcType=VARCHAR} 
		order by t.DELIVER_DATE desc Nulls last
	</select>
	
	<select id="selectByDeliverbillId" resultMap="BaseResultWithStockMap"
		parameterType="java.util.Map">
		select
		<include refid="Base_Column_With_Stock_List" />
		 FROM PKP.T_SRV_DELIVERBILL_DETAIL DBD
		  LEFT JOIN PKP.T_SRV_ACTUAL_FREIGHT AF ON DBD.WAYBILL_NO = AF.WAYBILL_NO
		 INNER JOIN PKP.T_SRV_WAYBILL W ON DBD.WAYBILL_NO = W.WAYBILL_NO
		  LEFT JOIN TFR.T_OPT_WAYBILL_STOCK WS ON DBD.WAYBILL_NO = WS.WAYBILL_NO
		                                      AND AF.END_STOCK_ORG_CODE =
		                                          WS.ORG_CODE
		                                      AND WS.GOODS_AREA_CODE = #{areaCode, jdbcType=VARCHAR}
		  LEFT JOIN BSE.T_BAS_DISTRICT BD ON BD.CODE = W.RECEIVE_CUSTOMER_DIST_CODE
		                                 AND BD.ACTIVE = 'Y' /** DMANA-4290 **/
		 WHERE T_SRV_DELIVERBILL_ID = #{deliverbillId,jdbcType=VARCHAR}
		   AND W.ACTIVE = 'Y'
		 ORDER BY SERIAL_NO
	</select>
	
	<select id="selectByDeliverbillIdForPrint" resultMap="BaseResultWithPrintMap"
		parameterType="java.util.Map">
		select
		<include refid="Base_Column_List_Print" />
		FROM PKP.T_SRV_DELIVERBILL_DETAIL DBD
		  LEFT JOIN PKP.T_SRV_WAYBILL W ON W.WAYBILL_NO = DBD.WAYBILL_NO
		  LEFT JOIN BSE.T_BAS_DISTRICT BD ON BD.CODE = W.RECEIVE_CUSTOMER_DIST_CODE
		                                 AND BD.ACTIVE = 'Y' /** DMANA-4290 **/
		 WHERE T_SRV_DELIVERBILL_ID = #{deliverbillId,jdbcType=VARCHAR}
		   AND W.ACTIVE = 'Y'
		 ORDER BY SERIAL_NO
	</select>

	<select id="selectArrivesheetByDeliverbillId" resultMap="BaseResultWithWaybillRfcMap"
		parameterType="java.util.Map">
		select a.PRINTTIMES,
		<include refid="Deliverbill_Arrivesheet_Column_List" />
		from PKP.T_SRV_DELIVERBILL_DETAIL d
		left join pkp.t_srv_arrivesheet a on a.waybill_no = d.waybill_no 
		and a.status = #{astatus,jdbcType=VARCHAR} 
		and a.destroyed = #{adestroyed,jdbcType=VARCHAR} 
		and a.active = #{active,jdbcType=VARCHAR}
  		left join pkp.t_srv_waybillrfc r on r.waybill_no = d.waybill_no 
  		<![CDATA[
  		and r.status in ( #{preaudit,jdbcType=VARCHAR}, #{preaccept,jdbcType=VARCHAR})
		where T_SRV_DELIVERBILL_ID = #{deliverbillId,jdbcType=VARCHAR}
		order by SERIAL_NO
	]]>
	</select>
	
	<select id="selectArrivesheetByDeliverbillById" resultMap="BaseResultWithWaybillRfcMap"
		parameterType="java.util.Map">
		select a.PRINTTIMES,
		<include refid="Deliverbill_Arrivesheet_Column_List" />
		from PKP.T_SRV_DELIVERBILL_DETAIL d
		inner join pkp.t_srv_arrivesheet a on a.arrivesheet_no = d.arrivesheet_no 
  		left join pkp.t_srv_waybillrfc r on r.waybill_no = d.waybill_no 
  		<![CDATA[
  		and r.status in ( #{preaudit,jdbcType=VARCHAR}, #{preaccept,jdbcType=VARCHAR})
		where T_SRV_DELIVERBILL_ID = #{deliverbillId,jdbcType=VARCHAR}
		and a.status = #{astatus,jdbcType=VARCHAR} 
		and a.destroyed = #{adestroyed,jdbcType=VARCHAR} 
		and a.active = #{active,jdbcType=VARCHAR} 
		order by SERIAL_NO
	]]>
	</select>

	<select id="selectCountByDeliverbillId" resultType="Long"
		parameterType="java.lang.String">
		select
		/*模块：接送货-排单-派送单明细列表大小*/
		count(1)
		from PKP.T_SRV_DELIVERBILL_DETAIL
		where
		T_SRV_DELIVERBILL_ID = #{deliverbillId,jdbcType=VARCHAR}
	</select>

	<select id="selectByDeliverbillNos" resultType="com.deppon.foss.module.pickup.predeliver.api.shared.dto.DeliverbillDetailDto"
		parameterType="java.util.List">
		select
		    /*模块：接送货-排单-查询排单明细*/
		    deliver.deliverbill_no deliverbillNo,/*派送单号*/
		    deliver.submit_time operateTime,/*排单时间*/
		    dbd.waybill_no waybillNo,/*单号*/
		    dbd.arrivesheet_no arrivesheetNo,/*到达联编号*/
		    dbd.WAYBILL_GOODS_QTY waybillGoodsQty,/*开单件数*/
		    ws.STOCK_GOODS_QTY stockGoodsQty, /*库存件数*/
		    dbd.ARRANGE_GOODS_QTY arrangeGoodsQty, /*排单件数*/
		    dbd.WEIGHT weight,/*排单重量*/
		    dbd.goods_volume_total volumeTotal,/*体积*/
		    dbd.goods_package goodsPackage,/*包装*/
		    dbd.TRANSPORT_TYPE transportType,/*运输性质*/
		    dbd.CONSIGNEE consignee, /*收货人*/
		    dbd.CONSIGNEE_CONTACT consigneeContact,/*联系方式*/
		    dbd.CONSIGNEE_ADDRESS consigneeAddress,/*送货地址*/
		    dbd.deliver_type deliverType,/*提货方式*/
		    sr.sign_time signTime,/*签收时间*/ 
		    deliver.vehicle_no vehicleNo,/*车牌号*/
		    deliver.deliver_type sendCarType,/*派车类型*/
		    deliver.driver_code driverCode,/*司机工号*/
		    deliver.driver_name driverName /*司机姓名*/
		    from PKP.T_SRV_DELIVERBILL deliver 
		    inner join  PKP.T_SRV_DELIVERBILL_DETAIL dbd
		    on deliver.id = dbd.t_srv_deliverbill_id
		    left join
		    pkp.t_srv_actual_freight af
		    on dbd.waybill_no = af.waybill_no
		    left join pkp.t_srv_waybill_sign_result sr
		    on dbd.waybill_no = sr.waybill_no
		    and sr.active='Y'
		    left join
		    tfr.T_OPT_WAYBILL_STOCK ws
		    on dbd.waybill_no = ws.waybill_no
		    and
	    	af.END_STOCK_ORG_CODE = ws.org_code
	    	<if test="loadTimeBegin != null or loadTimeEnd !=null">
	    	  	left join  TFR.T_OPT_LOAD_TASK TT on deliver.DELIVERBILL_NO = TT.DELIVERBILL_NO
		<![CDATA[AND TT.TASK_STATE <>'CANCELED']]>
	    	</if>
			<include refid="selectExportByCondition_where" />
			order by deliver.deliverbill_no
	</select>
	<sql id="selectExportByCondition_where">
		<where>
			 and deliver.CREATE_TYPE = 'Y' 
			<choose>
				<when test="waybillNo!=null and waybillNo!='' ">
					<![CDATA[and dbd.waybill_no = #{waybillNo, jdbcType=VARCHAR}]]>
				</when>
				<when test="deliverbillNo!=null and deliverbillNo!='' ">
					<![CDATA[and deliver.deliverbill_no = #{deliverbillNo, jdbcType=VARCHAR}]]>
				</when>
				<otherwise>
					<if test="vehicleNo!=null and vehicleNo!='' ">
						and deliver.vehicle_no = #{vehicleNo, jdbcType=VARCHAR}
					</if>
					<if test="driverName!=null and driverName!='' ">
						and deliver.driver_name = #{driverName, jdbcType=VARCHAR}
					</if>
					<if test="status!=null and status!='' ">
						and deliver.status = #{status, jdbcType=VARCHAR}
					</if>
					<if test="driverCode!=null and driverCode!='' ">
						and deliver.DRIVER_CODE = #{driverCode, jdbcType=VARCHAR}
					</if>
					<if test="deliverType!=null and deliverType!='' ">
						and deliver.DELIVER_TYPE = #{deliverType, jdbcType=VARCHAR}
					</if>
					<if test="submitTimeBegin!=null">	
					<![CDATA[and deliver.submit_time >= #{submitTimeBegin, jdbcType=TIMESTAMP}]]>
					</if>
					<if test="submitTimeEnd!=null">	
					<![CDATA[and deliver.submit_time < #{submitTimeEnd, jdbcType=TIMESTAMP}]]>
					</if>
					<if test="createTimeBegin!=null">	
					<![CDATA[and deliver.operate_time >= #{createTimeBegin, jdbcType=TIMESTAMP}]]>
					</if>
					<if test="createTimeEnd!=null">	
					<![CDATA[and deliver.operate_time < #{createTimeEnd, jdbcType=TIMESTAMP}]]>
					</if>
						<if test="loadTimeBegin != null">
			   			<![CDATA[ AND TT.LOAD_END_TIME >= #{loadTimeBegin,jdbcType=TIMESTAMP}]]>
					</if>
					<if test="loadTimeEnd != null">
			   			<![CDATA[ AND TT.LOAD_END_TIME < #{loadTimeEnd,jdbcType=TIMESTAMP}]]>
					</if>
				</otherwise>
			</choose>
			
					<if test="orgCode!=null and orgCode!='' ">
						<![CDATA[and (deliver.create_org_code = #{orgCode, jdbcType=VARCHAR}]]>
					</if>
					<if test="transferCenter!=null and transferCenter!='' ">
						<![CDATA[or deliver.transfer_center = #{transferCenter, jdbcType=VARCHAR}]]>
					</if>
					<if test="orgCode!=null and orgCode!=''  ">
						)
					</if>
		</where>
	</sql>
</mapper>