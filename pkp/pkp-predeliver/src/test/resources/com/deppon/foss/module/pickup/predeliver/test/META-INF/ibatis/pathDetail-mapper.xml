<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Foss.pathDetail" >
	<resultMap id="BaseResultMap" type="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
		<id column="PATH_DETAIL_ID" property="pathDetailId" jdbcType="VARCHAR" />
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="GOODS_NO" property="goodsNo" jdbcType="VARCHAR" />
		<result column="ORIG_ORG_CODE" property="origOrgCode" jdbcType="VARCHAR" />
		<result column="OBJECTIVE_ORG_CODE" property="objectiveOrgCode" jdbcType="VARCHAR" />
		<result column="ORIG_ORG_NAME" property="origOrgName" jdbcType="VARCHAR" />
		<result column="OBJECTIVE_ORG_NAME" property="objectiveOrgName" jdbcType="VARCHAR" />
		<result column="ROUTE_NO" property="routeNo" jdbcType="VARCHAR" />
		<result column="PLAN_START_TIME" property="planStartTime" jdbcType="TIMESTAMP"/>
		<result column="ACTUAL_START_TIME" property="actualStartTime" jdbcType="TIMESTAMP"/>
		<result column="ARRIVE_OR_LEAVE" property="arriveOrLeave" jdbcType="VARCHAR" />
		<result column="PLAN_ARRIVE_TIME" property="planArriveTime" jdbcType="TIMESTAMP"/>
		<result column="ACTUAL_ARRIVE_TIME" property="actualArriveTime" jdbcType="TIMESTAMP"/>
		<result column="BILLING_ORG_CODE" property="billingOrgCode" jdbcType="VARCHAR" />
		<result column="NEXT_DEST_ORG_CODE" property="nextDestOrgCode" jdbcType="VARCHAR" />
		<result column="VEHICLE_NO" property="vehicleNo" jdbcType="VARCHAR" />
		<result column="BEFORE_VEHICLE_NO" property="beforeVehicleNo" jdbcType="VARCHAR" />
		<result column="IF_CHANGE_TIME" property="ifChangeTime" jdbcType="VARCHAR" />
		<result column="MODIFY_START_TIME" property="modifyStartTime" jdbcType="TIMESTAMP"/>
		<result column="MODITY_ARRIVE_TIME" property="modifyArriveTime" jdbcType="TIMESTAMP"/>
		<result column="TRUCK_DETAIL_ID" property="truckDetailId" jdbcType="VARCHAR" />
		<result column="NEXT_ARRIVE_TIME" property="nextArriveTime" jdbcType="TIMESTAMP"/>
		<result column="PLAN_PICKUP_TIME" property="planPickupTime" jdbcType="TIMESTAMP"/>
		<result column="waybillNoCount" property="waybillNoCount" jdbcType="VARCHAR"/>
	</resultMap>
	<sql id="Base_Column_List" >
    PATH_DETAIL_ID, WAYBILL_NO, GOODS_NO, ORIG_ORG_CODE, OBJECTIVE_ORG_CODE, ROUTE_NO, 
    PLAN_START_TIME, ACTUAL_START_TIME, ARRIVE_OR_LEAVE, PLAN_ARRIVE_TIME, ACTUAL_ARRIVE_TIME,
    BILLING_ORG_CODE, NEXT_DEST_ORG_CODE, VEHICLE_NO, BEFORE_VEHICLE_NO, IF_CHANGE_TIME, 
    MODIFY_START_TIME, MODITY_ARRIVE_TIME, TRUCK_DETAIL_ID, NEXT_ARRIVE_TIME, PLAN_PICKUP_TIME
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
		<include refid="Base_Column_List" />
    from TFR.T_OPT_PATH_DETAIL
    where PATH_DETAIL_ID = #{pathDetailId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from TFR.T_OPT_PATH_DETAIL
    where PATH_DETAIL_ID = #{pathDetailId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
    insert into TFR.T_OPT_PATH_DETAIL (PATH_DETAIL_ID, WAYBILL_NO, GOODS_NO, 
      ORIG_ORG_CODE, OBJECTIVE_ORG_CODE, ROUTE_NO, 
      PLAN_START_TIME, ACTUAL_START_TIME, ARRIVE_OR_LEAVE, 
      PLAN_ARRIVE_TIME, ACTUAL_ARRIVE_TIME, BILLING_ORG_CODE, NEXT_DEST_ORG_CODE, 
      VEHICLE_NO, BEFORE_VEHICLE_NO, IF_CHANGE_TIME, MODIFY_START_TIME, MODITY_ARRIVE_TIME,
      TRUCK_DETAIL_ID, NEXT_ARRIVE_TIME, PLAN_PICKUP_TIME, CREATE_TIME)
    values (#{pathDetailId,jdbcType=VARCHAR}, #{waybillNo,jdbcType=VARCHAR}, #{goodsNo,jdbcType=VARCHAR}, 
      #{origOrgCode,jdbcType=VARCHAR}, #{objectiveOrgCode,jdbcType=VARCHAR}, #{routeNo,jdbcType=VARCHAR}, 
      #{planStartTime,jdbcType=TIMESTAMP}, #{actualStartTime,jdbcType=TIMESTAMP}, #{arriveOrLeave,jdbcType=VARCHAR}, 
      #{planArriveTime,jdbcType=TIMESTAMP}, #{actualArriveTime,jdbcType=TIMESTAMP} , #{billingOrgCode,jdbcType=VARCHAR}, 
      #{nextDestOrgCode,jdbcType=VARCHAR}, #{vehicleNo,jdbcType=VARCHAR}, #{beforeVehicleNo,jdbcType=VARCHAR}, 
      #{ifChangeTime,jdbcType=VARCHAR}, #{modifyStartTime,jdbcType=TIMESTAMP},
      #{modifyArriveTime,jdbcType=TIMESTAMP}, #{truckDetailId,jdbcType=VARCHAR}, #{nextArriveTime,jdbcType=TIMESTAMP},
      #{planPickupTime,jdbcType=TIMESTAMP}, sysdate)
	</insert>
	<insert id="insertSelective" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
    insert into TFR.T_OPT_PATH_DETAIL
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="pathDetailId != null" >
        PATH_DETAIL_ID,
			</if>
			<if test="waybillNo != null" >
        WAYBILL_NO,
			</if>
			<if test="goodsNo != null" >
        GOODS_NO,
			</if>
			<if test="origOrgCode != null" >
        ORIG_ORG_CODE,
			</if>
			<if test="objectiveOrgCode != null" >
        OBJECTIVE_ORG_CODE,
			</if>
			<if test="routeNo != null" >
        ROUTE_NO,
			</if>
			<if test="planStartTime != null" >
        PLAN_START_TIME,
			</if>
			<if test="actualStartTime != null" >
        ACTUAL_START_TIME,
			</if>
			<if test="arriveOrLeave != null" >
        ARRIVE_OR_LEAVE,
			</if>
			<if test="planArriveTime != null" >
        PLAN_ARRIVE_TIME,
			</if>
			<if test="actualArriveTime != null" >
        ACTUAL_ARRIVE_TIME,
			</if>
			<if test="billingOrgCode != null" >
        BILLING_ORG_CODE,
			</if>
			<if test="nextDestOrgCode != null" >
        NEXT_DEST_ORG_CODE,
			</if>
			<if test="vehicleNo != null" >
        VEHICLE_NO,
			</if>
			<if test="beforeVehicleNo != null" >
        BEFORE_VEHICLE_NO,
			</if>
			<if test="ifChangeTime != null" >
        IF_CHANGE_TIME,
			</if>
			<if test="modifyStartTime != null" >
        MODIFY_START_TIME,
			</if>
			<if test="modifyArriveTime != null" >
        MODITY_ARRIVE_TIME,
			</if>
			<if test="truckDetailId != null" >
        TRUCK_DETAIL_ID,
			</if>
			<if test="nextArriveTime != null" >
        NEXT_ARRIVE_TIME,
			</if>
			<if test="planPickupTime != null" >
        PLAN_PICKUP_TIME,
			</if>
		CREATE_TIME,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="pathDetailId != null" >
        #{pathDetailId,jdbcType=VARCHAR},
			</if>
			<if test="waybillNo != null" >
        #{waybillNo,jdbcType=VARCHAR},
			</if>
			<if test="goodsNo != null" >
        #{goodsNo,jdbcType=VARCHAR},
			</if>
			<if test="origOrgCode != null" >
        #{origOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="objectiveOrgCode != null" >
        #{objectiveOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="routeNo != null" >
        #{routeNo,jdbcType=VARCHAR},
			</if>
			<if test="planStartTime != null" >
        #{planStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="actualStartTime != null" >
        #{actualStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="arriveOrLeave != null" >
        #{arriveOrLeave,jdbcType=VARCHAR},
			</if>
			<if test="planArriveTime != null" >
        #{planArriveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="actualArriveTime != null" >
        #{actualArriveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="billingOrgCode != null" >
        #{billingOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="nextDestOrgCode != null" >
        #{nextDestOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="vehicleNo != null" >
        #{vehicleNo,jdbcType=VARCHAR},
			</if>
			<if test="beforeVehicleNo != null" >
        #{beforeVehicleNo,jdbcType=VARCHAR},
			</if>
			<if test="ifChangeTime != null" >
        #{ifChangeTime,jdbcType=VARCHAR},
			</if>
			<if test="modifyStartTime != null" >
        #{modifyStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyArriveTime != null" >
        #{modifyArriveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="truckDetailId != null" >
        #{truckDetailId,jdbcType=VARCHAR},
			</if>
			<if test="nextArriveTime != null" >
        #{nextArriveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="planPickupTime != null" >
        #{planPickupTime,jdbcType=TIMESTAMP},
			</if>
		sysdate,
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
    update TFR.T_OPT_PATH_DETAIL
		<set >
			<if test="waybillNo != null" >
        WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR},
			</if>
			<if test="goodsNo != null" >
        GOODS_NO = #{goodsNo,jdbcType=VARCHAR},
			</if>
			<if test="origOrgCode != null" >
        ORIG_ORG_CODE = #{origOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="objectiveOrgCode != null" >
        OBJECTIVE_ORG_CODE = #{objectiveOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="routeNo != null" >
        ROUTE_NO = #{routeNo,jdbcType=VARCHAR},
			</if>
			<if test="planStartTime != null" >
        PLAN_START_TIME = #{planStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="actualStartTime != null" >
        ACTUAL_START_TIME = #{actualStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="arriveOrLeave != null" >
        ARRIVE_OR_LEAVE = #{arriveOrLeave,jdbcType=VARCHAR},
			</if>
			<if test="planArriveTime != null" >
        PLAN_ARRIVE_TIME = #{planArriveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="actualArriveTime != null" >
        ACTUAL_ARRIVE_TIME = #{actualArriveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="billingOrgCode != null" >
        BILLING_ORG_CODE = #{billingOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="nextDestOrgCode != null" >
        NEXT_DEST_ORG_CODE = #{nextDestOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="vehicleNo != null" >
        VEHICLE_NO = #{vehicleNo,jdbcType=VARCHAR},
			</if>
			<if test="beforeVehicleNo != null" >
        BEFORE_VEHICLE_NO = #{beforeVehicleNo,jdbcType=VARCHAR},
			</if>
			<if test="ifChangeTime != null" >
        IF_CHANGE_TIME = #{ifChangeTime,jdbcType=VARCHAR},
			</if>
			<if test="modifyStartTime != null" >
        MODIFY_START_TIME = #{modifyStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyArriveTime != null" >
        MODITY_ARRIVE_TIME = #{modifyArriveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="truckDetailId != null" >
        TRUCK_DETAIL_ID = #{truckDetailId,jdbcType=VARCHAR},
			</if>
			<if test="nextArriveTime != null" >
        NEXT_ARRIVE_TIME = #{nextArriveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="planPickupTime != null" >
        PLAN_PICKUP_TIME = #{planPickupTime,jdbcType=TIMESTAMP},
			</if>
		modify_time = sysdate
		</set>
    where PATH_DETAIL_ID = #{pathDetailId,jdbcType=VARCHAR}
	</update>
  
	<update id="updateByPrimaryKey" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
    update TFR.T_OPT_PATH_DETAIL
    set WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR},
      GOODS_NO = #{goodsNo,jdbcType=VARCHAR},
      ORIG_ORG_CODE = #{origOrgCode,jdbcType=VARCHAR},
      OBJECTIVE_ORG_CODE = #{objectiveOrgCode,jdbcType=VARCHAR},
      ROUTE_NO = #{routeNo,jdbcType=VARCHAR},
      PLAN_START_TIME = #{planStartTime,jdbcType=TIMESTAMP},
      <!-- 更换数据来源从车辆明细中取数据 -->
      <!-- ACTUAL_START_TIME = #{actualStartTime,jdbcType=TIMESTAMP}, -->
      ARRIVE_OR_LEAVE = #{arriveOrLeave,jdbcType=VARCHAR},
      PLAN_ARRIVE_TIME = #{planArriveTime,jdbcType=TIMESTAMP},
      <!-- 更换数据来源从车辆明细中取数据 -->
     <!--  ACTUAL_ARRIVE_TIME = #{actualArriveTime,jdbcType=TIMESTAMP}, -->
      BILLING_ORG_CODE = #{billingOrgCode,jdbcType=VARCHAR},
      NEXT_DEST_ORG_CODE = #{nextDestOrgCode,jdbcType=VARCHAR},
      VEHICLE_NO = #{vehicleNo,jdbcType=VARCHAR},
      BEFORE_VEHICLE_NO = #{beforeVehicleNo,jdbcType=VARCHAR},
      IF_CHANGE_TIME = #{ifChangeTime,jdbcType=VARCHAR},
      <!-- 不在用于更新主表 -->
      <!-- MODIFY_START_TIME = #{modifyStartTime,jdbcType=TIMESTAMP}, -->
      <!-- 不再用于更新主表 -->
      <!-- MODITY_ARRIVE_TIME = #{modifyArriveTime,jdbcType=TIMESTAMP}, -->
      TRUCK_DETAIL_ID = #{truckDetailId,jdbcType=VARCHAR},
      <!-- 暂时移除更新 -->
      <!-- NEXT_ARRIVE_TIME = #{nextArriveTime,jdbcType=TIMESTAMP}, -->
      PLAN_PICKUP_TIME = #{planPickupTime,jdbcType=TIMESTAMP},
      modify_time = sysdate
    where PATH_DETAIL_ID = #{pathDetailId,jdbcType=VARCHAR}
	</update>
  
	<!-- list delete -->
	<delete id="deleteList" 
		parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
   			delete from TFR.T_OPT_PATH_DETAIL PD
			WHERE PD.WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			<if test="pathDetailId!=null and pathDetailId!='' ">
					AND PD.PATH_DETAIL_ID = #{pathDetailId,jdbcType=VARCHAR}
			</if>
			<if test="goodsNo!=null and goodsNo!='' ">
					AND PD.GOODS_NO = #{goodsNo,jdbcType=VARCHAR}
			</if>
			<if test="origOrgCode!=null and origOrgCode!='' ">
					AND PD.ORIG_ORG_CODE = #{origOrgCode,jdbcType=VARCHAR}
			</if>
			<if test=" objectiveOrgCode!=null and objectiveOrgCode!='' ">
					AND PD.OBJECTIVE_ORG_CODE = #{objectiveOrgCode,jdbcType=VARCHAR}
			</if>
			<if test=" routeNo!=null and routeNo!='' ">
					AND PD.ROUTE_NO = #{routeNo,jdbcType=VARCHAR}
			</if>
			<if test=" arriveOrLeave!=null and  arriveOrLeave!='' ">
					AND PD.ARRIVE_OR_LEAVE = #{ arriveOrLeave,jdbcType=VARCHAR}
			</if>
			<if test=" ifChangeTime!=null and ifChangeTime!='' ">
					AND IF_CHANGE_TIME = #{ ifChangeTime,jdbcType=VARCHAR}
			</if>
			<if test="modifyArriveTime!=null and  modifyArriveTime!='' ">
					AND MODITY_ARRIVE_TIME = #{ modifyArriveTime}
			</if>
			<if test=" truckDetailId!=null and truckDetailId!='' ">
					AND TRUCK_DETAIL_ID = #{ truckDetailId}
			</if>
			<if test=" nextArriveTime!=null and  nextArriveTime!='' ">
					AND NEXT_ARRIVE_TIME = #{ nextArriveTime}
			</if>
	</delete>
	
	<!-- list insert -->
	<insert id="insertList" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity">
		
			insert into TFR.T_OPT_PATH_DETAIL (PATH_DETAIL_ID, WAYBILL_NO, GOODS_NO, 
     		ORIG_ORG_CODE, OBJECTIVE_ORG_CODE, ROUTE_NO, 
      		PLAN_START_TIME, ACTUAL_START_TIME, ARRIVE_OR_LEAVE, 
      		PLAN_ARRIVE_TIME, ACTUAL_ARRIVE_TIME, BILLING_ORG_CODE, 
      		NEXT_DEST_ORG_CODE, VEHICLE_NO, BEFORE_VEHICLE_NO, 
      		IF_CHANGE_TIME, MODIFY_START_TIME, MODITY_ARRIVE_TIME, TRUCK_DETAIL_ID,
      		NEXT_ARRIVE_TIME,PLAN_PICKUP_TIME, CREATE_TIME)
    		values (#{ pathDetailId,jdbcType=VARCHAR}, #{ waybillNo,jdbcType=VARCHAR}, #{ goodsNo,jdbcType=VARCHAR}, 
     		#{ origOrgCode,jdbcType=VARCHAR}, #{ objectiveOrgCode,jdbcType=VARCHAR}, #{ routeNo,jdbcType=VARCHAR}, 
      		#{ planStartTime,jdbcType=TIMESTAMP}, #{ actualStartTime,jdbcType=TIMESTAMP}, #{ arriveOrLeave,jdbcType=VARCHAR}, 
     		#{ planArriveTime,jdbcType=TIMESTAMP}, #{ actualArriveTime,jdbcType=TIMESTAMP} , #{ billingOrgCode,jdbcType=VARCHAR},
     		#{ nextDestOrgCode,jdbcType=VARCHAR}, #{ vehicleNo,jdbcType=VARCHAR}, #{ beforeVehicleNo,jdbcType=VARCHAR}, 
     		#{ ifChangeTime,jdbcType=VARCHAR}, #{ modifyStartTime,jdbcType=TIMESTAMP},#{ modifyArriveTime,jdbcType=TIMESTAMP},
     		#{ truckDetailId,jdbcType=VARCHAR}, #{ nextArriveTime,jdbcType=TIMESTAMP}, #{ planPickupTime,jdbcType=TIMESTAMP}, sysdate)
		
	</insert>
	
	<!-- list update -->
	<update id="updateList" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity">
		
			update TFR.T_OPT_PATH_DETAIL
   			set WAYBILL_NO = #{ waybillNo,jdbcType=VARCHAR},
     		GOODS_NO = #{ goodsNo,jdbcType=VARCHAR},
      		ORIG_ORG_CODE = #{ origOrgCode,jdbcType=VARCHAR},
     		OBJECTIVE_ORG_CODE = #{ objectiveOrgCode,jdbcType=VARCHAR},
      		ROUTE_NO = #{ routeNo,jdbcType=VARCHAR},
      		PLAN_START_TIME = #{ planStartTime,jdbcType=TIMESTAMP},
      		<!-- 更换数据来源，从车辆明细中取数据 -->
      		<!-- ACTUAL_START_TIME = #{ actualStartTime,jdbcType=TIMESTAMP}, -->
     		ARRIVE_OR_LEAVE = #{ arriveOrLeave,jdbcType=VARCHAR},
     		PLAN_ARRIVE_TIME = #{ planArriveTime,jdbcType=TIMESTAMP},
     		<!-- 更换数据来源，从车辆明细中取数据 -->
     		<!-- ACTUAL_ARRIVE_TIME = #{ actualArriveTime,jdbcType=TIMESTAMP}, -->
     		BILLING_ORG_CODE = #{ billingOrgCode,jdbcType=VARCHAR},
     		NEXT_DEST_ORG_CODE = #{ nextDestOrgCode,jdbcType=VARCHAR},
      		VEHICLE_NO = #{ vehicleNo,jdbcType=VARCHAR},
      		BEFORE_VEHICLE_NO = #{ beforeVehicleNo,jdbcType=VARCHAR},
      		<!-- 暂时移除更新 -->
      		<!-- IF_CHANGE_TIME = #{ ifChangeTime,jdbcType=VARCHAR}, -->
      		<!-- 不再用于更新主表 -->
     		<!-- MODIFY_START_TIME = #{ modifyStartTime,jdbcType=TIMESTAMP}, -->
     		MODITY_ARRIVE_TIME = #{ modifyArriveTime,jdbcType=TIMESTAMP},
     		TRUCK_DETAIL_ID = #{ truckDetailId,jdbcType=VARCHAR},
     		NEXT_ARRIVE_TIME = #{ nextArriveTime,jdbcType=TIMESTAMP},
     		PLAN_PICKUP_TIME = #{ planPickupTime,jdbcType=TIMESTAMP},
     		modify_time = sysdate
    		where PATH_DETAIL_ID = #{ pathDetailId,jdbcType=VARCHAR}
	
	</update>
  	
	<!-- pathDetail Query -->
	<select id="pathDetailQuery"  parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM TFR.T_OPT_PATH_DETAIL
		<include refid="select_Where"/>
		ORDER BY WAYBILL_NO, GOODS_NO, TO_NUMBER(NVL(ROUTE_NO,'0'))
	</select>
	
	<!-- pathDetail Query by ReCreateTransportationPathService -->
	<select id="pathDetailSimpleQuery"  parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" resultMap="BaseResultMap">
		SELECT /**中转: 查询走货路径明细 */
				WAYBILL_NO, GOODS_NO, ROUTE_NO, O1.NAME ORIG_ORG_NAME, O2.NAME OBJECTIVE_ORG_NAME
		FROM TFR.T_OPT_PATH_DETAIL D ,BSE.T_BAS_ORG O1,BSE.T_BAS_ORG O2
		WHERE
      		D.ORIG_ORG_CODE = O1.CODE AND O1.ACTIVE='Y' AND 
      		D.OBJECTIVE_ORG_CODE = O2.CODE AND O2.ACTIVE='Y' AND 
			WAYBILL_NO = #{waybillNo} AND GOODS_NO = #{goodsNo}
		ORDER BY WAYBILL_NO, GOODS_NO, TO_NUMBER(NVL(ROUTE_NO,'0'))
	</select>
	
	<!-- pathDetail Query not incloud releave-->
	<select id="pathDetailNotReleave"  parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM TFR.T_OPT_PATH_DETAIL
		<where>
			<if test="pathDetailId!=null and pathDetailId!='' ">
					PATH_DETAIL_ID = #{pathDetailId}
			</if>
			<if test="waybillNo!=null and waybillNo!='' ">
					AND WAYBILL_NO = #{waybillNo}
			</if>
			<if test="goodsNo!=null and goodsNo!='' ">
					AND GOODS_NO = #{goodsNo}
			</if>
			<if test="origOrgCode!=null and origOrgCode!='' ">
					AND ORIG_ORG_CODE = #{origOrgCode}
			</if>
			<if test="objectiveOrgCode!=null and objectiveOrgCode!='' ">
					AND OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
			</if>
			<if test="routeNo!=null and routeNo!='' ">
					AND ROUTE_NO = #{routeNo}
			</if>
			<if test="ifChangeTime!=null and ifChangeTime!='' ">
					AND IF_CHANGE_TIME = #{ifChangeTime}
			</if>
			<if test="modifyStartTime!=null and modifyStartTime!='' ">
					AND MODIFY_START_TIME = #{modifyStartTime}
			</if>
			<if test="modifyArriveTime!=null and modifyArriveTime!='' ">
					AND MODITY_ARRIVE_TIME = #{modifyArriveTime}
			</if>
			<if test="truckDetailId!=null and truckDetailId!='' ">
					AND TRUCK_DETAIL_ID = #{truckDetailId}
			</if>
			<if test="nextArriveTime!=null and nextArriveTime!='' ">
					AND NEXT_ARRIVE_TIME = #{nextArriveTime}
			</if>
			<choose>
				<when test="arriveOrLeave!=null and arriveOrLeave!='' ">	
					AND ARRIVE_OR_LEAVE = #{arriveOrLeave}
				</when>
				<otherwise>
					AND ARRIVE_OR_LEAVE != 'RELEAVE'
				</otherwise>
			</choose>
		</where>
		ORDER BY WAYBILL_NO, GOODS_NO, TO_NUMBER(NVL(ROUTE_NO,'0'))
	</select>
	
	<select id="pathDetailNotReleave4OnlyOne"  parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" resultMap="BaseResultMap">
		select * from (
		SELECT
		<include refid="Base_Column_List" />
		FROM TFR.T_OPT_PATH_DETAIL
		<where>
			<if test="pathDetailId!=null and pathDetailId!='' ">
					PATH_DETAIL_ID = #{pathDetailId}
			</if>
			<if test="waybillNo!=null and waybillNo!='' ">
					AND WAYBILL_NO = #{waybillNo}
			</if>
			<if test="goodsNo!=null and goodsNo!='' ">
					AND GOODS_NO = #{goodsNo}
			</if>
			<if test="origOrgCode!=null and origOrgCode!='' ">
					AND ORIG_ORG_CODE = #{origOrgCode}
			</if>
			<if test="objectiveOrgCode!=null and objectiveOrgCode!='' ">
					AND OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
			</if>
			<if test="routeNo!=null and routeNo!='' ">
					AND ROUTE_NO = #{routeNo}
			</if>
			<if test="ifChangeTime!=null and ifChangeTime!='' ">
					AND IF_CHANGE_TIME = #{ifChangeTime}
			</if>
			<if test="modifyStartTime!=null and modifyStartTime!='' ">
					AND MODIFY_START_TIME = #{modifyStartTime}
			</if>
			<if test="modifyArriveTime!=null and modifyArriveTime!='' ">
					AND MODITY_ARRIVE_TIME = #{modifyArriveTime}
			</if>
			<if test="truckDetailId!=null and truckDetailId!='' ">
					AND TRUCK_DETAIL_ID = #{truckDetailId}
			</if>
			<if test="nextArriveTime!=null and nextArriveTime!='' ">
					AND NEXT_ARRIVE_TIME = #{nextArriveTime}
			</if>
			<choose>
				<when test="arriveOrLeave!=null and arriveOrLeave!='' ">	
					AND ARRIVE_OR_LEAVE = #{arriveOrLeave}
				</when>
				<otherwise>
					AND ARRIVE_OR_LEAVE != 'RELEAVE'
				</otherwise>
			</choose>
		</where>
		ORDER BY TO_NUMBER(NVL(ROUTE_NO,'0'))) where rownum = 1
	</select>
	
	<!-- goodsNo select -->
	<select id="listQueryGoodsNo" resultType="java.lang.String" parameterType="java.lang.String">
		SELECT SERIAL_NO FROM PKP.T_SRV_LABELED_GOOD WHERE ACTIVE = 'Y' AND WAYBILL_NO = #{waybillNo}
	</select>
	
	<!-- fast goodsNo -->
	<select id="listFastGoodsNo" resultType="java.lang.String" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity">
		SELECT GOODS_NO FROM TFR.T_OPT_PATH_DETAIL WHERE WAYBILL_NO = #{waybillNo} AND ARRIVE_OR_LEAVE = #{arriveOrLeave} GROUP BY GOODS_NO ORDER BY COUNT(GOODS_NO)
	</select>
	
	<!-- fast goodsNo releave-->
	<select id="listFastGoodsNoByReleave" resultType="java.lang.String" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity">
		SELECT GOODS_NO FROM TFR.T_OPT_PATH_DETAIL WHERE WAYBILL_NO = #{waybillNo} AND ARRIVE_OR_LEAVE = #{arriveOrLeave} GROUP BY GOODS_NO ORDER BY COUNT(GOODS_NO) desc
	</select>
	
	<!-- pathWrong select -->
	<select id="pathWrong"  parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM TFR.T_OPT_PATH_DETAIL
		<where>
			<if test="waybillNo!=null and waybillNo!='' ">
					AND WAYBILL_NO = #{waybillNo}
			</if>
			<if test="goodsNo!=null and goodsNo!='' ">
					AND GOODS_NO = #{goodsNo}
			</if>
			<if test="arriveOrLeave!=null and arriveOrLeave!='' ">
					AND ARRIVE_OR_LEAVE != #{arriveOrLeave}
			</if>
		</where>
		ORDER BY TO_NUMBER(NVL(ROUTE_NO,'0'))
	</select>
	
	<!-- listNextStep -->
	<select id="listQueryNextStep" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM TFR.T_OPT_PATH_DETAIL 
		<where>
			<if test="waybillNo!=null and waybillNo!='' ">
					AND WAYBILL_NO = #{waybillNo}
			</if>
			<if test="goodsNo!=null and goodsNo!='' ">
					AND GOODS_NO = #{goodsNo}
			</if>
			<if test="routeNo!=null and routeNo!='' ">
			<![CDATA[
				AND TO_NUMBER(NVL(ROUTE_NO,'0')) > TO_NUMBER(#{routeNo})
			]]>
			</if>
		</where>
		ORDER BY TO_NUMBER(NVL(ROUTE_NO,'0'))
	</select>
	
	<!-- generalQuery -->
	<select id="generalQuery" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" resultMap="BaseResultMap">
		SELECT 
		WAYBILL_NO, ORIG_ORG_CODE, OBJECTIVE_ORG_CODE, NEXT_DEST_ORG_CODE,
		MODIFY_START_TIME, MODITY_ARRIVE_TIME, NEXT_ARRIVE_TIME,
		PLAN_PICKUP_TIME
		FROM TFR.T_OPT_PATH_DETAIL
		<where>
			<if test="waybillNo!=null and waybillNo!='' ">
					AND WAYBILL_NO = #{waybillNo}
			</if>
			<if test="arriveOrLeave!=null and arriveOrLeave!='' ">
					AND ARRIVE_OR_LEAVE = #{arriveOrLeave}
			</if>
			<if test="origOrgCode!=null and origOrgCode!='' ">
					AND ORIG_ORG_CODE = #{origOrgCode}
			</if>
			<if test="objectiveOrgCode!=null and objectiveOrgCode!='' ">
					AND OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
			</if>
		</where>
		GROUP BY WAYBILL_NO, ORIG_ORG_CODE, OBJECTIVE_ORG_CODE, NEXT_DEST_ORG_CODE, 
		MODIFY_START_TIME, MODITY_ARRIVE_TIME, NEXT_ARRIVE_TIME, PLAN_PICKUP_TIME
	</select>
	
	<!-- generalQueryNot -->
	<select id="generalQueryNot" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" resultMap="BaseResultMap">
		SELECT 
		WAYBILL_NO, ORIG_ORG_CODE, OBJECTIVE_ORG_CODE, NEXT_DEST_ORG_CODE,
		MODIFY_START_TIME, MODITY_ARRIVE_TIME, NEXT_ARRIVE_TIME,
		PLAN_PICKUP_TIME
		FROM TFR.T_OPT_PATH_DETAIL
		<where>
			<if test="waybillNo!=null and waybillNo!='' ">
					AND WAYBILL_NO = #{waybillNo}
			</if>
			<if test="arriveOrLeave!=null and arriveOrLeave!='' ">
					AND ARRIVE_OR_LEAVE = #{arriveOrLeave}
			</if>
			<if test="origOrgCode!=null and origOrgCode!='' ">
					AND ORIG_ORG_CODE != #{origOrgCode}
			</if>
			<if test="objectiveOrgCode!=null and objectiveOrgCode!='' ">
					AND OBJECTIVE_ORG_CODE != #{objectiveOrgCode}
			</if>
		</where>
		GROUP BY WAYBILL_NO, ORIG_ORG_CODE, OBJECTIVE_ORG_CODE, NEXT_DEST_ORG_CODE, 
		MODIFY_START_TIME, MODITY_ARRIVE_TIME, NEXT_ARRIVE_TIME, PLAN_PICKUP_TIME
	</select>
	
	<!-- generalGoodsNoList -->
	<select id="generalGoodsNoList" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" resultType="java.lang.String">
		SELECT 
		GOODS_NO
		FROM TFR.T_OPT_PATH_DETAIL
		<include refid="select_Where"/>
	</select>
	
	<sql id="select_Where">
		<where>
			<if test="pathDetailId!=null and pathDetailId!='' ">
					PATH_DETAIL_ID = #{pathDetailId}
			</if>
			<if test="waybillNo!=null and waybillNo!='' ">
					AND WAYBILL_NO = #{waybillNo}
			</if>
			<if test="goodsNo!=null and goodsNo!='' ">
					AND GOODS_NO = #{goodsNo}
			</if>
			<if test="origOrgCode!=null and origOrgCode!='' ">
					AND ORIG_ORG_CODE = #{origOrgCode}
			</if>
			<if test="objectiveOrgCode!=null and objectiveOrgCode!='' ">
					AND OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
			</if>
			<if test="routeNo!=null and routeNo!='' ">
					AND ROUTE_NO = #{routeNo}
			</if>
			<if test="arriveOrLeave!=null and arriveOrLeave!='' ">
					AND ARRIVE_OR_LEAVE = #{arriveOrLeave}
			</if>
			<if test="ifChangeTime!=null and ifChangeTime!='' ">
					AND IF_CHANGE_TIME = #{ifChangeTime}
			</if>
			<if test="modifyStartTime!=null and modifyStartTime!='' ">
					AND MODIFY_START_TIME = #{modifyStartTime}
			</if>
			<if test="modifyArriveTime!=null and modifyArriveTime!='' ">
					AND MODITY_ARRIVE_TIME = #{modifyArriveTime}
			</if>
			<if test="truckDetailId!=null and truckDetailId!='' ">
					AND TRUCK_DETAIL_ID = #{truckDetailId}
			</if>
			<if test="nextArriveTime!=null and nextArriveTime!='' ">
					AND NEXT_ARRIVE_TIME = #{nextArriveTime}
			</if>
		</where>
	</sql>
	
	<sql id="list_select_Where">
		<where>
			<if test="pathDetailId!=null and pathDetailId!='' ">
					PD.PATH_DETAIL_ID = #{pathDetailId,jdbcType=VARCHAR}
			</if>
			<if test="waybillNo!=null and waybillNo!='' ">
					AND PD.WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
			</if>
			<if test="goodsNo!=null and goodsNo!='' ">
					AND PD.GOODS_NO = #{goodsNo,jdbcType=VARCHAR}
			</if>
			<if test="origOrgCode!=null and origOrgCode!='' ">
					AND PD.ORIG_ORG_CODE = #{origOrgCode,jdbcType=VARCHAR}
			</if>
			<if test=" objectiveOrgCode!=null and objectiveOrgCode!='' ">
					AND PD.OBJECTIVE_ORG_CODE = #{objectiveOrgCode,jdbcType=VARCHAR}
			</if>
			<if test=" routeNo!=null and routeNo!='' ">
					AND PD.ROUTE_NO = #{routeNo,jdbcType=VARCHAR}
			</if>
			<if test=" arriveOrLeave!=null and  arriveOrLeave!='' ">
					AND PD.ARRIVE_OR_LEAVE = #{ arriveOrLeave,jdbcType=VARCHAR}
			</if>
			<if test=" ifChangeTime!=null and ifChangeTime!='' ">
					AND IF_CHANGE_TIME = #{ ifChangeTime,jdbcType=VARCHAR}
			</if>
			<if test="modifyArriveTime!=null and  modifyArriveTime!='' ">
					AND MODITY_ARRIVE_TIME = #{ modifyArriveTime}
			</if>
			<if test=" truckDetailId!=null and truckDetailId!='' ">
					AND TRUCK_DETAIL_ID = #{ truckDetailId}
			</if>
			<if test=" nextArriveTime!=null and  nextArriveTime!='' ">
					AND NEXT_ARRIVE_TIME = #{ nextArriveTime}
			</if>
		</where>
	</sql>
	
	<!-- 查询外场到达时间最晚一条 -->
	<select id="maxArriveTime"  parameterType="java.lang.String" resultType="Date">
		SELECT MAX(MODITY_ARRIVE_TIME) FROM TFR.T_OPT_PATH_DETAIL WHERE OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
	</select>
	
	<!-- 查询外场出发时间最晚一条 -->
	<select id="maxStartTime"  parameterType="java.lang.String" resultType="Date">
		SELECT MAX(MODIFY_START_TIME) FROM TFR.T_OPT_PATH_DETAIL WHERE ORIG_ORG_CODE = #{origOrgCode}
	</select>
	
	<!-- 查询外场到达的相应部门 -->
	<select id="queryArriveRelevantOrgCode"  parameterType="map" resultType="java.lang.String">
		select
		ORIG_ORG_CODE
		FROM TFR.T_OPT_PATH_DETAIL WHERE OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
		AND ARRIVE_OR_LEAVE IN
		<foreach collection="arriveOrLeaveList" close=")" open="(" item="arriveOrLeave" separator=",">
		#{arriveOrLeave}
		</foreach>
		<![CDATA[
		AND #{countStartTime} <= MODITY_ARRIVE_TIME
		AND #{countEndTime} > MODITY_ARRIVE_TIME
		]]>
		GROUP BY ORIG_ORG_CODE
	</select>
	
	<!-- 查询外场到达 -->
	<select id="queryArrive"  parameterType="map" resultMap="BaseResultMap">
		select
		WAYBILL_NO,
		max(PATH_DETAIL_ID) AS PATH_DETAIL_ID,
        max(GOODS_NO) AS GOODS_NO,
        max(ORIG_ORG_CODE) AS ORIG_ORG_CODE,
        max(OBJECTIVE_ORG_CODE) AS OBJECTIVE_ORG_CODE,
        max(ROUTE_NO) AS ROUTE_NO,
        max(PLAN_START_TIME) AS PLAN_START_TIME,
        max(ACTUAL_START_TIME) AS ACTUAL_START_TIME,
        max(ARRIVE_OR_LEAVE) AS ARRIVE_OR_LEAVE,
        max(PLAN_ARRIVE_TIME) AS PLAN_ARRIVE_TIME,
        max(ACTUAL_ARRIVE_TIME) AS ACTUAL_ARRIVE_TIME,
        max(BILLING_ORG_CODE) AS BILLING_ORG_CODE,
        max(NEXT_DEST_ORG_CODE) AS NEXT_DEST_ORG_CODE,
        max(VEHICLE_NO) AS VEHICLE_NO,
        max(BEFORE_VEHICLE_NO) AS BEFORE_VEHICLE_NO,
        max(IF_CHANGE_TIME) AS IF_CHANGE_TIME,
        max(MODIFY_START_TIME) AS MODIFY_START_TIME,
        max(MODITY_ARRIVE_TIME) AS MODITY_ARRIVE_TIME,
        max(TRUCK_DETAIL_ID) AS TRUCK_DETAIL_ID,
        max(NEXT_ARRIVE_TIME) AS NEXT_ARRIVE_TIME,
		max(PLAN_PICKUP_TIME) AS PLAN_PICKUP_TIME,
		count(WAYBILL_NO) AS waybillNoCount
		<![CDATA[
		FROM TFR.T_OPT_PATH_DETAIL 
		WHERE 
		ORIG_ORG_CODE = #{origOrgCode}
		AND OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
		AND ARRIVE_OR_LEAVE = #{arriveOrLeave}
		AND #{countStartTime} <= MODITY_ARRIVE_TIME
		AND #{countEndTime} > MODITY_ARRIVE_TIME
		GROUP BY WAYBILL_NO
		]]>
	</select>
		
	<!-- 查询外场出发的相应部门 -->
	<select id="queryDepartRelevantOrgCode"  parameterType="map" resultType="java.lang.String">
		select
		OBJECTIVE_ORG_CODE
		FROM TFR.T_OPT_PATH_DETAIL WHERE ORIG_ORG_CODE = #{origOrgCode}
		AND ARRIVE_OR_LEAVE = #{arriveOrLeave}
		<![CDATA[
		AND #{countStartTime} <= MODIFY_START_TIME
		AND #{countEndTime} > MODIFY_START_TIME
		]]>
		GROUP BY OBJECTIVE_ORG_CODE
	</select>
	
	<!-- 查询外场出发开单货量 -->
	<select id="queryStartBilling"  parameterType="map" resultMap="BaseResultMap">
		SELECT
		WAYBILL_NO,
        max(PATH_DETAIL_ID) AS PATH_DETAIL_ID,
        max(GOODS_NO) AS GOODS_NO,
        max(ORIG_ORG_CODE) AS ORIG_ORG_CODE,
        max(OBJECTIVE_ORG_CODE) AS OBJECTIVE_ORG_CODE,
        max(ROUTE_NO) AS ROUTE_NO,
        max(PLAN_START_TIME) AS PLAN_START_TIME,
        max(ACTUAL_START_TIME) AS ACTUAL_START_TIME,
        max(ARRIVE_OR_LEAVE) AS ARRIVE_OR_LEAVE,
        max(PLAN_ARRIVE_TIME) AS PLAN_ARRIVE_TIME,
        max(ACTUAL_ARRIVE_TIME) AS ACTUAL_ARRIVE_TIME,
        max(BILLING_ORG_CODE) AS BILLING_ORG_CODE,
        max(NEXT_DEST_ORG_CODE) AS NEXT_DEST_ORG_CODE,
        max(VEHICLE_NO) AS VEHICLE_NO,
        max(BEFORE_VEHICLE_NO) AS BEFORE_VEHICLE_NO,
        max(IF_CHANGE_TIME) AS IF_CHANGE_TIME,
        max(MODIFY_START_TIME) AS MODIFY_START_TIME,
        max(MODITY_ARRIVE_TIME) AS MODITY_ARRIVE_TIME,
        max(TRUCK_DETAIL_ID) AS TRUCK_DETAIL_ID,
        max(NEXT_ARRIVE_TIME) AS NEXT_ARRIVE_TIME,
		max(PLAN_PICKUP_TIME) AS PLAN_PICKUP_TIME,
		count(WAYBILL_NO) AS waybillNoCount
		<![CDATA[
		FROM TFR.T_OPT_PATH_DETAIL 
		WHERE 
		ORIG_ORG_CODE = #{origOrgCode} 
		AND OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
		AND ARRIVE_OR_LEAVE = #{arriveOrLeave}
		AND #{countStartTime} <= MODIFY_START_TIME
		AND #{countEndTime} > MODIFY_START_TIME
		AND BEFORE_VEHICLE_NO = 'N/A'
		GROUP BY WAYBILL_NO
		]]>
	</select>
	
	<!-- 查询外场出发非开单货量 -->
	<select id="queryStartNotBilling"  parameterType="map" resultMap="BaseResultMap">
		SELECT
		WAYBILL_NO,
        max(PATH_DETAIL_ID) AS PATH_DETAIL_ID,
        max(GOODS_NO) AS GOODS_NO,
        max(ORIG_ORG_CODE) AS ORIG_ORG_CODE,
        max(OBJECTIVE_ORG_CODE) AS OBJECTIVE_ORG_CODE,
        max(ROUTE_NO) AS ROUTE_NO,
        max(PLAN_START_TIME) AS PLAN_START_TIME,
        max(ACTUAL_START_TIME) AS ACTUAL_START_TIME,
        max(ARRIVE_OR_LEAVE) AS ARRIVE_OR_LEAVE,
        max(PLAN_ARRIVE_TIME) AS PLAN_ARRIVE_TIME,
        max(ACTUAL_ARRIVE_TIME) AS ACTUAL_ARRIVE_TIME,
        max(BILLING_ORG_CODE) AS BILLING_ORG_CODE,
        max(NEXT_DEST_ORG_CODE) AS NEXT_DEST_ORG_CODE,
        max(VEHICLE_NO) AS VEHICLE_NO,
        max(BEFORE_VEHICLE_NO) AS BEFORE_VEHICLE_NO,
        max(IF_CHANGE_TIME) AS IF_CHANGE_TIME,
        max(MODIFY_START_TIME) AS MODIFY_START_TIME,
        max(MODITY_ARRIVE_TIME) AS MODITY_ARRIVE_TIME,
        max(TRUCK_DETAIL_ID) AS TRUCK_DETAIL_ID,
        max(NEXT_ARRIVE_TIME) AS NEXT_ARRIVE_TIME,
	  	max(PLAN_PICKUP_TIME) AS PLAN_PICKUP_TIME,
		count(WAYBILL_NO) AS waybillNoCount
		<![CDATA[
		FROM TFR.T_OPT_PATH_DETAIL 
		WHERE 
		ORIG_ORG_CODE = #{origOrgCode}
		AND OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
		AND ARRIVE_OR_LEAVE = #{arriveOrLeave}
		AND #{countStartTime} <= MODIFY_START_TIME
		AND #{countEndTime} > MODIFY_START_TIME
		AND BEFORE_VEHICLE_NO != 'N/A'
		AND IF_CHANGE_TIME = #{ifChangeTime}
		GROUP BY WAYBILL_NO
		]]>
	</select>
	<!-- 从数据迁移表中查询路径明细LIST 如果状态为空则默认查询状态不等于再离开的条目 -->
	<select id="pathDetailNotReleaveFromMigration"  parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM TFR.T_OPT_PATH_DETAIL_MIGRATION
		<where>
			<if test="pathDetailId!=null and pathDetailId!='' ">
					PATH_DETAIL_ID = #{pathDetailId}
			</if>
			<if test="waybillNo!=null and waybillNo!='' ">
					AND WAYBILL_NO = #{waybillNo}
			</if>
			<if test="goodsNo!=null and goodsNo!='' ">
					AND GOODS_NO = #{goodsNo}
			</if>
			<if test="origOrgCode!=null and origOrgCode!='' ">
					AND ORIG_ORG_CODE = #{origOrgCode}
			</if>
			<if test="objectiveOrgCode!=null and objectiveOrgCode!='' ">
					AND OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
			</if>
			<if test="routeNo!=null and routeNo!='' ">
					AND ROUTE_NO = #{routeNo}
			</if>
			<if test="ifChangeTime!=null and ifChangeTime!='' ">
					AND IF_CHANGE_TIME = #{ifChangeTime}
			</if>
			<if test="modifyStartTime!=null and modifyStartTime!='' ">
					AND MODIFY_START_TIME = #{modifyStartTime}
			</if>
			<if test="modifyArriveTime!=null and modifyArriveTime!='' ">
					AND MODITY_ARRIVE_TIME = #{modifyArriveTime}
			</if>
			<if test="truckDetailId!=null and truckDetailId!='' ">
					AND TRUCK_DETAIL_ID = #{truckDetailId}
			</if>
			<if test="nextArriveTime!=null and nextArriveTime!='' ">
					AND NEXT_ARRIVE_TIME = #{nextArriveTime}
			</if>
			<choose>
				<when test="arriveOrLeave!=null and arriveOrLeave!='' ">	
					AND ARRIVE_OR_LEAVE = #{arriveOrLeave}
				</when>
				<otherwise>
					AND ARRIVE_OR_LEAVE != 'RELEAVE'
				</otherwise>
			</choose>
		</where>
		ORDER BY WAYBILL_NO, GOODS_NO, TO_NUMBER(NVL(ROUTE_NO,'0'))
	</select>
	
	<!-- 从走货路径详细信息数据迁移表中查询信息 -->
	<select id="queryPathDetailFromMigration"  parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM TFR.T_OPT_PATH_DETAIL_MIGRATION
		<include refid="select_Where"/>
		ORDER BY WAYBILL_NO, GOODS_NO, TO_NUMBER(NVL(ROUTE_NO,'0'))
	</select>
	
	<!-- 从走货路径详细信息备份表中，查询货件信息 -->
	<select id="listFastGoodsNoFromMigration" resultType="java.lang.String" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity">
		SELECT GOODS_NO FROM TFR.T_OPT_PATH_DETAIL_MIGRATION WHERE WAYBILL_NO = #{waybillNo} AND ARRIVE_OR_LEAVE = #{arriveOrLeave} GROUP BY GOODS_NO ORDER BY COUNT(GOODS_NO)
	</select>
	
	<!-- 从走货路径详细信息备份表中，查询已经离开状态的货件信息-->
	<select id="listFastGoodsNoByReleaveFromMigration" resultType="java.lang.String" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity">
		SELECT GOODS_NO FROM TFR.T_OPT_PATH_DETAIL_MIGRATION WHERE WAYBILL_NO = #{waybillNo} AND ARRIVE_OR_LEAVE = #{arriveOrLeave} GROUP BY GOODS_NO ORDER BY COUNT(GOODS_NO) desc
	</select>
	
	<!-- pathDetail Query releave-->
	<select id="queryPathDetailReleave"  parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" resultMap="BaseResultMap">   
        SELECT <include refid="Base_Column_List" />
        FROM TFR.T_OPT_PATH_DETAIL T 
        WHERE T.WAYBILL_NO =#{waybillNo}
        AND T.OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
        AND T.ARRIVE_OR_LEAVE = 'RELEAVE'
        <if test="goodsNo!=null and goodsNo!=''">
   			AND T.GOODS_NO = #{goodsNo}
   		</if>
        AND T.ROUTE_NO=(
            SELECT MAX(to_number(nvl(D.route_no,'0'))) FROM TFR.T_OPT_PATH_DETAIL D 
            WHERE d.waybill_no= #{waybillNo}
            AND D.OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
            AND D.ARRIVE_OR_LEAVE = 'RELEAVE'
            <if test="goodsNo!=null and goodsNo!=''">
   			AND D.GOODS_NO = #{goodsNo}
   			</if>
        )
	</select>
	
	<!-- 查询最大路段号 -->
	<select id="queryMaxRouteNo" resultType="java.lang.String" parameterType="map">
		SELECT ROUTE_NO FROM TFR.T_OPT_PATH_DETAIL 
		WHERE WAYBILL_NO=#{waybillNo} 
		AND OBJECTIVE_ORG_CODE=#{lastInStockOrgCode}
		<if test="serialNo!=null and serialNo!=''">
			AND GOODS_NO=#{serialNo} 
		</if>
	</select>
	<!-- 查询小于指定路段号的走货路径详细信息-->
	<select id="getNeedsOldPathDetailList"  resultMap="BaseResultMap" parameterType="map">
		SELECT 
			<include refid="Base_Column_List" />
		FROM TFR.T_OPT_PATH_DETAIL 
		WHERE WAYBILL_NO=#{waybillNo} 
		<![CDATA[
			and TO_NUMBER(NVL(ROUTE_NO,'0')) <= TO_NUMBER(#{maxRouteNo})
		]]>
		<if test="serialNo!=null and serialNo!=''">
			AND GOODS_NO=#{serialNo} 
		</if>
		order by GOODS_NO,TO_NUMBER(NVL(ROUTE_NO,'0'))
	</select>
	
	<!-- 查询小于指定路段号的走货路径详细信息-->
	<select id="queryMaxReleavePathDetailEntityList"  resultMap="BaseResultMap" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity">
        SELECT <include refid="Base_Column_List" />
        FROM TFR.T_OPT_PATH_DETAIL T 
        WHERE T.WAYBILL_NO =#{waybillNo}
        AND T.ARRIVE_OR_LEAVE = 'RELEAVE'
        <if test="goodsNo!=null and goodsNo!=''">
   			AND T.GOODS_NO = #{goodsNo}
   		</if>
        AND TO_NUMBER(NVL(T.ROUTE_NO,'0'))=(
            SELECT MAX(to_number(NVL(D.route_no,'0'))) FROM TFR.T_OPT_PATH_DETAIL D 
            WHERE D.waybill_no= #{waybillNo}
            AND D.ARRIVE_OR_LEAVE = 'RELEAVE'
            <if test="goodsNo!=null and goodsNo!=''">
   				AND D.GOODS_NO = #{goodsNo}
   			</if>
        )
	</select>
	
	<!-- 将此之前的路径全部更新为已经离开状态 -->
	<update id="updateBeforePathDetailList" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
	    UPDATE TFR.T_OPT_PATH_DETAIL
		SET ARRIVE_OR_LEAVE = 'RELEAVE',
		modify_time = sysdate
	    WHERE WAYBILL_NO = #{waybillNo}
	    <![CDATA[
			AND TO_NUMBER(NVL(ROUTE_NO,'0')) < TO_NUMBER(#{routeNo})
		]]>
	    <if test="goodsNo!=null and goodsNo!=''">
   			AND GOODS_NO = #{goodsNo}
   	    </if>	    
	</update>
	
	<!-- 更新最大路段的目标部门 -->
	<update id="updatePathDetailMaxRouteNo" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
	    UPDATE TFR.T_OPT_PATH_DETAIL
		SET ARRIVE_OR_LEAVE = #{arriveOrLeave},
		<!-- 更换数据来源。从车辆明细中取数据 -->
		<!-- ACTUAL_ARRIVE_TIME = #{actualArriveTime,jdbcType=TIMESTAMP}, -->
		modify_time = sysdate
	    WHERE WAYBILL_NO = #{waybillNo}
	    AND OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
	    <if test="goodsNo!=null and goodsNo!=''">
	    	AND GOODS_NO = #{goodsNo}
	    </if>
	    AND TO_NUMBER(NVL(ROUTE_NO,'0')) =(
	    	SELECT MAX(TO_NUMBER(NVL(D.ROUTE_NO,'0'))) FROM TFR.T_OPT_PATH_DETAIL D 
            WHERE D.WAYBILL_NO= #{waybillNo}
			AND D.OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
            <if test="goodsNo!=null and goodsNo!=''">
   				AND D.GOODS_NO = #{goodsNo}
   			</if>
	    )
	</update>
	
	<!-- 将之前的路径，全部更新为RELEAVE -->
	<update id="updateBeforePathDetailEntityForReleave" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
	    UPDATE TFR.T_OPT_PATH_DETAIL
		SET ARRIVE_OR_LEAVE = 'RELEAVE',
		modify_time = sysdate
	    WHERE WAYBILL_NO = #{waybillNo}
	    AND OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
	    <choose>
	    	<when test="goodsNo!=null and goodsNo!=''">
		    	AND GOODS_NO = #{goodsNo}
		    	<![CDATA[
			    	AND TO_NUMBER(NVL(ROUTE_NO,'0')) < (
			    	SELECT MAX(TO_NUMBER(NVL(D.ROUTE_NO,'0'))) FROM TFR.T_OPT_PATH_DETAIL D 
		            WHERE D.WAYBILL_NO= #{waybillNo}
		   				AND D.GOODS_NO = #{goodsNo}
			    	)
		    	]]>
	    	</when>
	    	<otherwise>
		    	<![CDATA[
			    	AND TO_NUMBER(NVL(ROUTE_NO,'0')) < (
			    	SELECT MAX(TO_NUMBER(NVL(D.ROUTE_NO,'0'))) FROM TFR.T_OPT_PATH_DETAIL D 
		            WHERE D.WAYBILL_NO= #{waybillNo}
					)
				]]>
	    	</otherwise>
	    </choose>
	</update>
	
	<!-- 将之后的路径，全部更新为NOTLEAVE -->
	<update id="updateBehindPathDetailForNotLeave" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
	    UPDATE TFR.T_OPT_PATH_DETAIL
		SET ARRIVE_OR_LEAVE = #{arriveOrLeave},
		modify_time = sysdate
	    WHERE WAYBILL_NO = #{waybillNo}
	    <![CDATA[
			AND TO_NUMBER(NVL(ROUTE_NO,'0')) > TO_NUMBER(#{routeNo})
		]]>
	    <if test="goodsNo!=null and goodsNo!=''">
   			AND GOODS_NO = #{goodsNo}
   	    </if>	  
	</update>
	
	<!-- 删除当前部门作为起始部门的最大路段的走货路径(含当前)之后的所有路段信息 -->
	<delete id="deleteBehindPathDetailEntityWithOrigOrgCode" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
	    DELETE from TFR.T_OPT_PATH_DETAIL d
	    WHERE d.waybill_no=#{waybillNo}
	     <choose>
	    	<when test="goodsNo!=null and goodsNo!=''">
	    	 AND d.goods_no=#{goodsNo}
	        <![CDATA[
		    	AND to_number(nvl(d.route_no,'0'))>=(
	        	SELECT MAX(to_number(nvl(t.route_no,'0')))
	        	FROM tfr.t_opt_path_detail t WHERE t.waybill_no=#{waybillNo} AND t.goods_no=#{goodsNo} AND t.orig_org_code=#{origOrgCode}
	        	) 
	        ]]>
	        </when>
	    	<otherwise>
	    		AND to_number(nvl(d.route_no,'0'))>=(
	        	SELECT MAX(to_number(nvl(t.route_no,'0')))
	        	FROM tfr.t_opt_path_detail t WHERE t.waybill_no=#{waybillNo} AND t.orig_org_code=#{origOrgCode}
	        	)
	    	</otherwise>
	     </choose>
	</delete>
	
	<!-- 更新当前部门作为起始部门的最大路段的走货路径之前的路段状态 -->
	<update id="updateBeforePathDetailEntityWithOrigOrgCode" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
	    UPDATE TFR.T_OPT_PATH_DETAIL
		SET ARRIVE_OR_LEAVE = #{arriveOrLeave},
		modify_time = sysdate
	    WHERE WAYBILL_NO = #{waybillNo}
	    <choose>
	    	<when test="goodsNo!=null and goodsNo!=''">
		    	AND GOODS_NO = #{goodsNo}
		    	<![CDATA[
			    	AND TO_NUMBER(NVL(ROUTE_NO,'0')) < (
			    	SELECT MAX(to_number(nvl(t.route_no,'0')))
	        		FROM tfr.t_opt_path_detail t WHERE t.waybill_no=#{waybillNo} AND t.goods_no=#{goodsNo} AND t.orig_org_code=#{origOrgCode}
			    	)
		    	]]>
	    	</when>
	    	<otherwise>
		    	<![CDATA[
			    	AND TO_NUMBER(NVL(ROUTE_NO,'0')) < (
			    	SELECT MAX(to_number(nvl(t.route_no,'0')))
	        		FROM tfr.t_opt_path_detail t WHERE t.waybill_no=#{waybillNo} AND t.orig_org_code=#{origOrgCode}
					)
				]]>
	    	</otherwise>
	    </choose>
	</update>
	
	
	<!-- 删除走货路径信息 -->
	<delete id="deletePathDetailEntity" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
	    DELETE from TFR.T_OPT_PATH_DETAIL 
	    WHERE WAYBILL_NO = #{waybillNo}
	    AND ROUTE_NO = #{routeNo}
	    <if test="goodsNo!=null and goodsNo!=''">
	    	AND GOODS_NO = #{goodsNo}
	    </if>
	</delete>
	
	<!-- 查询走货路径最后一段信息-->
	<select id="queryLastPathDetailEntity"  resultMap="BaseResultMap" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity">
        SELECT <include refid="Base_Column_List" />
        FROM TFR.T_OPT_PATH_DETAIL T 
        WHERE T.WAYBILL_NO =#{waybillNo}
        <if test="goodsNo!=null and goodsNo!=''">
   			AND T.GOODS_NO = #{goodsNo}
   		</if>
        AND TO_NUMBER(NVL(T.ROUTE_NO,'0'))=(
            SELECT MAX(to_number(NVL(D.route_no,'0'))) FROM TFR.T_OPT_PATH_DETAIL D 
            WHERE D.waybill_no= #{waybillNo}
            <if test="goodsNo!=null and goodsNo!=''">
   				AND D.GOODS_NO = #{goodsNo}
   			</if>
        )
	</select>
	
	<!-- 查询指定目标部门的最大走货路段的走货路径信息-->
	<select id="queryMaxRouteNoPathDetailEntityWithObjOrgCode"  resultMap="BaseResultMap" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity">
        SELECT <include refid="Base_Column_List" />
        FROM TFR.T_OPT_PATH_DETAIL T 
        WHERE T.WAYBILL_NO =#{waybillNo}
        AND T.OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
        <if test="goodsNo!=null and goodsNo!=''">
   			AND T.GOODS_NO = #{goodsNo}
   		</if>
        AND TO_NUMBER(NVL(T.ROUTE_NO,'0'))=(
            SELECT MAX(to_number(NVL(D.route_no,'0'))) FROM TFR.T_OPT_PATH_DETAIL D 
            WHERE D.waybill_no= #{waybillNo}
            AND D.OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
            <if test="goodsNo!=null and goodsNo!=''">
   				AND D.GOODS_NO = #{goodsNo}
   			</if>
        )
	</select>
	
	<!-- 查询流水号-->
	<select id="queryGoodsNoList"  resultMap="BaseResultMap" parameterType="java.lang.String">
		SELECT  <include refid="Base_Column_List" />
		FROM  tfr.t_opt_path_detail t 
		WHERE t.waybill_no = #{waybillNo}
	</select>
	
	<!-- 更新最大路段的目标部门 -->
	<update id="changePathDetailDestOrgCode" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
	    UPDATE TFR.T_OPT_PATH_DETAIL
		SET OBJECTIVE_ORG_CODE = #{objectiveOrgCode},
		TRUCK_DETAIL_ID = #{truckDetailId},
		modify_time = sysdate
	    WHERE WAYBILL_NO = #{waybillNo}
	    <if test="goodsNo!=null and goodsNo!=''">
	    	AND GOODS_NO = #{goodsNo}
	    </if>
	    AND TO_NUMBER(NVL(ROUTE_NO,'0')) =(
	    	SELECT MAX(TO_NUMBER(NVL(D.ROUTE_NO,'0'))) FROM TFR.T_OPT_PATH_DETAIL D 
            WHERE D.WAYBILL_NO= #{waybillNo}
            <if test="goodsNo!=null and goodsNo!=''">
   				AND D.GOODS_NO = #{goodsNo}
   			</if>
	    )
	</update>
	
    <!-- 修改走货路径明细倒数第二段的nextOrgCode-->
	<update id="changePathDetailEntityNextOrgCode" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
	    UPDATE TFR.T_OPT_PATH_DETAIL
		SET NEXT_DEST_ORG_CODE = #{nextDestOrgCode},
		TRUCK_DETAIL_ID = #{truckDetailId},
		modify_time = sysdate
	    WHERE WAYBILL_NO = #{waybillNo}
	    <if test="goodsNo!=null and goodsNo!=''">
	    	AND GOODS_NO = #{goodsNo}
	    </if>
	    AND TO_NUMBER(NVL(ROUTE_NO,'0')) =(
	    	SELECT MAX(TO_NUMBER(NVL(D.ROUTE_NO,'0')))-1 FROM TFR.T_OPT_PATH_DETAIL D 
            WHERE D.WAYBILL_NO= #{waybillNo}
            <if test="goodsNo!=null and goodsNo!=''">
   				AND D.GOODS_NO = #{goodsNo}
   			</if>
	    )
	 </update>
	 
	 
	  <!-- 根据出发部门修改查询的最大路由的前一段明细的nextOrgCode-->
	<update id="changePathDetailPojoNextOrgCode" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
	    UPDATE TFR.T_OPT_PATH_DETAIL
		SET NEXT_DEST_ORG_CODE = #{nextDestOrgCode},
		TRUCK_DETAIL_ID = #{truckDetailId},
		modify_time = sysdate
	    WHERE WAYBILL_NO = #{waybillNo}
	    <if test="goodsNo!=null and goodsNo!=''">
	    	AND GOODS_NO = #{goodsNo}
	    </if>
	    AND TO_NUMBER(NVL(ROUTE_NO,'0')) =(
	    	SELECT MAX(TO_NUMBER(NVL(D.ROUTE_NO,'0')))-1 FROM TFR.T_OPT_PATH_DETAIL D 
            WHERE D.WAYBILL_NO= #{waybillNo}
            AND ORIG_ORG_CODE=#{origOrgCode}
            <if test="goodsNo!=null and goodsNo!=''">
   				AND D.GOODS_NO = #{goodsNo}
   			</if>
	    )
	 </update>
	 
	   
	<!-- 查询倒数第二段走货路径编码是否与传入的编码相同 -->
	<select id="queryEqualsLastSecondPathDetailCount" resultType="java.lang.Integer" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity">
		SELECT COUNT(1) FROM tfr.t_opt_path_detail t 
		WHERE t.waybill_no = #{waybillNo}
		AND t.objective_org_code = #{objectiveOrgCode}
		<if test="goodsNo!=null and goodsNo!=''">
	    	AND t.GOODS_NO = #{goodsNo}
	    </if>
		AND to_number(nvl(t.route_no,'0'))=(
		    SELECT max(to_number(nvl(d.route_no,'0')))-1 FROM tfr.t_opt_path_detail d 
		    WHERE d.waybill_no = #{waybillNo}
		    <if test="goodsNo!=null and goodsNo!=''">
	    		AND d.GOODS_NO = #{goodsNo}
	    	</if>
		)
    </select>
    
    <!-- 查询指定目标部门和路段号的之前的部门，包含当前路段号 -->
	<select id="queryBeforePathDetailList" resultMap="BaseResultMap" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity">
		SELECT <include refid="Base_Column_List" />
		FROM tfr.t_opt_path_detail t 
		WHERE t.waybill_no = #{waybillNo}
		<if test="goodsNo!=null and goodsNo!=''">
	    	AND t.GOODS_NO = #{goodsNo}
	    </if>
	    <![CDATA[
			AND to_number(nvl(t.route_no,'0'))<=to_number(nvl(#{routeNo},'0'))
		]]>
		order by t.waybill_no,t.GOODS_NO,TO_NUMBER(NVL(t.route_no,'0'))
    </select>
    <!-- 删除走货路径信息 -->
    <delete id="deletePathDetailList" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
    	delete from TFR.T_OPT_PATH_DETAIL
    	where WAYBILL_NO = #{waybillNo}
    	<if test="goodsNo!=null and goodsNo!=''">
	    	AND GOODS_NO = #{goodsNo}
	    </if>
	    <if test="routeNo!=null and routeNo!=''">
	    	AND ROUTE_NO = #{routeNo}
	    </if>
	</delete>
	<!-- 根据运单号和流水号获取最新的交接单 -->
	<select id="queryNewHandoverNoByWaybillNo" resultType="java.lang.String" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.PathDetailEntity" >
		select handover_no from (
		SELECT hb.handover_no
		  FROM tfr.t_opt_handoverbill hb
		 INNER JOIN tfr.t_opt_handoverbill_serialno hd
		    ON hd.handoverbill_no = hb.handover_no
		   and hd.waybill_no = #{waybillNo}
		   and hd.serial_no = #{goodsNo}
		 WHERE hd.waybill_no = #{waybillNo}
		   and hd.serial_no = #{goodsNo}
		   AND hb.handoverbill_state != 90
		 ORDER BY hb.create_time DESC
		 ) where rownum=1
	</select>
	
	<!-- 根据运单号查询出运单第一次补码前的虚拟营业部(针对快递) -->
	<select id="queryBeforeOrgCodeByWaybillNO"  parameterType="java.lang.String" resultType="java.lang.String">
		select  cl.before_org_code    beforeOrgCode
  			from tfr.t_opt_complement_log <![CDATA[cl]]>
 			where cl.waybill_no = #{waybill_no,jdbcType=VARCHAR}
			 order by cl.operation_time <![CDATA[asc]]>
	</select>
	
	<!-- 根据运单号或运单号流水号查询走货路径明细 -->
	<select id="queryPathDetailByNos" parameterType="map" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM TFR.T_OPT_PATH_DETAIL
		WHERE WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
		<if test="serialNoList != null and serialNoList.size > 0">
			AND GOODS_NO IN
			<foreach collection="serialNoList" open="(" close=")" separator="," index="index" item="item">
				#{item,jdbcType=VARCHAR}
			</foreach>
		</if>
		ORDER BY WAYBILL_NO, GOODS_NO, TO_NUMBER(NVL(ROUTE_NO,'0'))
	</select>
</mapper>