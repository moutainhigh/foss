/**
 *  initial comments.
 */
/*******************************************************************************
 * Copyright 2013 PKP
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *    http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * PROJECT NAME	: pkp-changing
 * 
 * FILE PATH        	: src/main/java/com/deppon/foss/module/pickup/changing/client/action/ShowPickupStationDialogAction.java
 * 
 * FILE NAME        	: ShowPickupStationDialogAction.java
 * 
 * AUTHOR			: FOSS接送货系统开发组
 * 
 * HOME PAGE		: http://www.deppon.com
 * 
 * COPYRIGHT		: Copyright (c) 2012  Deppon All Rights Reserved.
 ******************************************************************************/
/*
 * Copyright by Deppon and the original author or authors.
 * 
 * This document only allow internal use ,Any of your behaviors using the file
 * not internal will pay legal responsibility.
 *
 * You may learn more information about Deppon from
 *
 *      http://www.deppon.com
 *
 */
/**
 * 修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-06-18	初版	于红浩	V0.1
2012-7-4	1.	提交运单变更时，增加运单变更信息回显；
2.	删除运单变更预览；
3.	运单提交后才可进行打印；	于红浩	V0.2
2012-7-25	业务评审完毕，升至0.9版本	于红浩	V0.9
2012-8-8	基线	于红浩	V1.0
2012-10-11	1.	删除“待确认的运单变更不能起草运单变更”，增加货款结清的运单不能起草变更单，优化起草运单变更时系统提示内容；
2.	优化内部原因-运单变更规则；
1.	提交界面增加短信通知“发货人”、“收货人”选择框	邵宏亮	V1.01
2012-10-16	1.	补充凭证上传的文件类型为图片，并限制文件大小	邵宏亮	V1.02
2012-12-3	1.	新增变更类型的显示规则，区分作废、转运、返货场景下修改提货网点的方式；
2.	新增合同客户修改规则	邵宏亮	V1.03
2012-12-10	1.	新增代打木架变更处理规则	邵宏亮	V1.04
2013-1-22	2.	添加起草变更规则，去除凭证强制上传限制	邵宏亮	V1.05
2013-2-27		根据ISSUE—1706修订	王辉	
2013-3-6	根据ISSUE-1511修订	王辉	
2013-3-8	根据ISSUE-1878修订	王辉	
1.	SUC-546-起草转运单_返货单
1.1	相关业务用例
BUC_FOSS_5.60.10_745处理返货转货。
1.2	用例描述
对于客户提出的货物转运或返回申请，营业员导入运单信息至运单变更界面后，录入转运/返货的目的站、提货网点等信息（如客户有要求也可同时对运单的其他信息进行更改），最终上传变更凭证并提交变更申请。
注：变更运单包含：起草变更单（外部）、起草变更单（内部）、起草转运单、起草返货单、作废运单、中止运单。
1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1.	系统已生成完整的运单信息	1.	SUC-439：提交运单
2.	SUC-491：补录运单
后置条件	1.	对转运单/返货单变更申请进行审核	1.	SUC-542：查询_审核变更申请
1.4	操作用户角色
操作用户	描述
运单变更起草员	起草转运单/返货单变更申请、上传变更凭证、提交变更申请
1.5	界面要求
1.5.1	表现方式
Web页面 
1.5.2	界面原型
 
【起草转运单】初始界面
 
【起草转运单-录入转运信息】界面
 
【起草转运单-查看转运记录】界面

 
【转运信息回显】界面
 
【起草返货单】初始界面
 
【起草返货单-录入返货信息】界面
 
【起草返货单-查看返货记录】界面


 【返货信息回显】界面
1.5.3	界面描述
主界面标题：变更运单。
“变更运单”主界面包含变更基本条件录入区域、运单信息显示及编辑区域、功能按钮区域。
起草转运单/返货单操作：用户进入“变更运单”主界面后，
导入运单信息至操作界面，选择运单变更为“客户要求”，
选择变更类型为转运/返货后（见【起草转运单】初始界面、
【起草返货单】初始界面），录入变更原因、转运/返货目的站、转运/返货提货网点，
最终上传变更凭证提交转运单/返货单申请。
1.变更基本条件录入区域：
1）单号，起草转运单/返货单对应的运单号。
2）客户要求：由于客户原因发起的运单变更需求；
3）内部要求：由于内部操作失误发起的运单变更需求；
4）变更类型：客户要求的运单变更包含转运、返货、更改、作废，内部要求的变更包含更改、中止。
5）变更原因：变更运单的原因。
2.运单信息显示及编辑区域：
1）运单基础信息：包含收货部门、变更单号、上门接货。
2）发货客户信息：包含发货人手机、电话、客户名称、联系人、地址。
3）收货客户信息：包含收货人手机、电话、联系人、地址。
4）运输信息区域：当选择变更类型为“转运”或“返货”时，该区域以table页签形式展现。
ⅰ当选择变更类型为“转运”时，
该区域包含【运输信息】及【转运信息】两个页签（如有转运或返货更改记录，
还需显示【转运记录】或【返货记录】页签）。
ⅱ当选择变更类型为“返货”时，
该区域包含【运输信息】及【返货信息】两个页签（如有转运或返货更改记录，
还需显示【转运记录】或【返货记录】页签）。
运输信息：包含货物状态、提货方式、目的站、提货网点、
运输性质、配载类型、预配航班、返单类别、对外备注、对内备注。
转运信息：包含转运目的站、转运提货网点、转运运输性质、
转运配载类型、转运预配航班、转运计费类型、转运费率、转运费。
返货信息：包含返货目的站、返货提货网点、
返货运输性质、返货计费类型、返货费率、返货费。
5）货物信息：货物的基本信息，包含货物名称、包装、
件数、重量、尺寸、体积、货物类型、大车直送、
贵重物品、特殊物品。
5）增值业务信息：包含保价声明价值、代收货款、
退款类型、收款人、收款账号、包装费、送货费、装卸费、其他费用项。
6）计费付款信息：包含公布价运费、增值服务费、
优惠费用、费用合计、付款方式、到付金额、
现付金额、预付费保密。
7）详细计价信息：默认隐藏不显示，
点击向左伸展按钮后伸展显示。包含计费类型、计费重量、费率、运费、
保价声明价值、保价费率、保价费、代收货款、代收费率、
代收手续费、包装费、送货费、其他费用、优惠费用、合计。
8）变更信息：变更运单条目明细显示。
该区域主要显示变更的项目及变更前后对应的运单信息。
3.功能按钮：
导入：点击导入按钮将运单号对应的运单信息展现在变更运单界面。
提交：点击提交变更运单申请。
打印：提交运单变更后，可点击打印转运单/返货单。
1.6	操作步骤
1.6.1	起草转运单操作步骤

序号	基本步骤	相关数据	补充步骤
1	点击变更运单菜单进入“变更运单”主界面		
系统初始化界面控件值
2	输入运单号，点击“导入”按钮	运单信息	系统判断是否允许发起运单变更：
1）若允许，则系统搜索运单信息并根据数据元素的对应关系将运单信息带至变更运单界面相应控件；
2）若不允许，则系统弹出提示框给予相应提示。参见业务规则SR1。
3	点击“客户要求”单选按钮		
1.	运单项对应的编辑状态发生变化，参见业务规则SR2；
2.	上传凭证区域显示默认上传的变更凭证名称，参见业务规则SR3。
4	选择变更类型为“转运”		
【转运信息】区域字段变为可编辑状态；
5	用户在“变更原因“输入框内输入客户申请转运的原因	变更原因	
6	用户点击【转运信息】页签，分别录入转运目的站、转运提货网点、
转运运输性质		
1.	转运信息录入操作参见系统用例SUC-496：录入运输信息；
2.	“变更信息”区域显示变更项及其变更前后对应的运单信息，
参见业务规则SR4。
7	点击变更凭证所在行的“上传”按钮  	变更凭证电子件	
弹出【路径选择】模式窗口，参见业务规则SR10
8	选择凭证存放的本地路径，点击“确定”按钮		
凭证上传至变更界面
9	点击“提交”按钮	
	弹出【运单变更信息】对话框，回显转运单变更的信息，参见系统用例SUC-490：显示运单变更明细
10	点击对话框界面的“确定”按钮		
系统弹出对话框提示是否确定提交转运单变更申请。
11	点击“确定”按钮，确定提交运单变更申请		
系统校验是否满足运单变更申请的条件，参见业务规则SR1、SR7
1.	若满足则系统提示运单变更申请成功，同时
1）系统根据凭证存放路径找到凭证文件后保存到系统中；
2）“打印”按钮变为可点击。
2.	若不满足则系统给予提示。

扩展事件

序号	扩展事件	相关数据	备注
2a	运单信息导入起草转运单界面相应控件后，
若再次点击“导入”按钮还原当前运单信息		
4a	若货物已出收货部门库存，
选择“转运”变更类型后，系统提示不能起草转运单		
6a	若转运提货网点为空运或偏线，
还需录入转运配载类型、转运预配航班		
6b	用户可修改其他的运单信息		
“变更信息”区域显示变更项及其变更前后对应的运单信息，
参见业务规则SR4
8a	用户可以点击变更凭证所在行“删除”按钮删除已上传的凭证，
重新选择文件上传	变更凭证电子件	
8b	用户可以点击变更凭证所在行“查看”按钮查看已上传的凭证	
变更凭证电子件	
10a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
11a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
1.6.2	起草返货单操作步骤

序号	基本步骤	相关数据	补充步骤

1	点击变更运单菜单进入“变更运单”主界面		
系统初始化界面控件值
2	输入运单号，点击“导入”按钮	
运单信息	系统判断是否允许发起运单变更：
1）若允许，则系统搜索运单信息并根据数据元素的对应关系将运单信息带至变更运单界面相应控件；
2）若不允许，则系统弹出提示框给予相应提示。参见业务规则SR1。
3	点击“客户要求”单选按钮		
1.	运单项对应的编辑状态发生变化，参见业务规则SR2；
2.	上传凭证区域显示默认上传的变更凭证名称，参见业务规则SR3。
4	选择变更类型为“返货”		
【返货信息】区域字段变为可编辑状态；
5	用户在“变更原因“输入框内输入客户申请转运的原因	变更原因	
6	用户点击【返货信息】页签，
分别录入转运目的站、转运提货网点、转运运输性质	
	1.	返货信息录入操作参见系统用例SUC-496：录入运输信息；
2.	“变更信息”区域显示变更项及其变更前后对应的运单信息，
参见业务规则SR4。
7	点击变更凭证所在行的“上传”按钮  	
变更凭证电子件	弹出【路径选择】模式窗口
8	选择凭证存放的本地路径，点击“确定”按钮		
凭证上传至变更界面
9	点击“提交”按钮		
弹出【运单变更信息】对话框，回显转运单变更的信息，
参见系统用例SUC-490：显示运单变更明细
10	点击对话框界面的“确定”按钮		
系统弹出对话框提示是否确定提交转运单变更申请。
11	点击“确定”按钮，确定提交运单变更申请		
系统校验是否满足运单变更申请的条件，参见业务规则SR1、SR7
1.	若满足则系统提示运单变更申请成功，同时
1）系统根据凭证存放路径找到凭证文件后保存到系统中；
2）“打印”按钮变为可点击。
2.	若不满足则系统给予提示。

扩展事件

序号	扩展事件	相关数据	备注
2a	运单信息导入起草返货单界面相应控件后，
若再次点击“导入”按钮还原当前运单信息		
4a	若货物已出收货部门库存，
选择“转运”变更类型后，系统提示不能起草转运单		
6a	若返货提货网点为空运或偏线，还需录入转运配载类型、转运预配航班		
6b	用户可修改其他的运单信息		“
变更信息”区域显示变更项及其变更前后对应的运单信息，参见业务规则SR4
8a	用户可以点击变更凭证所在行“删除”按钮删除已上传的凭证，
重新选择文件上传	变更凭证电子件	
8b	用户可以点击变更凭证所在行“查看”按钮查看已上传的凭证	变更凭证电子件	
10a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
11a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面

1.7	业务规则
序号	描述
SR1	
下表为不能起草运单变更的类型及不能起草时系统提示内容

序号	不能起草运单变更的类型	提示内容

	运单状态为“已保存待补录”的运单	
	运单未补录，不能起草运单变更！
2	运单状态为“作废”、“中止”的运单	
运单已作废，不能起草运单变更！
运单已中止，不能起草运单变更！
3	运单对应的收货部门与系统当前组织不一致	该单的收货部门不是您部门，不能起草运单变更！
4	运单状态为“已签收”的运单	货物已签收，
不能起草运单变更！
5	变更单状态为“待审核”或“待受理”的运单	
该运单有运单变更单还未被审核，不能起草变更运单！
该运单有运单变更单还未被受理，不能起草变更运单！
6	运单已进行结清货款操作	
该运单已进行结清货款操作，如需更改请联系到达部门进行反结清货款操作！
7	财务锁定的运单（财务将不允许发起变更的运单进行锁定）不能发起运单变更 
该运单已被财务锁定，不能起草变更运单！
8	偏线运单以外发	偏线运单已中转外发，不能起草运单变更！


SR2	1．	运单无出库记录，不允许起草转运单、返货单；
a.	客户来源可以选择更改、作废；
b.	内部来源可以选择更改、中止
2．	运单出库记录，不允许起草作废单，涉及到目的站、
提货网点的修改必须到转运信息、返货信息面板修改；如果变更提货方式，
由“派送”该为“自提”，原始目的站不支持“自提”，提示“原始目的站不支持自提，
请选择转运或返货类型”
a.	客户来源可以选择更改、转运、返货；
c.	内部来源可以选择更改、中止
3．	若未选择变更要求（客户要求/内部要求），
运单信息显示区域的控件为不可编辑状态；若选择了变更要求，
则不可变更的运单项对应的控件为不可编辑状态，可以变更的运单项对应的控件为可编辑状态
。运单项能否进行变更主要受变更要求、
运输类型、货物当前库存部门三个维度的影响。
其中客户要求发起的转运或返货变更，
可变更及不可变更的运单项请详见下表：
     

SR3	1.	选择客户要求变更时，上传凭证名称默认显示为“身份证复印件”及“运单客户联”，
可另新增变更凭证；选择内部要求变更时，上传凭证名称默认显示为“运单原件”，可另新增变更凭证；
2.	默认显示的变更凭证所在行不可删除，
新增的变更凭证所在行可删除；
3.	已选择上传的变更凭证可点击查看，也可点击删除。
SR4	1.	“变更项”列显示为变更的运单项名称，
“变更前信息”列显示变更项在变更前对应的运单信息，
“变更后信息”列显示变更项在变更后对应的运单信息。如是转运或返货变更：
“目的站”变更项对应的变更前信息为原目的站，变更后信息为转运/返货目的站；
“提货网点”变更项对应的变更前信息为原提货网点，变更后信息为转运/返货提货网点。
2.	对于“上门接货”、“预付费保密”、“大车直送”、
“贵重物品”、“特殊物品”为复选框的变更项，变更前后对应的信息根据复选框勾选与否显示为是或否；
3.	若变更项变更前信息或变更后信息为空，
则“变更前信息”或“变更后信息”列显示为:—；
4.	以下运单项不列入变更项：计费类型、计费重量、费率、
保价费率、代收费率、装卸费、其他费用（总金额）、转运运输性质、
转运配载类型、转运预配航班、转运计费类型、转运费率、返货运输性质、返货计费类型；
5.	变更项行显示顺序为：
运单基础信息变更项→发货客户信息变更项→收货客户信息变更项→运输信息变更项→货物信息变更项→增值业务信息变更项→详细计价信息变更项→计费付款信息变更项；
6.	“变更前信息”与“变更后信息”列显示内容不能相同。
SR5	转运信息对应的相关业务规则：
1.	转运目的站：转运提货网点对应的目的站，与收货人地址、提货方式进行关联。
2.	转运提货网点：转运后的提货网点，与收货人地址、提货方式进行关联。
3.	转运运输性质：
1）	原运输类型为汽运：以原目的站作为转运始发站，
与转运目的站匹配运输性质；
2）	原运输类型为偏线或空运：
ⅰ 若货物未出原最终配载部门库存，以原最终配载部门所在城市作为转运始发站，
与转运目的站匹配运输性质；
ⅱ 若货物已出原最终配载部门库存，转运运输性质只能为偏线或空运。
4.	提货方式：起草转运单时，提货方式与原运输信息取消关联，
与转运提货网点进行关联。
5.	转运配载类型：转运运输性质为空运时，包含合大票、单独开单；
其他转运运输性质时，只含有汽运。
6.	转运预配航班：转运运输性质为空运时为可选状态，
包含早班、中班、晚班。
7.	转运计费类型：分为重量计费、体积计费，
系统根据货物重量、体积、转运费率确定转运计费类型。
8.	转运费率：
1)	原运输类型为汽运：原目的站作为转运始发站，
系统根据转运始发站、转运目的站、转运运输性质读取公布价基础资料
（上门发货公布价）来确定转运费率，若未读取到公布价，则人工录入转运费率。
2)	原运输类型为偏线或空运：
ⅰ 若货物未出原最终配载部门库存，
系统根据原最终配载部门所在城市、转运目的站、转运运输性质读取公布价基础资料（
上门发货公布价）来确定转运费率，若未读取到公布价，则人工录入转运费率；
ⅱ 若货物已出原最终配载部门库存，则人工录入转运费率。
    注：转运费率读取的公布价为运单开单时对应的产品价格版本
9.	转运费：
1）计费类型为“重量计费”时，转运费=转运费率*重量；
2）计费类型为“体积计费”时，转运费=转运费率*体积。
注：转运费无最低一票。
返货信息对应的相关业务规则：
1.	返货目的站：返货提货网点对应的目的站，与收货人地址进行关联。。
2.	返货提货网点：货物返回的提货网点，与收货人地址进行关联，
只能选择公司自有营业网点。
3.	返货运输性质：
1）	原运输类型为汽运：
ⅰ 货物未出第一中转外场库存：第一中转外场所在城市作为返货始发站，
与返货目的站匹配返货运输性质；
ⅱ 货物已出第一中转外场库存：以原目的站作为返货始发站，
与返货目的站匹配运输性质；
2）	原运输类型为偏线或空运：
ⅰ 货物未出第一中转外场库存：第一中转外场所在城市作为返货始发站，
与返货目的站匹配返货运输性质；
ⅱ 货物已出第一中转外场库存，未出原最终配载部门库存：
以原最终配载部门所在城市作为返货始发站，与返货目的站匹配运输性质。
ⅲ 货物已出原最终配载部门库存：返货运输性质只能为偏线或空运。
4.	返货计费类型：分为重量计费、体积计费，系统根据货物重量、
体积、返货费率确定返货计费类型。
5.	返货费率：
1）	原运输类型为汽运：
ⅰ 货物未出第一中转外场库存：第一中转外场所在城市作为返货始发站，
系统根据返货始发站、返货目的站、返货运输性质读取公布价基础资料（上门发货公布价）来确定返货费率，原费率变为原运输性质下的收货部门至返货始发站的费率；
ⅱ 货物已出第一中转外场库存：原目的站作为返货始发站，
系统根据返货始发站、返货目的站、返货运输性质读取公布价基础资料（上门发货公布价）来确定返货费率，原费率不变。
2）	原运输类型为偏线或空运：
ⅰ 货物未出第一中转外场库存：第一中转外场所在城市作为返货始发站，
系统根据返货始发站、返货目的站、返货运输性质读取公布价基础资料（上门发货公布价）
来确定返货费率，原费率变为原运输性质下的收货部门至返货始发站的费率；
ⅱ 货物已出第一中转外场库存，未出原最终配载部门库存：
原最终配载部门所在城市作为返货始发站，系统根据返货始发站、返货目的站、
返货运输性质读取公布价基础资料（上门发货公布价）来确定返货费率，
原费率变为原运输性质下的收货部门至返货始发站的费率；
ⅲ 货物已出原最终配载部门库存：人工录入返货费率，原费率不变。
注：返货费率读取的公布价为运单开单时对应的产品价格版本。
6.	返货费：
1）	计费类型为“重量计费”时，返货费=返货费率*重量；
2）	计费类型为“体积计费”时，返货费=返货费率*体积。
注：返货费无最低一票。
SR6	1.	运单信息的修改录入操作参照运单生成相关系统用例的操作；
2.	修改运单信息时，系统校验的业务规则参照运单生成相关系统用例的业务规则。
SR7	1.	起草转运单时，关键增值服务信息的变更规则：

运单项	起草运单变更时对应的版本
费率	产品在运单信息生成时对应的公布价版本
保价费率	运单信息生成时的保价费率版本
代收费率	运单信息生成时的代收费率版本
公布价运费	运单信息生成时的公布价运费版本
保价费	运单信息生成时对应的收费标准
代收手续费	运单信息生成时对应的收费标准
送货费	运单信息生成时对应的收费标准
装卸费	运单信息生成时对应的收费标准
其他费用项	运单信息生成时的收费标准
优惠费用	运单开单信息生成时对应的优惠标准

2.	起草返货单时，关键增值服务信息的变更规则：
   
运单项	起草运单变更时对应的版本
费率	若货物未出第一中转库存：原运输性质下的收货部门至返货始发站的费率
（返货始发站为第一中转外场对应的城市），费率为运单开单时对应的版本
	若货物已出第一中转库存：产品在运单信息生成时对应的公布价版本
保价费率	运单信息生成时的保价费率版本
代收费率	运单信息生成时的代收费率版本
公布价运费	运单信息生成时的公布价运费版本
保价费	运单信息生成时对应的收费标准
代收手续费	运单信息生成时对应的收费标准
送货费	运单信息生成时对应的收费标准
装卸费	运单信息生成时对应的收费标准
其他费用项	运单信息生成时的收费标准
优惠费用	运单开单信息生成时对应的优惠标准

综上：起草转运单或返货单时，产品及价格优惠版本统一执行运单开单时对应的版本。
3.	含有代收货款的运单，如取消代收货款（代收货款金额更改为0）：
若货物未出收部门库存，代收手续费变为0；若货物已出收货部门库存，代收手续费不变。
SR8	提交转运单或返货单时必须已上传变更凭证，否则不能提交申请
SR89	成功提交转运单或返货单申请后，方可打印变更单
SR109	1.	弹出路径选择框，默认指定路径在桌面，可选择保存路径；
2.	可上传的凭证扫描件，应该为图片，格式允许选择常见的JPG,GIF,PNG,BPM；
上传图片大小有所限制（默认250K，允许系统后台配置），如果超出所设范围，
系统给出提示“您上传的文件已超过最大允许大小250K，请调整后重新上传。”。
SR1011	对于发货客户的变更：
1.	同一发货客户，若客户资质发生变化；
a)	开单时为合同客户，开单后（起草更改单之前）客户属性变为非合同客户： 
FOSS在开单时记录客户资质，起草更改单时仍可选择免费送货；
b)	开单时为非合同客户，开单后（起草更改单之前）客户属性升级为合同客户：
起草更改单时仍可选择免费送货；
2.	由某一发货客户更改为另一发货客户
a)	合同客户更改为非合同客户：原开单提货方式为免费送货，与开单时保持一致，
即直接清空提货方式，重新选择提货方式;
3.	非合同客户更改为合同客户：提货方式中增加"免费送货"选项。
SR1112	1.	货物未到达第一打木架外场（开单录入代打木架信息时系统自动生成的代打木架信息），允许修改代打包装信息
2.	货物已到达第一打木架外场，则不可发起代打包装信息更改
3.	若有代打包装，则在录入代打包装信息后，系统自动计划出代打包装费用，显示至包装费中，营业员或开单员可以任意修改包装费。
4.	在更改单界面中，加入代打包装货物件数的选择，即流水号选择。在发起代打包装更改单时，打开的代打包装信息中默认勾选开单录入的代装包装总件数的流水号，即：开单录入代打木架4件，代打木箱3件，则在更改单代打包装信息中，自勾选流水号1-7；
允许点击“代打木架”按钮直接修改打包装信息
SR12	1、货物离开出发部门库存后，客户要求将目的站更改为异地目的站，须收取中转费。例如，客户要求将原发往重庆北碚区营业部的货物更改至四川泸州蓝田营业部，虽然是同一外场配载，但分属不同地级市，须收取中转费。 
2、货物离开出发部门库存后，客户要求将目的站更改为同城目的站： 
 2.1、货物离开出发部门库存后至到达部门上一级外场交接出库前，不收取中转费。例如客户要求将原发往上海浦东上南路营业部的货物更改至上海派送部，虽然是不同外场配载，但分属同意地级市，不收取中转费 
 2.2、货物在到达部门（驻地派送部为到达部门）库存中，更改为同城部门，须收取中转费 
 2.3、货物离开到达部门上一级外场库存或有交接记录且交接目的站为原到达部门，须收取中转费 

注：同城定义：以原到达部门所在地级市为判断依据。更改前后部门在同一地级市行政区域范围内为同城，更改前后部门不在同一地级市行政区域范围内为异地。 
SR13	更改单界面添加查询网点、公布价、查询客户、打印标签功能按钮，可参考开单界面
SR14	香港开点业务：
1. 运单新增、运单查询中，收/发货人手机只能填写8位或11位数字，11位数字必须以1开头
2. 收货部门的省市为香港时，燃油附加费可修改
1.8	数据元素
1.8.1	变更基本录入信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
客户要求	客户提出的运单变更申请	单选框		10	是	默认为空
内部要求	由于内部开单失误而提出的运单变更申请	单选框		10	是	默认为空
变更类型	变更运单的类型，客户要求下包含：转运、返货、作废、更改，内部要求下包含更改、中止。	下拉框		10	是	默认为空“更改”
变更原因	变更运单的原因	文本		80	是	默认为空
1.8.2	运单基础信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
收货部门	收取货物的部门				是	
变更单号	点击可变更运单单号	复选框			否	可勾选时，则勾选后显示变更单号文本框（可编辑）
上门接货	前往客户处接收货物	复选框			否	
1.8.3	发货客户信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
手机	发货联系人的手机号码	文本			否	导入运单信息
电话	发货联系人的电话号码	文本			否	导入运单信息
客户名称	发货企业客户的公司名，个人客户的姓名	公共选择框			是	导入运单信息
联系人	发货客户的个人代表	文本			是	导入运单信息
地址	发货客户的联系地址	文本			否	导入运单信息
1.8.4	收货客户信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
手机	收货联系人的手机号码	文本			否	
电话	收货联系人的电话号码	文本			否	
联系人	收货客户的个人代表	文本			是	
地址	收货客户的联系地址	文本			否	提货方式为送货时必填
1.8.5	运输信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
货物状态	货物当前状态，包含：收货部门库存中、收货部门已出库（已出收货部门库存，中转部门未入库）、中转部门库存中、中转部门已出库（已出中转部门库存，即货物在途运输）、到达部门库存中、到达部门送货中。	文本			是	系统自动带出数据
注：分批配载的货物，以距离最终配载部门最近的部门作为参照。
提货方式	货物提取方式	下拉框			是	
目的站	货物的目的站	文本			是	显示更改前的目的站
提货网点	货物的提货网点	文本			是	显示更改前的提货网点
运输性质	货物的运输性质	文本			是	
配载类型	货物的配载类型	文本			否	由运输性质决定
预配航班	空运班次，含早班、中班、晚班	文本			否	
返单类别	签收单返回类型，含签收单原件返回、传真返回、扫描上传、无需返回	下拉框			是	
对外备注	传达给客户的备注信息	下拉框				可选择多项
对内备注	公司内部备注信息	文本			是	
1.8.6	转运信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
转运目的站	转运提货网点对应的目的站	文本			是	
转运提货网点	转运的提货网点	公共选择框			是	
转运运输性质	转运运输性质	下拉框			是	
转运配载类型	转运的配载类型	下拉框			否	
转运预配航班	转运为空运的预配航班	下拉框			否	
转运计费类型	转运货物的计费类型	文本			是	
转运费率	转运货物计费费率	文本			是	
转运费	转运货物费用	文本			是	
1.8.7	转运记录
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
转运目的站	转运提货网点对应的目的站					
转运提货网点	转运的提货网点					
转运运输性质	转运运输性质					
转运配载类型	转运的配载类型					若无则显示为空
转运预配航班	转运为空运的预配航班					若无则显示为空
转运计费类型	转运货物的计费类型					
转运费率	转运货物计费费率					
转运费	转运货物费用					

1.8.8	返货信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
返货目的站	返货提货网点对应的目的站	文本			是	
返货提货网点	货物返回的提货网点	公共选择框			是	
返货运输性质	货物返回运输性质 	下拉框			是	
返货计费类型	货物返回的计费类型	文本			是	
返货费率	货物返回的计费费率	文本			是	
返货费	返货费用	文本			是	
1.8.9	货物信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
名称	货物的名称	文本			是	
包装	货物的外包装	文本			是	
件数	货物的件数	文本			是	
重量	货物的重量	文本			是	
尺寸	货物的尺寸	文本			否	
体积	货物的体积	文本			是	
货物类型	货物的A/B类型，区分大小货	单选按钮			否	
大车直送		复选框			否	
贵重物品		复选框			否	
特殊物品		复选框			否	
1.8.10	增值业务信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
保价声明价值	货物保价金额	文本		8	是	
代收货款	代收货款金额	文本		8	是	
退款类型	代收货款退款方式	下拉框			否	
收款人	代收货款收款人	文本			否	
收款账号	收款人银行账号	文本			否	
包装费	货物包装费用	文本			是	若无则输入0
送货费	货物送货费用	文本			是	若无则输入0
装卸费	装卸费用	文本			是	若无则输入0
1.8.11	计费付款信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
公布价运费	根据公布价计算的运费				是	公布价运费=运费+转运费或返货费
增值服务费	增值服务费用总计				是	增值服务费=运单增值服务费+转运费或返货费
优惠费用	优惠打折的总费用				是	
费用合计	向客户收取的费用总计				是	
付款方式	承运费用付款的方式	下拉框			是	
到付金额	收货客户需要支付的费用	文本			是	若无则输入0
现付金额	发货客户需要支付的费用	文本			是	若无则输入0
预付费保密	对预付费用进行保密	复选框			否	
1.8.12	变更信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
变更项	运单信息发生变更的项目				是	系统根据更改项自动生成显示
变更前信息	变更项变更前对应的运单信息				是	系统自动生成
变更后信息	变更项变更后对应的运单信息				是	系统自动生成
1.8.13	详细计价信息（转运）
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
计费类型	变更前运费与转运费进行累加后对应的计费类型				是	
计费重量	变更前运费与转运费进行累加后对应计费重量				是	
费率	变更前运费与转运费进行累加后对应的费率				是	
保价费率					是	
代收费率					是	
运费	变更前运费+转运费				是	
保价费					是	
代收手续费					是	
包装费					是	
送货费					是	
其他费用					是	
优惠费用					是	
费用合计						
1.8.14	详细计价信息（返货）
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
计费类型	变更前运费与返货费进行累加后对应的计费类型				是	
计费重量	变更前运费与返货费进行累加后对应计费重量				是	
费率	变更前运费与返货费进行累加后对应的费率				是	
保价费率					是	
代收费率					是	
运费	变更前运费+返货费				是	
保价费					是	
代收手续费					是	
包装费					是	
送货费					是	
其他费用					是	
优惠费用					是	
费用合计						
1.9	非功能性需求
使用量	每天处理的运单约为1000000单，变更运单的数量占比约为20% 
2012年全网估计用户数	营业员数量约10000名
响应要求（如果与全系统要求 不一致的话）	系统一般需求
使用时间段	营业部上班时间
高峰使用时间段	9:00-16:00
1.10	接口描述：
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
客户信息接口	CRM系统	FOSS调用CRM客户信息接口，
查询录入客户信息
电子地图接口	GIS系统	FOSS调用电子地图接口查询录入目的站、提货网点信息
库存接口	中转子系统	FOSS调用中转库存接口判断货物是否已签收出库
财务类变更接口	结算系统	FOSS调用该接口判断是否可发起财务类变更


 */
/**
 * 1.5.3	界面描述
主界面标题：变更运单。
“变更运单”主界面包含变更基本条件录入区域、
运单信息显示及编辑区域、功能按钮区域。
起草变更单（内部）操作：用户进入“变更运单”主界面后
（见起草变更单（内部）界面-1），
导入运单信息至操作界面，
选择运单变更为“内部要求”，
录入变更原因并修改运单信息，
最终上传变更凭证提交运单变更申请。
1.变更基本条件录入区域：
1）单号：起草运单变更对应的运单号。
2）客户要求：
由于客户原因发起的运单变更需求；
3）内部要求：
由于内部操作失误发起的运单变更需求；
4）变更类型：
客户要求的运单变更包含转运、返货、更改、作废，
内部要求的变更包含更改、中止。
5）变更原因：
起草变更运单的原因。
2.运单信息显示及编辑区域：
1）运单基础信息：
包含收货部门、变更单号、上门接货。
2）发货客户信息：
包含发货人手机、电话、客户名称、联系人、地址。
3）收货客户信息：
包含收货人手机、电话、联系人、地址。
4）运输信息：
包含货物状态、提货方式、目的站、提货网点、
运输性质、配载类型、预配航班、
返单类别、对外备注、对内备注。
5）货物信息：货物的基本信息，
包含货物名称、包装、件数、重量、尺寸、
体积、货物类型、大车直送、
贵重物品、特殊物品。
5）增值业务信息：包含保价声明价值、代收货款、
退款类型、收款人、收款账号、包装费、
送货费、装卸费、其他费用项。
6）计费付款信息：包含公布价运费、
增值服务费、优惠费用、费用合计、
付款方式、到付金额、现付金额、
预付费保密。
7）详细计价信息：默认隐藏不显示，
点击向左伸展按钮后伸展显示（见起草变更单
（内部）界面-2）。包含计费类型、计费重量、
费率、运费、保价声明价值、保价费率、保价费、
代收货款、代收费率、代收手续费、包装费、
送货费、其他费用、优惠费用、费用合计。
8）变更信息：变更运单条目明细显示。
该区域主要显示变更的项目及变更前后对应的运单信息。
9）上传凭证区域：
上传变更凭证电子件。
3.功能按钮：
导入：点击导入按钮将运单号对应的运单信息展现在变更运单界面。
提交：点击提交变更运单申请。
打印：提交运单变更后，可点击打印变更单。
1.6	操作步骤
序号	基本步骤	相关数据	补充步骤
1	点击变更运单菜单进入“变更运单”主界面		系统初始化界面控件值
2	输入运单号，点击“导入”按钮	运单信息	系统判断是否允许发起运单变更：
1）若允许，则系统搜索运单信息并根据数据元素的对应关系将运单信息带至变更运单界面相应控件，
参见业务规则SR1；
2）若不允许，则系统弹出提示框给予相应提示。
参见业务规则SR2
3	点击“内部要求”单选按钮 		
1.	运单项对应的编辑状态发生变化，
参见业务规则SR3；
2.	上传凭证区域显示默认上传的变更凭证名称，
参见业务规则SR4。
4	用户在“变更原因“输入框内输入内部申请变更运单的原因	变更运单原因	
5	用户在运单信息显示区域修改相应的运单信息		
“变更信息”区域显示变更项及其变更前后对应的运单信息，参见业务规则SR5
6	点击变更凭证所在行的“上传”按钮 	变更凭证电子件	
弹出【路径选择】模式窗口，参见业务规则SR10
7	选择凭证存放的本地路径，点击“确定”按钮		
凭证上传至变更界面
8	点击“提交”按钮		弹出【运单变更信息】对话框，
回显运单变更的信息，参见系统用例SUC-490：显示运单变更明细
9	点击对话框界面的“确定”按钮		
系统弹出对话框提示是否确定提交运单变更申请。
10	点击“确定”按钮，确定提交运单变更申请		
系统校验是否满足运单变更申请的条件，参见业务规则SR2、SR8
1.	若满足则系统提示运单变更申请成功，同时
1）系统根据凭证存放路径找到凭证文件后保存到系统中；
2）“打印”按钮变为可点击。
2.	若不满足则系统给予提示。

扩展事件

序号	扩展事件	相关数据	备注
2a	输入运单号，点击“导入”按钮后，
若未找到对应的运单信息，系统给以提示		
2b	运单信息导入变更运单界面相应控件后，
若再次点击“导入”按钮还原当前运单信息		
7a	用户可以点击变更凭证所在行“删除”按钮删除已上传的凭证，
重新选择文件上传	变更凭证电子件	
7b	用户可以点击变更凭证所在行“查看”按钮查看已上传的凭证	
变更凭证电子件	
8a	若未对运单信息做任何修改，
提交时系统给予提示不能提交		
9a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
10a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
1.7	业务规则
序号	描述
SR1	1.  由于整车运单信息与非整车运单信息不同，
导入整车运单至变更运单界面后，
整车运单信息中不存在的字段控件值为空，不可编辑。
2.  如导入的运单为整车运单，
则运输性质控件显示为“整车”。
SR2	
下表为不能起草运单变更的类型及不能起草时系统提示内容

序号	不能起草运单变更的类型	提示内容
1	运单状态为“已保存待补录”的运单	
运单未补录，不能起草运单变更！
2	运单状态为“作废”、“中止”的运单	
运单已作废，不能起草运单变更！
运单已中止，不能起草运单变更！
3	运单对应的收货部门与系统当前组织不一致	该单的收货部门不是您部门，
不能起草运单变更！
4	运单状态为“已签收”的运单	货物已签收，
不能起草运单变更！
5	变更单状态为“待审核”或“待受理”的运单	
该运单有运单变更单还未被审核，不能起草变更运单！
该运单有运单变更单还未被受理，不能起草变更运单！
6	运单已进行结清货款操作	该运单已进行结清货款操作，
如需更改请联系到达部门进行反结清货款操作！
7	财务锁定的运单（财务将不允许发起变更的运单进行锁定）
不能发起运单变更 
该运单已被财务锁定，
不能起草变更运单！
\


 【返货信息回显】界面
1.5.3	界面描述
主界面标题：变更运单。
“变更运单”主界面包含变更基本条件录入区域、运单信息显示及编辑区域、功能按钮区域。
起草转运单/返货单操作：用户进入“变更运单”主界面后，
导入运单信息至操作界面，选择运单变更为“客户要求”，
选择变更类型为转运/返货后（见【起草转运单】初始界面、
【起草返货单】初始界面），录入变更原因、转运/返货目的站、转运/返货提货网点，
最终上传变更凭证提交转运单/返货单申请。
1.变更基本条件录入区域：
1）单号，起草转运单/返货单对应的运单号。
2）客户要求：由于客户原因发起的运单变更需求；
3）内部要求：由于内部操作失误发起的运单变更需求；
4）变更类型：客户要求的运单变更包含转运、返货、更改、作废，内部要求的变更包含更改、中止。
5）变更原因：变更运单的原因。
2.运单信息显示及编辑区域：
1）运单基础信息：包含收货部门、变更单号、上门接货。
2）发货客户信息：包含发货人手机、电话、客户名称、联系人、地址。
3）收货客户信息：包含收货人手机、电话、联系人、地址。
4）运输信息区域：当选择变更类型为“转运”或“返货”时，该区域以table页签形式展现。
ⅰ当选择变更类型为“转运”时，
该区域包含【运输信息】及【转运信息】两个页签（如有转运或返货更改记录，
还需显示【转运记录】或【返货记录】页签）。
ⅱ当选择变更类型为“返货”时，
该区域包含【运输信息】及【返货信息】两个页签（如有转运或返货更改记录，
还需显示【转运记录】或【返货记录】页签）。
运输信息：包含货物状态、提货方式、目的站、提货网点、
运输性质、配载类型、预配航班、返单类别、对外备注、对内备注。
转运信息：包含转运目的站、转运提货网点、转运运输性质、
转运配载类型、转运预配航班、转运计费类型、转运费率、转运费。
返货信息：包含返货目的站、返货提货网点、
返货运输性质、返货计费类型、返货费率、返货费。
5）货物信息：货物的基本信息，包含货物名称、包装、
件数、重量、尺寸、体积、货物类型、大车直送、
贵重物品、特殊物品。
5）增值业务信息：包含保价声明价值、代收货款、
退款类型、收款人、收款账号、包装费、送货费、装卸费、其他费用项。
6）计费付款信息：包含公布价运费、增值服务费、
优惠费用、费用合计、付款方式、到付金额、
现付金额、预付费保密。
7）详细计价信息：默认隐藏不显示，
点击向左伸展按钮后伸展显示。包含计费类型、计费重量、费率、运费、
保价声明价值、保价费率、保价费、代收货款、代收费率、
代收手续费、包装费、送货费、其他费用、优惠费用、合计。
8）变更信息：变更运单条目明细显示。
该区域主要显示变更的项目及变更前后对应的运单信息。
3.功能按钮：
导入：点击导入按钮将运单号对应的运单信息展现在变更运单界面。
提交：点击提交变更运单申请。
打印：提交运单变更后，可点击打印转运单/返货单。
1.6	操作步骤
1.6.1	起草转运单操作步骤

序号	基本步骤	相关数据	补充步骤
1	点击变更运单菜单进入“变更运单”主界面		
系统初始化界面控件值
2	输入运单号，点击“导入”按钮	运单信息	系统判断是否允许发起运单变更：
1）若允许，则系统搜索运单信息并根据数据元素的对应关系将运单信息带至变更运单界面相应控件；
2）若不允许，则系统弹出提示框给予相应提示。参见业务规则SR1。
3	点击“客户要求”单选按钮		
1.	运单项对应的编辑状态发生变化，参见业务规则SR2；
2.	上传凭证区域显示默认上传的变更凭证名称，参见业务规则SR3。
4	选择变更类型为“转运”		
【转运信息】区域字段变为可编辑状态；
5	用户在“变更原因“输入框内输入客户申请转运的原因	变更原因	
6	用户点击【转运信息】页签，分别录入转运目的站、转运提货网点、
转运运输性质		
1.	转运信息录入操作参见系统用例SUC-496：录入运输信息；
2.	“变更信息”区域显示变更项及其变更前后对应的运单信息，
参见业务规则SR4。
7	点击变更凭证所在行的“上传”按钮  	变更凭证电子件	
弹出【路径选择】模式窗口，参见业务规则SR10
8	选择凭证存放的本地路径，点击“确定”按钮		
凭证上传至变更界面
9	点击“提交”按钮	
	弹出【运单变更信息】对话框，回显转运单变更的信息，参见系统用例SUC-490：显示运单变更明细
10	点击对话框界面的“确定”按钮		
系统弹出对话框提示是否确定提交转运单变更申请。
11	点击“确定”按钮，确定提交运单变更申请		
系统校验是否满足运单变更申请的条件，参见业务规则SR1、SR7
1.	若满足则系统提示运单变更申请成功，同时
1）系统根据凭证存放路径找到凭证文件后保存到系统中；
2）“打印”按钮变为可点击。
2.	若不满足则系统给予提示。

扩展事件

序号	扩展事件	相关数据	备注
2a	运单信息导入起草转运单界面相应控件后，
若再次点击“导入”按钮还原当前运单信息		
4a	若货物已出收货部门库存，
选择“转运”变更类型后，系统提示不能起草转运单		
6a	若转运提货网点为空运或偏线，
还需录入转运配载类型、转运预配航班		
6b	用户可修改其他的运单信息		
“变更信息”区域显示变更项及其变更前后对应的运单信息，
参见业务规则SR4
8a	用户可以点击变更凭证所在行“删除”按钮删除已上传的凭证，
重新选择文件上传	变更凭证电子件	
8b	用户可以点击变更凭证所在行“查看”按钮查看已上传的凭证	
变更凭证电子件	
10a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
11a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
1.6.2	起草返货单操作步骤

序号	基本步骤	相关数据	补充步骤

1	点击变更运单菜单进入“变更运单”主界面		
系统初始化界面控件值
2	输入运单号，点击“导入”按钮	
运单信息	系统判断是否允许发起运单变更：
1）若允许，则系统搜索运单信息并根据数据元素的对应关系将运单信息带至变更运单界面相应控件；
2）若不允许，则系统弹出提示框给予相应提示。参见业务规则SR1。
3	点击“客户要求”单选按钮		
1.	运单项对应的编辑状态发生变化，参见业务规则SR2；
2.	上传凭证区域显示默认上传的变更凭证名称，参见业务规则SR3。
4	选择变更类型为“返货”		
【返货信息】区域字段变为可编辑状态；
5	用户在“变更原因“输入框内输入客户申请转运的原因	变更原因	
6	用户点击【返货信息】页签，
分别录入转运目的站、转运提货网点、转运运输性质	
	1.	返货信息录入操作参见系统用例SUC-496：录入运输信息；
2.	“变更信息”区域显示变更项及其变更前后对应的运单信息，
参见业务规则SR4。
7	点击变更凭证所在行的“上传”按钮  	
变更凭证电子件	弹出【路径选择】模式窗口
8	选择凭证存放的本地路径，点击“确定”按钮		
凭证上传至变更界面
9	点击“提交”按钮		
弹出【运单变更信息】对话框，回显转运单变更的信息，
参见系统用例SUC-490：显示运单变更明细
10	点击对话框界面的“确定”按钮		
系统弹出对话框提示是否确定提交转运单变更申请。
11	点击“确定”按钮，确定提交运单变更申请		
系统校验是否满足运单变更申请的条件，参见业务规则SR1、SR7
1.	若满足则系统提示运单变更申请成功，同时
1）系统根据凭证存放路径找到凭证文件后保存到系统中；
2）“打印”按钮变为可点击。
2.	若不满足则系统给予提示。

扩展事件

序号	扩展事件	相关数据	备注
2a	运单信息导入起草返货单界面相应控件后，
若再次点击“导入”按钮还原当前运单信息		
4a	若货物已出收货部门库存，
选择“转运”变更类型后，系统提示不能起草转运单		
6a	若返货提货网点为空运或偏线，还需录入转运配载类型、转运预配航班		
6b	用户可修改其他的运单信息		“
变更信息”区域显示变更项及其变更前后对应的运单信息，参见业务规则SR4
8a	用户可以点击变更凭证所在行“删除”按钮删除已上传的凭证，
重新选择文件上传	变更凭证电子件	
8b	用户可以点击变更凭证所在行“查看”按钮查看已上传的凭证	变更凭证电子件	
10a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
11a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面

1.7	业务规则
序号	描述
SR1	
下表为不能起草运单变更的类型及不能起草时系统提示内容

序号	不能起草运单变更的类型	提示内容

	运单状态为“已保存待补录”的运单	
	运单未补录，不能起草运单变更！
2	运单状态为“作废”、“中止”的运单	
运单已作废，不能起草运单变更！
运单已中止，不能起草运单变更！
3	运单对应的收货部门与系统当前组织不一致	该单的收货部门不是您部门，不能起草运单变更！
4	运单状态为“已签收”的运单	货物已签收，
不能起草运单变更！
5	变更单状态为“待审核”或“待受理”的运单	
该运单有运单变更单还未被审核，不能起草变更运单！
该运单有运单变更单还未被受理，不能起草变更运单！
6	运单已进行结清货款操作	
该运单已进行结清货款操作，如需更改请联系到达部门进行反结清货款操作！
7	财务锁定的运单（财务将不允许发起变更的运单进行锁定）不能发起运单变更 
该运单已被财务锁定，不能起草变更运单！
8	偏线运单以外发	偏线运单已中转外发，不能起草运单变更！


SR2	1．	运单无出库记录，不允许起草转运单、返货单；
a.	客户来源可以选择更改、作废；
b.	内部来源可以选择更改、中止
2．	运单出库记录，不允许起草作废单，涉及到目的站、
提货网点的修改必须到转运信息、返货信息面板修改；如果变更提货方式，
由“派送”该为“自提”，原始目的站不支持“自提”，提示“原始目的站不支持自提，
请选择转运或返货类型”
a.	客户来源可以选择更改、转运、返货；
c.	内部来源可以选择更改、中止
3．	若未选择变更要求（客户要求/内部要求），
运单信息显示区域的控件为不可编辑状态；若选择了变更要求，
则不可变更的运单项对应的控件为不可编辑状态，可以变更的运单项对应的控件为可编辑状态
。运单项能否进行变更主要受变更要求、
运输类型、货物当前库存部门三个维度的影响。
其中客户要求发起的转运或返货变更，
可变更及不可变更的运单项请详见下表：
     

SR3	1.	选择客户要求变更时，上传凭证名称默认显示为“身份证复印件”及“运单客户联”，
可另新增变更凭证；选择内部要求变更时，上传凭证名称默认显示为“运单原件”，可另新增变更凭证；
2.	默认显示的变更凭证所在行不可删除，
新增的变更凭证所在行可删除；
3.	已选择上传的变更凭证可点击查看，也可点击删除。
SR4	1.	“变更项”列显示为变更的运单项名称，
“变更前信息”列显示变更项在变更前对应的运单信息，
“变更后信息”列显示变更项在变更后对应的运单信息。如是转运或返货变更：
“目的站”变更项对应的变更前信息为原目的站，变更后信息为转运/返货目的站；
“提货网点”变更项对应的变更前信息为原提货网点，变更后信息为转运/返货提货网点。
2.	对于“上门接货”、“预付费保密”、“大车直送”、
“贵重物品”、“特殊物品”为复选框的变更项，变更前后对应的信息根据复选框勾选与否显示为是或否；
3.	若变更项变更前信息或变更后信息为空，
则“变更前信息”或“变更后信息”列显示为:—；
4.	以下运单项不列入变更项：计费类型、计费重量、费率、
保价费率、代收费率、装卸费、其他费用（总金额）、转运运输性质、
转运配载类型、转运预配航班、转运计费类型、转运费率、返货运输性质、返货计费类型；
5.	变更项行显示顺序为：
运单基础信息变更项→发货客户信息变更项→收货客户信息变更项→运输信息变更项→货物信息变更项→增值业务信息变更项→详细计价信息变更项→计费付款信息变更项；
6.	“变更前信息”与“变更后信息”列显示内容不能相同。
SR5	转运信息对应的相关业务规则：
1.	转运目的站：转运提货网点对应的目的站，与收货人地址、提货方式进行关联。
2.	转运提货网点：转运后的提货网点，与收货人地址、提货方式进行关联。
3.	转运运输性质：
1）	原运输类型为汽运：以原目的站作为转运始发站，
与转运目的站匹配运输性质；
2）	原运输类型为偏线或空运：
ⅰ 若货物未出原最终配载部门库存，以原最终配载部门所在城市作为转运始发站，
与转运目的站匹配运输性质；
ⅱ 若货物已出原最终配载部门库存，转运运输性质只能为偏线或空运。
4.	提货方式：起草转运单时，提货方式与原运输信息取消关联，
与转运提货网点进行关联。
5.	转运配载类型：转运运输性质为空运时，包含合大票、单独开单；
其他转运运输性质时，只含有汽运。
6.	转运预配航班：转运运输性质为空运时为可选状态，
包含早班、中班、晚班。
7.	转运计费类型：分为重量计费、体积计费，
系统根据货物重量、体积、转运费率确定转运计费类型。
8.	转运费率：
1)	原运输类型为汽运：原目的站作为转运始发站，
系统根据转运始发站、转运目的站、转运运输性质读取公布价基础资料
（上门发货公布价）来确定转运费率，若未读取到公布价，则人工录入转运费率。
2)	原运输类型为偏线或空运：
ⅰ 若货物未出原最终配载部门库存，
系统根据原最终配载部门所在城市、转运目的站、转运运输性质读取公布价基础资料（
上门发货公布价）来确定转运费率，若未读取到公布价，则人工录入转运费率；
ⅱ 若货物已出原最终配载部门库存，则人工录入转运费率。
    注：转运费率读取的公布价为运单开单时对应的产品价格版本
9.	转运费：
1）计费类型为“重量计费”时，转运费=转运费率*重量；
2）计费类型为“体积计费”时，转运费=转运费率*体积。
注：转运费无最低一票。
返货信息对应的相关业务规则：
1.	返货目的站：返货提货网点对应的目的站，与收货人地址进行关联。。
2.	返货提货网点：货物返回的提货网点，与收货人地址进行关联，
只能选择公司自有营业网点。
3.	返货运输性质：
1）	原运输类型为汽运：
ⅰ 货物未出第一中转外场库存：第一中转外场所在城市作为返货始发站，
与返货目的站匹配返货运输性质；
ⅱ 货物已出第一中转外场库存：以原目的站作为返货始发站，
与返货目的站匹配运输性质；
2）	原运输类型为偏线或空运：
ⅰ 货物未出第一中转外场库存：第一中转外场所在城市作为返货始发站，
与返货目的站匹配返货运输性质；
ⅱ 货物已出第一中转外场库存，未出原最终配载部门库存：
以原最终配载部门所在城市作为返货始发站，与返货目的站匹配运输性质。
ⅲ 货物已出原最终配载部门库存：返货运输性质只能为偏线或空运。
4.	返货计费类型：分为重量计费、体积计费，系统根据货物重量、
体积、返货费率确定返货计费类型。
5.	返货费率：
1）	原运输类型为汽运：
ⅰ 货物未出第一中转外场库存：第一中转外场所在城市作为返货始发站，
系统根据返货始发站、返货目的站、返货运输性质读取公布价基础资料（上门发货公布价）来确定返货费率，原费率变为原运输性质下的收货部门至返货始发站的费率；
ⅱ 货物已出第一中转外场库存：原目的站作为返货始发站，
系统根据返货始发站、返货目的站、返货运输性质读取公布价基础资料（上门发货公布价）来确定返货费率，原费率不变。
2）	原运输类型为偏线或空运：
ⅰ 货物未出第一中转外场库存：第一中转外场所在城市作为返货始发站，
系统根据返货始发站、返货目的站、返货运输性质读取公布价基础资料（上门发货公布价）
来确定返货费率，原费率变为原运输性质下的收货部门至返货始发站的费率；
ⅱ 货物已出第一中转外场库存，未出原最终配载部门库存：
原最终配载部门所在城市作为返货始发站，系统根据返货始发站、返货目的站、
返货运输性质读取公布价基础资料（上门发货公布价）来确定返货费率，
原费率变为原运输性质下的收货部门至返货始发站的费率；
ⅲ 货物已出原最终配载部门库存：人工录入返货费率，原费率不变。
注：返货费率读取的公布价为运单开单时对应的产品价格版本。
6.	返货费：
1）	计费类型为“重量计费”时，返货费=返货费率*重量；
2）	计费类型为“体积计费”时，返货费=返货费率*体积。
注：返货费无最低一票。
SR6	1.	运单信息的修改录入操作参照运单生成相关系统用例的操作；
2.	修改运单信息时，系统校验的业务规则参照运单生成相关系统用例的业务规则。
SR7	1.	起草转运单时，关键增值服务信息的变更规则：

运单项	起草运单变更时对应的版本
费率	产品在运单信息生成时对应的公布价版本
保价费率	运单信息生成时的保价费率版本
代收费率	运单信息生成时的代收费率版本
公布价运费	运单信息生成时的公布价运费版本
保价费	运单信息生成时对应的收费标准
代收手续费	运单信息生成时对应的收费标准
送货费	运单信息生成时对应的收费标准
装卸费	运单信息生成时对应的收费标准
其他费用项	运单信息生成时的收费标准
优惠费用	运单开单信息生成时对应的优惠标准

2.	起草返货单时，关键增值服务信息的变更规则：
   
运单项	起草运单变更时对应的版本
费率	若货物未出第一中转库存：原运输性质下的收货部门至返货始发站的费率
（返货始发站为第一中转外场对应的城市），费率为运单开单时对应的版本
	若货物已出第一中转库存：产品在运单信息生成时对应的公布价版本
保价费率	运单信息生成时的保价费率版本
代收费率	运单信息生成时的代收费率版本
公布价运费	运单信息生成时的公布价运费版本
保价费	运单信息生成时对应的收费标准
代收手续费	运单信息生成时对应的收费标准
送货费	运单信息生成时对应的收费标准
装卸费	运单信息生成时对应的收费标准
其他费用项	运单信息生成时的收费标准
优惠费用	运单开单信息生成时对应的优惠标准

综上：起草转运单或返货单时，产品及价格优惠版本统一执行运单开单时对应的版本。
3.	含有代收货款的运单，如取消代收货款（代收货款金额更改为0）：
若货物未出收部门库存，代收手续费变为0；若货物已出收货部门库存，代收手续费不变。
SR8	提交转运单或返货单时必须已上传变更凭证，否则不能提交申请
SR89	成功提交转运单或返货单申请后，方可打印变更单
SR109	1.	弹出路径选择框，默认指定路径在桌面，可选择保存路径；
2.	可上传的凭证扫描件，应该为图片，格式允许选择常见的JPG,GIF,PNG,BPM；
上传图片大小有所限制（默认250K，允许系统后台配置），如果超出所设范围，
系统给出提示“您上传的文件已超过最大允许大小250K，请调整后重新上传。”。
SR1011	对于发货客户的变更：
1.	同一发货客户，若客户资质发生变化；
a)	开单时为合同客户，开单后（起草更改单之前）客户属性变为非合同客户： 
FOSS在开单时记录客户资质，起草更改单时仍可选择免费送货；
b)	开单时为非合同客户，开单后（起草更改单之前）客户属性升级为合同客户：
起草更改单时仍可选择免费送货；
2.	由某一发货客户更改为另一发货客户
a)	合同客户更改为非合同客户：原开单提货方式为免费送货，与开单时保持一致，
即直接清空提货方式，重新选择提货方式;
3.	非合同客户更改为合同客户：提货方式中增加"免费送货"选项。
SR1112	1.	货物未到达第一打木架外场（开单录入代打木架信息时系统自动生成的代打木架信息），允许修改代打包装信息
2.	货物已到达第一打木架外场，则不可发起代打包装信息更改
3.	若有代打包装，则在录入代打包装信息后，系统自动计划出代打包装费用，显示至包装费中，营业员或开单员可以任意修改包装费。
4.	在更改单界面中，加入代打包装货物件数的选择，即流水号选择。在发起代打包装更改单时，打开的代打包装信息中默认勾选开单录入的代装包装总件数的流水号，即：开单录入代打木架4件，代打木箱3件，则在更改单代打包装信息中，自勾选流水号1-7；
允许点击“代打木架”按钮直接修改打包装信息
SR12	1、货物离开出发部门库存后，客户要求将目的站更改为异地目的站，须收取中转费。例如，客户要求将原发往重庆北碚区营业部的货物更改至四川泸州蓝田营业部，虽然是同一外场配载，但分属不同地级市，须收取中转费。 
2、货物离开出发部门库存后，客户要求将目的站更改为同城目的站： 
 2.1、货物离开出发部门库存后至到达部门上一级外场交接出库前，不收取中转费。例如客户要求将原发往上海浦东上南路营业部的货物更改至上海派送部，虽然是不同外场配载，但分属同意地级市，不收取中转费 
 2.2、货物在到达部门（驻地派送部为到达部门）库存中，更改为同城部门，须收取中转费 
 2.3、货物离开到达部门上一级外场库存或有交接记录且交接目的站为原到达部门，须收取中转费 

注：同城定义：以原到达部门所在地级市为判断依据。更改前后部门在同一地级市行政区域范围内为同城，更改前后部门不在同一地级市行政区域范围内为异地。 
SR13	更改单界面添加查询网点、公布价、查询客户、打印标签功能按钮，可参考开单界面
SR14	香港开点业务：
1. 运单新增、运单查询中，收/发货人手机只能填写8位或11位数字，11位数字必须以1开头
2. 收货部门的省市为香港时，燃油附加费可修改
1.8	数据元素
1.8.1	变更基本录入信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
客户要求	客户提出的运单变更申请	单选框		10	是	默认为空
内部要求	由于内部开单失误而提出的运单变更申请	单选框		10	是	默认为空
变更类型	变更运单的类型，客户要求下包含：转运、返货、作废、更改，内部要求下包含更改、中止。	下拉框		10	是	默认为空“更改”
变更原因	变更运单的原因	文本		80	是	默认为空
1.8.2	运单基础信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
收货部门	收取货物的部门				是	
变更单号	点击可变更运单单号	复选框			否	可勾选时，则勾选后显示变更单号文本框（可编辑）
上门接货	前往客户处接收货物	复选框			否	
1.8.3	发货客户信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
手机	发货联系人的手机号码	文本			否	导入运单信息
电话	发货联系人的电话号码	文本			否	导入运单信息
客户名称	发货企业客户的公司名，个人客户的姓名	公共选择框			是	导入运单信息
联系人	发货客户的个人代表	文本			是	导入运单信息
地址	发货客户的联系地址	文本			否	导入运单信息
1.8.4	收货客户信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
手机	收货联系人的手机号码	文本			否	
电话	收货联系人的电话号码	文本			否	
联系人	收货客户的个人代表	文本			是	
地址	收货客户的联系地址	文本			否	提货方式为送货时必填
1.8.5	运输信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
货物状态	货物当前状态，包含：收货部门库存中、收货部门已出库（已出收货部门库存，中转部门未入库）、中转部门库存中、中转部门已出库（已出中转部门库存，即货物在途运输）、到达部门库存中、到达部门送货中。	文本			是	系统自动带出数据
注：分批配载的货物，以距离最终配载部门最近的部门作为参照。
提货方式	货物提取方式	下拉框			是	
目的站	货物的目的站	文本			是	显示更改前的目的站
提货网点	货物的提货网点	文本			是	显示更改前的提货网点
运输性质	货物的运输性质	文本			是	
配载类型	货物的配载类型	文本			否	由运输性质决定
预配航班	空运班次，含早班、中班、晚班	文本			否	
返单类别	签收单返回类型，含签收单原件返回、传真返回、扫描上传、无需返回	下拉框			是	
对外备注	传达给客户的备注信息	下拉框				可选择多项
对内备注	公司内部备注信息	文本			是	
1.8.6	转运信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
转运目的站	转运提货网点对应的目的站	文本			是	
转运提货网点	转运的提货网点	公共选择框			是	
转运运输性质	转运运输性质	下拉框			是	
转运配载类型	转运的配载类型	下拉框			否	
转运预配航班	转运为空运的预配航班	下拉框			否	
转运计费类型	转运货物的计费类型	文本			是	
转运费率	转运货物计费费率	文本			是	
转运费	转运货物费用	文本			是	
1.8.7	转运记录
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
转运目的站	转运提货网点对应的目的站					
转运提货网点	转运的提货网点					
转运运输性质	转运运输性质					
转运配载类型	转运的配载类型					若无则显示为空
转运预配航班	转运为空运的预配航班					若无则显示为空
转运计费类型	转运货物的计费类型					
转运费率	转运货物计费费率					
转运费	转运货物费用					

1.8.8	返货信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
返货目的站	返货提货网点对应的目的站	文本			是	
返货提货网点	货物返回的提货网点	公共选择框			是	
返货运输性质	货物返回运输性质 	下拉框			是	
返货计费类型	货物返回的计费类型	文本			是	
返货费率	货物返回的计费费率	文本			是	
返货费	返货费用	文本			是	
1.8.9	货物信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
名称	货物的名称	文本			是	
包装	货物的外包装	文本			是	
件数	货物的件数	文本			是	
重量	货物的重量	文本			是	
尺寸	货物的尺寸	文本			否	
体积	货物的体积	文本			是	
货物类型	货物的A/B类型，区分大小货	单选按钮			否	
大车直送		复选框			否	
贵重物品		复选框			否	
特殊物品		复选框			否	
1.8.10	增值业务信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
保价声明价值	货物保价金额	文本		8	是	
代收货款	代收货款金额	文本		8	是	
退款类型	代收货款退款方式	下拉框			否	
收款人	代收货款收款人	文本			否	
收款账号	收款人银行账号	文本			否	
包装费	货物包装费用	文本			是	若无则输入0
送货费	货物送货费用	文本			是	若无则输入0
装卸费	装卸费用	文本			是	若无则输入0
1.8.11	计费付款信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
公布价运费	根据公布价计算的运费				是	公布价运费=运费+转运费或返货费
增值服务费	增值服务费用总计				是	增值服务费=运单增值服务费+转运费或返货费
优惠费用	优惠打折的总费用				是	
费用合计	向客户收取的费用总计				是	
付款方式	承运费用付款的方式	下拉框			是	
到付金额	收货客户需要支付的费用	文本			是	若无则输入0
现付金额	发货客户需要支付的费用	文本			是	若无则输入0
预付费保密	对预付费用进行保密	复选框			否	
1.8.12	变更信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
变更项	运单信息发生变更的项目				是	系统根据更改项自动生成显示
变更前信息	变更项变更前对应的运单信息				是	系统自动生成
变更后信息	变更项变更后对应的运单信息				是	系统自动生成
1.8.13	详细计价信息（转运）
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
计费类型	变更前运费与转运费进行累加后对应的计费类型				是	
计费重量	变更前运费与转运费进行累加后对应计费重量				是	
费率	变更前运费与转运费进行累加后对应的费率				是	
保价费率					是	
代收费率					是	
运费	变更前运费+转运费				是	
保价费					是	
代收手续费					是	
包装费					是	
送货费					是	
其他费用					是	
优惠费用					是	
费用合计						
1.8.14	详细计价信息（返货）
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
计费类型	变更前运费与返货费进行累加后对应的计费类型				是	
计费重量	变更前运费与返货费进行累加后对应计费重量				是	
费率	变更前运费与返货费进行累加后对应的费率				是	
保价费率					是	
代收费率					是	
运费	变更前运费+返货费				是	
保价费					是	
代收手续费					是	
包装费					是	
送货费					是	
其他费用					是	
优惠费用					是	
费用合计						
1.9	非功能性需求
使用量	每天处理的运单约为1000000单，变更运单的数量占比约为20% 
2012年全网估计用户数	营业员数量约10000名
响应要求（如果与全系统要求 不一致的话）	系统一般需求
使用时间段	营业部上班时间
高峰使用时间段	9:00-16:00
1.10	接口描述：
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
客户信息接口	CRM系统	FOSS调用CRM客户信息接口，
查询录入客户信息
电子地图接口	GIS系统	FOSS调用电子地图接口查询录入目的站、提货网点信息
库存接口	中转子系统	FOSS调用中转库存接口判断货物是否已签收出库
财务类变更接口	结算系统	FOSS调用该接口判断是否可发起财务类变更


 【返货信息回显】界面
1.5.3	界面描述
主界面标题：变更运单。
“变更运单”主界面包含变更基本条件录入区域、运单信息显示及编辑区域、功能按钮区域。
起草转运单/返货单操作：用户进入“变更运单”主界面后，
导入运单信息至操作界面，选择运单变更为“客户要求”，
选择变更类型为转运/返货后（见【起草转运单】初始界面、
【起草返货单】初始界面），录入变更原因、转运/返货目的站、转运/返货提货网点，
最终上传变更凭证提交转运单/返货单申请。
1.变更基本条件录入区域：
1）单号，起草转运单/返货单对应的运单号。
2）客户要求：由于客户原因发起的运单变更需求；
3）内部要求：由于内部操作失误发起的运单变更需求；
4）变更类型：客户要求的运单变更包含转运、返货、更改、作废，内部要求的变更包含更改、中止。
5）变更原因：变更运单的原因。
2.运单信息显示及编辑区域：
1）运单基础信息：包含收货部门、变更单号、上门接货。
2）发货客户信息：包含发货人手机、电话、客户名称、联系人、地址。
3）收货客户信息：包含收货人手机、电话、联系人、地址。
4）运输信息区域：当选择变更类型为“转运”或“返货”时，该区域以table页签形式展现。
ⅰ当选择变更类型为“转运”时，
该区域包含【运输信息】及【转运信息】两个页签（如有转运或返货更改记录，
还需显示【转运记录】或【返货记录】页签）。
ⅱ当选择变更类型为“返货”时，
该区域包含【运输信息】及【返货信息】两个页签（如有转运或返货更改记录，
还需显示【转运记录】或【返货记录】页签）。
运输信息：包含货物状态、提货方式、目的站、提货网点、
运输性质、配载类型、预配航班、返单类别、对外备注、对内备注。
转运信息：包含转运目的站、转运提货网点、转运运输性质、
转运配载类型、转运预配航班、转运计费类型、转运费率、转运费。
返货信息：包含返货目的站、返货提货网点、
返货运输性质、返货计费类型、返货费率、返货费。
5）货物信息：货物的基本信息，包含货物名称、包装、
件数、重量、尺寸、体积、货物类型、大车直送、
贵重物品、特殊物品。
5）增值业务信息：包含保价声明价值、代收货款、
退款类型、收款人、收款账号、包装费、送货费、装卸费、其他费用项。
6）计费付款信息：包含公布价运费、增值服务费、
优惠费用、费用合计、付款方式、到付金额、
现付金额、预付费保密。
7）详细计价信息：默认隐藏不显示，
点击向左伸展按钮后伸展显示。包含计费类型、计费重量、费率、运费、
保价声明价值、保价费率、保价费、代收货款、代收费率、
代收手续费、包装费、送货费、其他费用、优惠费用、合计。
8）变更信息：变更运单条目明细显示。
该区域主要显示变更的项目及变更前后对应的运单信息。
3.功能按钮：
导入：点击导入按钮将运单号对应的运单信息展现在变更运单界面。
提交：点击提交变更运单申请。
打印：提交运单变更后，可点击打印转运单/返货单。
1.6	操作步骤
1.6.1	起草转运单操作步骤

序号	基本步骤	相关数据	补充步骤
1	点击变更运单菜单进入“变更运单”主界面		
系统初始化界面控件值
2	输入运单号，点击“导入”按钮	运单信息	系统判断是否允许发起运单变更：
1）若允许，则系统搜索运单信息并根据数据元素的对应关系将运单信息带至变更运单界面相应控件；
2）若不允许，则系统弹出提示框给予相应提示。参见业务规则SR1。
3	点击“客户要求”单选按钮		
1.	运单项对应的编辑状态发生变化，参见业务规则SR2；
2.	上传凭证区域显示默认上传的变更凭证名称，参见业务规则SR3。
4	选择变更类型为“转运”		
【转运信息】区域字段变为可编辑状态；
5	用户在“变更原因“输入框内输入客户申请转运的原因	变更原因	
6	用户点击【转运信息】页签，分别录入转运目的站、转运提货网点、
转运运输性质		
1.	转运信息录入操作参见系统用例SUC-496：录入运输信息；
2.	“变更信息”区域显示变更项及其变更前后对应的运单信息，
参见业务规则SR4。
7	点击变更凭证所在行的“上传”按钮  	变更凭证电子件	
弹出【路径选择】模式窗口，参见业务规则SR10
8	选择凭证存放的本地路径，点击“确定”按钮		
凭证上传至变更界面
9	点击“提交”按钮	
	弹出【运单变更信息】对话框，回显转运单变更的信息，参见系统用例SUC-490：显示运单变更明细
10	点击对话框界面的“确定”按钮		
系统弹出对话框提示是否确定提交转运单变更申请。
11	点击“确定”按钮，确定提交运单变更申请		
系统校验是否满足运单变更申请的条件，参见业务规则SR1、SR7
1.	若满足则系统提示运单变更申请成功，同时
1）系统根据凭证存放路径找到凭证文件后保存到系统中；
2）“打印”按钮变为可点击。
2.	若不满足则系统给予提示。

扩展事件

序号	扩展事件	相关数据	备注
2a	运单信息导入起草转运单界面相应控件后，
若再次点击“导入”按钮还原当前运单信息		
4a	若货物已出收货部门库存，
选择“转运”变更类型后，系统提示不能起草转运单		
6a	若转运提货网点为空运或偏线，
还需录入转运配载类型、转运预配航班		
6b	用户可修改其他的运单信息		
“变更信息”区域显示变更项及其变更前后对应的运单信息，
参见业务规则SR4
8a	用户可以点击变更凭证所在行“删除”按钮删除已上传的凭证，
重新选择文件上传	变更凭证电子件	
8b	用户可以点击变更凭证所在行“查看”按钮查看已上传的凭证	
变更凭证电子件	
10a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
11a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
1.6.2	起草返货单操作步骤

序号	基本步骤	相关数据	补充步骤

1	点击变更运单菜单进入“变更运单”主界面		
系统初始化界面控件值
2	输入运单号，点击“导入”按钮	
运单信息	系统判断是否允许发起运单变更：
1）若允许，则系统搜索运单信息并根据数据元素的对应关系将运单信息带至变更运单界面相应控件；
2）若不允许，则系统弹出提示框给予相应提示。参见业务规则SR1。
3	点击“客户要求”单选按钮		
1.	运单项对应的编辑状态发生变化，参见业务规则SR2；
2.	上传凭证区域显示默认上传的变更凭证名称，参见业务规则SR3。
4	选择变更类型为“返货”		
【返货信息】区域字段变为可编辑状态；
5	用户在“变更原因“输入框内输入客户申请转运的原因	变更原因	
6	用户点击【返货信息】页签，
分别录入转运目的站、转运提货网点、转运运输性质	
	1.	返货信息录入操作参见系统用例SUC-496：录入运输信息；
2.	“变更信息”区域显示变更项及其变更前后对应的运单信息，
参见业务规则SR4。
7	点击变更凭证所在行的“上传”按钮  	
变更凭证电子件	弹出【路径选择】模式窗口
8	选择凭证存放的本地路径，点击“确定”按钮		
凭证上传至变更界面
9	点击“提交”按钮		
弹出【运单变更信息】对话框，回显转运单变更的信息，
参见系统用例SUC-490：显示运单变更明细
10	点击对话框界面的“确定”按钮		
系统弹出对话框提示是否确定提交转运单变更申请。
11	点击“确定”按钮，确定提交运单变更申请		
系统校验是否满足运单变更申请的条件，参见业务规则SR1、SR7
1.	若满足则系统提示运单变更申请成功，同时
1）系统根据凭证存放路径找到凭证文件后保存到系统中；
2）“打印”按钮变为可点击。
2.	若不满足则系统给予提示。

扩展事件

序号	扩展事件	相关数据	备注
2a	运单信息导入起草返货单界面相应控件后，
若再次点击“导入”按钮还原当前运单信息		
4a	若货物已出收货部门库存，
选择“转运”变更类型后，系统提示不能起草转运单		
6a	若返货提货网点为空运或偏线，还需录入转运配载类型、转运预配航班		
6b	用户可修改其他的运单信息		“
变更信息”区域显示变更项及其变更前后对应的运单信息，参见业务规则SR4
8a	用户可以点击变更凭证所在行“删除”按钮删除已上传的凭证，
重新选择文件上传	变更凭证电子件	
8b	用户可以点击变更凭证所在行“查看”按钮查看已上传的凭证	变更凭证电子件	
10a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
11a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面

1.7	业务规则
序号	描述
SR1	
下表为不能起草运单变更的类型及不能起草时系统提示内容

序号	不能起草运单变更的类型	提示内容

	运单状态为“已保存待补录”的运单	
	运单未补录，不能起草运单变更！
2	运单状态为“作废”、“中止”的运单	
运单已作废，不能起草运单变更！
运单已中止，不能起草运单变更！
3	运单对应的收货部门与系统当前组织不一致	该单的收货部门不是您部门，不能起草运单变更！
4	运单状态为“已签收”的运单	货物已签收，
不能起草运单变更！
5	变更单状态为“待审核”或“待受理”的运单	
该运单有运单变更单还未被审核，不能起草变更运单！
该运单有运单变更单还未被受理，不能起草变更运单！
6	运单已进行结清货款操作	
该运单已进行结清货款操作，如需更改请联系到达部门进行反结清货款操作！
7	财务锁定的运单（财务将不允许发起变更的运单进行锁定）不能发起运单变更 
该运单已被财务锁定，不能起草变更运单！
8	偏线运单以外发	偏线运单已中转外发，不能起草运单变更！


SR2	1．	运单无出库记录，不允许起草转运单、返货单；
a.	客户来源可以选择更改、作废；
b.	内部来源可以选择更改、中止
2．	运单出库记录，不允许起草作废单，涉及到目的站、
提货网点的修改必须到转运信息、返货信息面板修改；如果变更提货方式，
由“派送”该为“自提”，原始目的站不支持“自提”，提示“原始目的站不支持自提，
请选择转运或返货类型”
a.	客户来源可以选择更改、转运、返货；
c.	内部来源可以选择更改、中止
3．	若未选择变更要求（客户要求/内部要求），
运单信息显示区域的控件为不可编辑状态；若选择了变更要求，
则不可变更的运单项对应的控件为不可编辑状态，可以变更的运单项对应的控件为可编辑状态
。运单项能否进行变更主要受变更要求、
运输类型、货物当前库存部门三个维度的影响。
其中客户要求发起的转运或返货变更，
可变更及不可变更的运单项请详见下表：
     

SR3	1.	选择客户要求变更时，上传凭证名称默认显示为“身份证复印件”及“运单客户联”，
可另新增变更凭证；选择内部要求变更时，上传凭证名称默认显示为“运单原件”，可另新增变更凭证；
2.	默认显示的变更凭证所在行不可删除，
新增的变更凭证所在行可删除；
3.	已选择上传的变更凭证可点击查看，也可点击删除。
SR4	1.	“变更项”列显示为变更的运单项名称，
“变更前信息”列显示变更项在变更前对应的运单信息，
“变更后信息”列显示变更项在变更后对应的运单信息。如是转运或返货变更：
“目的站”变更项对应的变更前信息为原目的站，变更后信息为转运/返货目的站；
“提货网点”变更项对应的变更前信息为原提货网点，变更后信息为转运/返货提货网点。
2.	对于“上门接货”、“预付费保密”、“大车直送”、
“贵重物品”、“特殊物品”为复选框的变更项，变更前后对应的信息根据复选框勾选与否显示为是或否；
3.	若变更项变更前信息或变更后信息为空，
则“变更前信息”或“变更后信息”列显示为:—；
4.	以下运单项不列入变更项：计费类型、计费重量、费率、
保价费率、代收费率、装卸费、其他费用（总金额）、转运运输性质、
转运配载类型、转运预配航班、转运计费类型、转运费率、返货运输性质、返货计费类型；
5.	变更项行显示顺序为：
运单基础信息变更项→发货客户信息变更项→收货客户信息变更项→运输信息变更项→货物信息变更项→增值业务信息变更项→详细计价信息变更项→计费付款信息变更项；
6.	“变更前信息”与“变更后信息”列显示内容不能相同。
SR5	转运信息对应的相关业务规则：
1.	转运目的站：转运提货网点对应的目的站，与收货人地址、提货方式进行关联。
2.	转运提货网点：转运后的提货网点，与收货人地址、提货方式进行关联。
3.	转运运输性质：
1）	原运输类型为汽运：以原目的站作为转运始发站，
与转运目的站匹配运输性质；
2）	原运输类型为偏线或空运：
ⅰ 若货物未出原最终配载部门库存，以原最终配载部门所在城市作为转运始发站，
与转运目的站匹配运输性质；
ⅱ 若货物已出原最终配载部门库存，转运运输性质只能为偏线或空运。
4.	提货方式：起草转运单时，提货方式与原运输信息取消关联，
与转运提货网点进行关联。
5.	转运配载类型：转运运输性质为空运时，包含合大票、单独开单；
其他转运运输性质时，只含有汽运。
6.	转运预配航班：转运运输性质为空运时为可选状态，
包含早班、中班、晚班。
7.	转运计费类型：分为重量计费、体积计费，
系统根据货物重量、体积、转运费率确定转运计费类型。
8.	转运费率：
1)	原运输类型为汽运：原目的站作为转运始发站，
系统根据转运始发站、转运目的站、转运运输性质读取公布价基础资料
（上门发货公布价）来确定转运费率，若未读取到公布价，则人工录入转运费率。
2)	原运输类型为偏线或空运：
ⅰ 若货物未出原最终配载部门库存，
系统根据原最终配载部门所在城市、转运目的站、转运运输性质读取公布价基础资料（
上门发货公布价）来确定转运费率，若未读取到公布价，则人工录入转运费率；
ⅱ 若货物已出原最终配载部门库存，则人工录入转运费率。
    注：转运费率读取的公布价为运单开单时对应的产品价格版本
9.	转运费：
1）计费类型为“重量计费”时，转运费=转运费率*重量；
2）计费类型为“体积计费”时，转运费=转运费率*体积。
注：转运费无最低一票。
返货信息对应的相关业务规则：
1.	返货目的站：返货提货网点对应的目的站，与收货人地址进行关联。。
2.	返货提货网点：货物返回的提货网点，与收货人地址进行关联，
只能选择公司自有营业网点。
3.	返货运输性质：
1）	原运输类型为汽运：
ⅰ 货物未出第一中转外场库存：第一中转外场所在城市作为返货始发站，
与返货目的站匹配返货运输性质；
ⅱ 货物已出第一中转外场库存：以原目的站作为返货始发站，
与返货目的站匹配运输性质；
2）	原运输类型为偏线或空运：
ⅰ 货物未出第一中转外场库存：第一中转外场所在城市作为返货始发站，
与返货目的站匹配返货运输性质；
ⅱ 货物已出第一中转外场库存，未出原最终配载部门库存：
以原最终配载部门所在城市作为返货始发站，与返货目的站匹配运输性质。
ⅲ 货物已出原最终配载部门库存：返货运输性质只能为偏线或空运。
4.	返货计费类型：分为重量计费、体积计费，系统根据货物重量、
体积、返货费率确定返货计费类型。
5.	返货费率：
1）	原运输类型为汽运：
ⅰ 货物未出第一中转外场库存：第一中转外场所在城市作为返货始发站，
系统根据返货始发站、返货目的站、返货运输性质读取公布价基础资料（上门发货公布价）来确定返货费率，原费率变为原运输性质下的收货部门至返货始发站的费率；
ⅱ 货物已出第一中转外场库存：原目的站作为返货始发站，
系统根据返货始发站、返货目的站、返货运输性质读取公布价基础资料（上门发货公布价）来确定返货费率，原费率不变。
2）	原运输类型为偏线或空运：
ⅰ 货物未出第一中转外场库存：第一中转外场所在城市作为返货始发站，
系统根据返货始发站、返货目的站、返货运输性质读取公布价基础资料（上门发货公布价）
来确定返货费率，原费率变为原运输性质下的收货部门至返货始发站的费率；
ⅱ 货物已出第一中转外场库存，未出原最终配载部门库存：
原最终配载部门所在城市作为返货始发站，系统根据返货始发站、返货目的站、
返货运输性质读取公布价基础资料（上门发货公布价）来确定返货费率，
原费率变为原运输性质下的收货部门至返货始发站的费率；
ⅲ 货物已出原最终配载部门库存：人工录入返货费率，原费率不变。
注：返货费率读取的公布价为运单开单时对应的产品价格版本。
6.	返货费：
1）	计费类型为“重量计费”时，返货费=返货费率*重量；
2）	计费类型为“体积计费”时，返货费=返货费率*体积。
注：返货费无最低一票。
SR6	1.	运单信息的修改录入操作参照运单生成相关系统用例的操作；
2.	修改运单信息时，系统校验的业务规则参照运单生成相关系统用例的业务规则。
SR7	1.	起草转运单时，关键增值服务信息的变更规则：

运单项	起草运单变更时对应的版本
费率	产品在运单信息生成时对应的公布价版本
保价费率	运单信息生成时的保价费率版本
代收费率	运单信息生成时的代收费率版本
公布价运费	运单信息生成时的公布价运费版本
保价费	运单信息生成时对应的收费标准
代收手续费	运单信息生成时对应的收费标准
送货费	运单信息生成时对应的收费标准
装卸费	运单信息生成时对应的收费标准
其他费用项	运单信息生成时的收费标准
优惠费用	运单开单信息生成时对应的优惠标准

2.	起草返货单时，关键增值服务信息的变更规则：
   
运单项	起草运单变更时对应的版本
费率	若货物未出第一中转库存：原运输性质下的收货部门至返货始发站的费率
（返货始发站为第一中转外场对应的城市），费率为运单开单时对应的版本
	若货物已出第一中转库存：产品在运单信息生成时对应的公布价版本
保价费率	运单信息生成时的保价费率版本
代收费率	运单信息生成时的代收费率版本
公布价运费	运单信息生成时的公布价运费版本
保价费	运单信息生成时对应的收费标准
代收手续费	运单信息生成时对应的收费标准
送货费	运单信息生成时对应的收费标准
装卸费	运单信息生成时对应的收费标准
其他费用项	运单信息生成时的收费标准
优惠费用	运单开单信息生成时对应的优惠标准

综上：起草转运单或返货单时，产品及价格优惠版本统一执行运单开单时对应的版本。
3.	含有代收货款的运单，如取消代收货款（代收货款金额更改为0）：
若货物未出收部门库存，代收手续费变为0；若货物已出收货部门库存，代收手续费不变。
SR8	提交转运单或返货单时必须已上传变更凭证，否则不能提交申请
SR89	成功提交转运单或返货单申请后，方可打印变更单
SR109	1.	弹出路径选择框，默认指定路径在桌面，可选择保存路径；
2.	可上传的凭证扫描件，应该为图片，格式允许选择常见的JPG,GIF,PNG,BPM；
上传图片大小有所限制（默认250K，允许系统后台配置），如果超出所设范围，
系统给出提示“您上传的文件已超过最大允许大小250K，请调整后重新上传。”。
SR1011	对于发货客户的变更：
1.	同一发货客户，若客户资质发生变化；
a)	开单时为合同客户，开单后（起草更改单之前）客户属性变为非合同客户： 
FOSS在开单时记录客户资质，起草更改单时仍可选择免费送货；
b)	开单时为非合同客户，开单后（起草更改单之前）客户属性升级为合同客户：
起草更改单时仍可选择免费送货；
2.	由某一发货客户更改为另一发货客户
a)	合同客户更改为非合同客户：原开单提货方式为免费送货，与开单时保持一致，
即直接清空提货方式，重新选择提货方式;
3.	非合同客户更改为合同客户：提货方式中增加"免费送货"选项。
SR1112	1.	货物未到达第一打木架外场（开单录入代打木架信息时系统自动生成的代打木架信息），允许修改代打包装信息
2.	货物已到达第一打木架外场，则不可发起代打包装信息更改
3.	若有代打包装，则在录入代打包装信息后，系统自动计划出代打包装费用，显示至包装费中，营业员或开单员可以任意修改包装费。
4.	在更改单界面中，加入代打包装货物件数的选择，即流水号选择。在发起代打包装更改单时，打开的代打包装信息中默认勾选开单录入的代装包装总件数的流水号，即：开单录入代打木架4件，代打木箱3件，则在更改单代打包装信息中，自勾选流水号1-7；
允许点击“代打木架”按钮直接修改打包装信息
SR12	1、货物离开出发部门库存后，客户要求将目的站更改为异地目的站，须收取中转费。例如，客户要求将原发往重庆北碚区营业部的货物更改至四川泸州蓝田营业部，虽然是同一外场配载，但分属不同地级市，须收取中转费。 
2、货物离开出发部门库存后，客户要求将目的站更改为同城目的站： 
 2.1、货物离开出发部门库存后至到达部门上一级外场交接出库前，不收取中转费。例如客户要求将原发往上海浦东上南路营业部的货物更改至上海派送部，虽然是不同外场配载，但分属同意地级市，不收取中转费 
 2.2、货物在到达部门（驻地派送部为到达部门）库存中，更改为同城部门，须收取中转费 
 2.3、货物离开到达部门上一级外场库存或有交接记录且交接目的站为原到达部门，须收取中转费 

注：同城定义：以原到达部门所在地级市为判断依据。更改前后部门在同一地级市行政区域范围内为同城，更改前后部门不在同一地级市行政区域范围内为异地。 
SR13	更改单界面添加查询网点、公布价、查询客户、打印标签功能按钮，可参考开单界面
SR14	香港开点业务：
1. 运单新增、运单查询中，收/发货人手机只能填写8位或11位数字，11位数字必须以1开头
2. 收货部门的省市为香港时，燃油附加费可修改
1.8	数据元素
1.8.1	变更基本录入信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
客户要求	客户提出的运单变更申请	单选框		10	是	默认为空
内部要求	由于内部开单失误而提出的运单变更申请	单选框		10	是	默认为空
变更类型	变更运单的类型，客户要求下包含：转运、返货、作废、更改，内部要求下包含更改、中止。	下拉框		10	是	默认为空“更改”
变更原因	变更运单的原因	文本		80	是	默认为空
1.8.2	运单基础信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
收货部门	收取货物的部门				是	
变更单号	点击可变更运单单号	复选框			否	可勾选时，则勾选后显示变更单号文本框（可编辑）
上门接货	前往客户处接收货物	复选框			否	
1.8.3	发货客户信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
手机	发货联系人的手机号码	文本			否	导入运单信息
电话	发货联系人的电话号码	文本			否	导入运单信息
客户名称	发货企业客户的公司名，个人客户的姓名	公共选择框			是	导入运单信息
联系人	发货客户的个人代表	文本			是	导入运单信息
地址	发货客户的联系地址	文本			否	导入运单信息
1.8.4	收货客户信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
手机	收货联系人的手机号码	文本			否	
电话	收货联系人的电话号码	文本			否	
联系人	收货客户的个人代表	文本			是	
地址	收货客户的联系地址	文本			否	提货方式为送货时必填
1.8.5	运输信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
货物状态	货物当前状态，包含：收货部门库存中、收货部门已出库（已出收货部门库存，中转部门未入库）、中转部门库存中、中转部门已出库（已出中转部门库存，即货物在途运输）、到达部门库存中、到达部门送货中。	文本			是	系统自动带出数据
注：分批配载的货物，以距离最终配载部门最近的部门作为参照。
提货方式	货物提取方式	下拉框			是	
目的站	货物的目的站	文本			是	显示更改前的目的站
提货网点	货物的提货网点	文本			是	显示更改前的提货网点
运输性质	货物的运输性质	文本			是	
配载类型	货物的配载类型	文本			否	由运输性质决定
预配航班	空运班次，含早班、中班、晚班	文本			否	
返单类别	签收单返回类型，含签收单原件返回、传真返回、扫描上传、无需返回	下拉框			是	
对外备注	传达给客户的备注信息	下拉框				可选择多项
对内备注	公司内部备注信息	文本			是	
1.8.6	转运信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
转运目的站	转运提货网点对应的目的站	文本			是	
转运提货网点	转运的提货网点	公共选择框			是	
转运运输性质	转运运输性质	下拉框			是	
转运配载类型	转运的配载类型	下拉框			否	
转运预配航班	转运为空运的预配航班	下拉框			否	
转运计费类型	转运货物的计费类型	文本			是	
转运费率	转运货物计费费率	文本			是	
转运费	转运货物费用	文本			是	
1.8.7	转运记录
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
转运目的站	转运提货网点对应的目的站					
转运提货网点	转运的提货网点					
转运运输性质	转运运输性质					
转运配载类型	转运的配载类型					若无则显示为空
转运预配航班	转运为空运的预配航班					若无则显示为空
转运计费类型	转运货物的计费类型					
转运费率	转运货物计费费率					
转运费	转运货物费用					

1.8.8	返货信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
返货目的站	返货提货网点对应的目的站	文本			是	
返货提货网点	货物返回的提货网点	公共选择框			是	
返货运输性质	货物返回运输性质 	下拉框			是	
返货计费类型	货物返回的计费类型	文本			是	
返货费率	货物返回的计费费率	文本			是	
返货费	返货费用	文本			是	
1.8.9	货物信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
名称	货物的名称	文本			是	
包装	货物的外包装	文本			是	
件数	货物的件数	文本			是	
重量	货物的重量	文本			是	
尺寸	货物的尺寸	文本			否	
体积	货物的体积	文本			是	
货物类型	货物的A/B类型，区分大小货	单选按钮			否	
大车直送		复选框			否	
贵重物品		复选框			否	
特殊物品		复选框			否	
1.8.10	增值业务信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
保价声明价值	货物保价金额	文本		8	是	
代收货款	代收货款金额	文本		8	是	
退款类型	代收货款退款方式	下拉框			否	
收款人	代收货款收款人	文本			否	
收款账号	收款人银行账号	文本			否	
包装费	货物包装费用	文本			是	若无则输入0
送货费	货物送货费用	文本			是	若无则输入0
装卸费	装卸费用	文本			是	若无则输入0
1.8.11	计费付款信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
公布价运费	根据公布价计算的运费				是	公布价运费=运费+转运费或返货费
增值服务费	增值服务费用总计				是	增值服务费=运单增值服务费+转运费或返货费
优惠费用	优惠打折的总费用				是	
费用合计	向客户收取的费用总计				是	
付款方式	承运费用付款的方式	下拉框			是	
到付金额	收货客户需要支付的费用	文本			是	若无则输入0
现付金额	发货客户需要支付的费用	文本			是	若无则输入0
预付费保密	对预付费用进行保密	复选框			否	
1.8.12	变更信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
变更项	运单信息发生变更的项目				是	系统根据更改项自动生成显示
变更前信息	变更项变更前对应的运单信息				是	系统自动生成
变更后信息	变更项变更后对应的运单信息				是	系统自动生成
1.8.13	详细计价信息（转运）
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
计费类型	变更前运费与转运费进行累加后对应的计费类型				是	
计费重量	变更前运费与转运费进行累加后对应计费重量				是	
费率	变更前运费与转运费进行累加后对应的费率				是	
保价费率					是	
代收费率					是	
运费	变更前运费+转运费				是	
保价费					是	
代收手续费					是	
包装费					是	
送货费					是	
其他费用					是	
优惠费用					是	
费用合计						
1.8.14	详细计价信息（返货）
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
计费类型	变更前运费与返货费进行累加后对应的计费类型				是	
计费重量	变更前运费与返货费进行累加后对应计费重量				是	
费率	变更前运费与返货费进行累加后对应的费率				是	
保价费率					是	
代收费率					是	
运费	变更前运费+返货费				是	
保价费					是	
代收手续费					是	
包装费					是	
送货费					是	
其他费用					是	
优惠费用					是	
费用合计						
1.9	非功能性需求
使用量	每天处理的运单约为1000000单，变更运单的数量占比约为20% 
2012年全网估计用户数	营业员数量约10000名
响应要求（如果与全系统要求 不一致的话）	系统一般需求
使用时间段	营业部上班时间
高峰使用时间段	9:00-16:00
1.10	接口描述：
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
客户信息接口	CRM系统	FOSS调用CRM客户信息接口，
查询录入客户信息
电子地图接口	GIS系统	FOSS调用电子地图接口查询录入目的站、提货网点信息
库存接口	中转子系统	FOSS调用中转库存接口判断货物是否已签收出库
财务类变更接口	结算系统	FOSS调用该接口判断是否可发起财务类变更

SR3	1．	运单无出库记录，
不允许起草转运单、返货单；
a.	客户来源可以选择更改、作废；
b.	内部来源可以选择更改、中止
2．	运单出库记录，不允许起草作废单，
涉及到目的站、提货网点的修改必须到转运信息、
返货信息面板修改；如果变更提货方式，
由“派送”该为“自提”，原始目的站不支持“自提”，
提示“原始目的站不支持自提，请选择转运或返货类型”
a.	客户来源可以选择更改、转运、返货；
c.	内部来源可以选择更改、中止
3．	若未选择变更要求（客户要求/内部要求），
运单信息显示区域的控件为不可编辑状态；
若选择了变更要求，
则不可变更的运单项对应的控件为不可编辑状态，
可以变更的运单项对应的控件为可编辑状态。
运单项能否进行变更主要受变更要求、
运输类型、货物当前库存部门三个维度的影响。
其中内部要求发起的运单变更，
可变更及不可变更的运单项请详见下表：
     

SR4	1.	选择客户要求变更时，
上传凭证名称默认显示为“身份证复印件”及“运单客户联”，
可另新增变更凭证；选择内部要求变更时，
上传凭证名称默认显示为“运单原件”，
可另新增变更凭证；
2.	默认显示的变更凭证所在行不可删除，
新增的变更凭证所在行可删除；
3.	已选择上传的变更凭证可点击查看，
也可点击删除。
SR5	1.	 “变更项”列显示为变更的运单项名称，
“变更前信息”列显示变更项在变更前对应的运单信息，
“变更后信息”列显示变更项在变更后对应的运单信息。
如是转运或返货变更：“目的站”变更项对应的变更前信息为原目的站，
变更后信息为转运/返货目的站；
“提货网点”变更项对应的变更前信息为原提货网点，
变更后信息为转运/返货提货网点。
2.	对于“上门接货”、“预付费保密”、“大车直送”、
“贵重物品”、“特殊物品”为复选框的变更项，
变更前后对应的信息根据复选框勾选与否显示为是或否；
3.	若变更项变更前信息或变更后信息为空，
则“变更前信息”或“变更后信息”列显示为:—；
4.	以下运单项不列入变更项：计费类型、
计费重量、费率、保价费率、代收费率、装卸费、
其他费用（总金额）、转运运输性质、转运配载类型、
转运预配航班、转运计费类型、转运费率、
返货运输性质、返货计费类型；
5.	变更项行显示顺序为：运单基础信息变更项→
发货客户信息变更项→收货客户信息变更项→运输信息变更项→
货物信息变更项→增值业务信息变更项→详细计价信息变更项→计费付款信息变更项；
6.	“变更前信息”与“变更后信息”列显示内容不能相同。
SR6	1.	运单信息的修改录入操作参照运单生成相关系统用例的操作；
2.	修改运单信息时，
系统校验的业务规则参照运单生成相关系统用例的业务规则。
SR7	1.	关键增值服务信息的变更规则：

运单项	起草运单变更时对应的版本
费率	产品在运单信息生成时对应的公布价版本
保价费率	运单信息生成时的保价费率版本
代收费率	运单信息生成时的代收费率版本
公布价运费	运单信息生成时的公布价运费版本
保价费	运单信息生成时对应的收费标准
代收手续费	运单信息生成时对应的收费标准
送货费	运单信息生成时对应的收费标准
装卸费	运单信息生成时对应的收费标准
其他费用项	运单信息生成时的收费标准
优惠费用	运单开单信息生成时对应的优惠标准

综上：起草变更单（内部）时，产品及价格优惠版本统一执行运单开单时对应的版本。
举例：
公布价运费：运单开单时精准卡航对应的公布价（上门发货）运费最低一票为40元，在开单后系统维护调整为50元最低一票。则在起草变更单时，最低一票仍执行运单开单时的标准，即为40元一票。
2.	含有代收货款的运单，如取消代收货款（代收货款金额更改为0），代收手续费变为0。
SR8	提交变更运单时必须已上传变更凭证，否则不能提交
SR9	成功提交运单变更后，方可打印变更单
SR10	1.	弹出路径选择框，
默认指定路径在桌面，可选择保存路径；
2.	可上传的凭证扫描件，应该为图片，格式允许选择常见的JPG,GIF,PNG,BPM；
3.	上传图片大小有所限制（默认250K，允许系统后台配置），
如果超出所设范围，系统给出提示“您上传的文件已超过最大允许大小250K，请调整后重新上传。”。
SR11	对于发货客户的变更：
1.	同一发货客户，若客户资质发生变化；
a)	开单时为合同客户，开单后（起草更改单之前）
客户属性变为非合同客户： FOSS在开单时记录客户资质，起草更改单时仍可选择免费送货；
b)	开单时为非合同客户，开单后（起草更改单之前）
客户属性升级为合同客户：起草更改单时仍可选择免费送货；
2.	由某一发货客户更改为另一发货客户
a)	合同客户更改为非合同客户：原开单提货方式为免费送货，
与开单时保持一致，即直接清空提货方式，重新选择提货方式;
b)	非合同客户更改为合同客户：提货方式中增加"免费送货"选项。
SR12	1.	货物未到达第一打木架外场（开单录入代打木架信息时系统自动生成的代打木架信息），
允许修改代打包装信息
2.	货物已到达第一打木架外场，则不可发起代打包装信息更改
3.	若有代打包装，则在录入代打包装信息后，
系统自动计划出代打包装费用，显示至包装费中，
营业员或开单员可以任意修改包装费。
4.	在更改单界面中，加入代打包装货物件数的选择，
即流水号选择。在发起代打包装更改单时，
打开的代打包装信息中默认勾选开单录入的代装包装总件数的流水号，
即：开单录入代打木架4件，代打木箱3件，
则在更改单代打包装信息中，自勾选流水号1-7；
5.	允许点击“代打木架”按钮直接修改打包装信息
1.8	数据元素
1.8.1	变更基本录入信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
客户要求	客户提出的运单变更申请	单选框		10	是	默认为空
内部要求	由于内部开单失误而提出的运单变更申请	单选框		10	是	默认为空
变更类型	变更运单的类型，客户要求下包含：转运、返货、作废、更改，内部要求下包含更改、中止。	下拉框		10	是	默认为“更改”
变更原因	变更运单的原因	文本		80	是	默认为空
1.8.2	运单基础信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
收货部门	收取货物的部门				是	
变更单号	点击可变更运单单号	复选框			否	
可勾选时，则勾选后显示变更单号文本框（可编辑）
上门接货	前往客户处接收货物	复选框			否	

1.8.3	发货客户信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
手机	发货联系人的手机号码	文本			否	导入运单信息
电话	发货联系人的电话号码	文本			否	导入运单信息
客户名称	发货企业客户的公司名，个人客户的姓名	公共选择框			是	导入运单信息
联系人	发货客户的个人代表	文本			是	导入运单信息
地址	发货客户的联系地址	文本			否	导入运单信息
1.8.4	收货客户信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
手机	收货联系人的手机号码	文本			否	
电话	收货联系人的电话号码	文本			否	
联系人	收货客户的个人代表	文本			是	
地址	收货客户的联系地址	文本			否	提货方式为送货时必填
1.8.5	运输信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
货物状态	货物当前状态，包含：收货部门库存中、
收货部门已出库（已出收货部门库存，中转部门未入库）、
中转部门库存中、中转部门已出库（已出中转部门库存，即货物在途运输）、
到达部门库存中、到达部门送货中。	文本			是	系统自动带出数据
注：分批配载的货物，以距离最终配载部门最近的部门作为参照。
提货方式	货物提取方式	下拉框			是	
目的站	货物的目的站	文本			是	
提货网点	货物的提货网点	公共选择框			是	
运输性质	货物的运输性质	下拉框			是	
配载类型	货物的配载类型	下拉框			是	由运输性质决定
预配航班	空运班次，含早班、中班、晚班	下拉框			是	
返单类别	签收单返回类型，含签收单原件返回、传真返回、扫描上传、无需返回	下拉框			是	
对外备注	传达给客户的备注信息	下拉框				可选择多项
对内备注	公司内部备注信息	文本			是	
1.8.6	货物信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
名称	货物的名称	文本			是	
包装	货物的外包装	文本			是	
件数	货物的件数	文本			是	
重量	货物的重量	文本			是	
尺寸	货物的尺寸	文本			否	
体积	货物的体积	文本			是	
货物类型	货物的A/B类型，区分大小货	单选按钮			否	
大车直送		复选框			否	
贵重物品		复选框			否	
特殊物品		复选框			否	
1.8.7	增值业务信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
保价声明价值	货物保价金额	文本		8	是	
代收货款	代收货款金额	文本		8	是	
退款类型	代收货款退款方式	下拉框			否	
收款人	代收货款收款人	文本			否	
收款账号	收款人银行账号	文本			否	
包装费	货物包装费用	文本			是	若无则输入0
送货费	货物送货费用	文本			是	若无则输入0
装卸费	装卸费用	文本			是	若无则输入0
1.8.8	计费付款信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
公布价运费	根据公布价计算的运费				是	公布价运费=运费+转运费或返货费
增值服务费	增值服务费用总计				是	
优惠费用	优惠打折的总费用				是	
费用合计	向客户收取的费用总计				是	
付款方式	承运费用付款的方式	下拉框			是	
到付金额	收货客户需要支付的费用	文本			是	若无则输入0
现付金额	发货客户需要支付的费用	文本			是	若无则输入0
预付费保密	对预付费用进行保密	复选框			否	
1.8.9	变更信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
变更项	运单信息发生变更的项目				是	系统根据更改项自动生成显示
变更前信息	变更项变更前对应的运单信息				是	系统自动生成
变更后信息	变更项变更后对应的运单信息				是	系统自动生成
1.8.10	详细计价信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
计费类型	分为重量计费、体积计费两种				是	系统自动生成
计费重量	空运时为必填项，汽运时不可编辑				否	系统自动计算生成
费率					是	
保价费率					是	
代收费率					是	
运费					是	
保价费					是	
代收手续费					是	
包装费					是	
送货费					是	
其他费用					是	
优惠费用					是	
费用合计					是	
1.9	非功能性需求
使用量	每天处理的运单约为1000000单，变更运单的数量占比约为20%
2012年全网估计用户数	营业员数量约10000名
响应要求（如果与全系统要求 不一致的话）	系统一般需求
使用时间段	营业部上班时间
高峰使用时间段	9:00-16:00，19:00-21:00
1.10	接口描述：
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
客户信息接口	CRM系统	FOSS调用CRM客户信息接口，查询录入客户信息
电子地图接口	GIS系统	FOSS调用电子地图接口查询录入目的站、提货网点信息
库存接口	中转子系统	FOSS调用中转库存接口判断货物是否已签收出库
财务类变更接口	结算系统	FOSS调用该接口判断财务是否可发起财务类变更，
若财务对运单进行了锁定，则不可发起财务类变更


 */
/**--------------------------------------
 * 1.	纸包装件数默认显示数值等于货物总件数，
 * 营业员可以修改各包装的件数；
 * 系统自动在录入下一个包装前计算显示剩余未录入的件数，
 * 例：某票货物为50件，则自动显示纸包装50，
 * 在营业员修改纸包装为20时，木包装自动显示为30，
 * 在营业员修改木包装为10时，
 * 纤包装自动显示为20，该过程中未录入包装数值的默认显示为0；
2.	货物包装总件数小于等于货物总件数；
 */
/**--------------------------------------
 * 1.	离线开单时，不录入代打木架信息；
 * 当木包装件数大于等于1时，系统不提示任何信息，
 * 也不弹出代打木架录入界面；
2.	离线开单的代打木架信息在离线开单提交时，
系统校验提醒；
 */
/**
 * 1.	运输类型为汽运时，货物类型为唯一选择项；即，
 * 非A即B；默认不可勾选，
 * 只有当走货路由经过特定的城市时需要录入货物类型,
 * 特定城市可在系统中进行配置；
2.	运输类型为空
默认显示为普货，目前只有这一个分类，该类型可做配置；
--------------------------------------
 */
/**--------------------------------------
 * 1.	系统根据货物名称匹配生成的勾选贵重物品，
 * 营业员不可去掉勾选；
2.	营业员也可以主动勾选贵重物品；
3.	件数等于1、体积小于等于0.05个方、
报价声明价值大于等于10000元，为贵重物品；
系统自动勾选贵重物品，
营业员可修改是否勾选；
4.	件数大于等于2时，平均体积（体积/件数）
小于等于0.5方，平均声明价值（保价声明价值/件数）
大于等于10000元，为贵重物品；
系统自动勾选贵重物品，
营业员可修改是否勾选；
1.	营业部开单时按打完木架后的包装开，
即包装中含“木架/木箱”，
开单件数为货物打木架/木箱前的实际件数（防止丢货），
尺寸和重量按照以下公式计算：
1.1	整票货物代打时：
开单体积=代打货物体积*1.4；
开单重量=所有货物重量+代打货物体积*42；
1.2	部分货物代打时，
开单体积=代打货物体积*1.4+未打木架货物体积；
开单重量=所有货物重量+代打货物体积*42。
即：营业部按照代打货物未打木架之前体积的1.4倍来开单收费，
重量另加，单票中未打木架的货物的体积和重量不变；
1.3	例如：一票货物需全部代打，
货物体积为1个方，重量为100KG，
则开单体积为1.4个方，
开单重量为100+1*42=142KG，
收取客户包装费为150*1.4=210元；
1.4	需要加托时，仍按照50元/个另外收取费用，
托的重量和体积不再另加；
营业部不需要再更改由于打木架引起重量和体积的变化；
2.	开单件数为代打木架前货物实际件数，
包装为打木架后的包装，
打木架后件数发生变化后，
需及时更改件数；
--------------------------------------
 */

/**--------------------------------------
 * 每天处理的运单约为1000000单
营业员数量约10000名
系统一般要求
营业部、集中开单小组上班时间
营业部：16：00-20：00
集中开单小组：21：00-次日4：00
 */

/**--------------------------------------
 * 本界面为录入增值服务信息。
界面主要分为三个部分：
录入增值服务、
录入包装费、
查询其它费用。
1.	录入增值服务
录入增值服务分为两个部分：
录入增值服务信息界面、
录入其它费用列表；
1.1	录入增值服务信息界面
录入增值服务信息界面包括：
1.1.1	保价声明价值；
1.1.2	保价费率：
保价费率可由基础资料配置，
可按出发城市区域，
出发营业部等；
1.1.3	保价费；
1.1.4	代收货款；
1.1.5	代收费率；
1.1.6	代收手续费；
1.1.7	退款类型：
包括三日退、
退日退、
审核退，
默认三日退；
1.1.8	包装费；
1.1.9	装卸费；
1.1.10	送货费；
1.1.11	其它费用合计；
1.1.12	返单类别：
包括无需返单、
原件签收单返回、
传真件签收单返回、
扫描件返回，
默认无需返单；
1.1.13	预付费保密；
1.2	录入其它费用列表
录入其它费用列表包括：
1.2.1	费用名称；
1.2.2	费用金额；
1.2.3	新增其它费用：
功能按钮；
1.2.4	删除其它费用：
功能按钮；
2.	录入包装费
其界面和界面和需求详见系统用例“DP-FOSS-接送货系统用例-运单生成-确认承运信息-录入增值服务信息”中“录入包装费”；
3.	查询其它费用
其界面和界面和需求详见系统用例“DP-FOSS-接送货系统用例-运单生成-确认承运信息-录入增值服务信息”中“查询其它费用”；
--------------------------------------
 */
/**
 * /**--------------------------------------
 * 1.	若货物为违禁品，
 * 	则系统自动提示“货物为违禁品，不可开单！”；
 2.	若货物为拒收品，
 则系统自动提示“货物为拒收品，不可开单！”；
 3.	若货物为贵重物品，
 则系统自动勾选“贵重物品”，
 且不可修改；
 4.	若货物为限保物品，
 则系统自动限定保价金额，且不可修改，
 并提示“货物为限保物品”；
 5.	违禁品、拒收品、
 贵重物品、限保物品（含保价金额上限）
 具体类型可在系统中进行配置；
 1.	货物重量单位为千克
 */
/**--------------------------------------
 * 1.	货物尺寸为计算器输入，
 * 显示为输入文本；
2.	尺寸计算单位为厘米，
尺寸计算出数据后转换单位为立方米后，
在货物体积中显示数据；例如：
尺寸录入为：50*50*20，
则体积显示数据为：0.05；
 */
/**--------------------------------------
 * 1.	货物体积单位为立方米；
2.	营业员可以修改通过尺寸计算器
计算得出的体积数据；
3.	系统设置货物重量体积比区间值（该值由基础资料配置），
在运单提交时，
系统自动对重量体积比进行校验：
即重量体积比X=重量/体积；
3.1	当X不在设置的区间中，
弹出提示“请确认录入的重量体积是否准确！”；
（该弹窗有两个按钮：确定、取消）点击确定时，
弹出离线开单确认运单信息界面；点击取消，
点返回运单录入界面；
3.2	当X在区间中，无提示；
直接进入确认运单信息界面；
--------------------------------------
 */
/**--------------------------------------
 * 1.	纸包装件数默认显示数值等于货物总件数，
 * 营业员可以修改各包装的件数；
 * 系统自动在录入下一个包装前计算显示剩余未录入的件数，
 * 例：某票货物为50件，则自动显示纸包装50，
 * 在营业员修改纸包装为20时，木包装自动显示为30，
 * 在营业员修改木包装为10时，
 * 纤包装自动显示为20，该过程中未录入包装数值的默认显示为0；
2.	货物包装总件数小于等于货物总件数；
 */
/**--------------------------------------
 * 1.	离线开单时，不录入代打木架信息；
 * 当木包装件数大于等于1时，系统不提示任何信息，
 * 也不弹出代打木架录入界面；
2.	离线开单的代打木架信息在离线开单提交时，
系统校验提醒；
 */
/**
 * 1.	运输类型为汽运时，货物类型为唯一选择项；即，
 * 非A即B；默认不可勾选，
 * 只有当走货路由经过特定的城市时需要录入货物类型,
 * 特定城市可在系统中进行配置；
2.	运输类型为空
默认显示为普货，目前只有这一个分类，该类型可做配置；
--------------------------------------
 */
/**--------------------------------------
 * 1.	系统根据货物名称匹配生成的勾选贵重物品，
 * 营业员不可去掉勾选；
2.	营业员也可以主动勾选贵重物品；
3.	件数等于1、体积小于等于0.05个方、
报价声明价值大于等于10000元，为贵重物品；
系统自动勾选贵重物品，
营业员可修改是否勾选；
4.	件数大于等于2时，平均体积（体积/件数）
小于等于0.5方，平均声明价值（保价声明价值/件数）
大于等于10000元，为贵重物品；
系统自动勾选贵重物品，
营业员可修改是否勾选；
1.	营业部开单时按打完木架后的包装开，
即包装中含“木架/木箱”，
开单件数为货物打木架/木箱前的实际件数（防止丢货），
尺寸和重量按照以下公式计算：
1.1	整票货物代打时：
开单体积=代打货物体积*1.4；
开单重量=所有货物重量+代打货物体积*42；
1.2	部分货物代打时，
开单体积=代打货物体积*1.4+未打木架货物体积；
开单重量=所有货物重量+代打货物体积*42。
即：营业部按照代打货物未打木架之前体积的1.4倍来开单收费，
重量另加，单票中未打木架的货物的体积和重量不变；
1.3	例如：一票货物需全部代打，
货物体积为1个方，重量为100KG，
则开单体积为1.4个方，
开单重量为100+1*42=142KG，
收取客户包装费为150*1.4=210元；
1.4	需要加托时，仍按照50元/个另外收取费用，
托的重量和体积不再另加；
营业部不需要再更改由于打木架引起重量和体积的变化；
2.	开单件数为代打木架前货物实际件数，
包装为打木架后的包装，
打木架后件数发生变化后，
需及时更改件数；
--------------------------------------
 */

/**--------------------------------------
 * 每天处理的运单约为1000000单
营业员数量约10000名
系统一般要求
营业部、集中开单小组上班时间
营业部：16：00-20：00
集中开单小组：21：00-次日4：00
 */

package com.deppon.foss.module.pickup.changing.client.action;

import java.awt.event.ActionEvent;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.jdesktop.swingx.JXTable;

import com.deppon.foss.framework.client.commons.i18n.I18nManager;
import com.deppon.foss.framework.client.commons.i18n.II18n;
import com.deppon.foss.framework.client.commons.util.WindowUtil;
import com.deppon.foss.framework.client.component.buttonaction.IButtonActionListener;
import com.deppon.foss.framework.client.component.dataaccess.GuiceContextFactroy;
import com.deppon.foss.framework.client.widget.msgbox.MsgBox;
import com.deppon.foss.framework.exception.BusinessException;
import com.deppon.foss.framework.shared.util.string.StringUtil;
import com.deppon.foss.module.base.baseinfo.api.shared.domain.OuterBranchEntity;
import com.deppon.foss.module.base.baseinfo.api.shared.domain.SaleDepartmentEntity;
import com.deppon.foss.module.base.dict.api.shared.define.ConfigurationParamsConstants;
import com.deppon.foss.module.base.dict.api.shared.define.DictionaryConstants;
import com.deppon.foss.module.base.dict.api.shared.domain.ConfigurationParamsEntity;
import com.deppon.foss.module.pickup.changing.client.service.IWaybillRfcService;
import com.deppon.foss.module.pickup.changing.client.service.WaybillRfcServiceFactory;
import com.deppon.foss.module.pickup.changing.client.ui.WaybillRFCUI;
import com.deppon.foss.module.pickup.changing.client.ui.internal.IncrementPanel.WaybillOtherCharge;
import com.deppon.foss.module.pickup.changing.client.ui.internal.transport.TransferChangedRecordPanel.TransferRecordTableModel;
import com.deppon.foss.module.pickup.changing.client.utils.Common;
import com.deppon.foss.module.pickup.changing.client.vo.TransportRecordVo;
import com.deppon.foss.module.pickup.changing.client.vo.WaybillInfoVo;
import com.deppon.foss.module.pickup.common.client.dto.BusinessCostEnum;
import com.deppon.foss.module.pickup.common.client.dto.OrgInfoDto;
import com.deppon.foss.module.pickup.common.client.dto.QueryPickupPointDto;
import com.deppon.foss.module.pickup.common.client.service.BaseDataServiceFactory;
import com.deppon.foss.module.pickup.common.client.service.IBaseDataService;
import com.deppon.foss.module.pickup.common.client.service.impl.BaseDataService;
import com.deppon.foss.module.pickup.common.client.ui.commonUI.QueryPickupStationDialog;
import com.deppon.foss.module.pickup.common.client.utils.BooleanConvertYesOrNo;
import com.deppon.foss.module.pickup.common.client.utils.BusinessUtils;
import com.deppon.foss.module.pickup.common.client.vo.BranchVo;
import com.deppon.foss.module.pickup.common.client.vo.DataDictionaryValueVo;
import com.deppon.foss.module.pickup.common.client.vo.IdentityEffectivePlanVo;
import com.deppon.foss.module.pickup.common.client.vo.OtherChargeVo;
import com.deppon.foss.module.pickup.common.client.vo.WaybillPanelVo;
import com.deppon.foss.module.pickup.pricing.api.shared.define.PricingConstants.PriceEntityConstants;
import com.deppon.foss.module.pickup.pricing.api.shared.define.PricingConstants.ProductEntityConstants;
import com.deppon.foss.module.pickup.pricing.api.shared.dto.QueryBillCacilateValueAddDto;
import com.deppon.foss.module.pickup.pricing.api.shared.dto.ValueAddDto;
import com.deppon.foss.module.pickup.waybill.shared.define.WaybillConstants;
import com.deppon.foss.module.pickup.waybill.shared.define.WaybillRfcConstants;
import com.deppon.foss.module.pickup.waybill.shared.domain.WaybillPictureEntity;
import com.deppon.foss.module.pickup.waybill.shared.dto.EffectiveDto;
import com.deppon.foss.module.pickup.waybill.shared.exception.BaseInfoInvokeException;
import com.deppon.foss.module.pickup.waybill.shared.exception.WaybillRfcChangeException;
import com.deppon.foss.module.pickup.waybill.shared.exception.WaybillValidateException;
import com.deppon.foss.util.DateUtils;
import com.deppon.foss.util.define.FossConstants;


/**
 * 
 * 查询目的站  action
 * <p style="display:none">
 * version:V1.0,author:Administrator,date:2012-10-17 上午11:16:43,
 * </p>
 * @author 105089-FOSS-shixiaowei
 * @date 2012-10-17 上午11:16:43
 * @since
 * @version
 */
public class ShowPickupStationDialogAction  implements IButtonActionListener<WaybillRFCUI>{

	/**
	 * 参数配置
	 */
//	private IConfigurationParamsService configurationParamsService =  GuiceContextFactroy.getInjector().getInstance(ConfigurationParamsService.class);
	/**
	 * 运单基础资料服务
	 */
	private IBaseDataService baseDataService = GuiceContextFactroy.getInjector().getInstance(BaseDataService.class);

	/**
	 * 日志
	 */
	private static final Log LOG = LogFactory.getLog(ShowPickupStationDialogAction.class);
	
	/**
	 * 国际化
	 */
	private static final II18n i18n = I18nManager.getI18n(ShowPickupStationDialogAction.class);
	
	 /**
	  * 主界面
	  */
	private WaybillRFCUI ui;

	/**
	 * open waybill service
	 */
	private IWaybillRfcService waybillRfcService = WaybillRfcServiceFactory.getWaybillRfcService();
	
	
	/**
	 * 
	 * 功能：openUIAction
	 * 
	 * @param:
	 * @return:
	 * @since:1.6
	 */
	public void actionPerformed(ActionEvent e) {
		try{
			WaybillInfoVo bean = ui.getBinderWaybill();
			//选择目的站时清空加收费用、加收费率
			bean.setOverTransportFee(null);
			bean.setOverTransportRate(null);
			validate(bean);
			showPickupStationDialog(bean);
		}catch (BusinessException w) {
			if(!"".equals(w.getMessage())){				
				if(i18n.get("foss.gui.creating.showPickupStationDialogAction.MsgBox.failQueryFreightRoute").equals(w.getMessage())){
					MsgBox.showITServiceInfo(w.getMessage());
				}else{
					MsgBox.showInfo(w.getMessage());
				}
			}
		}
	}
	
	/**
	 * 
	 * 验证运输性质、提货方式、目的站是否都填写
	 * @author 102246-foss-shaohongliang
	 * @date 2013-1-24 上午11:12:47
	 */
	private void validate(WaybillInfoVo bean) {
		//变更类型
		String rfcType = bean.getRfcType().getValueCode();
		if(WaybillRfcConstants.RETURN.equals(rfcType)){
			if(bean.getRtnProductCode()==null){// 网点类型标志
				throw new WaybillValidateException(i18n.get("foss.gui.changing.showPickupStationDialogAction.exception.nullProductCode"));
			}
			if(bean.getRtnReceiveMethod()==null){// 提货方式
				throw new WaybillValidateException(i18n.get("foss.gui.changing.showPickupStationDialogAction.exception.nullReceiveMethod"));
			}
		}else if(WaybillRfcConstants.TRANSFER.equals(rfcType)){
			if(bean.getTfrProductCode()==null){// 网点类型标志
				throw new WaybillValidateException(i18n.get("foss.gui.changing.showPickupStationDialogAction.exception.nullProductCode"));
			}
			if(bean.getTfrProductCode()==null){// 提货方式
				throw new WaybillValidateException(i18n.get("foss.gui.changing.showPickupStationDialogAction.exception.nullReceiveMethod"));
			}
		}else{
			if(bean.getProductCode()==null){// 网点类型标志
				throw new WaybillValidateException(i18n.get("foss.gui.changing.showPickupStationDialogAction.exception.nullProductCode"));
			}
			if(bean.getReceiveMethod()==null){// 提货方式
				throw new WaybillValidateException(i18n.get("foss.gui.changing.showPickupStationDialogAction.exception.nullReceiveMethod"));
			}
		}

	}
	/**
	 * 设置预配线路和预计出发时间与预计到达时间
	 * （摄取方法供GIS地图匹配网点使用）
	 * @author 026123-foss-lifengteng
	 * @param ui 
	 * @date 2013-1-14 上午8:49:17
	 */
	public void setLoadLine(WaybillInfoVo bean){	
		//变更类型
		String rfcType = bean.getRfcType().getValueCode();
		if(WaybillRfcConstants.RETURN.equals(rfcType)){
			if (bean.getRtnCustomerPickupOrgCode() != null) {	
				// 查询始发配载部门、最终配载部门以及线路
				queryLodeDepartmentInfo(bean);			
			}
		}else if(WaybillRfcConstants.TRANSFER.equals(rfcType)){
			if (bean.getTfrCustomerPickupOrgCode() != null) {		
				// 查询始发配载部门、最终配载部门以及线路
				queryLodeDepartmentInfo(bean);			
			}
		}else{
			if (bean.getCustomerPickupOrgCode() != null) {	
				/**
				 * 判断是否需要查询产品时效
				 */
				IdentityEffectivePlanVo vo = null;
				//先判定是否开启偏线时效方案的开关
				if(ProductEntityConstants.PRICING_PRODUCT_PARTIAL_LINE.equals(bean.getProductCode().getCode())){
					ConfigurationParamsEntity entity = baseDataService.queryConfigurationParamsByEntity(
							DictionaryConstants.SYSTEM_CONFIG_PARM__PKP,WaybillConstants.OUTER_EFFECTIVE_VERIFIED_CODE,FossConstants.ROOT_ORG_CODE);
					if (entity != null) {
						//判断是否开启开关
						if (FossConstants.YES.equals(entity.getConfValue())) {
							vo = identityEffectivePlan(rfcType,bean);
							if(vo.isExist()){
								// 查询始发配载部门、最终配载部门以及线路
								queryLodeDepartmentInfo(bean);
			    				Date leaveTime = getLeaveTime(vo,bean);
			    				if (leaveTime != null) {
			    					bean.setPreDepartureTime(leaveTime);// 预计出发时间					
			    					bean.setPreCustomerPickupTime(getPickupDeliveryTime(vo,bean));// 预计派送/自提时间	
			    				} else {
			    					// 清空目的站以及预配线路
			    					cleanTargetEmpty(bean);
			    					LOG.debug("未查询到始发线路发车标准，不能获取预计出发时间");
			    					MsgBox.showInfo(i18n.get("foss.gui.creating.showpickupstationdialogaction.nosettime"));    					
			    				}
							}else{
								// 清空目的站以及预配线路
								cleanTargetEmpty(bean);
								LOG.debug("未查询到产品时效，出发部门："+vo.getDepartDeptName()+"，到达部门："+vo.getArriveDetpName()+"，请确认运输性质是否选择正确！");					
								MsgBox.showITServiceInfo(i18n.get("foss.gui.creating.showpickupstationdialogaction.noproducttime",new Object[]{vo.getDepartDeptName(),vo.getArriveDetpName()}));
							}
						}else{
							// 查询始发配载部门、最终配载部门以及线路
							queryLodeDepartmentInfo(bean);
						}
					}else{
						// 查询始发配载部门、最终配载部门以及线路
						queryLodeDepartmentInfo(bean);
					}
				}else if(isSearchProductTime(bean.getProductCode().getCode())){
					//先判断时效存不存在(根据ISSUE-3041修改)
					vo = identityEffectivePlan(rfcType,bean);
					if(vo.isExist()){
						// 查询始发配载部门、最终配载部门以及线路
						queryLodeDepartmentInfo(bean);
	    				Date leaveTime = getLeaveTime(vo,bean);
	    				if (leaveTime != null) {
	    					bean.setPreDepartureTime(leaveTime);// 预计出发时间					
	    					bean.setPreCustomerPickupTime(getPickupDeliveryTime(vo,bean));// 预计派送/自提时间	
	    				} else {
	    					// 清空目的站以及预配线路
	    					cleanTargetEmpty(bean);
	    					LOG.debug("未查询到始发线路发车标准，不能获取预计出发时间");
	    					MsgBox.showInfo(i18n.get("foss.gui.creating.showpickupstationdialogaction.nosettime"));    					
	    				}
					}else{
						// 清空目的站以及预配线路
						cleanTargetEmpty(bean);
						LOG.debug("未查询到产品时效，出发部门："+vo.getDepartDeptName()+"，到达部门："+vo.getArriveDetpName()+"，请确认运输性质是否选择正确！");					
						MsgBox.showITServiceInfo(i18n.get("foss.gui.creating.showpickupstationdialogaction.noproducttime",new Object[]{vo.getDepartDeptName(),vo.getArriveDetpName()}));
					}
				}else{
					// 查询始发配载部门、最终配载部门以及线路
					queryLodeDepartmentInfo(bean);
				}				
			}		
		
		}
	}
	
	/**
	 * 需不需要查询产品时效
	 * @author WangQianJin
	 * @date 2013-6-26 下午9:23:28
	 */
	private boolean isSearchProductTime(String productCode){
		if (!ProductEntityConstants.PRICING_PRODUCT_AIR_FREIGHT.equals(productCode)
				&& !ProductEntityConstants.PRICING_PRODUCT_FULL_VEHICLE.equals(productCode)) {			
			return true;
		}else{
			return false;
		}
	}
	
	/**
	 * 
	 * 清空目的站以及预配线路
	 * 
	 * @author WangQianJin
	 * @date 2013-6-26 下午06:53:27
	 * @param bean
	 */
	private void cleanTargetEmpty(WaybillPanelVo bean) {
		// 清空提货网点
		bean.setCustomerPickupOrgCode(null);
		// 清空提货网点名称
		bean.setCustomerPickupOrgName("");
		// 清空目的站
		bean.setTargetOrgCode("");
		// 清空长短途
		bean.setLongOrShort(null);
		// 清空预配线路
		bean.setLoadLineName("");
	}
	
	/**
	 * 获取时效相关信息
	 */
	private IdentityEffectivePlanVo identityEffectivePlan(String rfcType,WaybillInfoVo bean){
		IdentityEffectivePlanVo outVo = new IdentityEffectivePlanVo();		
		String departDeptCode = null;
		String departDeptName = null;
		String productCode = null;		
		//如果是内部变更，且有返货记录，并且选择的不是第一条，价格计算至中转费中
	    if(WaybillRfcConstants.INSIDE_CHANGE.equals(rfcType)
	    		&&((bean.getReturnRecordList().size()> 0 || bean.getTransferRecordList().size()> 0))
	    		&& ui.getWaybillInfoPanel().getTransferPanel().getTransportRecordTabPanel().getTransferRecordPanel().getTable().getSelectedRow()==
	    		ui.getWaybillInfoPanel().getTransferPanel().getTransportRecordTabPanel().getTransferRecordPanel().getTable().getRowCount()-1){
	        String createOrgCode=null;	    	
	    	TransferRecordTableModel transferRecordTableModel = ui.getWaybillInfoPanel().getTransferPanel().getTransportRecordTabPanel().getTransferRecordPanel().getTableModel();
	    	if(transferRecordTableModel!=null){
	    		List<TransportRecordVo> vos=transferRecordTableModel.getData();
	    		TransportRecordVo vo=vos.get(ui.getWaybillInfoPanel().getTransferPanel().getTransportRecordTabPanel().getTransferRecordPanel().getTable().getRowCount()-2);
	    		createOrgCode=vo.getCustomerPickupOrgCode().getCode();//获取最终到达部门
	    	}
	    	//获取出发部门
	    	departDeptCode=getTfrStartOrgCode(bean.getRecordProductCode().getCode(),createOrgCode);
	    	SaleDepartmentEntity department=waybillRfcService.querySaleDepartmentByCode(departDeptCode);
	    	if(department!=null){
	    		departDeptName=department.getName();
	    	}else{
	    		//查询偏线空运
	    		OuterBranchEntity outer=waybillRfcService.queryAgencyBranchCompanyInfo(departDeptCode);
	    		if(outer!=null){
	    			departDeptName=outer.getAgentDeptName();
	    		}
	    	}
	    	if(bean.getRecordProductCode()!=null){
	    		productCode=bean.getRecordProductCode().getCode();	
	    	}    	
	    }else{
	    	/**
			 * 判断是否是集中开单
			 */
			if(bean.getPickupCentralized()!=null&&bean.getPickupCentralized()){
				//判断是否是 异地开单
				String waybillNo =  bean.getWaybillNo();
				String createOrgCode = bean.getCreateOrgCode();
				if(StringUtil.isNotEmpty(waybillNo)
						&& StringUtil.isNotEmpty(createOrgCode)){
					WaybillPictureEntity entity = waybillRfcService.queryWaybillPictureByEntity(waybillNo);
					if(entity!=null && FossConstants.NO.equals(entity.getLocal())){
						//根据本属开单组去查询
						createOrgCode = entity.getLocalBillGroupCode();
					}
				}
				SaleDepartmentEntity saleDepartment = waybillRfcService.queryPickupCentralizedDeptCode(createOrgCode);
				if(saleDepartment!=null){
					departDeptCode = saleDepartment.getCode();
					departDeptName = saleDepartment.getName();
				}else{
					saleDepartment = waybillRfcService.queryPickupCentralizedDeptCodeByBillTime(createOrgCode,bean.getBillTime());
					if(saleDepartment!=null){
						departDeptCode = saleDepartment.getCode();
						departDeptName = saleDepartment.getName();
					}
				}
			}else{
				departDeptCode = bean.getReceiveOrgCode();
				departDeptName = bean.getReceiveOrgName();				
			}
			productCode=bean.getProductCode().getCode();		
	    }
	    outVo.setDepartDeptCode(departDeptCode);
		outVo.setDepartDeptName(departDeptName);
		outVo.setProductCode(productCode);
		outVo.setArriveDetpCode(bean.getCustomerPickupOrgCode().getCode());
		outVo.setArriveDetpName(bean.getCustomerPickupOrgCode().getName());		
		/**
		 * 查询是否有产品时效
		 */
		if(ProductEntityConstants.PRICING_PRODUCT_PARTIAL_LINE.equals(bean.getProductCode().getCode())){
			outVo.setExist(waybillRfcService.identityOuterEffectivePlan(departDeptCode,bean.getCustomerPickupOrgCode().getCode(), bean.getProductCode().getCode(), new Date()));
		}else{
			outVo.setExist(waybillRfcService.identityEffectivePlan(departDeptCode, outVo.getArriveDetpCode(), outVo.getProductCode(), new Date()));
		}
		return outVo;
	}
	
	
	/**
	 * 
	 * 查询始发配载部门、最终配载部门以及线路
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-11-22 下午03:54:30
	 */
	private void queryLodeDepartmentInfo(WaybillInfoVo bean) {
		OrgInfoDto dto = new OrgInfoDto();
		try {
			//变更类型
			String rfcType = bean.getRfcType().getValueCode();
			try{
				if(WaybillRfcConstants.RETURN.equals(rfcType)){
					if(bean.getRtnStartOrgCode() == null){
						String orgCode = ui.getOriginWaybill().getCustomerPickupOrgCode() == null ? null: 
							ui.getOriginWaybill().getCustomerPickupOrgCode().getCode();
						if(StringUtil.isNotEmpty(orgCode)){
							SaleDepartmentEntity dept = waybillRfcService.querySaleDepartmentByCode(orgCode);
							if(dept != null){
								orgCode = dept.getName();
							}
						}
						throw new WaybillRfcChangeException(i18n.get("foss.gui.creating.OnLineWaybillService.nullTransferCenter",orgCode));
					}
					
					try{
						dto = waybillRfcService.queryLodeDepartmentInfo(bean.getPickupCentralized(),bean.getRtnStartOrgCode(), bean.getRtnCustomerPickupOrgCode().getCode(), bean.getRtnProductCode().getCode());
					}catch(BusinessException w){
						//to do nothing
					}
					//如果找不到 就用汽运短途再查一次
					if(dto==null){
						try{
							dto = waybillRfcService.queryLodeDepartmentInfo(bean.getPickupCentralized(),bean.getRtnStartOrgCode(), bean.getRtnCustomerPickupOrgCode().getCode(),ProductEntityConstants.PRICING_PRODUCT_SHORT_DISTANCE_ROAD_FREIGHT);
							//SRF 汽运短途
						}catch(BusinessException w){
							//to do nothing
						}
					}
					///如果找不到 就用精准城运再查一次
					if(dto==null){
						try{
							dto = waybillRfcService.queryLodeDepartmentInfo(bean.getPickupCentralized(),bean.getRtnStartOrgCode(), bean.getRtnCustomerPickupOrgCode().getCode(),ProductEntityConstants.PRICING_PRODUCT_SHORT_DISTANCE_FAST_FREIGHT);
							// 精准城运
						}catch(BusinessException w){
							//to do nothing
						}
					}
					
				}else if(WaybillRfcConstants.TRANSFER.equals(rfcType)){
					if(bean.getTfrStartOrgCode() == null){
						String orgCode = ui.getOriginWaybill().getCustomerPickupOrgCode() == null ? null: 
							ui.getOriginWaybill().getCustomerPickupOrgCode().getCode();
						if(StringUtil.isNotEmpty(orgCode)){
							SaleDepartmentEntity dept = waybillRfcService.querySaleDepartmentByCode(orgCode);
							if(dept != null){
								orgCode = dept.getName();
							}
						}
						throw new WaybillRfcChangeException(i18n.get("foss.gui.creating.OnLineWaybillService.nullTransferCenter",orgCode));
					}

					try{
						dto = waybillRfcService.queryLodeDepartmentInfo(bean.getPickupCentralized(),bean.getTfrStartOrgCode(), bean.getTfrCustomerPickupOrgCode().getCode(), bean.getTfrProductCode().getCode());
					}catch(BusinessException w){
						//to do nothing
					}
					//如果找不到 就用汽运短途再查一次
					if(dto==null){
						try{
							dto = waybillRfcService.queryLodeDepartmentInfo(bean.getPickupCentralized(),bean.getTfrStartOrgCode(), bean.getTfrCustomerPickupOrgCode().getCode(),ProductEntityConstants.PRICING_PRODUCT_SHORT_DISTANCE_ROAD_FREIGHT);
							//SRF 汽运短途
						}catch(BusinessException w){
							//to do nothing
						}
					}
					///如果找不到 就用精准城运再查一次
					if(dto==null){
						try{
							dto = waybillRfcService.queryLodeDepartmentInfo(bean.getPickupCentralized(),bean.getTfrStartOrgCode(), bean.getTfrCustomerPickupOrgCode().getCode(),ProductEntityConstants.PRICING_PRODUCT_SHORT_DISTANCE_FAST_FREIGHT);
							// 精准城运
						}catch(BusinessException w){
							//to do nothing
						}
					}
				}else{
					 //如果是内部变更，且有返货记录，并且选择的不是第一条，价格计算至中转费中
				    if(WaybillRfcConstants.INSIDE_CHANGE.equals(rfcType)
				    		&&((bean.getReturnRecordList().size()> 0 || bean.getTransferRecordList().size()> 0))
				    		&& ui.getWaybillInfoPanel().getTransferPanel().getTransportRecordTabPanel().getTransferRecordPanel().getTable().getSelectedRow()==
				    		ui.getWaybillInfoPanel().getTransferPanel().getTransportRecordTabPanel().getTransferRecordPanel().getTable().getRowCount()-1){
				        String createOrgCode=null;
				    	
				    	TransferRecordTableModel transferRecordTableModel = ui.getWaybillInfoPanel().getTransferPanel().getTransportRecordTabPanel().getTransferRecordPanel().getTableModel();

				    	if(transferRecordTableModel!=null){
				    		List<TransportRecordVo> vos=transferRecordTableModel.getData();
				    		TransportRecordVo vo=vos.get(ui.getWaybillInfoPanel().getTransferPanel().getTransportRecordTabPanel().getTransferRecordPanel().getTable().getRowCount()-2);
				    		createOrgCode=vo.getCustomerPickupOrgCode().getCode();//获取最终到达部门
				    	}
				    	createOrgCode=getTfrStartOrgCode(bean.getRecordProductCode().getCode(),createOrgCode);
				    	/**
				    	 * 由于查询的时候需要以上一次的到达部门来做出发部门，以非集中开单为条件来查询走货路径（原因：集中开单需要查询集中开单组的部门，多次修改目的站不会出现会选择一个开单组来做最终目的站）
				    	 */
						dto = waybillRfcService.queryLodeDepartmentInfo(false,createOrgCode, bean.getCustomerPickupOrgCode().getCode(), bean.getRecordProductCode().getCode());
				    	
				    }else{
				    	if(bean.getPickupCentralized()!=null&&bean.getPickupCentralized()){
				    		String waybillNo =  bean.getWaybillNo();
							String createOrgCode = bean.getCreateOrgCode();
							if(StringUtil.isNotEmpty(waybillNo)
									&& StringUtil.isNotEmpty(createOrgCode)){
								WaybillPictureEntity entity = waybillRfcService.queryWaybillPictureByEntity(waybillNo);
								if(entity!=null && FossConstants.NO.equals(entity.getLocal())){
									//根据本属开单组去查询
									createOrgCode = entity.getLocalBillGroupCode();
								}
							}
							dto = waybillRfcService.queryLodeDepartmentInfo(bean.getPickupCentralized(),createOrgCode, bean.getCustomerPickupOrgCode().getCode(), bean.getProductCode().getCode());
						}else{
							dto = waybillRfcService.queryLodeDepartmentInfo(bean.getPickupCentralized(),bean.getReceiveOrgCode(), bean.getCustomerPickupOrgCode().getCode(), bean.getProductCode().getCode());
						}
				    }
					
				}
			}catch(BusinessException w){
				bean.setOrgInfoDto(dto);
				
				if(!WaybillRfcConstants.RETURN.equals(rfcType)  && !WaybillRfcConstants.TRANSFER.equals(rfcType)){
					bean.setLoadOrgCode("");// 配载部门编号
					bean.setLoadOrgName("");// 配载部门名称
				}
				bean.setLastLoadOrgCode("");// 最终配载部门编号
				bean.setLastLoadOrgName("");// 最终配载部门名称
				bean.setPackageOrgCode("");// 代打木架部门编码
				bean.setPackingOrganizationName("");// 代打木架部门名称
				bean.setDoPacking("");// 是否可以打木架
				bean.setLastOutLoadOrgCode("");//最终配置外场
				throw w;
			}
			//暂存走货线路，便于提交时验证
			bean.setOrgInfoDto(dto);
//			if (dto == null || dto.getFreightRoute() == null) {
			if (dto == null) {
				MsgBox.showInfo(i18n.get("foss.gui.creating.showPickupStationDialogAction.MsgBox.failQueryFreightRoute"));
			} else {
				if(WaybillRfcConstants.RETURN.equals(rfcType)){
				
					bean.setTransferStartOrgCode(bean.getRtnStartOrgCode());
					String regionName = waybillRfcService.queryDeptNameByCode(bean.getRtnStartOrgCode());
					if(regionName!=null){
						bean.setTransferStartOrgName(regionName);
					}
					
				}else if(WaybillRfcConstants.TRANSFER.equals(rfcType)){
					
					bean.setTransferStartOrgCode(bean.getTfrStartOrgCode());
					String regionName = waybillRfcService.queryDeptNameByCode(bean.getTfrStartOrgCode());
					if(regionName!=null){
						bean.setTransferStartOrgName(regionName);
					}
					
				}else{
					bean.setLoadLineName(dto.getRouteLineName());// 配载线路名称
					if(dto.getFreightRoute() != null)
					{
						if(StringUtil.isEmpty(dto.getFreightRoute().getVirtualCode())){
							bean.setLoadLineCode("NOTEXISTS");
						}else{
							bean.setLoadLineCode(dto.getFreightRoute().getVirtualCode());// 配载线路编码
						}
					}else
					{
						bean.setLoadLineCode("NOTEXISTS");
					}

					bean.setLoadOrgCode(dto.getFirstLoadOrgCode());// 配载部门编号
					bean.setLoadOrgName(dto.getFirstLoadOrgName());// 配载部门名称
				}
				bean.setLastLoadOrgCode(dto.getLastLoadOrgCode());// 最终配载部门编号
				bean.setLastLoadOrgName(dto.getLastLoadOrgName());// 最终配载部门名称
				if(dto.getFreightRoute() != null)
				{
					bean.setPackageOrgCode(dto.getFreightRoute().getPackingOrganizationCode());// 代打木架部门编码
					bean.setPackingOrganizationName(dto.getFreightRoute().getPackingOrganizationName());// 代打木架部门名称
					bean.setDoPacking(dto.getFreightRoute().getDoPacking());// 是否可以打木架
				}
				bean.setLastOutLoadOrgCode(dto.getLastOutLoadOrgCode());//最终配置外场
//				bean.setGoodsTypeIsAB(dto.getGoodsTypeIsAB());//是否AB货
				bean.setPickupCentralizedDeptCode(dto.getPickupCentralizedDeptCode());
				//设置AB货编辑状态
				//setGoodsTypeAB(bean);
			}
		} catch(BaseInfoInvokeException e) {
			MsgBox.showInfo(e.getMessage());
		}
	}
	/**
	 * 
	 * 获取转运起始网点
	 * @author 102246-foss-shaohongliang
	 * @date 2012-12-25 上午10:35:59
	 */
	private String getTfrStartOrgCode(String procuctCode,String lastLoadOrgCode) {

		
	String 	tfrStartOrgCode = WaybillRfcServiceFactory.getWaybillRfcService().queryStationDeliverOrgCode(lastLoadOrgCode);
		
	


		return tfrStartOrgCode;
	}
	/**
	 * 
	 * 设置AB货是否可以编辑
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2013-1-17 下午03:53:40
	 */
	/*private void setGoodsTypeAB(WaybillPanelVo bean) {
		if(bean.getGoodsTypeIsAB())
		{
			
			//若更换目的站后，且可选A、B货，则进行一次强制B货判断
			if(CommonUtils.getGoodsTypeIsB(bean)){
				ui.getWaybillInfoPanel().getGoodsPanel().getRdoB().setSelected(true);
				ui.getWaybillInfoPanel().getGoodsPanel().getRdoA().setEnabled(false);
				ui.getWaybillInfoPanel().getGoodsPanel().getRdoB().setEnabled(false);
			 }else{
				 //更换目的站，不符合强制B货
				 //若更换目的站之前的ab按钮为可选状态，不执行任何操作
				 if(ui.getWaybillInfoPanel().getGoodsPanel().getRdoA().isEnabled() && ui.getWaybillInfoPanel().getGoodsPanel().getRdoB().isEnabled()){
					 //Do Nothing-----------
				 }else{
				//更换目的站之前的ＡＢ按钮式不可选状态，则设置为可用状态，并重置选项（新建或者强制Ｂ货后更改目的站操作所致）
					 ui.getWaybillInfoPanel().getGoodsPanel().getRdoA().setEnabled(true);
					 ui.getWaybillInfoPanel().getGoodsPanel().getRdoB().setEnabled(true);
					 ui.getWaybillInfoPanel().getGoodsPanel().getRdoA().setSelected(false);
					 ui.getWaybillInfoPanel().getGoodsPanel().getRdoB().setSelected(false);
				 }
			 }
		}else
		{
			//此处用于若更换目的站后，不可选A、B货，则清空选项
			bean.setGoodsType(null);
			
			ui.getWaybillInfoPanel().getGoodsPanel().getRdoA().setEnabled(false);
			ui.getWaybillInfoPanel().getGoodsPanel().getRdoB().setEnabled(false);
		}
		
	}*/

	/**
	 * 显示提货网点查询窗口
	 * @author 025000-FOSS-helong
	 * @date 2012-11-12 下午07:54:48
	 */
	private void showPickupStationDialog(WaybillInfoVo bean) {
		QueryPickupPointDto dto = new QueryPickupPointDto();
		//最终合票方式
		String finalFreightMethod=null;
		String finalFreightMethodId=null;
		//变更类型
		String rfcType = bean.getRfcType().getValueCode();
		if(WaybillRfcConstants.RETURN.equals(rfcType)){
			dto.setDestNetType(bean.getRtnProductCode().getDestNetType());// 网点类型标志
			dto.setPickUpType(bean.getRtnReceiveMethod().getValueCode());// 提货方式
			dto.setTransType(bean.getRtnProductCode().getCode());
			//here code need get from ui, not from bean. as ui's data is new, bean's data is kept correct by BindingFactory
			//targetOrgCode
			dto.setOrgSimpleName(ui.getWaybillInfoPanel().getTransferPanel().getTransferTabPanel().getTransferInfoPanel().getTxtTransferDestination().getText());// 目的站
			dto.setSource(WaybillRfcConstants.RETURN);			
		}else if(WaybillRfcConstants.TRANSFER.equals(rfcType)){
			dto.setDestNetType(bean.getTfrProductCode().getDestNetType());// 网点类型标志
			dto.setPickUpType(bean.getTfrReceiveMethod().getValueCode());// 提货方式
			dto.setTransType(bean.getTfrProductCode().getCode());
			//here code need get from ui, not from bean. as ui's data is new, bean's data is kept correct by BindingFactory
			//targetOrgCode
			dto.setOrgSimpleName(ui.getWaybillInfoPanel().getTransferPanel().getReturnTabPanel().getReturnInfoPanel().getTxtReturnDestination().getText());// 目的站
			dto.setSource(WaybillRfcConstants.TRANSFER);			
			if(bean.getTfrFreightMethod()!=null){
				finalFreightMethod=bean.getTfrFreightMethod().getValueCode();
				finalFreightMethodId=bean.getTfrFreightMethod().getId();
			}
			if (ProductEntityConstants.PRICING_PRODUCT_AIR_FREIGHT.equals(bean.getTfrProductCode().getCode())) {				
				// 转运航班类型不能为空，因为获取转运费率时，空运必须要有航班类型
				if (null == bean.getTfrFlightNumberType() || null == bean.getTfrFlightNumberType().getValueCode()) {
					throw new WaybillValidateException(i18n.get("foss.gui.creating.calculateAction.exception.nullFlightNumberType"));
				}
			}
		}else{
			dto.setDestNetType(bean.getProductCode().getDestNetType());// 网点类型标志
			dto.setPickUpType(bean.getReceiveMethod().getValueCode());// 提货方式
			dto.setTransType(bean.getProductCode().getCode());
			//here code need get from ui, not from bean. as ui's data is new, bean's data is kept correct by BindingFactory
			//targetOrgCode
			dto.setOrgSimpleName(ui.getWaybillInfoPanel().getTransferPanel().getTransportInfoPanel().getTxtDestination().getText());// 目的站
			dto.setSource(WaybillRfcConstants.WAYBILL_RFC);
			if(bean.getFreightMethod()!=null){
				finalFreightMethod=bean.getFreightMethod().getValueCode();
				finalFreightMethodId=bean.getFreightMethod().getId();
			}			
		}
		// 出发营业部
		dto.setReceiveOrgCode(bean.getReceiveOrgCode());
		dto.setCurDate(new Date());
		// 设置营业部的到达属性
		dto.setArrive(FossConstants.YES);
		/**
		 * 判断是否为空运，且配载类型是否为单独开单，如果是，则提货网点只显示机场
		 */
		if (ProductEntityConstants.PRICING_PRODUCT_AIR_FREIGHT.equals(bean.getFinalProductCode().getCode())) {
			// 非空判断（无意中发现的一个空提针bug，顺手就加了一个非校验）
			if (null == finalFreightMethod || null == finalFreightMethodId) {
				throw new WaybillValidateException(i18n.get("foss.gui.creating.showPickupStationDialogAction.exception.notnull"));
			}			
			/**
			 * 单独开单只能选择机场、合大票只能选择代理
			 */
			if (ProductEntityConstants.PRICING_PRODUCT_FREIGNT_DDKD.equals(finalFreightMethod)) {
				dto.setIsAirport(FossConstants.YES);
			}else if(ProductEntityConstants.PRICING_PRODUCT_FREIGNT_HDP.equals(finalFreightMethod)){
				dto.setIsAirport(FossConstants.NO);
			}
		}
		

		//如果是内部变更，且有返货记录，并且选择的不是第一条，价格计算至中转费中
	    if(WaybillRfcConstants.INSIDE_CHANGE.equals(rfcType)
	    		&&((bean.getReturnRecordList().size()> 0 || bean.getTransferRecordList().size()> 0))
	    		&& ui.getWaybillInfoPanel().getTransferPanel().getTransportRecordTabPanel().getTransferRecordPanel().getTable().getSelectedRow()==
	    		ui.getWaybillInfoPanel().getTransferPanel().getTransportRecordTabPanel().getTransferRecordPanel().getTable().getRowCount()-1){
	    	
	    	TransferRecordTableModel transferRecordTableModel = ui.getWaybillInfoPanel().getTransferPanel().getTransportRecordTabPanel().getTransferRecordPanel().getTableModel();
	    
	    	
	    	if(transferRecordTableModel!=null){
	    		List<TransportRecordVo> vos=transferRecordTableModel.getData();
	    		TransportRecordVo vo=vos.get(ui.getWaybillInfoPanel().getTransferPanel().getTransportRecordTabPanel().getTransferRecordPanel().getTable().getRowCount()-2);
	    		dto.setReceiveOrgCode(vo.getCustomerPickupOrgCode().getCode());//获取最终到达部门
	    	}
	    	
			dto.setDestNetType(bean.getRecordProductCode().getDestNetType());// 目的站多变更-网点类型标志
			dto.setPickUpType(bean.getRecordReceiveMethod().getValueCode());// 目的站多变更-提货方式
			dto.setTransType(bean.getRecordProductCode().getCode());// // 目的站多变更-产品编码
	    	
	    }
		
	    if(bean.getSpecialValueAddedServiceType() != null && StringUtils.isNotBlank(bean.getSpecialValueAddedServiceType().getValueCode()))
	    {
		    dto.setIsHome(FossConstants.YES);
	    }
		
		// 创建弹出窗口
		QueryPickupStationDialog dialog = new QueryPickupStationDialog(dto);
		// 剧中显示弹出窗口
		WindowUtil.centerAndShow(dialog);
		BranchVo branchVO = dialog.getBranchVO();
		setDialogData(branchVO,bean);
	}
	
	/**
	 * 给相关控件赋值
	 * @author 026123-foss-lifengteng
	 * @date 2013-1-14 下午5:20:07
	 */
	public void setDialogData(BranchVo branchVO,WaybillInfoVo bean) {
		String productCode=null;
		if (branchVO != null && bean.getRfcType()!=null) {
			//设置是否二级网点以及网点模式
			bean.setIsTwoLevelNetwork(branchVO.getIsTwoLevelNetwork());
			bean.setNetworkModel(branchVO.getNetworkModel());
			//是否加盟网点
			bean.setIsLeagueSaledept(branchVO.getIsLeagueSaledept());
			//变更类型
			String rfcType = bean.getRfcType().getValueCode();
			if(WaybillRfcConstants.RETURN.equals(rfcType)){
				bean.setRtnCustomerPickupOrgCode(branchVO);
				bean.setRtnCustomerPickupOrgName(branchVO.getName());
				// 反写目的站:如果目的站不为空，则选择好网点后将其设置为部门简称
				BusinessUtils bu = new BusinessUtils();				
				if(bean.getRtnProductCode()!=null){
					productCode=bean.getRtnProductCode().getCode();
				}
				String simpleName = bu.getSimpleOrgName(branchVO.getCode(), productCode, bean.getBillTime());
				if(!"".equals(simpleName)){
					bean.setRtnTargetOrgCode(simpleName);
				}else{
					//bean.setRtnTargetOrgCode(branchVO.getTargetOrgName());
				    /**
				     * 获取返货目的地
				     */
				    simpleName = i18n.get("foss.gui.common.businessUtils.simpleName.label");
				    bean.setRtnTargetOrgCode(simpleName);
				}
				//如果不是偏线，才获取价格，因为偏线分两段计费，此处获取不到最终配载部门，下面会对偏线进行处理
				if(!WaybillConstants.HIGHWAYS_REFERRALS.equals(productCode)){
					ui.getBindingListener().returnCustomerPickupOrgNameListener(bean);
				}
			}else if(WaybillRfcConstants.TRANSFER.equals(rfcType)){
				bean.setTfrCustomerPickupOrgCode(branchVO);
				bean.setTfrCustomerPickupOrgName(branchVO.getName());
				// 反写目的站:如果目的站不为空，则选择好网点后将其设置为部门简称
				BusinessUtils bu = new BusinessUtils();				
				if(bean.getTfrProductCode()!=null){
					productCode=bean.getTfrProductCode().getCode();
				}
				//zxy 20130913 BUG-54792 start 修改：当转运性质是偏线时，查询外网机构，否则查内网机构
				String simpleName = bu.getSimpleOrgName(branchVO.getCode(), productCode, bean.getBillTime());
				//zxy 20130913 BUG-54792 end 修改：当转运性质是偏线时，查询外网机构，否则查内网机构
				if(!"".equals(simpleName)){
					bean.setTfrTargetOrgCode(simpleName);
				}else{
					//bean.setTfrTargetOrgCode(branchVO.getTargetOrgName());
				    /**
				     * 获取转运目的地
				     */
				    simpleName = i18n.get("foss.gui.common.businessUtils.simpleName.label");
				    bean.setTfrTargetOrgCode(simpleName);
				}
				//如果不是偏线，才获取价格，因为偏线分两段计费，此处获取不到最终配载部门，下面会对偏线进行处理
				if(!WaybillConstants.HIGHWAYS_REFERRALS.equals(productCode)){
					ui.getBindingListener().transferCustomerPickupOrgNameListener(bean);	
				}
			}else{
				 //如果是内部变更，且有返货记录，并且选择的不是第一条，价格计算至中转费中
			    if(WaybillRfcConstants.INSIDE_CHANGE.equals(rfcType)
			    		&&((bean.getReturnRecordList().size()> 0 || bean.getTransferRecordList().size()> 0))
			    		&& ui.getWaybillInfoPanel().getTransferPanel().getTransportRecordTabPanel().getTransferRecordPanel().getTable().getSelectedRow()==
			    		ui.getWaybillInfoPanel().getTransferPanel().getTransportRecordTabPanel().getTransferRecordPanel().getTable().getRowCount()-1){
			    	bean.setRecordCustomerPickupOrgCode(branchVO);
					bean.setRecordCustomerPickupOrgName(branchVO.getName());
					// 反写目的站:如果目的站不为空，则选择好网点后将其设置为部门简称
					BusinessUtils bu = new BusinessUtils();
					if(bean.getRecordProductCode()!=null){
						productCode=bean.getRecordProductCode().getCode();
					}
					String simpleName = bu.getSimpleOrgName(branchVO.getCode(), productCode, bean.getBillTime());
					if(!"".equals(simpleName)){
						bean.setRecordTargetOrgCode(simpleName);
					}else{
						bean.setRecordTargetOrgCode(branchVO.getTargetOrgName());
					}
					
					
			    }
			    	bean.setCustomerPickupOrgCode(branchVO);
					bean.setCustomerPickupOrgName(branchVO.getName());
					// 反写目的站:如果目的站不为空，则选择好网点后将其设置为部门简称
					BusinessUtils bu = new BusinessUtils();
					if(bean.getProductCode()!=null){
						productCode=bean.getProductCode().getCode();
					}
					String simpleName = bu.getSimpleOrgName(branchVO.getCode(), productCode, bean.getBillTime());
					if(!"".equals(simpleName)){
						bean.setTargetOrgCode(simpleName);
					}else{
						bean.setTargetOrgCode(branchVO.getTargetOrgName());
					}
			}
			//判断目的站是否可以签收单返单和代收货款，如不能，弹出对话框 254615-mabinliang
			if(WaybillConstants.AIR_FLIGHT.equals(bean.getProductCode().getCode())||
					WaybillConstants.AIR_FREIGHT.equals(bean.getProductCode().getCode()) ||
					WaybillConstants.HIGHWAYS_REFERRALS.equals(bean.getProductCode().getCode())){
				if(WaybillConstants.HIGHWAYS_REFERRALS.equals(bean.getProductCode().getCode())){
				//偏线校验
				OuterBranchEntity outerBranchEntityArr = BaseDataServiceFactory.getBaseDataService().queryOuterBranchByBranchCode(bean.getCustomerPickupOrgCode().getCode(),null);		
				
				if(outerBranchEntityArr !=null){
					//营业部是否支持签收单返单
					if(FossConstants.NO.equals(outerBranchEntityArr.getReturnBill())){
						if(bean.getReturnBillType() != null && !bean.getReturnBillType().getValueCode().equals(WaybillConstants.NOT_RETURN_BILL)){
							//throw new WaybillValidateException(i18n.get("foss.gui.changing.waybillDescriptor.receiver.cannotMoneyAndReturnBill"));
							MsgBox.showInfo(i18n.get("foss.gui.changing.waybillDescriptor.receiver.cannotMoneyAndReturnBill")); 
						}
					}
					//判断是否能开代收货款
					if(FossConstants.NO.equals(outerBranchEntityArr.getHelpCharge())){
					if(bean.getCodAmount() !=null && bean.getCodAmount().compareTo(BigDecimal.ZERO)>0){
						MsgBox.showInfo(i18n.get("foss.gui.changing.waybillDescriptor.receiver.cannotMoneyAndReturnBill"));
						}
			          }
					}
				}
				
			}else{
				    SaleDepartmentEntity saleDeprtTemp =waybillRfcService.querySaleDepartmentByCode(bean.getCustomerPickupOrgCode().getCode());
					
					if(saleDeprtTemp != null){
					//营业部是否支持签收单返单
					if(FossConstants.NO.equals(saleDeprtTemp.getCanReturnSignBill())){
						if(bean.getReturnBillType() != null && !bean.getReturnBillType().getValueCode().equals(WaybillConstants.NOT_RETURN_BILL)){
							MsgBox.showInfo(i18n.get("foss.gui.changing.waybillDescriptor.receiver.cannotMoneyAndReturnBill"));	
						}
					}
					//判断是否能开代收货款
					if(FossConstants.NO.equals(saleDeprtTemp.getCanAgentCollected())){
					if(bean.getCodAmount() !=null && bean.getCodAmount().compareTo(BigDecimal.ZERO)>0){
						MsgBox.showInfo(i18n.get("foss.gui.changing.waybillDescriptor.receiver.cannotMoneyAndReturnBill"));
						}
			        }
			    }
			}
			// 判断是否可以开代收货款
			canAgentCollected(branchVO, bean);
			//ui.incrementPanel.getTxtCashOnDelivery().setEnabled(true);
			//定价体系优化项目POP-548
//			// 查询其他费用
//			queryOtherChargeData(bean);
//			// 计算其他费用合计
//			calculateOtherCharge(bean);
			// 把装卸费清空
			//bean.setServiceFee(BigDecimal.ZERO);
			
			//临时使用
			if(bean.getTargetOrgCode() == null || "".equals(bean.getTargetOrgCode()))
			{
				bean.setTargetOrgCode(i18n.get("foss.gui.creating.showPickupStationDialogAction.forShort.label"));
			}
			
			setCanAgentCollectedOrServiceFee( branchVO, bean);
			
			/**
			 * 在网点目的站基础资料中有
			 * '取消到达日期'，如果当前日期在'取消到达日期'之前，那么提示"xx营业部将于xx年xx月xx日临时取消到达，届时货物将转至xx营业部，请做好客户解释工作！"（其中第一个xx营业部，为当前营业部、第二个xx营业部为网点目的站基础资料中的'转货部门'，xx年xx月xx日为'取消到达日期'
			 * ）
			 */
		    if(branchVO.getCancelArrivalDate()!=null&&branchVO.getTransferGoodDept()!=null){
		    	/**
		    	 * 转货部门
		    	 */
		    	SaleDepartmentEntity saleDepartmentEntity=	WaybillRfcServiceFactory.getWaybillRfcService().querySaleDeptByCode(branchVO.getTransferGoodDept());
		    	
		    	/**
		    	 * 取消到达日期
		    	 */
		    	String cancelArrivalDate=DateUtils.getChDate(branchVO.getCancelArrivalDate());
		    	/**
		    	 * 转货部门
		    	 */
		    	/**
		    	 * 转货部门
		    	 */
		    	if(saleDepartmentEntity!=null){
		    	 String transferGoodDeptName=saleDepartmentEntity.getName();
		    	 String message=i18n.get("foss.gui.creating.showPickupStationDialogAction.MsgBox.CancelArrive", new Object[]{branchVO.getName(),cancelArrivalDate,transferGoodDeptName});
			     MsgBox.showInfo(message);
		    	}
		    }
			setSaveAndSubmitFalse(ui);
			setLoadLine(bean);
			
			//偏线获取费率需要得到最终配载部门
			if(WaybillConstants.HIGHWAYS_REFERRALS.equals(productCode)){
				if(WaybillRfcConstants.RETURN.equals(rfcType)){				
					ui.getBindingListener().returnCustomerPickupOrgNameListener(bean);
				}else if(WaybillRfcConstants.TRANSFER.equals(rfcType)){
					ui.getBindingListener().transferCustomerPickupOrgNameListener(bean);
				}
			}
			
			// 设置是否可返回签单
			canReturnSignBill(branchVO, bean);
			//ui.getWaybillInfoPanel().getTransferPanel().getTransportInfoPanel().getCombReturnBillType().setEnabled(true);
		}
		
		//修改了提货网点、提货方式时，送货费需要重新计算
		bean.setHandDeliveryFee(null);
		
		/**
		 * FOSS20150818）RFOSS2015052602-梯度保价
		 * @author foss-206860
		 * */
		if(bean.getGoodsWeightTotal() != null && bean.getGoodsVolumeTotal() != null && bean.getCustomerPickupOrgCode() != null){
			//校验发货客户发生变更
			String isUpdateDeliveryCustomer = Common.validateDeliveryCustomer(bean.getDeliveryCustomerCode(),ui);
			bean.setIsUpdateDeliveryCustomer(isUpdateDeliveryCustomer);
			String isYorN = Common.getInsuranceRate(bean);
			if(FossConstants.YES.equals(isYorN)){
				ui.incrementPanel.getTxtInsuranceRate().setEnabled(true);
			}else{
				ui.incrementPanel.getTxtInsuranceRate().setEnabled(false);
			}
		}
	}
	
	
	
	
	/**
	 * 设置返单类别是否可编辑
	 * @author WangQianJin
	 * @date 2013-6-21 下午4:02:47
	 */
	private void canReturnSignBill(BranchVo branchVo, WaybillPanelVo bean) {		
		if(FossConstants.YES.equals(branchVo.getCanReturnSignBill())){			
			ui.getWaybillInfoPanel().getTransferPanel().getTransportInfoPanel().getCombReturnBillType().setEnabled(true);
		}else{
			bean.getReturnBillType().setValueCode(WaybillConstants.NOT_RETURN_BILL);
		    bean.getReturnBillType().setValueName("无需返单");
			ui.getWaybillInfoPanel().getTransferPanel().getTransportInfoPanel().getCombReturnBillType().setEnabled(false);
			ui.getWaybillInfoPanel().getTransferPanel().getTransportInfoPanel().getCombReturnBillType().setSelectedIndex(0);
			
		}		
	}
	
	
	
	/**
	 * 
	 *根据提货网点所在标准城市或收货部门所在标准城市为香港，限制代收货款和装卸费的录入；
	 * @author 026113-foss-linwensheng
	 * @date 2013-3-28 上午10:49:05
	 */
	private void setCanAgentCollectedOrServiceFee(BranchVo branchVO,WaybillPanelVo bean) {

		 String hkPROV = "810000";

		 String hkCITY = "810100";
		try{
		 ConfigurationParamsEntity cityHKCode= getConfigurationParamsEntity(ConfigurationParamsConstants.PKP_CITY_HK_CODE);//城市
		 ConfigurationParamsEntity proHKCode= getConfigurationParamsEntity(ConfigurationParamsConstants.PKP_PROV_HK_CODE);//省份
		 
		 if(cityHKCode!=null&&StringUtils.isNotEmpty(cityHKCode.getConfValue()))
		 {
			 hkCITY= cityHKCode.getConfValue();
		 }
		 
		 if(proHKCode!=null&&StringUtils.isNotEmpty(proHKCode.getConfValue()))
		 {
			 hkPROV= proHKCode.getConfValue();
		 }
		 
		}catch(Exception e)
		{
			// do Nothing
		}
		
		/**
		 * 获取目的站所在城市，如果是香港，设置代收代收货款和装卸费不可录入
		 */
		if (branchVO.getCityCode() != null && hkPROV.equals(branchVO.getCityCode())
				||(bean.getReceiveOrgProvCode() != null && hkCITY.equals(bean.getReceiveOrgProvCode()))// 由于发货部门能取到省份，可以用省份来进行判断
				) {
			setCanAgentCollectedOrServiceFeeFalse(bean);
		} 
	}
	
	
	/**
	 * 获取系统参数
	 * 
	 * @param type
	 * @return
	 */
	private ConfigurationParamsEntity getConfigurationParamsEntity(String type) {
		/**
		 * 根据组织的配置参数查询系统参数实体
		 * 
		 *  组织配置参数-接送货模块使用：DictionaryConstants.SYSTEM_CONFIG_PARM__PKP
		 *  异常转弃货JOB扫描天数：FossConstants.ROOT_ORG_CODE
		 */
		return waybillRfcService.queryConfigurationParamsByEntity(DictionaryConstants.SYSTEM_CONFIG_PARM__PKP, type, FossConstants.ROOT_ORG_CODE);
		
	}
	/**
	 * 
	 * 限制代收货款和装卸费的录入
	 * @param bean
	 * @author 026113-foss-linwensheng
	 * @date 2013-3-28 上午11:08:46
	 */
	private void setCanAgentCollectedOrServiceFeeFalse(WaybillPanelVo bean)
	{
		bean.setCodAmountCanvas("");//收代收货款
		bean.setCodAmount(BigDecimal.ZERO);//收代收货款
		ui.incrementPanel.getTxtCashOnDelivery().setEnabled(false);//收代收货款不可修改
		ui.incrementPanel.getCombRefundType().setEnabled(false);//退款类型
		bean.setServiceFeeCanvas("");//装卸费
		bean.setServiceFee(BigDecimal.ZERO);//装卸费
		ui.incrementPanel.getTxtServiceCharge().setEnabled(false);//装卸费不可修改
	}
	/**
	 * 
	 * 初始化其他费用合计
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-11-7 下午05:12:36
	 */
	private void calculateOtherCharge(WaybillPanelVo bean) {

		
		
		JXTable table = ui.incrementPanel.getTable();
		WaybillOtherCharge model = (WaybillOtherCharge) table.getModel();
		List<OtherChargeVo> data = model.getData();

		if(data != null && !data.isEmpty())
		{
			BigDecimal otherChargeSum = BigDecimal.ZERO;
			// 其他费用合计
			if(!WaybillConstants.INNER_PICKUP.equals(bean.getReceiveMethod().getValueCode())){
				for (OtherChargeVo vo : data) {
					BigDecimal money = new BigDecimal(vo.getMoney());
					otherChargeSum = otherChargeSum.add(money);
				}
			}
			//其他费用
			bean.setOtherFee(otherChargeSum);
			//画布其他费用
			bean.setOtherFeeCanvas(otherChargeSum.toString());
		}
	}

	/**
	 * 
	 * 查询其他费用
	 * @author 025000-FOSS-helong
	 * @date 2013-1-14 上午11:22:50
	 */
	private void queryOtherChargeData(WaybillInfoVo bean) {
		List<ValueAddDto> list = waybillRfcService
				.queryValueAddPriceList(getQueryOtherChargeParam(bean,false));
		
		
		if(list==null||list.isEmpty()){
			list = waybillRfcService
					.queryValueAddPriceList(getQueryOtherChargeParam(bean,true));
		}
		
		List<OtherChargeVo> voList = getOtherChargeList(list);
		if(voList != null)
		{
			if(!voList.isEmpty())
			{
				ui.incrementPanel.setChangeDetail(getAllChargeCompare(voList,bean));				
			}
		}
	}
	
	/**
	 * 
	 * 将原有其他费用与新查询出来其他费用进行比较，然后取他们共同的和不同的(如A集合里面有1和2，B集合里面有2和3，那么取123)
	 * @author WangQianJin
	 * @date 2013-07-12
	 */
	private List<OtherChargeVo> getAllChargeCompare(List<OtherChargeVo> voList,WaybillInfoVo bean){		 
		JXTable table = ui.incrementPanel.getTable();
		WaybillOtherCharge model = (WaybillOtherCharge) table.getModel();
		List<OtherChargeVo> data = model.getData();	
		String rfcType = bean.getRfcType().getValueCode();
		if(!WaybillRfcConstants.TRANSFER.equals(rfcType) && !WaybillRfcConstants.RETURN.equals(rfcType)){
			//删除原来的其他费用，除业务费用以外
			deleleOtherFeeNotInBusFee(data,bean);
		}
		List<OtherChargeVo> allList=data;
		if(data != null && !data.isEmpty()){			
			for(int i=0;i<voList.size();i++){
				OtherChargeVo queryVo = voList.get(i);
				//flag用来表示现有的其他费用中有没有queryVo这个元素，false为没有
				boolean flag=false;
				for(int j=0;j<data.size();j++){
					OtherChargeVo tableVo = data.get(j);
					if(tableVo.getCode().equals(queryVo.getCode())){
						//true表示voList有中已有此元素
						flag=true;
						break;
					}
				}
				//如果没有此元素，则添加到allList里
				if(!flag){
					allList.add(queryVo);
				}
			}
		}else{
			allList=voList;
		}
		return allList;		
	}
	
	/**
	 * 删除原来的其他费用，除业务费用以外
	 * @author WangQianJin
	 * @date 2013-7-23 下午3:45:48
	 */
	private void deleleOtherFeeNotInBusFee(List<OtherChargeVo> oldOtherList,WaybillInfoVo bean){
		if(oldOtherList != null && !oldOtherList.isEmpty()){
			//要删除的除业务费用以外的其他费用
			List<OtherChargeVo> deleteOtherList=new ArrayList<OtherChargeVo>();
			for(OtherChargeVo chargeVo : oldOtherList){		
				//标示业务费用
				boolean flag=false;
				//标示手动添加费用
				boolean flagMan=false;
				//循环业务费用
				for (BusinessCostEnum busFee : BusinessCostEnum.values()) {
					//判断其他费用是否是业务费用
					if (busFee.getCode().equals(chargeVo.getCode())) {
						flag=true;
						break;
	    			}
				}
				//循环手动添加的费用
				if(bean.getManualFeeList()!=null && bean.getManualFeeList().size()>0){
					for(OtherChargeVo manVo : bean.getManualFeeList()){
						if(manVo!=null && manVo.getCode()!=null && manVo.getCode().equals(chargeVo.getCode())){
							flagMan=true;
							break;
						}
					}		
				}				
				//不是业务费用并且不是手动添加的费用，则添加都删除列表中
				if(!flag && !flagMan){
					deleteOtherList.add(chargeVo);
				}
		    }
			//删除原来的除业务费用以外的其他费用
			if(deleteOtherList.size()>0){
				oldOtherList.removeAll(deleteOtherList);
			}		    
		}
	}
	
	/**
	 * 
	 * 将原有其他费用与新查询出来其他费用进行比较，然后删除重复的项
	 * @author 025000-FOSS-helong
	 * @date 2013-1-14 下午03:03:01
	 */
	private List<OtherChargeVo> otherChargeCompare(List<OtherChargeVo> voList){
		JXTable table = ui.incrementPanel.getTable();
		WaybillOtherCharge model = (WaybillOtherCharge) table.getModel();
		List<OtherChargeVo> data = model.getData();
		if(data != null){
			if(!data.isEmpty()){
				for(int i=0;i<voList.size();i++){
					OtherChargeVo queryVo = voList.get(i);
					for(int j=0;j<data.size();j++){
						OtherChargeVo tableVo = data.get(j);
						if(tableVo.getChargeName().equals(queryVo.getChargeName())
								|| tableVo.getCode().equals(queryVo.getCode()) ){
							data.remove(j);
							data.add(j,queryVo);
						}
					}
				}
				return data;
			}else{
				return voList;
			}
		}else
		{
			return voList;
		}
	}
	 

	/**
	 * 
	 * 获取其他费用查询参数
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-11-16 上午11:02:10
	 */
	private QueryBillCacilateValueAddDto getQueryOtherChargeParam(WaybillPanelVo bean2,boolean isGetCurrentPrice) {
		WaybillInfoVo bean = (WaybillInfoVo)bean2;
		
		QueryBillCacilateValueAddDto queryDto = new QueryBillCacilateValueAddDto();
		queryDto.setOriginalOrgCode(bean.getReceiveOrgCode());// 出发部门CODE
		queryDto.setDestinationOrgCode(bean.getFinalCustomerPickupOrgCode().getCode());// 到达部门CODE
		queryDto.setProductCode(bean.getFinalProductCode().getCode());// 产品CODE
		queryDto.setGoodsTypeCode(null);// 货物类型CODE
		queryDto.setChannelCode(bean.getOrderChannel());//设置CRM渠道
		if(isGetCurrentPrice){
			queryDto.setReceiveDate(null);// 营业部收货日期（可选，无则表示当前日期）
		}else{
			queryDto.setReceiveDate(bean.getBillTime());// 营业部收货日期（可选，无则表示当前日期）
		}
		queryDto.setWeight(BigDecimal.ZERO);// 重量
		queryDto.setVolume(BigDecimal.ZERO);// 体积
		queryDto.setOriginnalCost(BigDecimal.ZERO);// 原始费用
		queryDto.setFlightShift(null);// 航班号
		queryDto.setLongOrShort(bean.getLongOrShort());// 长途 还是短途
		queryDto.setSubType(null);// 为费用类型名称（综合信息费，燃油附加费，中转费等）
		queryDto.setCurrencyCdoe(FossConstants.CURRENCY_CODE_RMB);// 币种
		queryDto.setPricingEntryCode(PriceEntityConstants.PRICING_CODE_QT);// 计价条目CODE
		queryDto.setPricingEntryName(null);// 计价名称
		return queryDto;
	}
	
	/**
	 * 
	 * 将查询出的其他费用设置到表格list中
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-11-16 上午11:00:49
	 */
	private List<OtherChargeVo> getOtherChargeList(List<ValueAddDto> list) {
		List<OtherChargeVo> voList = new ArrayList<OtherChargeVo>();

		if(list != null)
		{
			for (ValueAddDto dto : list) {
				OtherChargeVo vo = new OtherChargeVo();
				if(dto.getCandelete() != null && !BooleanConvertYesOrNo.stringToBoolean(dto
						.getCandelete()))
				{
					// 费用编码
					vo.setCode(dto.getSubType());
					// 名称
					vo.setChargeName(dto.getSubTypeName());
					// 归集类别
					vo.setType(dto.getBelongToPriceEntityName());
					// 描述
					vo.setDescrition(dto.getPriceEntityCode());
					// 金额
					vo.setMoney(dto.getCaculateFee().toString());
					// 上限
					vo.setUpperLimit(dto.getMaxFee().toString());
					// 下限
					vo.setLowerLimit(dto.getMinFee().toString());
					// 是否可修改
					vo.setIsUpdate(BooleanConvertYesOrNo.stringToBoolean(dto
							.getCanmodify()));
					// 是否可删除
					vo.setIsDelete(BooleanConvertYesOrNo.stringToBoolean(dto
							.getCandelete()));
					vo.setId(dto.getId());
					voList.add(vo);
				}
			}
		}
		return voList;
	}
	
	
	/**
	 * 
	 * 判断此网点是否可以开代收货款
	 * @author 025000-FOSS-helong
	 * @date 2013-1-7 下午04:07:04
	 */
	private void canAgentCollected(BranchVo branchVo, WaybillPanelVo bean) {
		//是否可代收货款
		bean.setCanAgentCollected(branchVo.getCanAgentCollected());
		//是否可货到付款
		bean.setArriveCharge(branchVo.getArriveCharge());
		if (FossConstants.YES.equals(bean.getCanAgentCollected())) {
			// 代收货款金额
			ui.incrementPanel.getTxtCashOnDelivery().setEnabled(true);
			// 代收货款类型
			ui.incrementPanel.getCombRefundType().setEnabled(true);
		} else {
			// 代收货款金额
			ui.incrementPanel.getTxtCashOnDelivery().setEnabled(false);
			// 代收货款类型
			ui.incrementPanel.getCombRefundType().setEnabled(false);
			// 清理代收货款信息
			cleanCodInfo(bean);
		}
	}
	
	/**
	 * 
	 * 清理代收货款信息
	 * @author 025000-FOSS-helong
	 * @date 2013-1-14 下午05:16:21
	 */
	private void cleanCodInfo(WaybillPanelVo bean)
	{
		//清理银行信息
		cleanBankInfo(bean);	
		// 代收货款金额
		bean.setCodAmount(BigDecimal.ZERO);
		// 代收货款费率
		bean.setCodRate(BigDecimal.ZERO);
		// 代收货款手续费
		bean.setCodFee(BigDecimal.ZERO);
		//代收货款ID
		bean.setCodId("");
		//代收货款编码
		bean.setCodCode("");
		// 画布-代收货款金额
		bean.setCodAmountCanvas(BigDecimal.ZERO.toString());
		//将退款类型设置为空
		setRefundType(bean,ui);
	}
	
	/**
	 * 
	 * 获得预计派送/提货时间
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-11-16 下午02:17:31
	 */
	private Date getPickupDeliveryTime(IdentityEffectivePlanVo vo,WaybillPanelVo bean) {
		String strOrgCode=vo.getDepartDeptCode();
//		OrgAdministrativeInfoEntity dept = user.getEmployee().getDepartment();
//		String strOrgCode = "";
//		if(bean.getPickupCentralized()!=null&&bean.getPickupCentralized()){
//			strOrgCode = bean.getPickupCentralizedDeptCode();
//		}else{
//			strOrgCode = dept.getCode();
//		}
		EffectiveDto effectiveDto = new EffectiveDto();
		if (isPickup(bean)) {
			effectiveDto = waybillRfcService.searchPreSelfPickupTime(strOrgCode, bean.getCustomerPickupOrgCode().getCode(),vo.getProductCode(), bean.getPreDepartureTime(), new Date());
			if (effectiveDto != null) {
				bean.setLongOrShort(effectiveDto.getLongOrShort());
				return effectiveDto.getSelfPickupTime();
			} else {
				MsgBox.showInfo(i18n.get("foss.gui.creating.showPickupStationDialogAction.MsgBox.failQueryTime"));
				return null;
			}

		} else {
			effectiveDto = waybillRfcService.searchPreDeliveryTime(strOrgCode, bean.getCustomerPickupOrgCode().getCode(), vo.getProductCode(), bean.getPreDepartureTime(), new Date());
			if (effectiveDto != null) {
				bean.setLongOrShort(effectiveDto.getLongOrShort());
				return effectiveDto.getDeliveryDate();
			} else {
				MsgBox.showInfo(i18n.get("foss.gui.creating.showPickupStationDialogAction.MsgBox.failQueryTime"));
				return null;
			}

		}
	}
	
	/**
	 * 
	 * 判断提货方式是否自提
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-11-21 上午09:46:55
	 */
	private Boolean isPickup(WaybillPanelVo bean) {
		String code = bean.getReceiveMethod().getValueCode();
		if (WaybillConstants.SELF_PICKUP.equals(code) || WaybillConstants.INNER_PICKUP.equals(code) || WaybillConstants.AIR_SELF_PICKUP.equals(code) || WaybillConstants.AIR_PICKUP_FREE.equals(code)
				|| WaybillConstants.AIRPORT_PICKUP.equals(code))

		{
			return true;
		} else {
			return false;
		}
	}
	
	/**
	 * 
	 * 获得预计出发时间
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-11-16 下午02:17:31
	 */
	private Date getLeaveTime(IdentityEffectivePlanVo vo,WaybillPanelVo bean) {
//		String strOrgCode = "";
//		if(bean.getPickupCentralized()!=null&&bean.getPickupCentralized()){
//			strOrgCode = bean.getPickupCentralizedDeptCode();
//		}else{
//			strOrgCode = bean.getReceiveOrgCode();
//		}
		Date leaveTime = waybillRfcService.searchPreLeaveTime(vo.getDepartDeptCode(), bean.getLoadOrgCode(), vo.getProductCode(), new Date());
		return leaveTime;
	}
	
	/**
	 * 功能：set ui
	 * 
	 * @param:
	 * @return:
	 * @since:1.6
	 */
	public void setInjectUI(WaybillRFCUI ui) {
		this.ui = ui;
		
	}
	
	

	/**
	 * 
	 * 设置保存按钮与提交按钮不可编辑
	 * @author 025000-FOSS-helong
	 * @date 2012-12-10 下午05:24:45
	 */
	public static void setSaveAndSubmitFalse(WaybillRFCUI ui)
	{
		//暂存
		ui.getButtonPanel().getBtnPrint().setEnabled(false);
		//提交
		ui.getButtonPanel().getBtnSubmit().setEnabled(false);
	}
	

	/**
	 * 
	 * 清理银行信息
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-12-10 下午05:07:44
	 */
	public static void cleanBankInfo(WaybillPanelVo bean) {
		// 收款人名称
		bean.setAccountName("");
		// 收款人开户行
		bean.setAccountBank("");
		// 收款人银行账号
		bean.setAccountCode("");
	}
	
	/**
	 * 
	 * 设置退款类型为空
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-12-19 下午09:16:51
	 */
	public static void setRefundType(WaybillPanelVo bean,WaybillRFCUI ui) {
		int size = ui.getWaybillInfoPanel().getIncrementPanel().getRefundTypeModel().getSize();
		for (int i = 0; i < size; i++) {
			DataDictionaryValueVo vo = new DataDictionaryValueVo();
			vo = (DataDictionaryValueVo) ui.getWaybillInfoPanel().getIncrementPanel().getRefundTypeModel().getElementAt(i);
			if (vo == null || vo.getValueCode() == null) {
				bean.setRefundType(vo);
			}
		}
	}
	
	/**
	 * 
	 * 获取其他费用查询参数
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-11-16 上午11:02:10
	 */
	public static QueryBillCacilateValueAddDto getQueryOtherChargeParam(WaybillPanelVo bean,
			String type) {
		QueryBillCacilateValueAddDto queryDto = new QueryBillCacilateValueAddDto();
		queryDto.setOriginalOrgCode(bean.getReceiveOrgCode());// 出发部门CODE
		queryDto.setDestinationOrgCode(bean.getCustomerPickupOrgCode()
				.getCode());// 到达部门CODE
		queryDto.setProductCode(bean.getProductCode().getCode());// 产品CODE
		queryDto.setGoodsTypeCode(null);// 货物类型CODE
		queryDto.setChannelCode(bean.getOrderChannel());//设置CRM渠道
		queryDto.setReceiveDate(bean.getBillTime());// 营业部收货日期（可选，无则表示当前日期）
		queryDto.setWeight(bean.getGoodsWeightTotal());// 重量
		queryDto.setVolume(bean.getGoodsVolumeTotal());// 体积
		queryDto.setOriginnalCost(BigDecimal.ZERO);// 原始费用
		queryDto.setFlightShift(null);// 航班号
		queryDto.setLongOrShort(bean.getLongOrShort());// 长途 还是短途
		// 为费用类型名称（综合信息费，燃油附加费，中转费等）
		queryDto.setSubType(type);
		queryDto.setCurrencyCdoe(FossConstants.CURRENCY_CODE_RMB);// 币种
		queryDto.setPricingEntryCode(PriceEntityConstants.PRICING_CODE_QT);// 计价条目CODE
		queryDto.setPricingEntryName(null);// 计价名称
		return queryDto;
	}
	
	/**
	 * 
	 * 获取其他费用
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-11-7 上午11:53:53
	 */
	public static OtherChargeVo getDeliverStorgeCharge(WaybillPanelVo bean,
			List<ValueAddDto> list) {
		ValueAddDto dto = new ValueAddDto();
		OtherChargeVo vo = new OtherChargeVo();
		if (list != null) {
			if (!list.isEmpty()) {
				dto = list.get(0);
				// 费用编码
				vo.setCode(dto.getSubType());
				// 名称
				vo.setChargeName(dto.getSubTypeName());
				// 归集类别
				vo.setType(dto.getBelongToPriceEntityName());
				// 描述
				vo.setDescrition(dto.getPriceEntityCode());
				// 金额
				vo.setMoney(dto.getFee().toString());
				// 上限
				vo.setUpperLimit(dto.getMaxFee().toString());
				// 下限
				vo.setLowerLimit(dto.getMinFee().toString());
				// 是否可修改
				vo.setIsUpdate(BooleanConvertYesOrNo.stringToBoolean(dto
						.getCanmodify()));
				// 是否可删除
				vo.setIsDelete(BooleanConvertYesOrNo.stringToBoolean(dto
						.getCandelete()));
				vo.setId(dto.getId());
			} else {
				throw new WaybillValidateException(i18n.get("foss.gui.changing.showPickupStationDialogAction.exception.nullDeliverStorageFee"));
			}
		} else {
			throw new WaybillValidateException(i18n.get("foss.gui.changing.showPickupStationDialogAction.exception.nullDeliverStorageFee"));
		}
		return vo;
	}
	
	/**
	 * 
	 * 对其他费用进行校验，判断是否存在当前查询的费用，不存在则添加其他费用，并且进行其他费用合计
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-11-21 下午07:06:33
	 */
	public static String addOtherCharge(List<OtherChargeVo> data,
			OtherChargeVo otherChargeVo, WaybillPanelVo bean) {
		boolean bool = true;
		OtherChargeVo oldVo = null;
		
		if (data != null && !data.isEmpty()) {
			for (int i = 0; i < data.size(); i++) {
				OtherChargeVo otherVo = data.get(i);
				// 比较费用名称，判断是否存在重复的返单费用
				if (otherVo.getChargeName().equals(otherChargeVo.getChargeName())) {
					bool = false;
					oldVo = data.get(i);
					data.remove(i);
					data.add(i, otherChargeVo);
				}
			}
		}

		// 如果不存在任何费用，则直接添加
		if (bool) {
			if(data != null){
				data.add(otherChargeVo);
			}
			// 累计其他费用合计
			BigDecimal otherChargeSum = bean.getOtherFee();
			BigDecimal newMoney = new BigDecimal(otherChargeVo.getMoney());
			otherChargeSum = otherChargeSum.add(newMoney);
			bean.setOtherFee(otherChargeSum);
			bean.setOtherFeeCanvas(bean.getOtherFee().toString());
		} else {
			// 累计其他费用合计
			BigDecimal otherChargeSum = bean.getOtherFee();
			BigDecimal oldMoney = new BigDecimal(oldVo.getMoney());
			BigDecimal newMoney = new BigDecimal(otherChargeVo.getMoney());
			BigDecimal money = newMoney.subtract(oldMoney);
			otherChargeSum = otherChargeSum.add(money);
			bean.setOtherFee(otherChargeSum);
			bean.setOtherFeeCanvas(bean.getOtherFee().toString());
		}

		return otherChargeVo.getChargeName();
	}
	
	/**
	 * 
	 * 如果选择的返单类型为无返单，那么需要将之前存在的返单费用删除
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-11-22 上午10:44:29
	 */
	public static void deleteOtherCharge(List<OtherChargeVo> data,
			WaybillPanelVo bean, String name) {
		for (int i = 0; i < data.size(); i++) {
			OtherChargeVo otherVo = data.get(i);
			// 比较费用名称，判断是否存在重复的返单费用
			if (otherVo.getChargeName().equals(name)) {
				data.remove(i);
				// 累计其他费用合计
				BigDecimal otherChargeSum = bean.getOtherFee();
				BigDecimal money = new BigDecimal(otherVo.getMoney());
				otherChargeSum = otherChargeSum.subtract(money);
				bean.setOtherFee(otherChargeSum);
				bean.setOtherFeeCanvas(bean.getOtherFee().toString());
				break;
			}
		}
	}
}