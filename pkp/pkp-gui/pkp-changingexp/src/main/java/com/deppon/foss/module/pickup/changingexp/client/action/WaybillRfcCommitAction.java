/**
 *  initial comments.
 */
/*******************************************************************************
 * Copyright 2013 PKP
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *    http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 * PROJECT NAME	: pkp-changingexp
 * 
 * FILE PATH        	: src/main/java/com/deppon/foss/module/pickup/changingexp/client/action/WaybillRfcCommitAction.java
 * 
 * FILE NAME        	: WaybillRfcCommitAction.java
 * 
 * AUTHOR			: FOSS接送货系统开发组
 * 
 * HOME PAGE		: http://www.deppon.com
 * 
 * COPYRIGHT		: Copyright (c) 2012  Deppon All Rights Reserved.
 ******************************************************************************/
/*
 * Copyright by Deppon and the original author or authors.
 * 
 * This document only allow internal use ,Any of your behaviors using the file
 * not internal will pay legal responsibility.
 *
 * You may learn more information about Deppon from
 *
 *      http://www.deppon.com
 *
 */

/**
 * 1.5.3	界面描述
主界面标题：变更运单。
“变更运单”主界面包含变更基本条件录入区域、
运单信息显示及编辑区域、功能按钮区域。
起草变更单（内部）操作：用户进入“变更运单”主界面后
（见起草变更单（内部）界面-1），
导入运单信息至操作界面，
选择运单变更为“内部要求”，
录入变更原因并修改运单信息，
最终上传变更凭证提交运单变更申请。
1.变更基本条件录入区域：
1）单号：起草运单变更对应的运单号。
2）客户要求：
由于客户原因发起的运单变更需求；
3）内部要求：
由于内部操作失误发起的运单变更需求；
4）变更类型：
客户要求的运单变更包含转运、返货、更改、作废，
内部要求的变更包含更改、中止。
5）变更原因：
起草变更运单的原因。
2.运单信息显示及编辑区域：
1）运单基础信息：
包含收货部门、变更单号、上门接货。
2）发货客户信息：
包含发货人手机、电话、客户名称、联系人、地址。
3）收货客户信息：
包含收货人手机、电话、联系人、地址。
4）运输信息：
包含货物状态、提货方式、目的站、提货网点、
运输性质、配载类型、预配航班、
返单类别、对外备注、对内备注。
5）货物信息：货物的基本信息，
包含货物名称、包装、件数、重量、尺寸、
体积、货物类型、大车直送、
贵重物品、特殊物品。
5）增值业务信息：包含保价声明价值、代收货款、
退款类型、收款人、收款账号、包装费、
送货费、装卸费、其他费用项。
6）计费付款信息：包含公布价运费、
增值服务费、优惠费用、费用合计、
付款方式、到付金额、现付金额、
预付费保密。
7）详细计价信息：默认隐藏不显示，
点击向左伸展按钮后伸展显示（见起草变更单
（内部）界面-2）。包含计费类型、计费重量、
费率、运费、保价声明价值、保价费率、保价费、
代收货款、代收费率、代收手续费、包装费、
送货费、其他费用、优惠费用、费用合计。
8）变更信息：变更运单条目明细显示。
该区域主要显示变更的项目及变更前后对应的运单信息。
9）上传凭证区域：
上传变更凭证电子件。
3.功能按钮：
导入：点击导入按钮将运单号对应的运单信息展现在变更运单界面。
提交：点击提交变更运单申请。
打印：提交运单变更后，可点击打印变更单。
1.6	操作步骤
序号	基本步骤	相关数据	补充步骤
1	点击变更运单菜单进入“变更运单”主界面		系统初始化界面控件值
2	输入运单号，点击“导入”按钮	运单信息	系统判断是否允许发起运单变更：1）若允许，则系统搜索运单信息并根据数据元素的对应关系将运单信息带至变更运单界面相应控件，参见业务规则SR1；
2）若不允许，则系统弹出提示框给予相应提示。参见业务规则SR2
3	点击“内部要求”单选按钮 		1.	运单项对应的编辑状态发生变化，参见业务规则SR3；
2.	上传凭证区域显示默认上传的变更凭证名称，参见业务规则SR4。
4	用户在“变更原因“输入框内输入内部申请变更运单的原因	变更运单原因	
5	用户在运单信息显示区域修改相应的运单信息		“变更信息”区域显示变更项及其变更前后对应的运单信息，参见业务规则SR5
6	点击变更凭证所在行的“上传”按钮 	变更凭证电子件	弹出【路径选择】模式窗口，参见业务规则SR10
7	选择凭证存放的本地路径，点击“确定”按钮		凭证上传至变更界面
8	点击“提交”按钮		弹出【运单变更信息】对话框，回显运单变更的信息，参见系统用例SUC-490：显示运单变更明细
9	点击对话框界面的“确定”按钮		系统弹出对话框提示是否确定提交运单变更申请。
10	点击“确定”按钮，确定提交运单变更申请		系统校验是否满足运单变更申请的条件，参见业务规则SR2、SR8
1.	若满足则系统提示运单变更申请成功，同时
1）系统根据凭证存放路径找到凭证文件后保存到系统中；
2）“打印”按钮变为可点击。
2.	若不满足则系统给予提示。

扩展事件

序号	扩展事件	相关数据	备注
2a	输入运单号，点击“导入”按钮后，
若未找到对应的运单信息，系统给以提示		
2b	运单信息导入变更运单界面相应控件后，
若再次点击“导入”按钮还原当前运单信息		
7a	用户可以点击变更凭证所在行“删除”按钮删除已上传的凭证，
重新选择文件上传	变更凭证电子件	
7b	用户可以点击变更凭证所在行“查看”按钮查看已上传的凭证	
变更凭证电子件	
8a	若未对运单信息做任何修改，
提交时系统给予提示不能提交		
9a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
10a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
1.7	业务规则
序号	描述
SR1	1.  由于整车运单信息与非整车运单信息不同，
导入整车运单至变更运单界面后，
整车运单信息中不存在的字段控件值为空，不可编辑。
2.  如导入的运单为整车运单，
则运输性质控件显示为“整车”。
SR2	
下表为不能起草运单变更的类型及不能起草时系统提示内容

序号	不能起草运单变更的类型	提示内容
1	运单状态为“已保存待补录”的运单	
运单未补录，不能起草运单变更！
2	运单状态为“作废”、“中止”的运单	
运单已作废，不能起草运单变更！
运单已中止，不能起草运单变更！
3	运单对应的收货部门与系统当前组织不一致	该单的收货部门不是您部门，
不能起草运单变更！
4	运单状态为“已签收”的运单	货物已签收，
不能起草运单变更！
5	变更单状态为“待审核”或“待受理”的运单	
该运单有运单变更单还未被审核，不能起草变更运单！
该运单有运单变更单还未被受理，不能起草变更运单！
6	运单已进行结清货款操作	该运单已进行结清货款操作，
如需更改请联系到达部门进行反结清货款操作！
7	财务锁定的运单（财务将不允许发起变更的运单进行锁定）
不能发起运单变更 
该运单已被财务锁定，
不能起草变更运单！


SR3	1．	运单无出库记录，
不允许起草转运单、返货单；
a.	客户来源可以选择更改、作废；
b.	内部来源可以选择更改、中止
2．	运单出库记录，不允许起草作废单，
涉及到目的站、提货网点的修改必须到转运信息、
返货信息面板修改；如果变更提货方式，
由“派送”该为“自提”，原始目的站不支持“自提”，
提示“原始目的站不支持自提，请选择转运或返货类型”
a.	客户来源可以选择更改、转运、返货；
c.	内部来源可以选择更改、中止
3．	若未选择变更要求（客户要求/内部要求），
运单信息显示区域的控件为不可编辑状态；
若选择了变更要求，
则不可变更的运单项对应的控件为不可编辑状态，
可以变更的运单项对应的控件为可编辑状态。
运单项能否进行变更主要受变更要求、
运输类型、货物当前库存部门三个维度的影响。
其中内部要求发起的运单变更，
可变更及不可变更的运单项请详见下表：
     

SR4	1.	选择客户要求变更时，
上传凭证名称默认显示为“身份证复印件”及“运单客户联”，
可另新增变更凭证；选择内部要求变更时，
上传凭证名称默认显示为“运单原件”，
可另新增变更凭证；
2.	默认显示的变更凭证所在行不可删除，
新增的变更凭证所在行可删除；
3.	已选择上传的变更凭证可点击查看，
也可点击删除。
SR5	1.	 “变更项”列显示为变更的运单项名称，
“变更前信息”列显示变更项在变更前对应的运单信息，
“变更后信息”列显示变更项在变更后对应的运单信息。
如是转运或返货变更：“目的站”变更项对应的变更前信息为原目的站，
变更后信息为转运/返货目的站；
“提货网点”变更项对应的变更前信息为原提货网点，
变更后信息为转运/返货提货网点。
2.	对于“上门接货”、“预付费保密”、“大车直送”、
“贵重物品”、“特殊物品”为复选框的变更项，
变更前后对应的信息根据复选框勾选与否显示为是或否；
3.	若变更项变更前信息或变更后信息为空，
则“变更前信息”或“变更后信息”列显示为:—；
4.	以下运单项不列入变更项：计费类型、
计费重量、费率、保价费率、代收费率、装卸费、
其他费用（总金额）、转运运输性质、转运配载类型、
转运预配航班、转运计费类型、转运费率、
返货运输性质、返货计费类型；
5.	变更项行显示顺序为：运单基础信息变更项→
发货客户信息变更项→收货客户信息变更项→运输信息变更项→
货物信息变更项→增值业务信息变更项→详细计价信息变更项→计费付款信息变更项；
6.	“变更前信息”与“变更后信息”列显示内容不能相同。
SR6	1.	运单信息的修改录入操作参照运单生成相关系统用例的操作；
2.	修改运单信息时，
系统校验的业务规则参照运单生成相关系统用例的业务规则。
SR7	1.	关键增值服务信息的变更规则：

运单项	起草运单变更时对应的版本
费率	产品在运单信息生成时对应的公布价版本
保价费率	运单信息生成时的保价费率版本
代收费率	运单信息生成时的代收费率版本
公布价运费	运单信息生成时的公布价运费版本
保价费	运单信息生成时对应的收费标准
代收手续费	运单信息生成时对应的收费标准
送货费	运单信息生成时对应的收费标准
装卸费	运单信息生成时对应的收费标准
其他费用项	运单信息生成时的收费标准
优惠费用	运单开单信息生成时对应的优惠标准

综上：起草变更单（内部）时，产品及价格优惠版本统一执行运单开单时对应的版本。
举例：
公布价运费：运单开单时精准卡航对应的公布价（上门发货）运费最低一票为40元，在开单后系统维护调整为50元最低一票。则在起草变更单时，最低一票仍执行运单开单时的标准，即为40元一票。
2.	含有代收货款的运单，如取消代收货款（代收货款金额更改为0），代收手续费变为0。
SR8	提交变更运单时必须已上传变更凭证，否则不能提交
SR9	成功提交运单变更后，方可打印变更单
SR10	1.	弹出路径选择框，
默认指定路径在桌面，可选择保存路径；
2.	可上传的凭证扫描件，应该为图片，格式允许选择常见的JPG,GIF,PNG,BPM；
3.	上传图片大小有所限制（默认250K，允许系统后台配置），
如果超出所设范围，系统给出提示“您上传的文件已超过最大允许大小250K，请调整后重新上传。”。
SR11	对于发货客户的变更：
1.	同一发货客户，若客户资质发生变化；
a)	开单时为合同客户，开单后（起草更改单之前）
客户属性变为非合同客户： FOSS在开单时记录客户资质，起草更改单时仍可选择免费送货；
b)	开单时为非合同客户，开单后（起草更改单之前）
客户属性升级为合同客户：起草更改单时仍可选择免费送货；
2.	由某一发货客户更改为另一发货客户
a)	合同客户更改为非合同客户：原开单提货方式为免费送货，
与开单时保持一致，即直接清空提货方式，重新选择提货方式;
b)	非合同客户更改为合同客户：提货方式中增加"免费送货"选项。
SR12	1.	货物未到达第一打木架外场（开单录入代打木架信息时系统自动生成的代打木架信息），
允许修改代打包装信息
2.	货物已到达第一打木架外场，则不可发起代打包装信息更改
3.	若有代打包装，则在录入代打包装信息后，
系统自动计划出代打包装费用，显示至包装费中，
营业员或开单员可以任意修改包装费。
4.	在更改单界面中，加入代打包装货物件数的选择，
即流水号选择。在发起代打包装更改单时，
打开的代打包装信息中默认勾选开单录入的代装包装总件数的流水号，
即：开单录入代打木架4件，代打木箱3件，
则在更改单代打包装信息中，自勾选流水号1-7；
5.	允许点击“代打木架”按钮直接修改打包装信息
1.8	数据元素
1.8.1	变更基本录入信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
客户要求	客户提出的运单变更申请	单选框		10	是	默认为空
内部要求	由于内部开单失误而提出的运单变更申请	单选框		10	是	默认为空
变更类型	变更运单的类型，客户要求下包含：转运、返货、作废、更改，内部要求下包含更改、中止。	下拉框		10	是	默认为“更改”
变更原因	变更运单的原因	文本		80	是	默认为空
1.8.2	运单基础信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
收货部门	收取货物的部门				是	
变更单号	点击可变更运单单号	复选框			否	
可勾选时，则勾选后显示变更单号文本框（可编辑）
上门接货	前往客户处接收货物	复选框			否	

1.8.3	发货客户信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
手机	发货联系人的手机号码	文本			否	导入运单信息
电话	发货联系人的电话号码	文本			否	导入运单信息
客户名称	发货企业客户的公司名，个人客户的姓名	公共选择框			是	导入运单信息
联系人	发货客户的个人代表	文本			是	导入运单信息
地址	发货客户的联系地址	文本			否	导入运单信息
1.8.4	收货客户信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
手机	收货联系人的手机号码	文本			否	
电话	收货联系人的电话号码	文本			否	
联系人	收货客户的个人代表	文本			是	
地址	收货客户的联系地址	文本			否	提货方式为送货时必填
1.8.5	运输信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
货物状态	货物当前状态，包含：收货部门库存中、
收货部门已出库（已出收货部门库存，中转部门未入库）、
中转部门库存中、中转部门已出库（已出中转部门库存，即货物在途运输）、
到达部门库存中、到达部门送货中。	文本			是	系统自动带出数据
注：分批配载的货物，以距离最终配载部门最近的部门作为参照。
提货方式	货物提取方式	下拉框			是	
目的站	货物的目的站	文本			是	
提货网点	货物的提货网点	公共选择框			是	
运输性质	货物的运输性质	下拉框			是	
配载类型	货物的配载类型	下拉框			是	由运输性质决定
预配航班	空运班次，含早班、中班、晚班	下拉框			是	
返单类别	签收单返回类型，含签收单原件返回、传真返回、扫描上传、无需返回	下拉框			是	
对外备注	传达给客户的备注信息	下拉框				可选择多项
对内备注	公司内部备注信息	文本			是	
1.8.6	货物信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
名称	货物的名称	文本			是	
包装	货物的外包装	文本			是	
件数	货物的件数	文本			是	
重量	货物的重量	文本			是	
尺寸	货物的尺寸	文本			否	
体积	货物的体积	文本			是	
货物类型	货物的A/B类型，区分大小货	单选按钮			否	
大车直送		复选框			否	
贵重物品		复选框			否	
特殊物品		复选框			否	
1.8.7	增值业务信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
保价声明价值	货物保价金额	文本		8	是	
代收货款	代收货款金额	文本		8	是	
退款类型	代收货款退款方式	下拉框			否	
收款人	代收货款收款人	文本			否	
收款账号	收款人银行账号	文本			否	
包装费	货物包装费用	文本			是	若无则输入0
送货费	货物送货费用	文本			是	若无则输入0
装卸费	装卸费用	文本			是	若无则输入0
1.8.8	计费付款信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
公布价运费	根据公布价计算的运费				是	公布价运费=运费+转运费或返货费
增值服务费	增值服务费用总计				是	
优惠费用	优惠打折的总费用				是	
费用合计	向客户收取的费用总计				是	
付款方式	承运费用付款的方式	下拉框			是	
到付金额	收货客户需要支付的费用	文本			是	若无则输入0
现付金额	发货客户需要支付的费用	文本			是	若无则输入0
预付费保密	对预付费用进行保密	复选框			否	
1.8.9	变更信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
变更项	运单信息发生变更的项目				是	系统根据更改项自动生成显示
变更前信息	变更项变更前对应的运单信息				是	系统自动生成
变更后信息	变更项变更后对应的运单信息				是	系统自动生成
1.8.10	详细计价信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
计费类型	分为重量计费、体积计费两种				是	系统自动生成
计费重量	空运时为必填项，汽运时不可编辑				否	系统自动计算生成
费率					是	
保价费率					是	
代收费率					是	
运费					是	
保价费					是	
代收手续费					是	
包装费					是	
送货费					是	
其他费用					是	
优惠费用					是	
费用合计					是	
1.9	非功能性需求
使用量	每天处理的运单约为1000000单，变更运单的数量占比约为20%
2012年全网估计用户数	营业员数量约10000名
响应要求（如果与全系统要求 不一致的话）	系统一般需求
使用时间段	营业部上班时间
高峰使用时间段	9:00-16:00，19:00-21:00
1.10	接口描述：
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
客户信息接口	CRM系统	FOSS调用CRM客户信息接口，查询录入客户信息
电子地图接口	GIS系统	FOSS调用电子地图接口查询录入目的站、提货网点信息
库存接口	中转子系统	FOSS调用中转库存接口判断货物是否已签收出库
财务类变更接口	结算系统	FOSS调用该接口判断财务是否可发起财务类变更，
若财务对运单进行了锁定，则不可发起财务类变更


 */
/**--------------------------------------
 * 1.	纸包装件数默认显示数值等于货物总件数，
 * 营业员可以修改各包装的件数；
 * 系统自动在录入下一个包装前计算显示剩余未录入的件数，
 * 例：某票货物为50件，则自动显示纸包装50，
 * 在营业员修改纸包装为20时，木包装自动显示为30，
 * 在营业员修改木包装为10时，
 * 纤包装自动显示为20，该过程中未录入包装数值的默认显示为0；
2.	货物包装总件数小于等于货物总件数；
 */
/**--------------------------------------
 * 1.	离线开单时，不录入代打木架信息；
 * 当木包装件数大于等于1时，系统不提示任何信息，
 * 也不弹出代打木架录入界面；
2.	离线开单的代打木架信息在离线开单提交时，
系统校验提醒；
 */
/**
 * 1.	运输类型为汽运时，货物类型为唯一选择项；即，
 * 非A即B；默认不可勾选，
 * 只有当走货路由经过特定的城市时需要录入货物类型,
 * 特定城市可在系统中进行配置；
2.	运输类型为空
默认显示为普货，目前只有这一个分类，该类型可做配置；
--------------------------------------
 */
/**--------------------------------------
 * 1.	系统根据货物名称匹配生成的勾选贵重物品，
 * 营业员不可去掉勾选；
2.	营业员也可以主动勾选贵重物品；
3.	件数等于1、体积小于等于0.05个方、
报价声明价值大于等于10000元，为贵重物品；
系统自动勾选贵重物品，
营业员可修改是否勾选；
4.	件数大于等于2时，平均体积（体积/件数）
小于等于0.5方，平均声明价值（保价声明价值/件数）
大于等于10000元，为贵重物品；
系统自动勾选贵重物品，
营业员可修改是否勾选；
1.	营业部开单时按打完木架后的包装开，
即包装中含“木架/木箱”，
开单件数为货物打木架/木箱前的实际件数（防止丢货），
尺寸和重量按照以下公式计算：
1.1	整票货物代打时：
开单体积=代打货物体积*1.4；
开单重量=所有货物重量+代打货物体积*42；
1.2	部分货物代打时，
开单体积=代打货物体积*1.4+未打木架货物体积；
开单重量=所有货物重量+代打货物体积*42。
即：营业部按照代打货物未打木架之前体积的1.4倍来开单收费，
重量另加，单票中未打木架的货物的体积和重量不变；
1.3	例如：一票货物需全部代打，
货物体积为1个方，重量为100KG，
则开单体积为1.4个方，
开单重量为100+1*42=142KG，
收取客户包装费为150*1.4=210元；
1.4	需要加托时，仍按照50元/个另外收取费用，
托的重量和体积不再另加；
营业部不需要再更改由于打木架引起重量和体积的变化；
2.	开单件数为代打木架前货物实际件数，
包装为打木架后的包装，
打木架后件数发生变化后，
需及时更改件数；
--------------------------------------
 */

/**--------------------------------------
 * 每天处理的运单约为1000000单
营业员数量约10000名
系统一般要求
营业部、集中开单小组上班时间
营业部：16：00-20：00
集中开单小组：21：00-次日4：00
 */

/**--------------------------------------
 * 本界面为录入增值服务信息。
界面主要分为三个部分：
录入增值服务、
录入包装费、
查询其它费用。
1.	录入增值服务
录入增值服务分为两个部分：
录入增值服务信息界面、
录入其它费用列表；
1.1	录入增值服务信息界面
录入增值服务信息界面包括：
1.1.1	保价声明价值；
1.1.2	保价费率：
保价费率可由基础资料配置，
可按出发城市区域，
出发营业部等；
1.1.3	保价费；
1.1.4	代收货款；
1.1.5	代收费率；
1.1.6	代收手续费；
1.1.7	退款类型：
包括三日退、
退日退、
审核退，
默认三日退；
1.1.8	包装费；
1.1.9	装卸费；
1.1.10	送货费；
1.1.11	其它费用合计；
1.1.12	返单类别：
包括无需返单、
原件签收单返回、
传真件签收单返回、
扫描件返回，
默认无需返单；
1.1.13	预付费保密；
1.2	录入其它费用列表
录入其它费用列表包括：
1.2.1	费用名称；
1.2.2	费用金额；
1.2.3	新增其它费用：
功能按钮；
1.2.4	删除其它费用：
功能按钮；
2.	录入包装费
其界面和界面和需求详见系统用例“DP-FOSS-接送货系统用例-运单生成-确认承运信息-录入增值服务信息”中“录入包装费”；
3.	查询其它费用
其界面和界面和需求详见系统用例“DP-FOSS-接送货系统用例-运单生成-确认承运信息-录入增值服务信息”中“查询其它费用”；
--------------------------------------
 */
/**
 * /**--------------------------------------
 * 1.	若货物为违禁品，
 * 	则系统自动提示“货物为违禁品，不可开单！”；
 2.	若货物为拒收品，
 则系统自动提示“货物为拒收品，不可开单！”；
 3.	若货物为贵重物品，
 则系统自动勾选“贵重物品”，
 且不可修改；
 4.	若货物为限保物品，
 则系统自动限定保价金额，且不可修改，
 并提示“货物为限保物品”；
 5.	违禁品、拒收品、
 贵重物品、限保物品（含保价金额上限）
 具体类型可在系统中进行配置；
 1.	货物重量单位为千克
 */
/**--------------------------------------
 * 1.	货物尺寸为计算器输入，
 * 显示为输入文本；
2.	尺寸计算单位为厘米，
尺寸计算出数据后转换单位为立方米后，
在货物体积中显示数据；例如：
尺寸录入为：50*50*20，
则体积显示数据为：0.05；
 */
/**--------------------------------------
 * 1.	货物体积单位为立方米；
2.	营业员可以修改通过尺寸计算器
计算得出的体积数据；
3.	系统设置货物重量体积比区间值（该值由基础资料配置），
在运单提交时，
系统自动对重量体积比进行校验：
即重量体积比X=重量/体积；
3.1	当X不在设置的区间中，
弹出提示“请确认录入的重量体积是否准确！”；
（该弹窗有两个按钮：确定、取消）点击确定时，
弹出离线开单确认运单信息界面；点击取消，
点返回运单录入界面；
3.2	当X在区间中，无提示；
直接进入确认运单信息界面；
--------------------------------------
 */
/**--------------------------------------
 * 1.	纸包装件数默认显示数值等于货物总件数，
 * 营业员可以修改各包装的件数；
 * 系统自动在录入下一个包装前计算显示剩余未录入的件数，
 * 例：某票货物为50件，则自动显示纸包装50，
 * 在营业员修改纸包装为20时，木包装自动显示为30，
 * 在营业员修改木包装为10时，
 * 纤包装自动显示为20，该过程中未录入包装数值的默认显示为0；
2.	货物包装总件数小于等于货物总件数；
 */
/**--------------------------------------
 * 1.	离线开单时，不录入代打木架信息；
 * 当木包装件数大于等于1时，系统不提示任何信息，
 * 也不弹出代打木架录入界面；
2.	离线开单的代打木架信息在离线开单提交时，
系统校验提醒；
 */
/**
 * 1.	运输类型为汽运时，货物类型为唯一选择项；即，
 * 非A即B；默认不可勾选，
 * 只有当走货路由经过特定的城市时需要录入货物类型,
 * 特定城市可在系统中进行配置；
2.	运输类型为空
默认显示为普货，目前只有这一个分类，该类型可做配置；
--------------------------------------
 */
/**--------------------------------------
 * 1.	系统根据货物名称匹配生成的勾选贵重物品，
 * 营业员不可去掉勾选；
2.	营业员也可以主动勾选贵重物品；
3.	件数等于1、体积小于等于0.05个方、
报价声明价值大于等于10000元，为贵重物品；
系统自动勾选贵重物品，
营业员可修改是否勾选；
4.	件数大于等于2时，平均体积（体积/件数）
小于等于0.5方，平均声明价值（保价声明价值/件数）
大于等于10000元，为贵重物品；
系统自动勾选贵重物品，
营业员可修改是否勾选；
1.	营业部开单时按打完木架后的包装开，
即包装中含“木架/木箱”，
开单件数为货物打木架/木箱前的实际件数（防止丢货），
尺寸和重量按照以下公式计算：
1.1	整票货物代打时：
开单体积=代打货物体积*1.4；
开单重量=所有货物重量+代打货物体积*42；
1.2	部分货物代打时，
开单体积=代打货物体积*1.4+未打木架货物体积；
开单重量=所有货物重量+代打货物体积*42。
即：营业部按照代打货物未打木架之前体积的1.4倍来开单收费，
重量另加，单票中未打木架的货物的体积和重量不变；
1.3	例如：一票货物需全部代打，
货物体积为1个方，重量为100KG，
则开单体积为1.4个方，
开单重量为100+1*42=142KG，
收取客户包装费为150*1.4=210元；
1.4	需要加托时，仍按照50元/个另外收取费用，
托的重量和体积不再另加；
营业部不需要再更改由于打木架引起重量和体积的变化；
2.	开单件数为代打木架前货物实际件数，
包装为打木架后的包装，
打木架后件数发生变化后，
需及时更改件数；
--------------------------------------
 */

/**--------------------------------------
 * 每天处理的运单约为1000000单
营业员数量约10000名
系统一般要求
营业部、集中开单小组上班时间
营业部：16：00-20：00
集中开单小组：21：00-次日4：00
 */

/**
 * 修订记录 
日期 	修订内容 	修订人员 	版本号 
2012-06-18	初版	于红浩	V0.1
2012-7-4	1.	提交运单变更时，增加运单变更信息回显；
2.	删除运单变更预览；
3.	运单提交后才可进行打印；	于红浩	V0.2
2012-7-25	业务评审完毕，升至0.9版本	于红浩	V0.9
2012-8-8	基线	于红浩	V1.0
2012-10-11	1.	删除“待确认的运单变更不能起草运单变更”，增加货款结清的运单不能起草变更单，优化起草运单变更时系统提示内容；
2.	优化内部原因-运单变更规则；
1.	提交界面增加短信通知“发货人”、“收货人”选择框	邵宏亮	V1.01
2012-10-16	1.	补充凭证上传的文件类型为图片，并限制文件大小	邵宏亮	V1.02
2012-12-3	1.	新增变更类型的显示规则，区分作废、转运、返货场景下修改提货网点的方式；
2.	新增合同客户修改规则	邵宏亮	V1.03
2012-12-10	1.	新增代打木架变更处理规则	邵宏亮	V1.04
2013-1-22	2.	添加起草变更规则，去除凭证强制上传限制	邵宏亮	V1.05
2013-2-27		根据ISSUE—1706修订	王辉	
2013-3-6	根据ISSUE-1511修订	王辉	
2013-3-8	根据ISSUE-1878修订	王辉	
1.	SUC-546-起草转运单_返货单
1.1	相关业务用例
BUC_FOSS_5.60.10_745处理返货转货。
1.2	用例描述
对于客户提出的货物转运或返回申请，营业员导入运单信息至运单变更界面后，录入转运/返货的目的站、提货网点等信息（如客户有要求也可同时对运单的其他信息进行更改），最终上传变更凭证并提交变更申请。
注：变更运单包含：起草变更单（外部）、起草变更单（内部）、起草转运单、起草返货单、作废运单、中止运单。
1.3	用例条件
条件类型	描述	引用系统用例
前置条件	1.	系统已生成完整的运单信息	1.	SUC-439：提交运单
2.	SUC-491：补录运单
后置条件	1.	对转运单/返货单变更申请进行审核	1.	SUC-542：查询_审核变更申请
1.4	操作用户角色
操作用户	描述
运单变更起草员	起草转运单/返货单变更申请、上传变更凭证、提交变更申请
1.5	界面要求
1.5.1	表现方式
Web页面 
1.5.2	界面原型
 
【起草转运单】初始界面
 
【起草转运单-录入转运信息】界面
 
【起草转运单-查看转运记录】界面

 
【转运信息回显】界面
 
【起草返货单】初始界面
 
【起草返货单-录入返货信息】界面
 
【起草返货单-查看返货记录】界面


 【返货信息回显】界面
1.5.3	界面描述
主界面标题：变更运单。
“变更运单”主界面包含变更基本条件录入区域、运单信息显示及编辑区域、功能按钮区域。
起草转运单/返货单操作：用户进入“变更运单”主界面后，
导入运单信息至操作界面，选择运单变更为“客户要求”，
选择变更类型为转运/返货后（见【起草转运单】初始界面、
【起草返货单】初始界面），录入变更原因、转运/返货目的站、转运/返货提货网点，
最终上传变更凭证提交转运单/返货单申请。
1.变更基本条件录入区域：
1）单号，起草转运单/返货单对应的运单号。
2）客户要求：由于客户原因发起的运单变更需求；
3）内部要求：由于内部操作失误发起的运单变更需求；
4）变更类型：客户要求的运单变更包含转运、返货、更改、作废，内部要求的变更包含更改、中止。
5）变更原因：变更运单的原因。
2.运单信息显示及编辑区域：
1）运单基础信息：包含收货部门、变更单号、上门接货。
2）发货客户信息：包含发货人手机、电话、客户名称、联系人、地址。
3）收货客户信息：包含收货人手机、电话、联系人、地址。
4）运输信息区域：当选择变更类型为“转运”或“返货”时，该区域以table页签形式展现。
ⅰ当选择变更类型为“转运”时，
该区域包含【运输信息】及【转运信息】两个页签（如有转运或返货更改记录，
还需显示【转运记录】或【返货记录】页签）。
ⅱ当选择变更类型为“返货”时，
该区域包含【运输信息】及【返货信息】两个页签（如有转运或返货更改记录，
还需显示【转运记录】或【返货记录】页签）。
运输信息：包含货物状态、提货方式、目的站、提货网点、
运输性质、配载类型、预配航班、返单类别、对外备注、对内备注。
转运信息：包含转运目的站、转运提货网点、转运运输性质、
转运配载类型、转运预配航班、转运计费类型、转运费率、转运费。
返货信息：包含返货目的站、返货提货网点、
返货运输性质、返货计费类型、返货费率、返货费。
5）货物信息：货物的基本信息，包含货物名称、包装、
件数、重量、尺寸、体积、货物类型、大车直送、
贵重物品、特殊物品。
5）增值业务信息：包含保价声明价值、代收货款、
退款类型、收款人、收款账号、包装费、送货费、装卸费、其他费用项。
6）计费付款信息：包含公布价运费、增值服务费、
优惠费用、费用合计、付款方式、到付金额、
现付金额、预付费保密。
7）详细计价信息：默认隐藏不显示，
点击向左伸展按钮后伸展显示。包含计费类型、计费重量、费率、运费、
保价声明价值、保价费率、保价费、代收货款、代收费率、
代收手续费、包装费、送货费、其他费用、优惠费用、合计。
8）变更信息：变更运单条目明细显示。
该区域主要显示变更的项目及变更前后对应的运单信息。
3.功能按钮：
导入：点击导入按钮将运单号对应的运单信息展现在变更运单界面。
提交：点击提交变更运单申请。
打印：提交运单变更后，可点击打印转运单/返货单。
1.6	操作步骤
1.6.1	起草转运单操作步骤

序号	基本步骤	相关数据	补充步骤
1	点击变更运单菜单进入“变更运单”主界面		
系统初始化界面控件值
2	输入运单号，点击“导入”按钮	运单信息	系统判断是否允许发起运单变更：
1）若允许，则系统搜索运单信息并根据数据元素的对应关系将运单信息带至变更运单界面相应控件；
2）若不允许，则系统弹出提示框给予相应提示。参见业务规则SR1。
3	点击“客户要求”单选按钮		
1.	运单项对应的编辑状态发生变化，参见业务规则SR2；
2.	上传凭证区域显示默认上传的变更凭证名称，参见业务规则SR3。
4	选择变更类型为“转运”		
【转运信息】区域字段变为可编辑状态；
5	用户在“变更原因“输入框内输入客户申请转运的原因	变更原因	
6	用户点击【转运信息】页签，分别录入转运目的站、转运提货网点、
转运运输性质		
1.	转运信息录入操作参见系统用例SUC-496：录入运输信息；
2.	“变更信息”区域显示变更项及其变更前后对应的运单信息，
参见业务规则SR4。
7	点击变更凭证所在行的“上传”按钮  	变更凭证电子件	
弹出【路径选择】模式窗口，参见业务规则SR10
8	选择凭证存放的本地路径，点击“确定”按钮		
凭证上传至变更界面
9	点击“提交”按钮	
	弹出【运单变更信息】对话框，回显转运单变更的信息，参见系统用例SUC-490：显示运单变更明细
10	点击对话框界面的“确定”按钮		
系统弹出对话框提示是否确定提交转运单变更申请。
11	点击“确定”按钮，确定提交运单变更申请		
系统校验是否满足运单变更申请的条件，参见业务规则SR1、SR7
1.	若满足则系统提示运单变更申请成功，同时
1）系统根据凭证存放路径找到凭证文件后保存到系统中；
2）“打印”按钮变为可点击。
2.	若不满足则系统给予提示。

扩展事件

序号	扩展事件	相关数据	备注
2a	运单信息导入起草转运单界面相应控件后，
若再次点击“导入”按钮还原当前运单信息		
4a	若货物已出收货部门库存，
选择“转运”变更类型后，系统提示不能起草转运单		
6a	若转运提货网点为空运或偏线，
还需录入转运配载类型、转运预配航班		
6b	用户可修改其他的运单信息		
“变更信息”区域显示变更项及其变更前后对应的运单信息，
参见业务规则SR4
8a	用户可以点击变更凭证所在行“删除”按钮删除已上传的凭证，
重新选择文件上传	变更凭证电子件	
8b	用户可以点击变更凭证所在行“查看”按钮查看已上传的凭证	
变更凭证电子件	
10a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
11a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
1.6.2	起草返货单操作步骤

序号	基本步骤	相关数据	补充步骤

1	点击变更运单菜单进入“变更运单”主界面		
系统初始化界面控件值
2	输入运单号，点击“导入”按钮	
运单信息	系统判断是否允许发起运单变更：
1）若允许，则系统搜索运单信息并根据数据元素的对应关系将运单信息带至变更运单界面相应控件；
2）若不允许，则系统弹出提示框给予相应提示。参见业务规则SR1。
3	点击“客户要求”单选按钮		
1.	运单项对应的编辑状态发生变化，参见业务规则SR2；
2.	上传凭证区域显示默认上传的变更凭证名称，参见业务规则SR3。
4	选择变更类型为“返货”		
【返货信息】区域字段变为可编辑状态；
5	用户在“变更原因“输入框内输入客户申请转运的原因	变更原因	
6	用户点击【返货信息】页签，
分别录入转运目的站、转运提货网点、转运运输性质	
	1.	返货信息录入操作参见系统用例SUC-496：录入运输信息；
2.	“变更信息”区域显示变更项及其变更前后对应的运单信息，
参见业务规则SR4。
7	点击变更凭证所在行的“上传”按钮  	
变更凭证电子件	弹出【路径选择】模式窗口
8	选择凭证存放的本地路径，点击“确定”按钮		
凭证上传至变更界面
9	点击“提交”按钮		
弹出【运单变更信息】对话框，回显转运单变更的信息，
参见系统用例SUC-490：显示运单变更明细
10	点击对话框界面的“确定”按钮		
系统弹出对话框提示是否确定提交转运单变更申请。
11	点击“确定”按钮，确定提交运单变更申请		
系统校验是否满足运单变更申请的条件，参见业务规则SR1、SR7
1.	若满足则系统提示运单变更申请成功，同时
1）系统根据凭证存放路径找到凭证文件后保存到系统中；
2）“打印”按钮变为可点击。
2.	若不满足则系统给予提示。

扩展事件

序号	扩展事件	相关数据	备注
2a	运单信息导入起草返货单界面相应控件后，
若再次点击“导入”按钮还原当前运单信息		
4a	若货物已出收货部门库存，
选择“转运”变更类型后，系统提示不能起草转运单		
6a	若返货提货网点为空运或偏线，还需录入转运配载类型、转运预配航班		
6b	用户可修改其他的运单信息		“
变更信息”区域显示变更项及其变更前后对应的运单信息，参见业务规则SR4
8a	用户可以点击变更凭证所在行“删除”按钮删除已上传的凭证，
重新选择文件上传	变更凭证电子件	
8b	用户可以点击变更凭证所在行“查看”按钮查看已上传的凭证	变更凭证电子件	
10a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
11a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面

1.7	业务规则
序号	描述
SR1	
下表为不能起草运单变更的类型及不能起草时系统提示内容

序号	不能起草运单变更的类型	提示内容

	运单状态为“已保存待补录”的运单	
	运单未补录，不能起草运单变更！
2	运单状态为“作废”、“中止”的运单	
运单已作废，不能起草运单变更！
运单已中止，不能起草运单变更！
3	运单对应的收货部门与系统当前组织不一致	该单的收货部门不是您部门，不能起草运单变更！
4	运单状态为“已签收”的运单	货物已签收，
不能起草运单变更！
5	变更单状态为“待审核”或“待受理”的运单	
该运单有运单变更单还未被审核，不能起草变更运单！
该运单有运单变更单还未被受理，不能起草变更运单！
6	运单已进行结清货款操作	
该运单已进行结清货款操作，如需更改请联系到达部门进行反结清货款操作！
7	财务锁定的运单（财务将不允许发起变更的运单进行锁定）不能发起运单变更 
该运单已被财务锁定，不能起草变更运单！
8	偏线运单以外发	偏线运单已中转外发，不能起草运单变更！


SR2	1．	运单无出库记录，不允许起草转运单、返货单；
a.	客户来源可以选择更改、作废；
b.	内部来源可以选择更改、中止
2．	运单出库记录，不允许起草作废单，涉及到目的站、
提货网点的修改必须到转运信息、返货信息面板修改；如果变更提货方式，
由“派送”该为“自提”，原始目的站不支持“自提”，提示“原始目的站不支持自提，
请选择转运或返货类型”
a.	客户来源可以选择更改、转运、返货；
c.	内部来源可以选择更改、中止
3．	若未选择变更要求（客户要求/内部要求），
运单信息显示区域的控件为不可编辑状态；若选择了变更要求，
则不可变更的运单项对应的控件为不可编辑状态，可以变更的运单项对应的控件为可编辑状态
。运单项能否进行变更主要受变更要求、
运输类型、货物当前库存部门三个维度的影响。
其中客户要求发起的转运或返货变更，
可变更及不可变更的运单项请详见下表：
     

SR3	1.	选择客户要求变更时，上传凭证名称默认显示为“身份证复印件”及“运单客户联”，
可另新增变更凭证；选择内部要求变更时，上传凭证名称默认显示为“运单原件”，可另新增变更凭证；
2.	默认显示的变更凭证所在行不可删除，
新增的变更凭证所在行可删除；
3.	已选择上传的变更凭证可点击查看，也可点击删除。
SR4	1.	“变更项”列显示为变更的运单项名称，
“变更前信息”列显示变更项在变更前对应的运单信息，
“变更后信息”列显示变更项在变更后对应的运单信息。如是转运或返货变更：
“目的站”变更项对应的变更前信息为原目的站，变更后信息为转运/返货目的站；
“提货网点”变更项对应的变更前信息为原提货网点，变更后信息为转运/返货提货网点。
2.	对于“上门接货”、“预付费保密”、“大车直送”、
“贵重物品”、“特殊物品”为复选框的变更项，变更前后对应的信息根据复选框勾选与否显示为是或否；
3.	若变更项变更前信息或变更后信息为空，
则“变更前信息”或“变更后信息”列显示为:—；
4.	以下运单项不列入变更项：计费类型、计费重量、费率、
保价费率、代收费率、装卸费、其他费用（总金额）、转运运输性质、
转运配载类型、转运预配航班、转运计费类型、转运费率、返货运输性质、返货计费类型；
5.	变更项行显示顺序为：
运单基础信息变更项→发货客户信息变更项→收货客户信息变更项→运输信息变更项→货物信息变更项→增值业务信息变更项→详细计价信息变更项→计费付款信息变更项；
6.	“变更前信息”与“变更后信息”列显示内容不能相同。
SR5	转运信息对应的相关业务规则：
1.	转运目的站：转运提货网点对应的目的站，与收货人地址、提货方式进行关联。
2.	转运提货网点：转运后的提货网点，与收货人地址、提货方式进行关联。
3.	转运运输性质：
1）	原运输类型为汽运：以原目的站作为转运始发站，
与转运目的站匹配运输性质；
2）	原运输类型为偏线或空运：
ⅰ 若货物未出原最终配载部门库存，以原最终配载部门所在城市作为转运始发站，
与转运目的站匹配运输性质；
ⅱ 若货物已出原最终配载部门库存，转运运输性质只能为偏线或空运。
4.	提货方式：起草转运单时，提货方式与原运输信息取消关联，
与转运提货网点进行关联。
5.	转运配载类型：转运运输性质为空运时，包含合大票、单独开单；
其他转运运输性质时，只含有汽运。
6.	转运预配航班：转运运输性质为空运时为可选状态，
包含早班、中班、晚班。
7.	转运计费类型：分为重量计费、体积计费，
系统根据货物重量、体积、转运费率确定转运计费类型。
8.	转运费率：
1)	原运输类型为汽运：原目的站作为转运始发站，
系统根据转运始发站、转运目的站、转运运输性质读取公布价基础资料
（上门发货公布价）来确定转运费率，若未读取到公布价，则人工录入转运费率。
2)	原运输类型为偏线或空运：
ⅰ 若货物未出原最终配载部门库存，
系统根据原最终配载部门所在城市、转运目的站、转运运输性质读取公布价基础资料（
上门发货公布价）来确定转运费率，若未读取到公布价，则人工录入转运费率；
ⅱ 若货物已出原最终配载部门库存，则人工录入转运费率。
    注：转运费率读取的公布价为运单开单时对应的产品价格版本
9.	转运费：
1）计费类型为“重量计费”时，转运费=转运费率*重量；
2）计费类型为“体积计费”时，转运费=转运费率*体积。
注：转运费无最低一票。
返货信息对应的相关业务规则：
1.	返货目的站：返货提货网点对应的目的站，与收货人地址进行关联。。
2.	返货提货网点：货物返回的提货网点，与收货人地址进行关联，
只能选择公司自有营业网点。
3.	返货运输性质：
1）	原运输类型为汽运：
ⅰ 货物未出第一中转外场库存：第一中转外场所在城市作为返货始发站，
与返货目的站匹配返货运输性质；
ⅱ 货物已出第一中转外场库存：以原目的站作为返货始发站，
与返货目的站匹配运输性质；
2）	原运输类型为偏线或空运：
ⅰ 货物未出第一中转外场库存：第一中转外场所在城市作为返货始发站，
与返货目的站匹配返货运输性质；
ⅱ 货物已出第一中转外场库存，未出原最终配载部门库存：
以原最终配载部门所在城市作为返货始发站，与返货目的站匹配运输性质。
ⅲ 货物已出原最终配载部门库存：返货运输性质只能为偏线或空运。
4.	返货计费类型：分为重量计费、体积计费，系统根据货物重量、
体积、返货费率确定返货计费类型。
5.	返货费率：
1）	原运输类型为汽运：
ⅰ 货物未出第一中转外场库存：第一中转外场所在城市作为返货始发站，
系统根据返货始发站、返货目的站、返货运输性质读取公布价基础资料（上门发货公布价）来确定返货费率，原费率变为原运输性质下的收货部门至返货始发站的费率；
ⅱ 货物已出第一中转外场库存：原目的站作为返货始发站，
系统根据返货始发站、返货目的站、返货运输性质读取公布价基础资料（上门发货公布价）来确定返货费率，原费率不变。
2）	原运输类型为偏线或空运：
ⅰ 货物未出第一中转外场库存：第一中转外场所在城市作为返货始发站，
系统根据返货始发站、返货目的站、返货运输性质读取公布价基础资料（上门发货公布价）
来确定返货费率，原费率变为原运输性质下的收货部门至返货始发站的费率；
ⅱ 货物已出第一中转外场库存，未出原最终配载部门库存：
原最终配载部门所在城市作为返货始发站，系统根据返货始发站、返货目的站、
返货运输性质读取公布价基础资料（上门发货公布价）来确定返货费率，
原费率变为原运输性质下的收货部门至返货始发站的费率；
ⅲ 货物已出原最终配载部门库存：人工录入返货费率，原费率不变。
注：返货费率读取的公布价为运单开单时对应的产品价格版本。
6.	返货费：
1）	计费类型为“重量计费”时，返货费=返货费率*重量；
2）	计费类型为“体积计费”时，返货费=返货费率*体积。
注：返货费无最低一票。
SR6	1.	运单信息的修改录入操作参照运单生成相关系统用例的操作；
2.	修改运单信息时，系统校验的业务规则参照运单生成相关系统用例的业务规则。
SR7	1.	起草转运单时，关键增值服务信息的变更规则：

运单项	起草运单变更时对应的版本
费率	产品在运单信息生成时对应的公布价版本
保价费率	运单信息生成时的保价费率版本
代收费率	运单信息生成时的代收费率版本
公布价运费	运单信息生成时的公布价运费版本
保价费	运单信息生成时对应的收费标准
代收手续费	运单信息生成时对应的收费标准
送货费	运单信息生成时对应的收费标准
装卸费	运单信息生成时对应的收费标准
其他费用项	运单信息生成时的收费标准
优惠费用	运单开单信息生成时对应的优惠标准

2.	起草返货单时，关键增值服务信息的变更规则：
   
运单项	起草运单变更时对应的版本
费率	若货物未出第一中转库存：原运输性质下的收货部门至返货始发站的费率
（返货始发站为第一中转外场对应的城市），费率为运单开单时对应的版本
	若货物已出第一中转库存：产品在运单信息生成时对应的公布价版本
保价费率	运单信息生成时的保价费率版本
代收费率	运单信息生成时的代收费率版本
公布价运费	运单信息生成时的公布价运费版本
保价费	运单信息生成时对应的收费标准
代收手续费	运单信息生成时对应的收费标准
送货费	运单信息生成时对应的收费标准
装卸费	运单信息生成时对应的收费标准
其他费用项	运单信息生成时的收费标准
优惠费用	运单开单信息生成时对应的优惠标准

综上：起草转运单或返货单时，产品及价格优惠版本统一执行运单开单时对应的版本。
3.	含有代收货款的运单，如取消代收货款（代收货款金额更改为0）：
若货物未出收部门库存，代收手续费变为0；若货物已出收货部门库存，代收手续费不变。
SR8	提交转运单或返货单时必须已上传变更凭证，否则不能提交申请
SR89	成功提交转运单或返货单申请后，方可打印变更单
SR109	1.	弹出路径选择框，默认指定路径在桌面，可选择保存路径；
2.	可上传的凭证扫描件，应该为图片，格式允许选择常见的JPG,GIF,PNG,BPM；
上传图片大小有所限制（默认250K，允许系统后台配置），如果超出所设范围，
系统给出提示“您上传的文件已超过最大允许大小250K，请调整后重新上传。”。
SR1011	对于发货客户的变更：
1.	同一发货客户，若客户资质发生变化；
a)	开单时为合同客户，开单后（起草更改单之前）客户属性变为非合同客户： 
FOSS在开单时记录客户资质，起草更改单时仍可选择免费送货；
b)	开单时为非合同客户，开单后（起草更改单之前）客户属性升级为合同客户：
起草更改单时仍可选择免费送货；
2.	由某一发货客户更改为另一发货客户
a)	合同客户更改为非合同客户：原开单提货方式为免费送货，与开单时保持一致，
即直接清空提货方式，重新选择提货方式;
3.	非合同客户更改为合同客户：提货方式中增加"免费送货"选项。
SR1112	1.	货物未到达第一打木架外场（开单录入代打木架信息时系统自动生成的代打木架信息），允许修改代打包装信息
2.	货物已到达第一打木架外场，则不可发起代打包装信息更改
3.	若有代打包装，则在录入代打包装信息后，系统自动计划出代打包装费用，显示至包装费中，营业员或开单员可以任意修改包装费。
4.	在更改单界面中，加入代打包装货物件数的选择，即流水号选择。在发起代打包装更改单时，打开的代打包装信息中默认勾选开单录入的代装包装总件数的流水号，即：开单录入代打木架4件，代打木箱3件，则在更改单代打包装信息中，自勾选流水号1-7；
允许点击“代打木架”按钮直接修改打包装信息
SR12	1、货物离开出发部门库存后，客户要求将目的站更改为异地目的站，须收取中转费。例如，客户要求将原发往重庆北碚区营业部的货物更改至四川泸州蓝田营业部，虽然是同一外场配载，但分属不同地级市，须收取中转费。 
2、货物离开出发部门库存后，客户要求将目的站更改为同城目的站： 
 2.1、货物离开出发部门库存后至到达部门上一级外场交接出库前，不收取中转费。例如客户要求将原发往上海浦东上南路营业部的货物更改至上海派送部，虽然是不同外场配载，但分属同意地级市，不收取中转费 
 2.2、货物在到达部门（驻地派送部为到达部门）库存中，更改为同城部门，须收取中转费 
 2.3、货物离开到达部门上一级外场库存或有交接记录且交接目的站为原到达部门，须收取中转费 

注：同城定义：以原到达部门所在地级市为判断依据。更改前后部门在同一地级市行政区域范围内为同城，更改前后部门不在同一地级市行政区域范围内为异地。 
SR13	更改单界面添加查询网点、公布价、查询客户、打印标签功能按钮，可参考开单界面
SR14	香港开点业务：
1. 运单新增、运单查询中，收/发货人手机只能填写8位或11位数字，11位数字必须以1开头
2. 收货部门的省市为香港时，燃油附加费可修改
1.8	数据元素
1.8.1	变更基本录入信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
客户要求	客户提出的运单变更申请	单选框		10	是	默认为空
内部要求	由于内部开单失误而提出的运单变更申请	单选框		10	是	默认为空
变更类型	变更运单的类型，客户要求下包含：转运、返货、作废、更改，内部要求下包含更改、中止。	下拉框		10	是	默认为空“更改”
变更原因	变更运单的原因	文本		80	是	默认为空
1.8.2	运单基础信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
收货部门	收取货物的部门				是	
变更单号	点击可变更运单单号	复选框			否	可勾选时，则勾选后显示变更单号文本框（可编辑）
上门接货	前往客户处接收货物	复选框			否	
1.8.3	发货客户信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
手机	发货联系人的手机号码	文本			否	导入运单信息
电话	发货联系人的电话号码	文本			否	导入运单信息
客户名称	发货企业客户的公司名，个人客户的姓名	公共选择框			是	导入运单信息
联系人	发货客户的个人代表	文本			是	导入运单信息
地址	发货客户的联系地址	文本			否	导入运单信息
1.8.4	收货客户信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
手机	收货联系人的手机号码	文本			否	
电话	收货联系人的电话号码	文本			否	
联系人	收货客户的个人代表	文本			是	
地址	收货客户的联系地址	文本			否	提货方式为送货时必填
1.8.5	运输信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
货物状态	货物当前状态，包含：收货部门库存中、收货部门已出库（已出收货部门库存，中转部门未入库）、中转部门库存中、中转部门已出库（已出中转部门库存，即货物在途运输）、到达部门库存中、到达部门送货中。	文本			是	系统自动带出数据
注：分批配载的货物，以距离最终配载部门最近的部门作为参照。
提货方式	货物提取方式	下拉框			是	
目的站	货物的目的站	文本			是	显示更改前的目的站
提货网点	货物的提货网点	文本			是	显示更改前的提货网点
运输性质	货物的运输性质	文本			是	
配载类型	货物的配载类型	文本			否	由运输性质决定
预配航班	空运班次，含早班、中班、晚班	文本			否	
返单类别	签收单返回类型，含签收单原件返回、传真返回、扫描上传、无需返回	下拉框			是	
对外备注	传达给客户的备注信息	下拉框				可选择多项
对内备注	公司内部备注信息	文本			是	
1.8.6	转运信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
转运目的站	转运提货网点对应的目的站	文本			是	
转运提货网点	转运的提货网点	公共选择框			是	
转运运输性质	转运运输性质	下拉框			是	
转运配载类型	转运的配载类型	下拉框			否	
转运预配航班	转运为空运的预配航班	下拉框			否	
转运计费类型	转运货物的计费类型	文本			是	
转运费率	转运货物计费费率	文本			是	
转运费	转运货物费用	文本			是	
1.8.7	转运记录
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
转运目的站	转运提货网点对应的目的站					
转运提货网点	转运的提货网点					
转运运输性质	转运运输性质					
转运配载类型	转运的配载类型					若无则显示为空
转运预配航班	转运为空运的预配航班					若无则显示为空
转运计费类型	转运货物的计费类型					
转运费率	转运货物计费费率					
转运费	转运货物费用					

1.8.8	返货信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
返货目的站	返货提货网点对应的目的站	文本			是	
返货提货网点	货物返回的提货网点	公共选择框			是	
返货运输性质	货物返回运输性质 	下拉框			是	
返货计费类型	货物返回的计费类型	文本			是	
返货费率	货物返回的计费费率	文本			是	
返货费	返货费用	文本			是	
1.8.9	货物信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
名称	货物的名称	文本			是	
包装	货物的外包装	文本			是	
件数	货物的件数	文本			是	
重量	货物的重量	文本			是	
尺寸	货物的尺寸	文本			否	
体积	货物的体积	文本			是	
货物类型	货物的A/B类型，区分大小货	单选按钮			否	
大车直送		复选框			否	
贵重物品		复选框			否	
特殊物品		复选框			否	
1.8.10	增值业务信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
保价声明价值	货物保价金额	文本		8	是	
代收货款	代收货款金额	文本		8	是	
退款类型	代收货款退款方式	下拉框			否	
收款人	代收货款收款人	文本			否	
收款账号	收款人银行账号	文本			否	
包装费	货物包装费用	文本			是	若无则输入0
送货费	货物送货费用	文本			是	若无则输入0
装卸费	装卸费用	文本			是	若无则输入0
1.8.11	计费付款信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
公布价运费	根据公布价计算的运费				是	公布价运费=运费+转运费或返货费
增值服务费	增值服务费用总计				是	增值服务费=运单增值服务费+转运费或返货费
优惠费用	优惠打折的总费用				是	
费用合计	向客户收取的费用总计				是	
付款方式	承运费用付款的方式	下拉框			是	
到付金额	收货客户需要支付的费用	文本			是	若无则输入0
现付金额	发货客户需要支付的费用	文本			是	若无则输入0
预付费保密	对预付费用进行保密	复选框			否	
1.8.12	变更信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
变更项	运单信息发生变更的项目				是	系统根据更改项自动生成显示
变更前信息	变更项变更前对应的运单信息				是	系统自动生成
变更后信息	变更项变更后对应的运单信息				是	系统自动生成
1.8.13	详细计价信息（转运）
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
计费类型	变更前运费与转运费进行累加后对应的计费类型				是	
计费重量	变更前运费与转运费进行累加后对应计费重量				是	
费率	变更前运费与转运费进行累加后对应的费率				是	
保价费率					是	
代收费率					是	
运费	变更前运费+转运费				是	
保价费					是	
代收手续费					是	
包装费					是	
送货费					是	
其他费用					是	
优惠费用					是	
费用合计						
1.8.14	详细计价信息（返货）
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
计费类型	变更前运费与返货费进行累加后对应的计费类型				是	
计费重量	变更前运费与返货费进行累加后对应计费重量				是	
费率	变更前运费与返货费进行累加后对应的费率				是	
保价费率					是	
代收费率					是	
运费	变更前运费+返货费				是	
保价费					是	
代收手续费					是	
包装费					是	
送货费					是	
其他费用					是	
优惠费用					是	
费用合计						
1.9	非功能性需求
使用量	每天处理的运单约为1000000单，变更运单的数量占比约为20% 
2012年全网估计用户数	营业员数量约10000名
响应要求（如果与全系统要求 不一致的话）	系统一般需求
使用时间段	营业部上班时间
高峰使用时间段	9:00-16:00
1.10	接口描述：
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
客户信息接口	CRM系统	FOSS调用CRM客户信息接口，
查询录入客户信息
电子地图接口	GIS系统	FOSS调用电子地图接口查询录入目的站、提货网点信息
库存接口	中转子系统	FOSS调用中转库存接口判断货物是否已签收出库
财务类变更接口	结算系统	FOSS调用该接口判断是否可发起财务类变更


 */
/**
 * 1.5.3	界面描述
主界面标题：变更运单。
“变更运单”主界面包含变更基本条件录入区域、
运单信息显示及编辑区域、功能按钮区域。
起草变更单（内部）操作：用户进入“变更运单”主界面后
（见起草变更单（内部）界面-1），
导入运单信息至操作界面，
选择运单变更为“内部要求”，
录入变更原因并修改运单信息，
最终上传变更凭证提交运单变更申请。
1.变更基本条件录入区域：
1）单号：起草运单变更对应的运单号。
2）客户要求：
由于客户原因发起的运单变更需求；
3）内部要求：
由于内部操作失误发起的运单变更需求；
4）变更类型：
客户要求的运单变更包含转运、返货、更改、作废，
内部要求的变更包含更改、中止。
5）变更原因：
起草变更运单的原因。
2.运单信息显示及编辑区域：
1）运单基础信息：
包含收货部门、变更单号、上门接货。
2）发货客户信息：
包含发货人手机、电话、客户名称、联系人、地址。
3）收货客户信息：
包含收货人手机、电话、联系人、地址。
4）运输信息：
包含货物状态、提货方式、目的站、提货网点、
运输性质、配载类型、预配航班、
返单类别、对外备注、对内备注。
5）货物信息：货物的基本信息，
包含货物名称、包装、件数、重量、尺寸、
体积、货物类型、大车直送、
贵重物品、特殊物品。
5）增值业务信息：包含保价声明价值、代收货款、
退款类型、收款人、收款账号、包装费、
送货费、装卸费、其他费用项。
6）计费付款信息：包含公布价运费、
增值服务费、优惠费用、费用合计、
付款方式、到付金额、现付金额、
预付费保密。
7）详细计价信息：默认隐藏不显示，
点击向左伸展按钮后伸展显示（见起草变更单
（内部）界面-2）。包含计费类型、计费重量、
费率、运费、保价声明价值、保价费率、保价费、
代收货款、代收费率、代收手续费、包装费、
送货费、其他费用、优惠费用、费用合计。
8）变更信息：变更运单条目明细显示。
该区域主要显示变更的项目及变更前后对应的运单信息。
9）上传凭证区域：
上传变更凭证电子件。
3.功能按钮：
导入：点击导入按钮将运单号对应的运单信息展现在变更运单界面。
提交：点击提交变更运单申请。
打印：提交运单变更后，可点击打印变更单。
1.6	操作步骤
序号	基本步骤	相关数据	补充步骤
1	点击变更运单菜单进入“变更运单”主界面		系统初始化界面控件值
2	输入运单号，点击“导入”按钮	运单信息	系统判断是否允许发起运单变更：
1）若允许，则系统搜索运单信息并根据数据元素的对应关系将运单信息带至变更运单界面相应控件，
参见业务规则SR1；
2）若不允许，则系统弹出提示框给予相应提示。
参见业务规则SR2
3	点击“内部要求”单选按钮 		
1.	运单项对应的编辑状态发生变化，
参见业务规则SR3；
2.	上传凭证区域显示默认上传的变更凭证名称，
参见业务规则SR4。
4	用户在“变更原因“输入框内输入内部申请变更运单的原因	变更运单原因	
5	用户在运单信息显示区域修改相应的运单信息		
“变更信息”区域显示变更项及其变更前后对应的运单信息，参见业务规则SR5
6	点击变更凭证所在行的“上传”按钮 	变更凭证电子件	
弹出【路径选择】模式窗口，参见业务规则SR10
7	选择凭证存放的本地路径，点击“确定”按钮		
凭证上传至变更界面
8	点击“提交”按钮		弹出【运单变更信息】对话框，
回显运单变更的信息，参见系统用例SUC-490：显示运单变更明细
9	点击对话框界面的“确定”按钮		
系统弹出对话框提示是否确定提交运单变更申请。
10	点击“确定”按钮，确定提交运单变更申请		
系统校验是否满足运单变更申请的条件，参见业务规则SR2、SR8
1.	若满足则系统提示运单变更申请成功，同时
1）系统根据凭证存放路径找到凭证文件后保存到系统中；
2）“打印”按钮变为可点击。
2.	若不满足则系统给予提示。

扩展事件

序号	扩展事件	相关数据	备注
2a	输入运单号，点击“导入”按钮后，
若未找到对应的运单信息，系统给以提示		
2b	运单信息导入变更运单界面相应控件后，
若再次点击“导入”按钮还原当前运单信息		
7a	用户可以点击变更凭证所在行“删除”按钮删除已上传的凭证，
重新选择文件上传	变更凭证电子件	
7b	用户可以点击变更凭证所在行“查看”按钮查看已上传的凭证	
变更凭证电子件	
8a	若未对运单信息做任何修改，
提交时系统给予提示不能提交		
9a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
10a	点击对话框界面的“取消”按钮		
取消运单变更申请，返回运单变更主界面
1.7	业务规则
序号	描述
SR1	1.  由于整车运单信息与非整车运单信息不同，
导入整车运单至变更运单界面后，
整车运单信息中不存在的字段控件值为空，不可编辑。
2.  如导入的运单为整车运单，
则运输性质控件显示为“整车”。
SR2	
下表为不能起草运单变更的类型及不能起草时系统提示内容

序号	不能起草运单变更的类型	提示内容
1	运单状态为“已保存待补录”的运单	
运单未补录，不能起草运单变更！
2	运单状态为“作废”、“中止”的运单	
运单已作废，不能起草运单变更！
运单已中止，不能起草运单变更！
3	运单对应的收货部门与系统当前组织不一致	该单的收货部门不是您部门，
不能起草运单变更！
4	运单状态为“已签收”的运单	货物已签收，
不能起草运单变更！
5	变更单状态为“待审核”或“待受理”的运单	
该运单有运单变更单还未被审核，不能起草变更运单！
该运单有运单变更单还未被受理，不能起草变更运单！
6	运单已进行结清货款操作	该运单已进行结清货款操作，
如需更改请联系到达部门进行反结清货款操作！
7	财务锁定的运单（财务将不允许发起变更的运单进行锁定）
不能发起运单变更 
该运单已被财务锁定，
不能起草变更运单！


SR3	1．	运单无出库记录，
不允许起草转运单、返货单；
a.	客户来源可以选择更改、作废；
b.	内部来源可以选择更改、中止
2．	运单出库记录，不允许起草作废单，
涉及到目的站、提货网点的修改必须到转运信息、
返货信息面板修改；如果变更提货方式，
由“派送”该为“自提”，原始目的站不支持“自提”，
提示“原始目的站不支持自提，请选择转运或返货类型”
a.	客户来源可以选择更改、转运、返货；
c.	内部来源可以选择更改、中止
3．	若未选择变更要求（客户要求/内部要求），
运单信息显示区域的控件为不可编辑状态；
若选择了变更要求，
则不可变更的运单项对应的控件为不可编辑状态，
可以变更的运单项对应的控件为可编辑状态。
运单项能否进行变更主要受变更要求、
运输类型、货物当前库存部门三个维度的影响。
其中内部要求发起的运单变更，
可变更及不可变更的运单项请详见下表：
     

SR4	1.	选择客户要求变更时，
上传凭证名称默认显示为“身份证复印件”及“运单客户联”，
可另新增变更凭证；选择内部要求变更时，
上传凭证名称默认显示为“运单原件”，
可另新增变更凭证；
2.	默认显示的变更凭证所在行不可删除，
新增的变更凭证所在行可删除；
3.	已选择上传的变更凭证可点击查看，
也可点击删除。
SR5	1.	 “变更项”列显示为变更的运单项名称，
“变更前信息”列显示变更项在变更前对应的运单信息，
“变更后信息”列显示变更项在变更后对应的运单信息。
如是转运或返货变更：“目的站”变更项对应的变更前信息为原目的站，
变更后信息为转运/返货目的站；
“提货网点”变更项对应的变更前信息为原提货网点，
变更后信息为转运/返货提货网点。
2.	对于“上门接货”、“预付费保密”、“大车直送”、
“贵重物品”、“特殊物品”为复选框的变更项，
变更前后对应的信息根据复选框勾选与否显示为是或否；
3.	若变更项变更前信息或变更后信息为空，
则“变更前信息”或“变更后信息”列显示为:—；
4.	以下运单项不列入变更项：计费类型、
计费重量、费率、保价费率、代收费率、装卸费、
其他费用（总金额）、转运运输性质、转运配载类型、
转运预配航班、转运计费类型、转运费率、
返货运输性质、返货计费类型；
5.	变更项行显示顺序为：运单基础信息变更项→
发货客户信息变更项→收货客户信息变更项→运输信息变更项→
货物信息变更项→增值业务信息变更项→详细计价信息变更项→计费付款信息变更项；
6.	“变更前信息”与“变更后信息”列显示内容不能相同。
SR6	1.	运单信息的修改录入操作参照运单生成相关系统用例的操作；
2.	修改运单信息时，
系统校验的业务规则参照运单生成相关系统用例的业务规则。
SR7	1.	关键增值服务信息的变更规则：

运单项	起草运单变更时对应的版本
费率	产品在运单信息生成时对应的公布价版本
保价费率	运单信息生成时的保价费率版本
代收费率	运单信息生成时的代收费率版本
公布价运费	运单信息生成时的公布价运费版本
保价费	运单信息生成时对应的收费标准
代收手续费	运单信息生成时对应的收费标准
送货费	运单信息生成时对应的收费标准
装卸费	运单信息生成时对应的收费标准
其他费用项	运单信息生成时的收费标准
优惠费用	运单开单信息生成时对应的优惠标准

综上：起草变更单（内部）时，产品及价格优惠版本统一执行运单开单时对应的版本。
举例：
公布价运费：运单开单时精准卡航对应的公布价（上门发货）运费最低一票为40元，在开单后系统维护调整为50元最低一票。则在起草变更单时，最低一票仍执行运单开单时的标准，即为40元一票。
2.	含有代收货款的运单，如取消代收货款（代收货款金额更改为0），代收手续费变为0。
SR8	提交变更运单时必须已上传变更凭证，否则不能提交
SR9	成功提交运单变更后，方可打印变更单
SR10	1.	弹出路径选择框，
默认指定路径在桌面，可选择保存路径；
2.	可上传的凭证扫描件，应该为图片，格式允许选择常见的JPG,GIF,PNG,BPM；
3.	上传图片大小有所限制（默认250K，允许系统后台配置），
如果超出所设范围，系统给出提示“您上传的文件已超过最大允许大小250K，请调整后重新上传。”。
SR11	对于发货客户的变更：
1.	同一发货客户，若客户资质发生变化；
a)	开单时为合同客户，开单后（起草更改单之前）
客户属性变为非合同客户： FOSS在开单时记录客户资质，起草更改单时仍可选择免费送货；
b)	开单时为非合同客户，开单后（起草更改单之前）
客户属性升级为合同客户：起草更改单时仍可选择免费送货；
2.	由某一发货客户更改为另一发货客户
a)	合同客户更改为非合同客户：原开单提货方式为免费送货，
与开单时保持一致，即直接清空提货方式，重新选择提货方式;
b)	非合同客户更改为合同客户：提货方式中增加"免费送货"选项。
SR12	1.	货物未到达第一打木架外场（开单录入代打木架信息时系统自动生成的代打木架信息），
允许修改代打包装信息
2.	货物已到达第一打木架外场，则不可发起代打包装信息更改
3.	若有代打包装，则在录入代打包装信息后，
系统自动计划出代打包装费用，显示至包装费中，
营业员或开单员可以任意修改包装费。
4.	在更改单界面中，加入代打包装货物件数的选择，
即流水号选择。在发起代打包装更改单时，
打开的代打包装信息中默认勾选开单录入的代装包装总件数的流水号，
即：开单录入代打木架4件，代打木箱3件，
则在更改单代打包装信息中，自勾选流水号1-7；
5.	允许点击“代打木架”按钮直接修改打包装信息
1.8	数据元素
1.8.1	变更基本录入信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
客户要求	客户提出的运单变更申请	单选框		10	是	默认为空
内部要求	由于内部开单失误而提出的运单变更申请	单选框		10	是	默认为空
变更类型	变更运单的类型，客户要求下包含：转运、返货、作废、更改，内部要求下包含更改、中止。	下拉框		10	是	默认为“更改”
变更原因	变更运单的原因	文本		80	是	默认为空
1.8.2	运单基础信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
收货部门	收取货物的部门				是	
变更单号	点击可变更运单单号	复选框			否	
可勾选时，则勾选后显示变更单号文本框（可编辑）
上门接货	前往客户处接收货物	复选框			否	

1.8.3	发货客户信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
手机	发货联系人的手机号码	文本			否	导入运单信息
电话	发货联系人的电话号码	文本			否	导入运单信息
客户名称	发货企业客户的公司名，个人客户的姓名	公共选择框			是	导入运单信息
联系人	发货客户的个人代表	文本			是	导入运单信息
地址	发货客户的联系地址	文本			否	导入运单信息
1.8.4	收货客户信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
手机	收货联系人的手机号码	文本			否	
电话	收货联系人的电话号码	文本			否	
联系人	收货客户的个人代表	文本			是	
地址	收货客户的联系地址	文本			否	提货方式为送货时必填
1.8.5	运输信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
货物状态	货物当前状态，包含：收货部门库存中、
收货部门已出库（已出收货部门库存，中转部门未入库）、
中转部门库存中、中转部门已出库（已出中转部门库存，即货物在途运输）、
到达部门库存中、到达部门送货中。	文本			是	系统自动带出数据
注：分批配载的货物，以距离最终配载部门最近的部门作为参照。
提货方式	货物提取方式	下拉框			是	
目的站	货物的目的站	文本			是	
提货网点	货物的提货网点	公共选择框			是	
运输性质	货物的运输性质	下拉框			是	
配载类型	货物的配载类型	下拉框			是	由运输性质决定
预配航班	空运班次，含早班、中班、晚班	下拉框			是	
返单类别	签收单返回类型，含签收单原件返回、传真返回、扫描上传、无需返回	下拉框			是	
对外备注	传达给客户的备注信息	下拉框				可选择多项
对内备注	公司内部备注信息	文本			是	
1.8.6	货物信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
名称	货物的名称	文本			是	
包装	货物的外包装	文本			是	
件数	货物的件数	文本			是	
重量	货物的重量	文本			是	
尺寸	货物的尺寸	文本			否	
体积	货物的体积	文本			是	
货物类型	货物的A/B类型，区分大小货	单选按钮			否	
大车直送		复选框			否	
贵重物品		复选框			否	
特殊物品		复选框			否	
1.8.7	增值业务信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
保价声明价值	货物保价金额	文本		8	是	
代收货款	代收货款金额	文本		8	是	
退款类型	代收货款退款方式	下拉框			否	
收款人	代收货款收款人	文本			否	
收款账号	收款人银行账号	文本			否	
包装费	货物包装费用	文本			是	若无则输入0
送货费	货物送货费用	文本			是	若无则输入0
装卸费	装卸费用	文本			是	若无则输入0
1.8.8	计费付款信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
公布价运费	根据公布价计算的运费				是	公布价运费=运费+转运费或返货费
增值服务费	增值服务费用总计				是	
优惠费用	优惠打折的总费用				是	
费用合计	向客户收取的费用总计				是	
付款方式	承运费用付款的方式	下拉框			是	
到付金额	收货客户需要支付的费用	文本			是	若无则输入0
现付金额	发货客户需要支付的费用	文本			是	若无则输入0
预付费保密	对预付费用进行保密	复选框			否	
1.8.9	变更信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
变更项	运单信息发生变更的项目				是	系统根据更改项自动生成显示
变更前信息	变更项变更前对应的运单信息				是	系统自动生成
变更后信息	变更项变更后对应的运单信息				是	系统自动生成
1.8.10	详细计价信息
字段名称 	说明 	输入限制	输入项提示文本	长度	是否必填	备注
计费类型	分为重量计费、体积计费两种				是	系统自动生成
计费重量	空运时为必填项，汽运时不可编辑				否	系统自动计算生成
费率					是	
保价费率					是	
代收费率					是	
运费					是	
保价费					是	
代收手续费					是	
包装费					是	
送货费					是	
其他费用					是	
优惠费用					是	
费用合计					是	
1.9	非功能性需求
使用量	每天处理的运单约为1000000单，变更运单的数量占比约为20%
2012年全网估计用户数	营业员数量约10000名
响应要求（如果与全系统要求 不一致的话）	系统一般需求
使用时间段	营业部上班时间
高峰使用时间段	9:00-16:00，19:00-21:00
1.10	接口描述：
接口名称 	对方系统（外部系统或内部其他模块）	接口描述
客户信息接口	CRM系统	FOSS调用CRM客户信息接口，查询录入客户信息
电子地图接口	GIS系统	FOSS调用电子地图接口查询录入目的站、提货网点信息
库存接口	中转子系统	FOSS调用中转库存接口判断货物是否已签收出库
财务类变更接口	结算系统	FOSS调用该接口判断财务是否可发起财务类变更，
若财务对运单进行了锁定，则不可发起财务类变更


 */
/**--------------------------------------
 * 1.	纸包装件数默认显示数值等于货物总件数，
 * 营业员可以修改各包装的件数；
 * 系统自动在录入下一个包装前计算显示剩余未录入的件数，
 * 例：某票货物为50件，则自动显示纸包装50，
 * 在营业员修改纸包装为20时，木包装自动显示为30，
 * 在营业员修改木包装为10时，
 * 纤包装自动显示为20，该过程中未录入包装数值的默认显示为0；
2.	货物包装总件数小于等于货物总件数；
 */
/**--------------------------------------
 * 1.	离线开单时，不录入代打木架信息；
 * 当木包装件数大于等于1时，系统不提示任何信息，
 * 也不弹出代打木架录入界面；
2.	离线开单的代打木架信息在离线开单提交时，
系统校验提醒；
 */
/**
 * 1.	运输类型为汽运时，货物类型为唯一选择项；即，
 * 非A即B；默认不可勾选，
 * 只有当走货路由经过特定的城市时需要录入货物类型,
 * 特定城市可在系统中进行配置；
2.	运输类型为空
默认显示为普货，目前只有这一个分类，该类型可做配置；
--------------------------------------
 */
/**--------------------------------------
 * 1.	系统根据货物名称匹配生成的勾选贵重物品，
 * 营业员不可去掉勾选；
2.	营业员也可以主动勾选贵重物品；
3.	件数等于1、体积小于等于0.05个方、
报价声明价值大于等于10000元，为贵重物品；
系统自动勾选贵重物品，
营业员可修改是否勾选；
4.	件数大于等于2时，平均体积（体积/件数）
小于等于0.5方，平均声明价值（保价声明价值/件数）
大于等于10000元，为贵重物品；
系统自动勾选贵重物品，
营业员可修改是否勾选；
1.	营业部开单时按打完木架后的包装开，
即包装中含“木架/木箱”，
开单件数为货物打木架/木箱前的实际件数（防止丢货），
尺寸和重量按照以下公式计算：
1.1	整票货物代打时：
开单体积=代打货物体积*1.4；
开单重量=所有货物重量+代打货物体积*42；
1.2	部分货物代打时，
开单体积=代打货物体积*1.4+未打木架货物体积；
开单重量=所有货物重量+代打货物体积*42。
即：营业部按照代打货物未打木架之前体积的1.4倍来开单收费，
重量另加，单票中未打木架的货物的体积和重量不变；
1.3	例如：一票货物需全部代打，
货物体积为1个方，重量为100KG，
则开单体积为1.4个方，
开单重量为100+1*42=142KG，
收取客户包装费为150*1.4=210元；
1.4	需要加托时，仍按照50元/个另外收取费用，
托的重量和体积不再另加；
营业部不需要再更改由于打木架引起重量和体积的变化；
2.	开单件数为代打木架前货物实际件数，
包装为打木架后的包装，
打木架后件数发生变化后，
需及时更改件数；
--------------------------------------
 */

/**--------------------------------------
 * 每天处理的运单约为1000000单
营业员数量约10000名
系统一般要求
营业部、集中开单小组上班时间
营业部：16：00-20：00
集中开单小组：21：00-次日4：00
 */

/**--------------------------------------
 * 本界面为录入增值服务信息。
界面主要分为三个部分：
录入增值服务、
录入包装费、
查询其它费用。
1.	录入增值服务
录入增值服务分为两个部分：
录入增值服务信息界面、
录入其它费用列表；
1.1	录入增值服务信息界面
录入增值服务信息界面包括：
1.1.1	保价声明价值；
1.1.2	保价费率：
保价费率可由基础资料配置，
可按出发城市区域，
出发营业部等；
1.1.3	保价费；
1.1.4	代收货款；
1.1.5	代收费率；
1.1.6	代收手续费；
1.1.7	退款类型：
包括三日退、
退日退、
审核退，
默认三日退；
1.1.8	包装费；
1.1.9	装卸费；
1.1.10	送货费；
1.1.11	其它费用合计；
1.1.12	返单类别：
包括无需返单、
原件签收单返回、
传真件签收单返回、
扫描件返回，
默认无需返单；
1.1.13	预付费保密；
1.2	录入其它费用列表
录入其它费用列表包括：
1.2.1	费用名称；
1.2.2	费用金额；
1.2.3	新增其它费用：
功能按钮；
1.2.4	删除其它费用：
功能按钮；
2.	录入包装费
其界面和界面和需求详见系统用例“DP-FOSS-接送货系统用例-运单生成-确认承运信息-录入增值服务信息”中“录入包装费”；
3.	查询其它费用
其界面和界面和需求详见系统用例“DP-FOSS-接送货系统用例-运单生成-确认承运信息-录入增值服务信息”中“查询其它费用”；
--------------------------------------
 */
/**
 * /**--------------------------------------
 * 1.	若货物为违禁品，
 * 	则系统自动提示“货物为违禁品，不可开单！”；
 2.	若货物为拒收品，
 则系统自动提示“货物为拒收品，不可开单！”；
 3.	若货物为贵重物品，
 则系统自动勾选“贵重物品”，
 且不可修改；
 4.	若货物为限保物品，
 则系统自动限定保价金额，且不可修改，
 并提示“货物为限保物品”；
 5.	违禁品、拒收品、
 贵重物品、限保物品（含保价金额上限）
 具体类型可在系统中进行配置；
 1.	货物重量单位为千克
 */
/**--------------------------------------
 * 1.	货物尺寸为计算器输入，
 * 显示为输入文本；
2.	尺寸计算单位为厘米，
尺寸计算出数据后转换单位为立方米后，
在货物体积中显示数据；例如：
尺寸录入为：50*50*20，
则体积显示数据为：0.05；
 */
/**--------------------------------------
 * 1.	货物体积单位为立方米；
2.	营业员可以修改通过尺寸计算器
计算得出的体积数据；
3.	系统设置货物重量体积比区间值（该值由基础资料配置），
在运单提交时，
系统自动对重量体积比进行校验：
即重量体积比X=重量/体积；
3.1	当X不在设置的区间中，
弹出提示“请确认录入的重量体积是否准确！”；
（该弹窗有两个按钮：确定、取消）点击确定时，
弹出离线开单确认运单信息界面；点击取消，
点返回运单录入界面；
3.2	当X在区间中，无提示；
直接进入确认运单信息界面；
--------------------------------------
 */
/**--------------------------------------
 * 1.	纸包装件数默认显示数值等于货物总件数，
 * 营业员可以修改各包装的件数；
 * 系统自动在录入下一个包装前计算显示剩余未录入的件数，
 * 例：某票货物为50件，则自动显示纸包装50，
 * 在营业员修改纸包装为20时，木包装自动显示为30，
 * 在营业员修改木包装为10时，
 * 纤包装自动显示为20，该过程中未录入包装数值的默认显示为0；
2.	货物包装总件数小于等于货物总件数；
 */
/**--------------------------------------
 * 1.	离线开单时，不录入代打木架信息；
 * 当木包装件数大于等于1时，系统不提示任何信息，
 * 也不弹出代打木架录入界面；
2.	离线开单的代打木架信息在离线开单提交时，
系统校验提醒；
 */
/**
 * 1.	运输类型为汽运时，货物类型为唯一选择项；即，
 * 非A即B；默认不可勾选，
 * 只有当走货路由经过特定的城市时需要录入货物类型,
 * 特定城市可在系统中进行配置；
2.	运输类型为空
默认显示为普货，目前只有这一个分类，该类型可做配置；
--------------------------------------
 */
/**--------------------------------------
 * 1.	系统根据货物名称匹配生成的勾选贵重物品，
 * 营业员不可去掉勾选；
2.	营业员也可以主动勾选贵重物品；
3.	件数等于1、体积小于等于0.05个方、
报价声明价值大于等于10000元，为贵重物品；
系统自动勾选贵重物品，
营业员可修改是否勾选；
4.	件数大于等于2时，平均体积（体积/件数）
小于等于0.5方，平均声明价值（保价声明价值/件数）
大于等于10000元，为贵重物品；
系统自动勾选贵重物品，
营业员可修改是否勾选；
1.	营业部开单时按打完木架后的包装开，
即包装中含“木架/木箱”，
开单件数为货物打木架/木箱前的实际件数（防止丢货），
尺寸和重量按照以下公式计算：
1.1	整票货物代打时：
开单体积=代打货物体积*1.4；
开单重量=所有货物重量+代打货物体积*42；
1.2	部分货物代打时，
开单体积=代打货物体积*1.4+未打木架货物体积；
开单重量=所有货物重量+代打货物体积*42。
即：营业部按照代打货物未打木架之前体积的1.4倍来开单收费，
重量另加，单票中未打木架的货物的体积和重量不变；
1.3	例如：一票货物需全部代打，
货物体积为1个方，重量为100KG，
则开单体积为1.4个方，
开单重量为100+1*42=142KG，
收取客户包装费为150*1.4=210元；
1.4	需要加托时，仍按照50元/个另外收取费用，
托的重量和体积不再另加；
营业部不需要再更改由于打木架引起重量和体积的变化；
2.	开单件数为代打木架前货物实际件数，
包装为打木架后的包装，
打木架后件数发生变化后，
需及时更改件数；
--------------------------------------
 */

/**--------------------------------------
 * 每天处理的运单约为1000000单
营业员数量约10000名
系统一般要求
营业部、集中开单小组上班时间
营业部：16：00-20：00
集中开单小组：21：00-次日4：00
 */
package com.deppon.foss.module.pickup.changingexp.client.action;

import java.awt.event.ActionEvent;
import java.lang.reflect.InvocationTargetException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.JOptionPane;

import org.apache.commons.lang.StringUtils;
import org.apache.log4j.Logger;

import com.deppon.foss.framework.client.commons.i18n.I18nManager;
import com.deppon.foss.framework.client.commons.i18n.II18n;
import com.deppon.foss.framework.client.component.buttonaction.IButtonActionListener;
import com.deppon.foss.framework.client.core.context.SessionContext;
import com.deppon.foss.framework.client.widget.msgbox.MsgBox;
import com.deppon.foss.framework.exception.BusinessException;
import com.deppon.foss.framework.shared.util.string.StringUtil;
import com.deppon.foss.module.base.baseinfo.api.shared.domain.EmployeeEntity;
import com.deppon.foss.module.base.baseinfo.api.shared.domain.OrgAdministrativeInfoEntity;
import com.deppon.foss.module.base.baseinfo.api.shared.domain.UserEntity;
import com.deppon.foss.module.pickup.changingexp.client.service.IWaybillRfcService;
import com.deppon.foss.module.pickup.changingexp.client.service.WaybillRfcServiceFactory;
import com.deppon.foss.module.pickup.changingexp.client.ui.dialog.RFCInfoDialog;
import com.deppon.foss.module.pickup.changingexp.client.ui.internal.IncrementPanel.WaybillOtherCharge;
import com.deppon.foss.module.pickup.changingexp.client.utils.Common;
import com.deppon.foss.module.pickup.changingexp.client.vo.WaybillInfoVo;
import com.deppon.foss.module.pickup.common.client.utils.BZPartnersContextUtil;
import com.deppon.foss.module.pickup.common.client.utils.BZPartnersJudge;
import com.deppon.foss.module.pickup.common.client.utils.BooleanConvertYesOrNo;
import com.deppon.foss.module.pickup.common.client.utils.CommonUtils;
import com.deppon.foss.module.pickup.common.client.vo.DataDictionaryValueVo;
import com.deppon.foss.module.pickup.common.client.vo.DeliverChargeEntity;
import com.deppon.foss.module.pickup.common.client.vo.OtherChargeVo;
import com.deppon.foss.module.pickup.common.client.vo.PtpWaybillInfoOrgVo;
import com.deppon.foss.module.pickup.common.client.vo.PtpWaybillOrgVo;
import com.deppon.foss.module.pickup.common.client.vo.WaybillDiscountVo;
import com.deppon.foss.module.pickup.common.client.vo.WaybillPanelVo;
import com.deppon.foss.module.pickup.waybill.shared.define.ExpWaybillConstants;
import com.deppon.foss.module.pickup.waybill.shared.define.WaybillConstants;
import com.deppon.foss.module.pickup.waybill.shared.define.WaybillRfcConstants;
import com.deppon.foss.module.pickup.waybill.shared.domain.ActualFreightEntity;
import com.deppon.foss.module.pickup.waybill.shared.domain.WaybillChargeDtlEntity;
import com.deppon.foss.module.pickup.waybill.shared.domain.WaybillDisDtlEntity;
import com.deppon.foss.module.pickup.waybill.shared.domain.WaybillEntity;
import com.deppon.foss.module.pickup.waybill.shared.domain.WaybillPaymentEntity;
import com.deppon.foss.module.pickup.waybill.shared.domain.WaybillRfcEntity;
import com.deppon.foss.module.pickup.waybill.shared.domain.WoodenRequirementsEntity;
import com.deppon.foss.module.pickup.waybill.shared.dto.AddressFieldDto;
import com.deppon.foss.module.pickup.waybill.shared.dto.LabeledGoodChangeHistoryDto;
import com.deppon.foss.module.pickup.waybill.shared.dto.PtpWaybillDto;
import com.deppon.foss.module.pickup.waybill.shared.dto.UploadVoucherDto;
import com.deppon.foss.module.pickup.waybill.shared.dto.WaybillDto;
import com.deppon.foss.module.pickup.waybill.shared.dto.WaybillRfcChangeDetailDto;
import com.deppon.foss.module.pickup.waybill.shared.dto.WaybillRfcSubmitDto;
import com.deppon.foss.module.pickup.waybill.shared.dto.WaybillStockStatusDto;
import com.deppon.foss.util.UUIDUtils;
import com.deppon.foss.util.define.FossConstants;

/**
 * 
 * 提交更改单至远程服务器
 * @author 102246-foss-shaohongliang
 * @date 2012-11-29 下午1:54:16
 */
public class WaybillRfcCommitAction implements IButtonActionListener<RFCInfoDialog> {
	
	
	/**
	 * 国际化
	 */
	private static final II18n i18n = I18nManager.getI18n(WaybillRfcCommitAction.class);
	

	/**
	 * log
	 */
	private static final Logger LOG = Logger
			.getLogger(WaybillRfcCommitAction.class);

	
	//变更确认Dialog
	private RFCInfoDialog ui;
	
	/**
	 * SERVICE
	 */
	private IWaybillRfcService rfcService = WaybillRfcServiceFactory.getWaybillRfcService();
	
	/**
	 * 
	 * 提交更改单
	 * @author 102246-foss-shaohongliang
	 * @date 2012-12-24 下午5:27:34
	 * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
	 */
	@Override
	public void actionPerformed(ActionEvent e) {
    	if(JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(ui, i18n.get("foss.gui.changingexp.waybillRfcCommitAction.confirmDialog.waybillRfcApply"), i18n.get("foss.gui.changingexp.waybillRFCUI.common.prompt"), JOptionPane.OK_CANCEL_OPTION)){
    		
    		//更改单提交DTO
    		WaybillRfcSubmitDto submitDto = getSubmitDto();
    		try {
    			/**
				 *是否有效的营业部外发 ,建立绑定关系的不能起草更改          
				  */
				Boolean isValid = rfcService.isExternalBillRecords(submitDto.getRfcEntity().getWaybillNo(),WaybillConstants.WAYBILLRFC_TRF_METHOD);
				if (isValid){
					MsgBox.showInfo(i18n.get("pickup.changingexp.validExternalBillRecords"));
				}else{
				WaybillRfcEntity rfcEntity = rfcService.commitWaybillRfc(submitDto);
				ui.setOk(true);
				//提交成功
				ui.getWaybillRFCUI().setCommited(rfcEntity);
				ui.dispose();
				MsgBox.showInfo(i18n.get("foss.gui.changingexp.waybillRfcCommitAction.msgBox.waybillRfcSubmit"));
			} 
    		}catch (BusinessException e1) {
				LOG.error("运单号"+submitDto.getRfcEntity().getWaybillNo()+"提交更改出现NullPointerException"+e1.getMessage(), e1);
				MsgBox.showInfo("运单号"+submitDto.getRfcEntity().getWaybillNo()+"提交更改时出现业务异常："+e1.getMessage());
				throw e1;
			} catch (Exception e1) {
				LOG.error("运单号"+submitDto.getRfcEntity().getWaybillNo()+"提交更改出错"+e1.getMessage(),e1);
				MsgBox.showInfo(e1.getMessage());
			}
    		
    	}
	}

	
	/**
	 * 
	 * 封装提交对象
	 * @author 102246-foss-shaohongliang
	 * @date 2012-11-19 下午2:07:47
	 */
	private WaybillRfcSubmitDto getSubmitDto() {
		WaybillInfoVo waybillInfoVo = ui.getWaybillInfoVo();
		WaybillRfcSubmitDto submitDto = new WaybillRfcSubmitDto();
		
		//变更、转运、作废时填充更改后信息
		String rfcType = waybillInfoVo.getRfcType().getValueCode();
		
		
		 List<WaybillRfcChangeDetailDto> detailVos = ui.getWaybillRFCUI()
					.getMessagePanel().getChangedInfoPanel().getTableData();
		
		 /**
			 * 在收集信息到submitDto之前，需要判断下如果非更改运单号，判断老版本运单号和提交的运单号是否一致，如果不一致，
			 * 把老版本运单版本号设置到提交DTO中
			 */
		 checkWaybillNO(detailVos,waybillInfoVo);
		
		
		
		if(WaybillRfcConstants.INVALID.equals(rfcType) || WaybillRfcConstants.ABORT.equals(rfcType)){
			//do nothing
		}else{
			updateWaybillDtoWithChangedInfo(waybillInfoVo);
		}
		submitDto.setStockStatus(waybillInfoVo.getStockStatus());
		submitDto.setWaybillDto(waybillInfoVo.getWaybillDto());
		
		// wutao -- start
		// date 2014-11-24
		// 转换数据【是否统一结算】【合同部门】【催款部门】
		WaybillPanelVo waybillBean =ui.getWaybillRFCUI().getBinderWaybill();
		WaybillDto wdto = waybillInfoVo.getWaybillDto();
		ActualFreightEntity afe = wdto.getActualFreightEntity();
		if (WaybillConstants.IS_NOT_NULL_FOR_AI.equals(waybillBean.getStartCentralizedSettlement())) {
			afe.setStartCentralizedSettlement(FossConstants.YES);
		} else {
			afe.setStartCentralizedSettlement(FossConstants.NO);
		}
		afe.setStartContractOrgCode(waybillBean.getStartContractOrgCode());
		afe.setStartContractOrgName(waybillBean.getStartContractOrgName());
		afe.setStartReminderOrgCode(waybillBean.getStartReminderOrgCode());

		// 设置发货人【是否统一结算】【合同部门】【催款部门】
		if (WaybillConstants.IS_NOT_NULL_FOR_AI.equals(waybillBean.getArriveCentralizedSettlement())) {
			afe.setArriveCentralizedSettlement(FossConstants.YES);
		} else {
			afe.setArriveCentralizedSettlement(FossConstants.NO);
		}
		afe.setArriveContractOrgCode(waybillBean.getArriveContractOrgCode());
		afe.setArriveContractOrgName(waybillBean.getArriveContractOrgName());
		afe.setArriveReminderOrgCode(waybillBean.getArriveReminderOrgCode());

		wdto.setActualFreightEntity(afe);
		submitDto.setWaybillDto(wdto);
		// wutao ==end
		
		//WaybillRfcEntity
		WaybillRfcEntity rfcEntity = new WaybillRfcEntity();
		rfcEntity.setWaybillNo(waybillInfoVo.getWaybillNo()) ;
		rfcEntity.setRfcSource(waybillInfoVo.getRfcSource());
		rfcEntity.setRfcType(waybillInfoVo.getRfcType().getValueCode());
		rfcEntity.setRfcReason(waybillInfoVo.getRfcReason());
		rfcEntity.setNotes(waybillInfoVo.getRfcReason());
	    rfcEntity.setOldVersionWaybillId(waybillInfoVo.getId());
	    if(WaybillConstants.DEPPON_CUSTOMER.equals(waybillInfoVo.getDeliveryCustomerCode())){
	    	rfcEntity.setIsFinanceChange(FossConstants.NO);
	    }else{
	    	rfcEntity.setIsFinanceChange(FossConstants.YES);
	    }
	    
	    rfcEntity.setReceiverSms(ui.getCboConsignee().isSelected()?FossConstants.YES:FossConstants.NO);
	    rfcEntity.setDeliverSms(ui.getCboConsigner().isSelected()?FossConstants.YES:FossConstants.NO);
	    //设置中转费、费率
	    if(WaybillRfcConstants.TRANSFER.equals(rfcType)){
		    rfcEntity.setTransportFee(waybillInfoVo.getTfrFee());
		    rfcEntity.setTransportFeeRate(waybillInfoVo.getTfrUnitPrice());
		}else if(WaybillRfcConstants.RETURN.equals(rfcType)){
		    rfcEntity.setTransportFee(waybillInfoVo.getRtnFee());
		    rfcEntity.setTransportFeeRate(waybillInfoVo.getRtnUnitPrice());
		}
	   
	    submitDto.setRfcEntity(rfcEntity);
	    
	   
	    submitDto.setRfcChangeDetailDtos(detailVos);
	    
	    
	    
	    
	    //变更明细
	    StringBuffer sb = new StringBuffer();
		if(detailVos != null){
			for(WaybillRfcChangeDetailDto detailDto : detailVos){
				if(FossConstants.YES.equals(detailDto.getVisible())){
					sb.append(detailDto.getRfcItems());
					sb.append(":");
					sb.append(detailDto.getBeforeRfcInfo());
					sb.append("->");
					sb.append(detailDto.getAfterRfcInfo());
					sb.append(";");
				}
			}
		}
		rfcEntity.setChangeItems(sb.toString());
	    
	    List<UploadVoucherDto> uploadVoucherDtos = ui.getWaybillRFCUI()
	    		.getUploadVoucherPanel().getTableData();
	    submitDto.setUploadVoucherDtos(uploadVoucherDtos);
	    
	    // 打木架流水号
	    
	    int newTotal = ui.getWaybillInfoVo().getGoodsQtyTotal();
	    int oldTotal = ui.getWaybillRFCUI().getOriginWaybill().getGoodsQtyTotal();
	    
	    int newWood = 0;
	    int oldWood = 0;
//	    if(ui.getWaybillRFCUI().getOriginWaybill().getWood()!=null){
//	    	oldWood  = ui.getWaybillRFCUI().getOriginWaybill().getWood();
//	    }
		   
	    
	    
	   
	    if( waybillInfoVo.getWaybillDto()!=null && waybillInfoVo.getWaybillDto().getWoodenRequirementsEntity()!=null){
	    	WoodenRequirementsEntity newwoodRequirements = waybillInfoVo.getWaybillDto().getWoodenRequirementsEntity();
	    	Integer box = newwoodRequirements.getBoxGoodsNum();
	    	Integer sand = newwoodRequirements.getStandGoodsNum();
	    	if(box==null){
	    		box = Integer.valueOf(0);
	    	}
	    	if(sand ==null){
	    		sand = Integer.valueOf(0);
	    	}
	    	newWood = box + sand;
	    }
	    
	    
	    
	    if( ui.getWaybillRFCUI().getOriginWaybill() != null 
	    		&& ui.getWaybillRFCUI().getOriginWaybill().getWaybillDto()!=null
	    		&& ui.getWaybillRFCUI().getOriginWaybill().getWaybillDto().getWoodenRequirementsEntity()!=null
	    		){
	    	WoodenRequirementsEntity oldwoodRequirements = ui.getWaybillRFCUI().getOriginWaybill().getWaybillDto().getWoodenRequirementsEntity();
	 	    
	    	Integer box = oldwoodRequirements.getBoxGoodsNum();
	    	Integer sand = oldwoodRequirements.getStandGoodsNum();
	    	if(box==null){
	    		box = Integer.valueOf(0);
	    	}
	    	if(sand ==null){
	    		sand = Integer.valueOf(0);
	    	}
	    	oldWood = box + sand;
	    }
	    
	   // ui.getWaybillInfoVo().get
	    
	    //只有总件数或者打木架件数发生了改变
	    if(newTotal!=oldTotal 
	    		|| newWood!=oldWood){
	    	 submitDto.setWoodenRequirementLabeledGoods(waybillInfoVo.getLabeledGoodChangeHistoryDtoList());
	  	   
	    }else{
	    	 submitDto.setWoodenRequirementLabeledGoods(new ArrayList<LabeledGoodChangeHistoryDto> ());
	    }
	   
	    /**
		 * 增加交易流水号
		 * @author:218371-foss-zhaoyanjun
		 * @date:2014-12-8上午10:31
		 */
		if(waybillInfoVo.getTransactionSerialNumber()!=null)
		{
			WaybillDto wd = waybillInfoVo.getWaybillDto();
			ActualFreightEntity aey =wd.getActualFreightEntity();
			aey.setTransactionSerialNumber(waybillInfoVo.getTransactionSerialNumber());
			wd.setActualFreightEntity(aey);
			submitDto.setWaybillDto(wdto);
		}
		//合伙人项目
		submitDto.getWaybillDto().setPtpWaybillDto(getPtpWaybillInfo(waybillInfoVo));
	    return submitDto;
	}
	
	private PtpWaybillDto getPtpWaybillInfo(WaybillInfoVo vo){
		PtpWaybillDto ptpWaybillDto = new PtpWaybillDto();
		PtpWaybillOrgVo ptpWaybillOrgVo = vo.getPtpWaybillOrgVo();
		//基础送货费
		ptpWaybillDto.setBaseDeliveryGoodsFeeOrg(StringUtils.isNotBlank(ptpWaybillOrgVo.getBaseDeliveryGoodsFee()) ? ptpWaybillOrgVo.getBaseDeliveryGoodsFee():"0");
		// 打木箱货物费用
		ptpWaybillDto.setBoxChargeOrg(ptpWaybillOrgVo.getBoxCharge()!=null ? ptpWaybillOrgVo.getBoxCharge() : BigDecimal.ZERO);
		//代收货款手续费
		ptpWaybillDto.setCodFeeOrg(ptpWaybillOrgVo.getCodFee()!=null ? ptpWaybillOrgVo.getCodFee() :BigDecimal.ZERO );
		// 送货费+送货上楼费
		ptpWaybillDto.setDeliveryGoodsFeeOrg(StringUtils.isNotBlank(ptpWaybillOrgVo.getDeliveryGoodsFee()) ? ptpWaybillOrgVo.getDeliveryGoodsFee() :"0" );
		//保价费 （修改前的值）
		ptpWaybillDto.setInsuranceFeeOrg(ptpWaybillOrgVo.getInsuranceFee()!=null ? ptpWaybillOrgVo.getInsuranceFee() : BigDecimal.ZERO);
		//其他费用
		ptpWaybillDto.setOtherFeeOrg(ptpWaybillOrgVo.getOtherFee()!=null ? ptpWaybillOrgVo.getOtherFee() : BigDecimal.ZERO);
		//包装费
		ptpWaybillDto.setPackageFeeOrg(StringUtils.isNotBlank(ptpWaybillOrgVo.getPackageFee())? ptpWaybillOrgVo.getPackageFee():"0") ;
		//接货费
		ptpWaybillDto.setPickUpFeeOrg(StringUtils.isNotBlank(ptpWaybillOrgVo.getPickUpFee())?ptpWaybillOrgVo.getPickUpFee():"0");
		//打木托货物费用
		ptpWaybillDto.setSalverGoodsChargeOrg(ptpWaybillOrgVo.getSalverGoodsCharge()!=null ? ptpWaybillOrgVo.getSalverGoodsCharge() : BigDecimal.ZERO) ;
		//打木架货物费用
		ptpWaybillDto.setStandChargeOrg(ptpWaybillOrgVo.getStandCharge()!=null ? ptpWaybillOrgVo.getStandCharge() : BigDecimal.ZERO ) ;
		// 总费用
		ptpWaybillDto.setTotalFeeOrg(ptpWaybillOrgVo.getTotalFee()!=null ? ptpWaybillOrgVo.getTotalFee() : BigDecimal.ZERO) ;
		// 公布价运费
		ptpWaybillDto.setTransportFeeOrg(ptpWaybillOrgVo.getTransportFee()!=null ? ptpWaybillOrgVo.getTransportFee():BigDecimal.ZERO) ;
		//上楼费
		ptpWaybillDto.setUpFloorFeeOrg(StringUtils.isNotBlank(ptpWaybillOrgVo.getUpFloorFee()) ? ptpWaybillOrgVo.getUpFloorFee() : "0" ) ;
		//运单号
		ptpWaybillDto.setWaybillNo(vo.getWaybillNo());
		//送货进仓费
		ptpWaybillDto.setDeliveryWareHouseFeeOrg(ptpWaybillOrgVo.getDeliveryWareHouseFee()!=null ? ptpWaybillOrgVo.getDeliveryWareHouseFee() : BigDecimal.ZERO );
		//大件上楼费
		ptpWaybillDto.setBigGoodsUpFloorFeeOrg(ptpWaybillOrgVo.getBigGoodsUpFloorFee()!=null ? ptpWaybillOrgVo.getBigGoodsUpFloorFee() : BigDecimal.ZERO) ;
		//出发部门
		ptpWaybillDto.setReceiveOrgCode(vo.getReceiveOrgCode());
		//到达部门 
		if(vo.getCustomerPickupOrgCode()!=null){
			ptpWaybillDto.setArriveOrgCode(vo.getCustomerPickupOrgCode().getCode());
		}else{
			ptpWaybillDto.setArriveOrgCode(vo.getLastLoadOrgCode());
		}
		//判断到达部门是否为合伙人
		BZPartnersContextUtil bzPartnersContextUtil = BZPartnersContextUtil.getBzPatnersContext();
		boolean flag = bzPartnersContextUtil.isPartner(ptpWaybillDto.getArriveOrgCode());
		ptpWaybillDto.setIsArriveDepPartner(flag);
		if(flag && BZPartnersJudge.IS_PARTENER){
			ptpWaybillDto.setFeeType(WaybillConstants.TWO);//0:成本  1：提成  2：成本和提成
		}else if(!flag && BZPartnersJudge.IS_PARTENER){
			ptpWaybillDto.setFeeType(WaybillConstants.ZERO);//0:成本  1：提成  2：成本和提成
		}else if(flag && !BZPartnersJudge.IS_PARTENER){
			ptpWaybillDto.setFeeType(WaybillConstants.ONE);//0:成本  1：提成  2：成本和提成
		}else{
			ptpWaybillDto.setFeeType(WaybillConstants.NEGATIVE_ONE);//-1：出发到达都不是合伙人  
		}
		//出发部门是否合伙人
		if (BZPartnersJudge.IS_PARTENER) {
			ptpWaybillDto.setIsReceiveDepPartner(true);
		} else {
			ptpWaybillDto.setIsReceiveDepPartner(false);
		}
		
		// 是否上门接货
		ptpWaybillDto.setPickupToDoor(vo.getPickupToDoor());
		//送货上楼安装（家装）
		ptpWaybillDto.setPickupToDoorJZFeeOrg(ptpWaybillOrgVo.getPickupToDoorJZFee()!=null ? ptpWaybillOrgVo.getPickupToDoorJZFee() :BigDecimal.ZERO);
		//异常操作服务费 ZZ
		ptpWaybillDto.setExceptionOpreationFeeOrg(ptpWaybillOrgVo.getExceptionOpreationFee()!=null?ptpWaybillOrgVo.getExceptionOpreationFee() : BigDecimal.ZERO);
		//超远派送费 CY
		ptpWaybillDto.setOverDistanceFeeOrg(ptpWaybillOrgVo.getOverDistanceFee()!=null ? ptpWaybillOrgVo.getOverDistanceFee() : BigDecimal.ZERO);
		//签收单
		ptpWaybillDto.setSignBillFeeOrg(ptpWaybillOrgVo.getSignBillFee()!=null ? ptpWaybillOrgVo.getSignBillFee() : BigDecimal.ZERO);
		//是否快递
		ptpWaybillDto.setIsExpress(WaybillConstants.YES);
		ptpWaybillDto.setIsChanged(WaybillConstants.YES);//是否更改单 Y：更改单；N:开单
		
		//货物件数
		ptpWaybillDto.setGoodsQtyTotal(vo.getGoodsQtyTotal());
		ptpWaybillDto.setCountBills(vo.getGoodsQtyTotal());
		
		//库存状态
		WaybillStockStatusDto stockStatusDto = vo.getStockStatus();
		if(stockStatusDto != null){
			ptpWaybillDto.setWaybillStock(stockStatusDto.getResult());
		}
		
		//判断是否更换标签
//		if(!(PtpWaybillInfoOrgVo.getGoodsQtyTotal() == vo.getGoodsQtyTotal() && 
//		   StringUtils.equals(PtpWaybillInfoOrgVo.targetOrgCode , vo.getTargetOrgCode()) &&
//		   StringUtils.equals(PtpWaybillInfoOrgVo.receiveMethod , vo.getReceiveMethod().getValueCode())&& 
//		   (PtpWaybillInfoOrgVo.fibre == vo.getFibre()) &&
//		   (PtpWaybillInfoOrgVo.membrane == vo.getMembrane()) &&
//		   (PtpWaybillInfoOrgVo.paper == vo.getPaper()) &&
//		   (PtpWaybillInfoOrgVo.salver == vo.getSalver()) &&
//		   (PtpWaybillInfoOrgVo.wood == vo.getWood()))
//		){
//		   ptpWaybillDto.setIsChangeLabel(true);
//		}

		//返单类别
		DataDictionaryValueVo dataVo = vo.getReturnBillType();
		if(dataVo!=null){
			ptpWaybillDto.setReturnBillType(dataVo.getValueCode());
		}
		
		//更改单类型
		ptpWaybillDto.setChangeType(vo.getRfcType()!=null ? vo.getRfcType().getValueCode():"") ;
		
		ptpWaybillDto.setBillWeight(vo.getBillWeight());//计费重量
		
		//币种
		ptpWaybillDto.setCurrencyCode(vo.getCurrencyCode());
	
		UserEntity user = (UserEntity) SessionContext.getCurrentUser();
		if(user != null ){
			EmployeeEntity employeeEntity = user.getEmployee();
			if(employeeEntity!=null){
				ptpWaybillDto.setUserCode(user.getEmployee().getEmpCode());//职员编号
				ptpWaybillDto.setUserName(user.getEmployee().getEmpName());// 用户登录名
				ptpWaybillDto.setCreateUserCode(user.getEmployee().getEmpCode());
				OrgAdministrativeInfoEntity dept = user.getEmployee().getDepartment();
				if(dept!=null){
					ptpWaybillDto.setCurrentDeptCode(dept.getCode());//当前登录部门编码
					ptpWaybillDto.setCurrentDeptName(dept.getName());//当前登录部门名称
					ptpWaybillDto.setCreateOrgCode(dept.getCode());
					ptpWaybillDto.setCurrentDeptUnifieldCode(dept.getUnifiedCode());//标杆编码
				}
			}
			
		}
		
		return ptpWaybillDto ;
	}
	
	/**
	 * 
	 * 将费率转换成千分率
	 * @author 025000-FOSS-helong
	 * @date 2013-4-2 上午10:26:25
	 */
	private void rateConvertToPermillage(WaybillInfoVo waybillInfoVo)
	{
		// 保险费率
		BigDecimal permillage = new BigDecimal(WaybillConstants.PERMILLAGE);
		BigDecimal insuranceRate = waybillInfoVo.getInsuranceRate();
		insuranceRate = insuranceRate.multiply(permillage);
		waybillInfoVo.setInsuranceRate(insuranceRate);
		
		// 代收货款
		BigDecimal codRate = waybillInfoVo.getCodRate();
		codRate = codRate.multiply(permillage);
		waybillInfoVo.setCodRate(codRate);
	}

	/**
	 * 
	 * 更新原始运单关联信息
	 * @author 102246-foss-shaohongliang
	 * @date 2012-12-5 下午2:36:59
	 */
	private void updateWaybillDtoWithChangedInfo(WaybillInfoVo vo) {
		WaybillDto dto = vo.getWaybillDto();
		dto.setWaybillEntity(getWaybillEntity(vo, dto.getWaybillEntity()));
		//内部带货
		if(!WaybillConstants.INNER_PICKUP.equals(vo.getReceiveMethod().getValueCode())){
			dto.setWaybillChargeDtlEntity(getWaybillChargeDtlEntity(vo));
			dto.setWaybillDisDtlEntity(getWaybillDisDtlEntity(vo));
			dto.setWaybillPaymentEntity(getWaybillPaymentEntity(vo));
		}else{
			dto.setWaybillChargeDtlEntity(new ArrayList<WaybillChargeDtlEntity>());
			dto.setWaybillDisDtlEntity(new ArrayList<WaybillDisDtlEntity>());
			dto.setWaybillPaymentEntity(new ArrayList<WaybillPaymentEntity>());
		}
		dto.setWoodenRequirementsEntity(getWoodenRequirementsEntity(vo));
	}
	
	
	/**
	 * 
	 * 获得运单数据
	 * 
	 * @author 025000-FOSS-helong
	 * @throws NoSuchMethodException
	 * @throws InvocationTargetException
	 * @throws IllegalAccessException
	 * @date 2012-11-3 下午04:15:27
	 */
	private WaybillEntity getWaybillEntity(WaybillInfoVo vo, WaybillEntity entity) {
		
		entity.setGoodsTypeCode(WaybillConstants.GOODS_TYPE_A);
		
		// 运单号
		entity.setWaybillNo(vo.getWaybillNo());
		// 运单号修改
		if (StringUtil.isNotEmpty(vo.getNewWaybillNo())) {
			entity.setWaybillNo(vo.getNewWaybillNo());
		}
		// 订单号
		entity.setOrderNo(vo.getOrderNo());
		// 发货客户ID
		entity.setDeliveryCustomerId(vo.getDeliveryCustomerId());
		// 发货客户联系人ID
		entity.setDeliverCustContactId(vo.getDeliveryCustomerContactId());
		// 发货客户编码
		entity.setDeliveryCustomerCode(vo.getDeliveryCustomerCode());
		// 大客户标记
		entity.setDeliveryBigCustomer(vo.getDeliveryBigCustomer());
		// 发货客户名称
		entity.setDeliveryCustomerName(vo.getDeliveryCustomerName());
		// 发货客户手机
		entity.setDeliveryCustomerMobilephone(vo.getDeliveryCustomerMobilephone());
		// 发货客户电话
		entity.setDeliveryCustomerPhone(vo.getDeliveryCustomerPhone());
		// 发货客户联系人
		entity.setDeliveryCustomerContact(vo.getDeliveryCustomerContact());

		AddressFieldDto consignerAddress = ui.getWaybillRFCUI().getWaybillInfoPanel().getConsignerPanel().getTxtConsignerArea().getAddressFieldDto();

		// 发货国家
		entity.setDeliveryCustomerNationCode("000");
		// 发货省份
		entity.setDeliveryCustomerProvCode(consignerAddress.getProvinceId());
		// 发货市
		entity.setDeliveryCustomerCityCode(consignerAddress.getCityId());
		// 发货区
		entity.setDeliveryCustomerDistCode(consignerAddress.getCountyId());
		// 发货具体地址
		entity.setDeliveryCustomerAddress(vo.getDeliveryCustomerAddress());

		// 收货客户ID
		entity.setReceiveCustomerId(vo.getReceiveCustomerId());
		// 收货联系人ID
		entity.setReceiverCustContactId(vo.getReceiveCustomerContactId());
		// 收货客户编码
		entity.setReceiveCustomerCode(vo.getReceiveCustomerCode());
		// 大客户标记
		entity.setReceiveBigCustomer(vo.getReceiveBigCustomer());
		// 收货客户名称
		entity.setReceiveCustomerName(vo.getReceiveCustomerName());
		// 收货客户手机
		entity.setReceiveCustomerMobilephone(vo.getReceiveCustomerMobilephone());
		// 收货客户电话
		entity.setReceiveCustomerPhone(vo.getReceiveCustomerPhone());
		// 收货客户联系人
		entity.setReceiveCustomerContact(vo.getReceiveCustomerContact());

		AddressFieldDto consigneeAddress = ui.getWaybillRFCUI().getWaybillInfoPanel().getConsigneePanel().getTxtConsigneeArea().getAddressFieldDto();
		// 收货国家
		entity.setReceiveCustomerNationCode("000");
		// 收货省份
		entity.setReceiveCustomerProvCode(consigneeAddress.getProvinceId());
		// 收货市
		entity.setReceiveCustomerCityCode(consigneeAddress.getCityId());
		// 收货区
		entity.setReceiveCustomerDistCode(consigneeAddress.getCountyId());
		// 收货具体地址
		entity.setReceiveCustomerAddress(vo.getReceiveCustomerAddress());

		// 收货部门
		entity.setReceiveOrgCode(vo.getReceiveOrgCode());

		// 约车编号
		entity.setOrderVehicleNum(vo.getVehicleNumber());

		// 变更类型
		String rfcType = vo.getRfcType().getValueCode();

		entity.setTransferStartOrgCode(vo.getTransferStartOrgCode());
		entity.setTransferStartOrgName(vo.getTransferStartOrgName());

		if (WaybillRfcConstants.TRANSFER.equals(rfcType)) {
			// 产品ID
			entity.setProductId(vo.getTfrProductCode().getId());
			// 运输性质
			entity.setProductCode(vo.getTfrProductCode().getCode());
			// 提货方式
			entity.setReceiveMethod(vo.getTfrReceiveMethod().getValueCode());
			// 提货网点
			entity.setCustomerPickupOrgCode(vo.getTfrCustomerPickupOrgCode().getCode());
			// 提货网点
			entity.setCustomerPickupOrgName(vo.getTfrCustomerPickupOrgCode().getName());
			// 目的站
			entity.setTargetOrgCode(vo.getTfrTargetOrgCode());

			// 航班时间
			entity.setFlightShift(vo.getFlightShift());
			// 航班类型
			if (vo.getTfrFlightNumberType() != null) {
				entity.setFlightNumberType(vo.getTfrFlightNumberType().getValueCode());
			}
			// 转运合票方式
			if (vo.getTfrFreightMethod() != null) {
				entity.setFreightMethod(vo.getTfrFreightMethod().getValueCode());
			}
			// 转运航班时间
			entity.setFlightShift(vo.getTfrFlightShift());

		} else if (WaybillRfcConstants.RETURN.equals(rfcType)) {
			// 产品ID
			entity.setProductId(vo.getRtnProductCode().getId());
			// 运输性质
			entity.setProductCode(vo.getRtnProductCode().getCode());
			// 提货方式
			entity.setReceiveMethod(vo.getRtnReceiveMethod().getValueCode());
			// 提货网点
			entity.setCustomerPickupOrgCode(vo.getRtnCustomerPickupOrgCode().getCode());
			// 提货网点
			entity.setCustomerPickupOrgName(vo.getRtnCustomerPickupOrgCode().getName());
			// 目的站
			entity.setTargetOrgCode(vo.getRtnTargetOrgCode());

			// 航班时间
			entity.setFlightShift(null);
			// 航班类型
			entity.setFlightNumberType(null);

		} else {
			// 产品ID
			entity.setProductId(vo.getProductCode().getId());
			// 运输性质
			entity.setProductCode(vo.getProductCode().getCode());
			// 提货方式
			entity.setReceiveMethod(vo.getReceiveMethod().getValueCode());
			// 提货网点
			entity.setCustomerPickupOrgCode(vo.getCustomerPickupOrgCode().getCode());
			// 提货网点
			entity.setCustomerPickupOrgName(vo.getCustomerPickupOrgCode().getName());
			// 目的站
			entity.setTargetOrgCode(vo.getTargetOrgCode());

			// 航班时间
			entity.setFlightShift(vo.getFlightShift());
			// 航班类型
			if (vo.getFlightNumberType() != null) {
				entity.setFlightNumberType(vo.getFlightNumberType().getValueCode());
			}

			// 合票方式
			if (vo.getFreightMethod() != null) {
				entity.setFreightMethod(vo.getFreightMethod().getValueCode());
			}
		}

		// 配载类型
		entity.setLoadMethod(vo.getLoadMethod());
		// 是否上门接货
		entity.setPickupToDoor(BooleanConvertYesOrNo.booleanToString(vo.getPickupToDoor()));
		// 司机
		entity.setDriverCode(vo.getDriverCode());
		// 是否集中接货
		entity.setPickupCentralized(BooleanConvertYesOrNo.booleanToString(vo.getPickupCentralized()));
		// 配载线路
		entity.setLoadLineCode(vo.getLoadLineCode());
		// 配载部门
		entity.setLoadOrgCode(vo.getLoadOrgCode());
		// 最终配载部门
		entity.setLastLoadOrgCode(vo.getLastLoadOrgCode());
		// 预计出发时间
		entity.setPreDepartureTime(vo.getPreDepartureTime());
		// 预计派送/提货时间
		entity.setPreCustomerPickupTime(vo.getPreCustomerPickupTime());
		// 是否大车直送
		entity.setCarDirectDelivery(BooleanConvertYesOrNo.booleanToString(vo.getCarDirectDelivery()));
		// 货物名称
		entity.setGoodsName(vo.getGoodsName());

		// 货物总件数
		entity.setGoodsQtyTotal(vo.getGoodsQtyTotal());
		// 货物总重量
		entity.setGoodsWeightTotal(vo.getGoodsWeightTotal());
		// 货物总体积
		entity.setGoodsVolumeTotal(vo.getGoodsVolumeTotal());
		// 货物尺寸
		entity.setGoodsSize(vo.getGoodsSize());
		// 货物类型
//		if (ProductEntityConstants.PRICING_PRODUCT_AIR_FREIGHT.equals(vo.getProductCode().getCode())) {
//			entity.setGoodsTypeCode(vo.getAirGoodsType().getValueCode());// 货物类型
//		} else {
//			entity.setGoodsTypeCode(vo.getGoodsType());// 货物类型
//		}
		// 是否贵重物品
		entity.setPreciousGoods(BooleanConvertYesOrNo.booleanToString(vo.getPreciousGoods()));
		// 是否异形物品
		entity.setSpecialShapedGoods(BooleanConvertYesOrNo.booleanToString(vo.getSpecialShapedGoods()));
		// 对外备注
		if (vo.getOuterNotes() != null) {
			entity.setOuterNotes(vo.getOuterNotes().getValueCode());
		}
		// 对内备注
		entity.setInnerNotes(vo.getInnerNotes());
		// 储运事项
		entity.setTransportationRemark(vo.getTransportationRemark());
		// 货物包装
		if(vo.getGoodsPackage()!=null){
			entity.setGoodsPackage(
				StringUtils.replace(vo.getGoodsPackage(),"NULL", ""));// 货物包装
		}
		// 纸
		entity.setPaperNum(Integer.valueOf(vo.getPaper()));
		// 木
		entity.setWoodNum(Integer.valueOf(vo.getWood()));
		// 纤
		entity.setFibreNum(Integer.valueOf(vo.getFibre()));
		// 托
		entity.setSalverNum(Integer.valueOf(vo.getSalver()));
		// 膜
		entity.setMembraneNum(Integer.valueOf(vo.getMembrane()));
		// 其他
		entity.setOtherPackage(vo.getOtherPackage());

		// 保价声明价值
		entity.setInsuranceAmount(vo.getInsuranceAmount());
		// 保价费率
		// entity.setInsuranceRate(vo.getInsuranceRate());
		// 保价费
		entity.setInsuranceFee(vo.getInsuranceFee());
		// 代收货款
		entity.setCodAmount(vo.getCodAmount());
		// 代收费率
		// entity.setCodRate(vo.getCodRate());
		// 代收货款手续费
		entity.setCodFee(vo.getCodFee());
		// 设置保价费率、代收费率
		rateConvertToPermillage(vo);
		// 退款类型
		if (vo.getRefundType() != null) {
			entity.setRefundType(vo.getRefundType().getValueCode());
		} else {
			entity.setRefundType(null);
		}
		// 返单类别
		if (vo.getReturnBillType() != null) {
			entity.setReturnBillType(vo.getReturnBillType().getValueCode());
		} else {
			entity.setReturnBillType(null);
		}
		// 预付费保密
		entity.setSecretPrepaid(BooleanConvertYesOrNo.booleanToString(vo.getSecretPrepaid()));
		// 到付金额
		entity.setToPayAmount(vo.getToPayAmount());
		// 预付金额
		entity.setPrePayAmount(vo.getPrePayAmount());
		// 送货费
		entity.setDeliveryGoodsFee(vo.getDeliveryGoodsFee());
		// 其他费用
		entity.setOtherFee(vo.getOtherFee());
		// 包装手续费
		entity.setPackageFee(vo.getPackageFee());
		// 优惠费用
		entity.setPromotionsFee(vo.getPromotionsFee());
		// 运费计费类型
		entity.setBillingType(vo.getBillingType().getValueCode());
		// 运费计费费率
		entity.setUnitPrice(vo.getUnitPrice());
		// 公布价运费
		entity.setTransportFee(vo.getTransportFee());
		// 增值费用
		entity.setValueAddFee(vo.getValueAddFee());
		// 开单付款方式
		entity.setPaidMethod(vo.getPaidMethod().getValueCode());
		// 到达类型
		entity.setArriveType(vo.getArriveType());
		// 运单状态
		entity.setActive(FossConstants.YES);
		// 禁行
		entity.setForbiddenLine(FossConstants.YES);

		// 总费用
		entity.setTotalFee(vo.getTotalFee());
		// 优惠编码
		entity.setPromotionsCode(vo.getPromotionsCode());
		// 运单处理状态
		entity.setPendingType(vo.getWaybillstatus());

		// 开单人
		entity.setCreateUserCode(vo.getCreateUserCode());
		// 更新人
		entity.setModifyUserCode(vo.getModifyUserCode());
		// 开单组织
		entity.setCreateOrgCode(vo.getCreateOrgCode());
		// 更新组织
		entity.setModifyOrgCode(vo.getModifyOrgCode());
		// 币种
		entity.setCurrencyCode(FossConstants.CURRENCY_CODE_RMB);
		// 是否整车运单
		entity.setIsWholeVehicle(BooleanConvertYesOrNo.booleanToString(vo.getIsWholeVehicle()));
		// 整车开单报价
		entity.setWholeVehicleActualfee(BigDecimal.ZERO);
		// 整车约车报价
		entity.setWholeVehicleAppfee(BigDecimal.ZERO);
		// 返款帐户开户名称
		entity.setAccountName(vo.getAccountName());
		// 返款帐户开户账户
		entity.setAccountCode(vo.getAccountCode());
		// 返款帐户开户银行
		entity.setAccountBank(vo.getAccountBank());
		// 计费重量
		entity.setBillWeight(vo.getBillWeight());
		// 接货费
		entity.setPickupFee(vo.getPickupFee());
		// 装卸费
		entity.setServiceFee(vo.getServiceFee());
		// 运输类型
		// entity.setTransportType(vo.getTransportType());
		entity.setTransportType(ExpWaybillConstants.TRANS_EXPRESS);// 运输类型

		// 整车约车报价
		entity.setWholeVehicleAppfee(vo.getWholeVehicleAppfee());
		// 整车开单报价
		entity.setWholeVehicleActualfee(vo.getWholeVehicleActualfee());

		// 运单冗字段数据填充
		// 运单提交人姓名
		entity.setCreateUserName(Common.getEmployeeNameByCode(vo.getCreateUserCode()));
		// 运单提交人所在部门名称
		entity.setCreateUserDeptName(CommonUtils.getDeptNameByCode(vo.getCreateOrgCode()));
		// 收货部门名称
		entity.setReceiveOrgName(CommonUtils.getDeptNameByCode(vo.getReceiveOrgCode()));
		// 提货网点名称
		entity.setCustomerPickupOrgName(CommonUtils.getDeptNameByCode(vo.getFinalCustomerPickupOrgCode().getCode()));
		// 配载部门名称
		entity.setLoadOrgName(CommonUtils.getDeptNameByCode(vo.getLoadOrgCode()));
		// 最终配置部门名称
		entity.setLastLoadOrgName(CommonUtils.getDeptNameByCode(vo.getLastLoadOrgCode()));
		// 公里数
		entity.setKilometer(vo.getKilometer());
		//优惠活动
		if(vo.getSpecialOffer()!=null){
		entity.setSpecialOffer(vo.getSpecialOffer().getValueCode());
		}
		// 转运、返货
		return entity;
	}

	
	
	private void checkWaybillNO(List<WaybillRfcChangeDetailDto> detailVos,WaybillInfoVo waybillInfoVo)
	{
		 boolean isChangeWaybillNO=false;
		 for (WaybillRfcChangeDetailDto rfcChangeDetailDto : detailVos) {
				// 是否修改运单号
				if ("waybillNo".equals(rfcChangeDetailDto.getPropertyName())) {
					isChangeWaybillNO=true;
				}
		 }
		 
		 if(waybillInfoVo != null){
			//通过老运单ＩＤ获取运单号
			 String oldWaybillNO=WaybillRfcServiceFactory.getWaybillRfcService().queryWaybillNOByID(waybillInfoVo.getId());
			
			 /**
			 * 如果不是修改运单，查看老运单ＩＤ对应的运单号是否和提交收集的运单号一致，如果不一致以老运单号为准
			 */
			if(!isChangeWaybillNO && StringUtils.isNotEmpty(oldWaybillNO)){
				if(!waybillInfoVo.getWaybillNo().equals(oldWaybillNO))
				{
					waybillInfoVo.setWaybillNo(oldWaybillNO);
				}
							
			}
		 }
		 
	}
	
	
	
	
	
	
	/**
	 * 
	 * 获取费用明细
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-11-15 下午07:25:47
	 */
	private List<WaybillChargeDtlEntity> getWaybillChargeDtlEntity(
			WaybillInfoVo vo) {
		List<WaybillChargeDtlEntity> chargeDtlEntityList = new ArrayList<WaybillChargeDtlEntity>();
		if(vo.getRefundType() != null)
		{
			//添加代收货款费用明细
			chargeDtlEntityList.add(getCod(vo));
		}
		
		if(vo.getDeliverList() != null && vo.getDeliverList().size()>0)
		{
			//添加送货费明细
			getDeliveryChargeList(vo,chargeDtlEntityList);
		}
		
		if(vo.getInsuranceCode() != null && !"".equals(vo.getInsuranceCode()))
		{
			//添加保险费
			chargeDtlEntityList.add(getInsurance(vo));
		}
		
		//添加其他费用
		getOtherCharge(vo,chargeDtlEntityList);	
	
		return chargeDtlEntityList;
	}
	
	/**
	 * 
	 * 获得代收货款
	 * @author 025000-FOSS-helong
	 * @date 2012-11-20 上午10:12:02
	 */
	private  WaybillChargeDtlEntity getCod(WaybillInfoVo vo)
	{
		WaybillChargeDtlEntity chargeEntity = new WaybillChargeDtlEntity();
		chargeEntity.setPricingEntryCode(vo.getCodCode());
		chargeEntity.setAmount(vo.getCodFee());
		if(StringUtil.isEmpty(vo.getNewWaybillNo())){
			chargeEntity.setWaybillNo(vo.getWaybillNo());
		}else{
			chargeEntity.setWaybillNo(vo.getNewWaybillNo());
		}
		chargeEntity.setPricingCriDetailId(vo.getCodId());
		chargeEntity.setActive(FossConstants.ACTIVE);
		chargeEntity.setCurrencyCode(FossConstants.CURRENCY_CODE_RMB);
		return chargeEntity;
	}
	
	/**
	 * 获取送货费集合
	 * @author WangQianJin
	 * @date 2013-6-18 下午7:38:11
	 */
	private void getDeliveryChargeList(WaybillInfoVo vo,List<WaybillChargeDtlEntity> list){	
		/**
		 * 循环遍历送货费集合添加到其他费用里面
		 */
		for(DeliverChargeEntity chargeEntity:vo.getDeliverList()){
			WaybillChargeDtlEntity chargeDtlEntity=new WaybillChargeDtlEntity();
			chargeDtlEntity.setPricingEntryCode(chargeEntity.getCode());
			chargeDtlEntity.setAmount(chargeEntity.getAmount());
			if(StringUtil.isEmpty(vo.getNewWaybillNo())){
				chargeDtlEntity.setWaybillNo(vo.getImportWaybillNo());
			}else{
				chargeDtlEntity.setWaybillNo(vo.getNewWaybillNo());
			}
			chargeDtlEntity.setPricingCriDetailId(chargeEntity.getId());
			chargeDtlEntity.setActive(FossConstants.ACTIVE);
			chargeDtlEntity.setCurrencyCode(FossConstants.CURRENCY_CODE_RMB);
			list.add(chargeDtlEntity);
		}
	}
	
	/**
	 * 
	 * 获取保价费
	 * @author 025000-FOSS-helong
	 * @date 2012-11-20 上午10:12:02
	 */
	private  WaybillChargeDtlEntity getInsurance(WaybillInfoVo vo)
	{
		WaybillChargeDtlEntity chargeEntity = new WaybillChargeDtlEntity();
		chargeEntity.setPricingEntryCode(vo.getInsuranceCode());
		chargeEntity.setAmount(vo.getInsuranceFee());
		if(StringUtil.isEmpty(vo.getNewWaybillNo())){
			chargeEntity.setWaybillNo(vo.getWaybillNo());
		}else{
			chargeEntity.setWaybillNo(vo.getNewWaybillNo());
		}
		chargeEntity.setPricingCriDetailId(vo.getInsuranceId());
		chargeEntity.setActive(FossConstants.ACTIVE);
		chargeEntity.setCurrencyCode(FossConstants.CURRENCY_CODE_RMB);
		return chargeEntity;
	}
	/**
	 * 
	 * 获取保价费
	 * @author 025000-FOSS-helong
	 * @date 2012-11-20 上午10:12:02
	 */
	private void getOtherCharge(WaybillInfoVo vo,List<WaybillChargeDtlEntity> list)
	{
		WaybillOtherCharge model = ui.getWaybillRFCUI().getWaybillInfoPanel().getIncrementPanel().getOtherChargeTableModel();
		List<OtherChargeVo> data = model.getData();
		for(OtherChargeVo otherVo : data)
		{
			WaybillChargeDtlEntity chargeEntity = new WaybillChargeDtlEntity();
			chargeEntity.setPricingEntryCode(otherVo.getCode());
			chargeEntity.setAmount(new BigDecimal(otherVo.getMoney()));
			if(StringUtil.isEmpty(vo.getNewWaybillNo())){
				chargeEntity.setWaybillNo(vo.getWaybillNo());
			}else{
				chargeEntity.setWaybillNo(vo.getNewWaybillNo());
			}
			chargeEntity.setPricingCriDetailId(otherVo.getId());
			chargeEntity.setActive(FossConstants.ACTIVE);
			chargeEntity.setCurrencyCode(FossConstants.CURRENCY_CODE_RMB);
			list.add(chargeEntity);
		}
	}

	
	/**
	 * 
	 * 获取折扣明细
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-11-15 下午07:28:33
	 */
	private List<WaybillDisDtlEntity> getWaybillDisDtlEntity(WaybillInfoVo vo) {
		List<WaybillDisDtlEntity> disDtlEntityList = new ArrayList<WaybillDisDtlEntity>();
		List<WaybillDiscountVo> data = vo.getWaybillDiscountVos();
		if(data!=null&&!data.isEmpty()){
			for(WaybillDiscountVo entity:data){
				/**
				 * TODO 等待张东平提交代码
				 */
        		WaybillDisDtlEntity disDtlEntity = new WaybillDisDtlEntity();
        	
        		
        		disDtlEntity.setPricingEntryName(entity.getFavorableItemName());
				// 优惠项目CODE
				disDtlEntity.setPricingEntryCode(entity.getFavorableItemCode());
				// 优惠类型名称
				disDtlEntity.setTypeName(entity.getFavorableTypeName());
				// 优惠类型CODE
				disDtlEntity.setType(entity.getFavorableTypeCode());
				// 优惠子类型名称
				disDtlEntity.setSubTypeName(entity.getFavorableSubTypeName());
				// 优惠子类型CODE
				disDtlEntity.setSubType(entity.getFavorableSubTypeCode());
				
				
				// 折扣费率
				if(entity.getFavorableDiscount() !=null){					
					disDtlEntity.setRate(new BigDecimal(entity
							.getFavorableDiscount()));
				}
				// 折扣金额
				if(entity.getFavorableAmount() !=null){					
					disDtlEntity.setAmount(new BigDecimal(entity
							.getFavorableAmount()));
				}
				// 运单号
				disDtlEntity.setWaybillNo(vo.getWaybillNo());
				if (entity.getDiscountId() != null) {
					disDtlEntity.setDicountId(entity.getDiscountId());
				} else {
					disDtlEntity.setDicountId(UUIDUtils.getUUID());
				}
				
				if (entity.getChargeDetailId() != null) {
					disDtlEntity.setWaybillChargeDetailId(entity
							.getChargeDetailId());
				} else {
					disDtlEntity.setWaybillChargeDetailId(UUIDUtils.getUUID());
				}
        		//disDtlEntity.setPricingEntryCode(entity.getPriceEntryCode());
        		//disDtlEntity.setType(entity.getDiscountType());
        		disDtlEntity.setRate(new BigDecimal(entity.getFavorableDiscount()));
        		disDtlEntity.setAmount(new BigDecimal(entity.getFavorableAmount()));
        		if(StringUtil.isEmpty(vo.getNewWaybillNo())){
        			disDtlEntity.setWaybillNo(vo.getWaybillNo());
    			}else{
    				disDtlEntity.setWaybillNo(vo.getNewWaybillNo());
    			}
        		//disDtlEntity.setDicountId(entity.getDiscountId());
        		//disDtlEntity.setWaybillChargeDetailId(entity.getChargeDetailId());
        		disDtlEntity.setCreateTime(new Date());
        		disDtlEntity.setModifyTime(new Date());
        		disDtlEntity.setActive(FossConstants.ACTIVE);
        		disDtlEntity.setBillTime(new Date());
        		disDtlEntity.setCurrencyCode(FossConstants.CURRENCY_CODE_RMB);
        		//市场营销活动
        		disDtlEntity.setActiveCode(entity.getActiveCode());
        		disDtlEntity.setActiveName(entity.getActiveName());
        		disDtlEntity.setActiveStartTime(entity.getActiveStartTime());
        		disDtlEntity.setActiveEndTime(entity.getActiveEndTime());
        		disDtlEntity.setOptionsCrmId(entity.getOptionsCrmId());
        		disDtlEntityList.add(disDtlEntity);
			}
		}
		return disDtlEntityList;
	}

	/**
	 * 
	 * 获取打木架信息
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-11-15 下午07:31:07
	 */
	private WoodenRequirementsEntity getWoodenRequirementsEntity(
			WaybillInfoVo vo) {
		if(vo.getStandGoodsNum() == null && vo.getBoxGoodsNum() == null)
		{
			return null;
		}else
		{
			WoodenRequirementsEntity woodenRequirementsEntity = new WoodenRequirementsEntity();
			if(StringUtil.isEmpty(vo.getNewWaybillNo())){
				woodenRequirementsEntity.setWaybillNo(vo.getWaybillNo());
			}else{
				woodenRequirementsEntity.setWaybillNo(vo.getNewWaybillNo());
			}
			woodenRequirementsEntity.setPackageOrgCode(vo.getPackageOrgCode());
			woodenRequirementsEntity.setStandGoodsNum(vo.getStandGoodsNum());
			woodenRequirementsEntity.setStandRequirement(vo.getStandRequirement());
			woodenRequirementsEntity.setStandGoodsSize(vo.getStandGoodsSize());
			woodenRequirementsEntity.setStandGoodsVolume(vo.getStandGoodsVolume());
			woodenRequirementsEntity.setBoxGoodsNum(vo.getBoxGoodsNum());
			woodenRequirementsEntity.setBoxRequirement(vo.getBoxRequirement());
			woodenRequirementsEntity.setBoxGoodsSize(vo.getBoxGoodsSize());
			woodenRequirementsEntity.setBoxGoodsVolume(vo.getBoxGoodsVolume());
			woodenRequirementsEntity.setActive(FossConstants.ACTIVE);
			woodenRequirementsEntity.setCreateTime(new Date());
			woodenRequirementsEntity.setModifyTime(new Date());
			return woodenRequirementsEntity;
		}


	}

	/**
	 * 
	 * 获取支付
	 * 
	 * @author 025000-FOSS-helong
	 * @date 2012-11-15 下午07:32:36
	 */
	private List<WaybillPaymentEntity> getWaybillPaymentEntity(WaybillInfoVo vo) {
		List<WaybillPaymentEntity> waybillPaymentEntityList = new ArrayList<WaybillPaymentEntity>();

		WaybillPaymentEntity waybillPaymentEntity = new WaybillPaymentEntity();
		if(StringUtil.isEmpty(vo.getNewWaybillNo())){
			waybillPaymentEntity.setWaybillNo(vo.getWaybillNo());
		}else{
			waybillPaymentEntity.setWaybillNo(vo.getNewWaybillNo());
		}
		waybillPaymentEntity.setType(vo.getPaidMethod().getValueCode());
		waybillPaymentEntity
				.setAmount(vo.getTotalFee());
		waybillPaymentEntity.setActive(FossConstants.ACTIVE);
		waybillPaymentEntity.setCurrencyCode(FossConstants.CURRENCY_CODE_RMB);
		waybillPaymentEntity.setPaymentTime(new Date());
		waybillPaymentEntityList.add(waybillPaymentEntity);
		return waybillPaymentEntityList;
	}

	/**
	 * 
	 * UI注入
	 * @author 102246-foss-shaohongliang
	 * @date 2012-12-24 下午4:48:26
	 * @see com.deppon.foss.framework.client.component.buttonaction.IButtonActionListener#setInjectUI(java.awt.Container)
	 */
	@Override
	public void setInjectUI(RFCInfoDialog ui) {
		this.ui = ui;
	}
	
}