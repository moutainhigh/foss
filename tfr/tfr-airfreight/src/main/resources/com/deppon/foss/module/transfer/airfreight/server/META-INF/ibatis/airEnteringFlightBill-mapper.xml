<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="foss.airfreight">

    <resultMap id="modifyAirWayBillResultMap"
               type="com.deppon.foss.module.transfer.airfreight.api.shared.domain.AirWaybillEntity">
        <result property="id" column="ID"/>
        <result property="airLineTwoletter" column="AIR_LINE_TWOLETTER"/>
        <result property="airWaybillNo" column="AIR_WAYBILL_NO"/>
        <result property="deptRegionCode" column="DEPT_REGION_CODE"/>
        <result property="deptRegionName" column="DEPT_REGION_NAME"/>
        <result property="arrvRegionCode" column="ARRV_REGION_CODE"/>
        <result property="arrvRegionName" column="ARRV_REGION_NAME"/>
        <result property="airAssembleType" column="AIR_ASSEMBLE_TYPE"/>
        <result property="destOrgCode" column="DEST_ORG_CODE"/>
        <result property="dedtOrgName" column="DEDT_ORG_NAME"/>
        <result property="receiverCode" column="RECEIVER_CODE"/>
        <result property="receiverName" column="RECEIVER_NAME"/>
        <result property="receiverContactPhone" column="RECEIVER_CONTACT_PHONE"/>
        <result property="accountItem" column="ACCOUNT_ITEM"/>
        <result property="billingAgency" column="BILLING_AGENCY"/>
        <result property="receiverAddress" column="RECEIVER_ADDRESS"/>
        <result property="storageItem" column="STORAGE_ITEM"/>
        <result property="flightNo" column="FLIGHT_NO"/>
        <result property="flightDate" column="FLIGHT_DATE"/>
        <result property="takeOffTime" column="TAKE_OFF_TIME"/>
        <result property="arriveTime" column="ARRIVE_TIME"/>
        <result property="rateClass" column="RATE_CLASS"/>
        <result property="paymentType" column="PAYMENT_TYPE"/>
        <result property="grossWeight" column="GROSS_WEIGHT"/>
        <result property="billingWeight" column="BILLING_WEIGHT"/>
        <result property="fee" column="FEE"/>
        <result property="agenctCode" column="AGENCT_CODE"/>
        <result property="agencyName" column="AGENCY_NAME"/>
        <result property="declareValue" column="DECLARE_VALUE"/>
        <result property="itemCode" column="ITEM_CODE"/>
        <result property="goodsQty" column="GOODS_QTY"/>
        <result property="volume" column="VOLUME"/>
        <result property="airFee" column="AIR_FEE"/>
        <result property="extraFee" column="EXTRA_FEE"/>
        <result property="goodsName" column="GOODS_NAME"/>
        <result property="packageStruction" column="PACKAGE_STRUCTION"/>
        <result property="groundFee" column="GROUND_FEE"/>
        <result property="fuelSurcharge" column="FUEL_SURCHARGE"/>
        <result property="transportInsurance" column="TRANSPORT_INSURANCE"/>
        <result property="inseranceFee" column="INSERANCE_FEE"/>
        <result property="feeTotal" column="FEE_TOTAL"/>
        <result property="feePlain" column="FEE_PLAIN"/>
        <result property="billingFee" column="BILLING_FEE"/>
        <result property="shipperCode" column="SHIPPER_CODE"/>
        <result property="shipperName" column="SHIPPER_NAME"/>
        <result property="shipperAddress" column="SHIPPER_ADDRESS"/>
        <result property="shipperContactPhone" column="SHIPPER_CONTACT_PHONE"/>
        <result property="pickupType" column="PICKUP_TYPE"/>
        <result property="createOrgCode" column="CREATE_ORG_CODE"/>
        <result property="createOrgName" column="CREATE_ORG_NAME"/>
        <result property="createUserCode" column="CREATE_USER_CODE"/>
        <result property="createUserName" column="CREATE_USER_NAME"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="modifyUserCode" column="MODIFY_USER_CODE"/>
        <result property="modifyUserName" column="MODIFY_USER_NAME"/>
        <result property="modifyTime" column="MODIFY_TIME"/>
        <result property="handoverState" column="HANDOVER_STATE"/>
        <result property="currencyCode" column="CURRENCY_CODE"/>
        <result property="isNotPayment" column="IS_NOT_PAYMENT"/>
        <result property="jointTicketNo" column="JOINT_TICKET_NO"/>
        <result property="actualTakeOffTime" column="ACTUAL_TAKE_OFF_TIME"/>
        <result property="actualArriveTime" column="ACTUAL_ARRIVE_TIME"/>
        <result property="trackState" column="TRACK_STATE"/>
        <result property="airportCode" column="AIR_PORT_CODE"/>
        <result property="transportType" column="TRANSPORTTYPE"/>
    </resultMap>

    <!--空运货量明细信息  -->
    <resultMap id="singlejointticketResultMap"
               type="com.deppon.foss.module.transfer.airfreight.api.shared.domain.AirCargoVolumeEntity">
        <result property="airSpaceDetailId" column="AIR_SPACE_DETAIL_ID"/>
        <result property="waybillNo" column="WAYBILL_NO"/>
        <result property="createOrgCode" column="CREATE_ORG_CODE"/>
        <result property="createOrgName" column="CREATE_ORG_NAME"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="arrvRegionCode" column="ARRV_REGION_CODE"/>
        <result property="arrvRegionName" column="ARRV_REGION_NAME"/>
        <result property="stockStatus" column="STOCK_STATUS"/>
        <result property="makeWaybillWay" column="MAKE_WAYBILL_WAY"/>
        <result property="flightType" column="FLIGHT_TYPE"/>
        <result property="measurement" column="MEASUREMENT"/>
        <result property="weight" column="WEIGHT"/>
        <result property="volume" column="VOLUME"/>
        <result property="goodsName" column="GOODS_NAME"/>
        <result property="beBooking" column="GOODS_NAME"/>
        <result property="id" column="ID"/>
        <result property="billingWeight" column="BILLING_WEIGHT"/>
        <result property="billingFee" column="BILLING_FEE"/>
        <result property="storageNotes" column="STORAGE_NOTES"/>
        <result property="goodsQty" column="GOODS_QTY"/>
        <result property="planFlightNo" column="PLAN_FLIGHT_NO"/>
    </resultMap>

    <!-- 新增航空正单明细、流水明细 -->
    <resultMap id="airWaybillDetailDtoResultMap"
               type="com.deppon.foss.module.transfer.airfreight.api.shared.dto.AirWaybillDetailDto">
        <result property="arrvRegionName"/>
        <result property="airWaybillIds"/>
        <result property="serialNoIds"/>
    </resultMap>

    <resultMap id="aryWaybillResultPrintMap"
               type="com.deppon.foss.module.transfer.airfreight.api.shared.domain.AirWaybillDetailEntity">
        <result property="id" column="ID"/>
        <result property="airWaybillId" column="AIR_WAYBILL_ID"/>
        <result property="waybillNo" column="WAYBILL_NO"/>
        <result property="makeWaybillWay" column="MAKE_WAYBILL_WAY"/>
        <result property="stockStatus" column="STOCK_STATUS"/>
        <result property="arrvRegionName" column="ARRV_REGION_NAME"/>
        <result property="planFlightNo" column="PLAN_FLIGHT_NO"/>
        <result property="beBooking" column="BE_BOOKING"/>
        <result property="measurement" column="MEASUREMENT"/>
        <result property="grossWeight" column="GROSS_WEIGHT"/>
        <result property="billingWeight" column="BILLING_WEIGHT"/>
        <result property="volume" column="VOLUME"/>
        <result property="goodsQty" column="GOODS_QTY"/>
        <result property="goodsName" column="GOODS_NAME"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="isLoading" column="ISLOADING"/>
        <result property="deliverFee" column="DELIVERFEE"/>
        <result property="arrivalFee" column="ARRIVALFEE"/>
        <result property="pickupType" column="PICKUPTYPE"/>
        <result property="collectionFee" column="COLLECTIONFEE"/>
        <result property="receiverContactPhone" column="RECEIVERCONTACTPHONE"/>
        <result property="receiverAddress" column="RECEIVERADDRESS"/>
        <result property="receiverName" column="RECEIVERNAME"/>
        <result property="productCode" column="PRODUCT_CODE"/>
    </resultMap>

    <resultMap id="airCargovolumeSerialnoResultMap"
               type="com.deppon.foss.module.transfer.airfreight.api.shared.domain.AirCargovolumeSerialnoEntity">
        <result property="waybillNo" column="WAYBILL_NO"/>
        <result property="serialNo" column="SERIAL_NO"/>
        <result property="beAssemble" column="BE_ASSEMBLE"/>
        <result property="operatingStatus" column="OPERATING_STATUS"/>
        <result property="airCargovolumeId" column="AIR_CARGOVOLUME_ID"/>
        <result property="createTime" column="CREATE_TIME"/>
    </resultMap>
    <!-- 航空正单流行明细 -->
    <resultMap id="airWaybillSerialNoEntityResultMap"
               type="com.deppon.foss.module.transfer.airfreight.api.shared.domain.AirWaybillSerialNoEntity">
        <result property="airWaybillDetailId" column="AIR_WAYBILL_DETAIL_ID"/>
        <result property="serialNo" column="SERIAL_NO"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="waybillNo" column="WAYBILL_NO"/>
        <result property="goodsQty" column="GOODS_QTY"/>
    </resultMap>

    <!-- 查询运单明细 -->
    <resultMap id="resultMaps" type="com.deppon.foss.module.transfer.airfreight.api.shared.domain.TfrWaybillEntity">
        <result property="waybillNo" column="WAYBILL_NO"/>
        <result property="targetOrgCode" column="TARGET_ORG_CODE"/>
        <result property="paidMethod" column="PAID_METHOD"/>
        <result property="goodsSize" column="GOODS_SIZE"/>
        <result property="goodsWeightTotal" column="GOODS_WEIGHT_TOTAL"/>
        <result property="billWeight" column="BILL_WEIGHT"/>
        <result property="goodsVolumeTotal" column="GOODS_VOLUME_TOTAL"/>
        <result property="goodsQtyTotal" column="GOODS_QTY_TOTAL"/>
        <result property="goodsName" column="GOODS_NAME"/>
        <result property="toPayAmount" column="TO_PAY_AMOUNT"/>
        <result property="receiveMethod" column="RECEIVE_METHOD"/>
        <result property="deliveryGoodsFee" column="DELIVERY_GOODS_FEE"/>
        <result property="receiveCustomerAddress" column="RECEIVE_CUSTOMER_ADDRESS"/>
        <result property="receiveCustomerPhone" column="RECEIVE_CUSTOMER_PHONE"/>
        <result property="receiveCustomerName" column="RECEIVE_CUSTOMER_NAME"/>
        <result property="serialNo" column="SERIAL_NO"/>
        <result property="codAmount" column="COD_AMOUNT"/>
    </resultMap>

    <!-- 将运单明细与航空正单字段不对应的列进行转换-->
    <resultMap id="convertAirwaybillDetailResulMap"
               type="com.deppon.foss.module.transfer.airfreight.api.shared.domain.AirWaybillDetailEntity">
        <result property="waybillNo" column="WAYBILL_NO"/>
        <result property="goodsPackage" column="GOODS_PACKAGE"/>
        <result property="freightMethod" column="FREIGHTMETHOD"/>
        <result property="arrvRegionName" column="TARGET_ORG_CODE"/>
        <result property="makeWaybillWay" column="FREIGHTMETHOD"/>
        <result property="measurement" column="GOODS_SIZE"/>
        <result property="grossWeight" column="GOODS_WEIGHT_TOTAL"/>
        <result property="billingWeight" column="BILL_WEIGHT"/>
        <result property="volume" column="GOODS_VOLUME_TOTAL"/>
        <result property="goodsQty" column="TOTALNUMBER"/>
        <result property="goodsQtyTotal" column="GOODS_QTY_TOTAL"/>
        <result property="goodsName" column="GOODS_NAME"/>
        <result property="planFlightNo" column="FLIGHT_NUMBER_TYPE"/>
        <result property="arrivalFee" column="TO_PAY_AMOUNT"/>
        <result property="pickupType" column="RECEIVE_METHOD"/>
        <result property="deliverFee" column="DELIVERY_GOODS_FEE"/>
        <result property="receiverAddress" column="RECEIVE_CUSTOMER_ADDRESS"/>
        <result property="receiverContactPhone" column="RECEIVE_CUSTOMER_PHONE"/>
        <result property="receiverName" column="RECEIVE_CUSTOMER_NAME"/>
        <result property="collectionFee" column="COD_AMOUNT"/>
        <result property="stockStatus" column="STOCK_STATUS"/>
        <result property="transportRemark" column="TRANSPORTATION_REMARK"/>
        <result property="receiveOrgName" column="RECEIVE_ORG_NAME"/>
        <result property="stockQty" column="STOCK_QTY"/>
        <result property="transportType" column = "transportType"/>
    </resultMap>

    <!-- 运单流水明细 -->
    <resultMap id="resultSerialNoMap"
               type="com.deppon.foss.module.transfer.airfreight.api.shared.domain.AirSerialNoDetail">
        <result property="id" column="ID"/>
        <result property="serialNo" column="SERIAL_NO"/>
        <result property="status" column="STATUS"/>
        <result property="stockStatus" column="STOCK_STATUS"/>
        <result property="waybillNo" column="WAYBILL_NO"/>
        <result property="totalNumber" column="TOTAL_NUMBER"/>
    </resultMap>

    <!-- 根据正单号查询运单list -->
    <resultMap id="resultUploadingEdiDtoMap"
               type="com.deppon.foss.module.transfer.airfreight.api.shared.dto.UploadingEdiDto">
        <result property="wayBillNo" column="WAYBILL_NO"/>
        <result property="ladingStation" column="DEDT_ORG_NAME"/>
        <result property="ladingStationNumber" column="DEST_ORG_CODE"/>
        <result property="outBoundFlight" column="FLIGHT_NO"/>
        <result property="departureTime" column="FLIGHT_DATE" jdbcType="TIMESTAMP"/>
        <result property="arriveTime" column="ARRIVE_TIME" jdbcType="TIMESTAMP"/>
        <result column="DELIVERYMAN_NAME" property="signer" jdbcType="VARCHAR"/>
        <result column="RECEIVE_METHOD" property="deliveryType" jdbcType="VARCHAR"/>
        <result column="SIGN_TIME" property="signTime" jdbcType="TIMESTAMP"/>
        <result column="DELIVER_DATE" property="deliveryTime" jdbcType="TIMESTAMP"/>
        <result column="SIGN_SITUATION" property="signState" jdbcType="VARCHAR"/>
        <result column="RECEIVE_CUSTOMER_CONTACT" property="consignee" jdbcType="VARCHAR"/>
        <result column="BILL_TIME" property="receiptTime" jdbcType="TIMESTAMP"/>
        <result column="GOODS_QTY_TOTAL" property="piece" jdbcType="DECIMAL"/>
        <result column="GOODS_WEIGHT_TOTAL" property="weight" jdbcType="DECIMAL"/>
        <result column="CREATE_USER_CODE" property="orderCreator" jdbcType="VARCHAR"/>
        <result column="Product_Code" property="productCode" jdbcType="VARCHAR"/>
        <!--
        <result property="deliveryType" column="PICKUP_TYPE"/>
        <result property="signer" column="RECEIVER_NAME"/>
        <result property="arriveTime" column="ARRIVE_TIME" jdbcType="TIMESTAMP"/>
        <result property="signTime" column="ACTUAL_ARRIVE_TIME" jdbcType="TIMESTAMP"/>
        <result property="deliveryTime" column="ACTUAL_ARRIVE_TIME"/>
        <result property="realRefund" column="COLLECTION_FEE"/>
        <result property="arriveCharge" column="ARRIVAL_FEE"/>
        <result property="realArriveMoney" column="ARRIVAL_FEE"/>
        <result property="signState" column="HANDOVER_STATE"/>
        <result property="receiptTime" column="ACTUAL_ARRIVE_TIME"/>
        <result property="consignee" column="RECEIVER_NAME"/>
        <result property="piece" column="GOODS_QTY"/>
        <result property="weight" column="GROSS_WEIGHT"/>
        <result property="orderCreator" column="CREATE_USER_NAME"/>
        -->
    </resultMap>

    <!--  查询空运到达派送信息录入情况统计 -->
    <resultMap id="resultAirArriveSendInfoDtoMap"
               type="com.deppon.foss.module.transfer.airfreight.api.shared.dto.AirArriveSendInfoDto">
        <result property="ladingStationNumber" column="DEST_ORG_CODE"/>
        <result property="ladingStation" column="DEDT_ORG_NAME"/>
        <result property="wayBillNumber" column="WAYBILL_NO"/>
        <result property="arriveTime" column="ARRIVE_TIME" jdbcType="TIMESTAMP"/>
        <result property="signer" column="DELIVERYMAN_NAME"/>
        <result property="signTime" column="Sign_Time" jdbcType="TIMESTAMP"/>
        <result property="departureTime" column="FLIGHT_DATE" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 根据运单号查询走货轨迹 -->
    <resultMap id="wayBillAssembleDtoResultMap"
               type="com.deppon.foss.module.transfer.common.api.shared.dto.WayBillAssembleDto">
        <result property="flightNo" column="FLIGHT_NO"/>
        <result property="leaveTime" column="TAKE_OFF_TIME"/>
        <result property="preArriveTime" column="ARRIVE_TIME"/>
    </resultMap>

    <!--  查询空运库存列表 -->
    <resultMap id="resultAirStockInfoDtoMap"
               type="com.deppon.foss.module.transfer.airfreight.api.shared.dto.AirStockInfoDto">
        <result property="ladingStationNumber" column="DEST_ORG_CODE"/>
        <result property="ladingStation" column="DEDT_ORG_NAME"/>
        <result property="wayBillNumber" column="WAYBILL_NO"/>
        <result property="outBoundFlight" column="FLIGHT_NO" jdbcType="VARCHAR"/>
        <result property="departureTime" column="FLIGHT_DATE" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 根据正单号查询所属运单的出发部门List -->
    <resultMap id="waybillInfoResulMap"
               type="com.deppon.foss.module.transfer.airfreight.api.shared.dto.WaybillInfoForNoticeDto">
        <result property="waybillNo" column="WAYBILL_NO"/>
        <result property="deptOrgCode" column="RECEIVE_ORG_CODE"/>
        <result property="deptOrgName" column="RECEIVE_ORG_NAME"/>
    </resultMap>

    <!-- 根据运单号及当前部门查询运单锁票信息 -->
    <resultMap id="airLockWaybillMap"
               type="com.deppon.foss.module.transfer.airfreight.api.shared.domain.AirLockWaybillDetailEntity">
        <result property="id" column="ID"/>
        <result property="waybillNo" column="WAYBILL_NO"/>
        <result property="lockRemark" column="LOCK_REMARK"/>
        <result property="lockStatus" column="ACTIVE"/>
    </resultMap>
	<resultMap id="airFlightQueryMap" type="com.deppon.foss.module.transfer.airfreight.api.shared.domain.AirFlightEntity">
		<result property="id" column="ID"/>
		<result property="flightNo" column="flightNo"/>
		<result property="departDepet" column="departDepet"/>
		<result property="departDepetCode" column="departDepetCode"/>
		<result property="arriveDept" column="arriveDept"/>
		<result property="arriveDeptCode" column="arriveDeptCode"/>
		<result property="departureTime" column="departureTime"/>
		<result property="arrivedTime" column="arrivedTime"/>
		<result property="totalWeight" column="totalWeight"/>
		<result property="totalVolum" column="totalVolum"/>
		<result property="totalGoods" column="totalGoods"/>
	</resultMap>
	
    <sql id="select_airWaybillall_column_view">
		ID,
		AIR_LINE_TWOLETTER,
		AIR_WAYBILL_NO,
		DEPT_REGION_CODE,
		DEPT_REGION_NAME,
		ARRV_REGION_CODE,
		ARRV_REGION_NAME,
		AIR_ASSEMBLE_TYPE,
		DEST_ORG_CODE,
		DEDT_ORG_NAME,
		RECEIVER_CODE,
		RECEIVER_NAME,
		RECEIVER_CONTACT_PHONE,
		ACCOUNT_ITEM,
		BILLING_AGENCY,
		RECEIVER_ADDRESS,
		STORAGE_ITEM,
		FLIGHT_NO,
		FLIGHT_DATE,
		TAKE_OFF_TIME,
		ARRIVE_TIME,
		RATE_CLASS,
		PAYMENT_TYPE,
		GROSS_WEIGHT,
		BILLING_WEIGHT,
		FEE/100 AS FEE,
		AGENCT_CODE,
		AGENCY_NAME,
		DECLARE_VALUE,
		ITEM_CODE,
		GOODS_QTY,
		VOLUME,
		AIR_FEE/100 AS AIR_FEE,
		EXTRA_FEE/100 AS EXTRA_FEE,
		GOODS_NAME,
		
		case
         when PACKAGE_STRUCTION is null then
          ''
         else
          PACKAGE_STRUCTION 
        end as PACKAGE_STRUCTION,
		
		GROUND_FEE/100 AS GROUND_FEE,
		FUEL_SURCHARGE/100 AS FUEL_SURCHARGE,
		TRANSPORT_INSURANCE/100 AS TRANSPORT_INSURANCE,
		INSERANCE_FEE/100 AS INSERANCE_FEE,
		FEE_TOTAL/100 AS FEE_TOTAL,
		FEE_PLAIN,
		BILLING_FEE/100 AS BILLING_FEE,
		SHIPPER_CODE,
		SHIPPER_NAME,
		SHIPPER_ADDRESS,
		SHIPPER_CONTACT_PHONE,
		PICKUP_TYPE,
		CREATE_ORG_CODE,
		CREATE_ORG_NAME,
		CREATE_USER_CODE,
		CREATE_USER_NAME,
		CREATE_TIME,
		MODIFY_USER_CODE,
		MODIFY_USER_NAME,
		MODIFY_TIME,
		HANDOVER_STATE,
		CURRENCY_CODE,
		IS_NOT_PAYMENT,
		JOINT_TICKET_NO,
		ACTUAL_TAKE_OFF_TIME,
		ACTUAL_ARRIVE_TIME,
		TRACK_STATE,
		AIR_PORT_CODE,
	    nvl(TRANSPORTTYPE,'PRECISION_AIR') as transportType
	</sql>

    <!-- 共用查询条件T_OPT_AIR_CARGOVOLUME -->
    <sql id="SELECT_T_OPT_AIR_CARGOVOLUME">
		AIR_SPACE_DETAIL_ID, 
		WAYBILL_NO, 
		CREATE_ORG_CODE, 
		CREATE_ORG_NAME, 
		CREATE_TIME, 
		ARRV_REGION_CODE, 
		ARRV_REGION_NAME, 
		STOCK_STATUS, 
		MAKE_WAYBILL_WAY, 
		FLIGHT_TYPE, 
		MEASUREMENT, 
		WEIGHT, 
		VOLUME, 
		GOODS_NAME, 
		BE_BOOKING, 
		ID, 
		BILLING_WEIGHT, 
		BILLING_FEE/100 AS BILLING_FEE, 
		STORAGE_NOTES, 
		GOODS_QTY, 
		PLAN_FLIGHT_NO, 
		CURRENCY_CODE
	</sql>

    <sql id="SELECT_T_OPT_AIR_WAYBILL_SERIALNO">
		SERIALNO.ID, 
		SERIALNO.WAYBILL_NO,
		SERIALNO.SERIAL_NO, 
		SERIALNO.CREATE_TIME,
		SERIALNO.AIR_WAYBILL_DETAIL_ID 
	</sql>

    <sql id="SELECT_T_OPT_AIR_WAYBILL_SERIALNO_LIST">
		SERIALNO.ID, 
		SERIALNO.SERIAL_NO, 
		DETAIL.WAYBILL_NO,
		DETAIL.GOODS_QTY
	</sql>

    <sql id="SELECT_T_OPT_AIR_WAYBILL_DETAIL">
		ID, 
		AIR_WAYBILL_ID, 
		WAYBILL_NO, 
		MAKE_WAYBILL_WAY, 
		STOCK_STATUS, 
		ARRV_REGION_NAME, 
		PLAN_FLIGHT_NO, 
		BE_BOOKING, 
		MEASUREMENT, 
		GROSS_WEIGHT, 
		BILLING_WEIGHT, 
		VOLUME, 
		GOODS_QTY, 
		GOODS_NAME, 
		CREATE_TIME, 
		IS_LOADING, 
		DELIVER_FEE/100 AS DELIVER_FEE, 
		ARRIVAL_FEE/100 AS ARRIVAL_FEE, 
		PICKUP_TYPE, 
		COLLECTION_FEE/100 AS COLLECTION_FEE, 
		RECEIVER_CONTACT_PHONE, 
		RECEIVER_ADDRESS, 
		RECEIVER_NAME
	</sql>


    <sql id="handoverbill_searchCondition">
        SELECT
        round((DETAIL.TOTALNUMBER / WAYBILL.GOODS_QTY_TOTAL) *WAYBILL.GOODS_WEIGHT_TOTAL,2) AS GOODS_WEIGHT_TOTAL,
        round((DETAIL.TOTALNUMBER / WAYBILL.GOODS_QTY_TOTAL) *WAYBILL.GOODS_VOLUME_TOTAL,2) AS GOODS_VOLUME_TOTAL,
        round((DETAIL.TOTALNUMBER / WAYBILL.GOODS_QTY_TOTAL) *WAYBILL.BILL_WEIGHT,2) AS BILL_WEIGHT,
        WAYBILL.*,
        DETAIL.TOTALNUMBER,
        'NOTSTORE' STOCK_STATUS,
        DETAIL.departTime as departTime,
        WAYBILL.unitPrice as unitPrice
        FROM (SELECT WAYBILL.WAYBILL_NO,
        WAYBILL.GOODS_PACKAGE,
        WAYBILL.TARGET_ORG_CODE,
        WAYBILL.FREIGHT_METHOD AS FREIGHTMETHOD,
        WAYBILL.GOODS_WEIGHT_TOTAL,
        WAYBILL.BILL_WEIGHT,
        WAYBILL.GOODS_VOLUME_TOTAL,
        WAYBILL.GOODS_QTY_TOTAL,
        WAYBILL.GOODS_NAME,
        WAYBILL.FLIGHT_NUMBER_TYPE,
        WAYBILL.TO_PAY_AMOUNT / 100 AS TO_PAY_AMOUNT,
        WAYBILL.DELIVERY_GOODS_FEE / 100 AS DELIVERY_GOODS_FEE,
        WAYBILL.RECEIVE_CUSTOMER_ADDRESS,
        DECODE(WAYBILL.RECEIVE_CUSTOMER_MOBILEPHONE,
        '',
        WAYBILL.RECEIVE_CUSTOMER_PHONE,
        WAYBILL.RECEIVE_CUSTOMER_MOBILEPHONE) AS RECEIVE_CUSTOMER_PHONE,
        WAYBILL.RECEIVE_METHOD,
        WAYBILL.FREIGHT_METHOD,
        DECODE(WAYBILL.RECEIVE_CUSTOMER_CONTACT,
        '',
        WAYBILL.RECEIVE_CUSTOMER_NAME,
        WAYBILL.RECEIVE_CUSTOMER_CONTACT) AS RECEIVE_CUSTOMER_NAME,
        WAYBILL.COD_AMOUNT / 100 AS COD_AMOUNT,
        WAYBILL.RECEIVE_ORG_NAME,
        WAYBILL.Unit_Price/100 as unitPrice,
        'PRECISION_AIR' as transportType
        FROM PKP.T_SRV_WAYBILL WAYBILL
        WHERE WAYBILL.ACTIVE = 'Y'
        <if test="arrvRegionName!=null and arrvRegionName!='' ">
            AND WAYBILL.TARGET_ORG_CODE LIKE '%'|| #{arrvRegionName,jdbcType=VARCHAR} ||'%'
        </if>
        <if test="freightMethodList!=null">
            AND WAYBILL.FREIGHT_METHOD IN
            <foreach collection="freightMethodList" close=")" open="(" index="index" item="item" separator=",">
                #{item}
            </foreach>
        </if>
        AND WAYBILL.TRANSPORT_TYPE = 'TRANS_AIRCRAFT'
        <if test="beginInTime !=null and endInTime !=null ">
            <![CDATA[ AND WAYBILL.BILL_TIME >=#{beginInTime} AND WAYBILL.BILL_TIME <=#{endInTime}]]>
        </if>
        ) WAYBILL,
        (
        SELECT SERIAL.WAYBILL_NO,
        COUNT(SERIAL.ID) AS TOTALNUMBER,
        max(td.actual_depart_time) AS departTime
        FROM TFR.T_OPT_HANDOVERBILL_SERIALNO SERIAL
        INNER JOIN TFR.T_OPT_HANDOVERBILL BILL
        ON BILL.HANDOVER_NO = SERIAL.HANDOVERBILL_NO
        inner join tfr.t_opt_truck_task_bill b
        on b.bill_no=bill.handover_no
        and b.bill_type='HANDOVER'
        and b.bill_level='1'
        inner join tfr.t_opt_truck_task_detail td
        on b.truck_task_detail_id=td.id
        WHERE NOT EXISTS(
        SELECT 1
        FROM TFR.T_OPT_STOCK STOCK
        WHERE SERIAL.SERIAL_NO = STOCK.SERIAL_NO
        AND STOCK.WAYBILL_NO = SERIAL.WAYBILL_NO
        AND STOCK.ORG_CODE = #{destOrgCode}
        AND STOCK.IN_STOCK_TIME >= #{beginInTime jdbcType=TIMESTAMP})
        AND NOT EXISTS(
        SELECT 1
        FROM TFR.T_OPT_AIR_WAYBILL_SERIALNO AIRSERIAL
        WHERE SERIAL.SERIAL_NO = AIRSERIAL.SERIAL_NO
        AND SERIAL.WAYBILL_NO = AIRSERIAL.WAYBILL_NO
        AND AIRSERIAL.CREATE_TIME >= #{beginInTime jdbcType=TIMESTAMP})
        <if test="handoverbillStateList!=null">
            AND BILL.HANDOVERBILL_STATE IN
            <foreach collection="handoverbillStateList" close=")" open="(" index="index" item="item" separator=",">
                #{item}
            </foreach>
        </if>
        <!--  AND BILL.DEST_ORG_CODE = #{handoverbillOrgCode} -->
        <choose>

            <when test="handOverbillTFROrgCode!=null and handOverbillTFROrgCode!=''">
                AND( BILL.DEST_ORG_CODE = #{handoverbillOrgCode} or BILL.DEST_ORG_CODE = #{handOverbillTFROrgCode})
            </when>
            <otherwise>
                AND BILL.DEST_ORG_CODE = #{handoverbillOrgCode}
            </otherwise>
        </choose>
        AND SERIAL.CREATE_TIME >= #{beginInTime jdbcType=TIMESTAMP}
        GROUP BY SERIAL.WAYBILL_NO
        ) DETAIL
        WHERE DETAIL.WAYBILL_NO = WAYBILL.WAYBILL_NO
        ORDER BY WAYBILL.WAYBILL_NO
    </sql>

    <sql id="stockbill_searchCondition">
        SELECT
        round((SERIALSTOCK.TOTALNUMBER / WAYBILL.GOODS_QTY_TOTAL) *WAYBILL.GOODS_WEIGHT_TOTAL,2) AS GOODS_WEIGHT_TOTAL,
        round((SERIALSTOCK.TOTALNUMBER / WAYBILL.GOODS_QTY_TOTAL) *WAYBILL.GOODS_VOLUME_TOTAL,2) AS GOODS_VOLUME_TOTAL,
        round((SERIALSTOCK.TOTALNUMBER / WAYBILL.GOODS_QTY_TOTAL) *WAYBILL.BILL_WEIGHT,2) AS BILL_WEIGHT,
        WAYBILL.*,
        SERIALSTOCK.TOTALNUMBER,
        'INSTORE' AS STOCK_STATUS,
        '' as departTime,
        WAYBILL.unitPrice as unitPrice
        FROM (SELECT WAYBILL.WAYBILL_NO,
        WAYBILL.GOODS_PACKAGE,
        WAYBILL.TARGET_ORG_CODE,
        WAYBILL.FREIGHT_METHOD AS FREIGHTMETHOD,
        WAYBILL.GOODS_WEIGHT_TOTAL,
        WAYBILL.BILL_WEIGHT,
        WAYBILL.GOODS_VOLUME_TOTAL,
        WAYBILL.GOODS_QTY_TOTAL,
        WAYBILL.GOODS_NAME,
        WAYBILL.FLIGHT_NUMBER_TYPE,
        WAYBILL.TO_PAY_AMOUNT / 100 AS TO_PAY_AMOUNT,
        WAYBILL.DELIVERY_GOODS_FEE / 100 AS DELIVERY_GOODS_FEE,
        WAYBILL.RECEIVE_CUSTOMER_ADDRESS,
        DECODE(WAYBILL.RECEIVE_CUSTOMER_MOBILEPHONE,
        '',
        WAYBILL.RECEIVE_CUSTOMER_PHONE,
        WAYBILL.RECEIVE_CUSTOMER_MOBILEPHONE) AS RECEIVE_CUSTOMER_PHONE,
        WAYBILL.RECEIVE_METHOD,
        WAYBILL.FREIGHT_METHOD,
        DECODE(WAYBILL.RECEIVE_CUSTOMER_CONTACT,
        '',
        WAYBILL.RECEIVE_CUSTOMER_NAME,
        WAYBILL.RECEIVE_CUSTOMER_CONTACT) AS RECEIVE_CUSTOMER_NAME,
        WAYBILL.COD_AMOUNT / 100 AS COD_AMOUNT,
        WAYBILL.RECEIVE_ORG_NAME,
        WAYBILL.Unit_Price/100 as unitPrice,
        'PRECISION_AIR' as transportType
        FROM PKP.T_SRV_WAYBILL WAYBILL
        WHERE WAYBILL.ACTIVE = 'Y'
        <if test="freightMethodList!=null">
            AND WAYBILL.FREIGHT_METHOD IN
            <foreach collection="freightMethodList" close=")" open="(" index="index" item="item" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="arrvRegionName!=null and arrvRegionName!='' ">
            AND WAYBILL.TARGET_ORG_CODE LIKE '%'|| #{arrvRegionName,jdbcType=VARCHAR} ||'%'
        </if>
        <if test="beginInTime !=null and endInTime !=null ">
            <![CDATA[ AND WAYBILL.BILL_TIME >=#{beginInTime} AND WAYBILL.BILL_TIME <=#{endInTime}]]>
        </if>
        AND WAYBILL.TRANSPORT_TYPE = 'TRANS_AIRCRAFT'
        ) WAYBILL,
        (SELECT STOCK.WAYBILL_NO,
        COUNT(STOCK.ID) AS TOTALNUMBER
        FROM TFR.T_OPT_STOCK STOCK
        WHERE NOT EXISTS (
        SELECT 1 FROM TFR.T_OPT_AIR_WAYBILL_SERIALNO AIRSERIAL
        WHERE STOCK.SERIAL_NO = AIRSERIAL.SERIAL_NO
        AND STOCK.WAYBILL_NO = AIRSERIAL.WAYBILL_NO
        AND AIRSERIAL.CREATE_TIME >= #{beginInTime jdbcType=TIMESTAMP}
        )
        AND STOCK.ORG_CODE =#{destOrgCode}
        AND STOCK.GOODS_AREA_CODE = #{goodsAreaCode}
        AND STOCK.IN_STOCK_TIME >= #{beginInTime jdbcType=TIMESTAMP}
        GROUP BY STOCK.WAYBILL_NO
        ) SERIALSTOCK
        WHERE SERIALSTOCK.WAYBILL_NO = WAYBILL.WAYBILL_NO
        ORDER BY WAYBILL.WAYBILL_NO
    </sql>
    <!-- ISSUE-3554  录入航空正单明细-分单合票调整 -->
    <!-- 查询交接单库存中存在的运单 -->
    <select id="queryWaybill"
            parameterType="com.deppon.foss.module.transfer.airfreight.api.shared.dto.AirWaybillDetailDto"
            statementType="PREPARED" resultMap="convertAirwaybillDetailResulMap">
        <!--库存中-->
        <if test="stockStatus=='INSTORE' ">
            <include refid="stockbill_searchCondition"/>
        </if>
        <!--未入库-->
        <if test="stockStatus=='NOTSTORE' ">
            <include refid="handoverbill_searchCondition"/>
        </if>
        <!--全部-->
        <if test="stockStatus=='ALL' ">
            SELECT /*零担-空运分单合票查询全部*/round((DETAIL.TOTALNUMBER / WAYBILL.GOODS_QTY_TOTAL) *WAYBILL.GOODS_WEIGHT_TOTAL,2) AS
            GOODS_WEIGHT_TOTAL,
            round((DETAIL.TOTALNUMBER / WAYBILL.GOODS_QTY_TOTAL) *WAYBILL.GOODS_VOLUME_TOTAL,2) AS GOODS_VOLUME_TOTAL,
            round((DETAIL.TOTALNUMBER / WAYBILL.GOODS_QTY_TOTAL) *WAYBILL.BILL_WEIGHT,2) AS BILL_WEIGHT,
            WAYBILL.*,
            DETAIL.TOTALNUMBER,
            DETAIL.STOCK_STATUS,
            DETAIL.departTime as departTime,
            WAYBILL.unitPrice as unitPrice
            FROM (SELECT WAYBILL.WAYBILL_NO,
            WAYBILL.GOODS_PACKAGE,
            WAYBILL.TARGET_ORG_CODE,
            WAYBILL.FREIGHT_METHOD AS FREIGHTMETHOD,
            WAYBILL.GOODS_WEIGHT_TOTAL,
            WAYBILL.BILL_WEIGHT,
            WAYBILL.GOODS_VOLUME_TOTAL,
            WAYBILL.GOODS_QTY_TOTAL,
            WAYBILL.GOODS_NAME,
            WAYBILL.FLIGHT_NUMBER_TYPE,
            WAYBILL.TO_PAY_AMOUNT / 100 AS TO_PAY_AMOUNT,
            WAYBILL.DELIVERY_GOODS_FEE / 100 AS DELIVERY_GOODS_FEE,
            WAYBILL.RECEIVE_CUSTOMER_ADDRESS,
            DECODE(WAYBILL.RECEIVE_CUSTOMER_MOBILEPHONE,
            '',
            WAYBILL.RECEIVE_CUSTOMER_PHONE,
            WAYBILL.RECEIVE_CUSTOMER_MOBILEPHONE) AS RECEIVE_CUSTOMER_PHONE,
            WAYBILL.RECEIVE_METHOD,
			<!-- case WAYBILL.RECEIVE_METHOD 
			when 'SELF_PICKUP' then '汽运自提' 
			when 'INNER_PICKUP' then '汽运内部带货自提' 
			when 'DELIVER_UP' then '汽运送货上楼' 
			when 'DELIVER' then '汽运免费送货' 
			when 'DELIVER_NOUP' then '汽运送货（不含上楼）' 
			when 'DELIVER_INGA' then '汽运送货进仓' 
			when 'SELF_PICKUP_FREE_AIR' then '空运免费自提' 
			when 'DELIVER_INGA_AIR' then '空运送货进仓' 
			when 'DELIVER_UP_AIR' then '空运送货上楼' 
			when 'DELIVER_AIR' then '空运免费送货' 
			when 'AIRPORT_PICKUP' then '空运机场自提' 
			when 'DELIVER_NOUP_AIR' then '空运送货（不含上楼）' 
			when 'SELF_PICKUP_AIR' then '空运自提（不含机场自提）' 
		    end AS RECEIVE_METHOD -->   
            WAYBILL.FREIGHT_METHOD,
            DECODE(WAYBILL.RECEIVE_CUSTOMER_CONTACT,
            '',
            WAYBILL.RECEIVE_CUSTOMER_NAME,
            WAYBILL.RECEIVE_CUSTOMER_CONTACT) AS RECEIVE_CUSTOMER_NAME,
            WAYBILL.COD_AMOUNT / 100 AS COD_AMOUNT,
            WAYBILL.RECEIVE_ORG_NAME,
            WAYBILL.Unit_Price/100 as unitPrice,
            'PRECISION_AIR' as transportType
            FROM PKP.T_SRV_WAYBILL WAYBILL
            WHERE WAYBILL.ACTIVE = 'Y'
            <if test="arrvRegionName!=null and arrvRegionName!='' ">
                AND WAYBILL.TARGET_ORG_CODE LIKE '%'|| #{arrvRegionName,jdbcType=VARCHAR} ||'%'
            </if>
            <if test="freightMethodList!=null">
                AND WAYBILL.FREIGHT_METHOD IN
                <foreach collection="freightMethodList" close=")" open="(" index="index" item="item" separator=",">
                    #{item}
                </foreach>
            </if>
            AND WAYBILL.TRANSPORT_TYPE = 'TRANS_AIRCRAFT'
            <if test="beginInTime !=null and endInTime !=null ">
                <![CDATA[ AND WAYBILL.BILL_TIME >=#{beginInTime,jdbcType=TIMESTAMP} AND WAYBILL.BILL_TIME <=#{endInTime,jdbcType=TIMESTAMP}]]>
            </if>
            ) WAYBILL,
            (
            SELECT WAYBILL_NO,
            STOCK_STATUS,
            COUNT(SERIAL_NO) AS TOTALNUMBER,
            max(departTime) as departTime
            FROM(
            SELECT STOCK.WAYBILL_NO,
            STOCK.SERIAL_NO,
            'INSTORE' STOCK_STATUS,
            to_date('') departTime
            FROM TFR.T_OPT_STOCK STOCK
            WHERE STOCK.ORG_CODE = #{destOrgCode,jdbcType=VARCHAR}
            AND STOCK.GOODS_AREA_CODE = #{goodsAreaCode,jdbcType=VARCHAR}
            AND STOCK.IN_STOCK_TIME >= #{beginInTime,jdbcType=TIMESTAMP}
            UNION ALL
            SELECT SERIAL.WAYBILL_NO,
            SERIAL.SERIAL_NO,
            'NOTSTORE' STOCK_STATUS,
            td.actual_depart_time AS departTime
            FROM TFR.T_OPT_HANDOVERBILL_SERIALNO SERIAL
            INNER JOIN TFR.T_OPT_HANDOVERBILL BILL
            ON BILL.HANDOVER_NO = SERIAL.HANDOVERBILL_NO
            inner join tfr.t_opt_truck_task_bill b
            on b.bill_no=bill.handover_no
            and b.bill_type='HANDOVER'
            and b.bill_level='1'
            inner join tfr.t_opt_truck_task_detail td
            on b.truck_task_detail_id=td.id
            WHERE NOT EXISTS(
            SELECT 1
            FROM TFR.T_OPT_STOCK STOCK
            WHERE SERIAL.SERIAL_NO = STOCK.SERIAL_NO
            AND STOCK.WAYBILL_NO = SERIAL.WAYBILL_NO
            AND STOCK.ORG_CODE=#{destOrgCode,jdbcType=VARCHAR})
            <if test="handoverbillStateList!=null">
                AND BILL.HANDOVERBILL_STATE IN
                <foreach collection="handoverbillStateList" close=")" open="(" index="index" item="item" separator=",">
                    #{item}
                </foreach>
            </if>
            <choose>

                <when test="handOverbillTFROrgCode!=null and handOverbillTFROrgCode!=''">
                    AND( BILL.DEST_ORG_CODE = #{handoverbillOrgCode,jdbcType=VARCHAR} or BILL.DEST_ORG_CODE = #{handOverbillTFROrgCode,jdbcType=VARCHAR})
                </when>
                <otherwise>
                    AND BILL.DEST_ORG_CODE = #{handoverbillOrgCode,jdbcType=VARCHAR}
                </otherwise>
            </choose>
            AND SERIAL.CREATE_TIME >= #{beginInTime,jdbcType=TIMESTAMP}) SERIALALL
            WHERE NOT EXISTS(
            SELECT 1
            FROM TFR.T_OPT_AIR_WAYBILL_SERIALNO AIRSERIAL
            WHERE SERIALALL.SERIAL_NO = AIRSERIAL.SERIAL_NO
            AND SERIALALL.WAYBILL_NO = AIRSERIAL.WAYBILL_NO
            AND AIRSERIAL.CREATE_TIME >= #{beginInTime,jdbcType=TIMESTAMP})
            GROUP BY SERIALALL.WAYBILL_NO,SERIALALL.STOCK_STATUS
            ) DETAIL
            WHERE DETAIL.WAYBILL_NO = WAYBILL.WAYBILL_NO
            ORDER BY WAYBILL.WAYBILL_NO
        </if>
    </select>

   
    <!--查询快递空运库存中运单-->
    <select id="queryPackageWaybill"
            parameterType="com.deppon.foss.module.transfer.airfreight.api.shared.dto.AirWaybillDetailDto"
            statementType="PREPARED" resultMap="convertAirwaybillDetailResulMap">
            
            <!--库存中-->
        <if test="stockStatus=='INSTORE' ">
            <include refid="queryPackageInStock"/>
        </if>
        <!--未入库-->
        <if test="stockStatus=='NOTSTORE' ">
            <include refid="queryPackageNotInStock"/>
        </if>
        <!--全部-->
        <if test="stockStatus=='ALL' "> 
        Select /*查询商务专递未入库及已入库的运单*/
			 Round((Detail.Totalnumber / Waybill.Goods_Qty_Total) *
			       Waybill.Goods_Weight_Total,
			       2) As Goods_Weight_Total,
			 Round((Detail.Totalnumber / Waybill.Goods_Qty_Total) *
			       Waybill.Goods_Volume_Total,
			       2) As Goods_Volume_Total,
			 Round((Detail.Totalnumber / Waybill.Goods_Qty_Total) * Waybill.Bill_Weight,
			       2) As Bill_Weight,
			 Waybill.*,
			 Detail.Totalnumber,
			 Stock_Status,
			 Departtime,
			 Waybill.Unitprice As Unitprice
			  From (Select Waybill.Waybill_No,
			               Waybill.Goods_Package,
			               Waybill.Target_Org_Code,
			               Nvl(Waybill.Freight_Method, 'HDP') As Freightmethod,
			               Waybill.Goods_Weight_Total,
			               Waybill.Bill_Weight,
			               Waybill.Goods_Volume_Total,
			               Waybill.Goods_Qty_Total,
			               Waybill.Goods_Name,
			               Nvl(Waybill.Flight_Number_Type, 'TRANSFER_FLIGHT') As Flight_Number_Type,
			               Waybill.To_Pay_Amount / 100 As To_Pay_Amount,
			               Waybill.Delivery_Goods_Fee / 100 As Delivery_Goods_Fee,
			               Waybill.Receive_Customer_Address,
			               Decode(Waybill.Receive_Customer_Mobilephone,
			                      '',
			                      Waybill.Receive_Customer_Phone,
			                      Waybill.Receive_Customer_Mobilephone) As Receive_Customer_Phone,
			               Waybill.Receive_Method,
			               Waybill.Freight_Method,
			               Decode(Waybill.Receive_Customer_Contact,
			                      '',
			                      Waybill.Receive_Customer_Name,
			                      Waybill.Receive_Customer_Contact) As Receive_Customer_Name,
			               Waybill.Cod_Amount / 100 As Cod_Amount,
			               Waybill.Receive_Org_Name,
			               'PACKAGE_AIR' As Transporttype,
			               Waybill.Unit_Price / 100 As Unitprice
			          From Pkp.T_Srv_Waybill Waybill
			         Where Waybill.Active = 'Y'
			         <if test="packageProductList != null">
                               AND waybill.PRODUCT_CODE IN
					            <foreach collection="packageProductList" close=")" index="index" open="(" separator="," item="item">
					                          #{item}
					            </foreach>
	                </if>
			        <if test="beginInTime !=null and endInTime !=null ">
	                        <![CDATA[ AND WAYBILL.BILL_TIME >=#{beginInTime,jdbcType=TIMESTAMP} AND WAYBILL.BILL_TIME <=#{endInTime,jdbcType=TIMESTAMP}]]>
	                </if>
                ) Waybill,
			       (Select /*库存运单*/
			         Stock.Waybill_No,
			         Count(Stock.Id) As Totalnumber,
			         'INSTORE' As Stock_Status,
			         Null Departtime
			          From Tfr.T_Opt_Stock Stock
			          Join Tfr.T_Opt_Path_Detail Path_Deail
			            On Stock.Waybill_No = Path_Deail.Waybill_No
			           And Path_Deail.Orig_Org_Code = Stock.Org_Code
			           And Path_Deail.Objective_Org_Code = Stock.Next_Org_Code
			         Where Stock.Org_Code =#{destOrgCode,jdbcType=VARCHAR}
			           And Stock.Goods_Area_Code = #{goodsAreaCode,jdbcType=VARCHAR}
			          <if test="nextDestOrg != null and nextDestOrg!=''">
	                      AND path_deail.objective_org_code = #{nextDestOrg,jdbcType=VARCHAR}
	                  </if>
			           And Stock.In_Stock_Time > Sysdate - 3
			           And Not Exists (Select 1
			             From Tfr.T_Opt_Air_Waybill_Serialno Airserial
			                   Where Stock.Serial_No = Airserial.Serial_No
			                   And Stock.Waybill_No = Airserial.Waybill_No
			         )
			         Group By Stock.Waybill_No
			        Union All
			        Select /*未入库运单*/
			         Serial.Waybill_No,
			         Count(Serial.Id) As Totalnumber,
			         'NOTSTORE' As Stock_Status,
			         Max(Td.Actual_Depart_Time) As Departtime
			          From Tfr.T_Opt_Handoverbill_Serialno Serial
			         Inner Join Tfr.T_Opt_Handoverbill Bill
			            On Bill.Handover_No = Serial.Handoverbill_No
			         Inner Join Tfr.T_Opt_Truck_Task_Bill b
			            On B.Bill_No = Bill.Handover_No
			           And B.Bill_Type = 'HANDOVER'
			           And B.Bill_Level = '1'
			         Inner Join Tfr.T_Opt_Truck_Task_Detail Td
			            On B.Truck_Task_Detail_Id = Td.Id
			         Inner Join Tfr.T_Opt_Path_Detail Pd
			            On Pd.Waybill_No = Serial.Waybill_No
			           And Pd.Goods_No = Serial.Serial_No
			         Where Not Exists (Select 1
			                  From Tfr.T_Opt_Stock Stock
			                 Where Serial.Serial_No = Stock.Serial_No
			                   And Stock.Waybill_No = Serial.Waybill_No
			                   And Stock.Org_Code =#{destOrgCode,jdbcType=VARCHAR}
			                   And Stock.In_Stock_Time >= Sysdate - 3)
			           And Bill.Handoverbill_State In ('20', '30')
			           and bill.dest_org_code = #{destOrgCode,jdbcType=VARCHAR}
			         <if test="nextDestOrg != null and nextDestOrg!=''">
                       AND pd.objective_org_code = #{nextDestOrg,jdbcType=VARCHAR}
                    </if>
			           And Serial.Create_Time >= Sysdate - 3
			           And Not Exists (Select 1
			             From Tfr.T_Opt_Air_Waybill_Serialno Airserial
			                   Where Serial.Serial_No = Airserial.Serial_No
			                   And Serial.Waybill_No = Airserial.Waybill_No
			         )
			         Group By Serial.Waybill_No
			        
			        ) Detail
			 Where Detail.Waybill_No = Waybill.Waybill_No
			   
			 Order By Waybill.Waybill_No
		 </if>	 
    </select>
    
    <!-- 查询未入库的商务专递运单 -->
    <sql id="queryPackageNotInStock">
		     SELECT /*查询未入库的商务专递运单*/
		            round((detail.totalnumber / waybill.goods_qty_total) *
		             waybill.goods_weight_total,
		             2) AS goods_weight_total,
		       round((detail.totalnumber / waybill.goods_qty_total) *
		             waybill.goods_volume_total,
		             2) AS goods_volume_total,
		       round((detail.totalnumber / waybill.goods_qty_total) *
		             waybill.bill_weight,
		             2) AS bill_weight,
		       waybill.*,
		       detail.totalnumber,
		       'NOTSTORE' stock_status,
		       detail.departtime AS departtime,
		       waybill.unitprice AS unitprice
		  FROM (SELECT waybill.waybill_no,
		               waybill.goods_package,
		               waybill.target_org_code,
		               nvl(waybill.freight_method, 'HDP') AS freightmethod,
		               waybill.goods_weight_total,
		               waybill.bill_weight,
		               waybill.goods_volume_total,
		               waybill.goods_qty_total,
		               waybill.goods_name,
		               nvl(waybill.flight_number_type, 'TRANSFER_FLIGHT') AS flight_number_type,
		               waybill.to_pay_amount / 100 AS to_pay_amount,
		               waybill.delivery_goods_fee / 100 AS delivery_goods_fee,
		               waybill.receive_customer_address,
		               decode(waybill.receive_customer_mobilephone,
		                      '',
		                      waybill.receive_customer_phone,
		                      waybill.receive_customer_mobilephone) AS receive_customer_phone,
		               waybill.receive_method,
		               waybill.freight_method,
		               decode(waybill.receive_customer_contact,
		                      '',
		                      waybill.receive_customer_name,
		                      waybill.receive_customer_contact) AS receive_customer_name,
		               waybill.cod_amount / 100 AS cod_amount,
		               waybill.receive_org_name,
		               'PACKAGE_AIR' AS transporttype,
		               waybill.unit_price / 100 AS unitprice
		          FROM pkp.t_srv_waybill waybill
		         WHERE waybill.active = 'Y'
		         <if test="packageProductList != null">
                       AND waybill.PRODUCT_CODE IN
		            <foreach collection="packageProductList" close=")" index="index" open="(" separator="," item="item">
		                #{item}
		            </foreach>
                </if>
		        <if test="beginInTime !=null and endInTime !=null ">
                        <![CDATA[ AND WAYBILL.BILL_TIME >=#{beginInTime,jdbcType=TIMESTAMP} AND WAYBILL.BILL_TIME <=#{endInTime,jdbcType=TIMESTAMP}]]>
                </if>
                ) waybill,
		       (SELECT serial.waybill_no,
		               COUNT(serial.id) AS totalnumber,
		               MAX(td.actual_depart_time) AS departtime
		          FROM tfr.t_opt_handoverbill_serialno serial
		         INNER JOIN tfr.t_opt_handoverbill bill
		            ON bill.handover_no = serial.handoverbill_no
		         INNER JOIN tfr.t_opt_truck_task_bill b
		            ON b.bill_no = bill.handover_no
		           AND b.bill_type = 'HANDOVER'
		           AND b.bill_level = '1'
		         INNER JOIN tfr.t_opt_truck_task_detail td
		            ON b.truck_task_detail_id = td.id
		         INNER JOIN tfr.t_opt_path_detail pd
		            ON pd.waybill_no = serial.waybill_no
		           AND pd.goods_no = serial.serial_no
		         WHERE NOT EXISTS (SELECT 1
		                  FROM tfr.t_opt_stock stock
		                 WHERE serial.serial_no = stock.serial_no
		                   AND serial.waybill_no = stock.waybill_no
		                   AND stock.org_code = #{destOrgCode,jdbcType=VARCHAR}
		                   AND stock.in_stock_time >=Sysdate-3)
		           AND NOT EXISTS
		         (SELECT 1
		                  FROM tfr.t_opt_air_waybill_serialno airserial
		                 WHERE serial.serial_no = airserial.serial_no
		                   AND serial.waybill_no = airserial.waybill_no
		                  )
		           <if test="handoverbillStateList!=null">
                        AND BILL.HANDOVERBILL_STATE IN
		                <foreach collection="handoverbillStateList" close=")" open="(" index="index" item="item" separator=",">
		                    #{item}
		                </foreach>
                   </if>
		           and bill.dest_org_code = #{destOrgCode,jdbcType=VARCHAR}
		           AND serial.create_time >=Sysdate-2
		          
		           AND pd.orig_org_code = #{destOrgCode,jdbcType=VARCHAR}
                  <if test="nextDestOrg != null and nextDestOrg!=''">
                       AND pd.objective_org_code = #{nextDestOrg,jdbcType=VARCHAR}
                  </if>		       
             GROUP BY serial.waybill_no) detail
		 WHERE detail.waybill_no = waybill.waybill_no
		 ORDER BY waybill.waybill_no
    </sql>

    <!-- 查询快递空运中当前库存中的运单 --> 
    <sql id="queryPackageInStock">
	     SELECT /*查询商务专递库存中的运单*/
	        round((DETAIL.TOTALNUMBER / WAYBILL.GOODS_QTY_TOTAL) *WAYBILL.GOODS_WEIGHT_TOTAL,2) AS
	        GOODS_WEIGHT_TOTAL,
	        round((DETAIL.TOTALNUMBER / WAYBILL.GOODS_QTY_TOTAL) *WAYBILL.GOODS_VOLUME_TOTAL,2) AS GOODS_VOLUME_TOTAL,
	        round((DETAIL.TOTALNUMBER / WAYBILL.GOODS_QTY_TOTAL) *WAYBILL.BILL_WEIGHT,2) AS BILL_WEIGHT,
	        WAYBILL.*,
	        DETAIL.TOTALNUMBER,
	        'INSTORE' AS STOCK_STATUS,
	        '' AS departTime,
	        WAYBILL.unitPrice as unitPrice
	        FROM (SELECT WAYBILL.WAYBILL_NO,
	        WAYBILL.GOODS_PACKAGE,
	        WAYBILL.TARGET_ORG_CODE,
	        NVL(WAYBILL.FREIGHT_METHOD,'HDP') AS FREIGHTMETHOD,
	        WAYBILL.GOODS_WEIGHT_TOTAL,
	        WAYBILL.BILL_WEIGHT,
	        WAYBILL.GOODS_VOLUME_TOTAL,
	        WAYBILL.GOODS_QTY_TOTAL,
	        WAYBILL.GOODS_NAME,
	        NVL(WAYBILL.FLIGHT_NUMBER_TYPE,'TRANSFER_FLIGHT') AS FLIGHT_NUMBER_TYPE,
	        WAYBILL.TO_PAY_AMOUNT / 100 AS TO_PAY_AMOUNT,
	        WAYBILL.DELIVERY_GOODS_FEE / 100 AS DELIVERY_GOODS_FEE,
	        WAYBILL.RECEIVE_CUSTOMER_ADDRESS,
	        DECODE(WAYBILL.RECEIVE_CUSTOMER_MOBILEPHONE,
	        '',
	        WAYBILL.RECEIVE_CUSTOMER_PHONE,
	        WAYBILL.RECEIVE_CUSTOMER_MOBILEPHONE) AS RECEIVE_CUSTOMER_PHONE,
	        WAYBILL.RECEIVE_METHOD,
	        WAYBILL.FREIGHT_METHOD,
	        DECODE(WAYBILL.RECEIVE_CUSTOMER_CONTACT,
	        '',
	        WAYBILL.RECEIVE_CUSTOMER_NAME,
	        WAYBILL.RECEIVE_CUSTOMER_CONTACT) AS RECEIVE_CUSTOMER_NAME,
	        WAYBILL.COD_AMOUNT / 100 AS COD_AMOUNT,
	        WAYBILL.RECEIVE_ORG_NAME,
	        'PACKAGE_AIR' AS transportType,
	        WAYBILL.Unit_Price/100 as unitPrice
	        FROM PKP.T_SRV_WAYBILL WAYBILL
	        WHERE WAYBILL.ACTIVE = 'Y'
	        <if test="packageProductList != null">
	            AND WAYBILL.PRODUCT_CODE IN
	            <foreach collection="packageProductList" close=")" index="index" open="(" separator="," item="item">
	                #{item}
	            </foreach>
	        </if>
	        <if test="beginInTime !=null and endInTime !=null ">
	            <![CDATA[ AND WAYBILL.BILL_TIME >=#{beginInTime,jdbcType=TIMESTAMP} AND WAYBILL.BILL_TIME <=#{endInTime,jdbcType=TIMESTAMP}]]>
	        </if>
	        ) WAYBILL,
	        (
	        SELECT STOCK.WAYBILL_NO, COUNT(STOCK.ID) AS TOTALNUMBER
	        FROM TFR.T_OPT_STOCK STOCK
	        JOIN tfr.t_opt_path_detail path_deail ON STOCK.Waybill_No = path_deail.waybill_no
	        and path_deail.orig_org_code = STOCK.org_code
	        and path_deail.objective_org_code = STOCK.Next_Org_Code
	        WHERE NOT EXISTS (SELECT 1
	        FROM TFR.T_OPT_AIR_WAYBILL_SERIALNO AIRSERIAL
	        WHERE STOCK.SERIAL_NO = AIRSERIAL.SERIAL_NO
	        AND STOCK.WAYBILL_NO = AIRSERIAL.WAYBILL_NO
	        )
	        AND STOCK.ORG_CODE = #{destOrgCode,jdbcType=VARCHAR}
	        AND STOCK.GOODS_AREA_CODE = #{goodsAreaCode,jdbcType=VARCHAR}
	        <if test="nextDestOrg != null and nextDestOrg!=''">
	            AND path_deail.objective_org_code = #{nextDestOrg,jdbcType=VARCHAR}
	        </if>
	        GROUP BY STOCK.WAYBILL_NO
	
	        ) DETAIL
	        WHERE DETAIL.WAYBILL_NO = WAYBILL.WAYBILL_NO
	        ORDER BY WAYBILL.WAYBILL_NO
    
    </sql>
   
    <!-- 查询已保存的的运单流水明细 -->
    <select id="queryWaybillSerialNoList" parameterType="list" resultMap="airWaybillSerialNoEntityResultMap">
        SELECT
        <include refid="SELECT_T_OPT_AIR_WAYBILL_SERIALNO_LIST"/>
        FROM TFR.T_OPT_AIR_WAYBILL_SERIALNO SERIALNO,
        TFR.T_OPT_AIR_WAYBILL_DETAIL DETAIL
        WHERE DETAIL.WAYBILL_NO IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <sql id="stockStatusCondition">
		  SELECT STOCK.ID,STOCK.SERIAL_NO, 'INSTORE' AS STOCK_STATUS FROM TFR.T_OPT_STOCK STOCK WHERE STOCK.ORG_CODE IN(
			(SELECT ST.ORG_CODE FROM TFR.T_OPT_WAYBILL_STOCK ST 
			      WHERE ST.ORG_CODE = #{destOrgCode,jdbcType=VARCHAR}
			   AND ST.GOODS_AREA_CODE = #{goodsAreaCode,jdbcType=VARCHAR}
			   AND ST.WAYBILL_NO=#{waybillNo,jdbcType=VARCHAR})
			   ) AND  STOCK.WAYBILL_NO=#{waybillNo,jdbcType=VARCHAR}
	</sql>

    <sql id="handoverbillStatusCondition">
        SELECT SERIALNO.ID,SERIALNO.SERIAL_NO,'NOTSTORE' STOCK_STATUS FROM TFR.T_OPT_HANDOVERBILL_SERIALNO SERIALNO ,(
		  SELECT DETAIL.HANDOVER_NO FROM TFR.T_OPT_HANDOVERBILL_DETAIL DETAIL , TFR.T_OPT_HANDOVERBILL BILL
			WHERE DETAIL.HANDOVER_NO =  BILL.HANDOVER_NO
				AND BILL.HANDOVERBILL_STATE IN (30,20) AND BILL.DEST_ORG_CODE=#{handoverbillOrgCode,jdbcType=VARCHAR}
				AND DETAIL.WAYBILL_NO=#{waybillNo,jdbcType=VARCHAR}
				GROUP BY DETAIL.HANDOVER_NO) BILL
				WHERE SERIALNO.HANDOVERBILL_NO = BILL.HANDOVER_NO
				AND SERIALNO.WAYBILL_NO=#{waybillNo,jdbcType=VARCHAR}
	</sql>

    <!-- 处理运单件数 -->
    <select id="queryWaybillTotalNumber"
            parameterType="com.deppon.foss.module.transfer.airfreight.api.shared.dto.AirWaybillDetailDto"
            resultMap="resultSerialNoMap">
        SELECT AIRDETAILWAYBILL.WAYBILL_NO,
        COUNT(AIRDETAILWAYBILL.ID) AS TOTALNUMBER
        FROM TFR.T_OPT_AIR_WAYBILL AIRWAYBILL,
        TFR.T_OPT_AIR_WAYBILL_DETAIL AIRDETAILWAYBILL,TFR.T_OPT_AIR_WAYBILL_SERIALNO SERIALNO
        WHERE SERIALNO.AIR_WAYBILL_DETAIL_ID = AIRDETAILWAYBILL.ID
        <if test="waybillNoList!=null">
            AND AIRDETAILWAYBILL.WAYBILL_NO IN
            <foreach collection="waybillNoList" close=")" open="(" index="index" item="item" separator=",">
                #{item}
            </foreach>
        </if>
        <if test="stockStatusList!=null">
            AND SERIALNO.STOCK_STATUS IN
            <foreach collection="stockStatusList" close=")" open="(" index="index" item="item" separator=",">
                #{item}
            </foreach>
        </if>
        AND AIRWAYBILL.ID = AIRDETAILWAYBILL.AIR_WAYBILL_ID
        AND AIRWAYBILL.CREATE_ORG_CODE =#{destOrgCode}
        GROUP BY AIRDETAILWAYBILL.WAYBILL_NO
    </select>
    <!-- 查询运单流水明细 -->
    <select id="queryWaybillSerialnoDetail" parameterType="String" resultMap="resultSerialNoMap">
        SELECT A.ID,A.SERIAL_NO FROM PKP.T_SRV_LABELED_GOOD A
        <where>
            A.WAYBILL_NO = #{waybillNo}
        </where>
    </select>

    <select id="queryStockAirSerialNoDetail"
            parameterType="com.deppon.foss.module.transfer.airfreight.api.shared.dto.AirWaybillDetailDto"
            resultMap="resultSerialNoMap">
        <if test="stockStatus=='NOTSTORE' ">
            <include refid="handoverbillStatusCondition"/>
        </if>
        <if test="stockStatus=='INSTORE' ">
            <include refid="stockStatusCondition"/>
        </if>
        <if test="stockStatus=='ALL'">
            <include refid="stockStatusCondition"/>
            UNION ALL
            <include refid="handoverbillStatusCondition"/>
        </if>
    </select>

    <!-- 查询航当前运单是否已存在空正单流水明细表中,如果存在则同运单明细流水进行比对将为做成航空正单的流水明细提出 -->
    <select id="queryairWaybillDetail" parameterType="String" resultType="list">
        SELECT A.SERIAL_NO FROM TFR.T_OPT_AIR_WAYBILL_SERIALNO A
        <where>
            A.AIR_WAYBILL_DETAIL_ID =
            (SELECT B.ID FROM TFR.T_OPT_AIR_WAYBILL_DETAIL B
            <where>
                <if test="waybillNo != null and waybillNo != '' ">
                    B.WAYBILL_NO = #{waybillNo}
                </if>
            </where>
            )
        </where>
    </select>
    <!-- 新增航空正单信息 -->
    <insert id="addAirWaybillEntity"
            parameterType="com.deppon.foss.module.transfer.airfreight.api.shared.domain.AirWaybillEntity">
    INSERT INTO TFR.T_OPT_AIR_WAYBILL(
    ID,
    AIR_LINE_TWOLETTER,
    AIR_WAYBILL_NO,
    DEPT_REGION_CODE,
    DEPT_REGION_NAME,
    ARRV_REGION_CODE,
    ARRV_REGION_NAME,
    AIR_ASSEMBLE_TYPE,
    DEST_ORG_CODE,
    DEDT_ORG_NAME,
    RECEIVER_CODE,
    RECEIVER_NAME,
    RECEIVER_CONTACT_PHONE,
    ACCOUNT_ITEM,
    BILLING_AGENCY,
    RECEIVER_ADDRESS,
    STORAGE_ITEM,
    FLIGHT_NO,
    FLIGHT_DATE,
    TAKE_OFF_TIME,
    ARRIVE_TIME,
    RATE_CLASS,
    PAYMENT_TYPE,
    GROSS_WEIGHT,
    BILLING_WEIGHT,
    FEE,
    AGENCT_CODE,
    AGENCY_NAME,
    DECLARE_VALUE,
    ITEM_CODE,
    GOODS_QTY,
    VOLUME,
    AIR_FEE,
    EXTRA_FEE,
    GOODS_NAME,
    PACKAGE_STRUCTION,
    GROUND_FEE,
    FUEL_SURCHARGE,
    TRANSPORT_INSURANCE,
    INSERANCE_FEE,
    FEE_TOTAL,
    FEE_PLAIN,
    BILLING_FEE,
    SHIPPER_CODE,
    SHIPPER_NAME,
    SHIPPER_ADDRESS,
    SHIPPER_CONTACT_PHONE,
    PICKUP_TYPE,
    CREATE_ORG_CODE,
    CREATE_ORG_NAME,
    CREATE_USER_CODE,
    CREATE_USER_NAME,
    CREATE_TIME,
    MODIFY_USER_CODE,
    MODIFY_USER_NAME,
    MODIFY_TIME,
    HANDOVER_STATE,
    CURRENCY_CODE,
    IS_NOT_PAYMENT,
    JOINT_TICKET_NO,
    ACTUAL_TAKE_OFF_TIME,
    ACTUAL_ARRIVE_TIME,
    TRACK_STATE,
    AIR_PORT_CODE,
    transportType
    ) VALUES (
    #{id jdbcType=VARCHAR},
    #{airLineTwoletter jdbcType=VARCHAR},
    #{airWaybillNo jdbcType=VARCHAR},
    #{deptRegionCode jdbcType=VARCHAR},
    #{deptRegionName jdbcType=VARCHAR},
    #{arrvRegionCode jdbcType=VARCHAR},
    #{arrvRegionName jdbcType=VARCHAR},
    #{airAssembleType jdbcType=VARCHAR},
    #{destOrgCode jdbcType=VARCHAR},
    #{dedtOrgName jdbcType=VARCHAR},
    #{receiverCode jdbcType=VARCHAR},
    #{receiverName jdbcType=VARCHAR},
    #{receiverContactPhone jdbcType=VARCHAR},
    #{accountItem jdbcType=VARCHAR},
    #{billingAgency jdbcType=VARCHAR},
    #{receiverAddress jdbcType=VARCHAR},
    #{storageItem jdbcType=VARCHAR},
    #{flightNo jdbcType=VARCHAR},
    #{flightDate jdbcType=TIMESTAMP},
    #{takeOffTime jdbcType=TIMESTAMP},
    #{arriveTime jdbcType=TIMESTAMP},
    #{rateClass jdbcType=VARCHAR},
    #{paymentType jdbcType=VARCHAR},
    #{grossWeight jdbcType=NUMERIC},
    #{billingWeight jdbcType=NUMERIC},
    #{fee jdbcType=NUMERIC}*100,
    #{agenctCode jdbcType=VARCHAR},
    #{agencyName jdbcType=VARCHAR},
    #{declareValue jdbcType=INTEGER},
    #{itemCode dbcType=VARCHAR},
    #{goodsQty jdbcType=INTEGER},
    #{volume jdbcType=NUMERIC},
    #{airFee jdbcType=NUMERIC}*100,
    #{extraFee jdbcType=NUMERIC}*100,
    #{goodsName jdbcType=NUMERIC},
    #{packageStruction jdbcType=VARCHAR},
    #{groundFee jdbcType=NUMERIC}*100,
    #{fuelSurcharge jdbcType=NUMERIC}*100,
    #{transportInsurance jdbcType=NUMERIC}*100,
    #{inseranceFee jdbcType=NUMERIC}*100,
    #{feeTotal jdbcType=NUMERIC}*100,
    #{feePlain jdbcType=VARCHAR},
    #{billingFee jdbcType=NUMERIC}*100,
    #{shipperCode jdbcType=VARCHAR},
    #{shipperName jdbcType=VARCHAR},
    #{shipperAddress jdbcType=VARCHAR},
    #{shipperContactPhone jdbcType=VARCHAR},
    #{pickupType jdbcType=VARCHAR},
    #{createOrgCode jdbcType=VARCHAR},
    #{createOrgName jdbcType=VARCHAR},
    #{createUserCode jdbcType=VARCHAR},
    #{createUserName jdbcType=VARCHAR},
    #{createTime jdbcType=TIMESTAMP},
    #{modifyUserCode jdbcType=VARCHAR},
    #{modifyUserName jdbcType=VARCHAR},
    #{modifyTime jdbcType=TIMESTAMP},
    #{handoverState jdbcType=TIMESTAMP},
    #{currencyCode jdbcType=VARCHAR},
    #{isNotPayment jdbcType=VARCHAR},
    #{jointTicketNo jdbcType=VARCHAR},
    #{actualTakeOffTime jdbcType=TIMESTAMP},
    #{actualArriveTime jdbcType=TIMESTAMP},
    #{trackState jdbcType=VARCHAR},
    #{airportCode jdbcType=VARCHAR},
    #{transportType jdbcType=VARCHAR}
    )
</insert>

    <!-- 新增航空正单明细 -->
    <insert id="addAirWaybillDetailEntity" parameterType="java.util.List">
        begin
        <foreach collection="list" item="item" separator=";">
            INSERT INTO TFR.T_OPT_AIR_WAYBILL_DETAIL VALUES(
            #{item.id jdbcType=VARCHAR},
            #{item.airWaybillId jdbcType=VARCHAR},
            #{item.waybillNo jdbcType=VARCHAR},
            #{item.makeWaybillWay jdbcType=VARCHAR},
            #{item.stockStatus jdbcType=VARCHAR},
            #{item.arrvRegionName jdbcType=VARCHAR},
            #{item.planFlightNo jdbcType=VARCHAR},
            #{item.beBooking jdbcType=CHAR},
            #{item.measurement jdbcType=VARCHAR},
            #{item.grossWeight jdbcType=NUMERIC},
            #{item.billingWeight jdbcType=NUMERIC},
            #{item.volume jdbcType=NUMERIC},
            #{item.goodsQty jdbcType=NUMERIC},
            #{item.goodsName jdbcType=VARCHAR},
            #{item.createTime jdbcType=TIMESTAMP},
            #{item.isLoading jdbcType=CHAR},
            #{item.deliverFee jdbcType=NUMERIC}*100,
            #{item.arrivalFee jdbcType=NUMERIC}*100,
            #{item.pickupType jdbcType=CHAR},
            #{item.collectionFee jdbcType=NUMERIC}*100,
            #{item.receiverContactPhone jdbcType=VARCHAR},
            #{item.receiverAddress jdbcType=VARCHAR},
            #{item.receiverName jdbcType=VARCHAR},
            #{item.productCode jdbcType=VARCHAR}
            )
        </foreach>
        ;end;
    </insert>

    <!-- 新增航空正单流水明细 -->
    <insert id="AirWaybillSerialNoEntity" parameterType="java.util.List">
        begin
        <foreach collection="list" item="item" separator=";">
            INSERT INTO TFR.T_OPT_AIR_WAYBILL_SERIALNO (
            AIR_WAYBILL_DETAIL_ID,
            SERIAL_NO,
            ID,
            CREATE_TIME,
            STOCK_STATUS,
            WAYBILL_NO
            ) VALUES(
            #{item.airWaybillDetailId jdbcType=VARCHAR},
            #{item.serialNo jdbcType=VARCHAR},
            #{item.id jdbcType=VARCHAR},
            #{item.createTime jdbcType=TIMESTAMP},
            #{item.stockStatus jdbcType=VARCHAR},
            #{item.waybillNo jdbcType=VARCHAR}
            )
        </foreach>
        ;end;
    </insert>

    <select id="speedinessQuery"
            parameterType="com.deppon.foss.module.transfer.airfreight.api.shared.dto.AirWaybillDetailDto"
            resultMap="singlejointticketResultMap">
        SELECT
        <include refid="SELECT_T_OPT_AIR_CARGOVOLUME"/>
        FROM TFR.T_OPT_AIR_CARGOVOLUME WHERE WAYBILL_NO = #{waybillNo}
    </select>

    <!-- 单一运单号查询流水明细 -->
    <select id="queryAirCargovolumeSerialnoEntity" parameterType="String" resultMap="airWaybillSerialNoEntityResultMap">
        SELECT
        <include refid="SELECT_T_OPT_AIR_WAYBILL_SERIALNO"/>
        FROM TFR.T_OPT_AIR_WAYBILL_SERIALNO SERIALNO, TFR.T_OPT_AIR_WAYBILL_DETAIL WAYBILLDETAIL
        WHERE SERIALNO.AIR_WAYBILL_DETAIL_ID = WAYBILLDETAIL.ID
        AND WAYBILLDETAIL.WAYBILL_NO =#{waybillNo}

    </select>
    <!-- 根据ID获取打印数据  -->
    <select id="queryAirWaybillBatchPrint" parameterType="java.util.List" resultMap="aryWaybillResultPrintMap">
        SELECT
        <include refid="SELECT_T_OPT_AIR_WAYBILL_DETAIL"/>
        FROM TFR.T_OPT_AIR_WAYBILL_DETAIL
        <where>
            ID IN
            <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
    </select>

    <!-- 更新航空正单跟踪的相关信息: 实际出发时间、实际到达时间、跟踪状态、修改人、修改时间 -->
    <update id="updateAirWayBillTrack" parameterType="list">
        begin
        <foreach collection="list" item="item" separator=";">
            UPDATE TFR.T_OPT_AIR_WAYBILL
            <trim prefix="SET" suffixOverrides=",">
                <if test="item.actualTakeOffTime != null">
                    ACTUAL_TAKE_OFF_TIME = #{item.actualTakeOffTime,jdbcType=TIMESTAMP},
                </if>
                <if test="item.actualArriveTime != null">
                    ACTUAL_ARRIVE_TIME = #{item.actualArriveTime,jdbcType=TIMESTAMP},
                </if>
                <if test="item.trackState != null and item.trackState != ''">
                    TRACK_STATE = #{item.trackState,jdbcType=VARCHAR},
                </if>
                <if test="item.modifyUserCode != null and item.modifyUserCode != ''">
                    MODIFY_USER_CODE = #{item.modifyUserCode,jdbcType=VARCHAR},
                </if>
                <if test="item.modifyUserName != null and item.modifyUserName != ''">
                    MODIFY_USER_NAME = #{item.modifyUserName,jdbcType=VARCHAR},
                </if>
                <if test="item.modifyTime != null">
                    MODIFY_TIME = #{item.modifyTime,jdbcType=TIMESTAMP}
                </if>
            </trim>
            WHERE ID = #{item.id,jdbcType=VARCHAR}
        </foreach>
        ;end;
    </update>

    <!-- 修改航空正单 -->
    <update id="updateAirWaybillEntity"
            parameterType="com.deppon.foss.module.transfer.airfreight.api.shared.domain.AirWaybillEntity">
        UPDATE TFR.T_OPT_AIR_WAYBILL A
        <set>
            A.AIR_WAYBILL_NO = #{airWaybillNo jdbcType=VARCHAR},
            A.AIR_LINE_TWOLETTER = #{airLineTwoletter jdbcType=VARCHAR},
            A.DEPT_REGION_CODE = #{deptRegionCode jdbcType=VARCHAR},
            A.DEPT_REGION_NAME = #{deptRegionName jdbcType=VARCHAR},
            A.ARRV_REGION_CODE = #{arrvRegionCode jdbcType=VARCHAR},
            A.ARRV_REGION_NAME = #{arrvRegionName jdbcType=VARCHAR},
            A.AIR_ASSEMBLE_TYPE = #{airAssembleType jdbcType=VARCHAR},
            A.DEST_ORG_CODE = #{destOrgCode jdbcType=VARCHAR},
            A.DEDT_ORG_NAME = #{dedtOrgName jdbcType=VARCHAR},
            A.RECEIVER_CODE = #{receiverCode jdbcType=VARCHAR},
            A.RECEIVER_NAME = #{receiverName jdbcType=VARCHAR},
            A.RECEIVER_CONTACT_PHONE = #{receiverContactPhone jdbcType=VARCHAR},
            A.ACCOUNT_ITEM = #{accountItem jdbcType=VARCHAR},
            A.BILLING_AGENCY = #{billingAgency jdbcType=VARCHAR},
            A.RECEIVER_ADDRESS = #{receiverAddress jdbcType=VARCHAR},
            A.STORAGE_ITEM = #{storageItem jdbcType=VARCHAR},
            A.FLIGHT_NO = #{flightNo jdbcType=VARCHAR},
            A.FLIGHT_DATE = #{flightDate jdbcType=TIMESTAMP},
            A.TAKE_OFF_TIME = #{takeOffTime jdbcType=TIMESTAMP},
            A.ARRIVE_TIME = #{arriveTime jdbcType=TIMESTAMP},
            A.RATE_CLASS = #{rateClass jdbcType=VARCHAR},
            A.PAYMENT_TYPE = #{paymentType jdbcType=VARCHAR},
            A.GROSS_WEIGHT = #{grossWeight jdbcType=NUMERIC},
            A.BILLING_WEIGHT = #{billingWeight jdbcType=NUMERIC},
            A.FEE = #{fee jdbcType=NUMERIC}*100,
            A.AGENCT_CODE = #{agenctCode jdbcType=VARCHAR},
            A.AGENCY_NAME = #{agencyName jdbcType=VARCHAR},
            A.DECLARE_VALUE = #{declareValue jdbcType=VARCHAR},
            A.ITEM_CODE = #{itemCode jdbcType=VARCHAR},
            A.GOODS_QTY = #{goodsQty jdbcType=VARCHAR},
            A.VOLUME = #{volume jdbcType=NUMERIC},
            A.AIR_FEE = #{airFee jdbcType=NUMERIC}*100,
            A.EXTRA_FEE = #{extraFee jdbcType=NUMERIC}*100,
            A.GOODS_NAME = #{goodsName jdbcType=VARCHAR},
            A.PACKAGE_STRUCTION = #{packageStruction, jdbcType=VARCHAR},
            A.GROUND_FEE = #{groundFee jdbcType=NUMERIC}*100,
            A.FUEL_SURCHARGE = #{fuelSurcharge jdbcType=NUMERIC}*100,
            A.TRANSPORT_INSURANCE = #{transportInsurance, jdbcType=NUMERIC}*100,
            A.INSERANCE_FEE = #{inseranceFee jdbcType=NUMERIC}*100,
            A.FEE_TOTAL = #{feeTotal jdbcType=NUMERIC}*100,
            A.FEE_PLAIN = #{feePlain jdbcType=VARCHAR},
            A.BILLING_FEE = #{billingFee jdbcType=NUMERIC}*100,
            A.SHIPPER_CODE = #{shipperCode jdbcType=VARCHAR},
            A.SHIPPER_ADDRESS = #{shipperAddress jdbcType=VARCHAR},
            A.SHIPPER_CONTACT_PHONE = #{shipperContactPhone jdbcType=VARCHAR},
            A.CREATE_ORG_CODE = #{createOrgCode jdbcType=VARCHAR},
            A.CREATE_ORG_NAME = #{createOrgName jdbcType=VARCHAR},
            A.CREATE_USER_CODE = #{createUserCode jdbcType=VARCHAR},
            A.CREATE_USER_NAME = #{createUserName jdbcType=VARCHAR},
            A.CREATE_TIME = #{createTime jdbcType=TIMESTAMP},
            A.MODIFY_USER_CODE = #{modifyUserCode jdbcType=VARCHAR},
            A.MODIFY_USER_NAME = #{modifyUserName jdbcType=VARCHAR},
            A.MODIFY_TIME = #{modifyTime jdbcType=TIMESTAMP},
            A.HANDOVER_STATE = #{handoverState jdbcType=VARCHAR},
            A.TRANSPORTTYPE = #{transportType jdbcType=VARCHAR}
        </set>
        WHERE A.ID = #{id}
    </update>

    <!-- 根据ID获取打印数据  -->
    <select id="queryHistoryAirWaybillDetail" parameterType="String" resultMap="aryWaybillResultPrintMap">
        SELECT
        <include refid="SELECT_T_OPT_AIR_WAYBILL_DETAIL"/>
        FROM TFR.T_OPT_AIR_WAYBILL_DETAIL
        <where>
            AIR_WAYBILL_ID = #{airWaybillId}
        </where>
    </select>

    <!-- 根据运单号查询航空正单明细表中是否存在此运单号-->
    <select id="queryAirWaybillDetailEntityIsNotNull" parameterType="String" resultType="int">
        SELECT
        COUNT(A.ID)
        FROM TFR.T_OPT_AIR_WAYBILL_DETAIL A
        <where>
            A.ID = #{id}
        </where>
    </select>

    <!--根据id批量除航空正单明细 -->
    <delete id="deleteAirWaybillDetail" parameterType="java.util.List">
        DELETE FROM TFR.T_OPT_AIR_WAYBILL_DETAIL A
        WHERE A.ID IN
        <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!-- 根据id批量删除航空正单流水明细list -->
    <delete id="deleteAirWaybillSerialNo" parameterType="java.util.List">
        DELETE FROM TFR.T_OPT_AIR_WAYBILL_SERIALNO A
        WHERE A.AIR_WAYBILL_DETAIL_ID IN
        <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <!--修改航空正单明细(毛重、体积)-->
    <update id="updateAirWaybillDetailList" parameterType="list">
        begin
        <foreach collection="list" item="item" separator=";">
            UPDATE TFR.T_OPT_AIR_WAYBILL_DETAIL A
            <set>
                A.GOODS_QTY = #{item.goodsQty jdbcType=NUMERIC},
                A.GROSS_WEIGHT = #{item.grossWeight jdbcType=NUMERIC},
                A.BILLING_WEIGHT = #{item.billingWeight jdbcType=NUMERIC},
                A.VOLUME = #{item.volume jdbcType=NUMERIC}
            </set>
            WHERE A.ID = #{item.id,jdbcType=VARCHAR}
        </foreach>
        ;end;
    </update>

    <!-- 根据运单号合id查询流水号条数-->
    <select id="queryAirWaybillDetailIdList" parameterType="map" resultMap="resultSerialNoMap">
        SELECT A.ID,
        A.SERIAL_NO
        FROM TFR.T_OPT_AIR_WAYBILL_SERIALNO A
        <where>
            A.AIR_WAYBILL_DETAIL_ID =
            (SELECT B.ID FROM TFR.T_OPT_AIR_WAYBILL_DETAIL B
            <where>
                B.WAYBILL_NO = #{waybillNo}
                AND B.ID= #{airWaybillDetailId}
            </where>
            )
        </where>
    </select>

    <!-- 根据航空正单明细id查询所有流水号 -->
    <select id="queryAirwayBillSerailNoDetailList" parameterType="java.util.List" resultMap="resultSerialNoMap">
        SELECT A.ID,
        A.SERIAL_NO
        FROM TFR.T_OPT_AIR_WAYBILL_SERIALNO A.AIR_WAYBILL_DETAIL_ID IN
        <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <delete id="deleteModifyAirWaybillSerialNo" parameterType="map">
        DELETE FROM TFR.T_OPT_AIR_WAYBILL_SERIALNO A
        <where>
            A.SERIAL_NO IN
            <foreach collection="serialNoList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
            AND A.AIR_WAYBILL_DETAIL_ID = #{airWaybillDetailId}
        </where>
    </delete>

    <select id="queryAirWaybillSerialNoList" parameterType="String" resultMap="airWaybillSerialNoEntityResultMap">
        SELECT
        <include refid="SELECT_T_OPT_AIR_WAYBILL_SERIALNO"/>
        FROM TFR.T_OPT_AIR_WAYBILL_SERIALNO SERIALNO
        <where>
            SERIALNO.AIR_WAYBILL_DETAIL_ID = #{airWaybillDetailId}
        </where>
    </select>
    
    <!-- 根据正单号查询运单明细list -->
    <select id="queryWaybillNoList" parameterType="String" resultType="string">
		  SELECT B.WAYBILL_NO FROM TFR.T_OPT_AIR_WAYBILL_DETAIL B 
		  WHERE B.AIR_WAYBILL_ID IN  
		  (SELECT ID FROM TFR.T_OPT_AIR_WAYBILL A WHERE A.AIR_WAYBILL_NO = #{airWaybillNo})
	</select>
    <!-- 根据正单号查询运单list -->
    <select id="queryWayBillByAirWaybillNo" parameterType="String" resultMap="resultUploadingEdiDtoMap">
  SELECT 
     WAYBILL.WAYBILL_NO, 
     AIRWAYBILL.DEST_ORG_CODE,
     AIRWAYBILL.DEDT_ORG_NAME,
     AIRWAYBILL.FLIGHT_NO,
     AIRWAYBILL.FLIGHT_DATE,
     f.ARRIVE_TIME,
     WSG.DELIVERYMAN_NAME,
	 WSG.SIGN_TIME,
	 WSG.DELIVER_DATE,
	 WSG.SIGN_SITUATION,
	 WAYBILL.RECEIVE_METHOD,
     WAYBILL.RECEIVE_CUSTOMER_CONTACT,
	 WAYBILL.BILL_TIME,
	 WAYBILL.GOODS_QTY_TOTAL,
	 WAYBILL.GOODS_WEIGHT_TOTAL,
	 WAYBILL.CREATE_USER_CODE,
     WAYBILL.Product_Code
  FROM  
     PKP.T_SRV_WAYBILL WAYBILL
     INNER JOIN TFR.T_OPT_AIR_WAYBILL_DETAIL DETAIL ON DETAIL.WAYBILL_NO = WAYBILL.WAYBILL_NO  AND WAYBILL.ACTIVE = 'Y'
     INNER JOIN TFR.T_OPT_AIR_WAYBILL AIRWAYBILL  ON DETAIL.AIR_WAYBILL_ID = AIRWAYBILL.ID
     INNER JOIN TFR.T_OPT_AIR_PICKUPBILL_DETAIL DE  ON WAYBILL.WAYBILL_NO = DE.WAYBILL_NO
     INNER JOIN TFR.T_OPT_AIR_PICKUPBILL PB ON PB.ID = DE.AIR_PICKUPBILL_ID 
     INNER JOIN pkp.t_srv_actual_freight f on  WAYBILL.WAYBILL_NO = f.WAYBILL_NO 
     LEFT JOIN  PKP.T_SRV_WAYBILL_SIGN_RESULT WSG on WAYBILL.WAYBILL_NO = WSG.WAYBILL_NO AND  WSG.ACTIVE = 'Y'
   WHERE 
     AIRWAYBILL.AIR_WAYBILL_NO=#{airWaybillNo,jdbcType=VARCHAR}
     <!-- 合大票为已提交状态 2016年9月7日11:30:47 wwb 311396 附：增加了合大票表连接 -->
     and nvl(pb.status, 'Y') != 'N'
	</select>

    <!-- 查询空运到达派送信息录入情况统计 -->
    <select id="queryFlightArriveSendInfo"
            parameterType="com.deppon.foss.module.transfer.airfreight.api.shared.dto.QueryAirArriveInfoDto"
            resultMap="resultAirArriveSendInfoDtoMap">
        SELECT
        DISTINCT
        WAYBILL.WAYBILL_NO,
        AIRWAYBILL.DEST_ORG_CODE,
        AIRWAYBILL.DEDT_ORG_NAME,
        f.ARRIVE_TIME,
        SIGNRESULT.DELIVERYMAN_NAME,
        SIGNRESULT.Sign_Time,
        AIRWAYBILL.FLIGHT_DATE
        FROM TFR.T_OPT_AIR_WAYBILL AIRWAYBILL
        inner join TFR.T_OPT_AIR_WAYBILL_DETAIL DETAIL on DETAIL.AIR_WAYBILL_ID = AIRWAYBILL.ID
        inner join PKP.T_SRV_WAYBILL WAYBILL on WAYBILL.WAYBILL_NO = DETAIL.WAYBILL_NO AND WAYBILL.ACTIVE = 'Y'
        inner join pkp.t_srv_actual_freight f on WAYBILL.WAYBILL_NO = f.WAYBILL_NO
        left join PKP.T_SRV_WAYBILL_SIGN_RESULT SIGNRESULT ON SIGNRESULT.WAYBILL_NO = WAYBILL.WAYBILL_NO AND
        SIGNRESULT.Active = 'Y'
        <where>
            <if test="wayBillNumber !=null and wayBillNumber !='' ">
                DETAIL.WAYBILL_NO= #{wayBillNumber}
            </if>
            <if test="ladingStationNumber !=null and ladingStationNumber !=''">
                AND AIRWAYBILL.DEST_ORG_CODE= #{ladingStationNumber}
            </if>
            <if test="departmentID !=null and departmentID !='' ">
                AND AIRWAYBILL.CREATE_ORG_NAME= #{departmentID}
            </if>
            <if test="departureStartTime !=null and departureEndTime !=null ">
                <![CDATA[ AND AIRWAYBILL.FLIGHT_DATE >= #{departureStartTime} AND AIRWAYBILL.FLIGHT_DATE <= #{departureEndTime}]]>
            </if>
        </where>
    </select>

    <!-- 查询空运库存列表 -->
    <select id="queryAirStockInfo"
            parameterType="com.deppon.foss.module.transfer.airfreight.api.shared.dto.AirStockInfoDto"
            resultMap="resultAirStockInfoDtoMap">
        SELECT
        DISTINCT
        WAYBILL.WAYBILL_NO,
        AIRWAYBILL.DEST_ORG_CODE,
        AIRWAYBILL.DEDT_ORG_NAME,
        AIRWAYBILL.FLIGHT_NO,
        AIRWAYBILL.FLIGHT_DATE
        FROM TFR.T_OPT_AIR_WAYBILL AIRWAYBILL
        inner join TFR.T_OPT_AIR_WAYBILL_DETAIL DETAIL on DETAIL.AIR_WAYBILL_ID = AIRWAYBILL.ID
        inner join PKP.T_SRV_WAYBILL WAYBILL on WAYBILL.WAYBILL_NO = DETAIL.WAYBILL_NO AND WAYBILL.ACTIVE = 'Y'
        <where>
            <if test="ladingStationNumber !=null and ladingStationNumber !=''">
                AIRWAYBILL.DEST_ORG_CODE= #{ladingStationNumber}
            </if>
            <if test="departureStartTime !=null and departureEndTime !=null ">
                <![CDATA[ AND AIRWAYBILL.FLIGHT_DATE >= #{departureStartTime} AND AIRWAYBILL.FLIGHT_DATE <= #{departureEndTime}]]>
            </if>
        </where>
    </select>


    <!-- 根据正单号查询待打印的航空正单 -->
    <select id="queryWidthPrintAirWaybill" parameterType="string" resultMap="modifyAirWayBillResultMap">
        SELECT
        <include refid="select_airWaybillall_column_view"/>
        FROM TFR.T_OPT_AIR_WAYBILL
        WHERE AIR_WAYBILL_NO = #{airWaybillNo}
    </select>

    <!-- 根据运单号查询走货轨迹 -->
    <select id="queryWaybillPath" parameterType="String" resultMap="wayBillAssembleDtoResultMap">
		SELECT WAYBILL.FLIGHT_NO,
			   WAYBILL.TAKE_OFF_TIME,
			   WAYBILL.ARRIVE_TIME
			   FROM TFR.T_OPT_AIR_WAYBILL WAYBILL WHERE WAYBILL.ID IN(
					SELECT WAYBILLDETAIL.AIR_WAYBILL_ID 
					FROM TFR.T_OPT_AIR_WAYBILL_DETAIL WAYBILLDETAIL
					WHERE WAYBILLDETAIL.WAYBILL_NO=#{waybillNo}
				)
	</select>

    <!-- 根据正单号查询需要制作唐翼的运单明细list -->
    <select id="queryRequireMakeTangYiTargetWaybillList" parameterType="String"
            resultMap="convertAirwaybillDetailResulMap">
		SELECT DETAIL.*  FROM TFR.T_OPT_AIR_WAYBILL WAYBILL ,
				TFR.T_OPT_AIR_WAYBILL_DETAIL DETAIL
		WHERE WAYBILL.ID = DETAIL.AIR_WAYBILL_ID
		AND WAYBILL.AIR_WAYBILL_NO=#{airWaybillNo}
	</select>

    <!-- 根据正单号查询所属运单的出发部门List -->
    <!-- 过滤掉重复查询结果 -->
    <!-- 2013-08-01 wqh -->
    <select id="queryWaybillInfoByAirwaybillNo" parameterType="String" resultMap="waybillInfoResulMap">
		SELECT /*根据正单号查询所属运单的出发部门List*/
        	WB.WAYBILL_NO,
       		WB.RECEIVE_ORG_CODE,
       		ORG.NAME RECEIVE_ORG_NAME
	 	FROM TFR.T_OPT_AIR_WAYBILL_DETAIL DE
	 		JOIN TFR.T_OPT_AIR_WAYBILL AW ON DE.AIR_WAYBILL_ID = AW.ID
	 		JOIN PKP.T_SRV_WAYBILL WB ON WB.WAYBILL_NO = DE.WAYBILL_NO
	 		JOIN BSE.T_BAS_ORG ORG ON WB.RECEIVE_ORG_CODE = ORG.CODE AND ORG.ACTIVE='Y'
		WHERE AW.AIR_WAYBILL_NO=#{airWaybillNo}
		 group by WB.WAYBILL_NO,WB.RECEIVE_ORG_CODE,ORG.NAME ,RECEIVE_ORG_NAME
	</select>
    <!-- 2013-07-29 wqh -->
    <!--根据航空正单id和运单号删除某个航正单中的运单明细  -->
    <delete id="deleteByAirWaybillDetail" parameterType="map">
        DELETE FROM TFR.T_OPT_AIR_WAYBILL_SERIALNO A
        <where>
            A.AIR_WAYBILL_ID=#{airWaybillId}
            AND A.WAYBILL_NO in
            <foreach collection="waybillNoList" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>

        </where>
    </delete>

    <resultMap id='queryWaybillDetailResultMap'
               type="com.deppon.foss.module.transfer.airfreight.api.shared.dto.WaybillDetailDto">
        <result property="waybillNo" column="waybill_no"/>
        <result property="outerNotes" column="outer_notes"/>
        <result property="innerNotes" column="inner_notes"/>
        <result property="goodSize" column="goods_size"/>
        <result property="transportationRemark" column="transportation_remark"/>
    </resultMap>
    <!-- 根据运单号查询运单详细信息 -->
    <select id="queryWaybillDetailByWaybillNo" parameterType="String" resultMap="queryWaybillDetailResultMap">
	     select w.waybill_no,
			    w.outer_notes, 
			    w.inner_notes,
			    w.goods_size,
			    w.transportation_remark as transportationRemark
        from pkp.t_srv_waybill w where w.waybill_no=#{waybillNo} and w.active='Y'
	</select>

    <!-- 根据航空正单号查询运单明细 -->
    <select id="queryWaybillNosByAirWaybillId" parameterType="String" resultType="string">
	     SELECT d.waybill_no FROM tfr.t_opt_air_waybill w
			 INNER JOIN tfr.t_opt_air_waybill_detail d
			   ON d.air_waybill_id=w.id
			   WHERE w.air_waybill_no=#{airWaybillNo}
	</select>

    <!-- 空运锁票 -->
    <!-- 新增锁票记录 -->
    <insert id="addAirLockWaybillDetail"
            parameterType="com.deppon.foss.module.transfer.airfreight.api.shared.domain.AirLockWaybillDetailEntity">
		INSERT INTO TFR.t_Opt_Air_Lockwaybilldetail VALUES (
			#{id jdbcType=VARCHAR},
			#{waybillNo jdbcType=VARCHAR},
			#{lockRemark jdbcType=VARCHAR},
			#{orgCode jdbcType=VARCHAR},
			#{orgName jdbcType=VARCHAR},
			#{createUserCode jdbcType=VARCHAR},
			#{createUser jdbcType=VARCHAR},
			#{createDate jdbcType=TIMESTAMP},
			#{modifyUserCode jdbcType=VARCHAR},
			#{modifyUser jdbcType=VARCHAR},
			#{modifyDate jdbcType=TIMESTAMP},
			#{lockStatus jdbcType=VARCHAR}
		)
	</insert>
    <!--解除空运锁票  -->
    <update id="unlockAirWaybill"
            parameterType="com.deppon.foss.module.transfer.airfreight.api.shared.domain.AirLockWaybillDetailEntity">
        update tfr.t_Opt_Air_Lockwaybilldetail t
        <set>
            t.ACTIVE = #{lockStatus jdbcType=VARCHAR},
            t.MODIFY_USER_CODE = #{modifyUserCode jdbcType=VARCHAR},
            t.MODIFY_USER_NAME = #{modifyUser jdbcType=VARCHAR},
            t.MODIFY_TIME = #{modifyDate jdbcType=TIMESTAMP}
        </set>
        WHERE t.ID = #{id}
    </update>

    <!--查询锁票运单信息 -->
    <select id="queryLockAirWaybill" parameterType="map" resultMap="airLockWaybillMap">
     select t.id, t.waybill_no, t.lock_remark, t.active
           from tfr.t_opt_air_lockwaybilldetail t
     where t.waybill_no = #{waybillNo jdbcType=VARCHAR}
           and t.operate_org_code = #{orgCode jdbcType=VARCHAR}
           and t.ACTIVE='Y'
   </select>
    <!--查询锁票运单信息List -->
    <select id="queryLockAirWaybillList" parameterType="map" resultMap="airLockWaybillMap">
        select t.id, t.waybill_no, t.lock_remark, t.active
        from tfr.t_opt_air_lockwaybilldetail t
        where t.waybill_no in
        <foreach collection="waybillNoList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        and t.operate_org_code = #{orgCode jdbcType=VARCHAR}
        and t.ACTIVE='Y'
    </select>
    <!-- 查询当前空运总调中运单件数 -->
    <select id="queryWaybillStockQty" parameterType="map" resultMap="convertAirwaybillDetailResulMap">
        select t.waybill_no WAYBILL_NO,count(1) STOCK_QTY from tfr.t_opt_stock t
        where t.waybill_no in
        <foreach collection="waybillNoList" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        and t.org_code=#{orgCode}
        and t.goods_area_code=#{goodAreaCode}
        group by t.waybill_no,t.org_code
    </select>
	<select id="queryAirFlights" resultMap="airFlightQueryMap" parameterType="com.deppon.foss.module.transfer.airfreight.api.shared.dto.AirFlightQueryDto">
   		
		select w.id id,
		       w.create_org_code departDepetCode,
		       w.create_org_name departDepet,
		       w.dest_org_code arriveDeptCode,
		       t.agent_dept_name arriveDept,
		       w.take_off_time departureTime,
		       w.arrive_time arrivedTime,
		       w.billing_weight totalWeight,
		       w.volume totalVolum,
		       w.flight_no  flightNo,
		       sum(d.goods_qty) totalGoods
		  from tfr.t_opt_air_waybill w
		  join tfr.t_opt_air_waybill_detail d
		    on w.id = d.air_waybill_id
		  inner join bse.t_bas_outer_branch t
		    on w.dest_org_code = t.agent_dept_code
		    and t.active = 'Y'
		    where 	<if test=" beginFligtTime !=null and beginFligtTime!=''" >
		    			w.create_time <![CDATA[>=]]> #{beginFligtTime}
		    		</if>
		    		<if test=" endFligtTime!=null and endFligtTime!=''">
			        	and w.create_time <![CDATA[<=]]>#{endFligtTime}
			        </if>
			        <if test="beingSingleNo!=null and beingSingleNo!=''">
			        	and w.air_waybill_no=#{beingSingleNo}
			        </if>
			        <if test="departOrgCode!=null and departOrgCode!=''">
			       		 and w.create_org_code=#{departOrgCode}
			        </if>
			        <if test=" destOrgCode!=null and destOrgCode!=''">
			        	and w.dest_org_code=#{destOrgCode}
			        </if>
		  group by w.create_org_code,
		          w.create_org_name,
		          w.dest_org_code,
		          t.agent_dept_name,
		          w.take_off_time,
		          w.arrive_time,
		          w.billing_weight,
		          w.volume,
		          w.flight_no,
		          w.id
		 union 
     
	     select w.id id,
	           w.create_org_code departDepetCode,
	           w.create_org_name departDepet,
	           w.dest_org_code arriveDeptCode,
	           og.name arriveDept,
	           w.take_off_time departureTime,
	           w.arrive_time arrivedTime,
	           w.billing_weight totalWeight,
	           w.volume totalVolum,
	           w.flight_no  flightNo,
	           sum(d.goods_qty) totalGoods
	      from tfr.t_opt_air_waybill w
	      join tfr.t_opt_air_waybill_detail d
	        on w.id = d.air_waybill_id
	      inner join bse.t_bas_org og
	        on w.dest_org_code = og.code
	        and og.active = 'Y'
	        where   <if test=" beginFligtTime !=null and beginFligtTime!=''" >
	              w.create_time <![CDATA[>=]]> #{beginFligtTime}
	            </if>
	            <if test=" endFligtTime!=null and endFligtTime!=''">
	                and w.create_time <![CDATA[<=]]>#{endFligtTime}
	              </if>
	              <if test="beingSingleNo!=null and beingSingleNo!=''">
	                and w.air_waybill_no=#{beingSingleNo}
	              </if>
	              <if test="departOrgCode!=null and departOrgCode!=''">
	                  and w.create_org_code=#{departOrgCode}
	              </if>
	              <if test=" destOrgCode!=null and destOrgCode!=''">
	                and w.dest_org_code=#{destOrgCode}
	              </if>
	      group by w.create_org_code,
	              w.create_org_name,
	              w.dest_org_code,
	              og.name,
	              w.take_off_time,
	              w.arrive_time,
	              w.billing_weight,
	              w.volume,
	              w.flight_no,
	              w.id
   </select>
   
   
   <select id="queryAirFlightsCount" resultType="long" parameterType="com.deppon.foss.module.transfer.airfreight.api.shared.dto.AirFlightQueryDto">
		select count(0) from (
		 select w.id id,
		       w.create_org_code departDepetCode,
		       w.create_org_name departDepet,
		       w.dest_org_code arriveDeptCode,
		       t.agent_dept_name arriveDept,
		       w.take_off_time departureTime,
		       w.arrive_time arrivedTime,
		       w.billing_weight totalWeight,
		       w.volume totalVolum,
		       w.flight_no  flightNo,
		       sum(d.goods_qty) totalGoods
		  from tfr.t_opt_air_waybill w
		  join tfr.t_opt_air_waybill_detail d
		    on w.id = d.air_waybill_id
		  inner join bse.t_bas_outer_branch t
		    on w.dest_org_code = t.agent_dept_code
		    and t.active = 'Y'
		    where 	<if test=" beginFligtTime !=null and beginFligtTime!=''" >
		    			w.create_time <![CDATA[>=]]> #{beginFligtTime}
		    		</if>
		    		<if test=" endFligtTime!=null and endFligtTime!=''">
			        	and w.create_time <![CDATA[<=]]>#{endFligtTime}
			        </if>
			        <if test="beingSingleNo!=null and beingSingleNo!=''">
			        	and w.air_waybill_no=#{beingSingleNo}
			        </if>
			        <if test="departOrgCode!=null and departOrgCode!=''">
			       		 and w.create_org_code=#{departOrgCode}
			        </if>
			        <if test=" destOrgCode!=null and destOrgCode!=''">
			        	and w.dest_org_code=#{destOrgCode}
			        </if>
		  group by w.create_org_code,
		          w.create_org_name,
		          w.dest_org_code,
		          t.agent_dept_name,
		          w.take_off_time,
		          w.arrive_time,
		          w.billing_weight,
		          w.volume,
		          w.flight_no,
		          w.id
		 union 
     
	     select w.id id,
	           w.create_org_code departDepetCode,
	           w.create_org_name departDepet,
	           w.dest_org_code arriveDeptCode,
	           og.name arriveDept,
	           w.take_off_time departureTime,
	           w.arrive_time arrivedTime,
	           w.billing_weight totalWeight,
	           w.volume totalVolum,
	           w.flight_no  flightNo,
	           sum(d.goods_qty) totalGoods
	      from tfr.t_opt_air_waybill w
	      join tfr.t_opt_air_waybill_detail d
	        on w.id = d.air_waybill_id
	      inner join bse.t_bas_org og
	        on w.dest_org_code = og.code
	        and og.active = 'Y'
	        where   <if test=" beginFligtTime !=null and beginFligtTime!=''" >
	              w.create_time <![CDATA[>=]]> #{beginFligtTime}
	            </if>
	            <if test=" endFligtTime!=null and endFligtTime!=''">
	                and w.create_time <![CDATA[<=]]>#{endFligtTime}
	              </if>
	              <if test="beingSingleNo!=null and beingSingleNo!=''">
	                and w.air_waybill_no=#{beingSingleNo}
	              </if>
	              <if test="departOrgCode!=null and departOrgCode!=''">
	                  and w.create_org_code=#{departOrgCode}
	              </if>
	              <if test=" destOrgCode!=null and destOrgCode!=''">
	                and w.dest_org_code=#{destOrgCode}
	              </if>
	      group by w.create_org_code,
	              w.create_org_name,
	              w.dest_org_code,
	              og.name,
	              w.take_off_time,
	              w.arrive_time,
	              w.billing_weight,
	              w.volume,
	              w.flight_no,
	              w.id
	              )
   </select>
   
   
   <!-- ******配合快递,根据运单号查询运行轨迹 开始  author:106162 date:2016-05-23********* -->   
   <resultMap type="com.deppon.foss.module.transfer.airfreight.api.shared.vo.WaybillTrack" id="waybillTrackResultMap">
      <result property="waybillNo" column=""/>
      <result property="operateOrgName" column=""/>
      <result property="unifiedCode" column=""/>
      <result property="operateOrgCode" column=""/>
      <result property="operateCityCode" column=""/>
      <result property="operateCityName" column=""/>
      <result property="operateType" column=""/>
      <result property="operateTypeName" column=""/>
      <result property="operateContent" column=""/>
      <result property="operateTime" column=""/>
      <result property="operateName" column=""/>
      <result property="operateNumber" column=""/>
      <result property="billNo" column=""/>
      <result property="vehicleNo" column=""/>
      <result property="notes" column=""/>
      <result property="nextOrgCode" column=""/>
      <result property="nextOrgName" column=""/>
      <result property="nextCityCode" column=""/>
      <result property="nextCityName" column=""/>
      <result property="destinationStationOrgCode" column=""/>
      <result property="destinationStationOrgName" column=""/>
      <result property="destinationStationCityCode" column=""/>
      <result property="destinationStationCityName" column=""/>
      <result property="planArriveTime" column=""/>
      <result property="deliveryName" column=""/>
      <result property="deliveryPhone" column=""/>
      <result property="signManName" column=""/>
      <result property="currentStatus" column=""/>
      <result property="firstSignTime" column=""/>
      <result property="preArriveTime" column=""/>
   </resultMap>
   
   <!-- 获取运单轨迹信息  -->
   <select id="queryWaybillTracks" parameterType="java.lang.String" resultMap="waybillTrackResultMap">
      
   </select>
   
   <!-- ******************配合快递,根据运单号查询运行轨迹 结束************************** -->
   
   <!-- description:根据运单号查询航空制单的制单部门  author:106162-foss-lishaoming date:2016-05-24 -->
   <resultMap type="com.deppon.foss.module.transfer.airfreight.api.shared.vo.AirWayBillQueryCreateDeptVO" 
                id="queryAirWaybillMap">
     <result property="airWaybillNo" column="air_waybill_no"/>
     <result property="createOrgCode" column="create_org_code"/>
     <result property="createOrgName" column="create_org_name"/>
     <result property="createUserCode" column="create_user_code"/>
     <result property="createUserName" column="create_user_name"/>
     <result property="destOrgCode" column="dest_org_code"/>
     <result property="dedtOrgName" column="dedt_org_name"/>
   </resultMap>
  
   <select id="queryAirWayBillCreateDept" parameterType="java.lang.String" resultMap="queryAirWaybillMap">
      select 
		a.air_waybill_no,
		a.create_org_code,
		a.create_org_name,
		a.create_user_code,
		a.create_user_name,
		a.dest_org_code,
        a.dedt_org_name
	  from tfr.T_OPT_AIR_WAYBILL a
	  inner join tfr.t_opt_air_waybill_detail b
	    on a.id = b.air_waybill_id
	 where b.waybill_no=#{waybill_no,jdbcType=VARCHAR}
   </select>
   
   
   <!-- 查询已保存的的运单流水明细 -->
    <select id="queryWaybillDetailEntityList" parameterType="String" resultMap="aryWaybillResultPrintMap">
        SELECT 
       	<include refid="SELECT_T_OPT_AIR_WAYBILL_DETAIL"/>
        FROM TFR.T_OPT_AIR_WAYBILL_DETAIL
        WHERE WAYBILL_NO = #{waybill_no,jdbcType=VARCHAR}
    </select>
   
</mapper>
