<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Foss.forecastQuantity" >
	<resultMap id="BaseResultMap" type="com.deppon.foss.module.transfer.scheduling.api.shared.domain.ForecastQuantityEntity" >
		<id column="FORECAST_QUANTITY_ID" property="forecastQuantityId" jdbcType="VARCHAR" />
		<result column="BELONG_ORG_CODE" property="belongOrgCode" jdbcType="VARCHAR" />
		<result column="REGION" property="region" jdbcType="VARCHAR" />
		<result column="RELEVANT_ORG_CODE" property="relevantOrgCode" jdbcType="VARCHAR" />
		<result column="WEIGHT_TOTAL" property="weightTotal" jdbcType="DECIMAL" />
		<result column="VOLUME_TOTAL" property="volumeTotal" jdbcType="DECIMAL" />
		<result column="WAYBILL_QTY_TOTAL" property="waybillQtyTotal" jdbcType="NUMERIC" />
		<result column="GPS_ENABLED_RES_WEIGHT_TOTAL" property="gpsEnabledResWeightTotal" jdbcType="DECIMAL" />
		<result column="GPS_ENABLED_RES_VOLUME_TOTAL" property="gpsEnabledResVolumeTotal" jdbcType="DECIMAL" />
		<result column="GPS_ENABLED_RES_QTY_TOTAL" property="gpsEnabledResQtyTotal" jdbcType="NUMERIC" />
		<result column="PRECISION_IFS_WEIGHT_TOTAL" property="precisionIfsWeightTotal" jdbcType="DECIMAL" />
		<result column="PRECISION_IFS_VOLUME_TOTAL" property="precisionIfsVolumeTotal" jdbcType="DECIMAL" />
		<result column="PRECISION_IFS_QTY_TOTAL" property="precisionIfsQtyTotal" jdbcType="NUMERIC" />
		<result column="EXPRESS_WEIGHT_TOTAL" property="expressWeightTotal" jdbcType="DECIMAL" />
		<result column="EXPRESS_VOLUME_TOTAL" property="expressVolumeTotal" jdbcType="DECIMAL" />
		<result column="EXPRESS_QTY_TOTAL" property="expressQtyTotal" jdbcType="NUMERIC" />
		<result column="INVENTORY_WEIGHT_TOTAL" property="inventoryWeightTotal" jdbcType="DECIMAL" />
		<result column="INVENTORY_VOLUME_TOTAL" property="inventoryVolumeTotal" jdbcType="DECIMAL" />
		<result column="INVENTORY_QTY_TOTAL" property="inventoryQtyTotal" jdbcType="NUMERIC" />
		<result column="BILLING_WEIGHT_TOTAL" property="billingWeightTotal" jdbcType="DECIMAL" />
		<result column="BILLING_VOLUME_TOTAL" property="billingVolumeTotal" jdbcType="DECIMAL" />
		<result column="BILLING_QTY_TOTAL" property="billingQtyTotal" jdbcType="NUMERIC" />
		<result column="INTRANSIT_WEIGHT_TOTAL" property="intransitWeightTotal" jdbcType="DECIMAL" />
		<result column="INTRANSIT_VOLUME_TOTAL" property="intransitVolumeTotal" jdbcType="DECIMAL" />
		<result column="INTRANSIT_QTY_TOTAL" property="intransitQtyTotal" jdbcType="NUMERIC" />
		<result column="DEVIATION_VOLUME" property="deviationVolume" jdbcType="DECIMAL" />
		<result column="STATISTICS_TIME" property="statisticsTime" jdbcType="TIMESTAMP" />
		<result column="TYPE" property="type" jdbcType="VARCHAR" />
		<result column="FORECAST_TIME" property="forecastTime" jdbcType="DATE" />
		<result column="STATISTICS_DATE" property="statisticsDate" jdbcType="DATE" />
		<result column="STATISTICS_HHMM" property="statisticsHHMM" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List" >
    FORECAST_QUANTITY_ID, BELONG_ORG_CODE, REGION, RELEVANT_ORG_CODE, WEIGHT_TOTAL, VOLUME_TOTAL, 
    WAYBILL_QTY_TOTAL, GPS_ENABLED_RES_WEIGHT_TOTAL, GPS_ENABLED_RES_VOLUME_TOTAL, GPS_ENABLED_RES_QTY_TOTAL, 
    PRECISION_IFS_WEIGHT_TOTAL, PRECISION_IFS_VOLUME_TOTAL, PRECISION_IFS_QTY_TOTAL, 
    EXPRESS_WEIGHT_TOTAL, EXPRESS_VOLUME_TOTAL, EXPRESS_QTY_TOTAL,
    INVENTORY_WEIGHT_TOTAL, INVENTORY_VOLUME_TOTAL, INVENTORY_QTY_TOTAL, BILLING_WEIGHT_TOTAL, 
    BILLING_VOLUME_TOTAL, BILLING_QTY_TOTAL, INTRANSIT_WEIGHT_TOTAL, INTRANSIT_VOLUME_TOTAL, 
    INTRANSIT_QTY_TOTAL, DEVIATION_VOLUME, STATISTICS_TIME, TYPE, FORECAST_TIME, STATISTICS_DATE, STATISTICS_HHMM
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
		<include refid="Base_Column_List" />
    from TFR.T_OPT_FORECAST_QUANTITY
    where FORECAST_QUANTITY_ID = #{forecastQuantityId,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from TFR.T_OPT_FORECAST_QUANTITY
    where FORECAST_QUANTITY_ID = #{forecastQuantityId,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.ForecastQuantityEntity" >
    insert into TFR.T_OPT_FORECAST_QUANTITY (FORECAST_QUANTITY_ID, BELONG_ORG_CODE, 
      REGION, RELEVANT_ORG_CODE, WEIGHT_TOTAL, 
      VOLUME_TOTAL, WAYBILL_QTY_TOTAL, GPS_ENABLED_RES_WEIGHT_TOTAL, 
      GPS_ENABLED_RES_VOLUME_TOTAL, GPS_ENABLED_RES_QTY_TOTAL, 
      PRECISION_IFS_WEIGHT_TOTAL, PRECISION_IFS_VOLUME_TOTAL, 
      PRECISION_IFS_QTY_TOTAL, EXPRESS_WEIGHT_TOTAL, 
      EXPRESS_VOLUME_TOTAL, EXPRESS_QTY_TOTAL, INVENTORY_WEIGHT_TOTAL, 
      INVENTORY_VOLUME_TOTAL, INVENTORY_QTY_TOTAL, 
      BILLING_WEIGHT_TOTAL, BILLING_VOLUME_TOTAL, 
      BILLING_QTY_TOTAL, INTRANSIT_WEIGHT_TOTAL, 
      INTRANSIT_VOLUME_TOTAL, INTRANSIT_QTY_TOTAL, 
      DEVIATION_VOLUME, STATISTICS_TIME, TYPE,
      FORECAST_TIME, STATISTICS_DATE, STATISTICS_HHMM
      )
    values (#{forecastQuantityId,jdbcType=VARCHAR}, #{belongOrgCode,jdbcType=VARCHAR}, 
      #{region,jdbcType=VARCHAR}, #{relevantOrgCode,jdbcType=VARCHAR}, #{weightTotal,jdbcType=DECIMAL}, 
      #{volumeTotal,jdbcType=DECIMAL}, #{waybillQtyTotal,jdbcType=NUMERIC}, #{gpsEnabledResWeightTotal,jdbcType=DECIMAL}, 
      #{gpsEnabledResVolumeTotal,jdbcType=DECIMAL}, #{gpsEnabledResQtyTotal,jdbcType=NUMERIC}, 
      #{precisionIfsWeightTotal,jdbcType=DECIMAL}, #{precisionIfsVolumeTotal,jdbcType=DECIMAL}, 
      #{precisionIfsQtyTotal,jdbcType=NUMERIC},#{expressWeightTotal,jdbcType=DECIMAL}, #{expressVolumeTotal,jdbcType=DECIMAL}, 
      #{expressQtyTotal,jdbcType=NUMERIC}, #{inventoryWeightTotal,jdbcType=DECIMAL}, 
      #{inventoryVolumeTotal,jdbcType=DECIMAL}, #{inventoryQtyTotal,jdbcType=NUMERIC}, 
      #{billingWeightTotal,jdbcType=DECIMAL}, #{billingVolumeTotal,jdbcType=DECIMAL}, 
      #{billingQtyTotal,jdbcType=NUMERIC}, #{intransitWeightTotal,jdbcType=DECIMAL}, 
      #{intransitVolumeTotal,jdbcType=DECIMAL}, #{intransitQtyTotal,jdbcType=NUMERIC}, 
      #{deviationVolume,jdbcType=DECIMAL}, #{statisticsTime,jdbcType=TIMESTAMP}, #{type,jdbcType=VARCHAR},
      #{forecastTime,jdbcType=DATE}, #{statisticsDate,jdbcType=DATE}, #{statisticsHHMM,jdbcType=VARCHAR}
      )
	</insert>
	<insert id="insertSelective" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.ForecastQuantityEntity" >
    insert into TFR.T_OPT_FORECAST_QUANTITY
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="forecastQuantityId != null" >
        FORECAST_QUANTITY_ID,
			</if>
			<if test="belongOrgCode != null" >
        BELONG_ORG_CODE,
			</if>
			<if test="region != null" >
        REGION,
			</if>
			<if test="relevantOrgCode != null" >
        RELEVANT_ORG_CODE,
			</if>
			<if test="weightTotal != null" >
        WEIGHT_TOTAL,
			</if>
			<if test="volumeTotal != null" >
        VOLUME_TOTAL,
			</if>
			<if test="waybillQtyTotal != null" >
        WAYBILL_QTY_TOTAL,
			</if>
			<if test="gpsEnabledResWeightTotal != null" >
        GPS_ENABLED_RES_WEIGHT_TOTAL,
			</if>
			<if test="gpsEnabledResVolumeTotal != null" >
        GPS_ENABLED_RES_VOLUME_TOTAL,
			</if>
			<if test="gpsEnabledResQtyTotal != null" >
        GPS_ENABLED_RES_QTY_TOTAL,
			</if>
			<if test="precisionIfsWeightTotal != null" >
        PRECISION_IFS_WEIGHT_TOTAL,
			</if>
			<if test="precisionIfsVolumeTotal != null" >
        PRECISION_IFS_VOLUME_TOTAL,
			</if>
			<if test="precisionIfsQtyTotal != null" >
        PRECISION_IFS_QTY_TOTAL,
			</if>
			<if test="expressWeightTotal != null" >
        EXPRESS_WEIGHT_TOTAL,
			</if>
			<if test="expressVolumeTotal != null" >
        EXPRESS_VOLUME_TOTAL,
			</if>
			<if test="expressQtyTotal != null" >
        EXPRESS_QTY_TOTAL,
			</if>
			<if test="inventoryWeightTotal != null" >
        INVENTORY_WEIGHT_TOTAL,
			</if>
			<if test="inventoryVolumeTotal != null" >
        INVENTORY_VOLUME_TOTAL,
			</if>
			<if test="inventoryQtyTotal != null" >
        INVENTORY_QTY_TOTAL,
			</if>
			<if test="billingWeightTotal != null" >
        BILLING_WEIGHT_TOTAL,
			</if>
			<if test="billingVolumeTotal != null" >
        BILLING_VOLUME_TOTAL,
			</if>
			<if test="billingQtyTotal != null" >
        BILLING_QTY_TOTAL,
			</if>
			<if test="intransitWeightTotal != null" >
        INTRANSIT_WEIGHT_TOTAL,
			</if>
			<if test="intransitVolumeTotal != null" >
        INTRANSIT_VOLUME_TOTAL,
			</if>
			<if test="intransitQtyTotal != null" >
        INTRANSIT_QTY_TOTAL,
			</if>
			<if test="deviationVolume != null" >
        DEVIATION_VOLUME,
			</if>
			<if test="statisticsTime != null" >
        STATISTICS_TIME,
			</if>
			<if test="type != null" >
        TYPE,
			</if>
			<if test="forecastTime != null" >
        FORECAST_TIME,
			</if>
			<if test="statisticsDate != null" >
        STATISTICS_DATE,
			</if>
			<if test="statisticsHHMM != null" >
        STATISTICS_HHMM,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="forecastQuantityId != null" >
        #{forecastQuantityId,jdbcType=VARCHAR},
			</if>
			<if test="belongOrgCode != null" >
        #{belongOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="region != null" >
        #{region,jdbcType=VARCHAR},
			</if>
			<if test="relevantOrgCode != null" >
        #{relevantOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="weightTotal != null" >
        #{weightTotal,jdbcType=DECIMAL},
			</if>
			<if test="volumeTotal != null" >
        #{volumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="waybillQtyTotal != null" >
        #{waybillQtyTotal,jdbcType=NUMERIC},
			</if>
			<if test="gpsEnabledResWeightTotal != null" >
        #{gpsEnabledResWeightTotal,jdbcType=DECIMAL},
			</if>
			<if test="gpsEnabledResVolumeTotal != null" >
        #{gpsEnabledResVolumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="gpsEnabledResQtyTotal != null" >
        #{gpsEnabledResQtyTotal,jdbcType=NUMERIC},
			</if>
			<if test="precisionIfsWeightTotal != null" >
        #{precisionIfsWeightTotal,jdbcType=DECIMAL},
			</if>
			<if test="precisionIfsVolumeTotal != null" >
        #{precisionIfsVolumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="precisionIfsQtyTotal != null" >
        #{precisionIfsQtyTotal,jdbcType=NUMERIC},
			</if>
			<if test="expressWeightTotal != null" >
        #{expressWeightTotal,jdbcType=DECIMAL},
			</if>
			<if test="expressVolumeTotal != null" >
        #{expressVolumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="expressQtyTotal != null" >
        #{expressQtyTotal,jdbcType=NUMERIC},
			</if>
			<if test="inventoryWeightTotal != null" >
        #{inventoryWeightTotal,jdbcType=DECIMAL},
			</if>
			<if test="inventoryVolumeTotal != null" >
        #{inventoryVolumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="inventoryQtyTotal != null" >
        #{inventoryQtyTotal,jdbcType=NUMERIC},
			</if>
			<if test="billingWeightTotal != null" >
        #{billingWeightTotal,jdbcType=DECIMAL},
			</if>
			<if test="billingVolumeTotal != null" >
        #{billingVolumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="billingQtyTotal != null" >
        #{billingQtyTotal,jdbcType=NUMERIC},
			</if>
			<if test="intransitWeightTotal != null" >
        #{intransitWeightTotal,jdbcType=DECIMAL},
			</if>
			<if test="intransitVolumeTotal != null" >
        #{intransitVolumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="intransitQtyTotal != null" >
        #{intransitQtyTotal,jdbcType=NUMERIC},
			</if>
			<if test="deviationVolume != null" >
        #{deviationVolume,jdbcType=DECIMAL},
			</if>
			<if test="statisticsTime != null" >
        #{statisticsTime,jdbcType=TIMESTAMP},
			</if>
			<if test="type != null" >
        #{type,jdbcType=VARCHAR},
			</if>
			<if test="type != null" >
        #{forecastTime,jdbcType=DATE},
			</if>
			<if test="type != null" >
        #{statisticsDate,jdbcType=DATE},
			</if>
			<if test="type != null" >
        #{statisticsHHMM,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.ForecastQuantityEntity" >
    update TFR.T_OPT_FORECAST_QUANTITY
		<set >
			<if test="belongOrgCode != null" >
        BELONG_ORG_CODE = #{belongOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="region != null" >
        REGION = #{region,jdbcType=VARCHAR},
			</if>
			<if test="relevantOrgCode != null" >
        RELEVANT_ORG_CODE = #{relevantOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="weightTotal != null" >
        WEIGHT_TOTAL = #{weightTotal,jdbcType=DECIMAL},
			</if>
			<if test="volumeTotal != null" >
        VOLUME_TOTAL = #{volumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="waybillQtyTotal != null" >
        WAYBILL_QTY_TOTAL = #{waybillQtyTotal,jdbcType=NUMERIC},
			</if>
			<if test="gpsEnabledResWeightTotal != null" >
        GPS_ENABLED_RES_WEIGHT_TOTAL = #{gpsEnabledResWeightTotal,jdbcType=DECIMAL},
			</if>
			<if test="gpsEnabledResVolumeTotal != null" >
        GPS_ENABLED_RES_VOLUME_TOTAL = #{gpsEnabledResVolumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="gpsEnabledResQtyTotal != null" >
        GPS_ENABLED_RES_QTY_TOTAL = #{gpsEnabledResQtyTotal,jdbcType=NUMERIC},
			</if>
			<if test="precisionIfsWeightTotal != null" >
        PRECISION_IFS_WEIGHT_TOTAL = #{precisionIfsWeightTotal,jdbcType=DECIMAL},
			</if>
			<if test="precisionIfsVolumeTotal != null" >
        PRECISION_IFS_VOLUME_TOTAL = #{precisionIfsVolumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="precisionIfsQtyTotal != null" >
        PRECISION_IFS_QTY_TOTAL = #{precisionIfsQtyTotal,jdbcType=NUMERIC},
			</if>
			<if test="expressWeightTotal != null" >
        EXPRESS_WEIGHT_TOTAL = #{expressWeightTotal,jdbcType=DECIMAL},
			</if>
			<if test="expressVolumeTotal != null" >
        EXPRESS_VOLUME_TOTAL = #{expressVolumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="expressQtyTotal != null" >
        EXPRESS_QTY_TOTAL = #{expressQtyTotal,jdbcType=NUMERIC},
			</if>
			<if test="inventoryWeightTotal != null" >
        INVENTORY_WEIGHT_TOTAL = #{inventoryWeightTotal,jdbcType=DECIMAL},
			</if>
			<if test="inventoryVolumeTotal != null" >
        INVENTORY_VOLUME_TOTAL = #{inventoryVolumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="inventoryQtyTotal != null" >
        INVENTORY_QTY_TOTAL = #{inventoryQtyTotal,jdbcType=NUMERIC},
			</if>
			<if test="billingWeightTotal != null" >
        BILLING_WEIGHT_TOTAL = #{billingWeightTotal,jdbcType=DECIMAL},
			</if>
			<if test="billingVolumeTotal != null" >
        BILLING_VOLUME_TOTAL = #{billingVolumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="billingQtyTotal != null" >
        BILLING_QTY_TOTAL = #{billingQtyTotal,jdbcType=NUMERIC},
			</if>
			<if test="intransitWeightTotal != null" >
        INTRANSIT_WEIGHT_TOTAL = #{intransitWeightTotal,jdbcType=DECIMAL},
			</if>
			<if test="intransitVolumeTotal != null" >
        INTRANSIT_VOLUME_TOTAL = #{intransitVolumeTotal,jdbcType=DECIMAL},
			</if>
			<if test="intransitQtyTotal != null" >
        INTRANSIT_QTY_TOTAL = #{intransitQtyTotal,jdbcType=NUMERIC},
			</if>
			<if test="deviationVolume != null" >
        DEVIATION_VOLUME = #{deviationVolume,jdbcType=DECIMAL},
			</if>
			<if test="statisticsTime != null" >
        STATISTICS_TIME = #{statisticsTime,jdbcType=TIMESTAMP},
			</if>
			<if test="type != null" >
        TYPE = #{type,jdbcType=VARCHAR},
			</if>
			<if test="type != null" >
        FORECAST_TIME = #{forecastTime,jdbcType=DATE},
			</if>
			<if test="type != null" >
        STATISTICS_DATE = #{statisticsDate,jdbcType=DATE},
			</if>
			<if test="type != null" >
        STATISTICS_HHMM = #{statisticsHHMM,jdbcType=VARCHAR},
			</if>
		</set>
    where FORECAST_QUANTITY_ID = #{forecastQuantityId,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.ForecastQuantityEntity" >
    update TFR.T_OPT_FORECAST_QUANTITY
    set BELONG_ORG_CODE = #{belongOrgCode,jdbcType=VARCHAR},
      REGION = #{region,jdbcType=VARCHAR},
      RELEVANT_ORG_CODE = #{relevantOrgCode,jdbcType=VARCHAR},
      WEIGHT_TOTAL = #{weightTotal,jdbcType=DECIMAL},
      VOLUME_TOTAL = #{volumeTotal,jdbcType=DECIMAL},
      WAYBILL_QTY_TOTAL = #{waybillQtyTotal,jdbcType=NUMERIC},
      GPS_ENABLED_RES_WEIGHT_TOTAL = #{gpsEnabledResWeightTotal,jdbcType=DECIMAL},
      GPS_ENABLED_RES_VOLUME_TOTAL = #{gpsEnabledResVolumeTotal,jdbcType=DECIMAL},
      GPS_ENABLED_RES_QTY_TOTAL = #{gpsEnabledResQtyTotal,jdbcType=NUMERIC},
      PRECISION_IFS_WEIGHT_TOTAL = #{precisionIfsWeightTotal,jdbcType=DECIMAL},
      PRECISION_IFS_VOLUME_TOTAL = #{precisionIfsVolumeTotal,jdbcType=DECIMAL},
      PRECISION_IFS_QTY_TOTAL = #{precisionIfsQtyTotal,jdbcType=NUMERIC},
      EXPRESS_WEIGHT_TOTAL = #{expressWeightTotal,jdbcType=DECIMAL},
      EXPRESS_VOLUME_TOTAL = #{expressVolumeTotal,jdbcType=DECIMAL},
      EXPRESS_QTY_TOTAL = #{expressQtyTotal,jdbcType=NUMERIC},
      INVENTORY_WEIGHT_TOTAL = #{inventoryWeightTotal,jdbcType=DECIMAL},
      INVENTORY_VOLUME_TOTAL = #{inventoryVolumeTotal,jdbcType=DECIMAL},
      INVENTORY_QTY_TOTAL = #{inventoryQtyTotal,jdbcType=NUMERIC},
      BILLING_WEIGHT_TOTAL = #{billingWeightTotal,jdbcType=DECIMAL},
      BILLING_VOLUME_TOTAL = #{billingVolumeTotal,jdbcType=DECIMAL},
      BILLING_QTY_TOTAL = #{billingQtyTotal,jdbcType=NUMERIC},
      INTRANSIT_WEIGHT_TOTAL = #{intransitWeightTotal,jdbcType=DECIMAL},
      INTRANSIT_VOLUME_TOTAL = #{intransitVolumeTotal,jdbcType=DECIMAL},
      INTRANSIT_QTY_TOTAL = #{intransitQtyTotal,jdbcType=NUMERIC},
      DEVIATION_VOLUME = #{deviationVolume,jdbcType=DECIMAL},
      STATISTICS_TIME = #{statisticsTime,jdbcType=TIMESTAMP},
      TYPE = #{type,jdbcType=VARCHAR},
      FORECAST_TIME = #{forecastTime,jdbcType=DATE},
      STATISTICS_DATE = #{statisticsDate,jdbcType=DATE},
      STATISTICS_HHMM = #{statisticsHHMM,jdbcType=VARCHAR}
    where FORECAST_QUANTITY_ID = #{forecastQuantityId,jdbcType=VARCHAR}
	</update>
  
	<!-- select -->
	<select id="select" resultMap="BaseResultMap" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.ForecastQuantityEntity" >
    SELECT 
		<include refid="Base_Column_List" />
    FROM TFR.T_OPT_FORECAST_QUANTITY
		<include refid="select_Where"/>
	ORDER BY STATISTICS_TIME, VOLUME_TOTAL DESC, WEIGHT_TOTAL DESC, WAYBILL_QTY_TOTAL DESC
	</select>
	
	<!-- selectByPeriod -->
	<select id="selectByPeriod" resultMap="BaseResultMap" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.ForecastQuantityEntity" >
    SELECT 
		<include refid="Base_Column_List" />
    FROM TFR.T_OPT_FORECAST_QUANTITY
		<where>
			<if test="belongOrgCode!=null and belongOrgCode!='' ">
				AND BELONG_ORG_CODE = #{belongOrgCode}
			</if>
			<if test="relevantOrgCode!=null and relevantOrgCode!='' ">
				AND RELEVANT_ORG_CODE = #{relevantOrgCode}
			</if>
			<if test="statisticsTime!=null and statisticsTime!='' ">
			<![CDATA[
				AND STATISTICS_TIME >= #{statisticsTime}
				AND STATISTICS_TIME < to_timestamp(to_char(#{statisticsTime,jdbcType=VARCHAR}+1,'yyyy-mm-dd HH24:MI:SS'),'yyyy-mm-dd HH24:MI:SS')
			]]>
			</if>
			<if test="type!=null and type!='' ">
				AND TYPE = #{type}
			</if>
			<if test="forecastTime!=null and forecastTime!='' ">
				AND FORECAST_TIME = to_timestamp(to_char(#{forecastTime,jdbcType=VARCHAR},'yyyy-mm-dd'),'yyyy-mm-dd')
			</if>
			<if test="statisticsDate!=null and statisticsDate!='' ">
				AND STATISTICS_DATE = #{statisticsDate,jdbcType=DATE}
			</if>
			<if test="statisticsHHMM!=null and statisticsHHMM!='' ">
				AND STATISTICS_HHMM = #{statisticsHHMM}
			</if>
		</where>
	ORDER BY STATISTICS_TIME
	</select>
  
	<!-- selectMaxStatisticsTime -->
	<select id="selectMaxStatisticsTime" resultType="Date" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.ForecastQuantityEntity" >
    SELECT MAX(STATISTICS_TIME) STATISTICS_TIME
	FROM TFR.T_OPT_FORECAST_QUANTITY FQ1
		<where>
			<if test="type!=null and type!='' ">
		FQ1.TYPE = #{type} 
			</if>
			<if test="belongOrgCode!=null and belongOrgCode!='' ">
		AND FQ1.BELONG_ORG_CODE = #{belongOrgCode} 
			</if>
		</where>
	</select>
  
	<!-- select forecastTime list -->
	<select id="selectTimeList" resultType="Date" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.ForecastQuantityEntity" >
    SELECT FQ1.FORECAST_TIME FORECAST_TIME
	FROM TFR.T_OPT_FORECAST_QUANTITY FQ1
	INNER JOIN (SELECT STATISTICS_DATE, STATISTICS_HHMM FROM
	(SELECT STATISTICS_DATE, STATISTICS_HHMM FROM TFR.T_OPT_FORECAST_QUANTITY
		<where>
			<if test="type!=null and type!='' ">
		TYPE = #{type} 
			</if>
			<if test="belongOrgCode!=null and belongOrgCode!='' ">
		AND BELONG_ORG_CODE = #{belongOrgCode} 
			</if>
		</where>
	ORDER BY STATISTICS_TIME DESC) WHERE ROWNUM=1) FQ2
	ON
		<if test="type!=null and type!='' ">
		FQ1.TYPE = #{type} 
		</if>
		<if test="belongOrgCode!=null and belongOrgCode!='' ">
		AND FQ1.BELONG_ORG_CODE = #{belongOrgCode} 
		</if>
	AND FQ1.STATISTICS_DATE = FQ2.STATISTICS_DATE
	AND FQ1.STATISTICS_HHMM = FQ2.STATISTICS_HHMM
	GROUP BY FQ1.FORECAST_TIME
	ORDER BY FQ1.FORECAST_TIME
	</select>
	
	<!-- queryByPage -->
	<select id="queryByPage" resultMap="BaseResultMap" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.ForecastQuantityEntity" >
    SELECT 
		<include refid="Base_Column_List" />
   	FROM TFR.T_OPT_FORECAST_QUANTITY FQ1
	INNER JOIN (SELECT STATISTICS_DATE STATISTICS_DATE_FQ2, STATISTICS_HHMM STATISTICS_HHMM_FQ2 FROM
	(SELECT STATISTICS_DATE, STATISTICS_HHMM FROM TFR.T_OPT_FORECAST_QUANTITY
		<where>
			<if test="type!=null and type!='' ">
		TYPE = #{type} 
			</if>
			<if test="belongOrgCode!=null and belongOrgCode!='' ">
		AND BELONG_ORG_CODE = #{belongOrgCode} 
			</if>
			<if test="relevantOrgCode!=null and relevantOrgCode!='' ">
	AND RELEVANT_ORG_CODE = #{relevantOrgCode}
			</if>
			<if test="forecastTime!=null and forecastTime!='' ">
	AND FORECAST_TIME = #{forecastTime,jdbcType=DATE}
			</if>
		</where>
	ORDER BY STATISTICS_TIME DESC) WHERE ROWNUM=1) FQ2 
	ON 
		<if test="type!=null and type!='' ">
		FQ1.TYPE = #{type} 
		</if>
		<if test="belongOrgCode!=null and belongOrgCode!='' ">
		AND FQ1.BELONG_ORG_CODE = #{belongOrgCode} 
		</if>
		<if test="relevantOrgCode!=null and relevantOrgCode!='' ">
		AND FQ1.RELEVANT_ORG_CODE = #{relevantOrgCode}
		</if>
		<if test="forecastTime!=null and forecastTime!='' ">
		AND FQ1.FORECAST_TIME = #{forecastTime,jdbcType=DATE}
		</if>
	AND FQ1.STATISTICS_DATE = FQ2.STATISTICS_DATE_FQ2
	AND FQ1.STATISTICS_HHMM = FQ2.STATISTICS_HHMM_FQ2
	ORDER BY FQ1.REGION
	</select>
	
	<!-- queryByRegionList -->
	<select id="queryByRegionList" resultMap="BaseResultMap" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.ForecastQuantityEntity">
	SELECT FQ1.REGION REGION, FQ1.STATISTICS_DATE STATISTICS_DATE, FQ1.STATISTICS_HHMM STATISTICS_HHMM, FQ1.BELONG_ORG_CODE BELONG_ORG_CODE, FQ1.TYPE TYPE, FQ1.FORECAST_TIME FORECAST_TIME
	FROM TFR.T_OPT_FORECAST_QUANTITY FQ1
	INNER JOIN (SELECT STATISTICS_DATE, STATISTICS_HHMM FROM
	(SELECT STATISTICS_DATE, STATISTICS_HHMM FROM TFR.T_OPT_FORECAST_QUANTITY
		<where>
			<if test="type!=null and type!='' ">
		TYPE = #{type} 
			</if>
			<if test="belongOrgCode!=null and belongOrgCode!='' ">
		AND BELONG_ORG_CODE = #{belongOrgCode} 
			</if>
			<if test="relevantOrgCode!=null and relevantOrgCode!='' ">
		AND RELEVANT_ORG_CODE = #{relevantOrgCode}
			</if>
			<if test="forecastTime!=null and forecastTime!='' ">
		AND FORECAST_TIME = #{forecastTime,jdbcType=DATE}
			</if>
		</where>
	ORDER BY STATISTICS_TIME DESC) WHERE ROWNUM=1) FQ2 
	ON 
		<if test="type!=null and type!='' ">
		FQ1.TYPE = #{type} 
		</if>
		<if test="belongOrgCode!=null and belongOrgCode!='' ">
		AND FQ1.BELONG_ORG_CODE = #{belongOrgCode} 
		</if>
		<if test="relevantOrgCode!=null and relevantOrgCode!='' ">
	AND FQ1.RELEVANT_ORG_CODE = #{relevantOrgCode}
		</if>
		<if test="forecastTime!=null and forecastTime!='' ">
	AND FQ1.FORECAST_TIME = #{forecastTime,jdbcType=DATE}
		</if>
	AND FQ1.STATISTICS_DATE = FQ2.STATISTICS_DATE
	AND FQ1.STATISTICS_HHMM = FQ2.STATISTICS_HHMM
	GROUP BY FQ1.REGION, FQ1.STATISTICS_DATE, FQ1.STATISTICS_HHMM,FQ1.BELONG_ORG_CODE, FQ1.TYPE, FQ1.FORECAST_TIME
	</select>
	
	<!-- queryByPageCount -->
	<select id="getCount" resultType="Long" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.ForecastQuantityEntity" >
    SELECT 
	COUNT(FORECAST_QUANTITY_ID)
   	FROM TFR.T_OPT_FORECAST_QUANTITY FQ1
	INNER JOIN (SELECT MAX(STATISTICS_DATE) STATISTICS_DATE, MAX(STATISTICS_HHMM) STATISTICS_HHMM FROM TFR.T_OPT_FORECAST_QUANTITY
	WHERE BELONG_ORG_CODE = #{belongOrgCode} AND TYPE = #{type} 
	AND RELEVANT_ORG_CODE = #{relevantOrgCode} AND FORECAST_TIME = #{forecastTime,jdbcType=DATE}) FQ2 
	ON FQ1.BELONG_ORG_CODE = #{belongOrgCode} 
	AND FQ1.TYPE = #{type} 
	AND FQ1.RELEVANT_ORG_CODE = #{relevantOrgCode}
	AND FQ1.FORECAST_TIME = #{forecastTime,jdbcType=DATE}
	AND FQ1.STATISTICS_DATE = FQ2.STATISTICS_DATE
	AND FQ1.STATISTICS_HHMM = FQ2.STATISTICS_HHMM
	</select>

	<sql id="select_Where">
		<where>
			<if test="forecastQuantityId!=null and forecastQuantityId!='' ">
				FORECAST_QUANTITY_ID = #{forecastQuantityId}
			</if>
			<if test="belongOrgCode!=null and belongOrgCode!='' ">
				AND BELONG_ORG_CODE = #{belongOrgCode}
			</if>
			<if test="region!=null and region!='' ">
				AND REGION = #{region}
			</if>
			<if test="relevantOrgCode!=null and relevantOrgCode!='' ">
				AND RELEVANT_ORG_CODE = #{relevantOrgCode}
			</if>
			<if test="statisticsTime!=null and statisticsTime!='' ">
				AND STATISTICS_TIME = #{statisticsTime}
			</if>
			<if test="type!=null and type!='' ">
				AND TYPE = #{type}
			</if>
			<if test="forecastTime!=null and forecastTime!='' ">
				AND FORECAST_TIME = #{forecastTime,jdbcType=DATE}
			</if>
			<if test="statisticsDate!=null and statisticsDate!='' ">
				AND STATISTICS_DATE = #{statisticsDate,jdbcType=DATE}
			</if>
			<if test="statisticsHHMM!=null and statisticsHHMM!='' ">
				AND STATISTICS_HHMM = #{statisticsHHMM}
			</if>
		</where>
	</sql>
	<!--  BUG-36705 by 134019-foss-yuyongxiang 2013年6月25日 15:30:21 修改在库逻辑 -->
	<select id="queryStockWhitInStock"  parameterType="map" resultType="String">
		SELECT distinct
			tstock.waybill_no AS waybillNo
		FROM TFR.T_OPT_STOCK tstock
		WHERE
			tstock.org_code =  #{origOrgCode}
		AND
			tstock.next_org_code =  #{objectiveOrgCode}
		<!-- 
		AND tstock.in_stock_time >= #{countStartTime}
		AND #{countEndTime} > tstock.in_stock_time
		 -->
	</select>
	<!--  BUG-36705 by 134019-foss-yuyongxiang 2013年6月25日 15:30:21 修改在库逻辑 -->
	<select id="queryStatisticalInquiriesWithWayBillNo" parameterType="map" resultType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.StatisticalInquiriesEntity">
		SELECT
			w.WAYBILL_NO 					AS wayBillNo, 
			w.PRODUCT_CODE 					AS transportModelCode,
			w.GOODS_NAME 					AS goodName,
			w.GOODS_WEIGHT_TOTAL 			AS weight,
			w.GOODS_VOLUME_TOTAL 			AS volume,
			w.GOODS_QTY_TOTAL 				AS goodQty,
			w.RECEIVE_ORG_NAME 				AS destOrgName,
			w.CUSTOMER_PICKUP_ORG_NAME 		AS arriveOrgName,
			w.BILL_TIME 					AS billingTime
		FROM pkp.t_srv_waybill w
		INNER JOIN (
			SELECT distinct
	         WAYBILL_NO
			FROM TFR.T_OPT_PATH_DETAIL 
			WHERE
			(
				<if test="transferCenter == null ">
					<foreach collection="transforCenterCodeList" item="transforCenterCodeListItem" separator="or">
						ORIG_ORG_CODE = #{transforCenterCodeListItem}
					</foreach>
				</if>
				<if test="transferCenter != null">
					<foreach collection="transforCenterCodeList" item="transforCenterCodeListItem" separator="or">
						ORIG_ORG_CODE = #{transforCenterCodeListItem}
					</foreach>
				</if>
			)
				<if test="transferCenter == null">
			AND
						OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
				</if>
				<if test="transferCenter != null">
			AND
					 ROUTE_NO = '1'
				</if>
			AND ARRIVE_OR_LEAVE = #{arriveOrLeave}
			AND BEFORE_VEHICLE_NO = 'N/A'
		) WAYBILLNO
		ON WAYBILLNO.WAYBILL_NO  = w.waybill_no
		AND w.active='Y'
		inner JOIN
			pkp.t_srv_actual_freight f
		ON 
			f.waybill_no = w.waybill_no
		AND 
			f.status = 'EFFECTIVE'	
		<where>
		(
		<foreach collection="strList" item="item" separator="or">
			w.product_code = #{item,jdbcType=VARCHAR}
		</foreach>
		)
		AND w.active='Y'
		AND (
		<foreach collection="arriveDeptList" item="arriveDeptListItem" separator="or">
			w.customer_pickup_org_code = #{arriveDeptListItem,jdbcType=VARCHAR}
		</foreach>
		)
		<if test="startTime != null and startTime != ''">
		AND w.BILL_TIME >= #{startTime}
		</if>
		<if test="endTime != null and endTime != ''">
		AND #{endTime} >=w.BILL_TIME
		</if>
		</where>  
	</select>
	<select id="queryStatisticalInquiriesWithWayBillNoCount" parameterType="map" resultType="Map">
		SELECT
			count(w.WAYBILL_NO)					AS waybillNoCount,
			sum(w.GOODS_WEIGHT_TOTAL/1000) 		AS weightSum,
			sum(w.GOODS_VOLUME_TOTAL) 			AS volumeSum
		FROM pkp.t_srv_waybill w
		INNER JOIN (  
			SELECT distinct
	         WAYBILL_NO
			FROM TFR.T_OPT_PATH_DETAIL 
			WHERE
			(
				<if test="transferCenter == null ">
					<foreach collection="transforCenterCodeList" item="transforCenterCodeListItem" separator="or">
						ORIG_ORG_CODE = #{transforCenterCodeListItem}
					</foreach>
				</if>
				<if test="transferCenter != null">
					<foreach collection="transforCenterCodeList" item="transforCenterCodeListItem" separator="or">
						ORIG_ORG_CODE = #{transforCenterCodeListItem}
					</foreach>
				</if>
			)
				<if test="transferCenter == null">
			AND
						OBJECTIVE_ORG_CODE = #{objectiveOrgCode}
				</if>
				<if test="transferCenter != null">
			AND
						ROUTE_NO = '1'
				</if>
			AND ARRIVE_OR_LEAVE = #{arriveOrLeave}
			AND BEFORE_VEHICLE_NO = 'N/A'
		) WAYBILLNO
		ON WAYBILLNO.WAYBILL_NO  = w.waybill_no
		inner JOIN
			pkp.t_srv_actual_freight f
		ON 
			f.waybill_no = w.waybill_no
		AND 
			f.status = 'EFFECTIVE'	
		<where>
		(
		<foreach collection="strList" item="item" separator="or">
							w.product_code = #{item,jdbcType=VARCHAR}
		</foreach>
		)
		AND w.active='Y'
		AND (
		<foreach collection="arriveDeptList" item="arriveDeptListItem" separator="or">
			w.customer_pickup_org_code = #{arriveDeptListItem,jdbcType=VARCHAR}
		</foreach>
		)
		<if test="startTime != null and startTime != ''">
		AND w.BILL_TIME >= #{startTime}
		</if>
		<if test="endTime != null and endTime != ''">
		AND #{endTime} >=w.BILL_TIME
		</if>
		</where>  
	</select>
	<select id="queryStatisticalInquiriesWithHandover" parameterType="map" resultType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.StatisticalInquiriesEntity">
		SELECT 
			w.WAYBILL_NO 					AS wayBillNo, 
			w.PRODUCT_CODE 					AS transportModelCode,
			w.GOODS_NAME 					AS goodName,
			hd.handover_volume 				AS volume, 
			hd.handover_weight 				AS weight,
			w.GOODS_QTY_TOTAL 				AS goodQty,
			w.RECEIVE_ORG_NAME 				AS destOrgName,
			w.CUSTOMER_PICKUP_ORG_NAME 		AS arriveOrgName,
			w.BILL_TIME 					AS billingTime
		FROM tfr.t_opt_handoverbill_detail hd
		LEFT JOIN 
			tfr.t_opt_handoverbill hb
		ON
			hd.handover_no = hb.handover_no
		LEFT JOIN
			pkp.t_srv_waybill w
		ON
			hd.waybill_no = w.waybill_no 
		AND 
			w.active = 'Y'
		inner JOIN
			pkp.t_srv_actual_freight f
		ON 
			f.waybill_no = w.waybill_no
		AND 
			f.status = 'EFFECTIVE'
		LEFT JOIN
			pkp.t_srv_product p 
		ON
			w.product_code = p.code 
		AND 
			p.active = 'Y'
		LEFT JOIN
			tfr.T_OPT_TRUCK_TASK_BILL taskBill
		ON
			taskBill.Bill_No = hb.handover_no
		LEFT JOIN
			tfr.T_OPT_TRUCK_TASK_DETAIL taskDetail
		ON
			taskDetail.Id = taskBill.Truck_Task_Detail_Id
		<where>
			hb.dest_org_code = #{origOrgCode}
			<if test="taskDetailStatus!=null and taskDetailStatus!='' ">
			AND taskDetail.Status = #{taskDetailStatus} <!-- #{taskDetailStatus} 'ONTHEWAY' -->
			</if>
			AND (
				<foreach collection="arriveDeptList" item="arriveDeptListItem" separator="or">
					w.customer_pickup_org_code = #{arriveDeptListItem,jdbcType=VARCHAR}
				</foreach>
			)
			AND hb.handoverbill_state IN 
				<foreach collection="handoverbillStateList" close=")" open="(" item="handoverbillState" separator=",">
					#{handoverbillState}
				</foreach>
			AND (
				<foreach collection="strList" item="item" separator="or">
					w.product_code = #{item,jdbcType=VARCHAR}
				</foreach>
				)
			<if test="ontheway != null">
				<if test="startTime != null and startTime != ''">
					AND taskDetail.PLAN_ARRIVE_TIME >= #{startTime}
				</if>
				<if test="endTime != null and endTime != ''">
						AND #{endTime} >= taskDetail.PLAN_ARRIVE_TIME
				</if>
			</if>
			<if test="undepart != null">
				<if test="startTime != null and startTime != ''">
					AND hb.create_time >= #{startTime}
				</if>
				<if test="endTime != null and endTime != ''">
					AND #{endTime} >= hb.create_time
				</if>
			</if>
		</where>
	</select>
	<select id="queryStatisticalInquiriesWithHandoverCount" parameterType="map" resultType="Map">
		SELECT 
			count(w.WAYBILL_NO)					AS waybillNoCount,
			sum(hd.handover_weight/1000) 		AS weightSum,
			sum(hd.handover_volume) 			AS volumeSum
		FROM tfr.t_opt_handoverbill_detail hd
		LEFT JOIN 
			tfr.t_opt_handoverbill hb
		ON
			hd.handover_no = hb.handover_no
		LEFT JOIN
			pkp.t_srv_waybill w
		ON
			hd.waybill_no = w.waybill_no 
		AND 
			w.active = 'Y'
        inner JOIN
			pkp.t_srv_actual_freight f
		ON 
			f.waybill_no = w.waybill_no
		AND 
			f.status = 'EFFECTIVE'
		LEFT JOIN
			pkp.t_srv_product p 
		ON
			w.product_code = p.code 
		AND 
			p.active = 'Y'
		LEFT JOIN
			tfr.T_OPT_TRUCK_TASK_BILL taskBill
		ON
			taskBill.Bill_No = hb.handover_no
		LEFT JOIN
			tfr.T_OPT_TRUCK_TASK_DETAIL taskDetail
		ON
			taskDetail.Id = taskBill.Truck_Task_Detail_Id
		<where>
			hb.dest_org_code = #{origOrgCode}
			<if test="taskDetailStatus!=null and taskDetailStatus!='' ">
			AND taskDetail.Status = #{taskDetailStatus} <!-- #{taskDetailStatus} 'ONTHEWAY' -->
			</if>
			AND (
				<foreach collection="arriveDeptList" item="arriveDeptListItem" separator="or">
					w.customer_pickup_org_code = #{arriveDeptListItem}
				</foreach>
			)
			AND hb.handoverbill_state IN 
				<foreach collection="handoverbillStateList" close=")" open="(" item="handoverbillState" separator=",">
					#{handoverbillState}
				</foreach>
			AND (
				<foreach collection="strList" item="item" separator="or">
					w.product_code = #{item,jdbcType=VARCHAR}
				</foreach>
				)
			<if test="ontheway != null">
				<if test="startTime != null and startTime != ''">
					AND taskDetail.PLAN_ARRIVE_TIME >= #{startTime}
				</if>
				<if test="endTime != null and endTime != ''">
						AND #{endTime} >= taskDetail.PLAN_ARRIVE_TIME
				</if>
			</if>
			<if test="undepart != null">
				<if test="startTime != null and startTime != ''">
					AND hb.create_time >= #{startTime}
				</if>
				<if test="endTime != null and endTime != ''">
					AND #{endTime} >= hb.create_time
				</if>
			</if>
		</where>
	</select>
	<select id="queryStatisticalInquiriesWithInLibrary" parameterType="map" resultType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.StatisticalInquiriesEntity">
		select 
			max(ws.waybill_no) AS waybillNo,
			max(w.PRODUCT_CODE) AS transportModelCode,
			max(w.GOODS_NAME) AS goodName,
			max(w.GOODS_QTY_TOTAL) AS goodQty,
			max(w.RECEIVE_ORG_NAME) AS destOrgName,
			max(w.CUSTOMER_PICKUP_ORG_NAME) AS arriveOrgName,
			max(w.BILL_TIME) AS billingTime,
			max(round(ws.stock_goods_qty * w.goods_weight_total /
							 w.goods_qty_total,
							 2)) AS weight,
			max(round(ws.stock_goods_qty * w.goods_volume_total /
							 w.goods_qty_total,
							 2)) AS volume,
			min(ttd.actual_arrive_time)AS arriveTime
		from   (select 
					ws.waybill_no,
					 sum(ws.stock_goods_qty) stock_goods_qty,
					 max(ws.next_org_code) next_org_code,
					 max(ws.org_code) org_code
				from   tfr.t_opt_waybill_stock ws
				where  ws.org_code = #{origOrgCode}
				AND (
					<foreach collection="arriveDeptList" item="arriveDeptListItem" separator="or">
						ws.next_org_code = #{arriveDeptListItem,jdbcType=VARCHAR}
					</foreach>
				)
				<if test="startTime != null and startTime != ''">
					AND ws.last_in_stock_time >= #{startTime}
				</if>
				<if test="endTime != null and endTime != ''">
					AND #{endTime} >= ws.last_in_stock_time
				</if>
				group  by ws.waybill_no) ws
		left   join pkp.t_srv_waybill w
		on     ws.waybill_no = w.waybill_no
		and w.active = 'Y'
        inner JOIN
			pkp.t_srv_actual_freight f
		ON 
			f.waybill_no = w.waybill_no
		AND 
			f.status = 'EFFECTIVE'
		left   join tfr.t_opt_handoverbill_detail hd
		on     ws.waybill_no = hd.waybill_no
		left   join tfr.t_Opt_Handoverbill H
		ON     hd.handover_no = h.handover_no
					 and h.dest_org_code = #{origOrgCode}
		left   join tfr.t_opt_truck_task_bill ttb
		on     h.handover_no = ttb.bill_no
		left   join tfr.t_opt_truck_task_detail ttd
		on     ttb.truck_task_detail_id = ttd.id
		<![CDATA[
		AND ttd.status <> 'CANCLED'
		]]>
		where 
			ws.org_code = #{origOrgCode}
		AND (
			<foreach collection="arriveDeptList" item="arriveDeptListItem" separator="or">
				ws.next_org_code = #{arriveDeptListItem,jdbcType=VARCHAR}
			</foreach>
				)
		and (
			<foreach collection="strList" item="item" separator="or">
				w.product_code = #{item,jdbcType=VARCHAR}
			</foreach>
		)
		group  by ws.waybill_no
	</select>
	<select id="queryStatisticalInquiriesWithInLibraryCount" parameterType="map" resultType="Map">
		select 
			count(max(ws.waybill_no))					AS waybillNoCount,
			sum(max(round(ws.stock_goods_qty * w.goods_weight_total /
							 w.goods_qty_total,
							 2))/1000) AS weightSum,
			sum(max(round(ws.stock_goods_qty * w.goods_volume_total /
							 w.goods_qty_total,
							 2))) AS volumeSum
		from   (select 
					ws.waybill_no,
					 sum(ws.stock_goods_qty) stock_goods_qty,
					 max(ws.next_org_code) next_org_code,
					 max(ws.org_code) org_code
				from   tfr.t_opt_waybill_stock ws
				where  ws.org_code = #{origOrgCode}
				AND (
					<foreach collection="arriveDeptList" item="arriveDeptListItem" separator="or">
						ws.next_org_code = #{arriveDeptListItem,jdbcType=VARCHAR}
					</foreach>
				)
				<if test="startTime != null and startTime != ''">
					AND ws.last_in_stock_time >= #{startTime}
				</if>
				<if test="endTime != null and endTime != ''">
					AND #{endTime} >= ws.last_in_stock_time
				</if>
				group  by ws.waybill_no) ws
		left   join pkp.t_srv_waybill w
		on     ws.waybill_no = w.waybill_no
		and w.active = 'Y'
        inner JOIN
			pkp.t_srv_actual_freight f
		ON 
			f.waybill_no = w.waybill_no
		AND 
			f.status = 'EFFECTIVE'
		left   join tfr.t_opt_handoverbill_detail hd
		on     ws.waybill_no = hd.waybill_no
		left   join tfr.t_Opt_Handoverbill H
		ON     hd.handover_no = h.handover_no
					 and h.dest_org_code = #{origOrgCode}
		left   join tfr.t_opt_truck_task_bill ttb
		on     h.handover_no = ttb.bill_no
		left   join tfr.t_opt_truck_task_detail ttd
		on     ttb.truck_task_detail_id = ttd.id
		<![CDATA[
		AND ttd.status <> 'CANCLED'
		]]>
		where 
			ws.org_code = #{origOrgCode}
		AND (
			<foreach collection="arriveDeptList" item="arriveDeptListItem" separator="or">
				ws.next_org_code = #{arriveDeptListItem,jdbcType=VARCHAR}
			</foreach>
		)
		and (
		<foreach collection="strList" item="item" separator="or">
			w.product_code = #{item,jdbcType=VARCHAR}
		</foreach>
		)
		group  by ws.waybill_no
	</select>
	
	<select id="queryStatisticalInquiriesWithUnloadingNotReach" parameterType="map" resultType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.StatisticalInquiriesEntity">
			SELECT 
				 w.WAYBILL_NO               AS wayBillNo,
				 w.PRODUCT_CODE             AS transportModelCode,
				 w.GOODS_NAME               AS goodName,
				 hd.handover_weight         AS weight,
				 hd.handover_volume         AS volume,
				 d.actual_arrive_time       AS arriveTime,
				 hd.handover_goods_qty      AS goodQty,
				 w.RECEIVE_ORG_NAME         AS destOrgName,
				 w.CUSTOMER_PICKUP_ORG_NAME AS arriveOrgName,
				 w.BILL_TIME                AS billingTime
			FROM   tfr.t_opt_handoverbill_detail hd
			LEFT   JOIN tfr.t_opt_handoverbill h
			ON     h.handover_no = hd.handover_no
			       AND h.dest_org_code = #{origOrgCode}
			left   join pkp.t_srv_waybill w
			ON     w.waybill_no = hd.waybill_no
				   AND w.active='Y'
            inner JOIN
				pkp.t_srv_actual_freight f
			ON 
				f.waybill_no = w.waybill_no
			AND 
				f.status = 'EFFECTIVE'
			LEFT   JOIN tfr.t_opt_truck_task_bill b
			ON     b.bill_no = hd.handover_no
			LEFT   JOIN tfr.t_opt_truck_task_detail d
			ON     d.id = b.truck_task_detail_id
					<![CDATA[
				   AND d.status <> 'CANCLED'
					]]>
		  <where>
			 h.handoverbill_state IN 
				<foreach collection="handoverbillStateList" close=")" open="(" item="handoverbillState" separator=",">
					#{handoverbillState}
				</foreach>
		     AND (
				<foreach collection="strList" item="item" separator="or">
					w.product_code = #{item,jdbcType=VARCHAR}
				</foreach>
			)
			AND (
				<foreach collection="arriveDeptList" item="arriveDeptListItem" separator="or">
					w.CUSTOMER_PICKUP_ORG_CODE = #{arriveDeptListItem,jdbcType=VARCHAR}
				</foreach>
			)
			AND h.be_car_load='N'
			<if test="startTime != null and startTime != ''">
				AND d.actual_arrive_time >= #{startTime}
			</if>
			<if test="endTime != null and endTime != ''">
				AND #{endTime} >= d.actual_arrive_time	
			</if>
		 </where>
	</select>
	<select id="queryStatisticalInquiriesWithUnloadingNotReachCount" parameterType="map" resultType="Map">
		SELECT
			count(w.WAYBILL_NO)					AS waybillNoCount,
			sum(hd.handover_weight/1000)        AS weightSum,
			sum(hd.handover_volume)         	AS volumeSum
		FROM   tfr.t_opt_handoverbill_detail hd
			LEFT   JOIN tfr.t_opt_handoverbill h
			ON     h.handover_no = hd.handover_no
			       AND h.dest_org_code = #{origOrgCode}
			left   join pkp.t_srv_waybill w
			ON     w.waybill_no = hd.waybill_no
				   AND w.active='Y'
        inner JOIN
				pkp.t_srv_actual_freight f
			ON 
				f.waybill_no = w.waybill_no
			AND 
				f.status = 'EFFECTIVE'
			LEFT   JOIN tfr.t_opt_truck_task_bill b
			ON     b.bill_no = hd.handover_no
			LEFT   JOIN tfr.t_opt_truck_task_detail d
			ON     d.id = b.truck_task_detail_id
					<![CDATA[
				   AND d.status <> 'CANCLED'
					]]>
		  <where>
			 h.handoverbill_state IN 
				<foreach collection="handoverbillStateList" close=")" open="(" item="handoverbillState" separator=",">
					#{handoverbillState}
				</foreach>
		     AND (
				<foreach collection="strList" item="item" separator="or">
					w.product_code = #{item,jdbcType=VARCHAR}
				</foreach>
			)
			AND (
				<foreach collection="arriveDeptList" item="arriveDeptListItem" separator="or">
					w.CUSTOMER_PICKUP_ORG_CODE = #{arriveDeptListItem,jdbcType=VARCHAR}
				</foreach>
			)
			AND h.be_car_load='N'
			<if test="startTime != null and startTime != ''">
				AND d.actual_arrive_time >= #{startTime}
			</if>
			<if test="endTime != null and endTime != ''">
				AND #{endTime} >= d.actual_arrive_time	
			</if>
		 </where>
	</select>
</mapper>