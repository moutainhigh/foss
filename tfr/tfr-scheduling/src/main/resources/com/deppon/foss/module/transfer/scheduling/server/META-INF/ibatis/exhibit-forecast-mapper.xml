<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="foss.scheduling.ExhibitForecast" >
	
	
	<resultMap id="ExhibitForecastResultMap" type="com.deppon.foss.module.transfer.scheduling.api.shared.domain.ExhibitForecastEntity">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="STATUS" property="status" jdbcType="VARCHAR" />
		<result column="STOCK_GOODS_QTY" property="stockGoodsQty" jdbcType="DECIMAL" />
		<result column="GOODS_QTY_TOTAL" property="goodsQtyTotal" jdbcType="DECIMAL" />
		<result column="BILL_TIME" property="billTime" jdbcType="TIMESTAMP" />
		<result column="IN_STOCK_TIME" property="inStockTime" jdbcType="TIMESTAMP" />
		<result column="PLAN_ARRIVE_TIME" property="planArriveTime" jdbcType="TIMESTAMP" />
		<result column="PRODUCT_CODE" property="productCode" jdbcType="VARCHAR" />
		<result column="PRODUCT_NAME" property="productName" jdbcType="VARCHAR" />
		<result column="RECEIVE_METHOD" property="receiveMethod" jdbcType="VARCHAR" />
		<result column="WEIGHT" property="weight" jdbcType="DECIMAL" />
		<result column="VOLUME" property="volume" jdbcType="DECIMAL" />
		<result column="GOODS_NAME" property="goodsName" jdbcType="VARCHAR" />
		<result column="REACH_ORG_CODE" property="reachOrgCode" jdbcType="VARCHAR" />
		<result column="REACH_ORG_NAME" property="reachOrgName" jdbcType="VARCHAR" />
		<result column="PACKING" property="packing" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="GOODSNOS" property="goodsNos" jdbcType="VARCHAR" />	
		<result column="active" property="active" jdbcType="VARCHAR" />	
		<result column="transfer_center_code" property="transferCenterCode" jdbcType="VARCHAR" />	
	</resultMap>
	
	<resultMap id="ExhibitForecastForWorldResultMap" type="com.deppon.foss.module.transfer.scheduling.api.shared.dto.ExhibitForecastForWorldDto">
		<result column="transferCenterCode" property="transferCenterCode" jdbcType="VARCHAR" />
		<result column="transferCenterName" property="transferCenterName" jdbcType="VARCHAR" />
		<result column="totalWaybillQty" property="totalWaybillQty" jdbcType="INTEGER" />
		<result column="totalWeight" property="totalWeight" jdbcType="DECIMAL" />
		<result column="totalVolume" property="totalVolume" jdbcType="DECIMAL" />
		<result column="noBillWeight" property="noBillWeight" jdbcType="DECIMAL" />
		<result column="noBillVolume" property="noBillVolume" jdbcType="DECIMAL" />
		<result column="noBillWaybillQty" property="noBillWaybillQty" jdbcType="INTEGER" />
		<result column="stockWeight" property="stockWeight" jdbcType="DECIMAL" />
		<result column="stockVolume" property="stockVolume" jdbcType="DECIMAL" />
		<result column="stockWaybillQty" property="stockWaybillQty" jdbcType="INTEGER" />
		<result column="runningWeight" property="runningWeight" jdbcType="DECIMAL" />
		<result column="runningVolume" property="runningVolume" jdbcType="DECIMAL" />
		<result column="runningWaybillQty" property="runningWaybillQty" jdbcType="INTEGER" />
		<result column="stockRatio" property="stockRatio" jdbcType="DOUBLE" />
	</resultMap>
	
	
	<resultMap id="WaybillListMap"
		type="com.deppon.foss.module.transfer.scheduling.api.shared.dto.ExhibitWaybillDto">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="PRODUCT_ID" property="productId" jdbcType="VARCHAR" />
		<result column="PRODUCT_CODE" property="productCode" jdbcType="VARCHAR" />
		<result column="PRODUCT_NAME" property="productName" jdbcType="VARCHAR" />
		<result column="RECEIVE_METHOD" property="receiveMethod"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_PICKUP_ORG_CODE" property="customerPickupOrgCode"
			jdbcType="VARCHAR" />
		<result column="GOODS_NAME" property="goodsName" jdbcType="VARCHAR" />
		<result column="GOODS_QTY_TOTAL" property="goodsQtyTotal"
			jdbcType="DECIMAL" />
		<result column="GOODS_WEIGHT_TOTAL" property="goodsWeightTotal"
			jdbcType="DECIMAL" />
		<result column="GOODS_VOLUME_TOTAL" property="goodsVolumeTotal"
			jdbcType="DECIMAL" />
		<result column="GOODS_TYPE_CODE" property="goodsTypeCode"
			jdbcType="VARCHAR" />
		<result column="PRECIOUS_GOODS" property="preciousGoods"
			jdbcType="CHAR" />
		<result column="SPECIAL_SHAPED_GOODS" property="specialShapedGoods"
			jdbcType="CHAR" />
		<result column="GOODS_PACKAGE" property="goodsPackage"
			jdbcType="VARCHAR" />
		<result column="ARRIVE_TYPE" property="arriveType" jdbcType="VARCHAR" />
		<result column="ACTIVE" property="active" jdbcType="CHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="BILL_TIME" property="billTime" jdbcType="TIMESTAMP" />
		<result column="IS_WHOLE_VEHICLE" property="isWholeVehicle"
			jdbcType="CHAR" />
		<result column="TRANSPORT_TYPE" property="transportType"
			jdbcType="VARCHAR" />
		<result column="PENDING_TYPE" property="pendingType" jdbcType="VARCHAR" />
		<result column="CUSTOMER_PICKUP_ORG_NAME" property="customerPickupOrgName" jdbcType="VARCHAR" />
		<result column="IS_EXPRESS" property="isExpress" jdbcType="CHAR" />
	</resultMap>
	
	<sql id="waybill_list">
		w.id as ID, 
		w.WAYBILL_NO as WAYBILL_NO, 
		w.PRODUCT_ID as PRODUCT_ID,
		w.PRODUCT_CODE as PRODUCT_CODE, 
		p.NAME as PRODUCT_NAME,
		w.RECEIVE_METHOD as RECEIVE_METHOD,
		w.CUSTOMER_PICKUP_ORG_CODE as CUSTOMER_PICKUP_ORG_CODE, 
		w.GOODS_NAME as GOODS_NAME,
		w.GOODS_QTY_TOTAL as GOODS_QTY_TOTAL,
		w.GOODS_WEIGHT_TOTAL as GOODS_WEIGHT_TOTAL,
		w.GOODS_VOLUME_TOTAL as GOODS_VOLUME_TOTAL, 
		w.GOODS_TYPE_CODE as GOODS_TYPE_CODE, 
		w.PRECIOUS_GOODS as PRECIOUS_GOODS,
		w.SPECIAL_SHAPED_GOODS as SPECIAL_SHAPED_GOODS, 
		w.GOODS_PACKAGE as GOODS_PACKAGE,
		w.ARRIVE_TYPE as ARRIVE_TYPE,
		w.ACTIVE as ACTIVE, 
		w.CREATE_TIME as CREATE_TIME, 
		w.BILL_TIME as BILL_TIME,
		w.IS_WHOLE_VEHICLE as IS_WHOLE_VEHICLE,
		w.TRANSPORT_TYPE as TRANSPORT_TYPE,
		w.PENDING_TYPE as PENDING_TYPE,
		w.CUSTOMER_PICKUP_ORG_NAME as CUSTOMER_PICKUP_ORG_NAME,
		w.IS_EXPRESS as IS_EXPRESS
	</sql>
	
	<!-- 查询以scheduledFireTime开始之前day天的提货网点是驻地营业部未全部签收的展会货运单 -->
	<select id="queryExhibitWaybillOfNotSignAndStation" parameterType="HashMap" resultMap="WaybillListMap">
		select 
		<include refid="waybill_list" />
		from pkp.t_srv_waybill w
		inner join pkp.t_srv_actual_freight f 
			on f.waybill_no = w.waybill_no 
			and f.status <![CDATA[<>]]> 'OBSOLETE' 
			and f.is_exhibit_cargo = 'Y' 
			and w.active = 'Y'
		inner join bse.t_bas_sales_department sd
			 on sd.code = w.customer_pickup_org_code 
			 and sd.active = 'Y' 
			 and sd.station = 'Y'
		left join (
			     select ws.*,rank() over(partition by ws.waybill_no order by ws.sign_time desc) rn 
			     from pkp.t_srv_waybill_sign_result ws
			      WHERE WS.ACTIVE = 'Y' AND ws.sign_time>SYSDATE-30 
			) ww on ww.rn=1 
			and ww.waybill_no = w.waybill_no
		left join pkp.t_srv_product p on p.code = w.product_code and p.active ='Y' and p.levels = 3
		where (ww.sign_status <![CDATA[<>]]> 'SIGN_STATUS_ALL' or ww.sign_status is null)
			and w.bill_time > #{scheduledFireTime,jdbcType=TIMESTAMP} - #{day,jdbcType=INTEGER} 
			and w.bill_time <![CDATA[<]]> #{scheduledFireTime,jdbcType=TIMESTAMP}
			and w.product_code != 'WVH'<!-- 去除整车，整车没有走货路径，也不经过外场 -->
	</select>
	
	<!-- 保存展会货信息 -->
	<insert id="saveExhibitForecastEntity" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.ExhibitForecastEntity">
		insert into tfr.t_opt_forecast_exhibit(
			ID,
		WAYBILL_NO,
		STATUS,
		STOCK_GOODS_QTY,
		GOODS_QTY_TOTAL,
		BILL_TIME,
		IN_STOCK_TIME,
		PLAN_ARRIVE_TIME,
		PRODUCT_CODE,
		PRODUCT_NAME,
		RECEIVE_METHOD,
		WEIGHT,
		VOLUME,
		GOODS_NAME,
		REACH_ORG_CODE,
		REACH_ORG_NAME,
		PACKING,
		CREATE_TIME,
		GOODSNOS,
		active,
		transfer_center_code
		)
		values(
			#{id,jdbcType=VARCHAR},
		#{waybillNo,jdbcType=VARCHAR},
		#{status,jdbcType=VARCHAR},
		#{stockGoodsQty,jdbcType=DECIMAL},
		#{goodsQtyTotal,jdbcType=DECIMAL},
		#{billTime,jdbcType=TIMESTAMP},
		#{inStockTime,jdbcType=TIMESTAMP},
		#{planArriveTime,jdbcType=TIMESTAMP},
		#{productCode,jdbcType=VARCHAR},
		#{productName,jdbcType=VARCHAR},
		#{receiveMethod,jdbcType=VARCHAR},
		#{weight,jdbcType=DECIMAL},
		#{volume,jdbcType=DECIMAL},
		#{goodsName,jdbcType=VARCHAR},
		#{reachOrgCode,jdbcType=VARCHAR},
		#{reachOrgName,jdbcType=VARCHAR},
		#{packing,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{goodsNos,jdbcType=VARCHAR},
		#{active,jdbcType=VARCHAR},
		#{transferCenterCode,jdbcType=VARCHAR}
		)
	</insert>
	
	<!-- 根据运单查询有效的展会货条数 -->
	<select id="queryOldExhibitCargoByWaybillNo" parameterType="HashMap" resultType="Integer">
		select count(0) from tfr.t_opt_forecast_exhibit fe where fe.waybill_no = #{waybillNo,jdbcType=VARCHAR} and fe.active =  #{active,jdbcType=VARCHAR}
	</select>
	
	<!-- 根据运单号设置统计信息为无效 -->
	<update id="cancleOldExhibitCargoByWaybillNo" parameterType="HashMap">
		update tfr.t_opt_forecast_exhibit
		 set active = 'N'
		 where waybill_no = #{waybillNo,jdbcType=VARCHAR} and active =  #{active,jdbcType=VARCHAR}
	</update>
	<!-- 查询展会货列表 -->
	<select id="queryForecastExhibitList" parameterType="HashMap" resultMap="ExhibitForecastResultMap">
		select *
			from tfr.t_opt_forecast_exhibit fe
		    <where>
		 		   fe.create_time > sysdate - 30
		            <if test="status!=null">
		            	and fe.status = #{status,jdbcType=VARCHAR}
		            </if>
		            <if test="org!=null">
		            	and fe.transfer_center_code = #{org,jdbcType=VARCHAR}
		            </if>
		            <if test="active!=null">
		            	and fe.active = #{active,jdbcType=VARCHAR}
		            </if>
		    </where>
	</select>
	<!-- 展会货总条数 -->
	<select id="queryForecastExhibitListCount" parameterType="HashMap" resultType="Long">
		select count(*)
			from tfr.t_opt_forecast_exhibit fe
			  <where>
	 		   fe.create_time > sysdate - 30
	            <if test="status!=null">
	            	and fe.status = #{status,jdbcType=VARCHAR}
	            </if>
	            <if test="org!=null">
	            	and fe.transfer_center_code = #{org,jdbcType=VARCHAR}
	            </if>
	            <if test="active!=null">
	            	and fe.active = #{active,jdbcType=VARCHAR}
	            </if>
	    </where>
	</select>
	
	<!-- 查询该外场的货区 -->
	<select id="queryGoodsAreaByOrgCode" parameterType="HashMap" resultMap="foss.bse.bse-baseinfo.goodsArea.goodsAreaResultMap">
		select 
			<include refid="foss.bse.bse-baseinfo.goodsArea.columns"/>
			from BSE.T_BAS_goods_area
			where org_code = #{orgCode,jdbcType=VARCHAR}
				and goods_area_type = #{goodsAreaType,jdbcType=VARCHAR}
				and active = #{active,jdbcType=VARCHAR}
	</select>
	
	
	<select id="queryForecastExhibitForWorldList" parameterType="HashMap" resultMap="ExhibitForecastForWorldResultMap">
		<!-- NOTRANSFERBILLING 开单未交接   INLIBRARY 在库    INTRANSIT  在途-->
			select 
			   transferCenterCode,
			   o.name as transferCenterName,
			   sum(noBillWaybillQty)+sum(stockWaybillQty)+sum(runningWaybillQty) as totalWaybillQty,
			   sum(noBillWeight)+sum(stockWeight)+sum(runningWeight) as totalWeight,
			   sum(noBillVolume)+sum(stockVolume)+sum(runningVolume) as totalVolume,
			   sum(noBillWeight) as noBillWeight,
			   sum(noBillVolume) as noBillVolume,
			   sum(noBillWaybillQty) as noBillWaybillQty,
			   sum(stockWeight) as stockWeight,
			   sum(stockVolume) as stockVolume,
			   sum(stockWaybillQty) as stockWaybillQty,
			   sum(runningWeight) as runningWeight,
			   sum(runningVolume) as runningVolume,
			   sum(runningWaybillQty) as runningWaybillQty
			   
			 from 
			(
				select 
				   sum(f1.weight) as noBillWeight,
				   sum(f1.volume) as noBillVolume,
				   count(distinct f1.waybill_no) as noBillWaybillQty,
				   0 as stockWeight,
				   0 as stockVolume,
				   0 as stockWaybillQty,
				   0 as runningWeight,
				   0 as runningVolume,
				   0 as runningWaybillQty,
				   f1.transfer_center_code transferCenterCode
				 from tfr.t_opt_forecast_exhibit f1 
				<where>
					f1.active = 'Y' 
					<if test="transferCenterCode!=null and transferCenterCode!=''">
						and f1.transfer_center_code = #{transferCenterCode,jdbcType=VARCHAR}
					</if>
					and f1.status = 'NOTRANSFERBILLING'
					and f1.create_time > sysdate - 30
				</where> 
				group by f1.transfer_center_code
				
				union all
				
				select 
				     0 as noBillWeight,
				     0 as noBillVolume,
				     0 as noBillWaybillQty,
				     sum(f1.weight) as stockWeight,
				     sum(f1.volume) as stockVolume,
				     count(distinct f1.waybill_no) as stockWaybillQty,
				     0 as runningWeight,
				     0 as runningVolume,
				     0 as runningWaybillQty,
				     f1.transfer_center_code transferCenterCode
				 from tfr.t_opt_forecast_exhibit f1 
				<where>
					f1.active = 'Y' 
					<if test="transferCenterCode!=null and transferCenterCode!=''">
						and f1.transfer_center_code = #{transferCenterCode,jdbcType=VARCHAR}
					</if>
					and f1.status = 'INLIBRARY'
					and f1.create_time > sysdate - 30
				</where> 
				group by f1.transfer_center_code
				
				union all
				
				select 
				     0 as noBillWeight,
				     0 as noBillVolume,
				     0 as noBillWaybillQty,
				     0 as stockWeight,
				     0 as stockVolume,
				     0 as stockWaybillQty,
				     sum(f1.weight) as runningWeight,
				     sum(f1.volume) as runningVolume,
				     count(distinct f1.waybill_no) as runningWaybillQty,
				     f1.transfer_center_code as transferCenterCode
				from tfr.t_opt_forecast_exhibit f1 
				<where>
					f1.active = 'Y' 
					<if test="transferCenterCode!=null and transferCenterCode!=''">
						and f1.transfer_center_code = #{transferCenterCode,jdbcType=VARCHAR}
					</if>
					and f1.status = 'INTRANSIT'
					and f1.create_time > sysdate - 30
				</where> 
				group by f1.transfer_center_code
			) s
			left join bse.t_bas_org o on s.transferCenterCode = o.code and o.active = 'Y'
			group by s.transferCenterCode,o.name
	</select>
	
	<!-- 查询展会货中已经签收的、已派送的、提货网点更改成非驻地部门的记录 -->
	<select id="querySignedAndActiveExhibit" resultType="String">
	<!-- 签收状态 -->
		select distinct fe.waybill_no waybill_no from tfr.t_opt_forecast_exhibit fe
			inner join pkp.t_srv_waybill_sign_result ws 
				on fe.waybill_no = ws.waybill_no and ws.active = 'Y' and ws.sign_status = 'SIGN_STATUS_ALL'
			where fe.active = 'Y'
			
		union all
		
		<!-- 派送状态 -->
		SELECT DISTINCT S.WAYBILL_NO WAYBILL_NO
		      FROM TFR.T_OPT_FORECAST_EXHIBIT FE
		      JOIN PKP.T_SRV_DELIVERBILL_DETAIL S
		        ON S.WAYBILL_NO = FE.WAYBILL_NO
		       AND FE.ACTIVE = 'Y'
		      JOIN PKP.T_SRV_ARRIVESHEET SD
		        ON SD.ARRIVESHEET_NO = S.ARRIVESHEET_NO
		     WHERE SD.STATUS = 'DELIVER'
		       AND SD.ACTIVE = 'Y'
		       AND SD.DESTROYED = 'N'
		
		union all
		 
		<!-- 发更改，提货网点改成非驻地部门的情况 -->
		select distinct fe.waybill_no waybill_no  
			from tfr.t_opt_forecast_exhibit fe
			join pkp.t_srv_waybill w on fe.waybill_no = w.waybill_no and w.active = 'Y' and fe.active = 'Y'
			join bse.t_bas_sales_department sd on sd.code = w.customer_pickup_org_code and sd.active = 'Y'
	 	<![CDATA[	
			where sd.station <> 'Y'
		]]>
		 
		union all
		 
		<!-- 发更改，将展会货改成了非展会货 -->
		select distinct fe.waybill_no waybill_no 
			from tfr.t_opt_forecast_exhibit fe
			join pkp.t_srv_waybill w on fe.waybill_no = w.waybill_no and w.active = 'Y' and fe.active = 'Y'
			<![CDATA[	join pkp.t_srv_actual_freight f on f.waybill_no = w.waybill_no and f.status <> 'OBSOLETE' 	]]>
			where f.is_exhibit_cargo = 'N'
		 
	</select>
	
	
	
</mapper>