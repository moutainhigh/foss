<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="Foss.scheduling.truckScheduling" >
	<!--排班表结果集-->
	<resultMap id="TruckSchedulingResultMap" type="com.deppon.foss.module.transfer.scheduling.api.shared.domain.TruckSchedulingEntity" >
		<result column="ID" property="id" jdbcType="VARCHAR" />
		<result column="SCHEDULING_DATE" property="schedulingDate" jdbcType="TIMESTAMP" />
		<result column="DRIVER_CODE" property="driverCode" jdbcType="VARCHAR" />
		<result column="PLAN_TYPE" property="planType" jdbcType="VARCHAR" />
		<result column="DRIVER_ORG_CODE" property="driverOrgCode" jdbcType="VARCHAR" />
		<result column="DRIVER_PHONE" property="driverPhone" jdbcType="VARCHAR" />
		<result column="SCHEDULING_STATUS" property="schedulingStatus" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="CREATE_USER_CODE" property="createUserCode" jdbcType="VARCHAR" />
		<result column="CREATE_USER_NAME" property="createUserName" jdbcType="VARCHAR" />
		<result column="CREATE_ORG_CODE" property="createOrgCode" jdbcType="VARCHAR" />
		<result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="UPDATE_USER_CODE" property="updateUserCode" jdbcType="VARCHAR" />
		<result column="UPDATE_USER_NAME" property="updateUserName" jdbcType="VARCHAR" />
		<result column="UPDATE_ORG_CODE" property="updateOrgCode" jdbcType="VARCHAR" />
		<result column="DATE_NUM" property="dateNum" jdbcType="DECIMAL" />
		<result column="YEAR_MONTH" property="yearMonth" jdbcType="VARCHAR" />
		<result column="SCHEDULING_TYPE" property="schedulingType" jdbcType="VARCHAR" />
	</resultMap>
	
	<!--排班表统计查询-->
	<resultMap id="TruckSchedulingTotalResultMap" type="com.deppon.foss.module.transfer.scheduling.api.shared.dto.TruckScheduleGridDto" >
		<result column="ID" property="id" jdbcType="VARCHAR" />
		<result column="DRIVER_CODE" property="driverCode" jdbcType="VARCHAR" />
		<result column="DRIVER_NAME" property="driverName" jdbcType="VARCHAR" />
		<result column="DRIVER_PHONE" property="driverPhone" jdbcType="VARCHAR" />
		<result column="YEAR_MONTH" property="yearMonth" jdbcType="VARCHAR" />
		<result column="SCHEDULING_TYPE" property="schedulingType" jdbcType="VARCHAR" />
		<result column="DRIVER_ORG_CODE" property="driverOrgCode" jdbcType="VARCHAR" />
		<result column="DATE1" property="date1" jdbcType="VARCHAR" />
		<result column="DATE2" property="date2" jdbcType="VARCHAR" />
		<result column="DATE3" property="date3" jdbcType="VARCHAR" />
		<result column="DATE4" property="date4" jdbcType="VARCHAR" />
		<result column="DATE5" property="date5" jdbcType="VARCHAR" />
		<result column="DATE6" property="date6" jdbcType="VARCHAR" />
		<result column="DATE7" property="date7" jdbcType="VARCHAR" />
		<result column="DATE8" property="date8" jdbcType="VARCHAR" />
		<result column="DATE9" property="date9" jdbcType="VARCHAR" />
		<result column="DATE10" property="date10" jdbcType="VARCHAR" />
		<result column="DATE11" property="date11" jdbcType="VARCHAR" />
		<result column="DATE12" property="date12" jdbcType="VARCHAR" />
		<result column="DATE13" property="date13" jdbcType="VARCHAR" />
		<result column="DATE14" property="date14" jdbcType="VARCHAR" />
		<result column="DATE15" property="date15" jdbcType="VARCHAR" />
		<result column="DATE16" property="date16" jdbcType="VARCHAR" />
		<result column="DATE17" property="date17" jdbcType="VARCHAR" />
		<result column="DATE18" property="date18" jdbcType="VARCHAR" />
		<result column="DATE19" property="date19" jdbcType="VARCHAR" />
		<result column="DATE20" property="date20" jdbcType="VARCHAR" />
		<result column="DATE21" property="date21" jdbcType="VARCHAR" />
		<result column="DATE22" property="date22" jdbcType="VARCHAR" />
		<result column="DATE23" property="date23" jdbcType="VARCHAR" />
		<result column="DATE24" property="date24" jdbcType="VARCHAR" />
		<result column="DATE25" property="date25" jdbcType="VARCHAR" />
		<result column="DATE26" property="date26" jdbcType="VARCHAR" />
		<result column="DATE27" property="date27" jdbcType="VARCHAR" />
		<result column="DATE28" property="date28" jdbcType="VARCHAR" />
		<result column="DATE29" property="date29" jdbcType="VARCHAR" />
		<result column="DATE30" property="date30" jdbcType="VARCHAR" />
		<result column="DATE31" property="date31" jdbcType="VARCHAR" />
		<result column="WORK_TOTAL" property="workTotal" jdbcType="DECIMAL" />				
	</resultMap>
	
	<!--排班查询，插入公用字段-->
	<sql id="Truck_Scheduling_Column_List" >
	    ID, SCHEDULING_DATE, DRIVER_CODE, PLAN_TYPE, DRIVER_ORG_CODE, DRIVER_PHONE, SCHEDULING_STATUS, 
	    CREATE_TIME, CREATE_USER_CODE, CREATE_USER_NAME, CREATE_ORG_CODE, UPDATE_TIME, UPDATE_USER_CODE, 
	    UPDATE_USER_NAME, UPDATE_ORG_CODE,DATE_NUM,YEAR_MONTH,SCHEDULING_TYPE,SCHEDULING_DEPART_CODE
	</sql>
	
	<!--WHERE条件SQL-->
	<sql id="Truck_Scheduling_Where_Clause" >
	    <where >
	    	<if test="id!=null and id!=''">
	    		ID=#{id}   		
	    	</if>      	
	    	<if test="schedulingType!=null and schedulingType!=''">
	    		and SCHEDULING_TYPE = #{schedulingType,jdbcType=VARCHAR}
	    	</if>      	
	    	<if test="yearMonth!=null and yearMonth!=''">
	    		and YEAR_MONTH = #{yearMonth,jdbcType=VARCHAR}
	    	</if>      	
	    	<if test="planType!=null and planType!=''">
	    		and PLAN_TYPE = #{planType,jdbcType=VARCHAR}
	    	</if>      	
	    </where>
  </sql>
	
	<!--插入排班记录-->
	<insert id="insertTruckScheduling" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.TruckSchedulingEntity" >    
	    insert into TFR.T_OPT_TRUCK_SCHEDULING (
	    <include refid="Truck_Scheduling_Column_List" />
	    )
	    values (#{id,jdbcType=VARCHAR}, #{schedulingDate,jdbcType=TIMESTAMP}, #{driverCode,jdbcType=VARCHAR}, 
	      #{planType,jdbcType=VARCHAR}, #{driverOrgCode,jdbcType=VARCHAR}, #{driverPhone,jdbcType=VARCHAR}, 
	      #{schedulingStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUserCode,jdbcType=VARCHAR}, 
	      #{createUserName,jdbcType=VARCHAR}, #{createOrgCode,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
	      #{updateUserCode,jdbcType=VARCHAR}, #{updateUserName,jdbcType=VARCHAR}, #{updateOrgCode,jdbcType=VARCHAR},
	       #{dateNum,jdbcType=DECIMAL},#{yearMonth,jdbcType=VARCHAR},#{schedulingType,jdbcType=VARCHAR},#{schedulingDepartCode,jdbcType=VARCHAR}
	      )
	</insert>
	
	
	<!--批量插入计划-->
	<insert id="batchInsertTruckScheduling" parameterType="java.util.List" >    
		BEGIN 
		<foreach  collection="list" item="item"  separator=";">
		    insert into TFR.T_OPT_TRUCK_SCHEDULING (
		    <include refid="Truck_Scheduling_Column_List" />
		    )
		    values (#{item.id,jdbcType=VARCHAR}, #{item.schedulingDate,jdbcType=TIMESTAMP}, #{item.driverCode,jdbcType=VARCHAR}, 
		      #{item.planType,jdbcType=VARCHAR}, #{item.driverOrgCode,jdbcType=VARCHAR}, #{item.driverPhone,jdbcType=VARCHAR}, 
		      #{item.schedulingStatus,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.createUserCode,jdbcType=VARCHAR}, 
		      #{item.createUserName,jdbcType=VARCHAR}, #{item.createOrgCode,jdbcType=VARCHAR}, #{item.updateTime,jdbcType=TIMESTAMP}, 
		      #{item.updateUserCode,jdbcType=VARCHAR}, #{item.updateUserName,jdbcType=VARCHAR}, #{item.updateOrgCode,jdbcType=VARCHAR},
		       #{item.dateNum,jdbcType=DECIMAL},#{item.yearMonth,jdbcType=VARCHAR},#{item.schedulingType,jdbcType=VARCHAR},
		       #{item.schedulingDepartCode,jdbcType=VARCHAR}
		      )
	    </foreach>
		;END;
	</insert>
	
	<!--批量插入计划之单条插入-->
	<insert id="batchInsertTruckSchedulingForOne" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.TruckSchedulingEntity" >
		    insert into TFR.T_OPT_TRUCK_SCHEDULING (
		    <include refid="Truck_Scheduling_Column_List" />
		    )
		    values (#{id,jdbcType=VARCHAR}, #{schedulingDate,jdbcType=TIMESTAMP}, #{driverCode,jdbcType=VARCHAR}, 
		      #{planType,jdbcType=VARCHAR}, #{driverOrgCode,jdbcType=VARCHAR}, #{driverPhone,jdbcType=VARCHAR}, 
		      #{schedulingStatus,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createUserCode,jdbcType=VARCHAR}, 
		      #{createUserName,jdbcType=VARCHAR}, #{createOrgCode,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
		      #{updateUserCode,jdbcType=VARCHAR}, #{updateUserName,jdbcType=VARCHAR}, #{updateOrgCode,jdbcType=VARCHAR},
		       #{dateNum,jdbcType=DECIMAL},#{yearMonth,jdbcType=VARCHAR},#{schedulingType,jdbcType=VARCHAR},
		       #{schedulingDepartCode,jdbcType=VARCHAR}
		      )
	   
	</insert>
	
	<!--批量更新计划-->
	 <update id="batchUpdateTruckScheduling" parameterType="java.util.List">
	    BEGIN 
			<foreach  collection="list" item="item"  separator=";">
			     update TFR.T_OPT_TRUCK_SCHEDULING SCHEDULING
			    set 
			      SCHEDULING.PLAN_TYPE = #{item.planType,jdbcType=VARCHAR},
			      SCHEDULING.DRIVER_PHONE = #{item.driverPhone,jdbcType=VARCHAR},
			      SCHEDULING.UPDATE_TIME=#{item.updateTime,jdbcType=TIMESTAMP}, 
			      SCHEDULING.UPDATE_USER_CODE=#{item.updateUserCode,jdbcType=VARCHAR},
			      SCHEDULING.UPDATE_USER_NAME= #{item.updateUserName,jdbcType=VARCHAR},
			      SCHEDULING.UPDATE_ORG_CODE= #{item.updateOrgCode,jdbcType=VARCHAR}
			       where exists (
						       	select TMP.id
						              from (select t2.scheduling_date,
						                           t2.DRIVER_ORG_CODE,
						                           t2.DRIVER_CODE,
						                           t2.SCHEDULING_STATUS,
						                           t2.SCHEDULING_TYPE,
						                           t2.ID,
						                           TO_CHAR(SCHEDULING_DATE, 'YYYY-MM-DD') YMD
						                      from tfr.t_opt_truck_scheduling t2
						                     where SCHEDULING_DEPART_CODE = #{item.schedulingDepartCode,jdbcType=VARCHAR}
										       and DRIVER_CODE = #{item.driverCode,jdbcType=VARCHAR}
										       and SCHEDULING_STATUS = #{item.schedulingStatus,jdbcType=VARCHAR}
										       and SCHEDULING_TYPE = #{item.schedulingType,jdbcType=VARCHAR}
						                    ) TMP
						                     where TMP.YMD = #{item.ymd,jdbcType=VARCHAR}
			               					and SCHEDULING.ID = TMP.ID
			       )
		    </foreach>
			;END;
  	</update>
  	
	<!--批量更新计划之单条更新-->
	 <update id="batchUpdateTruckSchedulingForOne" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.dto.TruckSchedulingDto">
	  
			     update TFR.T_OPT_TRUCK_SCHEDULING SCHEDULING
			    set 
			      SCHEDULING.PLAN_TYPE = #{planType,jdbcType=VARCHAR},
			      SCHEDULING.DRIVER_PHONE = #{driverPhone,jdbcType=VARCHAR},
			      SCHEDULING.UPDATE_TIME=#{updateTime,jdbcType=TIMESTAMP}, 
			      SCHEDULING.UPDATE_USER_CODE=#{updateUserCode,jdbcType=VARCHAR},
			      SCHEDULING.UPDATE_USER_NAME= #{updateUserName,jdbcType=VARCHAR},
			      SCHEDULING.UPDATE_ORG_CODE= #{updateOrgCode,jdbcType=VARCHAR}
			       where exists (
						       	select TMP.id
						              from (select t2.scheduling_date,
						                           t2.DRIVER_ORG_CODE,
						                           t2.DRIVER_CODE,
						                           t2.SCHEDULING_STATUS,
						                           t2.SCHEDULING_TYPE,
						                           t2.ID,
						                           TO_CHAR(SCHEDULING_DATE, 'YYYY-MM-DD') YMD
						                      from tfr.t_opt_truck_scheduling t2
						                     where SCHEDULING_DEPART_CODE = #{schedulingDepartCode,jdbcType=VARCHAR}
										       and DRIVER_CODE = #{driverCode,jdbcType=VARCHAR}
										       and SCHEDULING_STATUS = #{schedulingStatus,jdbcType=VARCHAR}
										       and SCHEDULING_TYPE = #{schedulingType,jdbcType=VARCHAR}
						                    ) TMP
						                     where TMP.YMD = #{ymd,jdbcType=VARCHAR}
			               					and SCHEDULING.ID = TMP.ID
			       )
		  
  	</update>
  	
	
  	
  	
	<!--通过ID更新计划工作类别-->
	 <update id="updateTruckScheduling" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.TruckSchedulingEntity">
	    update TFR.T_OPT_TRUCK_SCHEDULING 
		    set 
		      PLAN_TYPE = #{planType,jdbcType=VARCHAR},
		      UPDATE_TIME=#{updateTime,jdbcType=TIMESTAMP}, 
		      UPDATE_USER_CODE=#{updateUserCode,jdbcType=VARCHAR},
		      UPDATE_USER_NAME= #{updateUserName,jdbcType=VARCHAR},
		      UPDATE_ORG_CODE= #{updateOrgCode,jdbcType=VARCHAR}
		      where ID = #{id,jdbcType=VARCHAR}
  	</update>	
	
	<!--查询排班表(单表查询)-->
	<select id="queryTruckScheduling" resultMap="TruckSchedulingResultMap" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.TruckSchedulingEntity" >
	    select
	    <include refid="Truck_Scheduling_Column_List" />
	    from TFR.T_OPT_TRUCK_SCHEDULING   
	      <include refid="Truck_Scheduling_Where_Clause" />
  	</select>
  	
  	
	<!--查询排班(具体到唯一一条记录)-->
	<select id="queryTruckSchedulingByParams" resultMap="TruckSchedulingResultMap" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.dto.SimpleTruckScheduleDto" >
			    select		    
			    ID, SCHEDULING_DATE, DRIVER_CODE, PLAN_TYPE, DRIVER_ORG_CODE, DRIVER_PHONE, SCHEDULING_STATUS, 
			    CREATE_TIME, CREATE_USER_CODE, CREATE_USER_NAME, CREATE_ORG_CODE, UPDATE_TIME, UPDATE_USER_CODE, 
			    UPDATE_USER_NAME, UPDATE_ORG_CODE,DATE_NUM,YEAR_MONTH,SCHEDULING_TYPE,
			    TO_CHAR(SCHEDULING.SCHEDULING_DATE, 'YYYY-MM-DD') ymd
			    from TFR.T_OPT_TRUCK_SCHEDULING   SCHEDULING 
			    <where>	    		    	
			    	<if test="driverCode !=null and driverCode !=''">
			    		and SCHEDULING.DRIVER_CODE = #{driverCode,jdbcType=VARCHAR}
			    	</if>	    	
			    	<if test="schedulingDepartCode !=null and schedulingDepartCode !=''">
			    		and SCHEDULING.SCHEDULING_DEPART_CODE = #{schedulingDepartCode,jdbcType=VARCHAR}
			    	</if>	    		 
			    	<if test="schedulingtype !=null and schedulingtype !=''">
			    		and SCHEDULING.SCHEDULING_TYPE = #{schedulingtype,jdbcType=VARCHAR}
			    	</if> 	    		
			    	<if test="schedulingStatus !=null and schedulingStatus !=''">
			    		and SCHEDULING.SCHEDULING_STATUS = #{schedulingStatus,jdbcType=VARCHAR}
			    	</if>	   
			    	<if test="scheduleId !=null and scheduleId !=''">
			    		and SCHEDULING.ID = #{scheduleId,jdbcType=VARCHAR}
			    	</if>
			    	<if test="ymd!=null and ymd!=''"> 
				   		<![CDATA[ and SCHEDULING.SCHEDULING_DATE >=to_date(#{ymd,jdbcType=VARCHAR},'yyyy-mm-dd')]]>  
				   		<![CDATA[ and SCHEDULING.SCHEDULING_DATE <to_date(#{ymd,jdbcType=VARCHAR},'yyyy-mm-dd')+1]]>  
				   </if>    
			   </where>   			    
  	</select>
  	
  	<!--排班任务统计查询-->
	<select id="queryTruckSchedulingList" resultMap="TruckSchedulingTotalResultMap" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.dto.TruckSchedulingDto" >
	    select temp.DRIVER_CODE,
		       temp.DRIVER_PHONE,
		       temp.DRIVER_NAME,
		       temp.YEAR_MONTH,
		       temp.SCHEDULING_TYPE,
		       temp.DRIVER_ORG_CODE,
		       temp.DATE1,
		       temp.DATE2,
		       temp.DATE3,
		       temp.DATE4,
		       temp.DATE5,
		       temp.DATE6,
		       temp.DATE7,
		       temp.DATE8,
		       temp.DATE9,
		       temp.DATE10,
		       temp.DATE11,
		       temp.DATE12,
		       temp.DATE13,
		       temp.DATE14,
		       temp.DATE15,
		       temp.DATE16,
		       temp.DATE17,
		       temp.DATE18,
		       temp.DATE19,
		       temp.DATE20,
		       temp.DATE21,
		       temp.DATE22,
		       temp.DATE23,
		       temp.DATE24,
		       temp.DATE25,
		       temp.DATE26,
		       temp.DATE27,
		       temp.DATE28,
		       temp.DATE29,
		       temp.DATE30,
		       temp.DATE31,
		       temp.WORK_TOTAL
       from (select DETAIL.DRIVER_CODE,
		       DETAIL.DRIVER_PHONE,
		       DETAIL.DRIVER_NAME,
		       DETAIL.YEAR_MONTH,
		       DETAIL.SCHEDULING_TYPE,
		       DETAIL.DRIVER_ORG_CODE,
		       DETAIL.DATE1,
		       DETAIL.DATE2,
		       DETAIL.DATE3,
		       DETAIL.DATE4,
		       DETAIL.DATE5,
		       DETAIL.DATE6,
		       DETAIL.DATE7,
		       DETAIL.DATE8,
		       DETAIL.DATE9,
		       DETAIL.DATE10,
		       DETAIL.DATE11,
		       DETAIL.DATE12,
		       DETAIL.DATE13,
		       DETAIL.DATE14,
		       DETAIL.DATE15,
		       DETAIL.DATE16,
		       DETAIL.DATE17,
		       DETAIL.DATE18,
		       DETAIL.DATE19,
		       DETAIL.DATE20,
		       DETAIL.DATE21,
		       DETAIL.DATE22,
		       DETAIL.DATE23,
		       DETAIL.DATE24,
		       DETAIL.DATE25,
		       DETAIL.DATE26,
		       DETAIL.DATE27,
		       DETAIL.DATE28,
		       DETAIL.DATE29,
		       DETAIL.DATE30,
		       DETAIL.DATE31,
		       nvl(TOTALWORK.WORK_TOTAL,0) WORK_TOTAL
		  from (select MAX(T.DRIVER_CODE) DRIVER_CODE,
					   MAX(T.DRIVER_PHONE) DRIVER_PHONE,
					   MAX(DRIVER.EMP_NAME) DRIVER_NAME,
		               MAX(T.YEAR_MONTH) YEAR_MONTH,
		               MAX(T.SCHEDULING_TYPE) SCHEDULING_TYPE,
		               MAX(T.DRIVER_ORG_CODE) DRIVER_ORG_CODE,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '01',
		                          T.PLAN_TYPE)) DATE1,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '02',
		                          T.PLAN_TYPE)) DATE2,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '03',
		                          T.PLAN_TYPE)) DATE3,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '04',
		                          T.PLAN_TYPE)) DATE4,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '05',
		                          T.PLAN_TYPE)) DATE5,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '06',
		                          T.PLAN_TYPE)) DATE6,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '07',
		                          T.PLAN_TYPE)) DATE7,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '08',
		                          T.PLAN_TYPE)) DATE8,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '09',
		                          T.PLAN_TYPE)) DATE9,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '10',
		                          T.PLAN_TYPE)) DATE10,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '11',
		                          T.PLAN_TYPE)) DATE11,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '12',
		                          T.PLAN_TYPE)) DATE12,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '13',
		                          T.PLAN_TYPE)) DATE13,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '14',
		                          T.PLAN_TYPE)) DATE14,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '15',
		                          T.PLAN_TYPE)) DATE15,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '16',
		                          T.PLAN_TYPE)) DATE16,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '17',
		                          T.PLAN_TYPE)) DATE17,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '18',
		                          T.PLAN_TYPE)) DATE18,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '19',
		                          T.PLAN_TYPE)) DATE19,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '20',
		                          T.PLAN_TYPE)) DATE20,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '21',
		                          T.PLAN_TYPE)) DATE21,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '22',
		                          T.PLAN_TYPE)) DATE22,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '23',
		                          T.PLAN_TYPE)) DATE23,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '24',
		                          T.PLAN_TYPE)) DATE24,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '25',
		                          T.PLAN_TYPE)) DATE25,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '26',
		                          T.PLAN_TYPE)) DATE26,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '27',
		                          T.PLAN_TYPE)) DATE27,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '28',
		                          T.PLAN_TYPE)) DATE28,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '29',
		                          T.PLAN_TYPE)) DATE29,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '30',
		                          T.PLAN_TYPE)) DATE30,
		               MAX(DECODE(SUBSTR(TO_CHAR(T.SCHEDULING_DATE, 'YYYY-MM-DD'), 9),
		                          '31',
		                          T.PLAN_TYPE)) DATE31
		          from tfr.T_OPT_TRUCK_SCHEDULING T
		           right join BSE.T_BAS_OWNDRIVER DRIVER on DRIVER.EMP_CODE=T.DRIVER_CODE AND DRIVER.active=#{schedulingStatus}
		          where T.YEAR_MONTH = #{yearMonth,jdbcType=VARCHAR}
		         		and T.scheduling_type = #{schedulingType,jdbcType=VARCHAR}
		         		and T.SCHEDULING_DEPART_CODE= #{schedulingDepartCode,jdbcType=VARCHAR}
		         group by T.DRIVER_CODE,
		                  T.YEAR_MONTH,
		                  T.SCHEDULING_TYPE,
		                  T.scheduling_type
		        ) DETAIL
		 left join (select T2.DRIVER_CODE,
		               T2.YEAR_MONTH,
		               count(T2.DRIVER_CODE) WORK_TOTAL
		          from tfr.T_OPT_TRUCK_SCHEDULING T2
		          where T2.YEAR_MONTH = #{yearMonth,jdbcType=VARCHAR}
		          	and T2.SCHEDULING_DEPART_CODE= #{schedulingDepartCode,jdbcType=VARCHAR}
		          	<if test="list != null">		          	
						<foreach  collection="list" item="item"  separator="or" open="and (" close=")">
							T2.PLAN_TYPE = #{item,jdbcType=VARCHAR}
						</foreach>	
					</if>	          	
		          	and T2.SCHEDULING_TYPE = #{schedulingType,jdbcType=VARCHAR}
		         group by T2.DRIVER_CODE,
		                  T2.YEAR_MONTH,
		                  T2.SCHEDULING_TYPE
		         ) TOTALWORK
		
		    on DETAIL.driver_code = TOTALWORK.DRIVER_CODE
		   and DETAIL.year_month = TOTALWORK.YEAR_MONTH
		   ) temp
 			order by DRIVER_CODE asc
  	</select> 	
  	
  		<!--排班任务统计查询总数-->
	<select id="queryTruckSchedulingListTotal" resultType="Long" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.dto.TruckSchedulingDto" >
	    select  count(max(T.DRIVER_CODE))
	          from tfr.T_OPT_TRUCK_SCHEDULING T
	          where T.YEAR_MONTH = #{yearMonth,jdbcType=VARCHAR}
	         		and T.scheduling_type = #{schedulingType,jdbcType=VARCHAR}
	         		and T.SCHEDULING_DEPART_CODE= #{schedulingDepartCode,jdbcType=VARCHAR}
	         		 group by T.DRIVER_CODE	         		
  	</select> 	
  	
  	<!--查询是否 这些司机编码都存在(导入验证),如果有不存在的，则返回不存在的司机代码-->
	<select id="queryNotExistDriverCodes" resultMap="TruckSchedulingResultMap" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.dto.ScheduleDriverDto" >
	    <![CDATA[ 
		    select 
			T.DRIVER_CODE from 
			(
			select DBMS_LOB.substr(
			       regexp_substr(#{driverCodes}, '[^,]+',1,SEQNO.n)
			) as DRIVER_CODE 
			from dual D,
			(select rownum n from DUAL connect by rownum < #{driverCodeCnt}) SEQNO
			) T 
			
		]]>  
		<where>
			not exists 
			(
				select T2.EMP_CODE from BSE.T_BAS_OWNDRIVER T2 where T2.EMP_CODE=T.DRIVER_CODE
				<if test="driverOrgCode!=null and driverOrgCode!=''">
					and T2.ORG_ID=#{driverOrgCode}
				</if>
			)
		</where>		
  	</select>
  	
  	<!-- 查询已经初始化计划列表 -->
  <select id="queryHasInitedList" resultType="Long" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.TruckSchedulingEntity" >
	 select  
	  		count(SCHEDULING.ID) cnt
	  	 from TFR.T_OPT_TRUCK_SCHEDULING   SCHEDULING 
	  	 where  SCHEDULING.DRIVER_CODE = #{driverCode,jdbcType=VARCHAR}   		
	   		and SCHEDULING.SCHEDULING_DEPART_CODE = #{schedulingDepartCode,jdbcType=VARCHAR}
	   		and SCHEDULING.SCHEDULING_TYPE = #{schedulingType,jdbcType=VARCHAR}
	   		and SCHEDULING.SCHEDULING_STATUS = #{schedulingStatus,jdbcType=VARCHAR}
	   		and SCHEDULING.year_month = #{yearMonth,jdbcType=VARCHAR}	    		 
  </select>
  	
    <!--根据计划IDs查询对应的计划列表-->
  <select id="queryTruckScheduleByTaskIds" resultMap="TruckSchedulingResultMap" parameterType="com.deppon.foss.module.transfer.scheduling.api.shared.domain.TruckSchedulingEntity" >
  	select   
      <include refid="Truck_Scheduling_Column_List" />
    from	TFR.T_OPT_TRUCK_SCHEDULING t1
    where exists (select 1
    from TFR.T_OPT_TRUCK_SCHEDULING_TASK   t2
     where t2.t_opt_truck_scheduling_id=t1.id
     and t2.id in 
        <foreach  collection="list" item="item"  separator="," open=" (" close=")">
		   #{item,jdbcType=VARCHAR}
	    </foreach>
    )
    	
  </select>	
</mapper>