<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="foss.load.outsidevehiclecharge" >

  <resultMap id="AdjustOutVehicleFeeResultMap" type="com.deppon.foss.module.transfer.load.api.shared.domain.AdjustOutVehicleFeeEntity" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="VEHICLEASSEMBLE_NO" property="vehicleassembleNo" jdbcType="VARCHAR" />
    <result column="VEHICLE_NO" property="vehicleNo" jdbcType="VARCHAR" />
    <result column="DRIVER_CODE" property="driverCode" jdbcType="VARCHAR" />
    <result column="DRIVER_NAME" property="driverName" jdbcType="VARCHAR" />
    <result column="HANDOVER_TIME" property="handoverTime" jdbcType="TIMESTAMP" />
    <result column="ORIG_ORG_CODE" property="origOrgCode" jdbcType="VARCHAR" />
    <result column="ORIG_ORG_NAME" property="origOrgName" jdbcType="VARCHAR" />
    <result column="DEST_ORG_CODE" property="destOrgCode" jdbcType="VARCHAR" />
    <result column="DEST_ORG_NAME" property="destOrgName" jdbcType="VARCHAR" />
    <result column="FEE_TOTAL" property="feeTotal" jdbcType="DECIMAL" />
    <result column="PREPAID_FEE_TOTAL" property="prepaidFeeTotal" jdbcType="DECIMAL" />
    <result column="ARRIVE_FEE_TOTAL" property="arriveFeeTotal" jdbcType="DECIMAL" />
    <result column="AWARD_TYPE" property="awardType" jdbcType="VARCHAR" />
    <result column="ADJUST_FEE" property="adjustFee" jdbcType="DECIMAL" />
    <result column="INIT_AMT" property="initAmt" jdbcType="DECIMAL" />
    <result column="ADJUST_REASON" property="adjustReason" jdbcType="VARCHAR" />
    <result column="OTHER_REASON" property="otherReason" jdbcType="VARCHAR" />
    <result column="AUDITOR_CODE" property="auditorCode" jdbcType="VARCHAR" />
    <result column="AUDITOR_NAME" property="auditorName" jdbcType="VARCHAR" />
    <result column="AUDIT_STATE" property="auditState" jdbcType="VARCHAR" />
    <result column="AUDIT_OPINION" property="auditOpinion" jdbcType="VARCHAR" />
    <result column="TIMELINESS_CLAUSE" property="timelinessClause" jdbcType="CHAR" />
    <result column="TIMELINESS_DURATION" property="timelinessDuration" jdbcType="DECIMAL" />
    <result column="CAUSE" property="cause" jdbcType="VARCHAR" />
    <result column="ASSEMBLE_TYPE" property="assembleType" jdbcType="VARCHAR" />
    <result column="DRIVER_MOBILE_PHONE" property="driverMobilePhone" jdbcType="DECIMAL" />   
  </resultMap>
  
  <resultMap id="vehicleassemblebillResultMap" type="com.deppon.foss.module.transfer.load.api.shared.dto.AdjustOutVehicleFeeDto" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="VEHICLEASSEMBLE_NO" property="vehicleassembleNo" jdbcType="VARCHAR" />
    <result column="VEHICLE_NO" property="vehicleNo" jdbcType="VARCHAR" />
    <result column="DRIVER_CODE" property="driverCode" jdbcType="VARCHAR" />
    <result column="DRIVER_NAME" property="driverName" jdbcType="VARCHAR" />
    <result column="HANDOVER_TIME" property="handoverTime" jdbcType="TIMESTAMP" />
    <result column="ORIG_ORG_CODE" property="origOrgCode" jdbcType="VARCHAR" />
    <result column="ORIG_ORG_NAME" property="origOrgName" jdbcType="VARCHAR" />
    <result column="DEST_ORG_CODE" property="destOrgCode" jdbcType="VARCHAR" />
    <result column="DEST_ORG_NAME" property="destOrgName" jdbcType="VARCHAR" />
    <result column="FEE_TOTAL" property="feeTotal" jdbcType="DECIMAL" />
    <result column="PREPAID_FEE_TOTAL" property="prepaidFeeTotal" jdbcType="DECIMAL" />
    <result column="ARRIVE_FEE_TOTAL" property="arriveFeeTotal" jdbcType="DECIMAL" />
    <result column="AWARD_TYPE" property="awardType" jdbcType="VARCHAR" />
    <result column="ADJUST_FEE" property="adjustFee" jdbcType="DECIMAL" />
    <result column="ADJUST_REASON" property="adjustReason" jdbcType="VARCHAR" />
    <result column="OTHER_REASON" property="otherReason" jdbcType="VARCHAR" />
    <result column="AUDITOR_CODE" property="auditorCode" jdbcType="VARCHAR" />
    <result column="AUDITOR_NAME" property="auditorName" jdbcType="VARCHAR" />
    <result column="AUDIT_STATE" property="auditState" jdbcType="VARCHAR" />
    <result column="AUDIT_OPINION" property="auditOpinion" jdbcType="VARCHAR" />
    <result column="LOAD_FEE_TOTAL" property="loadFeeTotal" jdbcType="DECIMAL" />
    <result column="DRIVER_MOBILE_PHONE" property="driverMobilePhone" jdbcType="DECIMAL" />     
    <result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
    <result column="GOODS_TYPE" property="goodsType" jdbcType="VARCHAR" />
    <result column="ASSEMBLE_TYPE" property="assembleType" jdbcType="VARCHAR" />
    <result column="VEHICLE_OWNERSHIP" property="vehicleOwnerShip" jdbcType="VARCHAR" />
    <result column="PAYMENT_TYPE" property="paymentType" jdbcType="VARCHAR" />
    <result column="BE_RETURN_RECEIPT" property="beReturnReceipt" jdbcType="VARCHAR" />
    <result column="LEAVE_TIME" property="leaveTime" jdbcType="VARCHAR" />    
	<result column="CURRENCY_CODE" property="currencyCode" jdbcType="VARCHAR" />	
	<result column="BE_MIDWAYLOAD" property="beMidwayload" jdbcType="VARCHAR" />    
	<result column="BEFINALLYARRIVE" property="befinallyarrive" jdbcType="VARCHAR" />	
	<result column="BE_TIMELINESS" property="beTimeLiness" jdbcType="CHAR" />	
	<result column="RUN_HOURS" property="runHours" jdbcType="VARCHAR" />
	<result column="TIMELINESS_CLAUSE" property="timelinessClause" jdbcType="CHAR" />
    <result column="TIMELINESS_DURATION" property="timelinessDuration" jdbcType="DECIMAL" />
	<result column="CAUSE" property="cause" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap type="com.deppon.foss.module.transfer.load.api.shared.vo.OutVehicleAssembleBillAndFeeVo" id="outVehicleAssembleBillAndFeeVoMap">
  		 <id column="VEHICLE_NO" property="vehicleNo" jdbcType="VARCHAR" />
  		 <id column="VEHICLEASSEMBLE_NO" property="vehicleAssembleNo" jdbcType="VARCHAR" />
  		 <id column="DRIVER_CODE" property="driverCode" jdbcType="VARCHAR" />
  		 <id column="DRIVER_NAME" property="driverName" jdbcType="VARCHAR" />
  		 <id column="ORIG_ORG_CODE" property="origOrgCode" jdbcType="VARCHAR" />
  		 <id column="ORIG_ORG_NAME" property="origOrgName" jdbcType="VARCHAR" />
  		 <id column="DEST_ORG_CODE" property="destOrgCode" jdbcType="VARCHAR" />
  		 <id column="DEST_ORG_NAME" property="destOrgName" jdbcType="VARCHAR" />
  		 <id column="FEE_TOTAL" property="feeTotal" jdbcType="DECIMAL" />
  		 <id column="PREPAID_FEE_TOTAL" property="prepaidFeeTotal" jdbcType="DECIMAL" />
  		 <id column="ARRIVE_FEE_TOTAL" property="arriveFeeTotal" jdbcType="DECIMAL" />
  		 <id column="ADJUST_FEE" property="adjustFee" jdbcType="DECIMAL" />
  		 <id column="AWARD_TYPE" property="awardType" jdbcType="VARCHAR" />
  		 <id column="BE_MIDWAYLOAD" property="beMidwayLoad" jdbcType="VARCHAR" />
  		 <id column="PAYMENT_TYPE" property="paymentType" jdbcType="VARCHAR" />
  		 <id column="IS_MONTH_PAY" property="isMonthPay" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap type="com.deppon.foss.module.transfer.load.api.shared.dto.TruckTaskBillInfoDto" id="truckTaskBillInfoMap">
  		 <id column="truck_task_id" property="truckTaskId" />
  		 <id column="actual_Depart_Time" property="actualDepartTime" />
  		 <id column="actual_Arrive_Time" property="actualArriveTime" />
  		 <id column="bill_No" property="billNo" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 任务车辆明细 -->
	<resultMap id="truckTaskDetailResultMap"
		type="com.deppon.foss.module.transfer.load.api.shared.domain.TruckTaskDetailEntity">
		<id column="ID" property="id" />
		<result column="VEHICLE_NO" property="vehicleNo" />
		<result column="TRUCK_TASK_ID" property="parentId" />
		<result column="line_name" property="lineName" />
		<result column="line_VIRTUAL_CODE" property="lineVirtualCode" />
		<result column="BUSINESS_TYPE" property="businessType" />
		<result column="ORIG_ORG_CODE" property="origOrgCode" />
		<result column="ORIG_ORG_NAME" property="origOrgName" />
		<result column="DEST_ORG_CODE" property="destOrgCode" />
		<result column="DEST_ORG_NAME" property="destOrgName" />
		<result column="CREATE_TIME" property="createTime" />
		<result column="TRUCK_DEPART_ID" property="truckDepartId" />
		<result column="TRUCK_ARRIVE_ID" property="truckArriveId" />
		<result column="PLAN_ARRIVE_TIME" property="planArriveTime" />
		<result column="ACTUAL_DEPART_TIME" property="actualDepartTime" />
		<result column="ACTUAL_ARRIVE_TIME" property="actualArriveTime" />
	</resultMap>
  <!-- 外请车费用调整 修改日志 -->
    <resultMap id="QueryOutsideVehicleUpdateLogsResultMap" type="com.deppon.foss.module.transfer.load.api.shared.domain.AdjustOutVehicleFeeLogEntity" >
	    <id column="ID" property="id" jdbcType="VARCHAR" />
	    <result column="ADJUST_OUTVEHICLE_FEE_ID" property="adjustOutVehicleFeeId" jdbcType="VARCHAR" />
	    <result column="MODIFY_CONTENT" property="modifyContent" jdbcType="VARCHAR" />
	    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
	    <result column="CREATE_USER_CODE" property="createUserCode" jdbcType="VARCHAR" />
	    <result column="CREATE_USER_NAME" property="createUserName" jdbcType="VARCHAR" />
	    <result column="LOG_TYPE" property="logType" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="AdjustOutVehicleFee_Column_List" >
    ID, VEHICLEASSEMBLE_NO, VEHICLE_NO, DRIVER_CODE, DRIVER_NAME, HANDOVER_TIME, ORIG_ORG_CODE, 
    ORIG_ORG_NAME, DEST_ORG_CODE, DEST_ORG_NAME, FEE_TOTAL/100 AS FEE_TOTAL, PREPAID_FEE_TOTAL/100 AS PREPAID_FEE_TOTAL,
    ARRIVE_FEE_TOTAL/100 AS ARRIVE_FEE_TOTAL, AWARD_TYPE, ADJUST_FEE/100 AS ADJUST_FEE, INIT_AMT/100 AS INIT_AMT, 
    ADJUST_REASON, OTHER_REASON, AUDITOR_CODE, AUDITOR_NAME, AUDIT_STATE, AUDIT_OPINION, TIMELINESS_CLAUSE, TIMELINESS_DURATION, CAUSE
  </sql>
  
  <select id="queryOutsideVehicleChargeList" resultMap="AdjustOutVehicleFeeResultMap" parameterType="com.deppon.foss.module.transfer.load.api.shared.dto.AdjustOutVehicleFeeDto" >
    select 
    	f.ID, f.VEHICLEASSEMBLE_NO, 
    	<!--快递部分关联查询该值未null 统一赋值为专线类型-->
    	NVL(vb.ASSEMBLE_TYPE,'OWNER_LINE') ASSEMBLE_TYPE,
    	f.VEHICLE_NO, f.DRIVER_CODE, f.DRIVER_NAME,
    	nvl(vb.DRIVER_MOBILE_PHONE,wk.DRIVERPHONE) DRIVER_MOBILE_PHONE, 
    	f.HANDOVER_TIME, f.ORIG_ORG_CODE, 
	    f.ORIG_ORG_NAME, f.DEST_ORG_CODE, f.DEST_ORG_NAME, f.FEE_TOTAL/100 AS FEE_TOTAL, f.PREPAID_FEE_TOTAL/100 AS PREPAID_FEE_TOTAL,
	    f.ARRIVE_FEE_TOTAL/100 AS ARRIVE_FEE_TOTAL, f.AWARD_TYPE, f.ADJUST_FEE/100 AS ADJUST_FEE, f.INIT_AMT/100 AS INIT_AMT, 
	    f.ADJUST_REASON, f.OTHER_REASON, f.AUDITOR_CODE, f.AUDITOR_NAME, f.AUDIT_STATE, f.AUDIT_OPINION, f.TIMELINESS_CLAUSE, f.TIMELINESS_DURATION, f.CAUSE
    from TFR.T_OPT_ADJUST_OUTVEHICLE_FEE f
    left join tfr.t_Opt_Vehicleassemblebill vb 
    
         on vb.vehicleassemble_no=f.vehicleassemble_no					
	left join tfr.t_wk_trf_bill wk
		on wk.HANDOVERBILLNO=f.vehicleassemble_no	
     <include refid="outsideVehicleCharge_Where" />  
  </select>
  <!-- 未审核记录条数以及审批中记录条数的统计 -->
    <select id="noAuditAndAuditInCount" resultMap="AdjustOutVehicleFeeResultMap" parameterType="com.deppon.foss.module.transfer.load.api.shared.dto.AdjustOutVehicleFeeDto" >
    select 
    	f.ID, f.VEHICLEASSEMBLE_NO, vb.ASSEMBLE_TYPE,f.VEHICLE_NO, f.DRIVER_CODE, f.DRIVER_NAME,vb.DRIVER_MOBILE_PHONE, f.HANDOVER_TIME, f.ORIG_ORG_CODE, 
	    f.ORIG_ORG_NAME, f.DEST_ORG_CODE, f.DEST_ORG_NAME, f.FEE_TOTAL/100 AS FEE_TOTAL, f.PREPAID_FEE_TOTAL/100 AS PREPAID_FEE_TOTAL,
	    f.ARRIVE_FEE_TOTAL/100 AS ARRIVE_FEE_TOTAL, f.AWARD_TYPE, f.ADJUST_FEE/100 AS ADJUST_FEE, f.INIT_AMT/100 AS INIT_AMT, 
	    f.ADJUST_REASON, f.OTHER_REASON, f.AUDITOR_CODE, f.AUDITOR_NAME, f.AUDIT_STATE, f.AUDIT_OPINION, f.TIMELINESS_CLAUSE, f.TIMELINESS_DURATION, f.CAUSE
    from TFR.T_OPT_ADJUST_OUTVEHICLE_FEE f
    left join tfr.t_Opt_Vehicleassemblebill vb 
         on vb.vehicleassemble_no=f.vehicleassemble_no	
         				
     <include refid="outsideVehicleCharge_Where" />  
  </select>
  
  <select id="queryCount"  resultType="Long" parameterType="com.deppon.foss.module.transfer.load.api.shared.dto.AdjustOutVehicleFeeDto" >
    select     count(f.id)
    from TFR.T_OPT_ADJUST_OUTVEHICLE_FEE  f
    left join tfr.t_Opt_Vehicleassemblebill vb 
         on vb.vehicleassemble_no=f.vehicleassemble_no					
    <include refid="outsideVehicleCharge_Where" />    
  </select>
  
  	<!-- 外请车费用查询条件 -->
	<sql id="outsideVehicleCharge_Where">
		<where>
			<if test="vehicleassembleNo!=null and vehicleassembleNo!='' ">	
					AND f.VEHICLEASSEMBLE_NO = #{vehicleassembleNo} 				
			</if>
			<if test="driverName!=null and driverName!='' ">	
					AND f.DRIVER_NAME = #{driverName} 				
			</if>
<!-- 			<if test="handoverTime!=null and handoverTime!='' ">	 -->
<!-- 					AND HANDOVER_TIME = #{handoverTime,jdbcType=DATE} -->
<!-- 			</if> -->
			<if test="beginTimeStr!=null and beginTimeStr!=''">
				<![CDATA[and f.HANDOVER_TIME >= to_date(#{beginTimeStr}, 'yyyy-mm-dd hh24:mi:ss')]]>
			</if>
			<if test="endTimeStr!=null and endTimeStr!=''">
				<![CDATA[and f.HANDOVER_TIME <= to_date(#{endTimeStr}, 'yyyy-mm-dd hh24:mi:ss')]]>
			</if>
			<if test="auditState!=null and auditState!='' ">	
					AND f.AUDIT_STATE = #{auditState}
			</if>
			<if test="awardType!=null and  awardType!=''">
				AND f.AWARD_TYPE = #{awardType}					
			</if>
			<if test="vehicleNo!=null and  vehicleNo!=''">
				AND f.VEHICLE_NO = #{vehicleNo}					
			</if>
			<if test="origOrgCode!=null and  origOrgCode!=''">
				AND f.ORIG_ORG_CODE = #{origOrgCode}					
			</if>
			<if test="destOrgCode!=null and  destOrgCode!=''">
				AND f.DEST_ORG_CODE = #{destOrgCode}					
			</if>
			<if test="assembleType!=null and  assembleType!='' and assembleType!='ALL' ">
				<choose>
    				<when test="assembleType=='OWNER_LINE'">
			       <!-- 专车要查询快递的 -->
			      	AND (vb.ASSEMBLE_TYPE = #{assembleType}	 or vb.ASSEMBLE_TYPE is NULL)
			    	</when>
			    	<otherwise>
			       <!-- 整车的不查快递的 -->
			      	AND vb.ASSEMBLE_TYPE = #{assembleType}	
			    	</otherwise>
 				 </choose>
			</if>
		</where>
	</sql>
   <select id="getOutsideVehicleChargeById" resultMap="AdjustOutVehicleFeeResultMap" parameterType="java.lang.String">
    select 
    <include refid="AdjustOutVehicleFee_Column_List" />
    from TFR.T_OPT_ADJUST_OUTVEHICLE_FEE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <!-- 根据配载车次号找配载车信息 -->
  <select id="queryByVehicleassembleNo" resultMap="vehicleassemblebillResultMap" parameterType="java.lang.String">
  	select V.ID,
	       V.VEHICLEASSEMBLE_NO,
	       V.VEHICLE_NO,
	       V.DRIVER_CODE,
	       V.DRIVER_NAME,
	       V.ORIG_ORG_CODE,
	       V. ORIG_ORG_NAME,
	       V.DEST_ORG_CODE,
	       V.CREATE_TIME AS HANDOVER_TIME,
	       V.DEST_ORG_NAME,
	       V.FEE_TOTAL / 100 AS FEE_TOTAL,
	       V.PREPAID_FEE_TOTAL / 100 AS PREPAID_FEE_TOTAL,
	       V.ARRIVE_FEE_TOTAL / 100 AS ARRIVE_FEE_TOTAL,
	       V.DRIVER_MOBILE_PHONE,
	       V.BE_MIDWAYLOAD,
	       V.BEFINALLYARRIVE,
	       V.VEHICLE_OWNERSHIP,
	       V.RUN_HOURS,
	       V.BE_TIMELINESS,
	       sum(H.MONEY_TOTAL / 100) AS LOAD_FEE_TOTAL,
	       V.ASSEMBLE_TYPE
	       
	  FROM tfr.T_OPT_VEHICLEASSEMBLEBILL    V,
	       tfr.T_OPT_VEHICLEASSEMBLE_DETAIL D,
	       tfr.T_OPT_HANDOVERBILL           H
	 where V.id = D.VEHICLEASSEMBLEBILL_ID
	   and D.HANDOVER_NO = H.HANDOVER_NO(+)
	   AND V.VEHICLEASSEMBLE_NO = #{vehicleassembleNo,jdbcType=VARCHAR}
	 group by V.ID,
	          V.VEHICLEASSEMBLE_NO,
	          V.VEHICLE_NO,
	          V.DRIVER_CODE,
	          V.DRIVER_NAME,
	          V.ORIG_ORG_CODE,
	          V. ORIG_ORG_NAME,
	          V.DEST_ORG_CODE,
	          V.CREATE_TIME,
	          V.DEST_ORG_NAME,
	          V.FEE_TOTAL,
	          V.PREPAID_FEE_TOTAL,
	          V.ARRIVE_FEE_TOTAL,
	          V.DRIVER_MOBILE_PHONE,
	          V.BE_MIDWAYLOAD,
	          V.BEFINALLYARRIVE,
	          V.VEHICLE_OWNERSHIP,
	          V.RUN_HOURS,
	          V.BE_TIMELINESS,
	          V.ASSEMBLE_TYPE
  </select>
 
  
  <select id="queryById" resultMap="vehicleassemblebillResultMap" parameterType="java.lang.String">
	  	select F.ID,
	       F.VEHICLEASSEMBLE_NO,
	       F.VEHICLE_NO,
	       F.DRIVER_CODE,
	       F.DRIVER_NAME,
	       F.ORIG_ORG_CODE,
	       F. ORIG_ORG_NAME,
	       F.DEST_ORG_CODE,
	       F.HANDOVER_TIME,
	       F.DEST_ORG_NAME,
	       F.FEE_TOTAL / 100 AS FEE_TOTAL,
	       F.PREPAID_FEE_TOTAL / 100 AS PREPAID_FEE_TOTAL,
	       F.ARRIVE_FEE_TOTAL / 100 AS ARRIVE_FEE_TOTAL,
	       V.DRIVER_MOBILE_PHONE,
	       F.AWARD_TYPE,
	       F.ADJUST_FEE / 100 AS ADJUST_FEE,
	       F.ADJUST_REASON,
	       F.OTHER_REASON,
	       F.AUDIT_STATE,
	       sum(H.MONEY_TOTAL / 100) AS LOAD_FEE_TOTAL,
	       F.CAUSE,
	       F.TIMELINESS_CLAUSE,
	       F.TIMELINESS_DURATION,
	       V.ASSEMBLE_TYPE
	  FROM tfr.T_OPT_ADJUST_OUTVEHICLE_FEE  F,
	       tfr.T_OPT_VEHICLEASSEMBLEBILL    V,
	       tfr.T_OPT_VEHICLEASSEMBLE_DETAIL D,
	       tfr.T_OPT_HANDOVERBILL           H
	 where F.VEHICLEASSEMBLE_NO = V.VEHICLEASSEMBLE_NO
	   and V.id = D.VEHICLEASSEMBLEBILL_ID
	   and D.HANDOVER_NO = H.HANDOVER_NO(+)
	   AND F.Id = #{id,jdbcType=VARCHAR}
	 group by F.ID,
	          F.VEHICLEASSEMBLE_NO,
	          F.VEHICLE_NO,
	          F.DRIVER_CODE,
	          F.DRIVER_NAME,
	          F.ORIG_ORG_CODE,
	          F. ORIG_ORG_NAME,
	          F.DEST_ORG_CODE,
	          F.HANDOVER_TIME,
	          F.DEST_ORG_NAME,
	          F.FEE_TOTAL,
	          F.PREPAID_FEE_TOTAL,
	          F.ARRIVE_FEE_TOTAL,
	          V.DRIVER_MOBILE_PHONE,
	          F.AWARD_TYPE,
	          F.ADJUST_FEE,
	          F.ADJUST_REASON,
	          F.OTHER_REASON,
	          F.AUDIT_STATE,
	          F.CAUSE,
	          F.TIMELINESS_CLAUSE,
	          F.TIMELINESS_DURATION,
	          V.ASSEMBLE_TYPE
  </select>
  
  <select id="queryByIdFromWk" resultMap="vehicleassemblebillResultMap" parameterType="java.lang.String">
	  select F.ID,
           F.VEHICLEASSEMBLE_NO,
           F.VEHICLE_NO,
           F.DRIVER_CODE,
           F.DRIVER_NAME,
           F.ORIG_ORG_CODE,
           F.ORIG_ORG_NAME,
           F.DEST_ORG_CODE,
           F.HANDOVER_TIME,
           F.DEST_ORG_NAME,
           F.FEE_TOTAL / 100 AS FEE_TOTAL,
           F.PREPAID_FEE_TOTAL / 100 AS PREPAID_FEE_TOTAL,
           F.ARRIVE_FEE_TOTAL / 100 AS ARRIVE_FEE_TOTAL,
           TB.DRIVERPHONE DRIVER_MOBILE_PHONE,
           F.AWARD_TYPE,
           F.ADJUST_FEE / 100 AS ADJUST_FEE,
           F.ADJUST_REASON,
           F.OTHER_REASON,
           F.AUDIT_STATE,
           TB.TOTALFEE / 100 AS LOAD_FEE_TOTAL,
           F.CAUSE,
           F.TIMELINESS_CLAUSE,
           F.TIMELINESS_DURATION,
           'OWNER_LINE' ASSEMBLE_TYPE
      FROM tfr.T_OPT_ADJUST_OUTVEHICLE_FEE F
      LEFT JOIN tfr.t_wk_trf_bill TB
        ON F.VEHICLEASSEMBLE_NO = TB.HANDOVERBILLNO
     WHERE F.Id = #{id,jdbcType=VARCHAR}
  </select>
  
  
  
  
  <select id="queryOutsideVehicleChargeBy" resultMap="vehicleassemblebillResultMap" parameterType="java.lang.String">
      SELECT V.VEHICLEASSEMBLE_NO,V.GOODS_TYPE,V.ASSEMBLE_TYPE,V.VEHICLE_NO,V.DRIVER_CODE,V.DRIVER_NAME,V.ORIG_ORG_CODE,V.ORIG_ORG_NAME,V.DEST_ORG_CODE,
	  V.Dest_Org_Name,V.DRIVER_MOBILE_PHONE,V.VEHICLE_OWNERSHIP, V.PAYMENT_TYPE,V.FEE_TOTAL/100 AS FEE_TOTAL,  V.PREPAID_FEE_TOTAL/100 AS PREPAID_FEE_TOTAL,  V.ARRIVE_FEE_TOTAL/100 AS ARRIVE_FEE_TOTAL,
	  V.BE_RETURN_RECEIPT, V.CURRENCY_CODE,V.LEAVE_TIME,HD.WAYBILL_NO
	  FROM  TFR.T_OPT_VEHICLEASSEMBLEBILL V   ,TFR.T_OPT_VEHICLEASSEMBLE_DETAIL D,TFR.T_OPT_HANDOVERBILL H ,TFR.T_OPT_HANDOVERBILL_DETAIL HD
	  WHERE  V.ID=D.VEHICLEASSEMBLEBILL_ID AND D.HANDOVER_NO=H.HANDOVER_NO(+)  AND  HD.HANDOVER_NO(+) =D.HANDOVER_NO
     AND  V.VEHICLEASSEMBLE_NO=#{vehicleassembleNo,jdbcType=VARCHAR}	
  </select>
  
  
  <select id="queryOutsideVehicleChargeByFromWk" resultMap="vehicleassemblebillResultMap" parameterType="java.lang.String">
     SELECT V.HANDOVERBILLNO VEHICLEASSEMBLE_NO,
          'ALL' GOODS_TYPE,
          'OWNER_LINE' ASSEMBLE_TYPE,
          V.VEHICLENO VEHICLE_NO,
          V.DRIVERCODE DRIVER_CODE,
          V.DRIVERNAME DRIVER_NAME,
          V.DEPARTORGCODE ORIG_ORG_CODE,
          V.DEPARTORGNAME ORIG_ORG_NAME,
          V.ARRIVEORGCODE DEST_ORG_CODE,
          V.ARRIVEORGNAME DEST_ORG_NAME,
          V.DRIVERPHONE DRIVER_MOBILE_PHONE,
          V.CAROWNERSHIPTYPE VEHICLE_OWNERSHIP,
          V.PAYMENTTYPE PAYMENT_TYPE,
          V.TOTALFEE / 100 AS FEE_TOTAL,
          V.TOTALPREPAIDFEE / 100 AS PREPAID_FEE_TOTAL,
          V.TOTALARRIVEFEE / 100 AS ARRIVE_FEE_TOTAL,
          'N' BE_RETURN_RECEIPT,
          'RMB' CURRENCY_CODE,
          V.DEPARTTIME LEAVE_TIME
     FROM tfr.t_wk_trf_bill V
    WHERE 
	    V.CAROWNERSHIPTYPE='Leased'
	    AND V.HANDOVERTYPE='LONG_DISTANCE_HANDOVER'
	    AND V.HANDOVERBILLNO =#{vehicleassembleNo,jdbcType=VARCHAR}
</select>
  
  
  
   <select id="queryOutsideVehicleChargeByVehicleassembleNo" resultMap="vehicleassemblebillResultMap" parameterType="java.lang.String">
     select 
    <include refid="AdjustOutVehicleFee_Column_List" />
    from TFR.T_OPT_ADJUST_OUTVEHICLE_FEE 
      WHERE  VEHICLEASSEMBLE_NO=#{vehicleassembleNo,jdbcType=VARCHAR}	  
  </select>

   <select id="queryOutsideVehicleChargeCauseByVehicleassembleNo" resultMap="vehicleassemblebillResultMap" parameterType="java.lang.String">
     select 
    <include refid="AdjustOutVehicleFee_Column_List" />
    from TFR.T_OPT_ADJUST_OUTVEHICLE_FEE 
      WHERE VEHICLEASSEMBLE_NO=#{vehicleassembleNo,jdbcType=VARCHAR}
        and TIMELINESS_CLAUSE = 'Y'
  </select>
  
  <delete id="deleteOutsideVehicleCharge" parameterType="java.lang.String" >
    delete from TFR.T_OPT_ADJUST_OUTVEHICLE_FEE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="addOutsideVehicleCharge" parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.AdjustOutVehicleFeeEntity" >
    insert into TFR.T_OPT_ADJUST_OUTVEHICLE_FEE (ID, VEHICLEASSEMBLE_NO, VEHICLE_NO, 
      DRIVER_CODE, DRIVER_NAME, HANDOVER_TIME, 
      ORIG_ORG_CODE, ORIG_ORG_NAME, DEST_ORG_CODE, 
      DEST_ORG_NAME, FEE_TOTAL, PREPAID_FEE_TOTAL, 
      ARRIVE_FEE_TOTAL, AWARD_TYPE, ADJUST_FEE, INIT_AMT,
      ADJUST_REASON, OTHER_REASON, AUDITOR_CODE, 
      AUDITOR_NAME, AUDIT_STATE, AUDIT_OPINION,
      TIMELINESS_CLAUSE, TIMELINESS_DURATION, CAUSE
      )
    values (#{id,jdbcType=VARCHAR}, #{vehicleassembleNo,jdbcType=VARCHAR}, #{vehicleNo,jdbcType=VARCHAR}, 
      #{driverCode,jdbcType=VARCHAR}, #{driverName,jdbcType=VARCHAR}, #{handoverTime,jdbcType=TIMESTAMP}, 
      #{origOrgCode,jdbcType=VARCHAR}, #{origOrgName,jdbcType=VARCHAR}, #{destOrgCode,jdbcType=VARCHAR}, 
      #{destOrgName,jdbcType=VARCHAR}, #{feeTotal,jdbcType=DECIMAL}, #{prepaidFeeTotal,jdbcType=DECIMAL}, 
      #{arriveFeeTotal,jdbcType=DECIMAL}, #{awardType,jdbcType=VARCHAR}, #{adjustFee,jdbcType=DECIMAL}, #{initAmt,jdbcType=DECIMAL}, 
      #{adjustReason,jdbcType=VARCHAR}, #{otherReason,jdbcType=VARCHAR}, #{auditorCode,jdbcType=VARCHAR}, 
      #{auditorName,jdbcType=VARCHAR}, #{auditState,jdbcType=VARCHAR}, #{auditOpinion,jdbcType=VARCHAR},
      #{timelinessClause,jdbcType=VARCHAR}, #{timelinessDuration,jdbcType=DECIMAL}, #{cause,jdbcType=VARCHAR}
      )
  </insert>
  <!--外请车费用修改日志表 插入修改记录-->
  <insert id="addOutsideVehicleUpdateLog" parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.AdjustOutVehicleFeeLogEntity" >
    insert into TFR.T_OPT_OUTVEHICLE_FEE_LOG 
    		(ID, 
    		 ADJUST_OUTVEHICLE_FEE_ID, 
    		 MODIFY_CONTENT, 
      		 CREATE_TIME,
      		 CREATE_USER_CODE, 
      		 CREATE_USER_NAME,
      		 LOG_TYPE 
      		)
    values (#{id,jdbcType=VARCHAR},
    		#{adjustOutVehicleFeeId,jdbcType=VARCHAR},
    		#{modifyContent,jdbcType=VARCHAR}, 
      		SYSDATE, 
      		#{createUserCode,jdbcType=VARCHAR}, 
      		#{createUserName,jdbcType=VARCHAR},
      		#{logType,jdbcType=VARCHAR}
     		)
  </insert>

  <!--外请车费用修改日志表 -->
  <select id="queryOutsideVehicleUpdateLogs" resultMap="QueryOutsideVehicleUpdateLogsResultMap" parameterType="com.deppon.foss.module.transfer.load.api.shared.dto.AdjustOutVehicleFeeLogDto" >
   <![CDATA[
    select 
        loger.ID, 
        loger.ADJUST_OUTVEHICLE_FEE_ID, 
        loger.MODIFY_CONTENT, 
        to_char(loger.CREATE_TIME,'YYYY-MM-DD HH24:MI:SS') CREATE_TIME, 
        loger.CREATE_USER_CODE, 
        loger.CREATE_USER_NAME, 
    	loger.LOG_TYPE
    FROM TFR.T_OPT_OUTVEHICLE_FEE_LOG loger
    LEFT JOIN TFR.T_OPT_ADJUST_OUTVEHICLE_FEE aof
    ON loger.ADJUST_OUTVEHICLE_FEE_ID=aof.ID
    WHERE  
        loger.ADJUST_OUTVEHICLE_FEE_ID=#{adjustOutVehicleFeeId,jdbcType=VARCHAR}
        ORDER BY loger.CREATE_TIME DESC
        ]]>
  </select>
   
  <!--外请车费用修改日志表 查询修改总数-->
  <select id="queryOutsideVehicleUpdateLogsTotalCount" parameterType="com.deppon.foss.module.transfer.load.api.shared.dto.AdjustOutVehicleFeeLogDto" resultType="Long" >
    select count(loger.ID) as cnt
    FROM TFR.T_OPT_OUTVEHICLE_FEE_LOG loger
    LEFT JOIN TFR.T_OPT_ADJUST_OUTVEHICLE_FEE aof
    ON loger.ADJUST_OUTVEHICLE_FEE_ID=aof.ID
    WHERE  
         loger.ADJUST_OUTVEHICLE_FEE_ID=#{adjustOutVehicleFeeId,jdbcType=VARCHAR}
  </select>
   
  <update id="updateOutsideVehicleCharge"
	parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.AdjustOutVehicleFeeEntity">
	update TFR.T_OPT_ADJUST_OUTVEHICLE_FEE
    <set >
      <if test="vehicleassembleNo != null and vehicleassembleNo != '' " >
        VEHICLEASSEMBLE_NO = #{vehicleassembleNo,jdbcType=VARCHAR},
      </if>
      <if test="vehicleNo != null and vehicleNo !='' " >
        VEHICLE_NO = #{vehicleNo,jdbcType=VARCHAR},
      </if>
      <if test="driverCode != null and driverCode != '' " >
        DRIVER_CODE = #{driverCode,jdbcType=VARCHAR},
      </if>
      <if test="driverName != null and driverName != '' " >
        DRIVER_NAME = #{driverName,jdbcType=VARCHAR},
      </if>
      <if test="handoverTime != null  and handoverTime != '' " >
        HANDOVER_TIME = #{handoverTime,jdbcType=TIMESTAMP},
      </if>
      <if test="origOrgCode != null and origOrgCode != '' " >
        ORIG_ORG_CODE = #{origOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="origOrgName != null  and origOrgName != ''" >
        ORIG_ORG_NAME = #{origOrgName,jdbcType=VARCHAR},
      </if>
      <if test="destOrgCode != null and destOrgCode != '' " >
        DEST_ORG_CODE = #{destOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="destOrgName != null and  destOrgName != '' " >
        DEST_ORG_NAME = #{destOrgName,jdbcType=VARCHAR},
      </if>
      <if test="feeTotal != null and feeTotal != '' " >
        FEE_TOTAL = #{feeTotal,jdbcType=DECIMAL},
      </if>
      <if test="prepaidFeeTotal != null and prepaidFeeTotal != '' " >
        PREPAID_FEE_TOTAL = #{prepaidFeeTotal,jdbcType=DECIMAL},
      </if>
      <if test="arriveFeeTotal != null and arriveFeeTotal != '' " >
        ARRIVE_FEE_TOTAL = #{arriveFeeTotal,jdbcType=DECIMAL},
      </if>
      <if test="awardType != null and awardType != '' " >
        AWARD_TYPE = #{awardType,jdbcType=VARCHAR},
      </if>
<!--       <if test="adjustFee != null and adjustFee != '' " > -->  
       ADJUST_FEE = #{adjustFee,jdbcType=DECIMAL},
      <!-- </if> -->
      <if test="adjustReason != null and adjustReason != '' " >
        ADJUST_REASON = #{adjustReason,jdbcType=VARCHAR},
      </if>
      <if test="otherReason != null  " >
        OTHER_REASON = #{otherReason,jdbcType=VARCHAR},
      </if>
      <if test="auditorCode != null and auditorCode != ''" >
        AUDITOR_CODE = #{auditorCode,jdbcType=VARCHAR},
      </if>
      <if test="auditorName != null and auditorName != '' " >
        AUDITOR_NAME = #{auditorName,jdbcType=VARCHAR},
      </if>
      <if test="auditState != null and auditState != '' " >
        AUDIT_STATE = #{auditState,jdbcType=VARCHAR},
      </if>
      <if test="cause != null and cause != '' " >
        CAUSE = #{cause,jdbcType=VARCHAR},
      </if>
      <if test="auditOpinion != null and auditOpinion != '' " >
        AUDIT_OPINION = #{auditOpinion,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <update id="checkOutsideVehicleCharge" parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.AdjustOutVehicleFeeEntity" >
    update TFR.T_OPT_ADJUST_OUTVEHICLE_FEE
    <set >
        AUDIT_STATE = #{auditState,jdbcType=VARCHAR},
        <if test="auditOpinion != null and auditOpinion != ''">
        AUDIT_OPINION = #{auditOpinion,jdbcType=VARCHAR},
        </if>
         <if test="approvalOpinion != null and approvalOpinion != ''">
        AUDIT_OPINION = #{approvalOpinion,jdbcType=VARCHAR},
        </if>
        <if test="auditorCode != null and auditorCode != ''" >
         AUDITOR_CODE = #{auditorCode,jdbcType=VARCHAR},
      </if>
      <if test="auditorName != null and auditorName != '' " >
        AUDITOR_NAME = #{auditorName,jdbcType=VARCHAR}
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
 
  <select id="queryOutsideVehicleChargePayableCount"  resultType="Long" parameterType="java.lang.String" >
	select count(1)
	from TFR.T_OPT_TRUCK_TASK_BILL b
	where b.BILL_NO = #{waybillNo,jdbcType=VARCHAR}
	and b.assign_state = 'UNLOADED'
  </select>
  
  <select id="queryIsArriveCount"  resultType="Long" parameterType="java.lang.String" >
	select * from tfr.t_opt_truck_task_bill t,tfr.t_opt_truck_task_detail td
	where t.truck_task_detail_id = td.id
	and t.BILL_NO = #{waybillNo,jdbcType=VARCHAR}
	and td.status = 'ARRIVED'
  </select>
  
  <!-- 当为不可结算时，查询出发部门和达到部门用于抛出异常 -->
  <select id="getUnValidationDept" resultMap="vehicleassemblebillResultMap" parameterType="java.lang.String">
  	select d.orig_org_name,d.dest_org_name
  	from TFR.T_OPT_TRUCK_TASK_BILL b, TFR.T_OPT_TRUCK_TASK_DETAIL d
  	where b.TRUCK_TASK_DETAIL_ID = d.ID
  	and b.BILL_NO = #{waybillNo,jdbcType=VARCHAR} and ROWNUM =1
  </select>
  
  <select id="queryAdjustOutVehicleFeeRecordCount" resultType="Long" parameterType="java.lang.String">
   select count(1)
   from TFR.T_OPT_ADJUST_OUTVEHICLE_FEE 
   where VEHICLEASSEMBLE_NO = #{waybillNo,jdbcType=VARCHAR} and AUDIT_STATE = 'NOAUDIT'
  </select>
  
  <!-- 提供一个接口给结算:根据传入配载车次号集合查询出对应的配载单信息及调整金额信息。 -->
  <select id="queryOutVehicleAssembleBillAndFeeVoList" parameterType="list" resultMap="outVehicleAssembleBillAndFeeVoMap">
  	select VEHICLE_NO,
       VEHICLEASSEMBLE_NO,
       DRIVER_CODE,
       DRIVER_NAME,
       BE_MIDWAYLOAD,
       PAYMENT_TYPE,
       IS_MONTH_PAY,
       ORIG_ORG_CODE,
       ORIG_ORG_NAME,
       DEST_ORG_CODE,
       DEST_ORG_NAME,
       FEE_TOTAL,
       PREPAID_FEE_TOTAL,
       ARRIVE_FEE_TOTAL,
       abs(ADJUST_FEE) as ADJUST_FEE,
       <![CDATA[(case when ADJUST_FEE > 0 then 'REWARD' when ADJUST_FEE < 0 then 'FINE' else 'NONE' end) as AWARD_TYPE ]]>
    from (
          select max(v.vehicle_no) as VEHICLE_NO,
               max(v.vehicleassemble_no) as VEHICLEASSEMBLE_NO,
               max(v.driver_code) as DRIVER_CODE,
               max(v.driver_name) as DRIVER_NAME,
               max(v.be_return_receipt) as BE_MIDWAYLOAD,
               max(v.payment_type) as PAYMENT_TYPE,
               max((case v.payment_type when 'CT' then '1' else '0' end)) as IS_MONTH_PAY,
               max((select distinct o.unified_code from bse.T_BAS_ORG o where o.code = v.orig_org_code and active = 'Y')) as ORIG_ORG_CODE,
               max(v.orig_org_name) as ORIG_ORG_NAME,
               max((select distinct o.unified_code from bse.T_BAS_ORG o where o.code = v.dest_org_code and active = 'Y')) as DEST_ORG_CODE,
               max(v.dest_org_name) as DEST_ORG_NAME,
               max(nvl(v.fee_total,0) / 100) as FEE_TOTAL,
               max(nvl(v.prepaid_fee_total,0) / 100) as PREPAID_FEE_TOTAL,
               max(nvl(v.arrive_fee_total,0) / 100) as ARRIVE_FEE_TOTAL,
               sum(decode(f.award_type,
                          'REWARD',
                          nvl(f.adjust_fee, 0) / 100,
                          'FEE_AUGMENT',
                          nvl(f.adjust_fee, 0) / 100,
                          -1 * nvl(f.adjust_fee, 0) / 100)) as ADJUST_FEE
          from tfr.T_OPT_VEHICLEASSEMBLEBILL v left join tfr.T_OPT_ADJUST_OUTVEHICLE_FEE f
          on v.vehicleassemble_no = f.vehicleassemble_no and f.audit_state = 'AUDITPASS'
          where v.vehicleassemble_no in
               <foreach collection="list" index="index" item="vehicleAssembleNo" open="(" separator="," close=")">
 				  #{vehicleAssembleNo,jdbcType=VARCHAR}
 			  </foreach>
          group by v.vehicleassemble_no)
    union all
		select VEHICLE_NO,
		       VEHICLEASSEMBLE_NO,
		       DRIVER_CODE,
		       DRIVER_NAME,
		       BE_MIDWAYLOAD,
		       PAYMENT_TYPE,
		       IS_MONTH_PAY,
		       ORIG_ORG_CODE,
		       ORIG_ORG_NAME,
		       DEST_ORG_CODE,
		       DEST_ORG_NAME,
		       FEE_TOTAL,
		       PREPAID_FEE_TOTAL,
		       ARRIVE_FEE_TOTAL,
		       abs(ADJUST_FEE) as ADJUST_FEE,
		       <![CDATA[(case
		         when ADJUST_FEE > 0 then
		          'REWARD'
		         when ADJUST_FEE < 0 then
		          'FINE'
		         else
		          'NONE'
		       end) as AWARD_TYPE]]>
		  from (select max(WK.VEHICLENO) as VEHICLE_NO,
		               max(WK.HANDOVERBILLNO) as VEHICLEASSEMBLE_NO,
		               max(WK.DRIVERCODE) as DRIVER_CODE,
		               max(WK.DRIVERNAME) as DRIVER_NAME,
		               'N' as BE_MIDWAYLOAD,
		               max(WK.PAYMENTTYPE) as PAYMENT_TYPE,
		               max((case WK.PAYMENTTYPE
		                     when 'CT' then
		                      '1'
		                     else
		                      '0'
		                   end)) as IS_MONTH_PAY,
		               max((select distinct o.unified_code
		                     from bse.T_BAS_ORG o
		                    where o.code = WK.DEPARTORGCODE
		                      and active = 'Y')) as ORIG_ORG_CODE,
		               max(WK.DEPARTORGNAME) as ORIG_ORG_NAME,
		               max((select distinct o.unified_code
		                     from bse.T_BAS_ORG o
		                    where o.code = WK.ARRIVEORGCODE
		                      and active = 'Y')) as DEST_ORG_CODE,
		               max(WK.ARRIVEORGNAME) as DEST_ORG_NAME,
		               max(nvl(WK.TOTALFEE, 0) / 100) as FEE_TOTAL,
		               max(nvl(WK.TOTALPREPAIDFEE, 0) / 100) as PREPAID_FEE_TOTAL,
		               max(nvl(WK.TOTALARRIVEFEE, 0) / 100) as ARRIVE_FEE_TOTAL,
		               sum(decode(f.award_type,
		                          'REWARD',
		                          nvl(f.adjust_fee, 0) / 100,
		                          'FEE_AUGMENT',
		                          nvl(f.adjust_fee, 0) / 100,
		                          -1 * nvl(f.adjust_fee, 0) / 100)) as ADJUST_FEE
		          from tfr.t_Wk_Trf_Bill WK
		          left join tfr.T_OPT_ADJUST_OUTVEHICLE_FEE f
		            on WK.HANDOVERBILLNO = f.vehicleassemble_no
		           and f.audit_state = 'AUDITPASS'
		         where WK.HANDOVERBILLNO in 
		         <foreach collection="list" index="index" item="vehicleAssembleNo" open="(" separator="," close=")">
 				  	#{vehicleAssembleNo,jdbcType=VARCHAR}
 			  	 </foreach>
		         group by WK.HANDOVERBILLNO)
	</select>
  
  <!-- 根据车辆任务明细ID查询该车辆下单据信息  -->
  <select id="queryTruckTaskBillInfoByTruckTaskDetailId" parameterType="java.lang.String" resultMap="truckTaskBillInfoMap">
	select d.truck_task_id, b.bill_no, d.actual_depart_time, d.actual_arrive_time
	  from tfr.t_opt_truck_task_bill b, tfr.t_opt_truck_task_detail d, tfr.t_opt_vehicleassemblebill v
	 where b.truck_task_detail_id = d.id
	   and b.bill_no = v.vehicleassemble_no
	   and b.truck_task_detail_id = #{truckTaskDetailId,jdbcType=VARCHAR}
	<![CDATA[and d.status <> 'CANCLED']]>
     order by v.create_time asc
  </select>
  
  
  <!-- 根据车辆任务明细ID查询该车辆下单据信息 针对快递长途外请车交接单  -->
  <select id="queryTruckTaskBillInfoByTruckTaskDetailIdFromWkBill" parameterType="java.lang.String" resultMap="truckTaskBillInfoMap">
	select d.truck_task_id,
       b.bill_no,
       d.actual_depart_time,
       d.actual_arrive_time
  from tfr.t_opt_truck_task_bill     b,
       tfr.t_opt_truck_task_detail   d,
       tfr.t_wk_trf_bill wk
       where b.truck_task_detail_id = d.id
   and b.bill_no = wk.HANDOVERBILLNO
   and b.truck_task_detail_id = #{truckTaskDetailId,jdbcType=VARCHAR}
   and wk.HANDOVERTYPE='LONG_DISTANCE_HANDOVER'
      	AND wk.CAROWNERSHIPTYPE='Leased'
       <![CDATA[ and wk.HANDOVERSTATE <> 'HAVE_CANCEL']]>
</select>
  

  <!-- 根据主任务ID获取子任务(根据到达时间排序, 取最早到达的那一条数据)  -->
  <select id="getFirstTruckTaskDetailById" parameterType="java.lang.String" resultMap="truckTaskDetailResultMap">
  	SELECT * FROM (
		<![CDATA[
			SELECT 
				D.ID,
				D.TRUCK_TASK_ID,
				D.VEHICLE_NO,
				D.line_name,
				D.line_VIRTUAL_CODE,
				D.BUSINESS_TYPE,
				D.ORIG_ORG_CODE,
				D.ORIG_ORG_NAME,
				D.DEST_ORG_CODE,
				D.DEST_ORG_NAME,
				D.CREATE_TIME,
				D.TRUCK_DEPART_ID,
				D.TRUCK_ARRIVE_ID,
				D.PLAN_ARRIVE_TIME,
				D.ACTUAL_DEPART_TIME,
				D.ACTUAL_ARRIVE_TIME
		  FROM TFR.T_OPT_TRUCK_TASK_DETAIL D, TFR.T_OPT_TRUCK_TASK_BILL B
	    ]]>
		<where>
			   D.id = B.truck_task_detail_id(+)
		   and D.TRUCK_TASK_ID = #{truckTaskId}
  <![CDATA[and D.STATUS <> 'CANCLED']]>
		</where>
		ORDER BY ACTUAL_ARRIVE_TIME ASC
		) WHERE ROWNUM = 1
  </select>
  
  
    <select id="queryByVehicleassembleNoFromWk" resultMap="vehicleassemblebillResultMap" parameterType="java.lang.String">
  	select V.HANDOVERBILLNO ID,
           V.HANDOVERBILLNO VEHICLEASSEMBLE_NO,
           V.VEHICLENO VEHICLE_NO,
           V.DRIVERCODE DRIVER_CODE,
           V.DRIVERNAME DRIVER_NAME,
           V.DEPARTORGCODE ORIG_ORG_CODE, 
           V.DEPARTORGNAME ORIG_ORG_NAME,
           V.ARRIVEORGCODE DEST_ORG_CODE, 
           V.HANDOVERTIME AS HANDOVER_TIME,
           V.ARRIVEORGNAME DEST_ORG_NAME, 
           V.TOTALFEE / 100 AS FEE_TOTAL, 
           V.TOTALPREPAIDFEE / 100 AS PREPAID_FEE_TOTAL, 
           V.TOTALARRIVEFEE / 100 AS ARRIVE_FEE_TOTAL, 
           V.DRIVERPHONE DRIVER_MOBILE_PHONE, 
           'N' BE_MIDWAYLOAD, 
           'N' BEFINALLYARRIVE, 
           V.CAROWNERSHIPTYPE VEHICLE_OWNERSHIP, 
           V.RUNHOURS RUN_HOURS, 
           V.LIMITATIONSIGNSTATUS BE_TIMELINESS, 
           V.LOADFEE AS LOAD_FEE_TOTAL, 
           'OWNER_LINE' ASSEMBLE_TYPE 
      FROM tfr.t_wk_trf_bill V
      WHERE 
      	V.HANDOVERTYPE='LONG_DISTANCE_HANDOVER'
      	AND V.CAROWNERSHIPTYPE='Leased'
      	AND V.HANDOVERBILLNO=#{vehicleassembleNo,jdbcType=VARCHAR}
  </select>
  
  
</mapper>