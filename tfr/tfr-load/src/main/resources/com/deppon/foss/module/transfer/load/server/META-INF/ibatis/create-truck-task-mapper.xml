<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tfr-load">
	<resultMap id="handOverDtoResultMap" type="com.deppon.foss.module.transfer.load.api.shared.dto.TruckTaskHandOverDto">
		<result property="handOverBillNo" column="handOverBillNo"/>
		<result property="vehicleNo" column="vehicleNo"/>
		<result property="handOverType" column="handOverType"/>
		<result property="origOrgCode" column="origOrgCode"/>
		<result property="destOrgCode" column="destOrgCode"/>
		<result property="origOrgName" column="origOrgName"/>
		<result property="destOrgName" column="destOrgName"/>
		<result property="deptPlanDetailId" column="deptPlanDetailId"/>
		<result property="lineName" column="lineName"/>
		<result property="lineVirtualCode" column="lineVirtualCode"/>
		<result property="frequecyNo" column="frequecyNo"/>
		<result property="driverCode1" column="driverCode1"/>
		<result property="driverCode2" column="driverCode2"/>
		<result property="driverName1" column="driverName1"/>
		<result property="driverName2" column="driverName2"/>
		<result property="driverPhone1" column="driverPhone1"/>
		<result property="driverPhone2" column="driverPhone2"/>
		<result property="planDepartTime" column="planDepartTime"/>
		<result property="planArriveTime" column="planArriveTime"/>
		<result property="beCarLoad" column="beCarLoad"/>
		<result property="truckTaskDettailId" column="truckTaskDettailId"/>
		<result property="truckTaskId" column="truckTaskId"/>
		<result property="sealId" column="sealId"/>
		<result property="truckDepartId" column="truckDepartId"/>
		<result property="actualDepartTime" column="actualDepartTime"/>
		<result property="loaderName" column="loaderName"/>
		<result property="loaderCode" column="loaderCode"/>
		<result property="billingTime" column="billingTime"/>
		<result property="loadTaskNo" column="loadTaskNo"/>
		<result property="feeTotal" column="feeTotal"/>
		<result property="actualDepartType" column="actualDepartType"/>
		<result property="weightTotal" column="weightTotal"/>
		<result property="volumeTotal" column="volumeTotal"/>
		<result property="truckGPSTaskId" column="truckGPSTaskId"/>
		<result property="goodsQtyTotal" column="goodsQtyTotal"/>
		<result property="wayBillQtyTotal" column="wayBillQtyTotal"/>
		<result property="beTrailerVehicleNo" column="beTrailerVehicleNo"/>
	</resultMap>
	<resultMap id="truckTaskResultMap" type="com.deppon.foss.module.transfer.load.api.shared.domain.TruckTaskEntity">
		<result property="id" column="id"/>
		<result property="vehicleNo" column="vehicleNo"/>
		<result property="line" column="line"/>
		<result property="businessType" column="businessType"/>
		<result property="driverName1" column="driverName1"/>
		<result property="driverCode1" column="driverCode1"/>
		<result property="driverPhone1" column="driverPhone1"/>
		<result property="driverPhone2" column="driverPhone2"/>
		<result property="state" column="state"/>
		<result property="driverCode2" column="driverCode2"/>
		<result property="driverName2" column="driverName2"/>
		<result property="createTime" column="createTime"/>
		<result property="beCarLoad" column="beCarLoad"/>
		<result property="chargingAssembleNo" column="chargingAssembleNo"/>
	</resultMap>
	<resultMap id="truckTaskDetailResultMap" type="com.deppon.foss.module.transfer.load.api.shared.domain.TruckTaskDetailEntity">
		<result property="id" column="id"/>
		<result property="parentId" column="parentId"/>
		<result property="vehicleNo" column="vehicleNo"/>
		<result property="lineName" column="lineName"/>
		<result property="lineVirtualCode" column="lineVirtualCode"/>
		<result property="frequecyNo" column="frequecyNo"/>
		<result property="businessType" column="businessType"/>
		<result property="origOrgCode" column="origOrgCode"/>
		<result property="destOrgCode" column="destOrgCode"/>
		<result property="origOrgName" column="origOrgName"/>
		<result property="destOrgName" column="destOrgName"/>
		<result property="state" column="state"/>
		<result property="createTime" column="createTime"/>
		<result property="truckType" column="truckType"/>
		<result property="planDepartTime" column="planDepartTime"/>
		<result property="actualDepartTime" column="actualDepartTime"/>
		<result property="planArriveTime" column="planArriveTime"/>
		<result property="actualArriveTime" column="actualArriveTime"/>
		<result property="vehicleSealId" column="vehicleSealId"/>
		<result property="truckDepartId" column="truckDepartId"/>
		<result property="truckArriveId" column="truckArriveId"/>
		<result property="beCarLoad" column="beCarLoad"/>
		<result property="loaderName" column="loaderName"/>
		<result property="loaderCode" column="loaderCode"/>
		<result property="vehicleOrgCode" column="vehicleOrgCode"/>
		<result property="vehicleOrgName" column="vehicleOrgName"/>
		<result property="vehicleOwnerType" column="vehicleOwnerType"/>
		<result property="actualDepartType" column="actualDepartType"/>
		<result property="manualDepartTime" column="manualDepartTime"/>
		<result property="manualArriveTime" column="manualArriveTime"/>
	</resultMap>
	<resultMap id="handOverMsgResultMap"
		type="com.deppon.foss.module.transfer.load.api.shared.dto.HandOverMsgDto">
		<result property="departTime" column="departTime" />
		<result property="handOverNo" column="handOverNo" />
		<result property="vehicleNo" column="vehicleNo" />
		<result property="driver" column="driver" />
		<result property="driverPhone" column="driverPhone" />
		<result property="origOrgName" column="origOrgName" />
		<result property="destOrigCode" column="destOrigCode" />
		<result property="wayBillQtyTotal" column="wayBillQtyTotal" />
		<result property="fastWayBillQtyToal" column="fastWayBillQtyToal" />
		<result property="weigtTotal" column="weigtTotal" />
		<result property="moneyTotal" column="moneyTotal" />
		<result property="vulomeTotal" column="vulomeTotal" />
		<result property="creatorCode" column="creatorCode"/>
	</resultMap>
	<resultMap id="taskVehicleResultMap"
		type="com.deppon.foss.module.transfer.common.api.shared.dto.TaskVehicleDto">
		<result property="vehicleId" column="vehicleId" />
		<result property="startDept" column="startDept" />
		<result property="arrivalDept" column="arrivalDept" />
		<result property="vehicleNo" column="vehicleNo" />
		<result property="startTime" column="startTime" />
		<result property="weight" column="weight" />
		<result property="cubage" column="cubage" />
		<result property="isDeleted" column="isDeleted" />
		<result property="truckTaskId" column="truckTaskId" />
		<result property="driverCode" column="driverCode" />
		<result property="dirverName" column="dirverName" />
		<result property="lineCode" column="lineCode" />
	</resultMap>
	<resultMap id="wayBillHandOverDtoResultMap"
		type="com.deppon.foss.module.transfer.load.api.shared.dto.WayBillHandOverDto">
		<result property="createTime" column="createTime" />
		<result property="leaveTime" column="leaveTime" />
		<result property="arriveTime" column="arriveTime" />
		<result property="handOverNo" column="handOverNo" />
		<result property="origOrgCode" column="origOrgCode" />
		<result property="origOrgName" column="origOrgName" />
		<result property="destOrgCode" column="destOrgCode" />
		<result property="destOrgName" column="destOrgName" />
		<result property="isPreHandOverBill" column="isPreHandOverBill" />
		<result property="handOverType" column="handOverType" />
		<result property="goodsQty" column="goodsQty" />
	</resultMap>
	<!-- 接送货接口：根据运单号查询运单交接信息 -->
	<select id="queryWayBillHandOverInfo" resultMap="wayBillHandOverDtoResultMap">
		<![CDATA[select h.handover_no as handOverNo,
				       h.create_time as createTime,
				       h.orig_org_code as origOrgCode,
				       h.orig_org_name as origOrgName,
				       h.dest_org_code as destOrgCode,
				       h.dest_org_name as destOrgName,
				       h.handover_type as handOverType,
				       case
				         when h.handoverbill_state = '10' then
				          'Y'
				         else
				          'N'
				       end as isPreHandOverBill,
				       hd.handover_goods_qty as goodsQty,
				       d.actual_depart_time as leaveTime,
				       d.actual_arrive_time as arriveTime
				  from tfr.t_opt_handoverbill h
				  inner join tfr.t_opt_handoverbill_detail hd on hd.handover_no = h.handover_no
				  left join tfr.t_opt_truck_task_bill b on b.bill_no = h.handover_no
				  left join tfr.t_opt_truck_task_detail d on d.id = b.truck_task_detail_id]]>
				 where hd.waybill_no = #{wayBillNo}
				   <![CDATA[and h.handoverbill_state <> '90'
				   and d.status <> 'CANCLED']]>
	</select>
	<!-- 查询未成功同步至gps系统的待跟踪车辆 -->
	<select id="queryFailedTruckGPSTasks" resultMap="taskVehicleResultMap">
		<![CDATA[Select Vehicleid,
				       Vehicleno,
				       Starttime,
				       Startdept,
				       Arrivaldept,
				       Isdeleted,
				       Weight,
				       Cubage
				  From (Select Max(G.Id) As Vehicleid,
				               Max(G.Vehicle_No) As Vehicleno,
				               To_Char(Max(D.Plan_Depart_Time), 'yyyy-mm-dd hh24:mi:ss') As Starttime,
				               Max(G.Orig_Org_Code) As Startdept,
				               Max(G.Dest_Org_Code) As Arrivaldept,
				               Max(G.Operate_Type) As Isdeleted,
				               Sum(H.Weight_Total) As Weight,
				               Sum(H.Volume_Total) As Cubage
				          From Tfr.T_Opt_Truck_Gps_Task g
				         Inner Join Bse.T_Bas_Own_Truck Ot
				            On G.Vehicle_No = Ot.Vehicle_No And ot.active='Y'
				          Left Join Tfr.T_Opt_Truck_Task_Bill b
				            On B.Truck_Task_Detail_Id = G.Truck_Task_Detail_Id
				         Inner Join Tfr.T_Opt_Truck_Task_Detail d
				            On D.Id = G.Truck_Task_Detail_Id
				          Left Join Tfr.T_Opt_Handoverbill h
				            On H.Handover_No = B.Bill_No
				         Where G.Be_Success = 'N'
				           And G.Times <= 3
				         Group By G.Id)
				 Where Rownum<=#{queryCount}]]>
	</select> 
	
	<!-- 查询未成功同步至gps系统的待跟踪车辆 - 短途 -->
	<select id="queryFailedShortTruckGPSTasks" resultMap="taskVehicleResultMap">
		<![CDATA[Select Vehicleid,
			       Trucktaskid,
			       Vehicleno,
			       Starttime,
			       Startdept,
			       Arrivaldept,
			       Isdeleted,
			       Drivercode,
			       Dirvername,
			       Linecode From
			        (Select Max(G.Id) As Vehicleid,
			               Max(D.Id) Trucktaskid,
			               Max(G.Vehicle_No) As Vehicleno,
			               To_Char(Max(D.Plan_Depart_Time), 'yyyy-mm-dd hh24:mi:ss') As Starttime,
			               Max(G.Orig_Org_Code) As Startdept,
			               Max(G.Dest_Org_Code) As Arrivaldept,
			               Max(G.Operate_Type) As Isdeleted,
			               Max(H.Driver_Code) Drivercode,
			               Max(H.Driver_Name) Dirvername,
			               Max(D.Line_Virtual_Code) Linecode
			          From Tfr.T_Opt_Truck_Gps_Task g
			          Inner Join bse.t_bas_own_truck ot
			          On ot.vehicle_no=g.vehicle_no And ot.active='Y'
			          Left Join Tfr.T_Opt_Truck_Task_Bill b
			            On B.Truck_Task_Detail_Id = G.Truck_Task_Detail_Id
			         Inner Join Tfr.T_Opt_Truck_Task_Detail d
			            On D.Id = G.Truck_Task_Detail_Id
			          Left Join Tfr.T_Opt_Handoverbill h
			            On H.Handover_No = B.Bill_No
			         Where G.Syn_Be_Success = 'N'
			           And G.Syntimes < 3
			         Group By G.Id) Where Rownum<=#{queryCount}]]>
	</select>
	
	<!-- 查询未建立任务车辆交接单 -->
	<select id="queryUnCreateTruckTaskHandOver" resultMap="handOverDtoResultMap">
	   select 
	           distinct h.handover_no as handOverBillNo,
	           REPLACE(h.handover_type,'_HANDOVER','') as handOverType,
	           h.orig_org_code as origOrgCode,
	           h.orig_org_name as origOrgName,
	           h.dest_org_code as destOrgCode,
	           h.dest_org_name as destOrgName,
	           h.vehicle_no as vehicleNo,
	           h.be_trailer_vehicleNo beTrailerVehicleNo,
	           nvl(h.be_car_load,'N') as beCarLoad,
	           h.create_time as billingTime,
	           h.load_task_no as loadTaskNo,
	           h.weight_total as weightTotal,
	           h.volume_total as volumeTotal,
	           h.GOODS_QTY_TOTAL as goodsQtyTotal,
	           h.WAYBILL_QTY_TOTAL as wayBillQtyTotal,
	           p.id as deptPlanDetailId,
	           p.line_no as lineVirtualCode,
	           p.line_name as lineName,
	           p.frequency_no as frequecyNo,
	           p.plan_depart_time as planDepartTime,
	           p.plan_arrive_time as planArriveTime,
	           p.driver_code1 as driverCode1,
	           p.driver_name1 as driverName1,
	           p.driver_phone1 as driverPhone1,
	           p.driver_code2 as driverCode2,
	           p.driver_name2 as driverName2,
	           p.driver_phone2 as driverPhone2,
	           l.loader_name as loaderName,
	           l.loader_code as loaderCode
	      from tfr.t_opt_handoverbill h
	      left join tfr.T_OPT_TRUCK_DEPART_PLAN_DETAIL p on p.id =
	                                                    h.truckdepartplandetail_id
	      left join tfr.t_opt_load_task t on t.task_no = h.load_task_no
	      left join tfr.t_opt_loader_participation l on l.task_id = t.id and l.be_creator = 'Y'
	       <where>
	       h.HANDOVERBILL_STATE != 90
	       and h.HANDOVERBILL_STATE != 10
		   and h.vehicle_no is not null
		   and h.be_create_tasktruck = 'N'
		   and <![CDATA[h.HANDOVER_TYPE not in('PARTIALLINE_HANDOVER','LDP_HANDOVER')]]>
		   and ORA_HASH(h.id, #{threadCount}-1) = #{threadNo}
		    <if test="bizJobStartTime != null and bizJobStartTime != ''">
		   and <![CDATA[h.MODIFY_TIME >= #{bizJobStartTime,jdbcType=TIMESTAMP} ]]>
		   </if>
		    <if test="bizJobEndTime != null and bizJobEndTime != ''">
 		   and <![CDATA[h.MODIFY_TIME <= #{bizJobEndTime,jdbcType=TIMESTAMP} ]]>
 		   </if>
 		    <if test="billNo != null and billNo != ''">
 		   and h.handover_no = #{billNo}
 		   </if>
	       </where>
	</select>
	<select id="queryUncreateTaskVehicleAssem" resultMap="handOverDtoResultMap" parameterType="String">
		  select 
             VB.VEHICLEASSEMBLE_NO AS handOverBillNo,
             'LONG_DISTANCE' as handOverType,
             vb.orig_org_code as origOrgCode,
             vb.orig_org_name as origOrgName,
             vb.ontheway_destorgcode as destOrgCode,
             vb.ontheway_destorgname as destOrgName,
             vb.vehicle_no as vehicleNo,
             'N' as beCarLoad,
             vb.create_time as billingTime,
             p.driver_code1 as driverCode1,
             p.driver_name1 as driverName1,
             p.driver_phone1 as driverPhone1,
             p.driver_code2 as driverCode2,
             p.driver_name2 as driverName2,
             p.driver_phone2 as driverPhone2
         from tfr.t_Opt_Vehicleassemblebill vb
        left join tfr.t_Opt_Truck_Depart_Plan_Detail p on p.id=vb.truckdepartplandetail_id
        <where>
        	vb.state!=90  
        	AND vb.Vehicleassemble_No=#{vehicleAssembleNo}
        </where>  
	</select>
	<!-- 查询交接单、装车、发车计划相关信息 -->
	<select id="queryTaskTruckHandOverBill" resultMap="handOverDtoResultMap" parameterType="String">
		  select 
	           distinct h.handover_no as handOverBillNo,
	           REPLACE(h.handover_type,'_HANDOVER','') as handOverType,
	           h.orig_org_code as origOrgCode,
	           h.orig_org_name as origOrgName,
	           h.dest_org_code as destOrgCode,
	           h.dest_org_name as destOrgName,
	           h.vehicle_no as vehicleNo,
	           h.be_trailer_vehicleNo beTrailerVehicleNo,
	           nvl(h.be_car_load,'N') as beCarLoad,
	           h.create_time as billingTime,
	           h.load_task_no as loadTaskNo,
	           h.weight_total as weightTotal,
	           h.volume_total as volumeTotal,
	           h.GOODS_QTY_TOTAL as goodsQtyTotal,
	           h.WAYBILL_QTY_TOTAL as wayBillQtyTotal,
	           p.id as deptPlanDetailId,
	           p.line_no as lineVirtualCode,
	           p.line_name as lineName,
	           p.frequency_no as frequecyNo,
	           p.plan_depart_time as planDepartTime,
	           p.plan_arrive_time as planArriveTime,
	           p.driver_code1 as driverCode1,
	           p.driver_name1 as driverName1,
	           p.driver_phone1 as driverPhone1,
	           p.driver_code2 as driverCode2,
	           p.driver_name2 as driverName2,
	           p.driver_phone2 as driverPhone2,
	           l.loader_name as loaderName,
	           l.loader_code as loaderCode
	      from tfr.t_opt_handoverbill h
	      left join tfr.T_OPT_TRUCK_DEPART_PLAN_DETAIL p on p.id =
	                                                    h.truckdepartplandetail_id
	      left join tfr.t_opt_load_task t on t.task_no = h.load_task_no
	      left join tfr.t_opt_loader_participation l on l.task_id = t.id and l.be_creator = 'Y'
	       <where>
	       h.HANDOVERBILL_STATE != 90
	       and h.HANDOVERBILL_STATE != 10
		   and h.vehicle_no is not null
		   and <![CDATA[h.HANDOVER_TYPE not in('PARTIALLINE_HANDOVER','LDP_HANDOVER')]]>
 		   and h.handover_no = #{billNo}
	       </where>
	</select>
	<!-- 查询交接单是否建立任务车辆 -->
	<select id="queryBeCreateTruckTask" resultType="string">
		select *
		  from (select t.id
		          from tfr.t_opt_truck_task t
		         where t.vehicle_no = #{vehicleNo}
		           and t.status in ('UNDEPART', 'ONTHEWAY', 'HALFWAY_ARRIVE')
		         order by t.create_time desc)
		 where <![CDATA[rownum <= 1]]>
	</select>
	<!-- 查询交接单是否建立任务车辆明细 -->
	<select id="queryBeCreateTruckTaskDetail" resultMap="truckTaskDetailResultMap">
	select * from(
		select d.id as id,
		d.STATUS as state
  		from tfr.t_opt_truck_task_detail d
	       <where>
	       d.truck_task_id = #{truckTaskId,jdbcType=VARCHAR}
		   and d.orig_org_code = #{origOrgCode,jdbcType=VARCHAR}
		   and d.dest_org_code = #{destOrgCode,jdbcType=VARCHAR}
		   and d.status in ('UNDEPART','ONTHEWAY')
		   order by d.create_time desc)
		   where
		   <![CDATA[rownum <= 1]]>
	       </where>
	</select>
	<!-- 查询任务车辆明细相应封签ID、车辆放行ID -->
	<select id="queryVehicleSealId" resultMap="handOverDtoResultMap">
		select s.id as sealId,
		         s.truck_depart_id as truckDepartId,
		         nvl(t.pda_depart_time,t.manual_depart_time) as actualDepartTime,
		         nvl2(t.pda_depart_time,'PDA','MANUAL') as actualDepartType
		      from tfr.t_opt_seal s
		      left join tfr.T_OPT_TRUCK_DEPART t on t.id = s.truck_depart_id
	       <where>
	       s.vehicle_no=#{vehicleNo} and s.seal_state='UNCHECK' and s.seal_type!='INVALID'
	       </where>
	</select>
	
	<!-- 根据车辆任务ID查询封签 放行等ID -->
	<select id="queryVehicleSealByTaskId" resultMap="handOverDtoResultMap">
			select s.id as sealId,
		         s.truck_depart_id as truckDepartId,
		         nvl(t.pda_depart_time,t.manual_depart_time) as actualDepartTime,
		         nvl2(t.pda_depart_time,'PDA','MANUAL') as actualDepartType
		      from tfr.t_opt_seal s
		      left join tfr.T_OPT_TRUCK_DEPART t on t.id = s.truck_depart_id
	       <where>
	       		s.vehicle_no=#{vehicleNo} 
	       		and s.T_TRUCK_TASK_DETAIL_ID=#{parentId}
	       		and s.seal_state='UNCHECK' and s.seal_type!='INVALID'
	       </where>
	</select>
	<!-- 更新交接单是否建立任务车辆为是 -->
	<update id="updateTruckTaskHandOverBillState"  parameterType="HashMap">
		update tfr.t_opt_handoverbill h set 
		<if test="HANDOVERBILL_STATE != null and HANDOVERBILL_STATE != ''">
		h.HANDOVERBILL_STATE = #{HANDOVERBILL_STATE,jdbcType=VARCHAR},
		</if>
		h.be_create_tasktruck=#{beCreateTruckTask},
		h.modify_time=sysdate
		<where>
			h.handover_no=#{billNo} and <![CDATA[h.HANDOVERBILL_STATE<>'90']]>
		</where>
	</update>
	<!-- 更新封签任务车辆明细ID -->
	<update id="updateVehicleSealTruckTaskId"  parameterType="HashMap">
		update tfr.t_opt_seal s set
		<if test="vehicleNo !=null and vehicleNo != '' ">
			s.vehicle_no=#{vehicleNo},
		</if>
		 s.T_TRUCK_TASK_DETAIL_ID = #{parentId}
		<where>
			s.id =#{vehicleSealId}
		</where>
	</update>
	<!-- 更新任务车辆状态 -->
	<update id="updateTruckTaskState"  parameterType="HashMap">
		update tfr.t_opt_truck_task t set t.status = #{state},t.MODIFY_TIME=sysdate
		<where>
			t.id=#{id} and t.status = 'UNDEPART'
		</where>
	</update>
	<!-- 更新证件包任务车辆明细ID -->
	<update id="updateCertificateBagTruckTaskId"  parameterType="HashMap">
		update tfr.T_OPT_CERTIFICATEBAG_ACTION c  set c.truck_task_id=#{parentId}
		<where>
			c.certificatebag_status='0' and c.vehicle_no=#{vehicleNo}
		</where>
	</update>
	<!-- 插入任务车辆 -->
	<insert id="insertTruckTask" parameterType="HashMap" >
	insert into tfr.t_opt_truck_task
	  (id,
	   vehicle_no,
	   business_type,
	   driver_code1,
	   driver_name1,
	   driver_phone,
	   status,
	   driver_code2,
	   driver_name2,
	   create_time,
	   BE_CAR_LOAD,
	   line_name,
	   LINE_VIRTUAL_CODE,
	   MODIFY_TIME,
	   ORIG_ORG_CODE
	   )values(
	   	#{id,jdbcType=VARCHAR}, 
	   	#{vehicleNo,jdbcType=VARCHAR}, 
	   	#{businessType,jdbcType=VARCHAR}, 
	   	#{driverCode1,jdbcType=VARCHAR}, 
	   	#{driverName1,jdbcType=VARCHAR}, 
	   	#{driverPhone1,jdbcType=VARCHAR}, 
	   	#{state,jdbcType=VARCHAR}, 
	   	#{driverCode2,jdbcType=VARCHAR}, 
	   	#{driverName2,jdbcType=VARCHAR}, 
	   	sysdate,
	   	#{beCarLoad,jdbcType=VARCHAR},
	   	#{lineName,jdbcType=VARCHAR},
	   	#{lineVirtualCode,,jdbcType=VARCHAR},
	   	sysdate,
	   	#{origOrgCode,jdbcType=VARCHAR}
	   )
	</insert>
	<!-- 插入任务车辆明细 -->
	<insert id="insertTruckTaskDetail" parameterType="HashMap" >
		insert into tfr.t_opt_truck_task_detail
		  (id,
		   truck_task_id,
		   vehicle_no,
		   LINE_NAME,
           LINE_VIRTUAL_CODE,
           FREQUENCY_NO,
		   business_type,
		   orig_org_code,
		   dest_org_code,
		   status,
		   create_time,
		   truck_type,
		   plan_depart_time,
		   plan_arrive_time,
		   <if test="actualDepartTime != null and actualDepartTime != ''">
		  	 ACTUAL_DEPART_TIME,
			</if>
			<if test="actualArriveTime != null and actualArriveTime != ''">
		  	 ACTUAL_ARRIVE_TIME,
			</if>
			ACTUAL_DEPART_TYPE,
		   orig_org_name,
		   dest_org_name,
		   vehicle_seal_id,
		   TRUCK_DEPART_ID,
		   BE_CAR_LOAD,
		   LOADER_NAME,
		   LOADER_CODE,
		   VEHICLE_ORG_CODE,
		   VEHICLE_ORG_NAME,
		   VEHICLE_OWNER_TYPE, 
		   RUNING_TIMES,
		   MODIFY_TIME,
		   trailer_VehicleNo,
		   creater)values(
	   	#{id,jdbcType=VARCHAR}, 
	   	#{parentId,jdbcType=VARCHAR}, 
	   	#{vehicleNo,jdbcType=VARCHAR}, 
	   	#{lineName,jdbcType=VARCHAR}, 
	   	#{lineVirtualCode,jdbcType=VARCHAR}, 
	   	#{frequecyNo,jdbcType=VARCHAR}, 
	   	#{businessType,jdbcType=VARCHAR}, 
	   	#{origOrgCode,jdbcType=VARCHAR}, 
	   	#{destOrgCode,jdbcType=VARCHAR}, 
	   	#{state,jdbcType=VARCHAR}, 
	   	sysdate, 
	   	#{truckType,jdbcType=VARCHAR}, 
	   	#{planDepartTime,jdbcType=TIMESTAMP}, 
	   	#{planArriveTime,jdbcType=TIMESTAMP},
	   	<if test="actualDepartTime != null and actualDepartTime != ''">
	   		#{actualDepartTime,jbdcType=TIMESTAMP},
	   	</if>
	   	<if test="actualArriveTime != null and actualArriveTime != ''">
	   		#{actualArriveTime,jbdcType=TIMESTAMP},
	   	</if>
	   	#{actualDepartType,jdbcType=VARCHAR},
	   	#{origOrgName,jdbcType=VARCHAR}, 
	   	#{destOrgName,jdbcType=VARCHAR}, 
	   	#{vehicleSealId,jdbcType=VARCHAR},
	   	#{truckDepartId,jdbcType=VARCHAR},
	   	#{beCarLoad,jdbcType=VARCHAR},
	   	#{loaderName,jdbcType=VARCHAR},
	   	#{loaderCode,jdbcType=VARCHAR},
	   	#{vehicleOrgCode,jdbcType=VARCHAR},
	   	#{vehicleOrgName,jdbcType=VARCHAR},
	   	#{vehicleOwnerType,jdbcType=VARCHAR},
	   	#{runingTimes},
	   	sysdate,
	   	#{trailerVehicleNo,jdbcType=VARCHAR},
	   	#{creater,jdbcType=VARCHAR}
	   )
	</insert>
	<!-- 插入任务车辆单据 -->
	<insert id="insertTruckTaskBill" parameterType="HashMap" >
		insert into tfr.t_opt_truck_task_bill
  		(id, truck_task_detail_id, bill_level, bill_type, bill_no, assign_state,LOAD_TASK_NO,BILLING_TIME,create_time)
		values(
	   	#{id,jdbcType=VARCHAR}, 
	   	#{parentId,jdbcType=VARCHAR}, 
	   	#{billLevel,jdbcType=VARCHAR}, 
	   	#{billType,jdbcType=VARCHAR}, 
	   	#{billNo,jdbcType=VARCHAR}, 
	   	#{assignState,jdbcType=VARCHAR},
	   	#{loadTaskNo,jdbcType=VARCHAR}, 
	   	#{billingTime,jdbcType=TIMESTAMP},
	   	#{createTime,jdbcType=TIMESTAMP}
	   )
	</insert>
	<!-- 插入待跟踪GPS列表 -->
	<insert id="insertTruckGSPTask" parameterType="HashMap" >
		insert into tfr.t_opt_truck_gps_task
		  (id,
		   truck_task_detail_id,
		   vehicle_no,
		   gps_device_no,
		   orig_org_code,
		   dest_org_code,
		   OPERATE_TYPE,
		   BE_SUCCESS,
		   SYN_BE_SUCCESS)
		values(
	   	#{id,jdbcType=VARCHAR}, 
	   	#{truckTaskDetailId,jdbcType=VARCHAR}, 
	   	#{vehicleNo,jdbcType=VARCHAR}, 
	   	#{gpsDeviceNo,jdbcType=VARCHAR}, 
	   	#{origOrgCode,jdbcType=VARCHAR}, 
	   	#{destOrgCode,jdbcType=VARCHAR},
	   	#{operateType,jdbcType=VARCHAR},
	   	#{beSuccess,jdbcType=VARCHAR},
	   	#{beSuccess,jdbcType=VARCHAR}
	   )
	</insert>
	<!-- 配载单部分 -->
	<!-- 查询未生成任务车辆配载单 -->
	<select id="queryUnCreateTruckTaskAssembleBill" resultMap="handOverDtoResultMap">
		select distinct a.vehicleassemble_no as handOverBillNo,
                d.id                 as truckTaskDettailId,
                a.create_time        as billingTime,
                a.fee_total as feeTotal,
                d.truck_task_id as truckTaskId,
                a.vehicle_no as vehicleNo,
                d.actual_depart_time as actualDepartTime
	       from tfr.t_opt_vehicleassemblebill a
	       inner join tfr.t_opt_vehicleassemble_detail ad on ad.vehicleassemblebill_id = a.id
	       inner join tfr.t_opt_truck_task_bill b on b.bill_no = ad.handover_no
	       inner join tfr.t_opt_truck_task_detail d on d.id = b.truck_task_detail_id
	       <where>
	        d.status != 'CANCLED'
	        and d.id is not null
	        and a.be_create_tasktruck = 'N'
	        and a.state != '90'
	        <if test="billNo != null and billNo != ''">
	        and a.vehicleassemble_no = #{billNo}
	        </if>
		   and ORA_HASH(a.id, #{threadCount}-1) = #{threadNo}
		   <if test="bizJobStartTime != null and bizJobStartTime != ''">
		   and <![CDATA[a.MODIFY_TIME >= #{bizJobStartTime,jdbcType=TIMESTAMP} ]]>
		   </if>
		   <if test="bizJobEndTime != null and bizJobEndTime != ''">
 		   and <![CDATA[a.MODIFY_TIME <= #{bizJobEndTime,jdbcType=TIMESTAMP} ]]>
 		   </if>
	       </where>
	</select>
	<!-- 更新配载单是否生成任务车辆为是 -->
	<update id="updateTruckTaskAssembleBillState"  parameterType="HashMap">
		update tfr.t_opt_vehicleassemblebill a set 
		<if test="state != null and state != ''">
		a.state = #{state},
		</if>  
		a.be_create_tasktruck = #{beCreateTruckTask}
		<where>
			a.vehicleassemble_no = #{billNo} and <![CDATA[a.state<>'90']]>
		</where>
	</update>
	<!-- 修改配载单中交接单的单据级别 -->
	<update id="updateTruckTaskBillBillLevel"  parameterType="HashMap">
		 update tfr.t_opt_truck_task_bill b
           set b.bill_level = #{billLevel}  
		<where>
		exists (select ad.handover_no
          from tfr.t_opt_vehicleassemble_detail ad
          left join tfr.t_opt_vehicleassemblebill a on a.id =
                                                       ad.vehicleassemblebill_id
         where a.vehicleassemble_no = #{billNo}
           and ad.handover_no = b.bill_no)
		</where>
	</update>
	<!-- 删除交接单、配载单部分 -->
	<!-- 根据交接单查询任务车辆ID，任务车辆明细ID -->
	<select id="queryTruckTaskIdByHandOverBill" resultMap="handOverDtoResultMap">
			select d.id as truckTaskDettailId, d.truck_task_id as truckTaskId, g.id as truckGPSTaskId ,d.VEHICLE_NO	vehicleNo
			,d.ORIG_ORG_CODE origOrgCode
			  from tfr.t_opt_truck_task_bill b
			  inner join tfr.t_opt_truck_task_detail d on b.truck_task_detail_id = d.id
			  left join tfr.t_opt_truck_gps_task g on g.truck_task_detail_id = d.id
	       <where>
	       	b.bill_no = #{handOverBillNo} and  d.status != 'CANCLED'
	       </where>
	</select>
	<select id="queryTruckTaskAndDetail" resultMap="handOverDtoResultMap" parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.TruckTaskDetailEntity">
		 	select td.truck_task_id truckTaskId,
               td.id            truckTaskDettailId,
               g.id             truckGPSTaskId
          from tfr.t_opt_truck_task_detail td
          left join tfr.t_opt_truck_gps_task g on g.truck_task_detail_id = td.id
			where td.status in ('UNDEPART','ONTHEWAY') 
				and td.vehicle_no = #{vehicleNo,jdbcType=VARCHAR}
				and td.orig_org_code=#{origOrgCode,jdbcType=VARCHAR}
				and td.dest_org_code=#{destOrgCode,jdbcType=VARCHAR}              
	</select>
	<!-- 查询装车任务中单据数 -->
	<select id="queryBillCountByTruckTask" resultType="int">
			select count(b.id)
			  from tfr.t_opt_truck_task_bill b
			  inner join tfr.t_opt_truck_task_detail d on d.id = b.truck_task_detail_id
	       <where>
	       		d.truck_task_id = #{truckTaskId}
	       </where>
	</select>
	<!-- 查询装车任务中单据数 -->
	<select id="selectBillForUpdateByTruckTaskId" resultType="String">
			select *
			  from tfr.t_opt_truck_task_bill b
			  inner join tfr.t_opt_truck_task_detail d on d.id = b.truck_task_detail_id
	       <where>
	       		d.truck_task_id = #{truckTaskId} for update wait 3
	       </where>
	</select>
	<!-- 查询装车任务明细中单据数 -->
	<select id="queryBillCountByTruckTaskDetail" resultType="int">
			select count(b.id)
  				from tfr.t_opt_truck_task_bill b
	       <where>
	       		b.truck_task_detail_id = #{truckTaskDetailId}
	       </where>
	</select>
	<!-- 删除任务车辆 -->
	<update id="deleteTruckTask"  parameterType="String">
		update tfr.t_opt_truck_task t set t.status='CANCLED',t.MODIFY_TIME=sysdate
		<where>
          t.id = #{truckTaskId}
		</where>
	</update>
	<!-- 删除任务车辆明细 -->
	<update id="deleteTruckTaskDetail"  parameterType="String">
		update tfr.t_opt_truck_task_detail t set t.status='CANCLED',t.modify_time = sysdate
		<where>
          t.id = #{truckTaskDetailId}
		</where>
	</update>
	<!-- 删除GPS待跟踪车辆 -->
	<update id="deleteTruckGPSTask"  parameterType="String">
		update tfr.t_opt_truck_gps_task g 
		set g.operate_type = '1',
		g.be_success = 'N',
		g.times = 0 <!-- 操作类型：新增：0，删除：1,同时将成功状态设置为N，上传次数为0，以避免不能上传至GPS -->
		<where>
          g.id = #{truckGPSTaskId}
		</where>
	</update>
	
	<!-- 更新GPS是否同步成功 -->
	<update id="updateTruckGPSTask"  parameterType="HashMap">
		update tfr.t_opt_truck_gps_task g set g.be_success = #{beSuccess}
		<where>
          g.id = #{id}
		</where>
	</update>
	<!-- 更新GPS是否同步次数 -->
	<update id="updateTruckGPSTaskTimes"  parameterType="String">
		update tfr.t_opt_truck_gps_task g set g.times = g.times + 1
		<where>
          g.id = #{id}
		</where>
	</update>
	
	<!-- 更新GPS是否同步成功 -短途-->
	<update id="updateTruckShortGPSTask"  parameterType="HashMap">
		update tfr.t_opt_truck_gps_task g set g.syn_be_success = #{beSuccess}
		<where>
          g.id = #{id}
		</where>
	</update>
	<!-- 更新GPS是否同步次数 -短途 -->
	<update id="updateTruckShortGPSTaskTimes"  parameterType="String">
		update tfr.t_opt_truck_gps_task g set g.syntimes = g.syntimes + 1
		<where>
          g.id = #{id}
		</where>
	</update>
	
	<!-- 删除任务车辆单据 -->
	<delete id="deleteTruckTaskBill"  parameterType="String">
		delete tfr.t_opt_truck_task_bill b
		<where>
           b.bill_no = #{billNo}
		</where>
	</delete>
	<!-- 配载单中增加/删除交接单 -->
	<!-- 根据交接单号修改交接单的单据级别 -->
	<update id="updateTruckTaskBillBillLevelByHandOverBill"  parameterType="HashMap">
		 update tfr.t_opt_truck_task_bill b set b.bill_level = #{billLevel}  
		<where>
           b.bill_no = #{billNo}
		</where>
	</update>
	<!-- 根据配载单查询交接单 -->
	<select id="queryTruckTaskByAssembleNo" resultMap="truckTaskResultMap">
		 select t.id as id,t.charging_assmeble_no as chargingAssembleNo from tfr.t_opt_truck_task t
			 inner join tfr.t_opt_truck_task_detail d on d.truck_task_id = t.id
			 inner join tfr.t_opt_truck_task_bill b on b.truck_task_detail_id = d.id
			<where>
				 t.status != 'CANCLED' and d.status != 'CANCLED' and b.bill_No= #{billNo}
	       </where>
	</select>
	<!-- 新增、删除配载单时修改任务车辆中费用配载单号 -->
	<update id="updateChargingAssembleNo"  parameterType="HashMap">
		 update tfr.t_opt_truck_task t set t.charging_assmeble_no = #{chargingAssembleNo,jdbcType=VARCHAR},t.MODIFY_TIME=sysdate
		<where>
           t.id = #{id}
		</where>
	</update>
	<!-- 推送到营业部交接单信息 -->
	<select id="queryHandOverMsg" resultMap="handOverMsgResultMap">
		 select h.handover_no as handOverNo,
		       h.driver_name as driver,
		       h.driver_mobile_phone as driverPhone,
		       h.vehicle_no as vehicleNo,
		       h.orig_org_name as origOrgName,
		       h.waybill_qty_total as wayBillQtyTotal,
		       h.fast_waybill_qty as fastWayBillQtyToal,
		       h.volume_total as vulomeTotal,
		       h.weight_total as weigtTotal,
		       h.money_total as moneyTotal,
		       h.dest_org_code as destOrigCode,
		       h.CREATE_USER_CODE as creatorCode,
		       d.actual_depart_time as departTime
		  from tfr.t_opt_handoverbill h
		  left join tfr.t_opt_truck_task_bill b on b.bill_no = h.handover_no
		  left join tfr.t_opt_truck_task_detail d on d.id = b.truck_task_detail_id
		<where>
			d.status != 'CANCLED'
   			and h.handover_no = #{handOverBillNo}
	    </where>
	</select>
	
	<!-- 接送货接口：根据运单号、流水号查询在途交接单出发部门编码，到达部门编码 -->
	<select id = "queryOnTheWayHandOverBillBySerialNo" resultMap="foss.load.handoverbill.queryHandOverBillResultMap" parameterType="HashMap">
	select * from (
		select h.orig_org_code as departDeptCode, h.dest_org_code as arriveDeptCode
		  from tfr.t_opt_handoverbill h
		  inner join tfr.t_opt_handoverbill_serialno hs on hs.handoverbill_no =
		                                                  h.handover_no
	   <where>                                              
		   h.handoverbill_state in 
			<foreach 
				collection="states" open="(" close=")" item="item" separator="," index="index"> 
				#{item} 
			</foreach>
		   and hs.waybill_no = #{wayBillNo}
		   and hs.serial_no = #{serialNo}
		   <![CDATA[order by h.create_time desc]]>
	   </where> 
	   )
       <![CDATA[where rownum<=1]]>
	</select>

	<!-- 查询未修改走货路径交接单 -->
	<select id = "queryUnUpdateTransportPathHandOverBill" resultMap="foss.load.handoverbill.handOverBillDtoResultMap">
		select h.modify_time modifyDate,
		   h.orig_org_code as origOrgCode,
	       h.dest_org_code as destOrgCode, 
	       h.handover_no as handOverBillNo,
	       h.vehicle_no as vehicleNo,
	       hd.waybill_no as waybillNo,
	       hd.handover_goods_qty as pieces,
	       hd.be_join_car as beJoinCar,
	       hd.transport_type_code as transPropertyCode,
	       h.driver_mobile_phone as driverPhone,
	       h.driver_name as driverName,
	       h.create_user_code as creatorCode,
	       w.customer_pickup_org_code     as receiveOrgCode
	  from tfr.t_opt_handoverbill h
	 inner join tfr.t_opt_handoverbill_detail hd on hd.handover_no = h.handover_no
	 inner join pkp.t_srv_waybill w on w.waybill_no = hd.waybill_no and w.active = 'Y'
		<where>
			<![CDATA[h.handoverbill_state <> '10']]>
		   <![CDATA[and h.handoverbill_state <> '90']]>
		   <![CDATA[and h.BE_UPDATE_PATH='N']]>
		   and ORA_HASH(h.id, #{threadCount}-1) = #{threadNo}
		   and <![CDATA[h.MODIFY_TIME >= #{bizJobStartTime,jdbcType=TIMESTAMP} ]]>
	       and <![CDATA[h.MODIFY_TIME < #{bizJobEndTime,jdbcType=TIMESTAMP} ]]>
	       and h.is_init='N'
	       <![CDATA[ and rownum<5000]]>
	       <![CDATA[order by h.MODIFY_TIME]]>
		</where>
	</select> 
	
	<!--校验车牌号是否可用：对于指定的车牌号，存在有出发部门不是本部门、且车辆未出发的记录，则本部门不能使用该车牌号。-->
	<select id="queryUndepartRecByVehicleNo" parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.TruckTaskDetailEntity"
			resultType="java.lang.String">
		select 
			td.orig_org_name
			 from tfr.t_opt_truck_task_detail td where td.vehicle_no = #{vehicleNo}
			 and td.orig_org_code != #{origOrgCode}
			 and td.status = #{state}
			 and (td.IS_INIT != 'Y' or td.IS_INIT is null)
	</select>
	<!-- 新增、删除配载单时修改任务车辆中费用配载单号 -->
	<update id="updateHandOverBeUpdateTransportPath"  parameterType="String">
		 update tfr.t_opt_handoverbill h set h.BE_UPDATE_PATH = 'Y',h.modify_time=sysdate
		<where>
           h.HANDOVER_NO = #{handOverBillNo}
		</where>
	</update>
	<!-- 更新车辆任务明细信息 -->
	<update id="updateTruckTaskDetail" parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.TruckTaskDetailEntity">
		update tfr.t_opt_truck_task_detail td set td.trailer_vehicleno=#{trailerVehicleNo} ,td.modify_time=sysdate 
		<where>
			td.id=#{id}
		</where> 
	</update>
	<!--校验车牌号是否可用：对于指定的车牌号，存在有出发部门不是本部门、且车辆未出发的记录，则本部门不能使用该车牌号。-->
	<select id="queryLastedCreateTruckTaskBill" parameterType="HashMap"
			resultType="java.lang.String">
		select tb.id
		  from tfr.t_opt_truck_task_detail td
		 inner join tfr.t_opt_truck_task_bill tb on tb.truck_task_detail_id = td.id
		 where td.truck_task_id = #{taskId}
		 <if test="origCode != null and origCode != ''">
		   and td.orig_org_code = #{origCode}
		 </if>
		 <if test="DestCode != null and DestCode != ''">
		   and td.dest_org_code = #{DestCode}
		 </if>
		   <![CDATA[and tb.create_time >= sysdate - 7
		   and rownum <= 1]]>
	</select>
	<!-- 根据任务明细id查询交接单信息 -->
	<select id="queryhandOverBillBytruckDetailId" parameterType="String"
			resultMap="handOverDtoResultMap">
		 SELECT H.HANDOVER_NO handOverBillNo,
           H.GOODS_QTY_TOTAL goodsQtyTotal,
           H.WAYBILL_QTY_TOTAL wayBillQtyTotal,
           H.WEIGHT_TOTAL weightTotal,
           H.VOLUME_TOTAL volumeTotal
      FROM TFR.T_OPT_TRUCK_TASK_BILL B
      INNER  JOIN TFR.T_OPT_HANDOVERBILL H
        ON H.HANDOVER_NO = B.BILL_NO
     WHERE B.TRUCK_TASK_DETAIL_ID = #{truckDetailId}
	</select>
	<select id="queryTruckTaskDetail" parameterType="String" resultMap="truckTaskDetailResultMap">
		select   
		  td.ID                      id,
		  td.TRUCK_TASK_ID           parentId,
		  td.VEHICLE_NO              vehicleNo,
		  td.LINE_NAME               lineName,
		  td.BUSINESS_TYPE           businessType,
		  td.ORIG_ORG_CODE           origOrgCode,
		  td.DEST_ORG_CODE           destOrgCode,
		  td.STATUS                  state,
		  td.CREATE_TIME             createTime,
		  td.TRUCK_DEPART_ID         truckDepartId,
		  td.TRUCK_ARRIVE_ID         truckArriveId,
		  td.TRUCK_TYPE              truckType,
		  td.PLAN_DEPART_TIME        planDepartTime,
		  td.ACTUAL_DEPART_TIME      actualDepartTime,
		  td.PLAN_ARRIVE_TIME        planArriveTime,
		  td.ACTUAL_ARRIVE_TIME      actualArriveTime,
		  td.ORIG_ORG_NAME           origOrgName,
		  td.DEST_ORG_NAME           destOrgName,
		  td.VEHICLE_SEAL_ID         vehicleSealId,
		  td.BE_CAR_LOAD             beCarLoad,
		  td.VEHICLE_ORG_CODE        vehicleOrgCode,
		  td.VEHICLE_ORG_NAME        vehicleOrgName,
		  td.VEHICLE_OWNER_TYPE      vehicleOwnerType,
		  td.LOADER_NAME             loaderName,
		  td.LOADER_CODE             loaderCode,
		  td.ACTUAL_DEPART_TYPE      actualDepartType,
		  td.MANUAL_DEPART_TIME      manualDepartTime,
		  td.MANUAL_ARRIVE_TIME      manualArriveTime,
		  tb.BILL_LEVEL              billLevel,
		  tb.BILL_TYPE               billType
		  from tfr.t_Opt_Truck_Task_Detail td 
		  left join tfr.t_opt_truck_task_bill tb on tb.truck_task_detail_id=td.id
		  <where>
		  	td.status!='CANCLED'
		  	and tb.bill_no=#{billNo}
		  </where> 
	</select>
	<select id="queryTruckTaskDetailAndBill" resultType="java.lang.String" parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.TruckTaskDetailEntity">
		select   
	      tb.bill_no
	      from tfr.t_Opt_Truck_Task_Detail td 
	      inner join tfr.t_Opt_Truck_Task_Bill tb on tb.truck_task_detail_id=td.id
	     
	     
	      and td.business_type='LONG_DISTANCE'
	      <where>
		      td.vehicle_no=#{vehicleNo}
		       and tb.bill_type='VEHICLEASSEMBLE'
		       
		      <if test="destOrgCode!=null and destOrgCode!=''">
			      and td.dest_org_code=#{destOrgCode}
		      </if>
		      <if test="state!=null and state!=''">
			      and td.status=#{state}
		      </if>
		      <if test="businessType!=null and businessType!=''">
		      	 and td.business_type=#{businessType}
		      </if>
	      </where> 
	</select>
	
	
	
	
	<!-- 查询快递系统同步的未生成车辆任务的交接单信息 -->
	<select id="queryUnCreateTaskTruckHandOverForWk" resultMap="handOverDtoResultMap">
	   select 
	           distinct h.HANDOVERBILLNO as handOverBillNo,
	           REPLACE(h.HANDOVERTYPE,'_HANDOVER','') as handOverType,
	           h.DEPARTORGCODE as origOrgCode,
	           h.DEPARTORGNAME as origOrgName,
	           h.ARRIVEORGCODE as destOrgCode,
	           h.ARRIVEORGNAME as destOrgName,
	           h.VEHICLENO as vehicleNo,
	           /*需要添加字段*/
	           'N' beTrailerVehicleNo,
	            /*需要添加字段*/
	           'N' as beCarLoad,
	           h.CREATETIME as billingTime,
	           h.LOADTASKNO as loadTaskNo,
	           h.TOTALWEIGHT as weightTotal,
	           h.TOTALVOLUMN as volumeTotal,
	            /*总件数确认*/
	           h.TOTALQTY as goodsQtyTotal,
	           h.TOTALQTY as wayBillQtyTotal,
	           p.id as deptPlanDetailId,
	           p.line_no as lineVirtualCode,
	           p.line_name as lineName,
	           p.frequency_no as frequecyNo,
	           p.plan_depart_time as planDepartTime,
	           p.plan_arrive_time as planArriveTime,
	           p.driver_code1 as driverCode1,
	           p.driver_name1 as driverName1,
	           p.driver_phone1 as driverPhone1,
	           p.driver_code2 as driverCode2,
	           p.driver_name2 as driverName2,
	           p.driver_phone2 as driverPhone2,
	           l.loader_name as loaderName,
	           l.loader_code as loaderCode
	      from tfr.t_wk_trf_bill h
	      left join tfr.T_OPT_TRUCK_DEPART_PLAN_DETAIL p 
	      	on p.id =h.TRUCKPLANID
	      left join tfr.t_opt_load_task t 
	      	on t.task_no = h.LOADTASKNO
	      left join tfr.t_opt_loader_participation l 
	      	on l.task_id = t.id and l.be_creator = 'Y'
	       <where>
	       /*h.HANDOVERBILL_STATE != 90
	       and h.HANDOVERBILL_STATE != 10*/
		   h.VEHICLENO is not null
		   and h.BECREATETRUCKTASK = 'N'
		   and h.HANDOVERSTATE!='HAVE_CANLE'
		   and <![CDATA[h.HANDOVERTYPE not in('PARTIALLINE_HANDOVER','LDP_HANDOVER','AIR_TRANS_HANDOVER')]]>
		   <if test="billNo != null and billNo != ''">
 		   and h.HANDOVERBILLNO = #{billNo}
 		   </if>
	       </where>
	</select>
	
	
	<!--根据主键查询单据信息 -->
	<select id="queryTruckTaskBillById" parameterType="String" resultType="com.deppon.foss.module.transfer.load.api.shared.domain.TruckTaskBillEntity">
		SELECT 
			ID		id,
			TRUCK_TASK_DETAIL_ID	parentId,
			BILL_LEVEL	billLevel,
			BILL_TYPE	billType,
			BILL_NO		billNo,
			ASSIGN_STATE	assignState,
			LOAD_TASK_NO	loadTaskNo,
			BILLING_TIME	billingTime,
			CREATE_TIME		createTime
		FROM		
			TFR.T_OPT_TRUCK_TASK_BILL TB
		WHERE
			TB.ID=#{truckTaskBillId}
	</select>
	<!--根据单据编号查询单据信息 -->
	<select id="queryTruckTaskBillByBillNo" parameterType="String" resultType="com.deppon.foss.module.transfer.load.api.shared.domain.TruckTaskBillEntity">
		SELECT 
			ID		id,
			TRUCK_TASK_DETAIL_ID	parentId,
			BILL_LEVEL	billLevel,
			BILL_TYPE	billType,
			BILL_NO		billNo,
			ASSIGN_STATE	assignState,
			LOAD_TASK_NO	loadTaskNo,
			BILLING_TIME	billingTime,
			CREATE_TIME		createTime
		FROM		
			TFR.T_OPT_TRUCK_TASK_BILL TB
		WHERE
			TB.BILL_NO=#{billNo}
	</select>
	
	<!--根据车辆任务明细编号 -->
	<select id="queryTruckTaskBillByDetailNo" parameterType="String" resultType="com.deppon.foss.module.transfer.load.api.shared.domain.TruckTaskBillEntity">
		SELECT 
			ID		id,
			TRUCK_TASK_DETAIL_ID	parentId,
			BILL_LEVEL	billLevel,
			BILL_TYPE	billType,
			BILL_NO		billNo,
			ASSIGN_STATE	assignState,
			LOAD_TASK_NO	loadTaskNo,
			BILLING_TIME	billingTime,
			CREATE_TIME		createTime
		FROM		
			TFR.T_OPT_TRUCK_TASK_BILL TB
		WHERE
			TB.TRUCK_TASK_DETAIL_ID=#{parentId}
	</select>
	
	
	<!--根据主键查询车辆任务详细信息-->
	<select id="queryTruckTaskDetailById" parameterType="String" resultType="com.deppon.foss.module.transfer.load.api.shared.domain.TruckTaskDetailEntity">
		  SELECT
      td.ID  id,
      td.TRUCK_TASK_ID  parentId,
      td.VEHICLE_NO    vehicleNo,
      td.LINE_NAME    lineName,
      td.BUSINESS_TYPE  businessType,
      td.ORIG_ORG_CODE  origOrgCode,
      td.DEST_ORG_CODE  destOrgCode,
      td.STATUS      state,
      td.CREATE_TIME    createTime,
      td.TRUCK_DEPART_ID  truckDepartId,
      td.TRUCK_ARRIVE_ID  truckArriveId,
      td.TRUCK_TYPE    truckType,
      td.PLAN_DEPART_TIME  planDepartTime,    
      td.ACTUAL_DEPART_TIME  actualDepartTime,  
      td.PLAN_ARRIVE_TIME  planArriveTime,
      td.ACTUAL_ARRIVE_TIME  actualArriveTime,
      td.ORIG_ORG_NAME    origOrgName,
      td.DEST_ORG_NAME    destOrgName,
      td.VEHICLE_SEAL_ID    vehicleSealId,
      td.BE_CAR_LOAD      beCarLoad,
      td.VEHICLE_ORG_CODE  vehicleOrgCode,
      td.VEHICLE_ORG_NAME  vehicleOrgName,
      td.VEHICLE_OWNER_TYPE  vehicleOwnerType,
      td.LOADER_NAME      loaderName,
      td.LOADER_CODE      loaderCode,
      td.ACTUAL_DEPART_TYPE  actualDepartType,
      td.FREQUENCY_NO    frequecyNo,
      td.LINE_VIRTUAL_CODE  lineVirtualCode,  
      td.MANUAL_DEPART_TIME  manualDepartTime,
      td.MANUAL_ARRIVE_TIME  manualArriveTime,
      td.TRAILER_VEHICLENO  trailerVehicleNo,
      td.CREATER  creater,
      td.MODIFY_TIME modifyTime,
      td.ACTUAL_ARRIVE_TYPE acrualArriveType,
      /*
      td.MANUAL_DEPART_USER_CODE  manualDepartUserCode,
      td.MANUAL_DEPART_USER_NAME  manualDepartUserName,*/
      td.MANUAL_DEPART_ORG_CODE  manualDepartOrgCode,
      td.MANUAL_DEPART_ORG_NAME  manualDepartOrgName,
      nvl(ar.manual_arrive_user_code,ar.pda_arrive_user_code) manualArriveUserCode,
            nvl(de.manual_depart_user_code,de.pda_depart_user_code) manualDepartUserCode      
    FROM
      TFR.T_OPT_TRUCK_TASK_DETAIL td
    left join tfr.t_opt_truck_arrive ar 
           on ar.id = td.truck_arrive_id
    left join tfr.t_opt_truck_depart de 
           on de.id = td.truck_depart_id    
		WHERE
			td.ID=#{truckTaskDetailId}
	</select>
	
	<!--根据主键查询车辆任务主表信息 -->
	<select id="queryTruckTaskById" parameterType="String" resultType="com.deppon.foss.module.transfer.load.api.shared.domain.TruckTaskEntity">
		SELECT  
			ID id,
		    VEHICLE_NO  vehicleNo,
		    BUSINESS_TYPE  businessType,
		    DRIVER_CODE1  driverCode1,
		    DRIVER_NAME1  driverName1,
		    DRIVER_PHONE  driverPhone1,
		    STATUS      state,
		    DRIVER_CODE2  driverCode2,
			DRIVER_NAME2	driverName2,
			CREATE_TIME		createTime,
			BE_CAR_LOAD		beCarLoad,
			CHARGING_ASSMEBLE_NO	chargingAssembleNo,
			LINE_VIRTUAL_CODE	lineVirtualCode,
			LINE_NAME	lineName,
			MODIFY_TIME	modifyTime,
			ORIG_ORG_CODE origOrgCode
		FROM	
			TFR.T_OPT_TRUCK_TASK tt
		WHERE
			tt.ID=#{truckTaskId}
	</select>
	
	<!--更新 快递交接单是否生成车辆任务状态-->
	<update id="updateHandOverBillStateWk"  parameterType="HashMap">
		update tfr.t_wk_trf_bill h set 
    	h.BECREATETRUCKTASK=#{beCreateTruckTask},
    	<if test="vehilceNo != null and vehilceNo != ''">
 		   h.vehicleno = #{vehilceNo},
	    </if>
    	h.UPDATETIME=sysdate
    	<where>
      	h.HANDOVERBILLNO=#{billNo}
		</where>
	</update>
	
</mapper>