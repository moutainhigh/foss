<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="foss.unload.unloadtask" >
	<resultMap id="handOverAndUnloadResultMap"
			type="com.deppon.foss.module.transfer.unload.api.shared.dto.HandOverAndUnloadDto">
			<result property="handOverNo" column="handOverNo" />
			<result property="wayBillNo" column="wayBillNo" />
			<result property="origOrgCode" column="origOrgCode" />
			<result property="destOrgCode" column="destOrgCode" />
			<result property="destOrgName" column="destOrgName" />
			<result property="origOrgName" column="origOrgName" />
			<result property="handOverQty" column="handOverQty" />
			<result property="unloadQty" column="unloadQty" />
	</resultMap>
	
	<!-- 用于新增卸车任务时，快速添加功能，根据车牌号获取待卸单据编号及单据类型 -->
	<resultMap id="queryArrivedBillNoListResultMap"
		type="com.deppon.foss.module.transfer.unload.api.shared.dto.QueryArrivedBillNoDto">
		<result property="vehicleNo" column="vehicleNo" />
		<result property="platformCode" column="platformCode" />
		<result property="billType" column="billType" />
		<result property="billNo" column="billNo" />
		<result property="truckTaskId" column="truckTaskId"/>
	</resultMap>
	
	<!-- 用于新增卸车任务时，根据单据编号获取单据信息 -->
	<resultMap id="queryArrivedBillInfoResultMap"
		type="com.deppon.foss.module.transfer.unload.api.shared.dto.PlanUnloadBillDto">
		<result property="vehicleNo" column="vehicleNo" />
		<result property="billNo" column="billNo" />
		<result property="billType" column="billType" />
		<result property="handOverType" column="handOverType" />
		<result property="volume" column="volume" />
		<result property="weight" column="weight" />
		<result property="waybillTotal" column="waybillTotal" />
		<result property="pieces" column="pieces" />
		<result property="orgCode" column="orgCode" />
		<result property="expressArriveCode" column="expressArriveCode" />
	</resultMap>
	
	<!-- 用于修改卸车任务时，根据卸车任务id获取其下单据列表 -->
	<resultMap id="queryBillDetailListResultMap"
		type="com.deppon.foss.module.transfer.unload.api.shared.domain.UnloadBillDetailEntity">
		<result property="vehicleNo" column="vehicleNo" />
		<result property="billNo" column="billNo" />
		<result property="billType" column="billType" />
		<result property="volume" column="volume" />
		<result property="weight" column="weight" />
		<result property="waybillTotal" column="waybillTotal" />
		<result property="pieces" column="pieces" />
		<result property="orgCode" column="orgCode" />
		<result property="expressArriveCode" column="expressArriveCode" />
	</resultMap>
	
	<!--卸车任务基本信息ResultMap-->
	<resultMap id="unloadTaskResultMap" type="com.deppon.foss.module.transfer.unload.api.shared.domain.UnloadTaskEntity" >
		<id column="id" property="id" />
		<result column="unloadTaskNo" property="unloadTaskNo" />
		<result column="planCompleteTime" property="planCompleteTime" />
		<result column="vehicleNo" property="vehicleNo" />
		<result column="platformNo" property="platformNo" />
		<result column="platformId" property="platformId" />
		<result column="unloadStartTime" property="unloadStartTime" />
		<result column="unloadEndTime" property="unloadEndTime" />
		<result column="taskState" property="taskState" />
		<result column="unloadType" property="unloadType" />
		<result column="unloadWay" property="unloadWay" />
		<result column="unloadOrgCode" property="unloadOrgCode" />
		<result column="unloadOrgName" property="unloadOrgName" />
		<result column="beException" property="beException" />
		<result column="exceptionNotes" property="exceptionNotes" />
	</resultMap>
	
	<!--卸车员参与情况ResultMap-->
	<resultMap id="queryLoaderResultMap" type="com.deppon.foss.module.transfer.load.api.shared.domain.LoaderParticipationEntity" >
		<id column="id" property="id" />
		<result column="loaderName" property="loaderName" />
		<result column="loaderCode" property="loaderCode" />
	</resultMap>
	
	<!--卸车任务运单明细ResultMap-->
	<resultMap id="unloadTaskWaybillDetailResultMap" type="com.deppon.foss.module.transfer.unload.api.shared.domain.UnloadWaybillDetailEntity" >
		<id column="id" property="id" />
		<result column="unloadTaskId" property="unloadTaskId" />
		<result column="billNo" property="billNo" />
		<result column="waybillNo" property="waybillNo" />
		<result column="handOverBillNo" property="handOverBillNo" />
		<result column="volume" property="volume" />
		<result column="weight" property="weight" />
		<result column="operationGoodsQty" property="operationGoodsQty" />
		<result column="scanGoodsQty" property="scanGoodsQty" />
		<result column="handOverPieces" property="handOverPieces" />
		<result column="origOrgCode" property="origOrgCode" />
		<result column="destOrgCode" property="destOrgCode" />
		<result column="goodsName" property="goodsName" />
		<result column="transportType" property="transportType" />
		<result column="taskBeginTime" property="taskBeginTime" />
		<result column="unloadOrgCode" property="unloadOrgCode" />
	</resultMap>
	
	<!-- PDA预分配月台PDApreflatformMap -->
	<resultMap id="PDApreflatformMap" type="com.deppon.foss.module.transfer.unload.api.shared.dto.PDApreplatformDto">
	   <result column="VEHICLE_NO" property="vehicleNo"/>
	   <result column="PLATFORM_CODE" property="platformNo"/>
	   <result column="ORIG_ORG_CODE" property="departOrgCode"/>
	   <result column="ORIG_ORG_NAME" property="departOrgName"/>
	   <result column="actual_arrive_time" property="arriveTime"/>
	</resultMap>
	
	<!--卸车任务运单明细Dto ResultMap-->
	<resultMap id="unloadTaskWaybillDetailDtoResultMap" 
		type="com.deppon.foss.module.transfer.unload.api.shared.dto.UnloadWaybillDetailDto" extends="unloadTaskWaybillDetailResultMap">
			<result property="billType" column="billType" />
	</resultMap>
	
	<!--长途卸车界面，传入运单号，返回运单号所在的配载单、交接单-->
	<resultMap id="queryBillNosWhereWaybillNoExistsResultMap" type="com.deppon.foss.module.transfer.unload.api.shared.dto.ConfirmUnloadTaskBillsDto" >
		<result column="vehicleAssembleNo" property="vehicleAssembleNo" />
		<result column="handOverBillNo" property="handOverBillNo" />
		<result column="waybillNo" property="waybillNo" />
	</resultMap>
	
	
	
	<!-- 根据运单号查询交接、装卸车情况 -->
	<select id="queryHandOverAndUnloadByWayBillNo" parameterType="string" resultMap="handOverAndUnloadResultMap">
<![CDATA[select h.handover_no as handOverNo,
	       hd.waybill_no as wayBillNo,
	       h.orig_org_code as origOrgCode,
	       h.dest_org_code as destOrgCode,
	       h.orig_org_name as origOrgName,
       	   h.dest_org_name as destOrgName,
	       hd.handover_goods_qty as handOverQty,
	       nvl(hwd.operation_goods_qty, vwd.operation_goods_qty) as unloadQty
	  from tfr.t_opt_handoverbill_detail hd
	  left join tfr.t_opt_handoverbill h on h.handover_no = hd.handover_no
	  left join tfr.t_opt_unload_bill_detail hub on hub.bill_no = h.handover_no
	  left join tfr.t_opt_unload_waybill_detail hwd on hwd.unload_task_id =
	                                                   hub.unload_task_id
	  left join tfr.t_opt_vehicleassemble_detail vd on vd.handover_no =
	                                                   hd.handover_no
	  left join tfr.t_opt_vehicleassemblebill v on v.id =
	                                               vd.vehicleassemblebill_id
	  left join tfr.t_opt_unload_bill_detail vub on vub.bill_no =
	                                                v.vehicleassemble_no
	  left join tfr.t_opt_unload_waybill_detail vwd on vwd.unload_task_id =
	                                                   vub.unload_task_id
	 where hd.waybill_no = #{wayBillNo}
	  and h.handoverbill_state <> '90'
	  and (v.state <> '90' or v.state is null)]]>
	</select>
	
	<!--用于新增卸车任务时，快速添加功能，根据车牌号获取待卸单据编号及单据类型-->
	<select id="queryArrivedBillNoList" parameterType="java.util.HashMap"
			resultMap="queryArrivedBillNoListResultMap">
		select ttd.vehicle_no vehicleNo,
            pd.platform_no platformCode,
            ttb.bill_type billType,
            ttb.bill_no billNo,
            ttd.TRUCK_TASK_ID truckTaskId
            from tfr.t_Opt_Truck_Task_Detail  ttd,
                      tfr.t_Opt_Truck_Task_Bill ttb,
                      tfr.t_Opt_Platform_Distribute pd
    	<where>
    		ttb.truck_task_detail_id = ttd.id(+)
    		and pd.platform_distribute_id(+) = ttd.platform_distribute_id
    		and ttd.vehicle_no = #{vehicleNo} 
    		and ttd.dest_org_code = #{orgCode} 
    		and ttb.bill_level = '1'
            and ttd.status = 'ARRIVED'
            and ttb.assign_state = 'UNASSIGN'
    	</where>
    	<!-- 添加快递空运 -->
    	union all
    	select wk.vehicleno vehicleNo,
            '' platformCode,
            'HANDOVER' billType,
            wk.handoverbillno billNo,
            wk.LOADTASKNO truckTaskId
            from tfr.t_wk_trf_bill wk
    	<where>
    		wk.vehicleno = #{vehicleNo} 
    		and wk.arriveorgcode = #{orgCode} 
            and wk.handoverstate = 'HAVE_PLACED'
            and wk.handovertype ='AIR_TRANS_HANDOVER'
    	</where>
    	
	</select>
	
	<!--用于新增卸车任务时，根据交接单号获取交接单信息，排除整车（bug-3902）-->
	<select id="queryHandOverBillInfo" parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.QueryArrivedBillInfoByNoDto"
			resultMap="queryArrivedBillInfoResultMap">
		select 
			hd.vehicle_no vehicleNo,
			hd.handover_no billNo,
			hd.HANDOVER_TYPE handOverType,
			'HANDOVER' billType,
			hd.volume_total volume,
			hd.weight_total weight,
			hd.waybill_qty_total waybillTotal,
			hd.goods_qty_total pieces 
			from tfr.t_opt_handoverbill hd,
			tfr.t_Opt_Truck_Task_Bill ttb,
			tfr.t_opt_truck_task_detail ttd
		<where>
			hd.handover_no = ttb.bill_no(+) 
			and ttb.truck_task_detail_id = ttd.id(+)
      		and ttb.assign_state = 'UNASSIGN' 
      		and ttd.status = 'ARRIVED'
      		and hd.dest_org_code = #{orgCode} 
      		and hd.be_car_load != 'Y' 
			and ttb.bill_level = '1' 
      		and hd.handover_no in 
			<foreach collection="nosList" item="item" separator="," close=")" open="(">
                    #{item}
             </foreach>
    	</where>
	</select>
	
	<!--用于新增卸车任务时，根据交接单号获取快递交接单信息-->
	<select id="queryExpressHandOverBillInfo" parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.QueryArrivedBillInfoByNoDto"
			resultMap="queryArrivedBillInfoResultMap">
		select 
			wt.vehicleno vehicleNo,
			wt.handoverbillno billNo,
			wt.handovertype handOverType,
			'HANDOVER' billType,
			wt.totalvolumn volume,
			wt.totalweight weight,
			wt.totalqty waybillTotal,
			wt.totalqty pieces 
			from tfr.t_wk_trf_bill wt,
			tfr.t_Opt_Truck_Task_Bill ttb,
			tfr.t_opt_truck_task_detail ttd
		<where>
			wt.handoverbillno = ttb.bill_no(+) 
			and ttb.truck_task_detail_id = ttd.id(+)
      		and ttb.assign_state = 'UNASSIGN' 
      		and ttd.status = 'ARRIVED'
      		and wt.arriveorgcode = #{orgCode} 
			and ttb.bill_level = '1' 
      		and wt.handoverbillno in 
			<foreach collection="nosList" item="item" separator="," close=")" open="(">
                    #{item}
             </foreach>
    	</where>
    	<!-- 添加快递空运 -->
    	   union all
    	   <![CDATA[
    	   select   wt.vehicleno vehicleNo,
					wt.handoverbillno billNo,
					wt.handovertype handOverType,
					'HANDOVER' billType,
					wt.totalvolumn volume,
					wt.totalweight weight,
					wt.totalqty waybillTotal,
					wt.totalqty pieces 
    	   from tfr.t_wk_trf_bill wt
    	   ]]>
    	   <where>
      		 wt.HANDOVERSTATE not in('ASSINGED','HAVE_CANCEL','HAVE_STOCK')  
      		 and wt.arriveorgcode = #{orgCode} 
      		 and wt.HANDOVERTYPE='AIR_TRANS_HANDOVER'
      		 and wt.handoverbillno in 
			<foreach collection="nosList" item="item" separator="," close=")" open="(">
                    #{item}
             </foreach>
    	</where>
	</select>
	
	<!--用于新增卸车任务时，根据配载车次号获取配载单信息，排除整车（bug-3902）-->
	<select id="queryVehicleAssembleBillInfo" parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.QueryArrivedBillInfoByNoDto"
			resultMap="queryArrivedBillInfoResultMap">
		select 
			max(vab.vehicle_no) vehicleNo,
			vab.vehicleassemble_no billNo,
			'VEHICLEASSEMBLE' billType,
			sum(hd.volume_total) volume,
			sum(hd.weight_total) weight,
			sum(hd.waybill_qty_total) waybillTotal,
			sum(hd.goods_qty_total) pieces 
			from
			tfr.t_opt_vehicleassemblebill vab,
			tfr.t_Opt_Truck_Task_Bill ttb,
			tfr.t_opt_truck_task_detail ttd,
			tfr.t_opt_vehicleassemble_detail vad,
			tfr.t_opt_handoverbill hd 
			<where>
				vab.vehicleassemble_no = ttb.bill_no(+) 
				and ttb.truck_task_detail_id = ttd.id(+)
				and vab.id = vad.vehicleassemblebill_id(+)
				and vad.handover_no = hd.handover_no(+) 
				and ttd.status = 'ARRIVED'
				and ttb.assign_state = 'UNASSIGN' 
				and vab.dest_org_code = #{orgCode} 
				and vab.assemble_type != 'CAR_LOAD'
				and ttb.bill_level = '1' 
				and vab.vehicleassemble_no in 
				<foreach collection="nosList" item="item" separator="," close=")" open="(">
                    #{item}
             	</foreach>
			</where>
			group by vab.vehicleassemble_no
	</select>
	
	<!--新增卸车任务时，将卸车任务基本信息插入卸车任务表-->
	<insert id="saveUnloadTaskBaseInfo" parameterType="com.deppon.foss.module.transfer.unload.api.shared.domain.UnloadTaskEntity">
		insert into tfr.t_opt_unload_task
		  (ID,
		   UNLOAD_TASK_NO,
		   VEHICLE_NO,
		   PLATFORM_NO,
		   PLATFORM_ID,
		   UNLOAD_START_TIME,
		   UNLOAD_END_TIME,
		   TASK_STATE,
		   UNLOAD_TYPE,
		   UNLOAD_WAY,
		   UNLOAD_ORG_CODE,
		   UNLOAD_ORG_NAME,
		   BE_EXCEPTION,
		   EXCEPTION_NOTES,
		   BE_SCAN_INSTOCK,
		   PLAN_COMPLETE_TIME)
		   values(
		   #{id,jdbcType=VARCHAR},
		   #{unloadTaskNo,jdbcType=VARCHAR},
		   #{vehicleNo,jdbcType=VARCHAR},
		   #{platformNo,jdbcType=VARCHAR},
		   #{platformId,jdbcType=VARCHAR},
		   #{unloadStartTime,jdbcType=TIMESTAMP},
		   #{unloadEndTime,jdbcType=TIMESTAMP},
		   #{taskState,jdbcType=VARCHAR},
		   #{unloadType,jdbcType=VARCHAR},
		   #{unloadWay,jdbcType=VARCHAR},
		   #{unloadOrgCode,jdbcType=VARCHAR},
		   #{unloadOrgName,jdbcType=VARCHAR},
		   #{beException,jdbcType=VARCHAR},
		   #{exceptionNotes,jdbcType=VARCHAR},
		   #{beScanInstock,jdbcType=VARCHAR},
		   #{planCompleteTime,jdbcType=TIMESTAMP}
		   )
	</insert>
	
	<!--新增、修改卸车任务时，批量插入单据信息-->
	<insert id="saveUnloadBillDetailList"  parameterType="java.util.List">
		begin
		<foreach collection="list" item="item" separator=";">
			insert into tfr.T_OPT_UNLOAD_BILL_DETAIL
			  (ID,
			   UNLOAD_TASK_ID,
			   BILL_NO,
			   BILL_TYPE,
			   WEIGHT,
			   VOLUME,
			   WAYBILLTOTAL,
			   PIECES,
			   create_time,
			   modify_time
			)
			values
				(#{item.id,jdbcType=VARCHAR},
				#{item.unloadTaskId,jdbcType=VARCHAR},
				#{item.billNo,jdbcType=VARCHAR},
				#{item.billType,jdbcType=VARCHAR},
				#{item.weight,jdbcType=DECIMAL},
				#{item.volume,jdbcType=DECIMAL},
				#{item.waybillTotal,jdbcType=DECIMAL},
				#{item.pieces,jdbcType=DECIMAL},
				#{item.createDate,jdbcType=TIMESTAMP},
				#{item.modifyDate,jdbcType=TIMESTAMP}
				)
		</foreach>
		;end;
	</insert>
	
	<!--新增、修改卸车任务时，批量插入运单明细信息-->
	<insert id="saveUnloadWaybillDetailList"  parameterType="java.util.List">
			insert into tfr.t_opt_unload_waybill_detail
			  (ID,
			   UNLOAD_TASK_ID,
			   BILL_NO,
			   WAYBILL_NO,
			   OPERATION_GOODS_QTY,
			   UNLOAD_WEIGHT_TOTAL,
			   UNLOAD_VOLUME_TOTAL,
			   SCAN_GOODS_QTY,
			   ORIG_ORG_CODE,
			   DEST_ORG_CODE,
			   GOODS_NAME,
			   PACK,
			   TRANSPORT_TYPE,
			   TASK_BEGIN_TIME,
			   UNLOAD_ORG_CODE,
			   HANDOVER_GOODS_QTY,
			   MODIFY_TIME,
			   CREATE_TIME,
			   package_no)
			values
				(#{id,jdbcType=VARCHAR},
				#{unloadTaskId,jdbcType=VARCHAR},
				#{billNo,jdbcType=VARCHAR},
				#{waybillNo,jdbcType=VARCHAR},
				#{operationGoodsQty,jdbcType=DECIMAL},
				#{weight,jdbcType=DECIMAL},
				#{volume,jdbcType=DECIMAL},
				#{scanGoodsQty,jdbcType=DECIMAL},
				#{origOrgCode,jdbcType=VARCHAR},
				#{destOrgCode,jdbcType=VARCHAR},
				#{goodsName,jdbcType=VARCHAR},
				#{pack,jdbcType=VARCHAR},
				#{transportType,jdbcType=VARCHAR},
				#{taskBeginTime,jdbcType=TIMESTAMP},
				#{unloadOrgCode,jdbcType=VARCHAR},
				#{handOverPieces,jdbcType=VARCHAR},
				#{modifyDate,jdbcType=TIMESTAMP},
				sysdate,
				#{packageNo,jdbcType=VARCHAR})
	</insert>
	
	<!--确认结束卸车任务时，批量插入流水号明细信息-->
	<insert id="saveUnloadSerialNoDetailList"  parameterType="com.deppon.foss.module.transfer.unload.api.shared.domain.UnloadSerialNoDetailEntity">
		insert into tfr.T_OPT_UNLOAD_SERIALNO
		  (ID,
		   UNLOAD_WAYBILL_DETAIL_ID,
		   SCAN_STATE,
		   GOODS_STATE,
		   UNLOAD_TIME,
		   CREATE_TIME,
		   DEVICE_NO,
		   DEVICE_ID,
		   SERIAL_NO,
		   TASK_BEGIN_TIME,
		   UNLOAD_ORG_CODE)
		values
			(#{id,jdbcType=VARCHAR},
			#{unloadWaybillDetailId,jdbcType=VARCHAR},
			#{scanStatus,jdbcType=VARCHAR},
			#{goodsStatus,jdbcType=VARCHAR},
			#{optTime,jdbcType=TIMESTAMP},
			#{createDate,jdbcType=TIMESTAMP},
			#{deviceNo,jdbcType=DECIMAL},
			#{deviceId,jdbcType=VARCHAR},
			#{serialNo,jdbcType=VARCHAR},
			SYSDATE,
			#{createOrgCode,jdbcType=VARCHAR})
	</insert>
	
	<!--新增、修改卸车任务时，批量插入卸车人员参与情况-->
	<insert id="saveUnloadLoaderParticipationList"  parameterType="java.util.List">
		begin
		<foreach collection="list" item="item" separator=";">
			insert into tfr.t_opt_loader_participation
			  (ID,
			   LOADER_NAME,
			   LOADER_CODE,
			   LOAD_ORG_CODE,
			   LOAD_ORG_NAME,
			   JOIN_TIME,
			   LEAVE_TIME,
			   BE_CREATOR,
			   TASK_TYPE,
			   TASK_ID)
			values
				(#{item.id,jdbcType=VARCHAR},
				#{item.loaderName,jdbcType=VARCHAR},
				#{item.loaderCode,jdbcType=VARCHAR},
				#{item.loadOrgCode,jdbcType=VARCHAR},
				#{item.loadOrgName,jdbcType=VARCHAR},
				#{item.joinTime,jdbcType=TIMESTAMP},
				#{item.leaveTime,jdbcType=TIMESTAMP},
				#{item.beCreator,jdbcType=VARCHAR},
				#{item.taskType,jdbcType=VARCHAR},
				#{item.taskId,jdbcType=TIMESTAMP})
		</foreach>
		;end;
	</insert>
	
	<!--用于修改卸车任务时，根据卸车任务ID加载已有的单据列表-->
	<select id="queryUnloadTaskBillDetailListById" parameterType="String"
			resultMap="queryBillDetailListResultMap">
		 select task.vehicle_no vehicleNo,
                 ubd.bill_no billNo,
                 ubd.bill_type billType,
                 ubd.weight weight,
                 ubd.volume volume,
                 ubd.waybilltotal waybillTotal,
                 ubd.pieces pieces
      from 
      tfr.t_opt_unload_bill_detail ubd,
      tfr.t_opt_unload_task task 
    	<where>
    		ubd.unload_task_id = task.id(+) 
			and ubd.unload_task_id = #{unloadTaskId}
    	</where>
	</select>
	
	<!--用于修改卸车任务时，根据卸车任务ID加载基本信息-->
	<select id="queryUnloadTaskBaseInfoById" parameterType="String"
			resultMap="unloadTaskResultMap">
		  select task.id id,
                  task.unload_task_no unloadTaskNo,
                  task.vehicle_no vehicleNo,
                  task.platform_no platformNo,
                  task.PLATFORM_ID platformId,
                  task.PLAN_COMPLETE_TIME planCompleteTime,
                  task.UNLOAD_START_TIME unloadStartTime,
                  task.UNLOAD_END_TIME unloadEndTime,
                  task.TASK_STATE taskState,
                  task.UNLOAD_TYPE unloadType,
                  task.UNLOAD_WAY unloadWay,
                  task.UNLOAD_ORG_CODE unloadOrgCode,
                  task.UNLOAD_ORG_NAME unloadOrgName,
                  task.BE_EXCEPTION beException,
                  task.EXCEPTION_NOTES exceptionNotes
       from tfr.t_opt_unload_task task 
    	<where>
    		task.id = #{unloadTaskId}
    	</where>
	</select>
	
	<!--用于修改卸车任务时，根据卸车任务ID加载已有的卸车员列表-->
	<select id="queryLoaderDetailListById" parameterType="String"
			resultMap="queryLoaderResultMap">
		   select loader.loader_name loaderName,
                  loader.loader_code loaderCode 
        from tfr.T_OPT_LOADER_PARTICIPATION loader
    	<where>
    		loader.task_id = #{unloadTaskId}
    		and loader.be_creator = 'N'
    	</where>
	</select>
	
	<!--用于获取卸车任务的创建任务理货员-->
	<select id="queryTaskCreatorLoaderByTaskId" parameterType="String"
			resultMap="queryLoaderResultMap">
		   select loader.loader_name loaderName,
                  loader.loader_code loaderCode 
        from tfr.T_OPT_LOADER_PARTICIPATION loader
    	<where>
    		loader.task_id = #{unloadTaskId}
    		and loader.be_creator = 'Y'
    	</where>
	</select>
	
	<!--批量删除卸车任务中的单据-->
	<delete id="deleteBillDetailListFromUnloadTask" 
			parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.UnloadTaskModifyDto">
		delete from tfr.t_opt_unload_bill_detail ubd
		<where>
			ubd.UNLOAD_TASK_ID = #{unloadTaskId,jdbcType=VARCHAR}
			and ubd.bill_no in
			<foreach collection="noList" item="item" separator="," close=")" open="(">
				#{item,jdbcType=VARCHAR}
			</foreach>
		</where>
	</delete>
	
	<!--批量删除卸车任务中的单据-->
	<delete id="deleteLoaderListFromUnloadTask" 
			parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.UnloadTaskModifyDto">
		delete from tfr.T_OPT_LOADER_PARTICIPATION loader
		<where>
			loader.TASK_ID = #{unloadTaskId,jdbcType=VARCHAR}
			and loader.loader_code in
			<foreach collection="noList" item="item" separator="," close=")" open="(">
				#{item,jdbcType=VARCHAR}
			</foreach>
		</where>
	</delete>
	
	<!--更新卸车任务状态，根据卸车任务ID-->
	<update id="updateUnloadTaskState" parameterType="java.util.HashMap">
		update tfr.t_opt_unload_task task
		set task.task_state = #{targetState}
		<where>
			task.id = #{unloadTaskId}
		</where>
	</update>
	
	<!--更新卸车任务基本信息，可能修改的字段为：月台编号，月台code，卸车结束时间，是否异常，是否生成卸车差异报告-->
	<update id="updateUnloadTaskBasicInfo" 
			parameterType="com.deppon.foss.module.transfer.unload.api.shared.domain.UnloadTaskEntity">
		update tfr.t_opt_unload_task task
		<set>
			<if test="unloadEndTime != null and unloadEndTime != ''">
        		task.UNLOAD_END_TIME = #{unloadEndTime,jdbcType=TIMESTAMP},
      		</if>
      		<if test="platformNo != null and platformNo != ''">
	        	task.PLATFORM_NO = #{platformNo,jdbcType=VARCHAR},
	      	</if>
	      	<if test="platformId != null and platformId != ''">
	       	 	task.PLATFORM_ID = #{platformId,jdbcType=VARCHAR},
	      	</if>
	      	<if test="beException != null and beException != ''">
	       	 	task.BE_EXCEPTION = #{beException,jdbcType=VARCHAR}
	      	</if>
	      	<if test="beCreatedGapRep != null and beCreatedGapRep != ''">
	       	 	task.BE_CREATED_GAPREP = #{beCreatedGapRep,jdbcType=VARCHAR}
	      	</if>
	      	<if test="beCreatedBL != null and beCreatedBL != ''">
	       	 	task.BE_CREATED_BL = #{beCreatedBL,jdbcType=VARCHAR}
	      	</if>
		</set>
		<where>
			task.id = #{id}
		</where>
	</update>
	
	<!--根据卸车任务ID，更新卸车人员参与情况的“离开任务时间”-->
	<update id="updateLoaderLeaveTaskTime"  parameterType="java.util.HashMap">
		update tfr.t_opt_loader_participation loader
		<set>
			loader.LEAVE_TIME = #{leaveTime}
		</set>
		<where>
			loader.TASK_ID = #{unloadTaskId}
		</where>
	</update>
	
	<!--根据卸车任务ID删除卸车任务基本信息-->
	<delete id="deleteUnloadTaskBasicInfo" parameterType="String">
		delete from tfr.t_opt_unload_task task
		<where>
			task.id = #{unloadTaskId}
		</where>
	</delete>
	
	<!--传入运单号，返回指定卸车任务中运单号所在的交接单列表-->
	<select id="queryHandOverBillListByWaybillNo" parameterType="java.util.Map"
			resultType="String">
		   select hd.handover_no handOverBillNo
 			 from tfr.t_opt_handoverbill_detail hd,tfr.t_opt_unload_bill_detail ubd
    	<where>
    		hd.handover_no(+) = ubd.bill_no 
    		and hd.waybill_no = #{waybillNo} 
    		and ubd.unload_task_id = #{unloadTaskId}
    	</where>
	</select>
	
	<!--传入配载车次号，返回车次号下所有运单-->
	<select id="queryUnloadTaskWaybillDetailByVehicleAssembleNo" parameterType="String"
			resultMap="unloadTaskWaybillDetailResultMap">
		   select max(vab.vehicleassemble_no) billNo,
           hod.waybill_no waybillNo,
           max(hod.handover_no) handOverBillNo,
           sum(hod.handover_goods_qty) handOverPieces,
           sum(hod.actual_weight) weight,
           sum(hod.actual_volume) volume,
           max(hob.orig_org_code) origOrgCode,
           max(hob.dest_org_code) destOrgCode,
           max(hod.goods_name) goodsName,
           max(hod.packing) pack,
           max(hod.transport_type) transportType
            from 
			tfr.t_opt_handoverbill_detail hod,tfr.t_opt_handoverbill hob,tfr.t_opt_vehicleassemble_detail vad,tfr.t_opt_vehicleassemblebill vab 
			where hod.handover_no = hob.handover_no(+)
			and hob.handover_no = vad.handover_no(+)
			and vad.vehicleassemblebill_id = vab.id(+)
    		and vab.vehicleassemble_no = #{vehicleAssembleNo} 
    		group by hod.waybill_no 
	</select>
	
	<!--传入交接单号，返回交接单下所有运单-->
	<select id="queryUnloadTaskWaybillDetailByHandOverBillNo" parameterType="String"
			resultMap="unloadTaskWaybillDetailResultMap">
		   select hod.handover_no handOverBillNo,
		   hod.handover_no billNo,
           hod.waybill_no waybillNo,
           hod.handover_goods_qty handOverPieces,
           hod.actual_weight weight,
           hod.actual_volume volume,
           hob.orig_org_code origOrgCode,
           hob.dest_org_code destOrgCode,
           hod.goods_name goodsName,
           hod.packing pack,
           hod.transport_type transportType
            from 
			tfr.t_opt_handoverbill_detail hod,tfr.t_opt_handoverbill hob
			where hod.handover_no = hob.handover_no(+)
			and hod.handover_no = #{handOverBillNo}
	</select>
	
	<!--校验运单号、流水号是否存在-->
	<select id="validateWaybillNoAndSerialNo" parameterType="java.util.HashMap" resultType="java.lang.Integer">
		   select 
				count(*)
				 from pkp.t_srv_labeled_good lg
		<where>
			lg.waybill_no = #{waybillNo} 
			and lg.serial_no  = #{serialNo,jdbcType=VARCHAR}
			and lg.active = 'Y'
		</where>
	</select>
	
	<!--校验运单号、流水号是否存在某短途卸车任务中-->
	<select id="validateNosIsInShortUnloadTask" parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.ConfirmUnloadTaskBillsDto" 
			resultType="java.lang.Integer">
		   select count(*)
	       from tfr.t_opt_handoverbill_serialno hos,
	                 tfr.t_opt_unload_bill_detail ubd
		<where>
			 hos.handoverbill_no = ubd.bill_no(+)
			 and ubd.unload_task_id = #{unloadTaskId}
			 and hos.waybill_no = #{waybillNo}
			 and hos.serial_no = #{serialNo}
		</where>
	</select>
	
	<!--校验运单号、流水号是否存在某长途卸车任务中-->
	<select id="validateNosIsInLongUnloadTask" parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.ConfirmUnloadTaskBillsDto" 
			resultType="java.lang.Integer">
		    select  count(*)
			 from tfr.t_opt_handoverbill_serialno hos,
			      tfr.t_opt_vehicleassemble_detail vad,
			      tfr.t_opt_vehicleassemblebill vab,
			      tfr.t_opt_unload_bill_detail ubd
		<where>
			 hos.handoverbill_no = vad.handover_no(+)
			 and vad.vehicleassemblebill_id = vab.id(+)
			 and vab.vehicleassemble_no = ubd.bill_no(+)
			 and ubd.unload_task_id = #{unloadTaskId}
			 and hos.waybill_no = #{waybillNo}
			 and hos.serial_no = #{serialNo}
		</where>
	</select>
	
	<!--根据运单号，查询运单号所在的配载单、交接单list-->
	<select id="queryBillNosWhereWaybillNoExists" parameterType="java.util.HashMap" 
			resultMap="queryBillNosWhereWaybillNoExistsResultMap">
		     select 
				 ubd.bill_no vehicleAssembleNo,
				 hod.handover_no handOverBillNo,
				 hod.waybill_no waybillNo
				  from 
				 tfr.t_opt_handoverbill_detail hod,
				 tfr.t_opt_vehicleassemble_detail vad,
				 tfr.t_opt_vehicleassemblebill vab,
				 tfr.t_opt_unload_bill_detail ubd
		<where>
			  hod.handover_no = vad.handover_no(+)
			  and vad.vehicleassemblebill_id = vab.id(+)
			  and vab.vehicleassemble_no = ubd.bill_no(+)
			  and ubd.unload_task_id = #{unloadTaskId}
			  and hod.waybill_no = #{waybillNo}
		</where>
	</select>
	
	<!--卸车差异报告模块，当发生多货时，检测上一环节是否扫描，若返回结果不为空，则为上一环节扫描过——长途卸车任务产生的差异-->
	<select id="queryLongDistanceLoadTaskIsScaned" parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.ConfirmUnloadTaskBillsDto"
			resultType="java.lang.String">
	       select loadSerialNo.Serial_No serialNo
	        from tfr.T_OPT_LOAD_SERIALNO loadSerialNo,
		       tfr.t_opt_load_waybill_detail loadWaybill,
		       tfr.t_opt_load_task loadTask,
		       tfr.t_opt_handoverbill hb,
		       tfr.t_opt_vehicleassemble_detail vad,
		       tfr.t_opt_vehicleassemblebill vab,
		       tfr.t_opt_unload_bill_detail ubd
		<where>
			   loadSerialNo.Load_Waybill_Detail_Id = loadWaybill.Id(+)
		       and loadWaybill.Load_Task_Id = loadTask.Id(+)
		       and loadTask.Task_No = hb.load_task_no(+)
		       and hb.handover_no = vad.handover_no(+)
		       and vad.vehicleassemblebill_id = vab.id(+)
		       and vab.vehicleassemble_no = ubd.bill_no
		       and ubd.unload_task_id = #{unloadTaskId}
		       and loadSerialNo.Serial_No = #{serialNo}
		       and loadWaybill.Waybill_No = #{waybillNo}
		       and hb.load_task_no != null
		       and loadSerialNo.Goods_State not in('LACK','CANCELED')
		</where>
	</select>
	
	<!--卸车差异报告模块，当发生多货时，检测上一环节是否扫描，若返回结果不为空，则为上一环节扫描过——短途卸车任务产生的差异-->
	<select id="queryShortDistanceLoadTaskIsScaned" parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.ConfirmUnloadTaskBillsDto"
			resultType="java.lang.String">
	          select loadSerialNo.Serial_No serialNo
		       from tfr.T_OPT_LOAD_SERIALNO loadSerialNo,
		       tfr.t_opt_load_waybill_detail loadWaybill,
		       tfr.t_opt_load_task loadTask,
		       tfr.t_opt_handoverbill hb,
		       tfr.t_opt_unload_bill_detail ubd
		<where>
			  loadSerialNo.Load_Waybill_Detail_Id = loadWaybill.Id(+)
		       and loadWaybill.Load_Task_Id = loadTask.Id(+)
		       and loadTask.Task_No = hb.load_task_no(+)
		       and hb.handover_no = ubd.bill_no
		       and ubd.unload_task_id = #{unloadTaskId}
		       and loadSerialNo.Serial_No = #{serialNo}
		       and loadWaybill.Waybill_No = #{waybillNo}
		       and hb.load_task_no != null 
		       and loadSerialNo.Goods_State not in('LACK','CANCELED')
		</where>
	</select>
	
	<!--卸车差异报告上报oa差错时，根据少货的运单号、流水号获取所属单据(配载单、交接单)-->
	<select id="queryLackGoodsBillNoByWaybillNoAndSerialNo" parameterType="java.util.HashMap"
			resultMap="unloadTaskWaybillDetailDtoResultMap">
	         select bd.bill_type billType,
				wd.UNLOAD_TASK_ID unloadTaskId,
				wd.BILL_NO billNo,
				wd.WAYBILL_NO waybillNo,
				wd.OPERATION_GOODS_QTY operationGoodsQty,
				wd.SCAN_GOODS_QTY scanGoodsQty,
				wd.ORIG_ORG_CODE origOrgCode,
				wd.DEST_ORG_CODE destOrgCode,
				wd.GOODS_NAME goodsName,
				wd.UNLOAD_ORG_CODE unloadOrgCode
		    from tfr.t_opt_unload_waybill_detail wd
			  left join tfr.t_opt_unload_serialno us
			    on wd.id = us.unload_waybill_detail_id
			  left join tfr.t_opt_unload_gaprep g
			    on wd.unload_task_id = g.unload_task_id
			  left join tfr.t_opt_unload_bill_detail bd
			    on wd.bill_no = bd.bill_no
			   and g.unload_task_id = bd.unload_task_id
		<where>
		   wd.waybill_no = #{waybillNo}
		   and us.serial_no = #{serialNo}
		   and g.id = #{id}
		</where>
	</select>
	
	<!--提供接口给接送货查询卸车任务，根据运单号查询卸车任务-->
	<select id="queryUnloadTaskReport" parameterType="HashMap" resultType="java.lang.String">
	        <![CDATA[select ut.unload_task_no
  				from tfr.t_opt_unload_task ut
  				join tfr.t_opt_unload_waybill_detail dw on dw.unload_task_id = ut.id
 				where dw.waybill_no = #{waybillNo,jdbcType=VARCHAR}
   				and ut.unload_org_code <> #{orgCode,jdbcType=VARCHAR}
   				and dw.operation_goods_qty >= 1]]>
	</select>
	
	<!--查询卸车流水号是否存在-->
	<select id="queryUnloadSerialNo" parameterType="HashMap" resultType="java.lang.Integer">
	        <![CDATA[SELECT COUNT(1)
 					    FROM TFR.T_OPT_UNLOAD_SERIALNO S
 						WHERE S.UNLOAD_WAYBILL_DETAIL_ID = #{WaybillDetailId,jdbcType=VARCHAR}
   						AND S.SERIAL_NO = #{serialNo,jdbcType=VARCHAR}]]>
	</select>
	
	<!-- PDA查询 预分配月台信息-->
	<select id="queryPreplatformNo" parameterType="map" resultMap="PDApreflatformMap">
	  SELECT /** PDA查询 预分配月台信息*/
	   TD.VEHICLE_NO, 
	   A.PLATFORM_CODE,
	   TD.ORIG_ORG_CODE, 
	   TD.ORIG_ORG_NAME,
	   to_char(td.actual_arrive_time, 'yyyy-MM-dd hh24:mi:ss') actual_arrive_time
	  FROM TFR.T_OPT_TRUCK_TASK_DETAIL TD
	 INNER JOIN TFR.T_OPT_PLATFORM_PRE_ASSIGN A
	    ON A.TFR_CTR_CODE = TD.DEST_ORG_CODE
	   AND A.TRUCK_TASK_ID = TD.TRUCK_TASK_ID
	 WHERE 
	   TD.DEST_ORG_CODE = #{destOrgCode}
	   <if test="vehicleNo!=null and vehicleNo!=''">
	       AND TD.VEHICLE_NO =#{vehicleNo}
	   </if>
	   <if test="platformNo!=null and platformNo!=''">
	      AND A.PLATFORM_CODE =#{platformNo}
	   </if>
	   <if test="businessType!=null and businessType!=''">
	      AND TD.BUSINESS_TYPE = #{businessType}
	   </if>
	   AND TD.ACTUAL_ARRIVE_TIME >= SYSDATE - 2
	   AND TD.STATUS IN ('ONTHEWAY', 'ARRIVED')
	   AND EXISTS (SELECT 1
	          FROM TFR.T_OPT_TRUCK_TASK_BILL TB
	         WHERE TB.TRUCK_TASK_DETAIL_ID = TD.ID
	           AND TB.ASSIGN_STATE = 'UNASSIGN'
	           AND TB.BILL_LEVEL = 1)
	   <!-- 如果已经进场需要加上下面的条件 -->
	  <if test="enterTfrCenterType !=null and enterTfrCenterType !='' and enterTfrCenterType=='IN'">
		 AND EXISTS (select 1
          from tfr.t_opt_vehicle_entrance ven
         where TD.truck_task_id = ven.truck_task_id
           and TD.dest_org_code = ven.tfr_ctr_code)
	  </if> 
	   <!-- 如果未进场需要加上下面的条件 -->
	  <if test="enterTfrCenterType !=null and enterTfrCenterType !='' and enterTfrCenterType=='OUT'">
		 AND not EXISTS (select 1
          from tfr.t_opt_vehicle_entrance ven
         where TD.truck_task_id = ven.truck_task_id
           and TD.dest_org_code = ven.tfr_ctr_code)
	  </if> 
	</select>
	
	<!-- 根据运单号查询所有卸车任务运单明细 -->
	<select id="queryUnloadWaybillDetailByNo" parameterType="string" resultMap="unloadTaskWaybillDetailResultMap">
		select 
		  d.waybill_no waybillNo,
	      d.orig_org_code origOrgCode,
	      d.dest_org_code destOrgCode
		 from tfr.t_opt_unload_task t
	    inner join tfr.t_opt_unload_waybill_detail d on d.unload_task_id = t.id
	    where d.waybill_no = #{waybillNo,jdbcType=VARCHAR}
	    <![CDATA[and t.task_state <> 'CANCELED'
	    order by d.task_begin_time desc]]>
	</select>
	
	<!--用于新增卸车任务时，根据商务专递交接单号获取交接单信息272681-->
	<select id="queryBusinessAirBillInfo" parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.QueryArrivedBillInfoByNoDto"
			resultMap="queryArrivedBillInfoResultMap">
		select * from(select 
			hd.flight_no vehicleNo,
			hd.air_handover_no billNo,
			'PACKAGE_HANDOVER' billType,
			hd.handover_volume_total volume,
			hd.billing_weight_total weight,
			hd.WAYBILL_QTY_TOTAL waybillTotal,
			hd.GOODS_QTY_TOTAL pieces,
			hd.ORG_CODE orgCode,
			hd.EXPRESS_ARRIVE_CODE expressArriveCode
			from tfr.t_opt_air_handoverbill hd
		<where>
		     hd.air_handover_no in 
			<foreach collection="nosList" item="item" separator="," close=")" open="(">
                    #{item}
             </foreach>
    		and hd.EXPRESS_ARRIVE_CODE = #{orgCode} 
	        and hd.air_handovertype = 'PACKAGE_HANDOVER'
			and hd.express_unload_status = 'UNSTART'
			and hd.EXPRESS_ASSIGN_STATUS = 'UNASSIGN'
    	</where>
    	order by hd.create_time desc)
    	 WHERE rownum = 1
    	 union all
    	 select * from(select 
			wk.vehicleno vehicleNo,
			wk.handoverbillno billNo,
			'PACKAGE_HANDOVER' billType,
			wk.AIRLIFTTOTALVOLUMN volume,
			wk.AIRLIFTTOTALWEIGHT weight,
			wk.AIRLIFTTOTALQTY waybillTotal,
			wk.AIRLIFTTOTALQTY pieces,
			wk.ARRIVEORGCODE orgCode,
			wk.ARRIVEORGCODE expressArriveCode
			from tfr.t_wk_trf_bill wk
		<where>
		     wk.handoverbillno in 
			<foreach collection="nosList" item="item" separator="," close=")" open="(">
                    #{item}
             </foreach>
    		and wk.ARRIVEORGCODE = #{orgCode} 
	        and wk.HANDOVERTYPE = 'AIR_TRANS_HANDOVER'
			and wk.HANDOVERSTATE not in ('HAVE_STOCK','ASSINGED','HAVE_CANCEL')
    	</where>
    	order by wk.createtime desc)
    	 WHERE rownum = 1
	</select>
	
	<!--2015/9/16 272681用于修改商务专递卸车任务时，根据卸车任务ID加载已有的单据列表-->
	<select id="queryAirUnloadTaskBillDetailListById" parameterType="String"
			resultMap="queryBillDetailListResultMap">
		 select task.vehicle_no vehicleNo,
                 ubd.bill_no billNo,
                 ubd.bill_type billType,
                 ubd.weight weight,
                 ubd.volume volume,
                 ubd.waybilltotal waybillTotal,
                 ubd.pieces pieces,
                 hd.ORG_CODE orgCode,
			     hd.EXPRESS_ARRIVE_CODE expressArriveCode
      from 
      tfr.t_opt_unload_bill_detail ubd,
      tfr.t_opt_unload_task task ,
      tfr.t_opt_air_handoverbill hd
    	<where>
    		ubd.unload_task_id = task.id(+)
    		and ubd.BILL_NO = hd.AIR_HANDOVER_NO
			and ubd.unload_task_id = #{unloadTaskId}
    	</where>
	</select>
	
	<!--传入运单号，返回指定卸车任务中运单号所在的商务专递交接单列表272681-->
	<select id="queryAirHandOverBillListByWaybillNo" parameterType="java.util.Map"
			resultType="String">
		   select handoverbill.AIR_HANDOVER_NO
 			 from tfr.t_opt_air_handoverbill handoverbill
 		left join tfr.t_opt_unload_bill_detail ubd 
 		  on handoverbill.AIR_HANDOVER_NO = ubd.bill_no
        left join tfr.t_opt_air_handoverbill_detail   hb
          on handoverbill.ID = hb.AIR_HANDOVERBILL_ID
        left join tfr.t_opt_air_waybill waybill
          on waybill.AIR_WAYBILL_NO = hb.AIR_WAYBILL_NO
        left join tfr.t_opt_air_waybill_detail wb
          on waybill.ID = wb.AIR_WAYBILL_ID
    	<where>
    		and wb.waybill_no = #{waybillNo} 
    		and ubd.unload_task_id = #{unloadTaskId}
    	</where>
	</select>
	
		<!--传入商务专递交接单号，返回交接单下所有运单272681 chenlei 2015/8/31-->
	<select id="queryUnloadTaskWaybillDetailByAirHandOverBillNo" parameterType="String"
			resultMap="unloadTaskWaybillDetailResultMap">
		   select hb.AIR_HANDOVER_NO handOverBillNo,
		   hb.AIR_HANDOVER_NO billNo,
           wd.WAYBILL_NO waybillNo,
           wd.GOODS_QTY handOverPieces,
           wd.BILLING_WEIGHT weight,
           wd.VOLUME volume,
           hb.ORG_CODE origOrgCode,
           hb.EXPRESS_ARRIVE_CODE destOrgCode,
           wd.GOODS_NAME goodsName,
           hd.PACKAGE_STRUCTION pack,
           hd.TRANSPORTTYPE transportType
            from tfr.t_opt_air_handoverbill hb
			left join tfr.t_opt_air_handoverbill_detail hd
			on hb.ID = hd.AIR_HANDOVERBILL_ID
			left join tfr.t_opt_air_waybill w
			on hd.AIR_WAYBILL_NO = w.AIR_WAYBILL_NO
			left join tfr.t_opt_air_waybill_detail wd
			on wd.AIR_WAYBILL_ID = w.ID
			where  hb.AIR_HANDOVER_NO = #{handOverBillNo}
	</select>
	
			<!--2015/9/8 272681校验运单号、流水号是否存在某商务专递卸车任务中-->
	<select id="validateNosIsInBusinessUnloadTask" parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.ConfirmUnloadTaskBillsDto" 
			resultType="java.lang.Integer">
		   select count(*)
	     from tfr.t_opt_unload_waybill_detail uwd,
	          tfr.t_opt_air_handoverbill hb,
	          tfr.t_opt_unload_serialno  us	
		<where>
		     hb.air_handover_no = uwd.bill_no(+)
		     and uwd.id = us.unload_waybill_detail_id(+)
			 and uwd.unload_task_id = #{unloadTaskId}
			 and uwd.waybill_no = #{waybillNo}
			 and us.serial_no = #{serialNo}
		</where>
	</select>
	
			<!-- 根据卸车任务ID获取卸车任务编号列表-->
	<select id="queryBillNosByUnloadTaskId" parameterType="java.lang.String" 
			resultType="java.util.List">
		   select ttb.bill_no billNo
	     from tfr.t_opt_truck_task_bill ttb
		<where>
			 ttb.truck_task_detail_id = #{unloadTaskId}
			 and ttb.bill_level ='1'
			 and ttb.bill_type ='HANDOVER'
		</where>
	</select>
	
	
	<!--新增卸车差异报告时，插入差异报告基本信息-->
	<insert id="addUnloadDiffReport" parameterType="com.deppon.foss.module.transfer.unload.api.shared.domain.UnloadDiffReportEntity">
			insert into tfr.t_opt_unload_gaprep
			  (ID,
			   UNLOAD_TASK_ID,
			   GAPREP_NO,
			   UNLOAD_TASK_NO,
			   EXCEED_GOODS_QTY,
			   LACK_GOODS_QTY,
			   BYHAND_GOODS_QTY,
			   HANDLE_STATUS,
			   CREATE_TIME,
			   UNLOAD_ORG_CODE)
			   values(
			   #{id,jdbcType=VARCHAR},
			   #{unloadTaskId,jdbcType=VARCHAR},
			   #{diffReportNo,jdbcType=VARCHAR},
			   #{unloadTaskNo,jdbcType=VARCHAR},
			   #{moreGoodsPieces,jdbcType=DECIMAL},
			   #{lackGoodsPieces,jdbcType=DECIMAL},
			   #{byhandGoodsPieces,jdbcType=DECIMAL},
			   #{handleStatus,jdbcType=VARCHAR},
			   #{reportCreateTime,jdbcType=TIMESTAMP},
			   #{orgCode,jdbcType=VARCHAR})
	</insert>
	
	
</mapper>