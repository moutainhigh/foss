<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tfr-nuload-trayscan">	
	<resultMap id="queryTrayScanResultMap"
			   type="com.deppon.foss.module.transfer.pda.api.shared.domain.PDATrayScanTaskEntity">
		<result property="id" column="id" />
		<result property="taskNo" column="taskNo"/>
		<result property="trayscanTime" column="trayscanTime"/>
		<result property="forkliftDriverCode" column="forkliftDriverCode"/>
		<result property="forkliftDept" column="forkliftDept"/>
		<result property="bindingCode" column="bindingCode"/>
		<result property="bindingDept" column="bindingDept"/>
		<result property="traytaskCreatTime" column="traytaskCreatTime"/>
		<result property="outfieldCode" column="outfieldCode"/>
		<result property="trayscanStatu" column="trayscanStatu"/>
		<result property="forkliftVotes" column="forkliftVotes"/>
		<result property="unloadTaskNo" column="unloadTaskNo"/>
	</resultMap>
	<resultMap id="queryTrayScanDetailResultMap" type="com.deppon.foss.module.transfer.pda.api.shared.domain.PDATrayScanDetailEntity">
		<result property="waybillNo" column="waybillNo"/>
		<result property="serialNo" column="serialNo"/>
		<result property="packageNo" column="packageNo"/>
		<result property="destDept" column="destDept"/>
		<result property="destDeptName" column="destDeptName"/>
		<result property="waybillInfo" column="waybillInfo"/>
	</resultMap>
	<!-- 货件库存 -->
	<resultMap id="stockResultMap" type="com.deppon.foss.module.transfer.stock.api.shared.domain.StockEntity" >
		<id property="id" column="id"/>
		<result property="waybillNO" column="WAYBILL_NO"/>
		<result property="serialNO" column="SERIAL_NO"/>
		<result property="operatorCode" column="OPERATOR_CODE"/>
		<result property="operatorName" column="OPERATOR_NAME"/>
		<result property="orgCode" column="ORG_CODE"/>
		<result property="goodsAreaCode" column="GOODS_AREA_CODE"/>
		<result property="deviceType" column="DEVICE_TYPE"/>
		<result property="inStockTime" column="IN_STOCK_TIME"/>
		<result property="scanTime" column="SCAN_TIME"/>
		<result property="preHandOverState" column="PRE_HANDOVER_STATUS"/>
		<result property="nextOrgCode" column="NEXT_ORG_CODE"/>
		<result property="position" column="position" />
	</resultMap>
	<!--叉车离线扫描信息 零担 -->
	<resultMap id="queryTrayOfflineScanInfoResultMap" type="com.deppon.foss.module.transfer.unload.api.shared.domain.TrayOfflineScanEntity">
		<result property="id" column="id"/>
		<result property="waybillNo" column="waybillNo"/>
		<result property="serialNo" column="serialNo"/>
		<result property="packageNo" column="packageNo"/>
		<result property="trayOfflineScanTime" column="trayOfflineScanTime"/>
		<result property="forkLiftDriverName" column="forkLiftDriverName"/>
		<result property="forkLiftDriverCode" column="forkLiftDriverCode"/>
		<result property="forkLiftDept" column="forkLiftDept"/>
		<result property="offlineTaskNo" column="offlineTaskNo"/>
		<result property="taskNo" column="taskNo"/>
		<result property="createUserName" column="createUserName"/>
		<result property="createUserCode" column="createUserCode"/>
		<result property="createrDept" column="createrDept"/>
		<result property="forkliftCount" column="forkliftCount"/>
		<result property="loaderName" column="loaderName"/>
		<result property="loaderCode" column="loaderCode"/>
		<result property="loadOrgName" column="loadOrgName"/>	
	</resultMap>
	<!--叉车离线扫描信息 快递 -->
	<resultMap id="queryTrayOfflineScanInfoExpressResultMap" type="com.deppon.foss.module.transfer.unload.api.shared.domain.TrayOfflineScanExpressEntity">
		<result property="id" column="id"/>
		<result property="WaybillNo" column="WaybillNo"/>
		<result property="trayOfflineScanTime" column="trayOfflineScanTime"/>
		<result property="forkLiftDriverName" column="forkLiftDriverName"/>
		<result property="forkLiftDriverCode" column="forkLiftDriverCode"/>
		<result property="forkLiftDept" column="forkLiftDept"/>
		<result property="offlineTaskNo" column="offlineTaskNo"/>
		<result property="taskNo" column="taskNo"/>
		<result property="createUserName" column="createUserName"/>
		<result property="createUserCode" column="createUserCode"/>
		<result property="createrDept" column="createrDept"/>
	</resultMap>
	<!-- 卸车任务绑定托盘明细 零担-->
	<resultMap id="queryUnloadbindTrayMap" type="com.deppon.foss.module.transfer.unload.api.shared.domain.UnloadbindTrayEntity">
	   <result property="unloadTaskNo" column="unload_task_no" />
		<result property="unloadCreator" column="createName"/>
		<result property="unloadCreatorCode" column="createCode"/>
		<result property="totalTicks" column="totalVotes"/>
		<result property="totalPieces" column="totalPieces"/>
		<result property="bindPieces" column="bindPieces"/>
		<result property="bindRate" column="bindRate"/>
		<result property="scanPieces" column="scanPieces"/>
		<result property="unLoadScanPieces" column="unloadScanPieces"/>
		<result property="vehicleNo" column="vehicleNo"/>
		<result property="forkliftTicks" column="forkliftTicks"/>
		<result property="unloadTaskCreateTime" column="unloadTaskCreateTime"/>
		<result property="trayTaskTotal" column="trayTaskTotal"/>
		<result property="scannedTotal" column="scannedTotal"/>
	</resultMap>
	
	<!-- 卸车任务绑定托盘明细 快递-->
	<resultMap id="queryUnloadbindTrayExpressMap" type="com.deppon.foss.module.transfer.unload.api.shared.domain.UnloadbindTrayExpressEntity">
	   <result property="unloadTaskNo" column="unloadTaskNo" />
		<result property="unloadCreator" column="unloadCreator"/>
		<result property="unloadCreatorCode" column="unloadCreatorCode"/>
		<result property="totalTicks" column="totalTicks"/>
		<result property="bindPieces" column="bindPieces"/>
		<result property="bindRate" column="bindRate"/>
		<result property="scanPieces" column="scanPieces"/>
		<result property="unLoadScanPieces" column="unLoadScanPieces"/>
		<result property="vehicleNo" column="vehicleNo"/>
		<result property="forkliftTicks" column="forkliftTicks"/>
		<result property="trayTaskTotal" column="trayTaskTotal"/>
		<result property="scannedTotal" column="scannedTotal"/>
		<result property="unloadTaskCreateTime" column="unloadTaskCreateTime"/>
	</resultMap>
	
	<!-- 卸车任务绑定托盘运单明细 -->
	<resultMap id="unloadTaskbindTrayDetailMap" type="com.deppon.foss.module.transfer.unload.api.shared.dto.UnloadbindTrayDetailDto" >
	    <result property="taskNo" column="taskNo" />
		<result property="waybillNo" column="waybillNo"/>
		<result property="bindUserName" column="bindUserName"/>
		<result property="bindUserCode" column="bindUserCode"/>
		<result property="bindTraytaskTime" column="bindTraytaskTime"/>
		<result property="forkliftDriverName" column="forkliftDriverName"/>
		<result property="forkliftDriverCode" column="forkliftDriverCode"/>
		<result property="trayscanTime" column="trayscanTime"/>
		<result property="packageNo" column="packageNo"/>
	</resultMap>
	
	<resultMap id="queryWaybillResultMap" type="com.deppon.foss.module.transfer.load.api.shared.domain.TrayScanDetaiEntity">
		<result property="id" column="id" />
		<result property="waybillNo" column="waybillNo"/>
		<result property="serialNo" column="serialNo"/>
		<result property="destDeptName" column="destDeptName"/>
		<result property="destDeptCode" column="destDeptCode"/>
		<result property="trayScanTaskNo" column="trayScanTaskNo"/>
	</resultMap>
	
		<!-- 卸车任务绑定托盘运单明细 -->
	<resultMap id="unloadTaskbindTrayDetailSeriaNoMap" type="com.deppon.foss.module.transfer.unload.api.shared.dto.UnloadTaskbindTrayDetailseriaNo" >
	    <result property="taskNo" column="taskNo" />
		<result property="waybillNo" column="waybillNo"/>
		<result property="packageNo" column="packageNo"/>
		<result property="seriaNo" column="seriaNo"/>
		<result property="bindUserName" column="bindUserName"/>
		<result property="bindUserCode" column="bindUserCode"/>
		<result property="bindTraytaskTime" column="bindTraytaskTime"/>
		<result property="forkliftDriverName" column="forkliftDriverName"/>
		<result property="forkliftDriverCode" column="forkliftDriverCode"/>
		<result property="trayscanTime" column="trayscanTime"/>
	</resultMap>
	<!--托盘离线扫描PDA传递的dto-->
	<resultMap id="queryTrayOfflineScanMap" type="com.deppon.foss.module.transfer.pda.api.shared.dto.PDATrayOfflineScanDto">
		<result property="offlineTaskNo" column="offlineTaskNo"/>
		<result property="trayOfflineScanTime" column="trayOfflineScanTime"/>
		<result property="waybillQty" column="waybillQty"/>
	</resultMap>
	<!--新增托盘任务-->
	<insert id="createTrayScanTask" parameterType="com.deppon.foss.module.transfer.load.api.shared.dto.TrayScanDto">
		insert into tfr.T_OPT_TRAYSCAN_TASK (
		ID, 
		TASK_NO, 
		CREATER_CODE, 
		CREATER_NAME, 
		CREATE_TIME, 
		CREATER_ORG_CODE, 
		STATU ,
		OUTFIELD_ORG_CODE,
		FORKLIFT_TICKS_COUNT,
		BE_CREATE_WORK,
		UNLOAD_TASK_NO
		)
		values (
		#{id,jdbcType=VARCHAR},
		#{taskNo,jdbcType=VARCHAR},
		#{bindingCode,jdbcType=VARCHAR},
		#{bindingName,jdbcType=VARCHAR},
		#{traytaskCreatTime,jdbcType=TIMESTAMP},
		#{bindingDeptCode,jdbcType=VARCHAR},	
		#{statu,jdbcType=VARCHAR},
		#{outfieldCode,jdbcType=VARCHAR},
		#{forkliftCount,jdbcType=DECIMAL},
		#{beCreateWork,jdbcType=VARCHAR},
		#{unloadTaskNo,jdbcType=VARCHAR}
		)
	</insert>
	<!-- 新增托盘任务明细 -->
	<insert id="createTrayScanDetail" parameterType="java.util.List">		
		begin 
		<foreach collection="list" item="item" separator=";">
		insert into tfr.T_OPT_TRAYSCAN_TASK_DETAIL
		(
		  ID                 ,
		  TRAYSCAN_TASK_NO   ,
		  WAYBILL_NO         ,
		  SERIA_NO           ,
		  DEST_ORG_NAME      ,
		  CREATE_TIME		,
		  PACKAGE_NO		
		)values(
		  #{item.id,jdbcType=VARCHAR},
		  #{item.trayScanTaskNo,jdbcType=VARCHAR},
		  #{item.waybillNo,jdbcType=VARCHAR},
		  #{item.serialNo,jdbcType=VARCHAR},	
		  #{item.destDeptName,jdbcType=VARCHAR},
		  #{item.createDate ,jdbcType=TIMESTAMP},
		  #{item.packageNo ,jdbcType=VARCHAR}
		)
		</foreach>
		;end;
	</insert>
	<!-- 更新托盘任务 -->
	<update id="updateTrayScanTask" parameterType="HashMap">
		update tfr.T_OPT_TRAYSCAN_TASK tt set 
		<if test="forkliftDriverCode!=null and forkliftDriverCode!=''">tt.FORKLIFT_DRIVER_CODE = #{forkliftDriverCode,jdbcType=VARCHAR},</if>
		<if test="forkliftDriverName!=null and forkliftDriverName!=''">tt.FORKLIFT_DRIVER_NAME = #{forkliftDriverName,jdbcType=VARCHAR},</if>
		<if test="forkliftDepartmentCode!=null and forkliftDepartmentCode!=''">tt.FORKLIFT_ORG_CODE = #{forkliftDepartmentCode,jdbcType=VARCHAR},</if>
		<if test="trayscanTime!=null and trayscanTime!=''">tt.TRAYSCAN_TIME = #{trayscanTime,jdbcType=TIMESTAMP} , </if>
		tt.STATU = #{statu,jdbcType=VARCHAR}
		<where>
		 tt.TASK_NO=#{taskNo,jdbcType=VARCHAR}
		</where>
	</update>
	
	
	<!-- 更新托盘任务叉车票数 -->
	<update id="updateTrayScanForkliftCount" parameterType="HashMap">
		update tfr.T_OPT_TRAYSCAN_TASK tt set 
		<if test="beCreateWork!=null and beCreateWork!=''">tt.BE_CREATE_WORK=#{beCreateWork,jdbcType=VARCHAR},</if>
		tt.FORKLIFT_TICKS_COUNT=#{forkliftCount}
		<where>
		 tt.TASK_NO=#{taskNo,jdbcType=VARCHAR}
		</where>
	</update>
	<!-- 查询任务 -->
	<select id="queryTrayScanNO" parameterType="com.deppon.foss.module.transfer.pda.api.shared.domain.QueryTrayScanTaskEntity"
		resultMap="queryTrayScanResultMap">
		<![CDATA[select 
			distinct tt.id id ,
			tt.task_no taskNo,
			tt.creater_code bindingCode,
			tt.create_time traytaskCreatTime,
			tt.outfield_org_code outfieldCode,
			tt.creater_org_code bindingDept,
			tt.forklift_ticks_count forkliftVotes
			from tfr.T_OPT_TRAYSCAN_TASK tt 
			left join  tfr.T_OPT_TRAYSCAN_TASK_DETAIL td 
			on tt.task_no=td.TRAYSCAN_TASK_NO]]>
			<where>
				tt.statu='UNSCAN'
			  	<if test="waybillNo!=null and waybillNo!=''">and td.waybill_no = #{waybillNo}</if>
			  	<if test="serialNo!=null and serialNo!=''">and td.seria_no = #{serialNo} </if>
			  	<if test="packageNo!=null and packageNo!=''">and td.package_no=#{packageNo}</if>
			  	<if test="orgCode!=null and orgCode!=''">and tt.outfield_org_code = #{orgCode}</if>			
				<if test="bindingCode!=null and bindingCode!=''"> 
					and tt.creater_code =#{bindingCode}
				</if>
				<if test="queryTime!=null and queryTime!=''">
					and tt.create_time <![CDATA[>=]]> #{queryTime}
				</if>
				<if test="taskNo!=null and taskNo!=''"> and tt.task_no=#{taskNo}</if>
			</where>		
	</select>
	<!-- 查询任务 明细-->
	<select id="queryTrayScanDetail" parameterType="com.deppon.foss.module.transfer.pda.api.shared.domain.QueryTrayScanTaskEntity"
		resultMap="queryTrayScanDetailResultMap">
		select 
				distinct   td.id id,
				td.waybill_no waybillNo,
			    td.seria_no serialNo,	 
			    td.dest_org_name destDeptName,
			    td.dest_org_code destDept,
			    td.package_no packageNo
			from tfr.T_OPT_TRAYSCAN_TASK_DETAIL td
			left join tfr.T_OPT_TRAYSCAN_TASK tt
			on tt.task_no=td.TRAYSCAN_TASK_NO
			<where>
			td.TRAYSCAN_TASK_NO = #{taskNo}
			</where>
	</select>
	
	<select id="queryTrayScanPackageDetail" parameterType="com.deppon.foss.module.transfer.pda.api.shared.domain.QueryTrayScanTaskEntity"
		resultMap="queryTrayScanDetailResultMap">
		<![CDATA[select  distinct
				decode(td.package_no,null,td.id,null) id,
				decode(td.package_no,null,td.waybill_no,null) waybillNo,
			    decode(td.package_no,null,td.seria_no,null) serialNo,	 
			    decode(td.package_no,null,td.dest_org_name,null) destDeptName,
			    decode(td.package_no,null,td.dest_org_code,null) destDept,
			    td.package_no packageNo
			from tfr.T_OPT_TRAYSCAN_TASK_DETAIL td
			left join tfr.T_OPT_TRAYSCAN_TASK tt
			on tt.task_no=td.TRAYSCAN_TASK_NO]]>
			<where>
			td.TRAYSCAN_TASK_NO = #{taskNo}
			</where>
	</select>
	
	<!-- 查询是否代打木架-->
	<select id="queryIsWooded" parameterType="com.deppon.foss.module.transfer.pda.api.shared.domain.QueryTrayScanTaskEntity"
		resultType="Long">
		select count(1) from 
			tfr.t_opt_package_require pr
			inner join tfr.t_opt_package_request_detail prd
			on prd.packagerequest_id= pr.id
			<where>
				pr.waybill_no =#{waybillNo}
			and pr.package_org_code=#{orgCode}
			
			and prd.serial_no=#{serialNo}
			
			and prd.is_packed='N'
			</where>
			
	</select>
	<!-- 删除托盘任务 -->
	<delete id="deleteTrayScanTask" parameterType="HashMap">
		<![CDATA[delete tfr.t_opt_trayscan_task tt]]>
		<where>
			tt.id=#{id}
		</where>
	</delete>
	<!-- 删除托盘任务明细 -->
	<delete id="deleteTrayScanTaskDetail" parameterType="HashMap">
		<![CDATA[delete tfr.t_opt_trayscan_task_detail td]]>
		<where>
			where td.trayscan_task_no=#{taskNo}
		</where>	
	</delete>
	<!-- 取消托盘任务 -->
	<update id="cancelTrayScanTask" parameterType="java.lang.String">
		update tfr.T_OPT_TRAYSCAN_TASK tt set 
		tt.statu='CANCEL'
		<where>
			tt.task_no=#{taskNo}
		</where>
	</update>
	<!-- 查询是否贵重物品 -->
	<select id="queryIsPreciousGoods" parameterType="java.lang.String"
	  resultType="java.lang.String">
	  select wb.precious_goods from pkp.t_srv_waybill wb 
	  <where>
	  	wb.waybill_no=#{waybillNo}
	  	and wb.active='Y'
	  </where>
	</select>
	<!-- 根据运单号和当前部门编号 查询库存 -->
	<select id="queryWaybillStock" parameterType="Map" resultMap="stockResultMap">
		SELECT WAYBILL_NO,SERIAL_NO,ORG_CODE,GOODS_AREA_CODE,OPERATOR_NAME,IN_STOCK_TIME,SCAN_TIME,NEXT_ORG_CODE FROM tfr.t_opt_stock 
		where waybill_no = #{waybillNo}
		 and SERIAL_NO = #{serialNo}
		 and ORG_CODE = #{outfieldCode}
	</select>
	<!-- 查询运输性质名称 -->
	<select id="queryWaybillProperty" parameterType="java.lang.String" resultType="java.lang.String">
		select pro.name from  pkp.t_srv_product pro 
		<where>
			pro.active = 'Y' 
			and pro.code=#{property}
		</where>  
	</select>
	<!-- 查询未生成工作量的任务 -->
	<select id="queryNotForkliftWork"  resultMap="queryTrayScanResultMap">
     <![CDATA[	
		Select Distinct Tt.Id                Id,
		                Tt.Task_No           Taskno,
		                Tt.Creater_Code      Bindingcode,
		                Tt.Create_Time       Traytaskcreattime,
		                Tt.Outfield_Org_Code Outfieldcode,
		                Tt.Creater_Org_Code  Bindingdept,
		                Tt.Statu             Trayscanstatu
		  From Tfr.T_Opt_Trayscan_Task Tt
		 Where Tt.Create_Time >= Trunc(Sysdate) - 2
		   And Tt.Be_Create_Work = 'N'
		   And Rownum <= 5000
	  ]]>	
	</select>
	<!-- 运单提货网点上的目的站简称（标签的上目的站） -->
	<select id="queryOrgSimaleName" parameterType="java.lang.String" resultType="java.lang.String">
		select og.org_simple_name from bse.t_bas_org og 
		<where>
			og.active='Y'
			and og.code =#{customerPickupOrgCode}
		</where> 
	</select>
	
	<!-- 查询运单入库信息在入库日志中查询 -->
	<select id="queryWaybillInStock" parameterType="Map" resultMap="stockResultMap">
		select 
			it.waybill_no  WAYBILL_NO, 
			it.serial_no  SERIAL_NO, 
			it.in_stock_time IN_STOCK_TIME, 
			it.goods_area_code  GOODS_AREA_CODE
  			from tfr.t_opt_in_stock it
 			<where> it.waybill_no =#{waybillNo}
   				and it.serial_no =#{serialNo}
   				and it.org_code =#{outfieldCode}
 			</where>
 				order by it.in_stock_time desc 
	</select>
	
	<!--新增叉车离线扫描信息-->
	<insert id="createTrayOfflineScanTask" parameterType="java.util.List">
		begin 
		<foreach collection="list" item="item" separator=";">
			insert into tfr.t_opt_trayofflinescan_task
			  (ID,
			   WAYBILL_NO,
			   SERIA_NO,
			   FORKLIFT_DRIVER_NAME,
			   FORKLIFT_DRIVER_CODE,
			   FORKLIFT_ORG_CODE,
			   OFFLINE_TASK_NO,
			   OFFLINE_SCAN_TIME,
			   OUTFIELD_ORG_CODE,
			   OPERAT_TYPE,
			   PACKAGE_NO
			   )
			values(
				#{item.id,jdbcType=VARCHAR},
				#{item.waybillNo,jdbcType=VARCHAR},
				#{item.serialNo,jdbcType=VARCHAR},
				#{item.forkLiftDriverName,jdbcType=VARCHAR},
				#{item.forkLiftDriverCode,jdbcType=VARCHAR},
				#{item.forkLiftDept,jdbcType=VARCHAR},	
				#{item.offlineTaskNo,jdbcType=VARCHAR},
				#{item.trayOfflineScanTime,jdbcType=TIMESTAMP},
				#{item.outFieldCode,jdbcType=VARCHAR},
				#{item.operatType,jdbcType=VARCHAR},
				#{item.packageNo,jdbcType=VARCHAR}
			)
		</foreach>
		;end;
	</insert>
	
	<!--叉车离线扫描信息查询 零担-->
	<select id="querytrayOfflineScanInfo" parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.QueryTrayOfflineScanConditionDto" resultMap="queryTrayOfflineScanInfoResultMap">
 
	 SELECT 
	 yy.waybillNo 	waybillNo,
	 yy.serialNo	serialNo,
	 yy.trayOfflineScanTime		trayOfflineScanTime,
	 yy.forkLiftDriverName		forkLiftDriverName,
	 yy.forkLiftDriverCode		forkLiftDriverCode, 
	 yy.forkLiftDept 			forkLiftDept,
	 yy.offlineTaskNo 			offlineTaskNo,
	 yy.taskNo					taskNo,
	  yy.packageNo            packageNo,
	 yy.createUserName			createUserName,
	 yy.createUserCode 			createUserCode,
	 yy.createrDept				createrDept,
	 yy.forkliftCount			forkliftCount,
	 xx.loader_name				loaderName,
	 xx.loader_code 			loaderCode,
	 xx.load_org_name			loadOrgName
			FROM (
			 SELECT 
			  distinct 
			       OT.WAYBILL_NO           waybillNo,
			             OT.SERIA_NO            serialNo,
			             OT.PACKAGE_NO        packageNo,
			             OT.OFFLINE_SCAN_TIME    trayOfflineScanTime,
			             OT.FORKLIFT_DRIVER_NAME forkLiftDriverName,
			             OT.FORKLIFT_DRIVER_CODE forkLiftDriverCode,
			             og1.name forkLiftDept,
			             'A' || OT.OFFLINE_TASK_NO offlineTaskNo,
			             DECODE(t.TASK_NO, '', '', 'B' || t.TASK_NO) taskNo,
			             t.CREATER_NAME createUserName,
			             t.CREATER_CODE createUserCode,
			             t.name createrDept,
			             t.FORKLIFT_TICKS_COUNT forkliftCount,
			             '' loader_name,
			             '' loader_code,
			             '' load_org_name 
			            
			        from tfr.t_Opt_Trayofflinescan_Task OT
			        left join (select td.waybill_no,
			                          td.seria_no,
			                          tt.task_no,
			                          tt.creater_code,
			                          tt.forklift_ticks_count,
			                          tt.outfield_org_code,
			                          tt.creater_name,
			                          og2.name
			                     from tfr.t_Opt_Trayscan_Task_Detail td
			                    inner join  tfr.t_Opt_Trayscan_Task  tt on tt.Task_No=td.Trayscan_Task_No 
			                        left join   bse.t_bas_org og2 on tt.CREATER_ORG_CODE = og2.code  and og2.active='Y'             
			                   where  tt.statu !='SCANNED'
			                      and tt.Outfield_Org_Code=#{outFieldCoade}
                            	  and tt.Create_Time <![CDATA[>=]]>#{beginTrayCtreateTime} 
                                  and tt.Create_Time <![CDATA[<=]]> #{endTrayCtreateTime}
			                   ) t on ot.waybill_no = t.waybill_no
			                       and ot.seria_no = t.seria_no
			                       and ot.outfield_org_code = t.outfield_org_code
			      left join bse.t_bas_org og1 on og1.code=ot.forklift_org_code and og1.active='Y'
			       <where> 
					 	 OT.OFFLINE_SCAN_TIME  <![CDATA[>=]]> #{beginOfflineTrayScanTime}
						and OT.OFFLINE_SCAN_TIME  <![CDATA[<=]]> #{endOfflineTrayScanTime}
				 	<if test="forkLiftDriverCode!=null and forkLiftDriverCode!=''">
				 		and OT.FORKLIFT_DRIVER_CODE = #{forkLiftDriverCode}
				 	</if>
				 	<if test="forkLiftDept!=null and forkLiftDept!=''">
						 and OT.FORKLIFT_ORG_CODE = #{forkLiftDept}
				 	</if>
				 	<if test="waybillNo!=null and waybillNo!=''">
					 	and OT.WAYBILL_NO=#{waybillNo}
				 	</if>
				 	<if test="forkLiftDept == null or forkLiftDept ==''">
					 	and OT.OUTFIELD_ORG_CODE =#{outFieldCoade}
				 	</if>
				 </where>
			      ) yy
			LEFT JOIN (
			SELECT 
			  distinct 
			       		OT.WAYBILL_NO           waybillNo,
			             OT.SERIA_NO             serialNo,
			             'A' || OT.OFFLINE_TASK_NO offlineTaskNo,
			             lp.loader_name,
			             lp.loader_code,
			             og.name load_org_name      
			        from tfr.t_Opt_Trayofflinescan_Task OT
			        left join (select td.waybill_no,
			                          td.seria_no,
			                          tt.task_no,
			                          tt.creater_code,
			                          tt.forklift_ticks_count,
			                          tt.outfield_org_code,
			                          tt.creater_name,
			                          og2.name
			                     from tfr.t_Opt_Trayscan_Task_Detail td
			                    inner join  tfr.t_Opt_Trayscan_Task  tt on tt.Task_No=td.Trayscan_Task_No 
			                    left join   bse.t_bas_org og2 on tt.CREATER_ORG_CODE = og2.code  and og2.active='Y'             
			                   where  tt.statu !='SCANNED'
			                      and tt.Outfield_Org_Code=#{outFieldCoade}
                            	  and tt.Create_Time <![CDATA[>=]]>#{beginTrayCtreateTime} 
                                  and tt.Create_Time <![CDATA[<=]]> #{endTrayCtreateTime}
			                   ) t on ot.waybill_no = t.waybill_no
			                       and ot.seria_no = t.seria_no
			                       and ot.outfield_org_code = t.outfield_org_code
			      left join tfr.t_opt_unload_waybill_detail ud on ud.waybill_no=OT.waybill_no
			      inner join tfr.t_Opt_Unload_Serialno us on us.unload_waybill_detail_id=ud.id and us.serial_no=OT.seria_no
			      left join tfr.t_opt_unload_task ut on ut.id=ud.unload_task_id 
			      left join tfr.t_Opt_Loader_Participation lp on lp.task_id=ut.id and lp.be_creator='Y'
			      left join bse.t_bas_employee ep on ep.emp_code=lp.loader_code and ep.active='Y'
				  left join bse.t_bas_org og on og.code=ep.org_code and og.active='Y'
			
			      <where> 
					 	  OT.OFFLINE_SCAN_TIME  <![CDATA[>=]]> #{beginOfflineTrayScanTime}
						and OT.OFFLINE_SCAN_TIME  <![CDATA[<=]]> #{endOfflineTrayScanTime}
				 	<if test="forkLiftDriverCode!=null and forkLiftDriverCode!=''">
				 		and OT.FORKLIFT_DRIVER_CODE = #{forkLiftDriverCode}
				 	</if>
				 	<if test="forkLiftDept!=null and forkLiftDept!=''">
						 and OT.FORKLIFT_ORG_CODE = #{forkLiftDept}
				 	</if>
				 	<if test="waybillNo!=null and waybillNo!=''">
					 	and OT.WAYBILL_NO=#{waybillNo}
				 	</if>
				 	<if test="forkLiftDept == null or forkLiftDept ==''">
					 	and OT.OUTFIELD_ORG_CODE =#{outFieldCoade}
				 	</if>
      				and ut.unload_org_code=#{outFieldCoade}
      				and ut.task_state!='CANCELED'
				 	AND lp.id IS NOT NULL 
				 </where>
			      
			) xx ON xx.waybillNo=yy.waybillNo AND xx.serialNo=yy.serialNo AND xx.offlineTaskNo=yy.offlineTaskNo
	</select>
	<!--叉车离线扫描信息查询 快递-->
	<select id="querytrayOfflineScanInfoExpress" parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.QueryTrayOfflineScanConditionDto" resultMap="queryTrayOfflineScanInfoExpressResultMap">
 		select '2016-01-01 08:08:08' trayOfflineScanTime,'1' WaybillNo,'李四' forkLiftDriverName,'328060' forkLiftDriverCode,
	'FOSS中转开发' forkLiftDept,'123456' offlineTaskNo,'234567' taskNo,'叶开' createUserName,'328060' createUserCode,
	'FOSS中转开发组' createrDept from tfr.t_opt_trayscan_task
	 
	</select>
	<!-- 根据卸车任务号查询卸车任务绑定托盘明细list  零担-->
	<select id="queryUnloadbindTrayDetailByUnloadTaskNo" parameterType="java.lang.String" resultMap="unloadTaskbindTrayDetailMap">
			select t.task_no taskNo,
			       td.waybill_no waybillNo,
			       max(t.creater_name) bindUserName,
			       max(t.creater_code) bindUserCode,
			       max(t.create_time) bindTraytaskTime,
			       max(t.forklift_driver_name) forkliftDriverName,
			       max(t.forklift_driver_code) forkliftDriverCode,
			       max(t.trayscan_time) trayscanTime,
			       td.package_no packageNo
			  from tfr.t_opt_trayscan_task t
			  join tfr.t_opt_trayscan_task_detail td
			    on t.task_no = td.trayscan_task_no
			 where t.unload_task_no = #{unloadTaskNo}
			    and t.statu in ('UNSCAN', 'SCANNED')
			 group by task_no, waybill_no, package_no

	</select>
	
	<!-- 根据卸车任务号查询卸车任务绑定托盘明细list  快递-->
	<select id="queryUnloadbindTrayDetailByUnloadTaskNoExpress" parameterType="java.lang.String" resultMap="unloadTaskbindTrayDetailMap">
			select '123456' taskNo,'234567' waybillNo,'张三' bindUserName,'223311' bindUserCode,'2016-01-01 08:08:08' bindTraytaskTime,
	'李四' forkliftDriverName,'223300' forkliftDriverCode,'2016-01-01 08:08:08' trayscanTime
			  from tfr.t_opt_trayscan_task t
			 

	</select>
	
	<!-- 查询卸车任务绑定托盘信息  零担-->
	<select id="queryUnloadTaskbindTrayList" parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.UnloadbindTrayQueryConditionDto" resultMap="queryUnloadbindTrayMap">
					select t.unload_task_no ,
					       p.loader_name createName,
					       p.loader_code createCode,
					       t.vehicle_no vehicleNo,
					       max(to_char(t.unload_start_time,'yyyy-mm-dd hh24:mi:ss')) unloadTaskCreateTime
					  from tfr.t_opt_unload_task t
					  join tfr.t_opt_loader_participation p
					    on p.task_id = t.id
					  join tfr.t_opt_trayscan_task tr
					    on t.unload_task_no=tr.unload_task_no  
				 <where>
				         t.unload_way = 'PDA'
				         and p.be_creator='Y'
				         and tr.statu in ('UNSCAN', 'SCANNED')
                         and t.unload_org_code=#{outfiledCode}
				         <if test="unloadTaskNo!=null and unloadTaskNo!=''">and t.unload_task_no =#{unloadTaskNo}</if> 
				         <if test="createrCode!=null and createrCode!=''">and p.loader_code =#{createrCode}</if>
				         <if test="vehicleNo!=null and vehicleNo!=''"> and t.vehicle_no = #{vehicleNo}</if>
				         <if test="createStartDate!=null and createEndDate!=null">
				         and t.unload_start_time between to_date(#{createStartDate}, 'yyyy-mm-dd hh24:mi:ss') 
				         and to_date(#{createEndDate}, 'yyyy-mm-dd hh24:mi:ss')
				        </if>
				 </where> 
				 group by t.unload_task_no, p.loader_name, p.loader_code, t.vehicle_no
	           
	</select>
	
	<!-- 查询卸车任务绑定托盘信息 快递 -->
	<select id="queryUnloadTaskbindTrayListExpress" parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.UnloadbindTrayQueryConditionDto" resultMap="queryUnloadbindTrayExpressMap">
					select '123456' unloadTaskNo,'张三' unloadCreator,'234567' unloadCreatorCode,'10' totalTicks,2 bindPieces,
  				30 bindRate,3 scanPieces,4 unLoadScanPieces,'345678' vehicleNo,5 forkliftTicks,6 trayTaskTotal,
  				7 scannedTotal,'2016-01-01 08:08:08' unloadTaskCreateTime  from tfr.t_opt_trayscan_task
	           
	</select>
	
	<!-- 根据卸车任务hao查询卸车任务绑定托盘总票数 -->
	<select id="queryUnLoadTaskbindTrayTotalVotes" parameterType="java.util.List" resultMap="queryUnloadbindTrayMap">
	     select unload_task_no, count(1) totalVotes
                 from (select max(tt.unload_task_no) unload_task_no,
                               td.waybill_no
                          from tfr.t_opt_trayscan_task tt
                          join tfr.t_opt_trayscan_task_detail td
                            on tt.task_no = td.trayscan_task_no
                          <where> ( 
                       <foreach collection="list"  item="item"  separator="or" >
							 		tt.unload_task_no = #{item,jdbcType=VARCHAR}
			           </foreach>
			           )
                          </where>
                         group by td.waybill_no)
                group by unload_task_no
	  
	</select>
	<!-- 根据卸车任务号查询卸车任务绑定托盘总件数 -->
	<select id="queryUnLoadTaskbindTrayTotalPieces" parameterType="java.util.List" resultMap="queryUnloadbindTrayMap">
	     select unload_task_no, count(1) totalPieces
           from (select max(tt.unload_task_no) unload_task_no,
                        td.waybill_no,
                        td.seria_no
                   from tfr.t_opt_trayscan_task tt
                   join tfr.t_opt_trayscan_task_detail td
                     on tt.task_no = td.trayscan_task_no
                  where 
                  	tt.statu in ('UNSCAN', 'SCANNED')
                  	and ( 
                       <foreach collection="list"  item="item"  separator="or" >
							 		tt.unload_task_no = #{item,jdbcType=VARCHAR}
			           </foreach>
			           )
			       
                  group by td.waybill_no, td.seria_no)
          group by unload_task_no
	  
	</select>
	<!-- 根据卸车任务号查询卸车任务绑定的叉车总票数-->
	<select id="queryTotalforkliftTicksByUnloadTaskNo" parameterType="java.util.List" resultMap="queryUnloadbindTrayMap">
		
		    select kk.unload_task_no ,kk.forkliftTicks forkliftTicks,
		    		kk.trayTaskQty trayTaskTotal,xx.xa scannedTotal  from (
			    select t.unload_task_no,sum(t.forklift_ticks_count) forkliftTicks,count(t.task_no) trayTaskQty
			      from tfr.t_opt_trayscan_task t
			     where ( 
                       <foreach collection="list"  item="item"  separator="or" >
							 		t.unload_task_no = #{item,jdbcType=VARCHAR}
			           </foreach>
			           ) 
			       and t.statu in ('UNSCAN', 'SCANNED')
			     group by t.unload_task_no
		     ) kk left join (
		    	 select b.unload_task_no,count(0) xa from tfr.t_opt_trayscan_task b 
		    	 where  b.statu='SCANNED'
		    	 	and ( 
                       <foreach collection="list"  item="item"  separator="or" >
							 		b.unload_task_no = #{item,jdbcType=VARCHAR}
			           </foreach>
			           ) 
		    	 group by b.unload_task_no
		     ) xx on kk.unload_task_no=xx.unload_task_no
	</select>
	
	<!-- 根据卸车任务号查询绑定托盘任务件数-->
    <select id="queryBindTrayTaskPiecesByUnloadTaskNo" parameterType="java.util.List" resultMap="queryUnloadbindTrayMap">
		select unload_task_no, count(1) bindPieces
		  from (select max(tt.unload_task_no) unload_task_no,
		               td.waybill_no,
		               td.seria_no
		          from tfr.t_opt_trayscan_task tt
		          join tfr.t_opt_trayscan_task_detail td
		            on tt.task_no = td.trayscan_task_no
		         where tt.statu in ('UNSCAN', 'SCANNED')
		           and ( 
                       <foreach collection="list"  item="item"  separator="or" >
							 		tt.unload_task_no = #{item,jdbcType=VARCHAR}
			           </foreach>
			           ) 
		         group by tt.unload_task_no, td.waybill_no, td.seria_no)
		 group by unload_task_no
	</select>
	
	<!-- 根据卸车任务号查询绑定托盘任务中叉车扫描件数 -->
	    <select id="queryBindTrayTaskScanPiecesByUnloadTaskNo" parameterType="java.util.List" resultMap="queryUnloadbindTrayMap">
		select unload_task_no, count(1) scanPieces
		  from (select max(tt.unload_task_no) unload_task_no,
		               td.waybill_no,
		               td.seria_no
		          from tfr.t_opt_trayscan_task tt
		          join tfr.t_opt_trayscan_task_detail td
		            on tt.task_no = td.trayscan_task_no
		         where 
		         	tt.statu ='SCANNED'
		         	and ( 
                       <foreach collection="list"  item="item"  separator="or" >
							 		tt.unload_task_no = #{item,jdbcType=VARCHAR}
			           </foreach>
			           )
		            
		         group by tt.unload_task_no, td.waybill_no, td.seria_no)
		 group by unload_task_no
	</select>
	
    <!-- 根据卸车任务号查询卸车任务中的总件数与总票数 -->
    <select id="queryUnloadTaskTotalVotesAndTotalPiecesByUnloadTaskNo" parameterType="java.util.List" resultMap="queryUnloadbindTrayMap">
	   select t.unload_task_no,sum(bd.waybilltotal) totalVotes,sum(bd.pieces) totalPieces from tfr.t_opt_unload_task t
	    join tfr.t_opt_unload_bill_detail bd
	       on t.id=bd.unload_task_id
	    where ( 
	               <foreach collection="list"  item="item"  separator="or" >
						 		t.unload_task_no = #{item,jdbcType=VARCHAR}
		           </foreach>
			     )
	     group by t.unload_task_no
	</select>
	
	<!-- 根据卸车任务号查询PDA已经扫描件数 -->
	    <select id="queryPDASanPiecesByUnloadTaskNo" parameterType="java.util.List" resultMap="queryUnloadbindTrayMap">
		     select unload_task_no, count(1) unloadScanPieces
		      from (select ut.unload_task_no, wd.waybill_no, us.serial_no
		              from tfr.t_opt_unload_task ut
		              join tfr.t_opt_unload_waybill_detail wd
		                on ut.id = wd.unload_task_id
		              join tfr.t_opt_unload_serialno us
		                on wd.id = us.unload_waybill_detail_id
		             where ut.unload_way = 'PDA'
		               and us.scan_state in('SCANED','BY_HAND')
		               and ( 
	              		 <foreach collection="list"  item="item"  separator="or" >
						 		ut.unload_task_no = #{item,jdbcType=VARCHAR}
		           		</foreach>
			    	 )
		             group by ut.unload_task_no, wd.waybill_no, us.serial_no)
		     group by unload_task_no
	</select>
	
	<!--  根据任务号与运单号查询托盘绑定任务明细-->
	<select id="queryTrayScanDetailByTaskNoAndWaybillNo" resultMap="queryWaybillResultMap" parameterType="java.util.Map">
		<![CDATA[
			select  
			td.id id,
			td.waybill_no waybillNo,
			td.seria_no  serialNo,
			td.dest_org_code destDeptCode,
			td.dest_org_name destDeptName
			from tfr.t_opt_trayscan_task_detail td
		]]>
		<where>
			td.trayscan_task_no =#{taskNo,jdbcType=VARCHAR}
			and td.waybill_no=#{waybillNo,jdbcType=VARCHAR}
		</where>
	</select>
	
	<!-- 根据卸车任务号导出卸车任务绑定托盘流水号明细list  零担-->
	<select id="exportUnloadTaskbindTrayDetailExcelByUnloadTaskNo" parameterType="java.lang.String" resultMap="unloadTaskbindTrayDetailSeriaNoMap">
			select t.task_no taskNo,
			       td.waybill_no waybillNo,
			       td.package_no packageNo,
			       td.seria_no seriaNo,
			       max(t.creater_name) bindUserName,
			       max(t.creater_code) bindUserCode,
			       max( to_char(t.create_time,'yyyy-mm-dd hh24:mi:ss')) bindTraytaskTime,
			       max(t.forklift_driver_name) forkliftDriverName,
			       max(t.forklift_driver_code) forkliftDriverCode,
			       max(to_char(t.trayscan_time,'yyyy-mm-dd hh24:mi:ss')) trayscanTime
			  from tfr.t_opt_trayscan_task t
			  join tfr.t_opt_trayscan_task_detail td
			    on t.task_no = td.trayscan_task_no
			 where t.unload_task_no = #{unloadTaskNo}
			       and t.statu in ('UNSCAN', 'SCANNED')
			 group by task_no,package_no, waybill_no,seria_no

	</select>
	
	<!-- 根据卸车任务号导出卸车任务绑定托盘流水号明细list  快递-->
	<select id="exportUnloadTaskbindTrayDetailExcelByUnloadTaskNoExpress" parameterType="java.lang.String" resultMap="unloadTaskbindTrayDetailSeriaNoMap">
			select '123456' taskNo,'234567' waybillNo,'张三' bindUserName,'223311' bindUserCode,'2016-01-01 08:08:08' bindTraytaskTime,
	'李四' forkliftDriverName,'223300' forkliftDriverCode,'2016-01-01 08:08:08' trayscanTime
			  from tfr.t_opt_trayscan_task t
	</select>
	
	<!-- PDA接口-查询叉车票数 -->
	<select id="queryTraybindforkLiftTicks" parameterType="map"	resultMap="queryTrayScanResultMap">
			 select tt.id                   id,
			       tt.task_no              taskNo,
			       tt.creater_code         bindingCode,
			       tt.create_time          traytaskCreatTime,
			       tt.trayscan_time        trayscanTime,
			       tt.outfield_org_code    outfieldCode,
			       tt.creater_org_code     bindingDept,
			       tt.forklift_ticks_count forkliftVotes,
			       tt.unload_task_no unloadTaskNo
			  from tfr.T_OPT_TRAYSCAN_TASK tt
			 where tt.forklift_driver_code is not null
			   and tt.forklift_driver_code = #{ceaterCode}
			   and tt.outfield_org_code = #{createrOrgCode}
			   and tt.trayscan_time is not null
			   and tt.trayscan_time between to_date(#{beginTime}, 'yyyy-mm-dd hh24:mi:ss') 
			   and to_date(#{currentTime}, 'yyyy-mm-dd hh24:mi:ss')
			   and tt.statu ='SCANNED'
			
	</select>
	<select id="queryTrayOfflineScanWaybillQty" parameterType="map" resultMap="queryTrayOfflineScanMap">
		select offlineTaskNo offlineTaskNo,trayOfflineScanTime trayOfflineScanTime,count(waybillno) waybillQty 
		from (
		select 
			tt.offline_task_no    offlineTaskNo,
		 	tt.offline_scan_time  trayOfflineScanTime,
		 	tt.waybill_no  waybillno
		  from tfr.t_opt_trayofflinescan_task tt
		 where tt.forklift_driver_code =  #{ceaterCode}
		   and tt.outfield_org_code = #{createrOrgCode}
		   and tt.offline_scan_time between  to_date(#{beginTime}, 'yyyy-mm-dd hh24:mi:ss') 
		   and	to_date(#{currentTime}, 'yyyy-mm-dd hh24:mi:ss')

 		group by tt.offline_task_no, tt.offline_scan_time,tt.waybill_no)
 		group by offlineTaskNo,trayOfflineScanTime
	</select>
	<select id="queryPackageDetail" parameterType="java.lang.String" resultType="com.deppon.foss.module.transfer.unload.api.shared.dto.PcakageWayBillDto">
		select pd.waybill_no wayBillNo
			,pd.serial_no serialNo
			from tfr.t_opt_package p
			inner join tfr.t_opt_package_detail pd on pd.package_no=p.package_no 
			where 
			p.package_no=#{packageNo,jdbcType=VARCHAR}
			and p.status!='CANCELED'
			and p.status!='ALREADY_CANCELED'
	
	</select>
</mapper>