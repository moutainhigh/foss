<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="foss.unload.unloadtaskquery" >
  <resultMap id="BaseResultMap" type="com.deppon.foss.module.transfer.unload.api.shared.domain.UnloadTaskEntity" >
    <id column="id" property="id" />
    <result column="unloadTaskNo" property="unloadTaskNo" />
    <result column="vehicleNo" property="vehicleNo" />
    <result column="platformNo" property="platformNo" />
    <result column="platformId" property="platformId" />
    <result column="unloadStartTime" property="unloadStartTime" />
    <result column="unloadEndTime" property="unloadEndTime" />
    <result column="taskState" property="taskState" />
    <result column="unloadType" property="unloadType" />
    <result column="unloadWay" property="unloadWay" />
    <result column="unloadOrgCode" property="unloadOrgCode" />
    <result column="unloadOrgName" property="unloadOrgName" />
    <result column="beException" property="beException" />
    <result column="exceptionNotes" property="exceptionNotes" />
    <result column="planCompleteTime" property="planCompleteTime" />
    <result column="beScanInstock" property="beScanInstock" />
  </resultMap>
  
  <resultMap id="unloadTaskDtoResultMap" 
		type="com.deppon.foss.module.transfer.unload.api.shared.dto.UnloadTaskDto" extends="BaseResultMap">
			<result property="loaderName" column="loaderName" />
			<result property="gaprepNo" column="gaprepNo" />
			<result property="line" column="line" />
			<result property="arriveTime" column="arriveTime" />
  </resultMap>
  
  <!-- 卸车明细 -->
  <resultMap id="unloadWaybillDetailResultMap" type="com.deppon.foss.module.transfer.unload.api.shared.domain.UnloadWaybillDetailEntity" >
    <id column="id" property="id"/>
    <result column="unloadTaskId" property="unloadTaskId"/>
    <result column="billNo" property="billNo"/>
    <result column="waybillNo" property="waybillNo"/>
    <result column="operationGoodsQty" property="operationGoodsQty"/>
    <result column="scanGoodsQty" property="scanGoodsQty"/>
    <result column="origOrgCode" property="origOrgCode"/>
    <result column="origOrgName" property="origOrgName"/>
    <result column="destOrgCode" property="destOrgCode"/>
    <result column="destOrgName" property="destOrgName"/>
    <result column="goodsName" property="goodsName"/>
    <result column="pack" property="pack"/>
    <result column="transportType" property="transportType"/>
    <result column="taskBeginTime" property="taskBeginTime"/>
    <result column="unloadOrgCode" property="unloadOrgCode"/>
    <result column="unloadWeightTotal" property="unloadWeightTotal"/>
    <result column="unloadVolumeTotal" property="unloadVolumeTotal"/>
    <result column="handOverPieces" property="handOverPieces"/>
    <result column="waybillStatus" property="waybillStatus"/>
  </resultMap>

  <!-- 卸车明细Dto -->
  <resultMap id="unloadWaybillDetailDtoResultMap" 
  	type="com.deppon.foss.module.transfer.unload.api.shared.dto.UnloadWaybillDetailDto" extends="unloadWaybillDetailResultMap">
    <id column="handoverTotQty" property="handoverTotQty"/>
    <id column="scanGoodsQtyRate" property="scanGoodsQtyRate"/>
    <id column="weightTotal" property="weightTotal"/>
    <id column="volumeTotal" property="volumeTotal"/>
    <id column="serialNo" property="serialNo"/>
    <id column="optTime" property="optTime"/>
  </resultMap>
  
  <!-- 卸车流水明细Entity -->
  <resultMap id="unloadSerialNoDetailEntityResultMap"
			type="com.deppon.foss.module.transfer.unload.api.shared.domain.UnloadSerialNoDetailEntity">
			<result property="id" column="id" />
			<result property="unloadWaybillDetailId" column="unloadWaybillDetailId" />
			<result property="scanStatus" column="scanStatus" />
			<result property="goodsStatus" column="goodsStatus" />
			<result property="optTime" column="optTime" />
			<result property="deviceNo" column="deviceNo" />
			<result property="deviceId" column="deviceId" />
			<result property="serialNo" column="serialNo" />
			<result property="taskCreateTime" column="taskCreateTime" />
			<result property="createOrgCode" column="createOrgCode" />
	</resultMap>
	
	<!-- 理货员信息Entity -->
	<resultMap id="loaderParticipationResultMap" type="com.deppon.foss.module.transfer.load.api.shared.domain.LoaderParticipationEntity" >
    	<id column="ID" property="id" jdbcType="VARCHAR" />
	    <result column="LOADER_NAME" property="loaderName" jdbcType="VARCHAR" />
	    <result column="LOADER_CODE" property="loaderCode" jdbcType="VARCHAR" />
	    <result column="LOAD_ORG_CODE" property="loadOrgCode" jdbcType="VARCHAR" />
	    <result column="LOAD_ORG_NAME" property="loadOrgName" jdbcType="VARCHAR" />
	    <result column="JOIN_TIME" property="joinTime" jdbcType="TIMESTAMP" />
	    <result column="LEAVE_TIME" property="leaveTime" jdbcType="TIMESTAMP" />
	    <result column="BE_CREATOR" property="beCreator" jdbcType="CHAR" />
	    <result column="TASK_TYPE" property="taskType" jdbcType="VARCHAR" />
	    <result column="TASK_ID" property="taskId" jdbcType="VARCHAR" />
	</resultMap>
  
  <sql id="Base_Column_List" >
    ID, UNLOAD_TASK_NO, VEHICLE_NO, PLATFORM_NO, PLATFORM_ID, UNLOAD_START_TIME, UNLOAD_END_TIME, 
    TASK_STATE, UNLOAD_TYPE, UNLOAD_WAY, UNLOAD_ORG_CODE, UNLOAD_ORG_NAME, BE_EXCEPTION, 
    EXCEPTION_NOTES
  </sql>
  <select id="queryUnloadTask" resultMap="unloadTaskDtoResultMap" parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.UnloadTaskDto">
  	<![CDATA[
  		select unload.id
		  , unload.unload_task_no unloadTaskNo
		  , gaprep.gaprep_no gaprepNo
		  , unload.unload_way unloadWay
		  , unload.vehicle_no vehicleNo
		  , (select wm_concat(distinct ttd.line_name)
                          from tfr.t_opt_truck_task_bill ttb,
                               tfr.t_opt_truck_task_detail ttd,
                               tfr.t_opt_unload_bill_detail unloaddetail
                         where unloaddetail.unload_task_id = unload.id
                           and ttb.bill_no = unloaddetail.bill_no
                           and ttd.id = ttb.truck_task_detail_id
		    ) line
		  , loader.loader_name loaderName
		  , unload.platform_no platformNo
		  , unload.unload_type unloadType
		  , unload.task_state taskState
		  , case unload.unload_type
          when 'ELECTRANSPORT' then
          (select max(h.arrive_date)
                 from tfr.t_opt_unload_bill_detail unloaddetail,
                      tfr.t_opt_pick_handover h
            where unloaddetail.unload_task_id = unload.id
             and h.handover_no = unloaddetail.bill_no)
           else
           (select max(actual_arrive_time)
                          from tfr.t_opt_truck_task_bill ttb,
                               tfr.t_opt_truck_task_detail ttd,
                               tfr.t_opt_unload_bill_detail unloaddetail
                         where unloaddetail.unload_task_id = unload.id
                           and ttb.bill_no = unloaddetail.bill_no
                           and ttd.id = ttb.truck_task_detail_id
        	) end arriveTime
		  , unload.unload_start_time unloadStartTime
		  , unload.unload_end_time unloadEndTime
		from 
		  tfr.t_opt_unload_task unload
		  left join tfr.t_opt_unload_gaprep gaprep
		  on unload.id = gaprep.unload_task_id
		  left join tfr.t_opt_loader_participation loader
		  on unload.id = loader.task_id
		  and loader.be_creator = 'Y'
  	]]>
  	<if test="loaderName !=null and loaderName != '' ">	
		  left join tfr.t_opt_loader_participation loaderPram
		  on unload.id = loaderPram.task_id
	</if>
	<if test="billNo != null and billNo != '' ">
		left join tfr.t_opt_unload_bill_detail bd on bd.unload_task_id=unload.id
		left join tfr.t_opt_truck_task_bill tb on tb.bill_no = bd.bill_no
		
	</if>
  	<include refid="queryUnloadTaskWhere"/>
  </select>
  <select id="getTotCount" parameterType="com.deppon.foss.module.transfer.unload.api.shared.dto.UnloadTaskDto" resultType="Long">
	<![CDATA[
		select 
		  count(unload.id)
		from 
		  tfr.t_opt_unload_task unload
		  left join tfr.t_opt_unload_gaprep gaprep
		  on unload.id = gaprep.unload_task_id
		  left join tfr.t_opt_loader_participation loader
		  on unload.id = loader.task_id
		  and loader.be_creator = 'Y'
    ]]>
    <if test="loaderName !=null and loaderName != '' ">	
		  left join tfr.t_opt_loader_participation loaderPram
		  on unload.id = loaderPram.task_id
	</if>
	<if test="billNo != null and billNo != '' ">
		left join tfr.t_opt_unload_bill_detail bd on bd.unload_task_id=unload.id
		left join tfr.t_opt_truck_task_bill tb on tb.bill_no = bd.bill_no
		
	</if>
    <include refid="queryUnloadTaskWhere"/>
  </select>
  <sql id="queryUnloadTaskWhere">
	<where>
		<if test="unloadTaskNo !=null and unloadTaskNo != '' ">	
			and unload.unload_task_no = #{unloadTaskNo}
		</if>
		<if test="unloadOrgCode !=null and unloadOrgCode != '' ">	
			and unload.unload_org_code = #{unloadOrgCode}
		</if>
		<if test="vehicleNo !=null and vehicleNo != '' ">	
			and unload.vehicle_no = #{vehicleNo}
		</if>
		<!-- 272681 -->
		<if test="flightNo !=null and flightNo != '' ">	
			and unload.vehicle_no = #{flightNo}
		</if>
		<if test="loaderName !=null and loaderName != '' ">	
			and loaderPram.loader_code = #{loaderName}
		</if>
		<if test="unloadType !=null and unloadType != '' and unloadType != 'ALL'">	
			and unload.unload_type = #{unloadType}
		</if>
		<if test="taskState !=null and taskState != '' and taskState != 'ALL'">	
			and unload.task_state = #{taskState}
		</if>
		<if test="beginDate!=null and beginDate!=''">
			<![CDATA[and unload.unload_start_time >= to_date(#{beginDate}, 'yyyy-mm-dd hh24:mi:ss')]]>
		</if>
		<if test="endDate!=null and endDate!=''">
			<![CDATA[and unload.unload_start_time <= to_date(#{endDate}, 'yyyy-mm-dd hh24:mi:ss')]]>
		</if>
		<if test="unloadWay !=null and unloadWay != '' and unloadWay != 'ALL'">	
			and unload.unload_way = #{unloadWay}
		</if>
		<if test="billNo != null and billNo != '' ">
			and tb.bill_no = #{billNo}
		</if>
		<if test="platformNo !=null and platformNo !=''">
			and unload.platform_no = #{platformNo}
		</if>
	</where>
  </sql>
  
<!--   根据卸车任务编号获取单条卸车任务 -->
  <select id="getUnloadTaskByUnloadTaskNo" resultMap="unloadTaskDtoResultMap" parameterType="String">
  	<![CDATA[
  		select unload.id
		  , unload.unload_task_no unloadTaskNo
		  , gaprep.gaprep_no gaprepNo
		  , unload.unload_way unloadWay
		  , unload.vehicle_no vehicleNo
		  , (select 
		      wm_concat(ttd.line_name)
		     from 
		      tfr.t_opt_truck_task_bill ttb, tfr.t_opt_truck_task_detail ttd, tfr.t_opt_unload_bill_detail unloaddetail
		     where 
		      unloaddetail.unload_task_id = unload.id
		     and ttb.bill_no = unloaddetail.bill_no
             and ttd.id = ttb.truck_task_detail_id 
		    ) line
		  , loader.loader_name loaderName
		  , unload.platform_no platformNo
		  , unload.unload_type unloadType
		  , unload.task_state taskState
		  , case unload.unload_type
	        when 'ELECTRANSPORT' then
	        (select max(h.arrive_date)
	               from tfr.t_opt_unload_bill_detail unloaddetail,
	                    tfr.t_opt_pick_handover h
	          where unloaddetail.unload_task_id = unload.id
	           and h.handover_no = unloaddetail.bill_no)
	        else
	        (select max(ttd.actual_arrive_time)
	          from tfr.t_opt_truck_task_bill    ttb,
	               tfr.t_opt_truck_task_detail  ttd,
	               tfr.t_opt_unload_bill_detail unloaddetail
	          where unloaddetail.unload_task_id = unload.id
	           and ttb.bill_no = unloaddetail.bill_no
	           and ttd.id = ttb.truck_task_detail_id)
	        end arriveTime
		  , unload.unload_start_time unloadStartTime
		  , unload.unload_end_time unloadEndTime
		from 
		  tfr.t_opt_unload_task unload
		  left join tfr.t_opt_unload_gaprep gaprep
		  on unload.id = gaprep.unload_task_id
		  left join tfr.t_opt_loader_participation loader
		  on unload.id = loader.task_id
		  and loader.be_creator = 'Y'
		where
		  unload.unload_task_no = #{unloadTaskNo}
  	]]>
  </select>

<!-- 根据卸车任务编号获取卸车明细
	交接件数:
		如果单据类型为交接单, 取该单据下 交接单明细表中已配件数
		如果为配载单, 根据配载单找到该配载单下所有交接单, 再根据交接单找交接明细下sum(已配件数)
		如果为接货任务, 转货交接单, 派送拉回货 则取交接表(pkp.t_srv_stay_handover) 下所有的件数
	件数扫描率:
		已扫描件数/交接件数
	交接重量
		如果单据类型为交接单, 取该单据下交接单明细表中已配重量
		如果为配载单, 根据该配载单好找到该配置单下所有交接单, 再根据交接单找交接单明细下sum(已配重量)
		如果为派送拉回货, 交接单开单重量*交接件数(交接件数获取方式同上)/开单件数
		如果为转货交接单, 取该单据下交接单明细表中sum(已配重量)
		如果为接回货, 取交接单中开单重量
	交接体积
		如果单据类型为交接单, 取该单据下交接单明细表中已配体积
		如果为配载单, 根据该配载单好找到该配置单下所有交接单, 再根据交接单找交接单明细下sum(已配体积)
		如果为派送拉回货, 交接单开单体积*交接件数(交接件数获取方式同上)/开单件数
		如果为转货交接单, 取该单据下交接单明细表中sum(已配体积)
		如果为接回货, 取交接单中开单体积
 -->
  <select id="queryUnloadTaskDetailByUnloadTaskNo" resultMap="unloadWaybillDetailDtoResultMap" parameterType="String">
  	<![CDATA[
  		select distinct
	        id
	      , billNo
	      , origOrgCode
	      , origOrgName
	      , destOrgCode
	      , destOrgName
	      , waybillNo
	      , transportType
	      , handoverTotQty
	      , operationGoodsQty
	      , scanGoodsQty
	      , (case
            when
              handoverTotQty = 0
            then
              0
            when
              handoverTotQty <> 0
            then
              scanGoodsQty/handoverTotQty
            end) scanGoodsQtyRate
	      , unloadWeightTotal
	      , unloadVolumeTotal
	      , goodsName
	      , pack
		from 
		(select 
	        detail.id id
	      , detail.bill_no billNo
	      , detail.orig_org_code origOrgCode
	      , oo.name origOrgName
	      , detail.dest_org_code destOrgCode
	      , do.name destOrgName
	      , detail.waybill_no waybillNo
	      , case detail.transport_type when '经济快递' then '标准快递'
	       when '德邦快递' then '标准快递' else detail.transport_type end transportType
	      , detail.handover_goods_qty handoverTotQty
	      , detail.operation_goods_qty operationGoodsQty
	      , detail.scan_goods_qty scanGoodsQty
	      , detail.unload_weight_total unloadWeightTotal
	      , detail.unload_volume_total unloadVolumeTotal
	      , detail.goods_name goodsName
	      , detail.pack pack
	    from 
	      tfr.t_opt_unload_waybill_detail detail
          left join tfr.t_opt_unload_bill_detail    ubd on detail.bill_no = ubd.bill_no
          left join tfr.t_opt_unload_task           task on detail.unload_task_id = task.id
          left join bse.t_bas_org                   oo on detail.orig_org_code = oo.code and oo.active = 'Y'
          left join bse.t_bas_org                   do on detail.dest_org_code = do.code and do.active = 'Y'
	    where
		  task.unload_task_no = #{unloadTaskNo})
  	]]>
  </select>

  <select id="queryExportUnloadTaskDetailByUnloadTaskNo" resultMap="unloadWaybillDetailDtoResultMap" parameterType="String">
  	<![CDATA[
  		select distinct
	        id
	      , billNo
	      , origOrgCode
	      , origOrgName
	      , destOrgCode
	      , destOrgName
	      , waybillNo
	      , transportType
	      , handoverTotQty
	      , operationGoodsQty
	      , scanGoodsQty
	      , (case
            when
              handoverTotQty = 0
            then
              0
            when
              handoverTotQty <> 0
            then
              scanGoodsQty/handoverTotQty
            end) scanGoodsQtyRate
	      , unloadWeightTotal
	      , unloadVolumeTotal
	      , goodsName
	      , pack
	      , serialNo
	      , optTime
		from 
		(select 
	        detail.id id
	      , detail.bill_no billNo
	      , detail.orig_org_code origOrgCode
	      , oo.name origOrgName
	      , detail.dest_org_code destOrgCode
	      , do.name destOrgName
	      , detail.waybill_no waybillNo
	      , detail.transport_type transportType
	      , detail.handover_goods_qty handoverTotQty
	      , detail.operation_goods_qty operationGoodsQty
	      , detail.scan_goods_qty scanGoodsQty
	      , detail.unload_weight_total unloadWeightTotal
	      , detail.unload_volume_total unloadVolumeTotal
	      , detail.goods_name goodsName
	      , detail.pack pack
	      , s.serial_no serialNo
	      , s.unload_time optTime
	    from 
	      tfr.t_opt_unload_waybill_detail detail
          left join tfr.t_opt_unload_bill_detail    ubd on detail.bill_no = ubd.bill_no
          left join tfr.t_opt_unload_task           task on detail.unload_task_id = task.id
          left join tfr.t_opt_unload_serialno		s on detail.id = s.unload_waybill_detail_id and s.goods_state <> 'CANCELED'
          left join bse.t_bas_org                   oo on detail.orig_org_code = oo.code and oo.active = 'Y'
          left join bse.t_bas_org                   do on detail.dest_org_code = do.code and do.active = 'Y'
	    where
		  task.unload_task_no = #{unloadTaskNo}
		  order by s.serial_no asc)
		  order by serialNo asc
  	]]>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from TFR.T_OPT_UNLOAD_TASK
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from TFR.T_OPT_UNLOAD_TASK
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.deppon.foss.module.transfer.unload.api.shared.domain.UnloadTaskEntity" >
    insert into TFR.T_OPT_UNLOAD_TASK (ID, UNLOAD_TASK_NO, VEHICLE_NO, 
      PLATFORM_NO, PLATFORM_ID, UNLOAD_START_TIME, 
      UNLOAD_END_TIME, TASK_STATE, UNLOAD_TYPE, 
      UNLOAD_WAY, UNLOAD_ORG_CODE, UNLOAD_ORG_NAME, 
      BE_EXCEPTION, EXCEPTION_NOTES)
    values (#{id,jdbcType=VARCHAR}, #{unloadTaskNo,jdbcType=VARCHAR}, #{vehicleNo,jdbcType=VARCHAR}, 
      #{platformNo,jdbcType=VARCHAR}, #{platformId,jdbcType=VARCHAR}, #{unloadStartTime,jdbcType=TIMESTAMP}, 
      #{unloadEndTime,jdbcType=TIMESTAMP}, #{taskState,jdbcType=VARCHAR}, #{unloadType,jdbcType=VARCHAR}, 
      #{unloadWay,jdbcType=VARCHAR}, #{unloadOrgCode,jdbcType=VARCHAR}, #{unloadOrgName,jdbcType=VARCHAR}, 
      #{beException,jdbcType=CHAR}, #{exceptionNotes,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.deppon.foss.module.transfer.unload.api.shared.domain.UnloadTaskEntity" >
    insert into TFR.T_OPT_UNLOAD_TASK
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="unloadTaskNo != null" >
        UNLOAD_TASK_NO,
      </if>
      <if test="vehicleNo != null" >
        VEHICLE_NO,
      </if>
      <if test="platformNo != null" >
        PLATFORM_NO,
      </if>
      <if test="platformId != null" >
        PLATFORM_ID,
      </if>
      <if test="unloadStartTime != null" >
        UNLOAD_START_TIME,
      </if>
      <if test="unloadEndTime != null" >
        UNLOAD_END_TIME,
      </if>
      <if test="taskState != null" >
        TASK_STATE,
      </if>
      <if test="unloadType != null" >
        UNLOAD_TYPE,
      </if>
      <if test="unloadWay != null" >
        UNLOAD_WAY,
      </if>
      <if test="unloadOrgCode != null" >
        UNLOAD_ORG_CODE,
      </if>
      <if test="unloadOrgName != null" >
        UNLOAD_ORG_NAME,
      </if>
      <if test="beException != null" >
        BE_EXCEPTION,
      </if>
      <if test="exceptionNotes != null" >
        EXCEPTION_NOTES,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="unloadTaskNo != null" >
        #{unloadTaskNo,jdbcType=VARCHAR},
      </if>
      <if test="vehicleNo != null" >
        #{vehicleNo,jdbcType=VARCHAR},
      </if>
      <if test="platformNo != null" >
        #{platformNo,jdbcType=VARCHAR},
      </if>
      <if test="platformId != null" >
        #{platformId,jdbcType=VARCHAR},
      </if>
      <if test="unloadStartTime != null" >
        #{unloadStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="unloadEndTime != null" >
        #{unloadEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskState != null" >
        #{taskState,jdbcType=VARCHAR},
      </if>
      <if test="unloadType != null" >
        #{unloadType,jdbcType=VARCHAR},
      </if>
      <if test="unloadWay != null" >
        #{unloadWay,jdbcType=VARCHAR},
      </if>
      <if test="unloadOrgCode != null" >
        #{unloadOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="unloadOrgName != null" >
        #{unloadOrgName,jdbcType=VARCHAR},
      </if>
      <if test="beException != null" >
        #{beException,jdbcType=CHAR},
      </if>
      <if test="exceptionNotes != null" >
        #{exceptionNotes,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.deppon.foss.module.transfer.unload.api.shared.domain.UnloadTaskEntity" >
    update TFR.T_OPT_UNLOAD_TASK
    <set >
      <if test="unloadTaskNo != null" >
        UNLOAD_TASK_NO = #{unloadTaskNo,jdbcType=VARCHAR},
      </if>
      <if test="vehicleNo != null" >
        VEHICLE_NO = #{vehicleNo,jdbcType=VARCHAR},
      </if>
      <if test="platformNo != null" >
        PLATFORM_NO = #{platformNo,jdbcType=VARCHAR},
      </if>
      <if test="platformId != null" >
        PLATFORM_ID = #{platformId,jdbcType=VARCHAR},
      </if>
      <if test="unloadStartTime != null" >
        UNLOAD_START_TIME = #{unloadStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="unloadEndTime != null" >
        UNLOAD_END_TIME = #{unloadEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="taskState != null" >
        TASK_STATE = #{taskState,jdbcType=VARCHAR},
      </if>
      <if test="unloadType != null" >
        UNLOAD_TYPE = #{unloadType,jdbcType=VARCHAR},
      </if>
      <if test="unloadWay != null" >
        UNLOAD_WAY = #{unloadWay,jdbcType=VARCHAR},
      </if>
      <if test="unloadOrgCode != null" >
        UNLOAD_ORG_CODE = #{unloadOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="unloadOrgName != null" >
        UNLOAD_ORG_NAME = #{unloadOrgName,jdbcType=VARCHAR},
      </if>
      <if test="beException != null" >
        BE_EXCEPTION = #{beException,jdbcType=CHAR},
      </if>
      <if test="exceptionNotes != null" >
        EXCEPTION_NOTES = #{exceptionNotes,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deppon.foss.module.transfer.unload.api.shared.domain.UnloadTaskEntity" >
    update TFR.T_OPT_UNLOAD_TASK
    set UNLOAD_TASK_NO = #{unloadTaskNo,jdbcType=VARCHAR},
      VEHICLE_NO = #{vehicleNo,jdbcType=VARCHAR},
      PLATFORM_NO = #{platformNo,jdbcType=VARCHAR},
      PLATFORM_ID = #{platformId,jdbcType=VARCHAR},
      UNLOAD_START_TIME = #{unloadStartTime,jdbcType=TIMESTAMP},
      UNLOAD_END_TIME = #{unloadEndTime,jdbcType=TIMESTAMP},
      TASK_STATE = #{taskState,jdbcType=VARCHAR},
      UNLOAD_TYPE = #{unloadType,jdbcType=VARCHAR},
      UNLOAD_WAY = #{unloadWay,jdbcType=VARCHAR},
      UNLOAD_ORG_CODE = #{unloadOrgCode,jdbcType=VARCHAR},
      UNLOAD_ORG_NAME = #{unloadOrgName,jdbcType=VARCHAR},
      BE_EXCEPTION = #{beException,jdbcType=CHAR},
      EXCEPTION_NOTES = #{exceptionNotes,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <!--查询卸车流水明细_zyx -->
	<select id="queryUnloadSerialNoByUnloadWaybillDetailId" parameterType="java.lang.String" 
		resultMap="unloadSerialNoDetailEntityResultMap">
		<![CDATA[
			select
				id
				, unload_waybill_detail_id unloadWaybillDetailId
				, scan_state scanStatus
				, goods_state goodsStatus
				, unload_time optTime
				, task_begin_time taskCreateTime 
        		, device_no deviceNo
        		, serial_no serialNo
        		, unload_org_code createOrgCode
      		from tfr.t_opt_unload_serialno
      		where
      		unload_waybill_detail_id = #{unloadWaybillDetailId}
      		and goods_state <> 'CANCELED'
		]]>
	</select>

  <!--根据taskID得到所有理货员_zyx -->
	<select id="queryLoaderByTaskId" parameterType="map" 
		resultMap="loaderParticipationResultMap">
		<![CDATA[
			select
				id, loader_name, loader_code, load_org_code, load_org_name,
			join_time, leave_time, be_creator, task_type, task_id
			from tfr.t_opt_loader_participation
			where
			task_id = #{unloadTaskId}
		]]>
	<if test="unloadWay !=null and unloadWay != 'PDA' ">	
		<![CDATA[and be_creator <> 'Y']]>
	</if>
	</select>
	
	  <!--2015/9/10  272681 根据商务专递交接单号获取路线 -->
  <select id="queryBusinessLine" resultType="String" parameterType="String">
  <![CDATA[
   select (h.ORG_NAME || '-' || h.EXPRESS_ARRIVE_NAME) line
       from tfr.t_opt_air_handoverbill h,
       tfr.t_opt_unload_task unload,
       tfr.t_opt_unload_bill_detail ubd  
  where unload.unload_task_no = #{unloadTaskNo}
       and unload.id = ubd.unload_task_id
       and h.flight_no = unload.vehicle_no
       and h.air_handover_no = ubd.bill_no 
       and rownum = 1
                           
  ]]>
  </select>
</mapper>