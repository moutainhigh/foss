<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="foss.load.seal">
	<resultMap id="SealResultMap" type="com.deppon.foss.module.transfer.load.api.shared.domain.SealEntity" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="T_TRUCK_TASK_DETAIL_ID" property="truckTaskDetailId" jdbcType="VARCHAR" />
    <result column="VEHICLE_NO" property="vehicleNo" />
    <result column="SEAL_TYPE" property="sealType" />
    <result column="SEAL_STATE" property="sealState" />
    <result column="SEALER_CODE" property="sealerCode" />
    <result column="SEALER_NAME" property="sealerName" />
    <result column="SEALD_ORG_CODE" property="sealdOrgCode" />
    <result column="SEALD_ORG_NAME" property="sealdOrgName" />
    <result column="SEAL_TIME" property="sealTime" />
    <result column="CHECKER_USER" property="checkerUser" />
    <result column="CHECKER_CODE" property="checkerCode" />
    <result column="CHECK_ORG_CODE" property="checkOrgCode" />
    <result column="CHECK_ORG_NAME" property="checkOrgName" />
    <result column="CHECK_TIME" property="checkTime" />
    <result column="OPERATE_TIME" property="operateTime" />
    <result column="SEAL_ORG_MEMO" property="sealOrgMemo" />
    <result column="CHECK_ORG_MEMO" property="checkOrgMemo" />
    <result column="OA_ERROR_NO" property="oaErrorNo" />
    <result column="PDA_DEVICE_NO" property="pdaDeviceNo" />
    <result column="TRUCK_DEPART_ID" property="truckDepartId" />
  </resultMap>
  
  <resultMap id="vehicleSealResultMap" type="com.deppon.foss.module.transfer.load.api.shared.dto.SealDto">
		<result property="id" column="id" />
		<result property="truckTaskId" column="truckTaskId" />
		<result property="createTime" column="createTime" />
		<result property="sealState" column="sealState" />
		<result property="vehicleNo" column="vehicleNo" />
		<result property="oaErrorNo" column="oaErrorNo" />
		<result property="driverCode" column="driverCode" />
		<result property="driverName" column="driverName" />
		<result property="origOrgCode" column="origOrgCode" />
		<result property="destOrgCode" column="destOrgCode" />
		<result property="origOrgName" column="origOrgName" />
		<result property="destOrgName" column="destOrgName" />
		<result property="sealType" column="sealType" />
		<result property="status" column="status" />
		<result property="sealTime" column="sealTime" />
		<result property="sealdOrgCode" column="sealdOrgCode" />
		<result property="sealdOrgName" column="sealdOrgName" />
		<result property="sealerName" column="sealerName" />
		<result property="checkTime" column="checkTime" />
		<result property="checkOrgCode" column="checkOrgCode" />
		<result property="checkOrgName" column="checkOrgName" />
		<result property="checkerCode" column="checkerCode" />
		<result property="checkerUser" column="checkerUser" />
  </resultMap>

  <resultMap id="sealOrigDetailsResultMap" type="com.deppon.foss.module.transfer.load.api.shared.domain.SealOrigDetailEntity">
		<id column="ID" property="id" jdbcType="VARCHAR" />
	    <result column="SEAL_NO" property="sealNo" jdbcType="VARCHAR" />
	    <result column="SEAL_ID" property="sealId" jdbcType="VARCHAR" />
	    <result column="SEAL_TYPE" property="sealType" jdbcType="VARCHAR" />
	    <result column="OPERATE_TIME" property="operateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <resultMap id="sealDestDetailsResultMap" type="com.deppon.foss.module.transfer.load.api.shared.domain.SealDestDetailEntity">
		<id column="ID" property="id" jdbcType="VARCHAR" />
	    <result column="SEAL_NO" property="sealNo" jdbcType="VARCHAR" />
	    <result column="SEAL_ID" property="sealId" jdbcType="VARCHAR" />
	    <result column="SEAL_TYPE" property="sealType" jdbcType="VARCHAR" />
	    <result column="OPERATE_TIME" property="operateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <!-- 任务车辆 -->
  <resultMap id="truckTaskResultMap" 
  	type="com.deppon.foss.module.transfer.load.api.shared.domain.TruckTaskEntity">
		<result property="id" column="id"/>
		<result property="vehicleNo" column="vehicleNo"/>
		<result property="lineName" column="lineName"/>
		<result property="businessType" column="businessType"/>
		<result property="driverName1" column="driverName1"/>
		<result property="driverCode1" column="driverCode1"/>
		<result property="driverPhone1" column="driverPhone1"/>
		<result property="driverPhone2" column="driverPhone2"/>
		<result property="state" column="state"/>
		<result property="driverCode2" column="driverCode2"/>
		<result property="driverName2" column="driverName2"/>
		<result property="createTime" column="createTime"/>
		<result property="beCarLoad" column="beCarLoad"/>
		<result property="chargingAssembleNo" column="chargingAssembleNo"/>
	</resultMap>
  
	<!-- 任务车辆明细 -->
	<resultMap id="truckTaskDetailResultMap"
		type="com.deppon.foss.module.transfer.load.api.shared.domain.TruckTaskDetailEntity">
		<id column="ID" property="id" />
		<result column="VEHICLE_NO" property="vehicleNo" />
		<result column="TRUCK_TASK_ID" property="parentId" />
		<result column="line_name" property="lineName" />
		<result column="line_VIRTUAL_CODE" property="lineVirtualCode" />
		<result column="BUSINESS_TYPE" property="businessType" />
		<result column="ORIG_ORG_CODE" property="origOrgCode" />
		<result column="ORIG_ORG_NAME" property="origOrgName" />
		<result column="DEST_ORG_CODE" property="destOrgCode" />
		<result column="DEST_ORG_NAME" property="destOrgName" />
		<result column="CREATE_TIME" property="createTime" />
		<result column="TRUCK_DEPART_ID" property="truckDepartId" />
		<result column="TRUCK_ARRIVE_ID" property="truckArriveId" />
		<result column="PLANE_ARRIVE_TIME" property="planArriveTime" />
	</resultMap>
	
	<!-- 司机信息 -->
	<resultMap id="driverInfoResultMap"
		type="com.deppon.foss.module.transfer.load.api.shared.domain.RelationInfoEntity">
		<result column="driverName" property="driverName" />
		<result column="driverCode" property="driverCode" />
		<result column="driverPhone" property="driverPhone" />
	</resultMap>

	<!-- 单据信息 -->
	<resultMap id="billInfoResultMap"
		type="com.deppon.foss.module.transfer.load.api.shared.dto.BillInfoDto">
		<result column="vehicleNo" property="vehicleNo" />
		<result column="lineName" property="lineName" />
		<result column="driverName" property="driverName" />
		<result column="status" property="status" />
		<result column="billNo" property="billNo" />
	</resultMap>
  
  <!-- 装车封签查询 -->
  <select id="queryAllvehicleSealList" parameterType="com.deppon.foss.module.transfer.load.api.shared.dto.SealDto" resultMap="vehicleSealResultMap">
  		<!-- 如果封签类型不等于空, 并且封签类型不为"未绑定" -->
  		<if test="sealType != 'UNBIND'">
		select 
		  tt.id truckTaskId
		  , tt.create_time createTime
		  , seal.id id
		  , seal.seal_state sealState
		  , seal.vehicle_no vehicleNo
		  , seal.oa_error_no oaErrorNo
		  , tt.driver_code1 driverCode
		  , tt.driver_name1 driverName
		  , tt.line_name lineName
		  , seal.seal_type sealType
		  , tt.status status
		  , seal.seal_time sealTime
		  , seal.seald_org_code sealdOrgCode
		  , seal.seald_org_name sealdOrgName
		  , seal.sealer_name sealerName
		  , seal.check_time checkTime
		  , seal.check_org_code checkOrgCode
		  , seal.check_org_name checkOrgName
		  , seal.checker_user checkerUser
		from 
			tfr.t_opt_truck_task tt, tfr.t_opt_seal seal, tfr.t_opt_truck_task_detail d, tfr.t_opt_truck_task_bill b
		where tt.id = seal.t_truck_task_detail_id
		and tt.id = d.truck_task_id
		and d.id = b.truck_task_detail_id(+)
		<if test="billNo != null and billNo != ''">
		and b.bill_no = #{billNo}
		</if>
		<if test="vehicleNo != null and vehicleNo != ''">
		and seal.vehicle_no = #{vehicleNo}
		</if>
		<if test="sealType != null and sealType != '' and sealType != 'ALL'">
		and seal.seal_type = #{sealType}
		</if>
		<if test="sealState!=null and sealState!='' and sealState != 'ALL'">	
		and seal.seal_state = #{sealState}
		</if>
		<if test="origOrgCode != null and origOrgCode != ''">
			<if test="destOrgCode == null or destOrgCode == ''">
			and (d.orig_org_code = #{origOrgCode} or d.dest_org_code = #{origOrgCode})
			</if>
			<if test="destOrgCode != null and destOrgCode != ''">
			and d.orig_org_code = #{origOrgCode}
			</if>
		</if>
		<if test="destOrgCode != null and destOrgCode != ''">
		and d.dest_org_code = #{destOrgCode}
		</if>
		
		<if test="billNo == null or billNo == ''">
			<if test="beginDate != null and beginDate != ''">
			<![CDATA[and tt.create_time >= to_date(#{beginDate}, 'yyyy-mm-dd hh24:mi:ss')]]>
			</if>
		</if>
		<if test="billNo == null or billNo == ''">
			<if test="endDate != null and endDate != ''">
			<![CDATA[and tt.create_time <= to_date(#{endDate}, 'yyyy-mm-dd hh24:mi:ss')]]>
			</if>
		</if>
		
		group by tt.id, tt.create_time, seal.id, seal.seal_state, 
		      seal.vehicle_no,  seal.oa_error_no, 
		      tt.driver_code1, tt.driver_name1, tt.line_name, 
		      seal.seal_type, tt.status, 
		      seal.seal_time, seal.seald_org_code, seal.seald_org_name, 
		      seal.sealer_name, seal.check_time,
		      seal.check_org_code, seal.check_org_name, seal.checker_user
		</if>
		<!-- 如果封签类型为全部 -->
		<if test="sealType == 'ALL' and sealState == 'ALL'">
		union all
		</if>
		<!-- 如果封签类型为"未绑定" -->
		<if test="(sealType == 'ALL' or sealType == 'UNBIND') and sealState == 'ALL'">
		select 
		  tt.id truckTaskId
		  , tt.create_time createTime
		  , null sealId
		  , '0' sealState
		  , tt.vehicle_no vehicleNo
		  , null oaErrorNo
		  , tt.driver_code1 driverCode
		  , tt.driver_name1 driverName
		  , tt.line_name lineName
		  , 'UNBIND' sealType
		  , tt.status status
		  , null sealTime
		  , null sealdOrgCode
		  , null sealdOrgName
		  , null sealerName
		  , null checkTime
		  , null checkOrgCode
		  , null checkOrgName
		  , null checkerUser
		from
			tfr.t_opt_truck_task tt, tfr.t_opt_truck_task_detail d, tfr.t_opt_truck_task_bill b, tfr.t_opt_seal seal
		where tt.id = d.truck_task_id
		and d.id = b.truck_task_detail_id
		and tt.id = seal.t_truck_task_detail_id(+)
		<![CDATA[and tt.status <> 'CANCLED']]>
        and seal.t_truck_task_detail_id is null
		<if test="billNo != null and billNo != ''">
		and b.bill_no = #{billNo}
		</if>
		<if test="vehicleNo != null and vehicleNo != ''">
		and tt.vehicle_no = #{vehicleNo}
		</if>
		<if test="origOrgCode != null and origOrgCode != ''">
			<if test="destOrgCode == null or destOrgCode == ''">
			and (d.orig_org_code = #{origOrgCode} or d.dest_org_code = #{origOrgCode})
			</if>
			<if test="destOrgCode != null and destOrgCode != ''">
			and d.orig_org_code = #{origOrgCode}
			</if>
		</if>
		<if test="destOrgCode != null and destOrgCode != ''">
		and d.dest_org_code = #{destOrgCode}
		</if>
		<if test="billNo == null or billNo == ''">
			<if test="beginDate != null and beginDate != ''">
			<![CDATA[and tt.create_time >= to_date(#{beginDate}, 'yyyy-mm-dd hh24:mi:ss')]]>
			</if>
		</if>
		<if test="billNo == null or billNo == ''">
			<if test="endDate != null and endDate != ''">
			<![CDATA[and tt.create_time <= to_date(#{endDate}, 'yyyy-mm-dd hh24:mi:ss')]]>
			</if>
		</if>
		group by tt.id, tt.create_time, tt.vehicle_no, 
		      tt.driver_code1, tt.driver_name1, tt.line_name, tt.status
		</if>
  </select>
  <select id="getTotCount" parameterType="com.deppon.foss.module.transfer.load.api.shared.dto.SealDto" resultType="Long">
  	select count(*) from (
  	<if test="sealType != 'UNBIND'">
		select 
		  tt.id truckTaskId
		  , tt.create_time createTime
		  , seal.id id
		  , seal.seal_state sealState
		  , seal.vehicle_no vehicleNo
		  , seal.oa_error_no oaErrorNo
		  , tt.driver_code1 driverCode
		  , tt.driver_name1 driverName
		  , tt.line_name lineName
		  , seal.seal_type sealType
		  , tt.status status
		  , seal.seal_time sealTime
		  , seal.seald_org_code sealdOrgCode
		  , seal.seald_org_name sealdOrgName
		  , seal.sealer_name sealerName
		  , seal.check_time checkTime
		  , seal.check_org_code checkOrgCode
		  , seal.check_org_name checkOrgName
		  , seal.checker_user checkerUser
		from 
			tfr.t_opt_truck_task tt, tfr.t_opt_seal seal, tfr.t_opt_truck_task_detail d, tfr.t_opt_truck_task_bill b
		where tt.id = seal.t_truck_task_detail_id
		and tt.id = d.truck_task_id
		and d.id = b.truck_task_detail_id(+)
		<if test="billNo != null and billNo != ''">
		and b.bill_no = #{billNo}
		</if>
		<if test="vehicleNo != null and vehicleNo != ''">
		and seal.vehicle_no = #{vehicleNo}
		</if>
		<if test="sealType != null and sealType != '' and sealType != 'ALL'">
		and seal.seal_type = #{sealType}
		</if>
		<if test="sealState!=null and sealState!='' and sealState != 'ALL'">	
		and seal.seal_state = #{sealState}
		</if>
		<if test="origOrgCode != null and origOrgCode != ''">
			<if test="destOrgCode == null or destOrgCode == ''">
			and (d.orig_org_code = #{origOrgCode} or d.dest_org_code = #{origOrgCode})
			</if>
			<if test="destOrgCode != null and destOrgCode != ''">
			and d.orig_org_code = #{origOrgCode}
			</if>
		</if>
		<if test="destOrgCode != null and destOrgCode != ''">
		and d.dest_org_code = #{destOrgCode}
		</if>
		<if test="billNo == null or billNo == ''">
			<if test="beginDate != null and beginDate != ''">
			<![CDATA[and tt.create_time >= to_date(#{beginDate}, 'yyyy-mm-dd hh24:mi:ss')]]>
			</if>
		</if>
		<if test="billNo == null or billNo == ''">
			<if test="endDate != null and endDate != ''">
			<![CDATA[and tt.create_time <= to_date(#{endDate}, 'yyyy-mm-dd hh24:mi:ss')]]>
			</if>
		</if>
		
		group by tt.id, tt.create_time, seal.id, seal.seal_state, 
		      seal.vehicle_no,  seal.oa_error_no, 
		      tt.driver_code1, tt.driver_name1, tt.line_name, 
		      seal.seal_type, tt.status, 
		      seal.seal_time, seal.seald_org_code, seal.seald_org_name, 
		      seal.sealer_name, seal.check_time,
		      seal.check_org_code, seal.check_org_name, seal.checker_user
		</if>
		<!-- 如果封签类型为全部 -->
		<if test="sealType == 'ALL' and sealState == 'ALL'">
		union all
		</if>
		<!-- 如果封签类型为"未绑定" -->
		<if test="(sealType == 'ALL' or sealType == 'UNBIND') and sealState == 'ALL'">
		select 
		  tt.id truckTaskId
		  , tt.create_time createTime
		  , null sealId
		  , '0' sealState
		  , tt.vehicle_no vehicleNo
		  , null oaErrorNo
		  , tt.driver_code1 driverCode
		  , tt.driver_name1 driverName
		  , tt.line_name lineName
		  , 'UNBIND' sealType
		  , tt.status status
		  , null sealTime
		  , null sealdOrgCode
		  , null sealdOrgName
		  , null sealerName
		  , null checkTime
		  , null checkOrgCode
		  , null checkOrgName
		  , null checkerUser
		from
			tfr.t_opt_truck_task tt, tfr.t_opt_truck_task_detail d, tfr.t_opt_truck_task_bill b, tfr.t_opt_seal seal
		where tt.id = d.truck_task_id
		and d.id = b.truck_task_detail_id
		and tt.id = seal.t_truck_task_detail_id(+)
		<![CDATA[and tt.status <> 'CANCLED']]>
        and seal.t_truck_task_detail_id is null
		<if test="billNo != null and billNo != ''">
		and b.bill_no = #{billNo}
		</if>
		<if test="vehicleNo != null and vehicleNo != ''">
		and tt.vehicle_no = #{vehicleNo}
		</if>
		<if test="origOrgCode != null and origOrgCode != ''">
			<if test="destOrgCode == null or destOrgCode == ''">
			and (d.orig_org_code = #{origOrgCode} or d.dest_org_code = #{origOrgCode})
			</if>
			<if test="destOrgCode != null and destOrgCode != ''">
			and d.orig_org_code = #{origOrgCode}
			</if>
		</if>
		<if test="destOrgCode != null and destOrgCode != ''">
		and d.dest_org_code = #{destOrgCode}
		</if>
		<if test="billNo == null or billNo == ''">
			<if test="beginDate != null and beginDate != ''">
			<![CDATA[and tt.create_time >= to_date(#{beginDate}, 'yyyy-mm-dd hh24:mi:ss')]]>
			</if>
		</if>
		<if test="billNo == null or billNo == ''">
			<if test="endDate != null and endDate != ''">
			<![CDATA[and tt.create_time <= to_date(#{endDate}, 'yyyy-mm-dd hh24:mi:ss')]]>
			</if>
		</if>
		group by tt.id, tt.create_time, tt.vehicle_no, 
		      tt.driver_code1, tt.driver_name1, tt.line_name, tt.status
		</if>
    )
  </select>
  <sql id="Base_Column_List" >
    ID, T_TRUCK_TASK_DETAIL_ID, VEHICLE_NO, SEAL_TYPE, SEAL_STATE, SEALER_CODE, SEALER_NAME, SEALD_ORG_CODE, 
    SEALD_ORG_NAME, SEAL_TIME, CHECKER_USER, CHECKER_CODE, CHECK_ORG_CODE, CHECK_ORG_NAME, 
    CHECK_TIME, OPERATE_TIME, SEAL_ORG_MEMO, CHECK_ORG_MEMO, TRUCK_DEPART_ID
  </sql>
  <select id="getSealById" resultMap="SealResultMap" parameterType="java.lang.String" >
    select 
    ID, T_TRUCK_TASK_DETAIL_ID, VEHICLE_NO, SEAL_TYPE, SEAL_STATE, SEALER_CODE, SEALER_NAME, SEALD_ORG_CODE, 
    SEALD_ORG_NAME, SEAL_TIME, CHECKER_USER, CHECKER_CODE, CHECK_ORG_CODE, CHECK_ORG_NAME, 
    CHECK_TIME, OPERATE_TIME, SEAL_ORG_MEMO, CHECK_ORG_MEMO, TRUCK_DEPART_ID, PDA_DEVICE_NO
    from TFR.T_OPT_SEAL
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <select id="getSealByVehicleNo" resultMap="SealResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from TFR.T_OPT_SEAL
    where VEHICLE_NO = #{vehicleNo}
    and SEAL_TYPE = 'BIND'
    order by SEAL_TIME desc
  </select>
  <delete id="deleteSealById" parameterType="java.lang.String" >
    delete from TFR.T_OPT_SEAL
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="updateSealToInvalid" parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.SealEntity" >
    update 
    tfr.t_opt_seal set 
    seal_type = #{sealType,jdbcType=VARCHAR},
    seal_org_memo = #{sealOrgMemo,jdbcType=VARCHAR},
    operate_time = #{operateTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insertSeal" parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.SealEntity" >
    insert into TFR.T_OPT_SEAL (ID, T_TRUCK_TASK_DETAIL_ID, VEHICLE_NO, 
      SEAL_TYPE, SEAL_STATE, SEALER_CODE, 
      SEALER_NAME, SEALD_ORG_CODE, SEALD_ORG_NAME, 
      SEAL_TIME, CHECKER_USER, CHECKER_CODE, 
      CHECK_ORG_CODE, CHECK_ORG_NAME, CHECK_TIME, 
      OPERATE_TIME, TRUCK_DEPART_ID, PDA_DEVICE_NO)
    values (#{id,jdbcType=VARCHAR}, #{truckTaskDetailId,jdbcType=VARCHAR}, #{vehicleNo,jdbcType=VARCHAR}, 
      #{sealType,jdbcType=VARCHAR}, #{sealState,jdbcType=VARCHAR}, #{sealerCode,jdbcType=VARCHAR}, 
      #{sealerName,jdbcType=VARCHAR}, #{sealdOrgCode,jdbcType=VARCHAR}, #{sealdOrgName,jdbcType=VARCHAR}, 
      #{sealTime,jdbcType=TIMESTAMP}, #{checkerUser,jdbcType=VARCHAR}, #{checkerCode,jdbcType=VARCHAR}, 
      #{checkOrgCode,jdbcType=VARCHAR}, #{checkOrgName,jdbcType=VARCHAR}, #{checkTime,jdbcType=TIMESTAMP}, 
      #{operateTime,jdbcType=TIMESTAMP}, #{truckDepartId,jdbcType=VARCHAR}, #{pdaDeviceNo,jdbcType=VARCHAR})
  </insert>
  <select id="getSealOrigDetailsByVehicleNo" parameterType="java.lang.String" resultMap="sealOrigDetailsResultMap">
	select sealdetails.id, sealdetails.seal_no, sealdetails.seal_id, sealdetails.operate_time, sealdetails.seal_type
    from tfr.t_opt_seal_orig_detail sealdetails
    left join tfr.t_opt_seal seal on sealDetails.seal_id = seal.id
    where seal.seal_type = 'BIND'
    and seal.vehicle_no = #{vehicleNo}
  </select>
  <select id="getSealOrigDetailsBySealId" parameterType="java.lang.String" resultMap="sealOrigDetailsResultMap">
	select sealdetails.id, sealdetails.seal_no, sealdetails.seal_id, sealdetails.operate_time, sealdetails.seal_type
    from tfr.t_opt_seal_orig_detail sealdetails
    where sealdetails.seal_id = #{id}
  </select>
  <select id="getSealDestDetailsBySealId" parameterType="java.lang.String" resultMap="sealDestDetailsResultMap">
	select sealdetails.id, sealdetails.seal_no, sealdetails.seal_id, sealdetails.operate_time, sealdetails.seal_type
    from tfr.t_opt_seal_dest_detail sealdetails
    where sealdetails.seal_id = #{id}
  </select>
  <insert id="insertSealOrigDetail" parameterType="java.util.List">
	  begin
	  <foreach collection="list" item="item" separator=";">
	  insert into TFR.T_OPT_SEAL_ORIG_DETAIL (ID, SEAL_NO, SEAL_ID, SEAL_TYPE, 
      OPERATE_TIME)
      values (#{item.id,jdbcType=VARCHAR}, #{item.sealNo,jdbcType=VARCHAR}, #{item.sealId,jdbcType=VARCHAR}, #{item.sealType, jdbcType=VARCHAR},
      #{item.operateTime,jdbcType=TIMESTAMP})
	  </foreach>
	  ;end;
  </insert>
  <delete id="deleteSealOrigDetailBySealId" parameterType="java.lang.String">
  	delete from TFR.T_OPT_SEAL_ORIG_DETAIL
    where seal_Id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insertSealDestDetail" parameterType="java.util.List">
	  begin
	  <foreach collection="list" item="item" separator=";">
	  insert into TFR.T_OPT_SEAL_DEST_DETAIL (ID, SEAL_NO, SEAL_ID, SEAL_TYPE, 
      OPERATE_TIME)
      values (#{item.id,jdbcType=VARCHAR}, #{item.sealNo,jdbcType=VARCHAR}, #{item.sealId,jdbcType=VARCHAR}, #{item.sealType, jdbcType=VARCHAR},
      #{item.operateTime,jdbcType=TIMESTAMP})
	  </foreach>
	  ;end;
  </insert>
  <insert id="insertSelective" parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.SealEntity" >
    insert into TFR.T_OPT_SEAL
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="truckTaskDetailId != null" >
        T_TRUCK_TASK_DETAIL_ID,
      </if>
      <if test="vehicleNo != null" >
        VEHICLE_NO,
      </if>
      <if test="sealType != null" >
        SEAL_TYPE,
      </if>
      <if test="sealState != null" >
        SEAL_STATE,
      </if>
      <if test="sealerCode != null" >
        SEALER_CODE,
      </if>
      <if test="sealerName != null" >
        SEALER_NAME,
      </if>
      <if test="sealdOrgCode != null" >
        SEALD_ORG_CODE,
      </if>
      <if test="sealdOrgName != null" >
        SEALD_ORG_NAME,
      </if>
      <if test="sealTime != null" >
        SEAL_TIME,
      </if>
      <if test="checkerUser != null" >
        CHECKER_USER,
      </if>
      <if test="checkerCode != null" >
        CHECKER_CODE,
      </if>
      <if test="checkOrgCode != null" >
        CHECK_ORG_CODE,
      </if>
      <if test="checkOrgName != null" >
        CHECK_ORG_NAME,
      </if>
      <if test="checkTime != null" >
        CHECK_TIME,
      </if>
      <if test="operateTime != null" >
        OPERATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="truckTaskDetailId != null" >
        #{truckTaskDetailId,jdbcType=VARCHAR},
      </if>
      <if test="vehicleNo != null" >
        #{vehicleNo,jdbcType=VARCHAR},
      </if>
      <if test="sealType != null" >
        #{sealType,jdbcType=VARCHAR},
      </if>
      <if test="sealState != null" >
        #{sealState,jdbcType=VARCHAR},
      </if>
      <if test="sealerCode != null" >
        #{sealerCode,jdbcType=VARCHAR},
      </if>
      <if test="sealerName != null" >
        #{sealerName,jdbcType=VARCHAR},
      </if>
      <if test="sealdOrgCode != null" >
        #{sealdOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="sealdOrgName != null" >
        #{sealdOrgName,jdbcType=VARCHAR},
      </if>
      <if test="sealTime != null" >
        #{sealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkerUser != null" >
        #{checkerUser,jdbcType=VARCHAR},
      </if>
      <if test="checkerCode != null" >
        #{checkerCode,jdbcType=VARCHAR},
      </if>
      <if test="checkOrgCode != null" >
        #{checkOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="checkOrgName != null" >
        #{checkOrgName,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.SealEntity" >
    update TFR.T_OPT_SEAL
    <set >
      <if test="truckTaskDetailId != null" >
        T_TRUCK_TASK_DETAIL_ID = #{truckTaskDetailId,jdbcType=VARCHAR},
      </if>
      <if test="vehicleNo != null" >
        VEHICLE_NO = #{vehicleNo,jdbcType=VARCHAR},
      </if>
      <if test="sealType != null" >
        SEAL_TYPE = #{sealType,jdbcType=VARCHAR},
      </if>
      <if test="sealState != null" >
        SEAL_STATE = #{sealState,jdbcType=VARCHAR},
      </if>
      <if test="sealerCode != null" >
        SEALER_CODE = #{sealerCode,jdbcType=VARCHAR},
      </if>
      <if test="sealerName != null" >
        SEALER_NAME = #{sealerName,jdbcType=VARCHAR},
      </if>
      <if test="sealdOrgCode != null" >
        SEALD_ORG_CODE = #{sealdOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="sealdOrgName != null" >
        SEALD_ORG_NAME = #{sealdOrgName,jdbcType=VARCHAR},
      </if>
      <if test="sealTime != null" >
        SEAL_TIME = #{sealTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkerUser != null" >
        CHECKER_USER = #{checkerUser,jdbcType=VARCHAR},
      </if>
      <if test="checkerCode != null" >
        CHECKER_CODE = #{checkerCode,jdbcType=VARCHAR},
      </if>
      <if test="checkOrgCode != null" >
        CHECK_ORG_CODE = #{checkOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="checkOrgName != null" >
        CHECK_ORG_NAME = #{checkOrgName,jdbcType=VARCHAR},
      </if>
      <if test="checkTime != null" >
        CHECK_TIME = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateTime != null" >
        OPERATE_TIME = #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateSealByPrimaryKey" parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.SealEntity" >
    update TFR.T_OPT_SEAL
    set T_TRUCK_TASK_DETAIL_ID = #{truckTaskDetailId,jdbcType=VARCHAR},
      VEHICLE_NO = #{vehicleNo,jdbcType=VARCHAR},
      SEAL_TYPE = #{sealType,jdbcType=VARCHAR},
      SEAL_STATE = #{sealState,jdbcType=VARCHAR},
      SEALER_CODE = #{sealerCode,jdbcType=VARCHAR},
      SEALER_NAME = #{sealerName,jdbcType=VARCHAR},
      SEALD_ORG_CODE = #{sealdOrgCode,jdbcType=VARCHAR},
      SEALD_ORG_NAME = #{sealdOrgName,jdbcType=VARCHAR},
      SEAL_TIME = #{sealTime,jdbcType=TIMESTAMP},
      CHECKER_USER = #{checkerUser,jdbcType=VARCHAR},
      CHECKER_CODE = #{checkerCode,jdbcType=VARCHAR},
      CHECK_ORG_CODE = #{checkOrgCode,jdbcType=VARCHAR},
      CHECK_ORG_NAME = #{checkOrgName,jdbcType=VARCHAR},
      CHECK_TIME = #{checkTime,jdbcType=TIMESTAMP},
      OPERATE_TIME = #{operateTime,jdbcType=TIMESTAMP},
      CHECK_ORG_MEMO = #{checkOrgMemo,jdbcType=VARCHAR},
      SEAL_ORG_MEMO = #{sealOrgMemo,jdbcType=VARCHAR},
      OA_ERROR_NO = #{oaErrorNo,jdbcType=VARCHAR},
      TRUCK_DEPART_ID = #{truckDepartId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 根据车牌号, 出发部门 ,取状态为未到达的任务车辆明细 -->
  <select id="getTruckTaskDetailsByVehicleNo" 
  	parameterType="com.deppon.foss.module.transfer.load.api.shared.dto.SealDto" 
  	resultMap="truckTaskDetailResultMap">
	<![CDATA[
		select d.ID,
		       d.TRUCK_TASK_ID,
		       d.VEHICLE_NO,
		       d.line_name,
		       d.line_VIRTUAL_CODE,
		       d.BUSINESS_TYPE,
		       d.ORIG_ORG_CODE,
		       d.DEST_ORG_CODE,
		       d.CREATE_TIME,
		       d.TRUCK_DEPART_ID,
		       d.TRUCK_ARRIVE_ID
		  from tfr.t_opt_TRUCK_TASK_DETAIL d, tfr.t_opt_truck_task t
    ]]>
	<where>
	<![CDATA[
		d.truck_task_id = t.id
		and t.status <> 'CANCLED'
		AND d.VEHICLE_NO = #{vehicleNo}
		AND d.ORIG_ORG_CODE = #{origOrgCode}
		AND d.DEST_ORG_CODE = #{destOrgCode}
		AND (d.STATUS = 'UNDEPART' or d.STATUS = 'ONTHEWAY')
	]]>
	</where>
	ORDER BY CREATE_TIME DESC
  </select>

  <!-- 根据truckTaskId获取truckTaskDetail -->
  <select id="getTruckTaskDetailsByTruckTaskId" 
  	parameterType="com.deppon.foss.module.transfer.load.api.shared.dto.SealDto" 
  	resultMap="truckTaskDetailResultMap">
	<![CDATA[
		SELECT 
		ID,
		TRUCK_TASK_ID,
		VEHICLE_NO,
		line_name,
		line_VIRTUAL_CODE,
		BUSINESS_TYPE,
		ORIG_ORG_CODE,
		ORIG_ORG_NAME,
		DEST_ORG_CODE,
		DEST_ORG_NAME,
		CREATE_TIME,
		TRUCK_DEPART_ID,
		TRUCK_ARRIVE_ID
		FROM TFR.T_OPT_TRUCK_TASK_DETAIL
    ]]>
	<where>
		TRUCK_TASK_ID = #{truckTaskId}
	</where>
	ORDER BY CREATE_TIME DESC
  </select>
  <!-- 根据用户编号获取用户名称 -->
  <select id="getUserNameByEmpCode" parameterType="String" resultType="String">
	<![CDATA[
		select user_name from bse.t_bas_user where emp_code = #{empCode} and active = 'Y'
    ]]>
  </select>
  <!-- 根据部门编号获取部门名称 -->
  <select id="getOrgNameByOrgCode" parameterType="String" resultType="String">
	<![CDATA[
		select name from bse.t_bas_org where code = #{code} and active = 'Y'
    ]]>
  </select>
  <!-- 根据ID获取车辆任务信息 -->
  <select id="getTruckTaskById" parameterType="String" resultMap="truckTaskResultMap">
	<![CDATA[
		select
			id id, vehicle_no vehicleno, line_name lineName, business_type businessType,
			driver_code1 driverCode1, driver_name1 driverName1, driver_phone driverPhone1,
			status state, driver_code2 driverCode2, driver_name2 driverName2, 
			create_time createTime, be_car_load beCarLoad, charging_assmeble_no chargingAssembleNo
		from 
			tfr.t_opt_truck_task
		where
			id = #{id}
			and status <> 'CANCLED'
    ]]>
  </select>
  <!-- 根据ID获取车辆任务信息包括已作废的 -->
  <select id="getTruckTaskByIdCancled" parameterType="String" resultMap="truckTaskResultMap">
	<![CDATA[
		select
			id id, vehicle_no vehicleno, line_name lineName, business_type businessType,
			driver_code1 driverCode1, driver_name1 driverName1, driver_phone driverPhone1,
			status state, driver_code2 driverCode2, driver_name2 driverName2, 
			create_time createTime, be_car_load beCarLoad, charging_assmeble_no chargingAssembleNo
		from 
			tfr.t_opt_truck_task
		where
			id = #{id}
    ]]>
  </select>
  <!-- 根据车牌号获取车辆任务信息_取最新的一条 -->
  <select id="getTruckTaskByVehicleNo" parameterType="String" resultMap="truckTaskResultMap">
	<![CDATA[
		select *
  from (select id,
               vehicleno,
               lineName,
               businessType,
               driverCode1,
               driverName1,
               driverPhone1,
               state,
               driverCode2,
               driverName2,
               createTime,
               beCarLoad,
               chargingAssembleNo,
               rownum row_num
          from (select t.id                   id,
                       t.vehicle_no           vehicleno,
                       t.line_name            lineName,
                       t.business_type        businessType,
                       t.driver_code1         driverCode1,
                       t.driver_name1         driverName1,
                       t.driver_phone         driverPhone1,
                       t.status               state,
                       t.driver_code2         driverCode2,
                       t.driver_name2         driverName2,
                       t.create_time          createTime,
                       t.be_car_load          beCarLoad,
                       t.charging_assmeble_no chargingAssembleNo
                  from tfr.t_opt_truck_task t, tfr.t_opt_truck_task_detail d
                 where t.id = d.truck_task_id(+)
                   and t.vehicle_no = #{vehicleNo}
                   and t.status != 'ARRIVED'
                   and t.status != 'CANCLED'
                 order by d.create_time desc))
 where row_num = 1
    ]]>
  </select>
  <!-- 根据单号获取车辆任务信息_取最新的一条 -->
  <select id="getTruckTaskByBillNo" parameterType="String" resultMap="truckTaskResultMap">
	<![CDATA[
		select *
  from (select id,
               vehicleno,
               lineName,
               businessType,
               driverCode1,
               driverName1,
               driverPhone1,
               state,
               driverCode2,
               driverName2,
               createTime,
               beCarLoad,
               chargingAssembleNo,
               rownum row_num
          from (select t.id                   id,
                       t.vehicle_no           vehicleno,
                       t.line_name            lineName,
                       t.business_type        businessType,
                       t.driver_code1         driverCode1,
                       t.driver_name1         driverName1,
                       t.driver_phone         driverPhone1,
                       t.status               state,
                       t.driver_code2         driverCode2,
                       t.driver_name2         driverName2,
                       t.create_time          createTime,
                       t.be_car_load          beCarLoad,
                       t.charging_assmeble_no chargingAssembleNo
                  from tfr.t_opt_truck_task t, tfr.t_opt_truck_task_detail d, tfr.t_opt_truck_task_bill b
                 where t.id = d.truck_task_id(+)
                   and d.id = b.truck_task_detail_id(+)
                   and b.bill_no = #{bill_no}
                   and (t.status = 'ARRIVED' or t.status = 'HALFWAY_ARRIVE' or d.status = 'ARRIVED') 
                 order by d.create_time desc))
 where row_num = 1
    ]]>
  </select>
  <!-- 根据封签ID获取到达部门编号 -->
  <select id="getDestOrgCodeBySealId" parameterType="String" resultType="String">
	<![CDATA[
		select 
			d.dest_org_code destOrgCode 
		from 
			tfr.t_opt_seal s, tfr.t_opt_truck_task_detail d 
		where 
			s.t_truck_task_detail_id = d.id 
		and 
			s.id = #{id}
    ]]>
  </select>

  <!-- 根据封签ID获取车辆任务明细信息 -->
  <select id="getTruckTaskDetailBySealId" parameterType="String" resultMap="truckTaskDetailResultMap">
	<![CDATA[
		select 
		d.ID,
		d.TRUCK_TASK_ID,
		d.VEHICLE_NO,
		d.line_name,
		d.line_VIRTUAL_CODE,
		d.BUSINESS_TYPE,
		d.ORIG_ORG_CODE,
		d.DEST_ORG_CODE,
		d.CREATE_TIME,
		d.TRUCK_DEPART_ID,
		d.TRUCK_ARRIVE_ID
		from tfr.t_opt_TRUCK_TASK_DETAIL d, tfr.t_opt_seal s 
    ]]>
	<where>
		d.id = s.t_truck_task_detail_id
		AND s.id = #{id}
	</where>
  </select>

  <!-- 根据t_opt_truck_task.id找t_opt_truck_task_detail
		 返回 t_opt_truck_task_detail.create_time最早的一条 -->
  <select id="getTruckTaskDetailByTruckId" parameterType="String" resultMap="truckTaskDetailResultMap">
	<![CDATA[
		select *
		  from (select orig_org_code,
		               orig_org_name,
		               dest_org_code,
		               dest_org_name,
		               line_name,
		               create_time
		          from tfr.t_opt_truck_task_detail
		         where truck_task_id = #{truckTaskId}
		         order by create_time asc)
		 where rownum = 1
    ]]>
  </select>

  <!-- 根据t_opt_truck_task.id找t_opt_truck_task_detail -->
  <select id="queryTruckTaskDetailByTruckTaskId" parameterType="map" resultMap="truckTaskDetailResultMap">
	<![CDATA[
	  select orig_org_code,
		       orig_org_name,
		       dest_org_code,
		       dest_org_name,
		       line_name,
		       create_time
		  from tfr.t_opt_truck_task_detail
		 where truck_task_id = #{truckTaskId}
		 and (orig_org_code = #{orgCode} or dest_org_code = #{orgCode})
    ]]>
  </select>

  <!-- 根据t_opt_truck_task.id,t_opt_truck_task_detail.orig_code找t_opt_truck_task_detail -->
  <select id="queryTruckTaskDetailByTruckTaskIdAndOrigCode" parameterType="map" resultMap="truckTaskDetailResultMap">
	<![CDATA[
	  select orig_org_code,
		       orig_org_name,
		       dest_org_code,
		       dest_org_name,
		       line_name,
		       create_time
		  from tfr.t_opt_truck_task_detail
		 where truck_task_id = #{truckTaskId}
		 and orig_org_code = #{origCode}
		 and (status = 'UNDEPART' or status = 'ONTHEWAY')
    ]]>
  </select>

  <!-- 查询当前部门下未配载的交接单  -->
  <select id="queryUnDistanceHandover" parameterType="map" resultType="String">
	<![CDATA[
    select b.bill_no
	  from tfr.t_opt_truck_task        t,
	       tfr.t_opt_truck_task_detail d,
	       tfr.t_opt_truck_task_bill   b,
	       tfr.t_opt_handoverbill      h
	 where t.id = d.truck_task_id(+)
	   and d.id = b.truck_task_detail_id(+)
	   and b.bill_no = h.handover_no
	   and b.bill_level = 1
	   and h.handover_type = 'LONG_DISTANCE_HANDOVER'
	   and t.id = #{truckTaskId}
	   and d.orig_org_code = #{origOrgCode}
	   and d.status in ('UNDEPART', 'ONTHEWAY')
    ]]>
  </select>

  <!-- 根据封签ID获取车辆任务明细信息 -->
  <select id="queryDriverInfoByTaskDetailId" parameterType="String" resultMap="driverInfoResultMap">
	<![CDATA[
		select 
		    h.driver_name driverName
		    , h.driver_code driverCode
		    , h.driver_mobile_phone driverPhone 
		from 
		tfr.t_opt_truck_task_detail d, tfr.t_opt_truck_task_bill b, tfr.t_opt_handoverbill h 
		where 
		d.id = b.truck_task_detail_id(+) 
		and b.bill_no = h.handover_no(+)
		and d.id = #{id}
    ]]>
  </select>

  <!-- 根据truckTaskId查询出交接单中的司机信息 -->
  <select id="queryDriverInfoByTruckTaskId" parameterType="String" resultMap="vehicleSealResultMap">
	<![CDATA[
		select driver_code driverCode, driver_name driverName
  			from (select handover.driver_code, handover.driver_name, rownum row_num
          			from tfr.t_opt_handoverbill      handover,
               		tfr.t_opt_truck_task_detail ttd,
               		tfr.t_opt_truck_task_bill   ttb
         	where handover.handover_no = ttb.bill_no
           	and ttb.bill_level = '1'
           	and ttb.truck_task_detail_id = ttd.id
           	and ttd.truck_task_id = #{truckTaskId})
 		where row_num = 1
    ]]>
  </select>

  <!-- 根据车辆任务ID查询单据相关信息 -->
  <select id="queryBillInfoByTruckTaskId" parameterType="map" resultMap="billInfoResultMap">
	<![CDATA[
		select 
		    t.vehicle_no vehicleNo
		  , d.line_name lineName
		  , t.driver_name1 driverName
		  , d.status status
		  , b.bill_no  billNo
		from 
			tfr.t_opt_truck_task_bill b, tfr.t_opt_truck_task_detail d,  tfr.t_opt_truck_task t
		where
		b.truck_task_detail_id = d.id(+)
		and d.truck_task_id = t.id
		and t.id = #{id}
		and b.bill_level = 1
    ]]>
  </select>
  <!-- 根据车辆任务ID更新车辆任务明细的封签ID -->
  <select id="updateTruckTaskDetailByTruckTaskId" parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.SealEntity" >
	<![CDATA[
		update tfr.t_opt_truck_task_detail
   		set vehicle_seal_id = #{id}
 		where truck_task_id = #{truckTaskDetailId}
   		and (status = 'UNDEPART' or status = 'ONTHEWAY')
    ]]>
  </select>
  <!-- 根据车辆任务ID更新车辆任务表的司机信息 -->
  <select id="updateTruckTaskDriverByTruckTaskId" parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.SealEntity" >
	<![CDATA[
		update tfr.t_opt_truck_task
   		set driver_code1 = #{driverCode}
 			, driver_name1 = #{driverName}
   		where id = #{truckTaskDetailId}
    ]]>
  </select>
  <!-- 根据车辆任务ID在封签表中找封签类型为已绑定的数据 -->
  <select id="querySealByTruckTaskId" parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.SealEntity" resultMap="SealResultMap">
	select 
    <include refid="Base_Column_List" />
    from tfr.t_opt_seal
    where t_truck_task_detail_id = #{truckTaskDetailId}
    and seal_type = #{sealType}
    <!-- 如果封签类型为校验类型, 就根据校验时间排序 -->
    <if test="sealType == 'CHECK'">
    	order by check_time desc
    </if>
  </select>
  <!-- 根据封签号查询出所有的出发封签 -->
  <select id="querySealOrigDetailsBySealNo" parameterType="String" resultMap="sealOrigDetailsResultMap">
	select seal_no, seal_id, id, operate_time, seal_type
	  from tfr.t_opt_seal_orig_detail
	 where seal_no = #{sealNo}
  </select>
  <!-- 根据封签号查询出所有的到达封签 -->
  <select id="querySealDestDetailsBySealNo" parameterType="String" resultMap="sealDestDetailsResultMap">
	select seal_no, seal_id, id, operate_time, seal_type
	  from tfr.t_opt_seal_dest_detail
	 where seal_no = #{sealNo}
  </select>
  <!-- 根据封签号和封签明细ID查询出发封签 -->
  <select id="querySealOrigDetailsBySealNoAndId" parameterType="String" resultMap="sealDestDetailsResultMap">
  	<![CDATA[
		select seal_no, seal_id, id, operate_time, seal_type
		  from tfr.t_opt_seal_orig_detail
		 where seal_no = #{sealNo}
		   and id <> #{id}
	]]>
  </select>
  <!-- 查询出未上报差错的封签  -->
  <select id="queryUnReportSeal" parameterType="com.deppon.foss.module.transfer.load.api.shared.domain.SealEntity" resultMap="SealResultMap">
	select s.ID,
	       s.T_TRUCK_TASK_DETAIL_ID,
	       s.VEHICLE_NO,
	       s.SEAL_TYPE,
	       s.SEAL_STATE,
	       s.SEALER_CODE,
	       s.SEALER_NAME,
	       s.SEALD_ORG_CODE,
	       s.SEALD_ORG_NAME,
	       s.SEAL_TIME,
	       s.CHECKER_USER,
	       s.CHECKER_CODE,
	       s.CHECK_ORG_CODE,
	       s.CHECK_ORG_NAME,
	       s.CHECK_TIME,
	       s.OPERATE_TIME,
	       s.SEAL_ORG_MEMO,
	       s.CHECK_ORG_MEMO,
	       s.TRUCK_DEPART_ID
	  from tfr.t_opt_seal s, tfr.t_opt_truck_task t
    <![CDATA[
	 where s.t_truck_task_detail_id = t.id(+)
	   and t.status <> 'CANCELED'
	   and s.seal_type = 'CHECK'
	   and s.seal_state <> 'NORMAL'
	   and s.oa_error_no is null
	]]>
  </select>
  <!-- 根据封签ID查出到达封签明细 -->
  <select id="querySealDestDetailsBySealId" parameterType="String" resultMap="sealDestDetailsResultMap">
	select seal_no, seal_id, id, operate_time, seal_type
    from tfr.t_opt_seal_dest_detail
	 where seal_id = #{sealId}
  </select>
</mapper>