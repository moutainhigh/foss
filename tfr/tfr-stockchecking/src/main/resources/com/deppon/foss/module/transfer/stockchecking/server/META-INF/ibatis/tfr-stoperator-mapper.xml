<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="foss.tfr.StOperatorDao" >
  <resultMap id="StOperatorResultMap" type="com.deppon.foss.module.transfer.stockchecking.api.shared.domain.StOperatorEntity" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="EMP_CODE" property="empCode" jdbcType="VARCHAR" />
    <result column="EMP_NAME" property="empName" jdbcType="VARCHAR" />
    <result column="ST_TASK_ID" property="stTaskId" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="StOperator_Column_List" >
    ID, EMP_CODE, EMP_NAME, ST_TASK_ID
  </sql>
  <select id="selectStOperatorByPrimaryKey" resultMap="StOperatorResultMap" parameterType="java.lang.String" >
    select 
    <include refid="StOperator_Column_List" />
    from TFR.T_OPT_ST_OPERATOR
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <select id="queryOperatorsByStTaskId" resultMap="StOperatorResultMap" parameterType="java.lang.String" >
    select 
    <include refid="StOperator_Column_List" />
    from TFR.T_OPT_ST_OPERATOR
    where ST_TASK_ID = #{stTaskId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from TFR.T_OPT_ST_OPERATOR
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteOperatorByStTaskId" parameterType="java.lang.String" >
    delete from TFR.T_OPT_ST_OPERATOR
    where ST_TASK_ID = #{stTaskId,jdbcType=VARCHAR}
  </delete>
  <insert id="addStOperatorEntity" parameterType="com.deppon.foss.module.transfer.stockchecking.api.shared.domain.StOperatorEntity" >
    insert into TFR.T_OPT_ST_OPERATOR (ID, EMP_CODE, EMP_NAME, 
      ST_TASK_ID)
    values (#{id,jdbcType=VARCHAR}, #{empCode,jdbcType=VARCHAR}, #{empName,jdbcType=VARCHAR}, 
      #{stTaskId,jdbcType=VARCHAR})
  </insert>
  <insert id="addStOperatorEntityBatch" parameterType="java.util.List">
  	begin
	<foreach collection="list" item="item" separator=";">
    insert into TFR.T_OPT_ST_OPERATOR (ID, EMP_CODE, EMP_NAME, 
      ST_TASK_ID)
    values (#{item.id,jdbcType=VARCHAR}, #{item.empCode,jdbcType=VARCHAR}, #{item.empName,jdbcType=VARCHAR}, 
      #{item.stTaskId,jdbcType=VARCHAR})
    </foreach>
	;end;
  </insert>
  <insert id="insertSelective" parameterType="com.deppon.foss.module.transfer.stockchecking.api.shared.domain.StOperatorEntity" >
    insert into TFR.T_OPT_ST_OPERATOR
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="empCode != null" >
        EMP_CODE,
      </if>
      <if test="empName != null" >
        EMP_NAME,
      </if>
      <if test="stTaskId != null" >
        ST_TASK_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="empCode != null" >
        #{empCode,jdbcType=VARCHAR},
      </if>
      <if test="empName != null" >
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="stTaskId != null" >
        #{stTaskId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.deppon.foss.module.transfer.stockchecking.api.shared.domain.StOperatorEntity" >
    update TFR.T_OPT_ST_OPERATOR
    <set >
      <if test="empCode != null" >
        EMP_CODE = #{empCode,jdbcType=VARCHAR},
      </if>
      <if test="empName != null" >
        EMP_NAME = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="stTaskId != null" >
        ST_TASK_ID = #{stTaskId,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deppon.foss.module.transfer.stockchecking.api.shared.domain.StOperatorEntity" >
    update TFR.T_OPT_ST_OPERATOR
    set EMP_CODE = #{empCode,jdbcType=VARCHAR},
      EMP_NAME = #{empName,jdbcType=VARCHAR},
      ST_TASK_ID = #{stTaskId,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
</mapper>