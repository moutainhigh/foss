<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="foss.packaging.pack" >
	<!-- 查询营业部代打包装列配置信息 -->
	<resultMap id="queryUnpack" 
		type="com.deppon.foss.module.transfer.packaging.api.shared.domain.QueryUnpackResultEntity">
		
		<result property="wayBillNumber" column="wayBillNumber" />
		<result property="waybillNum" column="waybillNum" />
		<result property="waybillVolume" column="waybillVolume" />
		<result property="needPackVolume" column="needPackVolume" />	
		<!-- <id property="id" column="ID"/> -->
		<result property="packStockNum" column="packStockNum" />
		<result property="needPackNum" column="needPackNum" />
		<result property="packedNum" column="packedNum" />
		<result property="goodsStatus" column="goodsStatus" />
		<result property="transportationType" column="transportationType" />
		<result property="goodsName" column="goodsName" />
		<result property="waybillCreateDept" column="waybillCreateDept" />
		<result property="waybillCreateDeptCode" column="waybillCreateDeptCode" />
		<result property="packDept" column="packDept" />
		<result property="waybillCreateDate" column="waybillCreateDate" />
		<result property="packRequire" column="packRequire" />
		<result property="predictDepartDate" column="predictDepartDate" />
		<result property="predictArriveDate" column="predictArriveDate" />
		<result property="customerPickupOrgName" column="customerPickupOrgName" />
	</resultMap>
	<!-- 查询代打包装明细列配置信息 -->
	<resultMap id="queryUnpackDetails" 
		type="com.deppon.foss.module.transfer.packaging.api.shared.domain.QueryUnpackDetailsEntity">
		<id property="id" column="ID"/>
		<result property="serialNum" column="serialNum" />
		<result property="isNeedPack" column="isNeedPack" />
		<result property="handoverNo" column="handoverNo" />
		<result property="isPacked" column="isPacked" />
		<result property="goodsStatus" column="goodsStatus" />
		<result property="goodsAreaCode" column="goodsAreaCode" />
		<result property="packageType" column="package_type" />
	</resultMap>
	
		<!-- 查询已包装列配置信息 -->
	<resultMap id="queryPacked" 
		type="com.deppon.foss.module.transfer.packaging.api.shared.domain.QueryPackedResultEntity">
		<result property="id" column="id" />
		<result property="wayBillNumber" column="wayBillNumber" />
		<result property="packedDate" column="packedDate" />
		<result property="waybillCreateDept" column="waybillCreateDept" />
		<result property="isInPackageArea" column="isInPackageArea" />	
		<result property="packedDept" column="packedDept" />
		<result property="goodsName" column="goodsName" />
		<result property="waybillNum" column="waybillNum" />
		<result property="packedNum" column="packedNum" />
		<result property="packedMate" column="packedMate" />
		<result property="packedVolume" column="packedVolume" />
		<result property="packedPerson" column="packedPerson" />
		<result property="createUser" column="createUser" />
		<result property="createDateFalse" column="createDateFalse" />
		<result property="modifyUser" column="modifyUser" />
		<result property="modifyDateFalse" column="modifyDateFalse" />
		<result property="packRequire" column="packRequire" />
		<result property="plusNum" column="plusNum" />
		<result property="loginDate" column="loginDate" />
		<result property="logoutDate" column="logoutDate" />
		<result property="newSerialNo" column="newSerialNo" />
		<result property="oldSerialNo" column="oldSerialNo" />
		<result property="notes" column="notes" />
		<result property="packageVolume" column="packageVolume" />
		<result property="goodsVolumeTotal" column="goodsVolumeTotal" />
		<result property="productName" column="productName" />
		<result property="packageType" column="packageType" />
		<result property="rowNumber" column="rowNumber" />
	</resultMap>
	
	<!-- 查询运单包装配置信息 -->
	<resultMap id="queryWaybillPack" 
		type="com.deppon.foss.module.transfer.packaging.api.shared.domain.WaybillPackEntity">
		<result property="id" column="id" />
		<result property="wayBillNumber" column="wayBillNumber" />
		<result property="waybillCreateDept" column="waybillCreateDept" />
		<result property="waybillCreateDeptName" column="waybillCreateDeptName" />
		<result property="goodsName" column="goodsName" />

		<result property="packedMate" column="packedMate" />
		<result property="packedVolume" column="packedVolume" />
		<result property="unPackedVolume" column="unPackedVolume" />

		<result property="plusNum" column="plusNum" />
		<result property="packRequire" column="packRequire" />	
		<result property="remark" column="remark" />
		<result property="orgCode" column="orgCode" />
		<result property="createUser" column="createUser" />
		<result property="createDate" column="createDate" />
		<result property="modifyUser" column="modifyUser" />
		<result property="modifyDate" column="modifyDate" />
		<result property="modifyDateOptimistic" column="modifyDateOptimistic" />
		<result property="billTime" column="billTime" />
	</resultMap>
	
	
		<!-- 查询流水号关系配置信息 -->
	<resultMap id="querySerialRelation" 
		type="com.deppon.foss.module.transfer.packaging.api.shared.domain.SerialRelationEntity">
		<result property="waybillNo" column="waybillNo" />
		<result property="serialNo" column="serialNo" />
		<result property="isPacked" column="isPacked" />
		<result property="tempSerialNo" column="tempSerialNo" />
		<result property="oldSerialNo" column="oldSerialNo" />
		<result property="newSerialNo" column="newSerialNo" />
		<result property="id" column="id" />
		<result property="packedId" column="packedId" />
		<result property="packageType" column="packageType" />
		<result property="actualPackageId" column="actualPackageId" />
		<result property="active" column="active" />
		<result property="packageRequestDetailId" column="packageRequestDetailId" />
	</resultMap>
	
			<!-- 查询包装人员配置信息 -->
	<resultMap id="queryPackPerson" 
		type="com.deppon.foss.module.transfer.packaging.api.shared.domain.PackedPersonEntity">
		<result property="empName" column="empName" />
		<result property="empCode" column="empCode" />
	</resultMap>
	
	<!-- 查询货物的库存部门 -->
	<resultMap id="querySerialArea" 
		type="com.deppon.foss.module.transfer.pda.api.shared.dto.SerialNoAreaDto">
		<result property="serialNo" column="serialNo" />
		<result property="orgCode" column="orgCode" />
		<result property="areaCode" column="areaCode" />
	</resultMap>
	
	
	<!-- 查询营业部代打包装信息 -->
	<select id="selectUnpack" resultMap="queryUnpack"
		parameterType="com.deppon.foss.module.transfer.packaging.api.shared.domain.QueryUnpackConditionEntity">
  		   select /*模块：中转-代包装-查询*/
  		   		  re.WAYBILL_NO         wayBillNumber,
       			  re.CREATE_ORG_NAME    waybillCreateDept,
       			  re.CREATE_ORG_CODE    waybillCreateDeptCode,
       			  re.PACKAGE_ORG_CODE	packDept,
                  re.GOODS_QTY_TOTAL    waybillNum,
       			  re.GOODS_VOLUME_TOTAL waybillVolume,
                  re.PACKAGE_NEEDNUM    needPackNum,
                  re.PACKAGE_VOLUME     needPackVolume,
                  product.name       transportationType,
                  re.GOODS_NAME         goodsName,
                  re.BILL_TIME          waybillCreateDate,
                  re.PACKED_NUM         packedNum,
                  re.PACKAGE_REQUIREMENT packRequire,
                  pa.action              goodsStatus,
                  st.STOCK_GOODS_QTY     packStockNum,
                  pa.plan_start_time     predictDepartDate,
                  pa.PLAN_ARRIVE_TIME    predictArriveDate,
                  w.customer_pickup_org_name customerPickupOrgName
             from tfr.T_OPT_PACKAGE_REQUIRE re
        left join tfr.t_opt_transport_path pa on pa.waybill_no = re.waybill_no                                                          
        left join pkp.T_SRV_PRODUCT product on product.code = re.PRODUCT_CODE                                                                                                                                                                                                                       
        left join tfr.t_opt_waybill_stock st on re.waybill_no = st.waybill_no
        										 <if test="packDept!=null and packDept!='' ">	
													 AND st.org_code = #{packDept}
												 </if>
												 <if test="areaCode!=null and areaCode!='' ">
												 	 AND st.goods_area_code =#{areaCode}												 
												 </if>  
		inner  join pkp.t_srv_waybill w on w.waybill_no = re.waybill_no
			AND w.active = 'Y'
		<include refid="select_Where_unpack_waybillNo"/>  												           
        order by pa.plan_start_time asc ,product.seq asc     
	</select>
	<!--  where re.PACKAGE_ORG_CODE = #{packDept}
              and re.BILL_TIME between #{waybillBeginDate} and #{waybillEndDate}
              and re.PACKAGE_NEEDNUM != re.PACKED_NUM -->
	<!-- 查询营业部代打包装信息总数,dictActive表明此字典是有效的 -->
	<select id="selectUnpackCount" resultType="long"
		parameterType="com.deppon.foss.module.transfer.packaging.api.shared.domain.QueryUnpackConditionEntity">
  		   select /*模块：中转-代包装-统计*/
  		   		  count(*)
             from tfr.T_OPT_PACKAGE_REQUIRE re
        left join tfr.t_opt_transport_path pa on pa.waybill_no = re.waybill_no   
        left join pkp.T_SRV_PRODUCT product on product.code = re.PRODUCT_CODE 
        left join tfr.t_opt_waybill_stock st on re.waybill_no = st.waybill_no
        										 <if test="packDept!=null and packDept!='' ">	
													 AND st.org_code = #{packDept}
												 </if>
												 <if test="areaCode!=null and areaCode!='' ">
												 	 AND st.goods_area_code =#{areaCode}												 
												 </if>   
		<include refid="select_Where_unpack_waybillNo"/>  			
	</select>
	
	<sql id="select_Where_unpack_waybillNo">
	    <where>
		    <if test="waybillNo != null and waybillNo!='' ">
			         re.WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}
		    </if>
		    <if test="waybillNo == null or waybillNo =='' " >
			   <if test="waybillBeginDate!=null and waybillEndDate!=null ">
			   		and re.BILL_TIME between #{waybillBeginDate,jdbcType=TIMESTAMP} 
			   		and #{waybillEndDate,jdbcType=TIMESTAMP}
			   </if> 	
			</if>
		   <if test="packDept!=null and packDept!='' ">
	       		AND re.PACKAGE_ORG_CODE = #{packDept}
	       	</if>	
	        <if test="goodsStatus!=null and goodsStatus!='' and goodsStatus!='ALL' ">
	       		and pa.action = #{goodsStatus}
	        </if>	
			and re.IS_PACKED = 'N'
			and re.IS_DISABLE != 'Y'
		</where>
	</sql>
	
	<sql id="select_Where_unpack">
	    <where>
			<if test="packDept!=null and packDept!='' ">	
					AND re.PACKAGE_ORG_CODE = #{packDept}
			</if>
			<if test="waybillBeginDate!=null and waybillEndDate!=null ">	
					and re.BILL_TIME between #{waybillBeginDate} and #{waybillEndDate}
			</if>
			<if test="goodsStatus!=null and goodsStatus!='' and goodsStatus!='ALL' ">	
					and pa.action = #{goodsStatus}
			</if>
			and re.IS_PACKED = 'N'
			and re.IS_DISABLE != 'Y'
			 
		</where>
		
	</sql>
	<!-- 查询未包装的每票货物信息 -->
	<select id="selectUnpackDetails" resultMap="queryUnpackDetails"
		parameterType="com.deppon.foss.module.transfer.packaging.api.shared.domain.QueryUnpackConditionEntity">
			   select /*模块：中转-代包装-单票查询*/
       					de.serial_no serialNum,
       					max('是') isNeedPack,
       					listagg(case
         					when de.is_packed = 'N' then
          					'否'
         					else
          					'是'
       					end,',') within group(order by de.package_type) as isPacked,
       					max(st.goods_area_code) goodsAreaCode,
       					max(handSerial.handoverbill_no) handoverNo,
       					max(handSerial.handoverbill_state) handoverbill_state,
						listagg(de.package_type,',') within group(order by de.package_type) as package_type
        		   from tfr.t_opt_package_request_detail de
              left join tfr.t_opt_stock st on de.waybill_no = st.waybill_no
                                    and de.serial_no = st.serial_no
                                    <if test="packDept!=null and packDept!='' ">
                                        and st.org_code = #{packDept}
                                    </if>
              left join (select so.serial_no       serial_no,
                          		so.waybill_no      waybill_no,
                          		so.handoverbill_no handoverbill_no,
                          		hand.handoverbill_state handoverbill_state
                     	   from tfr.t_opt_handoverbill  hand
                     inner join tfr.t_opt_handoverbill_serialno so on so.handoverbill_no =
                                                              hand.handover_no
		                  where hand.handoverbill_state != 90
		                    and so.waybill_no = #{waybillNo}
		                    and hand.orig_org_code =#{waybillCreateDeptCode}
		                  	) handSerial on handSerial.serial_no =
		                                                                    de.serial_no
		                                                                and handSerial.waybill_no =
		                                                                    de.waybill_no                   
				      where de.waybill_no = #{waybillNo}
				      and de.active = 'Y'
				      group by de.serial_no
				      order by de.serial_no
	</select>
	
	<!-- 查询已包装信息 -->
	<select id="selectPacked" resultMap="queryPacked"
		parameterType="com.deppon.foss.module.transfer.packaging.api.shared.domain.QueryPackedConditionEntity">
        select          /*模块：中转-已包装-查询*/
        				pa.waybill_no       wayBillNumber,
        				pa.package_type		packageType,
        				row_number() over(partition by pa.waybill_no order by pa.waybill_no,pa.package_type) rowNumber,	
        				MAX(pa.id)          id,
                        max(pa.create_time)       packedDate,
                        max(pa.waybill_org_name)  waybillCreateDept,
                        max((case when st.stock_goods_qty>0 then '是' else '否' end))   isInPackageArea,
                        max(pa.org_name)          packedDept,
                        max(pa.goods_name)        goodsName,
                        max(re.goods_qty_total)   waybillNum,
                        max(re.packed_num)        packedNum,
                        max(pa.package_material)     packedMate,
                        max(pa.volume_with_package)  packedVolume,
                        max(pa.create_user_name)     createUser,
                        max(pa.create_time)          createDateFalse,
                        max(pa.modify_user_name)    modifyUser,
                        max(pa.modify_time)          modifyDateFalse,
                        max(pa.PACKAGE_REQUEST)      packRequire,
                        avg(pa.WOODYTRAY_QTY)        plusNum,
                        max(pr.operator_name)       packedPerson,
                        max(re.LOGIN_TIME)			loginDate,
                        max(re.LOGOUT_TIME)			logoutDate
          from tfr.t_opt_actual_package pa
          left join tfr.t_opt_package_require re on pa.waybill_no=re.waybill_no
          left join tfr.t_opt_waybill_stock st on pa.waybill_no = st.waybill_no 
          										 <if test="packedDept!=null and packedDept!='' ">	
													 AND st.org_code = #{packedDept}
												 </if>
												 <if test="areaCode!=null and areaCode!='' ">	
													 AND st.goods_area_code =#{areaCode}
												 </if>                                               
          left join tfr.t_opt_package_participation pr on pa.id = pr.actual_package_id	
          <include refid="select_Where_packed"/>  
          group by pa.waybill_no,pa.package_type,pa.create_time                                    
	</select>
	<!-- 查询已包装信息 导出信息 -->
	<select id="selectPackedWithExecl" resultMap="queryPacked"
		parameterType="com.deppon.foss.module.transfer.packaging.api.shared.domain.QueryPackedConditionEntity">
		select
			pa.id														AS id,                        
			pa.waybill_no												AS wayBillNumber,             
			pa.create_time												AS packedDate,                
			pa.waybill_org_name											AS waybillCreateDept,         
			(case when st.stock_goods_qty>0 then '是' else '否' end)    AS isInPackageArea,           
			pa.org_name													AS packedDept,              
			pa.goods_name												AS goodsName,               
			re.goods_qty_total											AS waybillNum,                
			re.packed_num												AS packedNum,                 
			pa.package_material											AS packedMate,                
			pa.volume_with_package										AS packedVolume,              
			pa.create_user_name											AS createUser,                
			pa.create_time												AS createDateFalse,           
			pa.modify_user_name											AS modifyUser,                
			pa.modify_time												AS modifyDateFalse,           
			pa.PACKAGE_REQUEST											AS packRequire,               
			pa.WOODYTRAY_QTY											AS plusNum,                   
			pr.operator_name											AS packedPerson,              
			re.LOGIN_TIME												AS loginDate,                 
			re.LOGOUT_TIME												AS logoutDate,                
			pade.new_serial_no											AS newSerialNo,               
			pade.old_serial_no											AS oldSerialNo,               
			pa.notes													AS notes,
			re.package_volume											AS packageVolume,
			re.goods_volume_total										AS goodsVolumeTotal,
			sp.name														AS productName,
			pa.package_type												AS packageType
		from tfr.t_opt_actual_package pa
		left join tfr.t_opt_actual_package_detail pade on pade.actual_package_id = pa.id
		left join tfr.t_opt_package_require re on pa.waybill_no=re.waybill_no
		left join pkp.t_srv_product sp on sp.code = re.product_code
		and sp.active='Y'
		left join tfr.t_opt_waybill_stock st on pa.waybill_no = st.waybill_no 
			<if test="packedDept!=null and packedDept!='' ">  
				AND st.org_code = #{packedDept}
			</if>
			<if test="areaCode!=null and areaCode!='' ">  
				AND st.goods_area_code =#{areaCode}
			</if>                                               
		left join tfr.t_opt_package_participation pr on pa.id = pr.actual_package_id  
		<include refid="select_Where_packed"/>                    
	</select>
	<!-- 查询已包装信息总数 -->
	<select id="selectPackedCount" resultType="long">
        select /*模块：中转-已包装-统计*/
        	   count(*)                   
          from tfr.t_opt_actual_package pa
          left join tfr.t_opt_package_require re on pa.waybill_no=re.waybill_no
          left join tfr.t_opt_waybill_stock st on pa.waybill_no = st.waybill_no 
          										 <if test="packedDept!=null and packedDept!='' ">	
													 AND st.org_code = #{packedDept}
												 </if>
												 <if test="areaCode!=null and areaCode!='' ">	
													 AND st.goods_area_code =#{areaCode}
												 </if>                                               
          left join tfr.t_opt_package_participation pr on pa.id = pr.actual_package_id	
          <include refid="select_Where_packed"/>
	</select>
	
	<sql id="select_Where_packed">
		<where>
			<if test="packedDept!=null and packedDept!='' ">	
					AND pa.ORG_CODE = #{packedDept}
			</if>
			<if test="packedBeginDate!=null and packedEndDate!=null ">	
					AND pa.create_time between #{packedBeginDate} and #{packedEndDate}
			</if>
			<if test="waybillCreateDept!=null and waybillCreateDept!='' ">	
					AND pa.waybill_org_code = #{waybillCreateDept}
			</if>
			<if test="wayBillNumber!=null and wayBillNumber!='' ">	
					AND pa.waybill_no = #{wayBillNumber}
			</if>
			<if test="packedPerson!=null and packedPerson!='' ">	
					AND pr.operator_code = #{packedPerson}
			</if>
		</where>
	</sql>
	
	<!-- 查询包装录入的运单相关信息 -->
	<select id="selectWaybillPack" resultMap="queryWaybillPack"
		parameterType="Map">
          select  /*模块：中转-已包装-单票查询(已)*/
          		  pa.id           id,
          		  pa.waybill_no   wayBillNumber,
                  pa.package_material   packedMate ,
                  pa.waybill_org_name waybillCreateDeptName,
                  pa.waybill_org_code waybillCreateDept,
                  pa.volume_with_package packedVolume,
                  pa.goods_name goodsName,
                  pa.woodytray_qty plusNum,
                  pa.package_request packRequire,
                  pa.notes remark,
                  to_char(pa.MODIFY_TIME,'yyyy-mm-dd hh24:mi:ss') modifyDateOptimistic,
                  pr.package_volume unPackedVolume,
                  pr.package_org_code orgCode
             from tfr.t_opt_actual_package pa
             inner join tfr.t_opt_package_require pr 
			 on pr.WAYBILL_NO = pa.waybill_no
             where pa.waybill_no=#{waybillno}                                  
             and pa.package_type = #{packageType}                  
	</select>
	
	<!-- 查询未包装录入的运单相关信息 -->
	<select id="selectUnWaybillPack" resultMap="queryWaybillPack"
		parameterType="String">
          select /*模块：中转-已包装-单票查询(未)*/
          		 re.id id,
          		 re.waybill_no wayBillNumber,
       		     re.create_org_code waybillCreateDept,
       		     re.create_org_name waybillCreateDeptName,
                 re.package_requirement packRequire,
                 re.goods_name goodsName,
                 re.bill_time billTime
            from tfr.t_opt_package_require re
           where re.waybill_no=#{waybillno}              
           and re.IS_DISABLE != 'Y'                                
	</select>
	
	<!-- 查询当前运单需要包装流水号和已生成的新流水号的关系 -->
	<select id="selectSerialRelation" resultMap="querySerialRelation"
		parameterType="Map">
        select /*模块：中转-已包装-单票新旧流失好关系查询*/
        	   de.serial_no oldSerialNo,
        	   pd.actual_package_id packedId,
       		   pd.id id,
       		   pd.new_serial_no tempSerialNo,
               pd.new_serial_no newSerialNo,
               de.is_packed isPacked,
               de.package_type packageType,
               de.actual_package_id actualPackageId,
               de.active active,
               de.id  packageRequestDetailId
          from tfr.t_opt_package_request_detail de
     left join tfr.t_opt_actual_package pa on de.waybill_no = pa.waybill_no
     and pa.package_type = #{packageType}                                            
     left join tfr.t_opt_actual_package_detail pd on pd.actual_package_id =
                                                  pa.id
                                                and de.serial_no = pd.old_serial_no  
                                              
         where
       de.waybill_no=#{waybillno}
         <if test="active != null and active != ''">
       	and	de.active = #{active}
         </if>
       and de.package_type = #{packageType}
      order by de.serial_no                                    
	</select>
	
	<!-- 根据ID查询包装人员信息 -->
	<select id="selectPackedPersonList" resultMap="queryPackPerson"
		parameterType="string">
       select /*模块：中转-已包装-查询包装人*/
       		  pa.OPERATOR_CODE empCode, pa.OPERATOR_NAME empName
  		 from tfr.T_OPT_PACKAGE_PARTICIPATION pa
        where pa.ACTUAL_PACKAGE_ID = #{id}                              
	</select>
	
	<!-- 查询当前运单的最大流水号的值 -->
	<select id="selectMaxSerialNo" resultType="string"
		parameterType="string">
        select /*模块：中转-已包装-单票最大流水号查询*/
        	   max(serial_no)
  		  from pkp.T_SRV_LABELED_GOOD 
         where waybill_no = #{waybillno}                                
	</select>
	
	<!-- 保存包装录入主信息-->
	<insert id="insertWaybillPackEntity"
		parameterType="com.deppon.foss.module.transfer.packaging.api.shared.domain.WaybillPackEntity">
				 insert into tfr.t_opt_actual_package(
					ID,
					WAYBILL_NO,
					WAYBILL_ORG_CODE,
					WAYBILL_ORG_NAME,
					GOODS_NAME,
					PACKAGE_MATERIAL,
					VOLUME_WITH_PACKAGE,
					WOODYTRAY_QTY,
					PACKAGE_REQUEST,
					NOTES,
					CREATE_USER_CODE,
					CREATE_USER_NAME,
					CREATE_TIME,
					MODIFY_USER_CODE,
					MODIFY_USER_NAME,
					MODIFY_TIME,
					ORG_CODE,
					ORG_NAME,
					IS_PDA,
					PACKAGE_TYPE
				 ) values(
				 #{id,jdbcType=VARCHAR},
				 #{wayBillNumber,jdbcType=VARCHAR},
				 #{waybillCreateDept,jdbcType=VARCHAR},
				 #{waybillCreateDeptName,jdbcType=VARCHAR},
				 #{goodsName,jdbcType=VARCHAR},
				 #{packedMate,jdbcType=VARCHAR},
				 #{packedVolume,jdbcType=DECIMAL},
				 #{plusNum,jdbcType=DECIMAL},
				 #{packRequire,jdbcType=VARCHAR},
				 #{remark,jdbcType=VARCHAR},
				 #{createUser,jdbcType=VARCHAR},
				 #{createUserName,jdbcType=VARCHAR},
				 #{createDate,jdbcType=TIMESTAMP},
				 #{modifyUser,jdbcType=VARCHAR},
				 #{modifyUserName,jdbcType=VARCHAR},
				 #{modifyDate,jdbcType=TIMESTAMP},
				 #{orgCode,jdbcType=VARCHAR},
				 #{orgName,jdbcType=VARCHAR},
				 #{isPDA,jdbcType=VARCHAR},
				 #{packageType,jdbcType=VARCHAR}
				 )
	</insert>	
	
	<!-- 修改包装录入主信息-->
	<update id="updateWaybillPackEntity"
		parameterType="com.deppon.foss.module.transfer.packaging.api.shared.domain.WaybillPackEntity">
		   <![CDATA[
		    update tfr.t_opt_actual_package pa
   			   set 
       			   pa.package_material    = #{packedMate},
       			   pa.volume_with_package = #{packedVolume},
       			   pa.woodytray_qty       = #{plusNum},
       			   pa.notes               = #{remark},
       			   pa.WAYBILL_ORG_NAME    = #{waybillCreateDeptName},
       			   pa.WAYBILL_ORG_CODE    = #{waybillCreateDept},
       			   pa.goods_name          = #{goodsName},
       			   pa.package_request     = #{packRequire},
       			   pa.modify_user_code    = #{modifyUser},
       			   pa.modify_user_name    = #{modifyUserName},
       			   pa.modify_time         = #{modifyDate}
 			 where pa.id = #{id}
 			   and pa.waybill_no = #{wayBillNumber}
 			   and to_char(pa.modify_time,'yyyy-mm-dd hh24:mi:ss') = to_char(to_date(#{modifyDateOptimistic},'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss')
 			]]>   
	</update>	
	
	<!-- 修改PDA包装录入主信息-->
	<update id="updatePDAWaybillPackEntity"
		parameterType="com.deppon.foss.module.transfer.packaging.api.shared.domain.WaybillPackEntity">
		   <![CDATA[
		    update tfr.t_opt_actual_package pa
   			   set 
       			   pa.package_material    = #{packedMate},
       			   pa.volume_with_package = #{packedVolume},
       			   pa.woodytray_qty       = #{plusNum},
       			   pa.notes               = #{remark},
       			   pa.WAYBILL_ORG_NAME    = #{waybillCreateDeptName},
       			   pa.WAYBILL_ORG_CODE    = #{waybillCreateDept},
       			   pa.goods_name          = #{goodsName},
       			   pa.package_request     = #{packRequire},
       			   pa.modify_user_code    = #{modifyUser},
       			   pa.modify_user_name    = #{modifyUserName},
       			   pa.modify_time         = #{modifyDate},
       			   pa.package_type        = #{packageType}
 			 where pa.id = #{id}
 			   and pa.waybill_no = #{wayBillNumber}
 			   and to_char(pa.modify_time,'yyyy-mm-dd hh24:mi:ss') = to_char(to_date(#{modifyDateOptimistic},'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss')
 			]]>   
	</update>	
	
	<!-- 保存包装人员信息 批量-->
	<insert id="insertPackedPersonList" parameterType="java.util.List">
		begin
		<foreach collection="list" item="item" separator=";">
			 insert into tfr.T_OPT_PACKAGE_PARTICIPATION(
					ID,
					ACTUAL_PACKAGE_ID,
					OPERATOR_CODE,
					OPERATOR_NAME,
					CREATE_TIME
				 ) values(
				 #{item.id},
				 #{item.packedId},
				 #{item.empCode},
				 #{item.empName},
				 #{item.createDate})
		</foreach>
		;end;			 
	</insert>
	<!-- 保存包装人员信息  单个 -->
	<insert id="insertPackedPersonEntity" parameterType="com.deppon.foss.module.transfer.packaging.api.shared.domain.PackedPersonEntity">	
		 insert into tfr.T_OPT_PACKAGE_PARTICIPATION(
				ID,
				ACTUAL_PACKAGE_ID,
				OPERATOR_CODE,
				OPERATOR_NAME,
				CREATE_TIME
			 ) values(
			 #{id},
			 #{packedId},
			 #{empCode},
			 #{empName},
			 #{createDate})		 
	</insert>
	
		<!-- 清空包装人员信息-->
	<insert id="deletePackedPersonList" parameterType="string">
		  delete from tfr.T_OPT_PACKAGE_PARTICIPATION	  	  
		  where ACTUAL_PACKAGE_ID=#{packedId}
	</insert>
	
	<!-- 保存新旧流水号关系 批量-->
	<insert id="insertSerialRelationList" parameterType="java.util.List">
		begin
		<foreach collection="list" item="item" separator=";">
				insert into tfr.T_OPT_ACTUAL_PACKAGE_DETAIL(
					ID,
					ACTUAL_PACKAGE_ID,
					NEW_SERIAL_NO,
					OLD_SERIAL_NO,
					CREATE_TIME
				 ) values(
				 #{item.id},
				 #{item.packedId},
				 #{item.newSerialNo},
				 #{item.oldSerialNo},
				 #{item.createDate})
		</foreach>
		;end;			 
	</insert>
	
	<!-- 保存新旧流水号关系 单个-->
	<insert id="insertSerialRelationEntity" parameterType="com.deppon.foss.module.transfer.packaging.api.shared.domain.SerialRelationEntity">
			insert into tfr.T_OPT_ACTUAL_PACKAGE_DETAIL(
				ID,
				ACTUAL_PACKAGE_ID,
				NEW_SERIAL_NO,
				OLD_SERIAL_NO,
				CREATE_TIME
			 ) values(
			 #{id},
			 #{packedId},
			 #{newSerialNo},
			 #{oldSerialNo},
			 #{createDate})
	</insert>
	
	
			<!-- 修改新旧流水号关系 批量-->
	<update id="updateSerialRelationList" parameterType="java.util.List">
		begin
		<foreach collection="list" item="item" separator=";">
				update tfr.T_OPT_ACTUAL_PACKAGE_DETAIL set
					NEW_SERIAL_NO=#{item.newSerialNo}
				where ID=#{item.id}
		</foreach>
		;end;			 
	</update>
	
	<!-- 修改新旧流水号关系 单个-->
	<update id="updateSerialRelationEntity" parameterType="com.deppon.foss.module.transfer.packaging.api.shared.domain.SerialRelationEntity">	
		update tfr.T_OPT_ACTUAL_PACKAGE_DETAIL set
			NEW_SERIAL_NO=#{newSerialNo}
		where ID=#{id}		 
	</update>
	
			<!-- 删除新旧流水号关系-->
	<delete id="deleteSerialRelationList" parameterType="java.util.List">
		begin
		<foreach collection="list" item="item" separator=";">
				delete from tfr.T_OPT_ACTUAL_PACKAGE_DETAIL
				where ID=#{item.id}
		</foreach>
		;end;			 
	</delete>
	
			<!-- 修改需要包装的流水号状态为已包装   批量
	<update id="addSerialStatus" parameterType="java.util.List">
		begin
		<foreach collection="list" item="item" separator=";">
				update tfr.t_opt_package_request_detail
				   set is_packed = 'Y'
				 where WAYBILL_NO=#{item.waybillNo}
				   and SERIAL_NO=#{item.oldSerialNo}
		</foreach>
		;end;			 
	</update>
	-->
	
	<!-- 修改需要包装的流水号状态为已包装 单个-->
	<update id="addSerialEntityStatus" parameterType="com.deppon.foss.module.transfer.packaging.api.shared.domain.SerialRelationEntity">
		update tfr.t_opt_package_request_detail
		   set is_packed = 'Y',
				MODIFY_TIME = #{modifyDate}
		 where WAYBILL_NO=#{waybillNo}
		   and SERIAL_NO=#{oldSerialNo}		 
		   and PACKAGE_TYPE=#{packageType}		 
	</update>
	
	<!-- 更新 包装需求明细流水号的状态-->
	<update id="updateSerialdetail" parameterType="Map">
		update tfr.t_opt_package_request_detail
		   <set>
			   <if test="active!=null and active!=''">
			   	active = #{active},
			   </if>
			   <if test="actualPackageId!=null">
			   	actual_package_id = #{actualPackageId},
			   </if>
			   MODIFY_TIME = #{modifyDate}
		   </set> 
		 where WAYBILL_NO=#{waybillNo}
		   and SERIAL_NO=#{oldSerialNo}		 
		   and PACKAGE_TYPE=#{packageType}		 
	</update>
	
	
			<!--更改需要包装的流水号状态为未包装 批量
	<update id="updateSerialStatus" parameterType="java.util.List">
		begin
		<foreach collection="list" item="item" separator=";">
				update tfr.t_opt_package_request_detail
				   set is_packed = 'N'
				 where WAYBILL_NO=#{item.waybillNo}
				   and SERIAL_NO=#{item.oldSerialNo}
		</foreach>
		;end;			 
	</update>
	-->
	
	<!--更改需要包装的流水号状态为未包装 单个-->
	<update id="updateSerialEntityStatus" parameterType="com.deppon.foss.module.transfer.packaging.api.shared.domain.SerialRelationEntity">
		update tfr.t_opt_package_request_detail
		   set is_packed = 'N',
		   		MODIFY_TIME = #{modifyDate}
		 where WAYBILL_NO=#{waybillNo}
		   and SERIAL_NO=#{oldSerialNo}	 
		   and PACKAGE_TYPE=#{packageType}
	</update>
	
				<!--更改包装需求表中已包装件数-->
	<update id="updatePackedNum" parameterType="HashMap">
		 update tfr.t_opt_package_require set PACKED_NUM = 
 	               (select count(1) from (select de.serial_no from tfr.t_opt_package_request_detail de 
                     where de.waybill_no=#{waybillNo}
                     and IS_PACKED = 'Y' and active = 'Y'
                     group by de.serial_no)),
                       MODIFY_TIME = #{modifyDate}
          where waybill_no=#{waybillNo}		 
	</update>
	
	<!-- 查询运单流水号个数 ,waybillNo 为运单号，Y表明是有效的-->
	<select id="selectSerialCount" resultType="int"
		parameterType="string">
  		  select /*模块：中转-已包装-单票流水号存在校验*/
  		  		 count(*)
  			from pkp.T_SRV_LABELED_GOOD lg
 		   where lg.waybill_no = #{waybillNo}
   			 and lg.active = 'Y'
	</select>
	
	<!-- 修改包装需求的开单件数 -->
	<update id="updateUnpackWaybillNum" parameterType="HashMap">
		update tfr.t_opt_package_require
		   set GOODS_QTY_TOTAL=#{num},
                       MODIFY_TIME = #{modifyDate}
		 where WAYBILL_NO=#{waybillNo}
	</update>
	
	<!-- 修改包装录入的开单件数 -->
	<!-- <update id="updatePackedWaybillNum" parameterType="HashMap">
		update tfr.t_opt_actual_package 
		   set WOODYTRAY_QTY=#{num}
		 where WAYBILL_NO=#{waybillNo}
	</update> -->
	
	<select id="querySerialNoStockByWaybill" resultMap="querySerialArea"
		parameterType="HashMap">
   select stock.serial_no serialNo,
          stock.org_code orgCode,
          stock.goods_area_code areaCode
     from tfr.t_opt_stock stock
    where stock.waybill_no = #{waybillNo}
	</select>
	
	<!-- 修改已包装-->
	<update id="updatePacakageRequirePackedStatus" parameterType="HashMap">
		UPDATE TFR.T_OPT_PACKAGE_REQUIRE RE
       SET RE.is_packed = (
           SELECT CASE WHEN COUNT(*) = 0 THEN 'Y'
                  ELSE 'N'
                  END FROM TFR.T_OPT_PACKAGE_REQUEST_DETAIL DE
           WHERE DE.WAYBILL_NO = #{waybillNo}
           AND DE.IS_PACKED = 'N'
           AND DE.active = 'Y'
       ),
           MODIFY_TIME = #{modifyDate}
    WHERE  re.waybill_no=#{waybillNo}
	</update>
	
	<!-- 删除新旧流水号关系-->
	<delete id="deleteActualPackageById" parameterType="String">
		delete from tfr.t_opt_actual_package
				where ID=#{item.id}
	</delete>
	<delete id="deleteActualPackageDetailByActualPackageId" parameterType="String">
		delete from tfr.t_opt_actual_package_detail
				where actual_package_id=#{item.id}
	</delete>
	<delete id="deletePackageRequestDetailByActualPackageId" parameterType="String">
		delete from tfr.t_opt_package_request_detail
				where actual_package_id=#{item.id}
	</delete>
</mapper>