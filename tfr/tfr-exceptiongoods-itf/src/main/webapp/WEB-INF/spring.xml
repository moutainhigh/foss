<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jaxws="http://cxf.apache.org/jaxws"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://cxf.apache.org/jaxws 
			http://cxf.apache.org/schemas/jaxws.xsd
			http://www.springframework.org/schema/jee 
			http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd" default-autowire="byName">

	<context:property-placeholder location="classpath*:foss.properties" />

	<!-- 数据源 jndi方式-->
	<bean id="dataSourceSpied" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>jdbc/fossds</value>
		</property>
		<property name="resourceRef" value="true" />
		<property name="proxyInterface" value="javax.sql.DataSource"></property>

	</bean>
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied" />
	</bean>
	<!--
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@192.168.10.11:1521:fossdb" />
		<property name="username" value="tfr" />
		<property name="password" value="fossdev" />
	</bean>
	-->
	
	<!-- 数据连接管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<property name="nestedTransactionAllowed" value="true"/>
	</bean>
	
	<!-- BAMP -->
 	<bean name="appProfile" class="com.deppon.ar.bamp.common.config.AppProfile" init-method="initAppProfile"> 
		<property name="appCode" value="FOSS"></property>
		<property name="actionExtension">
			<list>
		        <value>action</value>
		        <value>do</value>
    	    </list>
		</property>
	</bean>
	
	<!-- 系统http请求日志开关，默认开启 -->
	<bean name="logSwitch" class="com.deppon.ar.bamp.common.dispatch.switchs.LogSwitch"
		init-method="initLogSwitch">
		<property name="localReqLogSwitch" value="1"></property>
	</bean>

	<!-- MQ的ip信息 -->
	<!-- <bean name="activeMQUtil" class="com.deppon.ar.bamp.client.jms.ActiveMQUtil"
		init-method="startConnectionFactory">
		<property name="brokerUrl" value="${brokerUrl}"></property>
	</bean> -->

	<!-- 事务注解支持-->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- myBatis文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="/WEB-INF/ibatis.xml" />
		<property name="mapperLocations"
			value="classpath*:com/deppon/**/META-INF/ibatis/*.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="mongo" class="com.deppon.foss.framework.server.components.dataaccess.mongodb.MongoFactoryBean">
		<property name="host" value="${mongodb.host}" />
		<property name="port" value="${mongodb.port}" />
<!-- 		<property name="mongoOptions" ref="mongoOptions" /> -->
	</bean>
	
	<bean id="mongodbFactory" class="com.deppon.foss.framework.server.components.dataaccess.mongodb.MongoDbFactoryBean">
		<constructor-arg ref="mongo" />
		<constructor-arg value="${mongodb.database}" />
	</bean>
	<!-- 日志队列配置开始 -->
	<!-- 性能日志 -->
	<bean id="performanceLog"
		class="com.deppon.foss.framework.server.components.logger.LogBuffer">
		<property name="enable" value="${log.enable}" /><!-- 默认启用 -->
		<property name="queueSize" value="${log.queueSize}" />
		<property name="listSize" value="${log.listSize}" />
		<property name="interval" value="${log.interval}" />
		<property name="logSender" ref="mongoLogSender" />
	</bean>

	<bean id="mongoLogSender" class="com.deppon.foss.framework.server.components.logger.MongoLogSender">
	</bean>
	<!-- 日志队列配置结束 -->
	
	<!-- 日志队列配置结束-->	
	<context:annotation-config />
	<context:component-scan base-package="com.deppon" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxActive" value="${redis.pool.maxActive}"></property>
		<property name="maxIdle" value="${redis.pool.maxIdle}"></property>
		<property name="maxWait" value="${redis.pool.maxWait}"></property>
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}"></property>
		<property name="testOnReturn" value="${redis.pool.testOnReturn}"></property>
	</bean>
	<bean id="client" class="com.deppon.foss.framework.cache.redis.RedisClient">
		<property name="host1" value="${redis.host1}"></property>
		<property name="port1" value="${redis.port1}"></property>
		<property name="host2" value="${redis.host2}"></property>
		<property name="port2" value="${redis.port2}"></property>
		<property name="poolConfig" ref="poolConfig"></property>
	</bean>
	<bean id="storage"
		class="com.deppon.foss.framework.cache.storage.RedisCacheStorage">
		<property name="client" ref="client"></property>
	</bean> 
	<bean id="client1" class="com.deppon.foss.framework.cache.redis.RedisClient">
		<property name="host1" value="${redis.host3}"></property>
		<property name="port1" value="${redis.port3}"></property>
		<property name="host2" value="${redis.host4}"></property>
		<property name="port2" value="${redis.port4}"></property>
		<property name="poolConfig" ref="poolConfig"></property>
	</bean>
	<bean id="storage1"
		class="com.deppon.foss.framework.cache.storage.RedisCacheStorage">
		<property name="client" ref="client1"></property>
	</bean> 
	<bean id="client2" class="com.deppon.foss.framework.cache.redis.RedisClient">
		<property name="host1" value="${redis.host5}"></property>
		<property name="port1" value="${redis.port5}"></property>
		<property name="host2" value="${redis.host6}"></property>
		<property name="port2" value="${redis.port6}"></property>
		<property name="poolConfig" ref="poolConfig"></property>
	</bean>
	<bean id="storage2"
		class="com.deppon.foss.framework.cache.storage.RedisCacheStorage">
		<property name="client" ref="client2"></property>
	</bean> 
	<bean id="client3" class="com.deppon.foss.framework.cache.redis.RedisClient">
		<property name="host1" value="${redis.host7}"></property>
		<property name="port1" value="${redis.port7}"></property>
		<property name="host2" value="${redis.host8}"></property>
		<property name="port2" value="${redis.port8}"></property>
		<property name="poolConfig" ref="poolConfig"></property>
	</bean>
	<bean id="storage3"
		class="com.deppon.foss.framework.cache.storage.RedisCacheStorage">
		<property name="client" ref="client3"></property>
	</bean> 
	<!-- gps接口 -->
	<bean id="fossToGPSService" class="com.deppon.foss.module.transfer.common.server.service.impl.FOSSToGPSService">
		<property name="tfrDepponGpsService" ref="tfrDepponGpsService"></property>
		<property name="unifiedCodeConvertUtils" ref="unifiedCodeConvertUtils"></property>
	</bean>
	<!--==== gps客户端spring配置======== -->
	<jaxws:client id="tfrDepponGpsService" serviceClass="org.example.deppon_gps_service.DepponGpsService" 
				address="${esb.ws}/foss2gps/gpsService">
		<jaxws:features>
			<bean class="org.apache.cxf.feature.LoggingFeature"></bean>
		</jaxws:features>
		<jaxws:inInterceptors>
			<bean class="com.deppon.foss.module.base.common.server.interceptor.BusinessLoggingInInterceptor"/>
		</jaxws:inInterceptors>
		<jaxws:outInterceptors>
			<bean class="com.deppon.foss.module.base.common.server.interceptor.BusinessLoggingOutInterceptor"/>
		</jaxws:outInterceptors>
	</jaxws:client>
	<bean id="fileConfig" class="com.deppon.foss.framework.server.components.file.FileSystemConfig">
	   <property name="rootDir" value="${tfr.upload.dir}"></property>
	   <property name="archiveType" value="BY_DATE"></property>
	</bean>
	<bean id="fileManager" class="com.deppon.foss.framework.server.components.file.FileManager">
	    <property name="config" ref="fileConfig"></property>
	</bean>
	
	<bean id="appResponseProcess" class="com.deppon.foss.module.transfer.stock.server.impl.ExceptionGoodsService" />
	<bean id="esbInitUtil" class="com.deppon.esb.api.util.ESBInitUtil" init-method="process" lazy-init="false">
		<property name="processMap">
	         <map> 
	             <entry key="FOSS_ESB2FOSS_ADD_EXCEPTION_GOODS_FROM_QMS" value-ref="appResponseProcess" />
	         </map>
	     </property>
	</bean>
</beans>
