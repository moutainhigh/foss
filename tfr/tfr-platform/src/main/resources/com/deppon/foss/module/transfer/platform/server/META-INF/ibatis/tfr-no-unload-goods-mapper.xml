<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="foss.platform.noUnloadGoodsDetail" >
<!-- 未卸车明细==卸车进度里 -->
 <resultMap id="noUnloadGoodsDetailResultMap" type="com.deppon.foss.module.transfer.platform.api.shared.domain.NoUnloadGoodsDetail" >
    <!--
      WARNING - This element is automatically generated by Apache iBATIS ibator, do not modify.
      This element was generated on Wed Apr 16 14:27:54 CST 2014.
    -->
    <result column="ID" property="id" jdbcType="VARCHAR" />
    <result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
    <result column="GOODS_QTY_TOTAL" property="goodsQtyTotal" jdbcType="DECIMAL" />
    <result column="HANDOVER_GOODS_QTY" property="handoverGoodsQty" jdbcType="DECIMAL" />
    <result column="NOUNLOAD_GOODS_QTY" property="nounloadGoodsQty" jdbcType="DECIMAL" />
    <result column="GOODS_WEIGHT_TOTAL" property="goodsWeightTotal" jdbcType="DECIMAL" />
    <result column="GOODS_VOLUME_TOTAL" property="goodsVolumeTotal" jdbcType="DECIMAL" />
    <result column="NEXT_ORGNAME" property="nextOrgname" jdbcType="VARCHAR" />
    <result column="UNLOAD_ORG_CODE" property="unloadOrgCode" jdbcType="VARCHAR" />
    <result column="PRODUCT_CODE" property="productCode" jdbcType="VARCHAR" />
  </resultMap>
  <!-- 
   select ID, WAYBILL_NO, GOODS_QTY_TOTAL, HANDOVER_GOODS_QTY, NOUNLOAD_GOODS_QTY,
      GOODS_WEIGHT_TOTAL, GOODS_VOLUME_TOTAL, NEXT_ORGNAME, UNLOAD_ORG_CODE, PRODUCT_CODE
    from T_OPT_NOUNLOAD_GOODS_DETAIL
   -->
   
   <select id="queryNoUnloadGoodsDetailList" parameterType="map" resultMap="noUnloadGoodsDetailResultMap">
   	<!-- 卸车明细中未卸 -->
		select taskDetail.Unload_Task_Id,
		                       taskDetail.Waybill_No,
		                       p.goods_qty_total,
		                       taskDetail.Handover_Goods_Qty,
		                       (taskDetail.Handover_Goods_Qty -
		                       taskDetail.Operation_Goods_Qty) NOUNLOAD_GOODS_QTY,
		                       p.goods_weight_total,
		                       p.goods_volume_total,
		                       mainTask.Unload_Org_Code,
		                       mainTask.Unload_Org_Name,
		                       p.product_code
		                  from tfr.t_Opt_Unload_Waybill_Detail taskDetail
		                  left join pkp.t_srv_waybill p
		                    on taskDetail.Waybill_No = p.waybill_no
		                   and p.active = 'Y'
		                  left join tfr.t_opt_unload_task mainTask
		                    on mainTask.Id = taskDetail.Unload_Task_Id
		                 where taskDetail.Unload_Task_Id =#{taskId}
		                   and p.active = 'Y'
		                   and p.product_code = #{productCode}
		                   and (taskDetail.Handover_Goods_Qty -
		                       taskDetail.Operation_Goods_Qty) > 0
		union
		<!-- 交接单 -->
		select tt1.Unload_Task_Id,
		       d.waybill_no,
		       p.goods_qty_total,
		       d.handover_goods_qty,
		       d.handover_goods_qty NOUNLOAD_GOODS_QTY,
		       p.goods_weight_total,
		       p.goods_volume_total,
		       tt1.Orig_Org_Code,
		       tt1.Orig_Org_Name,
		       p.product_code
		 from tfr.t_opt_handoverbill_detail d inner join (
		     select de.*,de2.id Unload_Task_Id
		  from tfr.t_opt_handoverbill       de,
		       tfr.t_opt_unload_bill_detail de1,
		       tfr.t_opt_unload_task        de2
		 where de.handover_no = de1.bill_no(+)
		   and de1.unload_task_id = de2.id(+)
		   and de2.id = #{taskId}
		) tt1 on d.handover_no= tt1.handover_no
		left join pkp.t_srv_waybill p
		      on d.Waybill_No = p.waybill_no
		where not exists (
		     select * from tfr.t_Opt_Unload_Waybill_Detail dd1 
		     where d.handover_no=dd1.bill_no 
		     and d.waybill_no=dd1.waybill_no 
		     and dd1.unload_task_id= #{taskId}
		) and p.active = 'Y'
		and p.product_code = #{productCode}
		union
		<!-- 配载单 -->
		select tt1.Unload_Task_Id,
		       d.waybill_no,
		       p.goods_qty_total,
		       d.handover_goods_qty,
		       d.handover_goods_qty NOUNLOAD_GOODS_QTY,
		       p.goods_weight_total,
		       p.goods_volume_total,
		       tt1.Orig_Org_Code,
		       tt1.Orig_Org_Name,
		       p.product_code
		 from tfr.t_opt_handoverbill_detail d inner join (
		       select de1.orig_org_code,de1.orig_org_name,de.handover_no,de3.id as Unload_Task_Id 
		       from tfr.t_opt_vehicleassemble_detail de,
		        tfr.t_opt_vehicleassemblebill de1,tfr.t_opt_unload_bill_detail de2,tfr.t_opt_unload_task de3
		        where de.vehicleassemblebill_id= de1.id(+)
		        and de1.vehicleassemble_no= de2.bill_no(+)
		        and de2.unload_task_id= de3.id(+)
		        and de3.id= #{taskId}
		) tt1 on d.handover_no= tt1.handover_no
		left join pkp.t_srv_waybill p
		      on d.Waybill_No = p.waybill_no
		where not exists (
		       select * from tfr.t_Opt_Unload_Waybill_Detail dd1 
		     where  d.waybill_no=dd1.waybill_no 
		     and dd1.unload_task_id= #{taskId}
		) and p.active = 'Y'
		and p.product_code = #{productCode}
   </select>
   
     <select id="queryNoUnloadGoodsDetailListCount" parameterType="map" resultType="int" >
   	   select count(0)
   from (
   	<!-- 卸车明细中未卸 -->
		select taskDetail.Unload_Task_Id,
		                       taskDetail.Waybill_No,
		                       p.goods_qty_total,
		                       taskDetail.Handover_Goods_Qty,
		                       (taskDetail.Handover_Goods_Qty -
		                       taskDetail.Operation_Goods_Qty) NOUNLOAD_GOODS_QTY,
		                       p.goods_weight_total,
		                       p.goods_volume_total,
		                       mainTask.Unload_Org_Code,
		                       mainTask.Unload_Org_Name,
		                       p.product_code
		                  from tfr.t_Opt_Unload_Waybill_Detail taskDetail
		                  left join pkp.t_srv_waybill p
		                    on taskDetail.Waybill_No = p.waybill_no
		                   and p.active = 'Y'
		                  left join tfr.t_opt_unload_task mainTask
		                    on mainTask.Id = taskDetail.Unload_Task_Id
		                 where taskDetail.Unload_Task_Id =#{taskId}
		                   and p.active = 'Y'
		                   and p.product_code = #{productCode}
		                   and (taskDetail.Handover_Goods_Qty -
		                       taskDetail.Operation_Goods_Qty) > 0
		union
		<!-- 交接单 -->
		select tt1.Unload_Task_Id,
		       d.waybill_no,
		       p.goods_qty_total,
		       d.handover_goods_qty,
		       d.handover_goods_qty NOUNLOAD_GOODS_QTY,
		       p.goods_weight_total,
		       p.goods_volume_total,
		       tt1.Orig_Org_Code,
		       tt1.Orig_Org_Name,
		       p.product_code
		 from tfr.t_opt_handoverbill_detail d inner join (
		     select de.*,de2.id Unload_Task_Id
		  from tfr.t_opt_handoverbill       de,
		       tfr.t_opt_unload_bill_detail de1,
		       tfr.t_opt_unload_task        de2
		 where de.handover_no = de1.bill_no(+)
		   and de1.unload_task_id = de2.id(+)
		   and de2.id = #{taskId}
		) tt1 on d.handover_no= tt1.handover_no
		left join pkp.t_srv_waybill p
		      on d.Waybill_No = p.waybill_no
		where not exists (
		     select * from tfr.t_Opt_Unload_Waybill_Detail dd1 
		     where d.handover_no=dd1.bill_no 
		     and d.waybill_no=dd1.waybill_no 
		     and dd1.unload_task_id= #{taskId}
		) and p.active = 'Y'
		and p.product_code = #{productCode}
		union
		<!-- 配载单 -->
		select tt1.Unload_Task_Id,
		       d.waybill_no,
		       p.goods_qty_total,
		       d.handover_goods_qty,
		       d.handover_goods_qty NOUNLOAD_GOODS_QTY,
		       p.goods_weight_total,
		       p.goods_volume_total,
		       tt1.Orig_Org_Code,
		       tt1.Orig_Org_Name,
		       p.product_code
		 from tfr.t_opt_handoverbill_detail d inner join (
		       select de1.orig_org_code,de1.orig_org_name,de.handover_no,de3.id as Unload_Task_Id 
		       from tfr.t_opt_vehicleassemble_detail de,
		        tfr.t_opt_vehicleassemblebill de1,tfr.t_opt_unload_bill_detail de2,tfr.t_opt_unload_task de3
		        where de.vehicleassemblebill_id= de1.id(+)
		        and de1.vehicleassemble_no= de2.bill_no(+)
		        and de2.unload_task_id= de3.id(+)
		        and de3.id= #{taskId}
		) tt1 on d.handover_no= tt1.handover_no
		left join pkp.t_srv_waybill p
		      on d.Waybill_No = p.waybill_no
		where not exists (
		       select * from tfr.t_Opt_Unload_Waybill_Detail dd1 
		     where  d.waybill_no=dd1.waybill_no 
		     and dd1.unload_task_id= #{taskId}
		) and p.active = 'Y'
		and p.product_code = #{productCode}
		)
   </select>
   
   <select id="queryNoUnloadGoodsDetailListSum" parameterType="map" resultMap="noUnloadGoodsDetailResultMap" >
   	  select sum(pp.goods_weight_total) as goods_weight_total,sum(pp.goods_volume_total) as goods_volume_total
   from (
   		<!-- 卸车明细中未卸 -->
		select taskDetail.Unload_Task_Id,
		                       taskDetail.Waybill_No,
		                       p.goods_qty_total,
		                       taskDetail.Handover_Goods_Qty,
		                       (taskDetail.Handover_Goods_Qty -
		                       taskDetail.Operation_Goods_Qty) NOUNLOAD_GOODS_QTY,
		                       p.goods_weight_total,
		                       p.goods_volume_total,
		                       mainTask.Unload_Org_Code,
		                       mainTask.Unload_Org_Name,
		                       p.product_code
		                  from tfr.t_Opt_Unload_Waybill_Detail taskDetail
		                  left join pkp.t_srv_waybill p
		                    on taskDetail.Waybill_No = p.waybill_no
		                   and p.active = 'Y'
		                  left join tfr.t_opt_unload_task mainTask
		                    on mainTask.Id = taskDetail.Unload_Task_Id
		                 where taskDetail.Unload_Task_Id =#{taskId}
		                   and p.active = 'Y'
		                   and p.product_code = #{productCode}
		                   and (taskDetail.Handover_Goods_Qty -
		                       taskDetail.Operation_Goods_Qty) > 0
		union
		<!-- 交接单 -->
		select tt1.Unload_Task_Id,
		       d.waybill_no,
		       p.goods_qty_total,
		       d.handover_goods_qty,
		       d.handover_goods_qty NOUNLOAD_GOODS_QTY,
		       p.goods_weight_total,
		       p.goods_volume_total,
		       tt1.Orig_Org_Code,
		       tt1.Orig_Org_Name,
		       p.product_code
		 from tfr.t_opt_handoverbill_detail d inner join (
		     select de.*,de2.id Unload_Task_Id
		  from tfr.t_opt_handoverbill       de,
		       tfr.t_opt_unload_bill_detail de1,
		       tfr.t_opt_unload_task        de2
		 where de.handover_no = de1.bill_no(+)
		   and de1.unload_task_id = de2.id(+)
		   and de2.id = #{taskId}
		) tt1 on d.handover_no= tt1.handover_no
		left join pkp.t_srv_waybill p
		      on d.Waybill_No = p.waybill_no
		where not exists (
		     select * from tfr.t_Opt_Unload_Waybill_Detail dd1 
		     where d.handover_no=dd1.bill_no 
		     and d.waybill_no=dd1.waybill_no 
		     and dd1.unload_task_id= #{taskId}
		) and p.active = 'Y'
		and p.product_code = #{productCode}
		union
		<!-- 配载单 -->
		select tt1.Unload_Task_Id,
		       d.waybill_no,
		       p.goods_qty_total,
		       d.handover_goods_qty,
		       d.handover_goods_qty NOUNLOAD_GOODS_QTY,
		       p.goods_weight_total,
		       p.goods_volume_total,
		       tt1.Orig_Org_Code,
		       tt1.Orig_Org_Name,
		       p.product_code
		 from tfr.t_opt_handoverbill_detail d inner join (
		       select de1.orig_org_code,de1.orig_org_name,de.handover_no,de3.id as Unload_Task_Id 
		       from tfr.t_opt_vehicleassemble_detail de,
		        tfr.t_opt_vehicleassemblebill de1,tfr.t_opt_unload_bill_detail de2,tfr.t_opt_unload_task de3
		        where de.vehicleassemblebill_id= de1.id(+)
		        and de1.vehicleassemble_no= de2.bill_no(+)
		        and de2.unload_task_id= de3.id(+)
		        and de3.id= #{taskId}
		) tt1 on d.handover_no= tt1.handover_no
		left join pkp.t_srv_waybill p
		      on d.Waybill_No = p.waybill_no
		where not exists (
		       select * from tfr.t_Opt_Unload_Waybill_Detail dd1 
		     where  d.waybill_no=dd1.waybill_no 
		     and dd1.unload_task_id= #{taskId}
		) and p.active = 'Y'
		and p.product_code = #{productCode}
   ) pp
   </select>
	
	<select id="queryNextNameByOrgCode"  parameterType="map" resultMap="noUnloadGoodsDetailResultMap">
		select tt.waybill_no,tt.tt2.name as NEXT_ORGNAME from(
		select tg.waybill_no,
		tg.orig_org_code,
		tg.objective_org_code,
		tg.route_no from (
		      select pd.waybill_no,
		             pd.orig_org_code,
		             pd.objective_org_code,
		             pd.route_no
		        from tfr.t_opt_path_detail pd
		       order by to_number(nvl(pd.route_no,'0')) desc
		       ) tg
		       where tg.waybill_no in
				<foreach collection="list" open="(" close=")" separator="," index="index" item="item">
					#{item}
				</foreach>
		       and tg.orig_org_code=#{unloadOrgCode}
		       and rownum =1
		) tt left join (
		select code,name from bse.t_bas_org where active='Y'
		) tt2 on tt.objective_org_code=tt2.code
   </select>
	
</mapper>