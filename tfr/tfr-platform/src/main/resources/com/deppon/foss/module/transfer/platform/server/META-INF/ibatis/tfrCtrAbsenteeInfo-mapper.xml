<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.deppon.foss.module.transfer.platform.api.server.dao.ITfrCtrAbsenteeInfoDao">
	<!--外场异常人员信息实体resultMap -->
	<resultMap id="tfrCtrAbsenteeInfoEntity"
		type="com.deppon.foss.module.transfer.platform.api.shared.domain.TfrCtrAbsenteeInfoEntity">
		<result property="id" column="id" />
		<result property="absenteeCode" column="absenteeCode" />
		<result property="absenteeName" column="absenteeName" />
		<result property="absenteePostCode" column="absenteePostCode" />
		<result property="absenteePostName" column="absenteePostName" />
		<result property="absenteeStatus" column="absenteeStatus" />
		<result property="absenteeEntryDate" column="absenteeEntryDate" />
		<result property="absentBeginDate" column="absentBeginDate" />
		<result property="absentEndDate" column="absentEndDate" />
		<result property="absenteeOrgCode" column="absenteeOrgCode" />
		<result property="absenteeOrgName" column="absenteeOrgName" />
		<result property="transferCenterCode" column="transferCenterCode" />
		<result property="transferCenterName" column="transferCenterName" />
		<result property="createUserName" column="createUserName" />
		<result property="modifyUserName" column="modifyUserName" />
		<result property="createDate" column="createDate" />
		<result property="createUser" column="createUser" />
		<result property="modifyDate" column="modifyDate" />
		<result property="modifyUser" column="modifyUser" />
	</resultMap>

	<!-- 外场异常人员信息 新增 -->
	<insert id="insertTfrCtrAbsenteeInfo"
		parameterType="com.deppon.foss.module.transfer.platform.api.shared.domain.TfrCtrAbsenteeInfoEntity">
		INSERT INTO tfr.t_opt_tc_absentee_info
		(id,
		absentee_code,
		absentee_name,
		absentee_post_code,
		absentee_post_name,
		absentee_status,
		absentee_entry_date,
		absent_begin_date,
		absent_end_date,
		absentee_org_code,
		absentee_org_name,
		transfer_center_code,
		transfer_center_name,
		create_user_code,
		create_user_name,
		create_time,
		modify_user_code,
		modify_user_name,
		modify_time)
		VALUES
		(#{id,jdbcType=VARCHAR},
		#{absenteeCode,jdbcType=VARCHAR},
		#{absenteeName,jdbcType=VARCHAR},
		#{absenteePostCode,jdbcType=VARCHAR},
		#{absenteePostName,jdbcType=VARCHAR},
		#{absenteeStatus,jdbcType=VARCHAR},
		#{absenteeEntryDate,jdbcType=TIMESTAMP},
		#{absentBeginDate,jdbcType=TIMESTAMP},
		#{absentEndDate,jdbcType=VARCHAR},
		#{absenteeOrgCode,jdbcType=VARCHAR},
		#{absenteeOrgName,jdbcType=VARCHAR},
		#{transferCenterCode,jdbcType=VARCHAR},
		#{transferCenterName,jdbcType=VARCHAR},
		#{createUser,jdbcType=VARCHAR},
		#{createUserName,jdbcType=VARCHAR},
		#{createDate,jdbcType=TIMESTAMP},
		#{modifyUser,jdbcType=VARCHAR},
		#{modifyUserName,jdbcType=VARCHAR},
		#{modifyDate,jdbcType=TIMESTAMP})
	</insert>

	<!-- 根据id删除外场异常人员信息 -->
	<delete id="deleteTfrCtrAbsenteeInfo" parameterType="String">
		delete from
		tfr.t_opt_tc_absentee_info t where t.id = #{id,jdbcType=VARCHAR}
	</delete>

	<!-- 修改外场异常人员信息 -->
	<update id="updateTfrCtrAbsenteeInfo"
		parameterType="com.deppon.foss.module.transfer.platform.api.shared.domain.TfrCtrAbsenteeInfoEntity">
		UPDATE tfr.t_opt_tc_absentee_info t
		SET t.absentee_status
		= #{absenteeStatus,jdbcType=VARCHAR},
		t.absent_begin_date =
		#{absentBeginDate,jdbcType=TIMESTAMP},
		t.absent_end_date =
		#{absentEndDate,jdbcType=TIMESTAMP},
		t.modify_user_code =
		#{modifyUser,jdbcType=VARCHAR},
		t.modify_user_name =
		#{modifyUserName,jdbcType=VARCHAR},
		t.modify_time =
		#{modifyDate,jdbcType=TIMESTAMP}
		WHERE t.id = #{id, jdbcType=VARCHAR}
	</update>

	<!-- 外场异常人员信息查询select从句 -->
	<!-- 用于queryTfrCtrAbsenteeInfos、queryTfrCtrAbsenteeInfoById -->
	<sql id="sql_queryTfrCtrAbsenteeInfo_select_clause">
		SELECT t.id id,
		t.absentee_code absenteeCode,
		t.absentee_name absenteeName,
		t.absentee_post_code absenteePostCode,
		t.absentee_post_name absenteePostName,
		t.absentee_status
		absenteeStatus,
		t.absentee_entry_date
		absenteeEntryDate,
		t.absent_begin_date absentBeginDate,
		t.absent_end_date absentEndDate,
		t.absentee_org_code absenteeOrgCode,
		t.absentee_org_name
		absenteeOrgName,
		t.transfer_center_code
		transferCenterCode,
		t.transfer_center_name transferCenterName,
		t.create_user_code
		createUser,
		t.create_user_name createUserName,
		t.create_time createDate,
		t.modify_user_code modifyUser,
		t.modify_user_name modifyUserName,
		t.modify_time modifyDate
		FROM
		tfr.t_opt_tc_absentee_info t
	</sql>

	<!-- 外场异常人员信息查询where从句 -->
	<!-- 用于queryTfrCtrAbsenteeInfos、queryTfrCtrAbsenteeInfoCount -->
	<sql id="sql_queryTfrCtrAbsenteeInfo_where_clause">
		<where>
			<if test="transferCenterCode != null and transferCenterCode != ''">
				t.transfer_center_code = #{transferCenterCode,jdbcType=VARCHAR}
			</if>
			<if test="absenteeStatus != null and absenteeStatus != ''">
				AND t.absentee_status = #{absenteeStatus,jdbcType=VARCHAR}
			</if>
			<if test="absenteePostCode != null and absenteePostCode != ''">
				AND t.absentee_post_code = #{absenteePostCode,jdbcType=VARCHAR}
			</if>
			AND t.create_time BETWEEN #{createBeginDate,jdbcType=TIMESTAMP} AND
			#{createEndDate,jdbcType=TIMESTAMP}
		</where>
	</sql>

	<!-- 外场异常人员信息查询 -->
	<select id="queryTfrCtrAbsenteeInfos"
		parameterType="com.deppon.foss.module.transfer.platform.api.shared.dto.TfrCtrAbsenteeInfoQcDto"
		resultMap="tfrCtrAbsenteeInfoEntity">
		<include refid="sql_queryTfrCtrAbsenteeInfo_select_clause" />
		<include refid="sql_queryTfrCtrAbsenteeInfo_where_clause" />
	</select>

	<!-- 外场异常人员信息查询总数查询 -->
	<select id="queryTfrCtrAbsenteeInfoCount"
		parameterType="com.deppon.foss.module.transfer.platform.api.shared.dto.TfrCtrAbsenteeInfoQcDto"
		resultType="Long">
		SELECT COUNT(1)
		FROM tfr.t_opt_tc_absentee_info t
		<include refid="sql_queryTfrCtrAbsenteeInfo_where_clause" />
	</select>

	<!-- 根据id查询外场异常人员信息 -->
	<select id="queryTfrCtrAbsenteeInfoById" parameterType="String"
		resultMap="tfrCtrAbsenteeInfoEntity">
		<include refid="sql_queryTfrCtrAbsenteeInfo_select_clause" />
		<where>
			t.id = #{id,jdbcType=VARCHAR}
		</where>
	</select>

	<!--根据查询条件查询出一条外场异常人员信息 -->
	<select id="select1TfrCtrAbsenteeInfo"
		parameterType="com.deppon.foss.module.transfer.platform.api.shared.domain.TfrCtrAbsenteeInfoEntity"
		resultMap="tfrCtrAbsenteeInfoEntity">
		<include refid="sql_queryTfrCtrAbsenteeInfo_select_clause" />
		<where>
			t.absentee_code = #{absenteeCode,jdbcType=VARCHAR}
			and
			(t.absent_begin_date, t.absent_end_date)
			overlaps(#{absentBeginDate,jdbcType=TIMESTAMP},
			#{absentEndDate,jdbcType=TIMESTAMP})
			<if test="id != null and id != ''">
				and id != #{id,jdbcType=VARCHAR}
			</if>
			AND rownum = 1
		</where>
	</select>
   <!-- 根据员工code查询入职日期 -->
   <select id="queryEmployeeByEmpCode" parameterType="String" resultType="com.deppon.foss.module.base.baseinfo.api.shared.domain.EmployeeEntity">
	select E.EMP_CODE   empCode,
	       E.EMP_NAME   empName,
	       D.VALUE_CODE title,
	       D.VALUE_NAME titleName,
	       O.CODE       orgCode,
	       O.NAME       orgName,
	       E.ENTRY_DATE entryDate
	  from BSE.T_BAS_EMPLOYEE E
	  left join BSE.T_BAS_DATA_POSTION_DEGREE D
	    on D.VALUE_CODE = E.TITLE
	   and D.ACTIVE = 'Y'
	  left join BSE.T_BAS_ORG O
	    on O.CODE = E.ORG_CODE
	   and O.ACTIVE = 'Y'
	 where E.EMP_CODE = #{empCode}
	   and E.ACTIVE = 'Y'
   </select>

</mapper>