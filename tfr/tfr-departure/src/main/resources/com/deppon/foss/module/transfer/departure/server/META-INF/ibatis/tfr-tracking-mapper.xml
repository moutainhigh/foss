<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 定时任务 -->
<mapper namespace="tfr-tracking">
   <resultMap id="HandoverBillDTOResultMap"
		type="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
		<result column="handover_no" property="handoverNo" />
		<result column="HANDOVER_TYPE" property="handoverType" />
		<result column="waybill_no" property="waybillNo" />
		<result column="orig_org_code" property="origOrgCode" />
		<result column="orig_org_name" property="origOrgname" />
		<result column="dest_org_code" property="destOrgCode" />
		<result column="dest_org_name" property="destOrgName" />
		<result column="org_name" property="orgName" />
		<result column="org_code" property="orgCode" />
		<result column="packed_num" property="packedNum" />
		<result column="handoverbill_state" property="handoverbillStatus" />
		<result column="actual_depart_time" property="actualDepartTime" />
		<result column="actual_arrive_time" property="actualArriveTime" />
		<result column="vehicle_no" property="vehicleNo" />
		<result column="plan_arrive_time" property="planArriveTime" />
		<result column="driver_name" property="driverName" />
		<result column="GOODS_QTY" property="goodsQty" />
		<result column="scan_Goods_Qty" property="scanGoodsQty" />
		<result column="unload_org_code" property="unloadOrgCode" />
		<result column="loader_name" property="loaderName" />
		<result column="loader_code" property="loaderCode" />
		<result column="task_begin_time" property="taskBeginTime" />
		<result column="unload_org_name" property="unloadOrgName" />
		<result column="manual_depart_user_code" property="manualDepartUserCode" />
		<result column="pda_depart_user_code" property="pdaDepartUserCode" />
		<result column="gps_depart_time" property="gpsDepartTime" />
		<result column="manual_arrive_user_code" property="manualArriveUserCode" />
		<result column="pda_arrive_user_code" property="pdaArriveUserCode" />
		<result column="pda_arrive_org_code" property="pdaArriveOrgCode" />
		<result column="gps_arrive_time" property="gpsArriveTime" />
		<result column="create_time" property="createTime" />
		<result column="create_user_name" property="createUserName" />
		<result column="HANDOVER_GOODS_QTY" property="handoverGoodsQty" />
		<result column="UNLOAD_TYPE" property="unloadType" />
		<result column="bill_no" property="billNo" />
		<result column="manual_depart_user_name" property="manualDepartUserName" />
		<result column="forklift_driver_name" property="forkliftDriverName"/>
		<result column="forkliftOrgName" property="forkliftOrgName"/>
		<result column="task_no" property="taskNo"/>
		<result column="trayscan_time" property="trayScanaTime"/>
		<result column="SERIAL_NO" property="serialNo" />
		<result column="UNLOAD_TASK_NO" property="unloadTaskNo"/>
		<result column="OPERATION_ORG_NAME" property="operationOrgName" />
		<result column="OPERATION_ORG_CODE" property="operationOrgCode" />
		<result column="OPERATOR_NAME" property="operationName" />
		<result column="OPERATOR_CODE" property="operationCode" />
		<result column="PACKAGE_NO" property="packageNo" />
		<result column="Status" property="status" />
		<result column="Depart_Org_Name" property="departOrgName" />
		<result column="CREATE_USER_CODE" property="createUserCode" />
		<result column="stock_position_number" property="stockPositionNumber"/>
		<result column="end_time" property="endTime"/>
	</resultMap>
	
	<resultMap id="OnthewayDTOResultMap"
		type="com.deppon.foss.module.transfer.departure.api.shared.dto.OnthewayDTO">
		<result column="waybill_no" property="waybillNo" />
		<result column="line_name" property="lineName" />
		<result column="current_place" property="currentPlace" />
		<result column="driver_code" property="driverCode" />
		<result column="driver_name" property="driverName" />
		<result column="tracking_type" property="trackingType" />
		<result column="current_status" property="currentStatus" />
		<result column="tracking_time" property="trackingTime" />
		<result column="tracking_org_code" property="trackingOrgCode" />
		<result column="tracking_user_code" property="trackingUserCode" />
		<result column="orig_org_code" property="origOrgCode" />
		<result column="orig_org_name" property="origOrgName" />
		<result column="dest_org_code" property="destOrgCode" />
		<result column="dest_org_name" property="destOrgName" />
		<result column="current_status" property="currentStatus" />
	</resultMap>
	
	<!--查询库存轨迹-->
	<resultMap id="StockTrackingResultMap"
		type="com.deppon.foss.module.transfer.departure.api.shared.dto.StockTrackingDTO">
		<result column="waybill_no" property="waybillNo" />
		<result column="orig_org_code" property="orgCode" />
		<result column="orig_org_name" property="orgName" />
		<result column="GOODS_QTY_TOTAL" property="serialCount" />
		<result column="HANDOVERBILL_STATE" property="stockStatus" />
		<result column="create_time" property="operateTime" />
		<result column="handover_no" property="billNo" />
	</resultMap>
	
	<!--装车任务-->
	<resultMap id="LoadDetailResultMap"
		type="com.deppon.foss.module.transfer.departure.api.shared.domain.LoadDetailEntity">
		<result column="waybill_no" property="waybillNo" />
		<result column="vehicle_no" property="vehicleNo" />
		<result column="load_start_time" property="loadStartTime" jdbcType="TIMESTAMP"/>
		<result column="load_end_time" property="loadEndTime" jdbcType="TIMESTAMP"/>
		<result column="loader_name" property="loaderName" />
		<result column="loader_code" property="loaderCode" />
		<result column="orig_org_code" property="loadOrgCode" />
		<result column="orig_org_name" property="loadOrgName" />
		<result column="scan_qty" property="scanQty" />
		<result column="load_qty" property="loadQty" />
		<result column="task_state" property="taskState" />
		<result column="task_type" property="taskType" />
	</resultMap>
	
	<!--航空正单明细信息  -->
	<resultMap  id="airWayBillResultMap" type="com.deppon.foss.module.transfer.airfreight.api.shared.domain.AirWaybillEntity">
		<result property="id" column="ID"/>
		<result property="airLineTwoletter" column="AIR_LINE_TWOLETTER"/>
		<result property="airWaybillNo" column="AIR_WAYBILL_NO"/>
		<result property="deptRegionCode" column="DEPT_REGION_CODE"/>
		<result property="deptRegionName" column="DEPT_REGION_NAME"/>
		<result property="arrvRegionCode" column="ARRV_REGION_CODE"/>
		<result property="arrvRegionName" column="ARRV_REGION_NAME"/>
		<result property="airAssembleType" column="AIR_ASSEMBLE_TYPE"/>
		<result property="destOrgCode" column="DEST_ORG_CODE"/>
		<result property="dedtOrgName" column="DEDT_ORG_NAME"/>
		<result property="receiverCode" column="RECEIVER_CODE"/>
		<result property="receiverName" column="RECEIVER_NAME"/>
		<result property="receiverContactPhone" column="RECEIVER_CONTACT_PHONE"/>
		<result property="accountItem" column="ACCOUNT_ITEM"/>
		<result property="billingAgency" column="BILLING_AGENCY"/>
		<result property="receiverAddress" column="RECEIVER_ADDRESS"/>
		<result property="storageItem" column="STORAGE_ITEM"/>
		<result property="flightNo" column="FLIGHT_NO"/>
		<result property="flightDate" column="FLIGHT_DATE"/>
		<result property="takeOffTime" column="TAKE_OFF_TIME"/>
		<result property="arriveTime" column="ARRIVE_TIME"/>
		<result property="rateClass" column="RATE_CLASS"/>
		<result property="paymentType" column="PAYMENT_TYPE"/>
		<result property="grossWeight" column="GROSS_WEIGHT"/>
		<result property="billingWeight" column="BILLING_WEIGHT"/>
		<result property="fee" column="FEE"/>
		<result property="agenctCode" column="AGENCT_CODE"/>
		<result property="agencyName" column="AGENCY_NAME"/>
		<result property="declareValue" column="DECLARE_VALUE"/>
		<result property="itemCode" column="ITEM_CODE"/>
		<result property="goodsQty" column="GOODS_QTY"/>
		<result property="volume" column="VOLUME"/>
		<result property="airFee" column="AIR_FEE"/>
		<result property="extraFee" column="EXTRA_FEE"/>
		<result property="goodsName" column="GOODS_NAME"/>
		<result property="packageStruction" column="PACKAGE_STRUCTION"/>
		<result property="groundFee" column="GROUND_FEE"/>
		<result property="fuelSurcharge" column="FUEL_SURCHARGE"/>
		<result property="transportInsurance" column="TRANSPORT_INSURANCE"/>
		<result property="inseranceFee" column="INSERANCE_FEE"/>
		<result property="feeTotal" column="FEE_TOTAL"/>
		<result property="feePlain" column="FEE_PLAIN"/>
		<result property="billingFee" column="BILLING_FEE"/>
		<result property="shipperCode" column="SHIPPER_CODE"/>
		<result property="shipperName" column="SHIPPER_NAME"/>
		<result property="shipperAddress" column="SHIPPER_ADDRESS"/>
		<result property="shipperContactPhone" column="SHIPPER_CONTACT_PHONE"/>
		<result property="pickupType" column="PICKUP_TYPE"/>
		<result property="createOrgCode" column="CREATE_ORG_CODE"/>
		<result property="createOrgName" column="CREATE_ORG_NAME"/>
		<result property="createUserCode" column="CREATE_USER_CODE"/>
		<result property="createUserName" column="CREATE_USER_NAME"/>
		<result property="createTime" column="CREATE_TIME"/>
		<result property="modifyUserCode" column="MODIFY_USER_CODE"/>
		<result property="modifyUserName" column="MODIFY_USER_NAME"/>
		<result property="modifyTime" column="MODIFY_TIME"/>
		<result property="handoverState" column="HANDOVER_STATE"/>
		<result property="currencyCode" column="CURRENCY_CODE"/>
		<result property="isNotPayment" column="IS_NOT_PAYMENT"/>
		<result property="jointTicketNo" column="JOINT_TICKET_NO"/>
		<result property="actualTakeOffTime" column="ACTUAL_TAKE_OFF_TIME"/>
		<result property="actualArriveTime" column="ACTUAL_ARRIVE_TIME"/>
		<result property="trackState" column="TRACK_STATE"/>
		<result property="airportCode" column="AIR_PORT_CODE"/>
	</resultMap>
	
	<!-- 货件库存 -->
	<resultMap id="stockResultMap" type="com.deppon.foss.module.transfer.departure.api.shared.domain.StockTrackingEntity" >
		<id property="id" column="id"/>
		<result property="waybillNO" column="WAYBILL_NO"/>
		<result property="serialNO" column="SERIAL_NO"/>
		<result property="serialNoss" column="serialNos"/>
		<result property="operatorCode" column="OPERATOR_CODE"/>
		<result property="operatorName" column="OPERATOR_NAME"/>
		<result property="orgCode" column="ORG_CODE"/>
		<result property="goodsAreaCode" column="GOODS_AREA_CODE"/>
		<result property="deviceType" column="DEVICE_TYPE"/>
		<result property="inStockTime" column="IN_STOCK_TIME"/>
		<result property="scanTime" column="SCAN_TIME"/>
		<result property="preHandOverState" column="PRE_HANDOVER_STATUS"/>
		<result property="nextOrgCode" column="NEXT_ORG_CODE"/>
		<result property="goodsCount" column="goodsCount"/>
		<result property="handoverNo" column="handoverbill_no"/>
	</resultMap>
	
	
	<!-- 到达详情 -->
	<resultMap id="actualArriveTimeResultMap" type="com.deppon.foss.module.transfer.departure.api.shared.dto.ActualArriveTimeDTO">
		<result property="arriveTime" column="Arrivetime"/>
		<result property="qytNumber" column="Qytnumber"/>
	</resultMap>
	
	<!--查询未完成状态绑定的，用于传到后台，更新运单的数据-->
	<select id="getTaskTrackingByWayBillNo" resultMap="OnthewayDTOResultMap"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
			select h.waybill_no,
		       d.line_name,
		       t.current_place,
		       ta.driver_code1      as driver_code,
		       ta.driver_name1      as driver_name,
		       t.tracking_type,
		       t.current_status,
		       t.tracking_time,
		       t.tracking_org_code,
		       t.tracking_user_code,
		       d.orig_org_code,
		       d.orig_org_name,
		       d.dest_org_code,
		       d.dest_org_name,
		       t.current_status
		  from tfr.t_opt_truck_task_tracking   t,
		       tfr.t_opt_truck_task_detail     d,
		       tfr.t_opt_truck_task_bill       b,
		       tfr.t_opt_handoverbill_detail   h,
		       tfr.t_opt_truck_task            ta,
		       tfr.t_opt_handoverbill_serialno s
		 where t.truck_task_detail_id = d.id
		   and d.id = b.truck_task_detail_id
		   and d.truck_task_id = ta.id
		   and b.bill_type = 'HANDOVER'
		   and b.bill_no = h.handover_no
		   and h.handover_no = s.handoverbill_no
		   and h.waybill_no = s.waybill_no
		     and s.serial_no = #{serialNo} and h.waybill_no=#{waybillNo}
		     order by t.tracking_time
	</select>
	
	<!--查询未完成状态绑定的，用于传到后台，更新运单的数据-->
	<select id="getHandoverBillByWayBillNo" resultMap="HandoverBillDTOResultMap"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
	select 
        s.serial_no,
        h.handover_no,
       d.waybill_no,
       td.orig_org_code,
       td.orig_org_name,
       td.manual_depart_user_code,
        depart.pda_depart_user_code,
        depart.gps_depart_time,
        arr.manual_arrive_user_code,
        arr.pda_arrive_user_code,
        arr.pda_arrive_org_code,
        arr.gps_arrive_time,
       td.dest_org_code,
       td.dest_org_name,
       h.handoverbill_state,
       td.actual_depart_time,
       td.actual_arrive_time,
       td.vehicle_no,
       td.plan_arrive_time,
       h.CREATE_USER_NAME as driver_name,
       d.HANDOVER_GOODS_QTY  as GOODS_QTY
      from tfr.t_opt_handoverbill h
           left join tfr.t_opt_handoverbill_detail d on h.handover_no = d.handover_no
           left join tfr.t_opt_truck_task_bill     b on h.handover_no = b.bill_no and b.bill_type = 'HANDOVER'
           left join tfr.t_opt_truck_task_detail   td  on b.truck_task_detail_id = td.id
           left join tfr.t_opt_truck_depart depart on td.truck_depart_id = depart.id
           left join tfr.t_opt_truck_arrive arr on td.truck_arrive_id = arr.id
           left join tfr.t_opt_handoverbill_serialno s on  d.handover_no = s.handoverbill_no and d.waybill_no=s.waybill_no
     where d.waybill_no=#{waybillNo} 
      <![CDATA[ and h.handoverbill_state<>90 ]]>
      <if test="serialNo!=null">
		     and s.serial_no = #{serialNo}
		</if>
     order by td.create_time
	</select>
	
	<!--查询卸车任务轨迹 200968 zwd 20150105 -->
	<select id="queryUnloadTaskByWayBillNo" resultMap="HandoverBillDTOResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
		SELECT
		S.SERIAL_NO,
		W.WAYBILL_NO,
		T.UNLOAD_ORG_CODE,
		T.UNLOAD_ORG_NAME,
		P.Loader_Code,
		P.LOADER_NAME,
		nvl(t.unload_start_time,S.Unload_Time) as task_begin_time,
		W.Operation_Goods_Qty as GOODS_QTY,
		T.UNLOAD_TASK_NO,
		t.vehicle_no,
    	t.unload_type  
		FROM TFR.T_OPT_UNLOAD_TASK T
		INNER JOIN TFR.T_OPT_UNLOAD_WAYBILL_DETAIL W
		ON W.UNLOAD_TASK_ID = T.ID
		INNER JOIN TFR.T_OPT_UNLOAD_SERIALNO S
		ON S.UNLOAD_WAYBILL_DETAIL_ID = W.ID
		AND S.GOODS_STATE != 'CANCELED'
		LEFT JOIN TFR.T_OPT_LOADER_PARTICIPATION P
		ON P.TASK_ID = T.ID
   <![CDATA[
  where t.task_state <> 'CANCELED'
      and w.operation_goods_qty<>0 
     ]]>
		and w.waybill_no = #{waybillNo}
		<if test="serialNo!=null">
			and s.serial_no = #{serialNo}
		</if>
		<if test="serialNo==null">
			AND s.serial_no= (SELECT MAX(ss.serial_no) FROM
			tfr.t_opt_unload_serialno
			ss WHERE ss.unload_waybill_detail_id = w.id)
		</if>
		and p.be_creator='Y'
		order by w.task_begin_time
	</select>
	
<!-- 	// ***********************************-->	
<!-- 空运通知客户信息 zwd 200968 2015-09-15 --> 
<select id="queryAirNotifyCustomersSmsInfoByWayBillNo" resultMap="HandoverBillDTOResultMap"
	      parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
	  SELECT tnc.waybill_no waybill_no,
        tnc.org_code org_code,
        tnc.org_name org_name,
        tnc.operator_name OPERATOR_NAME,
        tnc.operate_time create_time,
        tnc.modify_time end_time,
        tnc.goods_qty_total GOODS_QTY,
        tnc.receive_customer_name loader_name,
        taw.flight_no PACKAGE_NO
 FROM tfr.t_opt_air_notify_customers tnc 
  left join tfr.t_opt_air_flight_arrive_detail tad on tnc.waybill_no = tad.waybill_no
  left join tfr.t_opt_air_flight_arrive taw on taw.id = tad.air_flight_arrive_id
  left join pkp.t_srv_waybill psw on tad.waybill_no = psw.waybill_no and psw.active = 'Y'
  <where>
        tnc.waybill_no =#{waybillNo}
  </where>
  order by taw.create_time desc
</select>

<!--查询空运到达 200968 空运到达类型:代理到机场提货zwd 20150808 -->
	<select id="queryFlightArriveFromAirWaybillNoPickUp" resultMap="HandoverBillDTOResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
 select
  tfa.AIR_WAYBILL_NO  handover_no,
  tad.waybill_no  waybill_no,
  tfa.flight_arrive_type HANDOVER_TYPE,
  tfa.org_name unload_org_name ,
  tfa.flight_no vehicle_no,
  tad.waybill_goods_qty  goodsQty,
  tfa.agent_company_name,
  tfa.create_time  create_time,
  tfa.operate_user_name loader_name

  from tfr.t_opt_air_flight_arrive tfa
    inner join tfr.t_opt_air_flight_arrive_detail tad on tfa.id = tad.air_flight_arrive_id
    inner join tfr.t_opt_air_flight_arrive_serial tas on tad.id = tas.air_flight_arrive_detail_id
    inner join  pkp.t_srv_waybill psw on tad.waybill_no = psw.waybill_no and psw.active='Y'
    where 
		 tad.waybill_no = #{waybillNo}
		<if test="serialNo!=null">
			and tas.serial_no = #{serialNo}
		</if>
		<if test="serialNo==null">
			AND tas.serial_no= (SELECT MAX(tass.serial_no) FROM
			tfr.t_opt_air_flight_arrive_serial
			tass WHERE tass.air_flight_arrive_detail_id = tad.id
			AND tfa.flight_arrive_type = 'AGENT_TO_AIRPORT_PICK_UP')
		</if>
		AND tfa.flight_arrive_type = 'AGENT_TO_AIRPORT_PICK_UP'
		order by tfa.create_time DESC
	</select>

<!--查询空运到达 200968 空运到达类型:货物到达代理处 zwd 20150814 -->
	<select id="queryFlightArriveFromAirWaybillNoGoods" resultMap="HandoverBillDTOResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
 select
  tfa.AIR_WAYBILL_NO  handover_no,
  tad.waybill_no  waybill_no,
  tfa.flight_arrive_type HANDOVER_TYPE,
  tfa.org_name unload_org_name ,
  tfa.flight_no vehicle_no,
  tad.waybill_goods_qty  goodsQty,
  tfa.agent_company_name,
  tfa.create_time  create_time,
  tfa.operate_user_name loader_name

  from tfr.t_opt_air_flight_arrive tfa
    inner join tfr.t_opt_air_flight_arrive_detail tad on tfa.id = tad.air_flight_arrive_id
    inner join tfr.t_opt_air_flight_arrive_serial tas on tad.id = tas.air_flight_arrive_detail_id
    inner join  pkp.t_srv_waybill psw on tad.waybill_no = psw.waybill_no and psw.active='Y'
    where 
		 tad.waybill_no = #{waybillNo}
		<if test="serialNo!=null">
			and tas.serial_no = #{serialNo}
		</if>
		<if test="serialNo==null">
			AND tas.serial_no= (SELECT MAX(tass.serial_no) FROM
			tfr.t_opt_air_flight_arrive_serial
			tass WHERE tass.air_flight_arrive_detail_id = tad.id
			and tfa.flight_arrive_type = 'GOODS_ARRIVE_AGENCY')
		</if>
		    and tfa.flight_arrive_type = 'GOODS_ARRIVE_AGENCY'
		order by tfa.create_time DESC
	</select>
<!-- ************************* -->
 <!--查询未完成状态绑定的，用于传到后台，更新运单的数据-->
	<select id="getAllHandoverBillByWayBillNo" resultMap="HandoverBillDTOResultMap"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
	select 
        h.handover_no,
       d.waybill_no,
       td.orig_org_code,
       td.orig_org_name,
       depart.manual_depart_user_code,
        depart.pda_depart_user_code,
        depart.gps_depart_time,
        arr.manual_arrive_user_code,
        arr.pda_arrive_user_code,
        arr.pda_arrive_org_code,
        arr.gps_arrive_time,
       td.dest_org_code,
       td.dest_org_name,
       h.handoverbill_state,
       td.actual_depart_time,
       td.actual_arrive_time,
       td.vehicle_no,
       td.plan_arrive_time,
       h.CREATE_USER_NAME as driver_name,
       d.HANDOVER_GOODS_QTY  as GOODS_QTY,
       td.manual_depart_user_name
      from tfr.t_opt_handoverbill h
           left join tfr.t_opt_handoverbill_detail d on h.handover_no = d.handover_no
           left join tfr.t_opt_truck_task_bill     b on h.handover_no = b.bill_no and b.bill_type = 'HANDOVER'
           left join tfr.t_opt_truck_task_detail   td  on b.truck_task_detail_id = td.id
           left join tfr.t_opt_truck_depart depart on td.truck_depart_id = depart.id
           left join tfr.t_opt_truck_arrive arr on td.truck_arrive_id = arr.id
     where d.waybill_no=#{waybillNo}
     <![CDATA[ and h.handoverbill_state<>90 ]]>
     order by td.create_time
	</select>
	
	<!--查询未完成状态绑定的，用于传到后台，更新运单的数据-->
	<select id="getUnloadBillByWayBillNo" resultMap="HandoverBillDTOResultMap"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
	 select s.serial_no,
        w.waybill_no,
        t.unload_org_name,
        t.unload_org_code,
        w.operation_goods_qty as GOODS_QTY,
        w.bill_no as handover_no,
        t.vehicle_no,
        p.loader_name,
        p.loader_code,
        nvl(s.unload_time,s.task_begin_time) as task_begin_time,
        t.UNLOAD_TYPE,
        sk.stock_position_number
   from tfr.t_opt_unload_task t
   inner join tfr.t_opt_unload_waybill_detail w
     on w.unload_task_id = t.id
   inner join tfr.t_opt_unload_serialno s
     on s.unload_waybill_detail_id = w.id and s.goods_state != 'CANCELED'
   left join tfr.t_opt_loader_participation p
     on p.task_id=t.id
   left join tfr.t_opt_stock sk on sk.waybill_no = w.waybill_no and s.serial_no = sk.serial_no
   AND sk.org_code = t.unload_org_code
	 <![CDATA[
  where t.task_state <> 'CANCELED'
      and w.operation_goods_qty<>0 
     ]]>
    and w.waybill_no = #{waybillNo} 
    <if test="serialNo!=null">
		     and s.serial_no = #{serialNo}
	</if>
	<if test="serialNo==null">
		     AND s.serial_no=  (SELECT MAX(ss.serial_no) FROM tfr.t_opt_unload_serialno ss WHERE ss.unload_waybill_detail_id = w.id)
	</if>
    and p.be_creator='Y'
    order by w.task_begin_time
	</select>
	<select id="getTrayScanByWayBillNo" resultMap="HandoverBillDTOResultMap" parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
		SELECT  
		 a.waybill_no,
		 a.task_no ,
		 a.trayscan_time ,
		 a.name as forkliftOrgName,
		 a.forklift_driver_name,
		 b.qty as scan_Goods_Qty
		 FROM (
		    select 
		    td.waybill_no,
		    td.seria_no,
		    tt.task_no,
		    tt.trayscan_time,
		    og.name,
		    tt.outfield_org_code,
		    tt.forklift_driver_code,
		    tt.forklift_driver_name
		     from tfr.t_opt_trayscan_task tt  
		    inner join tfr.t_opt_trayscan_task_detail td on td.trayscan_task_no=tt.task_no
		    INNER JOIN bse.t_bas_org og ON og.code=tt.outfield_org_code AND og.active='Y'
		    <where> 
			    tt.statu='SCANNED' 
			    and tt.trayscan_time IS NOT  null
			    and tt.unload_task_no IS NOT NULL
			    AND td.waybill_no =#{waybillNo} 
			    <if test="serialNo != null and serialNo != '' ">
			     	AND td.seria_no=#{serialNo}
			    </if>
			    <if test="serialNo==null">
				  AND td.seria_no= (SELECT MAX(ss.serial_no) FROM tfr.t_opt_unload_serialno SS
				     INNER JOIN tfr.t_opt_unload_waybill_detail w ON w.id=SS.UNLOAD_WAYBILL_DETAIL_ID
				     INNER JOIN tfr.t_opt_unload_task ut ON w.unload_task_id=ut.id
				     WHERE  ss.goods_state != 'CANCELED' AND w.waybill_no =td.waybill_no 
				     AND ut.unload_task_no=tt.unload_task_no
			    	)
			    </if>
		    </where>
		    order by tt.trayscan_time ) a INNER JOIN (
		      select tt.unload_task_no,tt.outfield_org_code,tt.task_no ,COUNT(td.seria_no) AS qty from tfr.t_opt_trayscan_task tt  
		      inner join tfr.t_opt_trayscan_task_detail td on td.trayscan_task_no=tt.task_no
		      where tt.statu='SCANNED' 
		      and tt.trayscan_time IS NOT  null
		      and tt.unload_task_no IS NOT NULL
		      AND td.waybill_no =#{waybillNo}
		      GROUP BY tt.unload_task_no,tt.outfield_org_code,tt.task_no ) b on a.outfield_org_code=b.outfield_org_code 
		      and a.task_no=b.task_no ORDER BY a.trayscan_time
	</select>
	
	<!-- 上分拣 zwd 200968 -->
	<select id="querySortingScanByWayBillNo" resultMap="HandoverBillDTOResultMap"
	      parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
	SELECT
	SG.SERIAL_NO,
	SG.WAYBILL_NO,
	SG.OPERATION_ORG_NAME,
	SG.OPERATION_ORG_CODE,
	SG.OPERATOR_NAME,
	SG.OPERATOR_CODE,
	SG.CREATE_TIME,
	(SELECT COUNT(distinct SA.SERIAL_NO)
	FROM
	TFR.T_OPT_SORTING_SCANNING SA
	WHERE SA.WAYBILL_NO = #{waybillNo}
	AND
	SA.OPERATION_ORG_CODE = SG.OPERATION_ORG_CODE
	GROUP BY
	SA.OPERATION_ORG_CODE) as GOODS_QTY
	FROM TFR.T_OPT_SORTING_SCANNING SG
	<where>
		SG.waybill_no =#{waybillNo}
		<if test="serialNo != null and serialNo != '' ">
			AND sg.serial_no=#{serialNo}
		</if>
		<if test="serialNo==null">
			AND sg.serial_no= (SELECT MAX(SS.serial_no) FROM
			TFR.T_OPT_SORTING_SCANNING SS
			WHERE SS.waybill_no =SG.waybill_no
			)
		</if>
	</where>
	ORDER BY SG.CREATE_TIME
</select>
	

	
	<!-- 包信息管理 zwd 200968 -->
	<select id="queryExpressPackageDetailByWayBillNo" resultMap="HandoverBillDTOResultMap"
	      parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
	  SELECT PD.WAYBILL_NO,
       PD.PACKAGE_NO,
       P.Status,
       P.Depart_Org_Name,
       P.CREATE_USER_NAME,
       P.CREATE_USER_CODE,
       pd.scan_time  as CREATE_TIME,
       p.end_time,
       (SELECT COUNT(distinct TPD.SERIAL_NO)
          FROM TFR.T_OPT_PACKAGE_DETAIL TPD
         WHERE TPD.WAYBILL_NO = #{waybillNo}
           AND TPD.PACKAGE_NO = P.PACKAGE_NO
         GROUP BY TPD.RECEIVE_ORG_NAME) AS GOODS_QTY
  FROM TFR.T_OPT_PACKAGE P
  JOIN TFR.T_OPT_PACKAGE_DETAIL PD
    ON PD.PACKAGE_NO = P.PACKAGE_NO
 <where>
    pd.waybill_no =#{waybillNo}
    AND p.status NOT IN ('ALREADY_CANCELED', 'CANCELED')
    <![CDATA[and pd.goods_state <>'CANCELED']]>
    <if test="serialNo != null and serialNo != '' ">
      AND pd.serial_no=#{serialNo}
    </if>
    <if test="serialNo==null">
      AND pd.serial_no= (SELECT MAX(topd.serial_no) FROM
      tfr.t_opt_package_detail topd
      WHERE topd.waybill_no =pd.waybill_no
      )
    </if>
  </where>
  ORDER BY p.CREATE_TIME
</select>

	<!--查询未完成状态绑定的，用于传到后台，更新运单的数据-->
	<select id="getFirstSerialNoByWayBillNo" resultType="java.lang.String"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
	select 
       s.serial_no
      from tfr.t_opt_handoverbill        h,
           tfr.t_opt_handoverbill_detail d,
           tfr.t_opt_handoverbill_serialno s
     where h.handover_no = d.handover_no
       and d.handover_no=s.handoverbill_no
		   and d.waybill_no = #{waybillNo}
		   <if test="billtime!=null">
		     and d.create_time>= #{billtime}
			</if>
		   order  by s.create_time
	</select>
	
	<!--查询库存的轨迹（已出库）-->
	<select id="getOutStockTrackingByWayBillNo" resultMap="StockTrackingResultMap"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.StockTrackingDTO">
		select d.waybill_no,
	       h.orig_org_code,
	       h.orig_org_name,
	       d.handover_goods_qty as GOODS_QTY_TOTAL,
	       h.HANDOVERBILL_STATE,
	       d.create_time,
	       d.handover_no
			  from tfr.T_OPT_HANDOVERBILL_DETAIL d, tfr.T_OPT_HANDOVERBILL h
			 where d.handover_no = h.handover_no
			   and waybill_no = #{waybillNo} 
			   <if test="operateTime!=null">
			     and h.create_time>= #{operateTime}
				</if>
			   order  by h.create_time
	</select>
	
	<!--查询装车任务轨迹-->
	<select id="getLoadDetailTrackingByWayBillNo" resultMap="LoadDetailResultMap"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
		select d.waybill_no,
            t.vehicle_no,
            s.load_time as load_start_time,
            t.load_end_time,
            l.loader_name,
            l.loader_code,
            t.orig_org_code,
            t.orig_org_name,
            d.scan_qty,
            d.load_qty,
            t.task_state,
            t.task_type
       from tfr.T_OPT_LOAD_TASK            t,
            tfr.T_OPT_LOAD_WAYBILL_DETAIL  d,
            tfr.T_OPT_LOADER_PARTICIPATION l,
            tfr.T_OPT_LOAD_SERIALNO s
      where t.id = d.load_task_id
        and t.id = l.task_id
        and l.be_creator = 'Y'
         AND d.id = s.load_waybill_detail_id
         and s.goods_state != 'CANCELED'
        and d.waybill_no = #{waybillNo} 
         <if test="serialNo!=null">
                and s.serial_no = #{serialNo} 
         </if>
         <if test="serialNo==null">
                and s.serial_no = (select max(ss.serial_no) from tfr.T_OPT_LOAD_SERIALNO ss where ss.load_waybill_detail_id = d.id and s.goods_state != 'CANCELED')
         </if>
         <![CDATA[and d.load_qty <> 0 ]]>
	</select>
	
	<!--查询装车任务轨迹-->
	<select id="getPackageAreaInByWayBillNo" resultMap="HandoverBillDTOResultMap"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
		 select s.org_code,
            s.operator_name as createUserName,
            s.in_stock_time as createTime,
             sk.stock_position_number, <!--   * 定位编号 zwd 200968-->
            s.in_stock_bill_no as bill_no,
            (select count(1)
               from tfr.T_OPT_IN_STOCK
              where waybill_no = s.waybill_no
                and org_code = s.org_code
                <if test="inStockType!=null">
                  and in_stock_type =  #{inStockType}
                </if>
                <if test="inStockTypes!=null">
					AND in_stock_type IN
					<foreach collection="inStockTypes" open="(" close=")"
						separator="," index="index" item="item">
						#{item}
				</foreach>
			</if>
                and is_valid = 'Y'
                and nvl(in_stock_bill_no,'null') = nvl(s.in_stock_bill_no,'null')) as packedNum
       from tfr.T_OPT_IN_STOCK s
	  <!--   * 定位编号 zwd 200968-->
       left join tfr.t_opt_stock sk on sk.waybill_no = s.waybill_no and s.serial_no = sk.serial_no
       AND sk.org_code = s.org_code
   
      where s.is_valid = 'Y'
        and s.waybill_no = #{waybillNo}
        		<if test="inStockType!=null">
                  and s.in_stock_type =  #{inStockType}
                </if>
                <if test="inStockTypes!=null">
					AND s.in_stock_type IN
					<foreach collection="inStockTypes" open="(" close=")"
						separator="," index="index" item="item">
						#{item}
				</foreach>
			</if>
			<if test="serialNo==null">
			    and s.serial_no = (select max(serial_no) from tfr.T_OPT_IN_STOCK 
		  		 where is_valid = 'Y' and waybill_no = #{waybillNo}  
		  		       <if test="inStockType!=null">
		                  and in_stock_type =  #{inStockType}
		                </if>
		                <if test="inStockTypes!=null">
							AND in_stock_type IN
							<foreach collection="inStockTypes" open="(" close=")"
								separator="," index="index" item="item">
								#{item}
							</foreach>
						</if>
		                )
             </if>
             <if test="serialNo!=null">
                and s.serial_no=#{serialNo}
             </if>
	</select>
	
	
	<!--根据运单号查询入库类型-->
	<select id="getInStockTypesWayBillNo" resultType="java.lang.String"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
	select distinct s.in_stock_type
       from tfr.T_OPT_IN_STOCK s
       where s.is_valid = 'Y'
        and s.waybill_no = #{waybillNo}
        <if test="inStockTypes!=null">
			AND s.in_stock_type IN
			<foreach collection="inStockTypes" open="(" close=")"
				separator="," index="index" item="item">
				#{item}
		</foreach>
	</if>
	</select>
	
	<!--根据运单号查询出库类型-->
	<select id="getOutStockTypesWayBillNo" resultType="java.lang.String"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
	select distinct s.out_stock_type
       from tfr.T_OPT_OUT_STOCK s
       where s.is_valid = 'Y'
        and s.waybill_no = #{waybillNo}
        <if test="outStockTypes!=null">
			AND s.out_stock_type IN
			<foreach collection="outStockTypes" open="(" close=")"
				separator="," index="index" item="item">
				#{item}
		</foreach>
	</if>
	</select>
	
	<!--查询库存的轨迹（库存中）-->
	<select id="getPackageAreaOutByWayBillNo" resultMap="HandoverBillDTOResultMap"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
		select s.org_code,
            s.operator_name as createUserName,
            s.out_stock_time as createTime,
            (select count(1)
               from tfr.T_OPT_OUT_STOCK
              where waybill_no = s.waybill_no
                and org_code = s.org_code
                and out_stock_type = #{outStockType}
                and is_valid = 'Y' and nvl(out_stock_bill_no,'null') = nvl(s.out_stock_bill_no,'null')) as packedNum
       from tfr.T_OPT_OUT_STOCK s
      where s.out_stock_type = #{outStockType}
        and s.is_valid = 'Y'
        and s.waybill_no = #{waybillNo}
        <if test="serialNo==null">
	        and s.serial_no= (select max(serial_no) from tfr.T_OPT_OUT_STOCK 
	  		 where is_valid = 'Y' and waybill_no = #{waybillNo}  
	  		       <if test="outStockType!=null">
	                  and out_stock_type =  #{outStockType}
	                </if>
	                )
        </if>
        <if test="serialNo!=null">
                and s.serial_no=#{serialNo}
        </if>
	</select>
	
	<!--查询库存的轨迹（库存中）-->
	<select id="getInStockTrackingByWayBillNo" resultMap="StockTrackingResultMap"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.StockTrackingDTO">
		select s.org_code as orig_org_code,
          (count(distinct s.serial_no) -
       (select count(1)
           from tfr.T_OPT_ACTUAL_PACKAGE        p,
                tfr.T_OPT_ACTUAL_PACKAGE_DETAIL pd
          where p.id = pd.actual_package_id
            and p.waybill_no = #{waybillNo} 
            and s.org_code in
                (select org_code
                   from tfr.T_OPT_IN_STOCK
                  where waybill_no = #{waybillNo} 
                    and org_code = s.org_code
                    and in_stock_type='AFTER_PACKAGE_NEW_GOODS'))) as GOODS_QTY_TOTAL
	     from tfr.T_OPT_IN_STOCK s
	    where s.waybill_no = #{waybillNo} 
	    group by s.org_code
	</select>
	
	<!--查询库存的轨迹（库存中）-->
	<select id="getStockTrackingByWayBillNo" resultMap="StockTrackingResultMap"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.StockTrackingDTO">
		select s.org_code as orig_org_code,s.IN_STOCK_TIME as create_time from  tfr.T_OPT_IN_STOCK s
		 where waybill_no = #{waybillNo} 
		 and org_code in
		 <if test="orgCodes!=null">
			<foreach collection="orgCodes" open="(" close=")"
				separator="," index="index" item="item">
				#{item}
			</foreach>
		</if>
	</select>
	
	<!--查询库存的轨迹（签收）-->
	<select id="getSignStockTrackingByWayBillNo" resultMap="StockTrackingResultMap"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.StockTrackingDTO">
		select s.org_code as orig_org_code,s.OUT_STOCK_TIME as create_time,o.name as orig_org_name  from  tfr.t_opt_out_stock s,bse.t_bas_org o where  s.org_code = o.code 
		 and o.active='Y' and  waybill_no = #{waybillNo} 
		  and  out_stock_type in ('SIGN','SIGN_EXCEPTION')
	</select>
	
	<!--通过运单号查询正单信息-->
	<select id="queryAirWayBillListByWaybillNo" resultMap="airWayBillResultMap"  parameterType="java.lang.String">
		SELECT
			<include refid="select_airWaybillall_view"/>
		 		FROM TFR.T_OPT_AIR_WAYBILL a,TFR.T_OPT_AIR_WAYBILL_DETAIL d
			   		where a.id=d.AIR_WAYBILL_ID
			   		and d.waybill_no=#{id}
			   		ORDER BY a.CREATE_TIME DESC
	</select>
	
	<!-- 根据运单获取交接单信息-->
	<select id="queryHandOverBillDetailByWaybillNo" resultMap="HandoverBillDTOResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
	<![CDATA[
		select 
      td.waybill_no,
      h.create_time,
      h.create_user_name,
      h.handover_no,
      h.orig_org_name,
      td.HANDOVER_GOODS_QTY,
      h.vehicle_no,
      h.HANDOVER_TYPE
      from tfr.t_opt_handoverbill_detail td 
      left join pkp.t_srv_waybill waybill
      on td.waybill_no = waybill.waybill_no and waybill.active = 'Y' 
      left join tfr.t_opt_handoverbill h on td.handover_no = h.handover_no
	]]>
		<where>
				td.waybill_no = #{waybillNo}
				 <![CDATA[and h.handoverbill_state <>'10' ]]>
				 <if test="serialNo!=null">
					and exists (select 1
			          from tfr.t_opt_handoverbill_serialno s
			         where s.waybill_no = td.waybill_no
			           and s.handoverbill_no = td.handover_no
			           and s.serial_no = #{serialNo})
			</if>
		</where>
	</select>
	
	<!-- 根据运单获取包装信息-->
	<select id="queryPackageByWaybillNo" resultMap="HandoverBillDTOResultMap"
		parameterType="java.lang.String">
	<![CDATA[
		select pr.waybill_no,
       ap.create_time,
       ap.create_user_name,
       ap.org_name,
       pr.packed_num　
	  from tfr.T_OPT_PACKAGE_REQUIRE pr, tfr.T_OPT_ACTUAL_PACKAGE ap
	 where pr.waybill_no = ap.waybill_no
	]]>
	
				and pr.waybill_no = #{waybillNo}
	</select>
	
	<!-- 查询唯一货件库存 -->
	<select id="uniqueStockQuery"  parameterType="com.deppon.foss.module.transfer.stock.api.shared.domain.InOutStockEntity" resultMap="stockResultMap">
		SELECT WAYBILL_NO,SERIAL_NO,ORG_CODE,GOODS_AREA_CODE,OPERATOR_NAME,IN_STOCK_TIME,SCAN_TIME,NEXT_ORG_CODE FROM tfr.t_opt_stock where waybill_no = #{waybillNO}
	</select>
	<!-- 营业部交接 查询唯一货件库存 -->
	<select id="uniqueStockSaleQuery"  parameterType="com.deppon.foss.module.transfer.stock.api.shared.domain.InOutStockEntity" resultMap="stockResultMap">
		SELECT WAYBILL_NO,SERIAL_NO,ORG_CODE,GOODS_AREA_CODE,OPERATOR_NAME,IN_STOCK_TIME,SCAN_TIME,NEXT_ORG_CODE FROM tfr.t_opt_stock_sale where waybill_no = #{waybillNO}
	</select>
	<!-- 根据出发部门跟下一部门查询库存 -->
	<select id="uniqueStockNextQuery"  parameterType="com.deppon.foss.module.transfer.stock.api.shared.domain.InOutStockEntity" resultMap="stockResultMap">
		SELECT count(1) as goodsCount,ORG_CODE,NEXT_ORG_CODE,Wm_concat(serial_no) as serialNos FROM tfr.t_opt_stock where waybill_no = #{waybillNO}
		group by ORG_CODE,NEXT_ORG_CODE
	</select>
	<!-- 营业部交接 根据出发部门跟下一部门查询库存 -->
	<select id="uniqueStockSaleNextQuery"  parameterType="com.deppon.foss.module.transfer.stock.api.shared.domain.InOutStockEntity" resultMap="stockResultMap">
		SELECT count(1) as goodsCount,ORG_CODE,NEXT_ORG_CODE,Wm_concat(serial_no) as serialNos FROM tfr.t_opt_stock_sale where waybill_no = #{waybillNO}
		group by ORG_CODE,NEXT_ORG_CODE
	</select>
	
	<!-- 查看已经签收的信息 -->
	<select id="querySignedStockQuery"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.StockTrackingEntity" resultMap="stockResultMap">
		select count(1) as goodsCount,os.org_code
		  from tfr.t_opt_out_stock os
		 where os.waybill_no = #{waybillNO}
		   and os.out_stock_type = 'SIGN'
		   <if test="serialNos!=null">
				and os.serial_no not in 
				<foreach collection="serialNos" open="(" close=")"
					separator="," index="index" item="item">
					#{item}
				</foreach>
			</if>
		   and ((select count(1)
		           from tfr.t_opt_out_stock os1
		          where os1.waybill_no = os.waybill_no
		            and os1.serial_no = os.serial_no
		            and os1.out_stock_type = 'SIGN') >
		       (select count(1)
		           from tfr.t_opt_in_stock ist
		          where ist.waybill_no = os.waybill_no
		            and ist.serial_no = os.serial_no
		            and ist.in_stock_type = 'REVERSE_SIGN'))
		group by os.out_stock_type,os.org_code
	</select>
	<!-- 查询签收件-->
	<select id="signStockQuery"  parameterType="com.deppon.foss.module.transfer.stock.api.shared.domain.InOutStockEntity" resultMap="stockResultMap">
		SELECT WAYBILL_NO,SERIAL_NO,ORG_CODE FROM tfr.t_opt_out_stock 
		where waybill_no = #{waybillNO}
		and ORG_CODE = #{orgCode}
	</select>
	<!-- 通过运单跟流水号（复数）查询最新状态的交接单-->
	<select id="queryNewHandover"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.StockTrackingEntity" resultMap="stockResultMap">
		select count(1) as goodsCount,os.handoverbill_no,Wm_concat(os.serial_no) as serialNos
		  from tfr.t_opt_handoverbill_serialno os
		 where os.waybill_no = #{waybillNO}
		 <if test="serialNos!=null">
				and os.serial_no in 
				<foreach collection="serialNos" open="(" close=")"
					separator="," index="index" item="item">
					#{item}
				</foreach>
			</if>
		   and os.create_time =
		       (select max(create_time)
		          from tfr.t_opt_handoverbill_serialno s
		         where s.waybill_no = os.waybill_no
		           and s.serial_no = os.serial_no)
		           group by os.handoverbill_no
	</select>
	<!-- 通过运单跟流水号（复数）查询最新状态的交接单-->
	<select id="querySerialNobyHandoverBill"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.StockTrackingEntity" resultType="java.lang.String">
		select os.serial_no
		  from tfr.t_opt_handoverbill_serialno os
		 where os.waybill_no = #{waybillNO}
		  and os.handoverbill_no=#{handoverNo}
		 <if test="serialNos!=null">
				and os.serial_no in 
				<foreach collection="serialNos" open="(" close=")"
					separator="," index="index" item="item">
					#{item}
				</foreach>
			</if>
		   and os.create_time =
		       (select max(create_time)
		          from tfr.t_opt_handoverbill_serialno s
		         where s.waybill_no = os.waybill_no
		           and s.serial_no = os.serial_no)
	</select>
	<sql id="select_airWaybillall_view">
		a.ID,
		a.AIR_LINE_TWOLETTER,
		a.AIR_WAYBILL_NO,
		a.DEPT_REGION_CODE,
		a.DEPT_REGION_NAME,
		a.ARRV_REGION_CODE,
		a.ARRV_REGION_NAME,
		a.AIR_ASSEMBLE_TYPE,
		a.DEST_ORG_CODE,
		a.DEDT_ORG_NAME,
		a.RECEIVER_CODE,
		a.RECEIVER_NAME,
		a.RECEIVER_CONTACT_PHONE,
		a.ACCOUNT_ITEM,
		a.BILLING_AGENCY,
		a.RECEIVER_ADDRESS,
		a.STORAGE_ITEM,
		a.FLIGHT_NO,
		a.FLIGHT_DATE,
		a.TAKE_OFF_TIME,
		a.ARRIVE_TIME,
		a.RATE_CLASS,
		a.PAYMENT_TYPE,
		a.GROSS_WEIGHT,
		a.BILLING_WEIGHT,
		a.FEE/100 AS FEE,
		a.AGENCT_CODE,
		a.AGENCY_NAME,
		a.DECLARE_VALUE,
		a.ITEM_CODE,
		d.GOODS_QTY,
		a.VOLUME,
		a.AIR_FEE/100 AS AIR_FEE,
		a.EXTRA_FEE/100 AS EXTRA_FEE,
		a.GOODS_NAME,
		a.PACKAGE_STRUCTION,
		a.GROUND_FEE/100 AS GROUND_FEE,
		a.FUEL_SURCHARGE,
		a.TRANSPORT_INSURANCE,
		a.INSERANCE_FEE/100 AS INSERANCE_FEE,
		a.FEE_TOTAL/100 AS FEE_TOTAL,
		a.FEE_PLAIN,
		a.BILLING_FEE/100 AS BILLING_FEE,
		a.SHIPPER_CODE,
		a.SHIPPER_NAME,
		a.SHIPPER_ADDRESS,
		a.SHIPPER_CONTACT_PHONE,
		a.PICKUP_TYPE,
		a.CREATE_ORG_CODE,
		a.CREATE_ORG_NAME,
		a.CREATE_USER_CODE,
		a.CREATE_USER_NAME,
		a.CREATE_TIME,
		a.MODIFY_USER_CODE,
		a.MODIFY_USER_NAME,
		a.MODIFY_TIME,
		a.HANDOVER_STATE,
		a.CURRENCY_CODE,
		a.IS_NOT_PAYMENT,
		a.JOINT_TICKET_NO,
		a.ACTUAL_TAKE_OFF_TIME,
		a.ACTUAL_ARRIVE_TIME,
		a.TRACK_STATE,
		a.AIR_PORT_CODE
	</sql>
	
	<!-- 查询货物到达，签收情况 for CC-->
	<select id="queryWaybillArrStatus" statementType="CALLABLE">   
		{call PKP.P_PKP_QUERY_WAYBILL_ARR_STATUS(#{waybillNo,mode=IN,jdbcType=VARCHAR},
			        							   #{waybillStatus,mode=OUT,jdbcType=VARCHAR},
			        							   #{arriveTime,mode=OUT,jdbcType=TIMESTAMP},
			        							   #{driverName,mode=OUT,jdbcType=VARCHAR},
			        							   #{driverTel,mode=OUT,jdbcType=VARCHAR},
			        							   #{delivermanName,mode=OUT,jdbcType=VARCHAR}
        										  )}
	</select> 
	
	<!--查询货物是否外发 for CC-->
	<select id="queryWaybillIsOuter" statementType="CALLABLE">   
		{call TFR.PKG_OPT_WAYBILLNO_OUTER.P_OPT_WAYBILLNO_OUTER(#{waybillNo,mode=IN,jdbcType=VARCHAR},
			        							   #{isOuter,mode=OUT,jdbcType=VARCHAR}
        										  )}
	</select> 
	
	<!-- 查询货物运输中状态 for CC-->
	<select id="queryPathdetail" statementType="CALLABLE">   
		{call TFR.PKG_OPT_QUERY_PATHDETAIL.P_OPT_QUERY_PATHDETAIL(#{waybillNo,mode=IN,jdbcType=VARCHAR},
			        							   #{billingOrg,mode=IN,jdbcType=VARCHAR},
			        							   #{destOrg,mode=IN,jdbcType=VARCHAR},
			        							   #{nowOrgCode,mode=OUT,jdbcType=VARCHAR},
			        							   #{nextOrgCode,mode=OUT,jdbcType=VARCHAR},
			        							   #{action,mode=OUT,jdbcType=VARCHAR},
			        							   #{arriveTime,mode=OUT,jdbcType=TIMESTAMP}
        										  )}
	</select> 
	
	<!--查询部门所在城市 -->
	<select id="queryCitynameForCC" statementType="CALLABLE">   
		{call pkp.foss_procedure_pkg.foss_cc_query_cityname(#{orgcode,mode=IN,jdbcType=VARCHAR},
			        							   #{cityName,mode=OUT,jdbcType=VARCHAR}
        										  )}
	</select>
	<!--查询部门名称进行转换 -->
	<select id="queryOrgtypeForCC" statementType="CALLABLE">   
		{call pkp.foss_procedure_pkg.foss_cc_query_orgtype(#{orgcode,mode=IN,jdbcType=VARCHAR},
			        							   #{typeName,mode=OUT,jdbcType=VARCHAR}
        										  )}
	</select>
	
	<select id="getTallyerHandoverBilllist" resultMap="HandoverBillDTOResultMap"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
	   select /**综合查询模块-二程接驳-添加通过运单查询理货员外场装车交接单轨迹-alfred**/
	    	cs.serial_no AS SERIAL_NO,
            c.connection_bill_no AS handover_no,
            cd.waybill_no  AS waybill_no,
            c.orig_org_code AS orig_org_code,
            c.orig_org_name AS orig_org_name,
            c.create_user_name AS create_user_name,
            c.depart_operator AS manual_depart_user_code,
            c.depart_time AS actual_depart_time,
            c.arrival_operator AS manual_arrive_user_code,
            c.arrive_date AS actual_arrive_time,
            c.vehicle_no AS vehicle_no,
            c.dest_org_code AS dest_org_code,
            c.dest_org_name AS dest_org_name,
            c.connectionbill_state AS handoverbill_state,
            cd.handover_goods_qty AS HANDOVER_GOODS_QTY
       from tfr.t_opt_connectionbill c
       join tfr.t_opt_connectionbill_detail cd on cd.connectionbill_no =
                                                  c.connection_bill_no
       left join tfr.t_opt_connectionbill_serialno cs on cs.connectionbill_no =
                  c.connection_bill_no and cs.waybill_no = cd.waybill_no
     where cd.waybill_no = #{waybillNo} 
      <![CDATA[ and c.connectionbill_state <> 90 ]]>
      <if test="serialNo!=null">
		     and cs.serial_no = #{serialNo}
		</if>
     order by c.create_time
	</select>
	
	
	<select id="getDriverHandoverBilllist" resultMap="HandoverBillDTOResultMap"  parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
	   select /**综合查询模块-二程接驳-添加通过运单查询司机装车交接单轨迹-alfred**/
	    	   ps.serail_no AS SERIAL_NO,
               p.handover_no AS handover_no,
               pd.waybill_no AS waybill_no,
               o.code AS orig_org_code,
               o.name AS orig_org_name,
               og.name AS dest_org_name,
               p.dest_org_code AS dest_org_code,
               p.create_time AS actual_depart_time,
               p.create_user_code AS manual_depart_user_code,
               pd.goods_qty AS HANDOVER_GOODS_QTY,
               p.vehicle_no AS vehicle_no,
               p.arrival_status AS handoverbill_state,
               p.arrival_operator AS manual_arrive_user_code,
               p.arrive_date AS actual_arrive_time
          from tfr.t_opt_pick_handover p
          join tfr.t_opt_pick_handover_detail pd on pd.handover_no =
                                                    p.handover_no
          join tfr.t_opt_pick_handover_serialno ps on ps.handover_no =
                     p.handover_no and ps.waybill_no = pd.waybill_no
          left join bse.t_bas_employee e on e.emp_code = p.create_user_code and e.active = 'Y'
          left join bse.t_bas_org o on o.code = e.org_code and o.active = 'Y'  
          left join bse.t_bas_org og on og.code = p.dest_org_code and og.active = 'Y'             
         where pd.waybill_no = #{waybillNo}
           and p.bill_valid = '1'
           and p.handover_type = 'EXPRESS_DRIVER'
      	   <if test="serialNo!=null">
		     and ps.serail_no = #{serialNo}
		   </if>
     	order by p.create_time
	</select>
	
	<!--查询点单任务轨迹 272681 cl 20160115 -->
	<select id="queryOrderTaskByWayBillNo" resultMap="HandoverBillDTOResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.HandoverBillDTO">
			select 
		    s.serial_no serialNo,
		    d.waybill_no waybillNo,
		    t.order_task_state orderTaskState,
		    t.order_start_time orderStartTime,
		    t.order_end_time orderEndTime,
		    t.cteate_org_code createOrgCode,
		    t.cteate_org_name createOrgName,
		    t.order_man_code orderManCode,
		    t.order_man_name orderManName,
		    d.order_goods_qty orderGoodsQty,
		    t.order_task_no orderTaskNo,
		    t.vehicle_no vehicleNo
		    from tfr.t_opt_order_task t
		    inner join tfr.t_opt_order_task_detail d
		    on t.order_task_no = d.order_task_no
		    inner join tfr.t_opt_order_task_serialno s
		    on d.id = s.task_detail_id
		    where d.waybill_no = #{waybillNo}
		    <if test="serialNo!=null">
		      and s.serial_no = #{serialNo}
		    </if>
		    <if test="serialNo==null">
			AND s.serial_no= (SELECT MAX(ss.serial_no) FROM
			tfr.t_opt_order_task_serialno
			ss WHERE ss.task_detail_id = d.id)
		</if>
		    order by t.order_start_time
	</select>
	 <!-- 用于页面综合查询路径轨迹 -->
    <select id="querForBaseInfo" parameterType="java.lang.String" resultType="java.lang.String">
			SELECT a.transport_path from tfr.t_opt_transport_path a 
			where a.waybill_no = #{waybill,jdbcType=VARCHAR}
	</select>

	<!--通过运单号查询实际到达时间 -->
	<select id="getArriveTimeByWaybillNo" resultMap="actualArriveTimeResultMap" parameterType="java.lang.String">
		Select Max(Arrivetime) as arriveTime, Sum(Qytnumber) as qytNumber
  From (Select t.Actual_Arrive_Time Arrivetime,
               d.Handover_Goods_Qty Qytnumber
          From Tfr.t_Opt_Truck_Task_Detail t
          Join Tfr.t_Opt_Truck_Task_Bill b
            On b.Truck_Task_Detail_Id = t.Id
          Join Tfr.t_Opt_Handoverbill h
            On h.Handover_No = b.Bill_No
          Join Tfr.t_Opt_Handoverbill_Detail d
            On d.Handover_No = h.Handover_No
          Join Pkp.t_Srv_Waybill w
            On w.Waybill_No = d.Waybill_No
           And w.Active = 'Y'
          Left Join Bse.t_Bas_Sales_Department Sd
            On Sd.Code = w.Customer_Pickup_Org_Code
           And Sd.Active = 'Y'
         Where w.Waybill_No = #{waybillNo}
              --And w.Goods_Qty_Total = d.handover_goods_qty
           And t.Actual_Arrive_Time Is Not Null
           And ((w.Customer_Pickup_Org_Code = t.Dest_Org_Code And Exists
                (Select 1
                    From Bse.t_Bas_Sales_Department Dp
                   Where Dp.Code = w.Customer_Pickup_Org_Code
                     And Dp.Active = 'Y'
                     And Dp.Station = 'N')) Or
               (Exists (Select 1
                           From Bse.t_Bas_Sales_Department Dp
                          Where Dp.Code = w.Customer_Pickup_Org_Code
                            And Dp.Active = 'Y'
                            And Dp.Station = 'Y') And
                Sd.Transfer_Center = t.Dest_Org_Code)))
	</select>
	
	<!--根据运单号查询入库类型-->
	<select id="getInStockTypesWayBillNoToPTP" resultType="java.lang.String"  parameterType="java.lang.String">
	select in_stock_type from(select s.in_stock_type
       from tfr.T_OPT_IN_STOCK s
       where s.is_valid = 'Y'
        and s.waybill_no = #{waybillNo}  order by s.in_stock_time desc) where rownum = 1
	</select>
	
	<!--通过运单号查询到达时间 -->
	<select id="getArrivalTimeByWaybillNo" parameterType="java.lang.String" resultType="java.util.Date">
		Select Max(Arrivetime) as arriveTime
  From (Select t.Actual_Arrive_Time Arrivetime
          From Tfr.t_Opt_Truck_Task_Detail t
          Join Tfr.t_Opt_Truck_Task_Bill b
            On b.Truck_Task_Detail_Id = t.Id
           And b.bill_level='1'
          Join Tfr.t_Opt_Handoverbill_Detail d
            On d.Handover_No = b.Bill_No
          Join Pkp.t_Srv_Waybill w
            On w.Waybill_No = d.Waybill_No
           And w.Active = 'Y'
          Left Join Bse.t_Bas_Sales_Department Sd
            On Sd.Code = w.Customer_Pickup_Org_Code
           And Sd.Active = 'Y'
         Where w.Waybill_No = #{waybillNo}
           And t.Actual_Arrive_Time Is Not Null)
	</select>
	
</mapper>