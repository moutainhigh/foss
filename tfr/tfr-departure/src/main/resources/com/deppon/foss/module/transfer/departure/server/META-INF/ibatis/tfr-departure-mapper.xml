<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tfr-departure">
	<resultMap id="BaseResultMap"
		type="com.deppon.foss.module.transfer.departure.api.shared.domain.TruckDepartEntity">
		<id column="ID" property="id" />
		<result column="VEHICLE_NO" property="vehicleNo" />
		<result column="DRIVER_CODE" property="driverCode" />
		<result column="DRIVER_NAME" property="driverName" />
		<result column="DRIVER_PHONE" property="driverPhone" />
		<result column="CONTAINER_NO" property="containerNo" />
		<result column="STATUS" property="status" />
		<result column="DEPART_TYPE" property="departType" />
		<result column="DEPART_ITEMS" property="departItems" />
		<result column="APPLY_TYPE" property="applyType" />
		<result column="APPLY_USER_CODE" property="applyUserCode" />
		<result column="APPLY_ORG_CODE" property="applyOrgCode" />
		<result column="APPLY_USER_NAME" property="applyUserName" />
		<result column="APPLY_ORG_NAME" property="applyOrgName" />
		<result column="APPLY_DEPART_TIME" property="applyDepartTime" />
		<result column="APPLY_NOTES" property="applyNotes" />
		<result column="PDA_DEPART_USER_CODE" property="pdaDepartUserCode" />
		<result column="PDA_DEPART_ORG_CODE" property="pdaDepartOrgCode" />
		<result column="PDA_TERMINAL_NO" property="pdaTerminalNo" />
		<result column="PDA_DEPART_TIME" property="pdaDepartTime" />
		<result column="GPS_DEPART_TIME" property="gpsDepartTime" />
		<result column="MANUAL_DEPART_USER_CODE" property="manualDepartUserCode" />
		<result column="manual_depart_user_name" property="manualDepartUserName" />
		<result column="MANUAL_DEPART_ORG_CODE" property="manualDepartOrgCode" />
		<result column="MANUAL_DEPART_TIME" property="manualDepartTime" />
		<result column="MANUAL_DEPART_NOTES" property="manualDepartNotes" />
		<result column="REF_ID" property="refId" />
		<result column="CREATE_TIME" property="createTime" />
		<result column="CREATE_USER_CODE" property="createUserCode" />
		<result column="CREATE_USER_NAME" property="createUserName" />
		<result column="CREATE_ORG_CODE" property="createOrgCode" />
		<result column="UPDATE_TIME" property="updateTime" />
		<result column="UPDATE_USER_CODE" property="updateUserCode" />
		<result column="UPDATE_USER_NAME" property="updateUserName" />
		<result column="UPDATE_ORG_CODE" property="updateOrgCode" />
		<result column="TRUCK_ORG_CODE" property="truckOrgCode" />
		<result column="TRUCK_TYPE" property="truckType" />
		<result column="TRUCK_TASK_ID" property="truckTaskId" />
	</resultMap>

	<resultMap id="ArrivalResultMap"
		type="com.deppon.foss.module.transfer.departure.api.shared.domain.ArrivalInfoEntity">
		<id column="ID" property="id" />
		<result column="PLAN_DEPART_TIME" property="planDepartTime" />
		<result column="ORIG_ORG_NAME" property="origOrgName" />
		<result column="ACTUAL_DEPART_TIME" property="actualDepartTime" />
		<result column="PLAN_ARRIVE_TIME" property="planArriveTime" />
		<result column="DEST_ORG_NAME" property="destOrgName" />
		<result column="ACTUAL_ARRIVE_TIME" property="actualArriveTime" />
		<result column="STATUS" property="status" />
		<result column="LINE_NAME" property="lineNo" />
		<result column="BUSINESS_TYPE" property="businessType" />
	</resultMap>

	<resultMap id="DepartResultMap"
		type="com.deppon.foss.module.transfer.departure.api.shared.domain.DepartInfoEntity">
		<id column="ID" property="id" />
		<result column="APPLY_TYPE" property="applyType" />
		<result column="DEPART_TYPE" property="departType" />
		<result column="APPLY_ORG_NAME" property="applyOrgCode" />
		<result column="APPLY_USER_NAME" property="applyUserCode" />
		<result column="APPLY_DEPART_TIME" property="applyDepartTime"  />
		<result column="DEPART_ITEMS" property="departItems" />
		<result column="PDA_DEPART_TIME" property="pdaDepartTime" />
		<result column="MANUAL_DEPART_TIME" property="manualDepartTime" />
		<result column="MANUAL_DEPART_NOTES" property="manualDepartNotes" />
		<result column="STATUS" property="status" />
	</resultMap>

	<resultMap id="OnTheWayResultMap"
		type="com.deppon.foss.module.transfer.departure.api.shared.domain.OnTheWayInfoEntity">
		<id column="ID" property="id" />
		<result column="CURRENT_PLACE" property="currentPlace" />
		<result column="TRACKING_TIME" property="trackingTime" />
		<result column="ESTIMATE_DEPART_TIME" property="estimateDepartTime" />
		<result column="CURRENT_STATUS" property="curentStatus" />
	</resultMap>

	<resultMap id="BusinessResultMap"
		type="com.deppon.foss.module.transfer.departure.api.shared.domain.BusinessInfoEntity">
		<id column="ID" property="id" />
		<result column="BUSINESS_TYPE" property="businessType" />
		<result column="LINE_NAME" property="lineNo" />
		<result column="WEIGHT_TOTAL" property="weight" />
		<result column="VOLUME_TOTAL" property="volume" />
		<result column="GOODS_QTY_TOTAL" property="waybill" />
	</resultMap>

	<resultMap id="TaskBillResultMap"
		type="com.deppon.foss.module.transfer.departure.api.shared.domain.TruckTaskBillEntity">
		<result column="BILL_NO" property="billNo" />
		<result column="DEST_ORG_NAME" property="destOrgName" />
		<result column="CONTAINER_NO" property="containerNo" />
		<result column="loader_name" property="loaderName" />
	</resultMap>

	<resultMap id="TaskBillSummaryResultMap"
		type="com.deppon.foss.module.transfer.departure.api.shared.dto.TruckTaskBillSummaryDto">
		<result column="productName" property="productName" />
		<result column="waybillQtyTotal" property="waybillQtyTotal" />
		<result column="weightTotal" property="weightTotal" />
		<result column="volumeTotal" property="volumeTotal" />
	</resultMap>

	<!-- 任务车辆明细 -->
	<resultMap id="TruckTaskDetailResultMap"
		type="com.deppon.foss.module.transfer.departure.api.shared.domain.TruckTaskDetailEntity">
		<id column="ID" property="id" />
		<result column="TRUCK_TASK_ID" property="truckTaskId" />
		<result column="VEHICLE_NO" property="vehicleNo" />
		<result column="LINE_NAME" property="lineNo" />
		<result column="BUSINESS_TYPE" property="businessType" />
		<result column="ORIG_ORG_CODE" property="origOrgCode" />
		<result column="DEST_ORG_CODE" property="destOrgCode" />
		<result column="STATUS" property="status" />
		<result column="CREATE_TIME" property="createTime" />
		<result column="TRUCK_DEPART_ID" property="truckDepartId" />
		<result column="TRUCK_ARRIVE_ID" property="truckArriveId" />
		<result column="BE_CAR_LOAD" property="beCarLoad" />
		<result column="ACTUAL_DEPART_TYPE" property="actualDepartType" />
		<result column="ACTUAL_ARRIVE_TYPE" property="actualArriveType" />
		<result column="ACTUAL_DEPART_TIME" property="actualDepartTime" />
		<result column="ACTUAL_ARRIVE_TIME" property="actualArriveTime" />
		<result column="TRUCK_ARRIVE_ID" property="truckArriveId" />
		<result column="plan_arrive_time" property="planArriveTime" />
		<result column="vehicle_owner_type" property="vehicleOwnerType" />
	</resultMap>
	
	<!-- PDA放行返回结果 -->
	<resultMap id="PDADepartResultMap"
		type="com.deppon.foss.module.transfer.pda.api.shared.dto.PDADepartResultDTO">
		<id column="ID" property="id" />
		<result column="VEHICLE_NO" property="vehicleNo" />
		<result column="BUSINESS_TYPE" property="businessType" />
		<result column="pda_depart_time" property="departTime" />
		<result column="pda_depart_user_code" property="departUser" />
		<result column="STATUS" property="status" />
		<result column="vehicleStatus" property="vehicleStatus" />
		<result column="depart_items" property="departType" />
		<result column="driver_name" property="driverName" />
		<result column="driver_phone" property="driverPhone" />
	</resultMap>
	
	<!-- gpsID根据任务车辆明细ID查找到明细信息 -->
	<resultMap id="TaskDetailForGpsMap"
		type="com.deppon.foss.module.transfer.departure.api.shared.dto.VehicleInfoForGpsDTO">
		<result column="VEHICLE_NO" property="vehicleNo" />
		<result column="PLAN_ARRIVE_TIME" property="planArriveTime" />
		<result column="ORIG_ORG_CODE" property="origOrgCode" />
		<result column="DEST_ORG_CODE" property="destOrgCode" />
		<result column="truck_task_detail_id" property="truckTaskDetailId" />
		<result column="truck_task_id" property="truckTaskId" />
		<result column="be_car_load" property="beCarLoad" />
		<result column="status" property="status" />
	</resultMap>
	
<!-- 同步发车到达信息给tps-->
	<resultMap id="synchArriveInfoToTpsMap"
		type="com.deppon.foss.module.transfer.common.api.shared.dto.DepartArriveToTpsDto">
		<result column="INVITE_NO" property="fossAboutCode" />
		<result column="vehicle_NO" property="vehicleNo" />
		<result column="DEPART_TIME" property="setoutDate" />
		<result column="ARRIVE_TIME" property="achieveDate" />
		<result column="STOWAGE_TIME" property="stowageDate" />
		<result column="VEHICLEASSEMBLE_NO" property="vehicletips" />
		<result column="TOTAL_WEIGHT" property="totalWeight" />
		<result column="TOTAL_VOLUME" property="totalVolume" />
		<result column="FEE_TOTAL" property="totalPrice" />
		<result column="RATED_CLEARANCE" property="nominaLcearance" />
		<result column="RATED_LOAD" property="nominalLoad" />
		<result column="NOTES" property="remark" />
		<result column="ORIG_ORG_CODE" property="carDepartmentCode" />
		<result column="DEST_ORG_CODE" property="arrivalDepartmentCode" />
		<result column="ORIG_ORG_NAME" property="carDepartment" />
		<result column="DEST_ORG_NAME" property="arrivalDepartment" />
	</resultMap>
	
	
	<select id="getPDADepartResult" resultMap="PDADepartResultMap"
		parameterType="java.lang.String">
		select d.status,
	       d.driver_name,
	       d.driver_phone,
	       d.vehicle_no,
	       d.pda_depart_time,
	       d.pda_depart_user_code,
	       d.depart_items
	     from tfr.t_opt_truck_depart d
		 where d.id=#{id}
	</select>
	
	<!-- 根据放行ID获取交接单号 -->
	<select id="getHandoverBillsByDepartId" resultType="java.lang.String"
		parameterType="java.lang.String">
		select b.bill_no
		  from tfr.t_opt_truck_task_bill   b,
		       tfr.t_opt_truck_task_detail d
		 where b.truck_task_detail_id = d.id
		   and b.bill_type = 'HANDOVER'
		   and d.truck_task_id=#{id}
	</select>
	
	<!-- 根据放行ID获取封签号 -->
	<select id="getSealNosByDepartId" resultType="java.lang.String"
		parameterType="java.lang.String">
		<![CDATA[
		select sd.seal_no
		  from tfr.t_opt_seal_orig_detail   sd,
		       tfr.t_opt_seal s,
		       tfr.t_opt_truck_task d
		 where s.t_truck_task_detail_id = d.id
		   and s.id = sd.seal_id
		   and s.seal_type <> 'INVALID'
   		   and s.seal_state = 'UNCHECK'
		   and d.id = #{id}
		]]>
	</select>


	<sql id="Base_Column_List">
		depart.ID, depart.VEHICLE_NO, depart.DRIVER_CODE,
		depart.DRIVER_NAME,
		depart.DRIVER_PHONE, depart.CONTAINER_NO,
		depart.STATUS,
		depart.DEPART_TYPE,
		depart.DEPART_ITEMS,
		depart.APPLY_TYPE, e.EMP_NAME as APPLY_USER_NAME, 
		ee.EMP_NAME as manual_depart_user_name,t.NAME as
		APPLY_ORG_NAME, depart.APPLY_DEPART_TIME, depart.APPLY_NOTES,
		depart.PDA_DEPART_USER_CODE, depart.PDA_DEPART_ORG_CODE,
		depart.PDA_TERMINAL_NO, depart.PDA_DEPART_TIME,
		depart.GPS_DEPART_TIME,
		depart.MANUAL_DEPART_USER_CODE,
		depart.MANUAL_DEPART_ORG_CODE, depart.MANUAL_DEPART_TIME,
		depart.MANUAL_DEPART_NOTES,
		depart.REF_ID, depart.CREATE_TIME,
		depart.CREATE_USER_CODE, depart.CREATE_USER_NAME,
		depart.CREATE_ORG_CODE, depart.UPDATE_TIME,
		depart.UPDATE_USER_CODE,
		depart.UPDATE_USER_NAME, depart.UPDATE_ORG_CODE,depart.TRUCK_TASK_ID
	</sql>

	<sql id="TruckTaskDetail_Column_List">
		d.ID,
		d.TRUCK_TASK_ID,
		d.VEHICLE_NO,
		d.LINE_NAME,
		d.BUSINESS_TYPE,
		d.ORIG_ORG_CODE,
		d.DEST_ORG_CODE,
		d.STATUS,
		d.CREATE_TIME,
		d.TRUCK_DEPART_ID,
		d.TRUCK_ARRIVE_ID,
		d.BE_CAR_LOAD,
		d.ACTUAL_DEPART_TYPE,
		d.ACTUAL_ARRIVE_TYPE,
		d.ACTUAL_DEPART_TIME,
		d.ACTUAL_ARRIVE_TIME,
		d.TRUCK_ARRIVE_ID,
		d.plan_arrive_time,
		d.business_type,
		D.vehicle_owner_type
	</sql>

	<select id="arrivalQuery" resultMap="ArrivalResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.VehicleDetailDTO">
		select detail.PLAN_DEPART_TIME,
		<!-- detail.ORIG_ORG_CODE, -->
		detail.ACTUAL_DEPART_TIME,
		detail.PLAN_ARRIVE_TIME,
		<!-- detail.DEST_ORG_CODE, -->
		detail.ACTUAL_ARRIVE_TIME,
		detail.STATUS,
		detail.LINE_NAME,
		detail.BUSINESS_TYPE,
		detail.DEST_ORG_NAME,
		detail.ORIG_ORG_NAME
		from
		tfr.T_OPT_TRUCK_TASK_DETAIL detail
		left join tfr.T_OPT_TRUCK_DEPART depart on
		detail.truck_depart_id=depart.id
		<where>
			<if test="departId!=null and departId!='' ">
				AND depart.ID = #{departId}
			</if>
			<if test="taskDetailId!=null and taskDetailId!='' ">
				AND detail.ID = #{taskDetailId}
			</if>
		</where>
	</select>

	<select id="onTheWayQuery" resultMap="OnTheWayResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.VehicleDetailDTO">
		select track.CURRENT_PLACE, track.TRACKING_TIME,
		track.ESTIMATE_DEPART_TIME,
		track.CURRENT_STATUS
		from
		tfr.T_OPT_TRUCK_TASK_TRACKING track
		left join tfr.T_OPT_TRUCK_TASK_DETAIL
		detail
		on track.truck_task_detail_id = detail.id
		left join
		tfr.T_OPT_TRUCK_DEPART depart
		on detail.truck_depart_id = depart.id
		<where>
			<if test="departId!=null and departId!='' ">
				AND depart.ID = #{departId}
			</if>
			<if test="taskDetailId!=null and taskDetailId!='' ">
				AND detail.ID = #{taskDetailId}
			</if>
		</where>
		order by track.TRACKING_TIME desc
	</select>

	<select id="departQuery" resultMap="DepartResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.VehicleDetailDTO">
		select 
		depart.DEPART_TYPE,
		depart.APPLY_TYPE,
		depart.APPLY_ORG_CODE,
		depart.APPLY_USER_CODE,
		depart.APPLY_DEPART_TIME,
		depart.DEPART_ITEMS,
		depart.PDA_DEPART_TIME,
		depart.MANUAL_DEPART_TIME,
		depart.MANUAL_DEPART_NOTES,
		depart.STATUS,
		 e.EMP_NAME as APPLY_USER_NAME, 
		 t.NAME as APPLY_ORG_NAME
		from tfr.T_OPT_TRUCK_DEPART depart
		left join tfr.T_OPT_TRUCK_TASK_DETAIL detail   on detail.truck_depart_id = depart.id
		left join bse.T_BAS_ORG t on
		depart.apply_org_code = t.code left join
		bse.T_BAS_EMPLOYEE e on
		depart.apply_user_code = e.emp_code
		<where>
			<if test="departId!=null and departId!='' ">
				AND depart.ID = #{departId}
			</if>
			<if test="taskDetailId!=null and taskDetailId!='' ">
				AND detail.ID = #{taskDetailId}
			</if>
		</where>
	</select>

	<select id="handovQuery" resultMap="BusinessResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.VehicleDetailDTO">
		select sum(GOODS_QTY_TOTAL) GOODS_QTY_TOTAL,sum(WEIGHT_TOTAL) WEIGHT_TOTAL,sum(VOLUME_TOTAL) VOLUME_TOTAL from (
		select 
	    (select sum(GOODS_QTY_TOTAL) from tfr.T_OPT_HANDOVERBILL where HANDOVER_NO=task.bill_no)as GOODS_QTY_TOTAL,
	    (select sum(WEIGHT_TOTAL) from tfr.T_OPT_HANDOVERBILL where HANDOVER_NO=task.bill_no) as WEIGHT_TOTAL,
	    (select sum(VOLUME_TOTAL) from tfr.T_OPT_HANDOVERBILL where HANDOVER_NO=task.bill_no) as VOLUME_TOTAL
	    from 
	    tfr.T_OPT_TRUCK_TASK_BILL task
	    left
	    join tfr.T_OPT_TRUCK_TASK_DETAIL td
	    on task.truck_task_detail_id = td.id
	    left join tfr.T_OPT_TRUCK_DEPART dep
	    on dep.id = td.truck_depart_id
		<where>
			task.bill_level = '1'
			and task.bill_type = 'HANDOVER'
			<if test="departId!=null and departId!='' ">
				AND dep.ID = #{departId}
			</if>
			<if test="taskDetailId!=null and taskDetailId!='' ">
				AND td.ID = #{taskDetailId}
			</if>
		</where>
		 union all
		select 
      (select sum(TOTALQTY) from tfr.t_wk_trf_bill tb where tb.handoverbillno=task.bill_no)as GOODS_QTY_TOTAL,
      (select sum(TOTALWEIGHT) from tfr.t_wk_trf_bill tb where tb.handoverbillno=task.bill_no) as WEIGHT_TOTAL,
      (select sum(TOTALVOLUMN) from tfr.t_wk_trf_bill  tb where tb.handoverbillno=task.bill_no) as VOLUME_TOTAL
      from 
      tfr.T_OPT_TRUCK_TASK_BILL task
      left
      join tfr.T_OPT_TRUCK_TASK_DETAIL td
      on task.truck_task_detail_id = td.id
	    left join tfr.T_OPT_TRUCK_DEPART dep
	    on dep.id = td.truck_depart_id
		<where>
			task.bill_level = '1'
			and task.bill_type = 'HANDOVER'
			<if test="departId!=null and departId!='' ">
				AND dep.ID = #{departId}
			</if>
			<if test="taskDetailId!=null and taskDetailId!='' ">
				AND td.ID = #{taskDetailId}
			</if>
		</where>
		) tt 
	</select>
	<select id="vehicleassQuery" resultMap="BusinessResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.VehicleDetailDTO">
		 SELECT  Sum(k.goods_qty_total) AS goods_qty_total, 
        Sum(k.weight_total)    AS weight_total, 
        Sum(k.volume_total)    AS volume_total,
        detail.handover_no
		FROM   tfr.t_opt_vehicleassemble_detail detail,tfr.t_opt_vehicleassemblebill bill,tfr.t_opt_truck_task_bill task, tfr.t_opt_truck_task_detail td,tfr.t_opt_truck_depart dep,tfr.t_opt_handoverbill k
		where detail.vehicleassemblebill_id = bill.ID
		and   k.handover_no = detail.handover_no
		and   task.bill_no = bill.vehicleassemble_no
		and   task.truck_task_detail_id = td.ID
		and   dep.id = td.truck_depart_id
		and   task.bill_level = '1'
		AND   task.bill_type = 'VEHICLEASSEMBLE'
		<if test="departId!=null and departId!='' ">
			AND dep.ID = #{departId}
		</if>
		<if test="taskDetailId!=null and taskDetailId!='' ">
			AND td.ID = #{taskDetailId}
		</if>
		group by detail.handover_no
	</select>


	<!-- 查询放行信息列表 -->
	<select id="departureQuery" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.QueryDepartEntity">
		select
		<include refid="Base_Column_List" />
		from tfr.T_OPT_TRUCK_DEPART depart
		left join bse.T_BAS_ORG t on
		depart.apply_org_code = t.code and t.active='Y' left join
		bse.T_BAS_EMPLOYEE e on
		depart.apply_user_code = e.emp_code and e.active='Y'
		left join
		bse.T_BAS_EMPLOYEE ee on
		depart.manual_depart_user_code = ee.emp_code and ee.active='Y'
		<include refid="select_Where" />
		order by depart.APPLY_DEPART_TIME desc
	</select>

    <!-- 查询放行信息列表 -->
	<select id="queryTruckTaskDetailByGpsId" resultMap="TaskDetailForGpsMap"
		parameterType="java.lang.String">
		select d.VEHICLE_NO,d.PLAN_ARRIVE_TIME,d.ORIG_ORG_CODE,d.DEST_ORG_CODE,d.id as truck_task_detail_id,d.truck_Task_Id,
        d.status  from tfr.t_opt_truck_task_detail d
		left join tfr.t_opt_truck_gps_task t on d.id = t.truck_task_detail_id
		where t.id=#{id}
	</select>


	<!-- 查询车辆任务信息 -->
	<select id="queryTruckTaskDetail" resultMap="TruckTaskDetailResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.QueryDepartEntity">
		select
		<include refid="TruckTaskDetail_Column_List" />
		from tfr.T_OPT_TRUCK_TASK_DETAIL d
		<where>
			<if test="vehicleNo!=null and vehicleNo!='' ">
				AND d.VEHICLE_NO = #{vehicleNo,jdbcType=VARCHAR}
			</if>
			<if test="truckDepartId!=null and truckDepartId!='' ">
				AND d.TRUCK_DEPART_ID = #{truckDepartId,jdbcType=VARCHAR}
			</if>
			<if test="status!=null and status!='' ">
				AND d.STATUS = #{status,jdbcType=VARCHAR}
			</if>
			<if test="origOrgCode!=null and origOrgCode!='' ">
				AND d.orig_Org_Code = #{origOrgCode,jdbcType=VARCHAR}
			</if>
			<if test="destOrgCode!=null and destOrgCode!='' ">
				AND d.dest_Org_Code = #{destOrgCode,jdbcType=VARCHAR}
			</if>
			<if test="createTime!=null">
				AND d.actual_arrive_time = #{createTime}
			</if>
			<if test="truckTaskId!=null">
				AND d.truck_task_id = #{truckTaskId,jdbcType=VARCHAR}
			</if>
			<if test="id!=null">
				AND d.id = #{id,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	
	<!-- 根据ID查询车辆任务信息 -->
		<select id="queryTruckTaskDetailById" resultMap="TruckTaskDetailResultMap"
		parameterType="String">
		select 	d.ID,
				d.TRUCK_TASK_ID,
				d.VEHICLE_NO,
				d.LINE_NAME,
				d.BUSINESS_TYPE,
				d.ORIG_ORG_CODE,
				d.DEST_ORG_CODE,
				d.STATUS,
				d.CREATE_TIME,
				d.TRUCK_DEPART_ID,
				d.TRUCK_ARRIVE_ID,
				d.BE_CAR_LOAD,
				d.ACTUAL_DEPART_TYPE,
				d.ACTUAL_ARRIVE_TYPE,
				d.ACTUAL_DEPART_TIME,
				d.ACTUAL_ARRIVE_TIME,
				d.TRUCK_ARRIVE_ID,
				d.plan_arrive_time,
				d.business_type,
				d.vehicle_owner_type
		from tfr.T_OPT_TRUCK_TASK_DETAIL d
		<where>
			d.id=#{id} 
			 <![CDATA[and rownum<=1]]>
		</where>
		</select>
	
	
	<!-- 查询车辆任务信息 -->
	<select id="getTaskIdByDepartId" resultMap="TruckTaskDetailResultMap"
		parameterType="java.lang.String">
		select t.id as TRUCK_TASK_ID, de.id as id,de.ORIG_ORG_CODE
		  from tfr.t_opt_truck_depart      d,
		       tfr.t_opt_truck_task_detail de,
		       tfr.t_opt_truck_task        t
		 where d.id = de.truck_depart_id
		   and de.truck_task_id = t.id
		   and d.id=#{id}
	</select>


	<select id="getCount" resultType="Long"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.QueryDepartEntity">
		SELECT COUNT(ID) FROM tfr.T_OPT_TRUCK_DEPART depart
		<include refid="select_Where" />
	</select>
	
	<!-- 判断放行任务是否是集配交接单 -->
	<select id="isDistanceHandover" resultType="java.lang.String"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.QueryDepartEntity">
		  select distinct b.bill_no
		  from 
		       tfr.t_opt_truck_task        t,
		       tfr.t_opt_truck_task_detail d,
		       tfr.t_opt_truck_task_bill   b,
		       tfr.t_opt_handoverbill      h
		 where t.id = d.truck_task_id
		   and d.id = b.truck_task_detail_id
		   and b.bill_level =  #{billLevel,jdbcType=VARCHAR}
		   and b.bill_no = h.handover_no
		   and h.handover_type =  #{handoverType,jdbcType=VARCHAR}
		   and d.truck_task_id =  #{id,jdbcType=VARCHAR}
		   <if test="origOrgCode!=null and origOrgCode!='' ">
				AND d.ORIG_ORG_CODE = #{origOrgCode}
		   </if>
		    <if test="destOrgCode!=null and destOrgCode!='' ">
				AND d.DEST_ORG_CODE = #{destOrgCode}
		   </if>
		   and d.status in ('UNDEPART','ONTHEWAY')
	</select>
	
	<!-- 判断任务车辆明细任务是否是集配交接单 -->
	<select id="taskIsDistanceHandover" resultType="Long"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.QueryDepartEntity">
		  select count(*)
		  from 
		       tfr.t_opt_truck_task_detail d,
		       tfr.t_opt_truck_task_bill   b,
		       tfr.t_opt_handoverbill      h
		 where  d.id = b.truck_task_detail_id
		   and b.bill_level =  #{billLevel,jdbcType=VARCHAR}
		   and b.bill_no = h.handover_no
		   and h.handover_type =  #{handoverType,jdbcType=VARCHAR}
		   and d.id =  #{id,jdbcType=VARCHAR}
		   <if test="origOrgCode!=null and origOrgCode!='' ">
				AND d.ORIG_ORG_CODE = #{origOrgCode}
		   </if>
		    <if test="destOrgCode!=null and destOrgCode!='' ">
				AND d.DEST_ORG_CODE = #{destOrgCode}
		   </if>
	</select>

	<sql id="select_Where">
		<where>
			<if test="keyId!=null and keyId!='' ">
				AND ID = #{keyId}
			</if>
			<if test="vehicleNo!=null and vehicleNo!='' ">
				AND VEHICLE_NO = #{vehicleNo}
			</if>
			<if test="driverName!=null and driverName!='' ">
				AND DRIVER_NAME = #{driverName}
			</if>
			<if test="driverCode!=null and driverCode!='' ">
				AND DRIVER_CODE = #{driverCode}
			</if>
			<if test="departItems!=null and departItems!='' ">
				AND DEPART_ITEMS = #{departItems}
			</if>
			<if test="status!=null and status!='' ">
				AND depart.STATUS = #{status}
			</if>
			<if test="applyOrgCode!=null and applyOrgCode!='' ">
				AND APPLY_ORG_CODE = #{applyOrgCode}
			</if>
			<!-- <if test="currentOrgCode!=null and currentOrgCode!='' ">
				AND APPLY_ORG_CODE = #{currentOrgCode}
			</if> -->
			<if test="manualDepartUserCode!=null and manualDepartUserCode!='' ">
				AND MANUAL_DEPART_USER_CODE is not null
			</if>
			<if test="pdaDepartUserCode!=null and pdaDepartUserCode!='' ">
				AND PDA_DEPART_USER_CODE is not null
			</if>
			<!-- <if test="departType!=null and departType!='' "> AND DEPART_TYPE 
				in ('$departType$') </if> -->
			<if test="departTypeIds!=null">
				AND DEPART_TYPE IN
				<foreach collection="departTypeIds" open="(" close=")"
					separator="," index="index" item="item">
					#{item}
				</foreach>
			</if>
			<if test="statuses!=null">
				AND depart.STATUS IN
				<foreach collection="statuses" open="(" close=")"
					separator="," index="index" item="item">
					#{item}
				</foreach>
			</if>
			<if test="departIds!=null">
				AND depart.ID in
				<foreach collection="departIds" open="(" close=")"
					separator="," index="index" item="item">
					#{item}
				</foreach>
			</if>
			<if test="currentOrgCodes!=null">
				AND APPLY_ORG_CODE IN
				<foreach collection="currentOrgCodes" open="(" close=")"
					separator="," index="index" item="item">
					#{item}
				</foreach>
			</if>
			<if test="beginTime!=null">
				AND APPLY_DEPART_TIME between #{beginTime} and #{endTime}
			</if>
			<if test="createDate!=null">
				and depart.create_time>=#{createDate,jdbcType=TIMESTAMP}
			</if>
		</where>
	</sql>
	<select id="queryTaskBillById" resultMap="TaskBillResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.VehicleDetailDTO">
		select t.bill_no,
		NVL(opt.DEST_ORG_NAME,wkt.ARRIVEORGNAME)DEST_ORG_NAME, '/' as CONTAINER_NO,de.loader_name
		from tfr.T_OPT_TRUCK_TASK_BILL t
		left join tfr.T_OPT_HANDOVERBILL opt
		on
		t.bill_no = opt.HANDOVER_NO
		left join TFR.T_WK_TRF_BILL wkt
   		on 
   		t.bill_no =wkt.HANDOVERBILLNO
		left join tfr.T_OPT_TRUCK_TASK_DETAIL de
		on
		t.truck_task_detail_id = de.id
		left join tfr.T_OPT_TRUCK_DEPART dep
		on
		de.truck_depart_id = dep.id
		where t.BILL_TYPE =
		'HANDOVER' and t.bill_level='1'
		<if test="departId!=null and departId!='' ">
			AND dep.ID = #{departId}
		</if>
		<if test="taskDetailId!=null and taskDetailId!='' ">
			AND de.ID = #{taskDetailId}
		</if>
		<!-- and dep.id = #{id} -->

		union

		select t.bill_no, veh.DEST_ORG_NAME,
		veh.CONTAINER_NO,de.loader_name
		from tfr.T_OPT_TRUCK_TASK_BILL t
		left join
		tfr.T_OPT_VEHICLEASSEMBLEBILL veh
		on t.bill_no = veh.VEHICLEASSEMBLE_NO
		left join tfr.T_OPT_TRUCK_TASK_DETAIL de
		on t.truck_task_detail_id = de.id
		left join tfr.T_OPT_TRUCK_DEPART dep
		on de.truck_depart_id = dep.id
		where
		t.BILL_TYPE = 'VEHICLEASSEMBLE' and t.bill_level='1'
		<if test="departId!=null and departId!='' ">
			AND dep.ID = #{departId}
		</if>
		<if test="taskDetailId!=null and taskDetailId!='' ">
			AND de.ID = #{taskDetailId}
		</if>
		<!-- and dep.id =
		#{id} -->
	</select>

	<select id="queryTaskBillSummary" resultMap="TaskBillSummaryResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.VehicleDetailDTO">
		select p.name productName,
		       count(w.waybill_no) waybillQtyTotal,
		       sum(hd.handover_weight) weightTotal,
		       sum(hd.handover_volume) volumeTotal
		  from tfr.t_opt_truck_task_detail   ttd,
		       tfr.t_opt_truck_task_bill     ttb,
		       tfr.t_opt_handoverbill        h,
		       tfr.t_opt_handoverbill_detail hd,
		       pkp.t_srv_waybill             w,
		       pkp.t_srv_product             p
		 where 1 = 1
		   and ttd.id = ttb.truck_task_detail_id(+)
		   and ttb.bill_type = 'HANDOVER'
		   and ttb.bill_no = h.handover_no
		   and h.handover_no = hd.handover_no(+)
		   and hd.waybill_no = w.waybill_no
		   and w.active = 'Y'
		   and w.product_id in ('C30001', 'C30002')
		   and w.product_id = p.id
		   and p.active = 'Y'
		   and ttd.id = #{taskDetailId}
		 group by p.name
	</select>

	<!-- 打印纸质放行条 -->
	<update id="updateManual"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.TruckDepartEntity">
		UPDATE tfr.T_OPT_TRUCK_DEPART
		<set>
			<if test="status!=null">
				STATUS = #{status},
			</if>
			<if test="manualDepartUserCode!=null">
				MANUAL_DEPART_USER_CODE = #{manualDepartUserCode},
			</if>
			<if test="manualDepartOrgCode!=null">
				MANUAL_DEPART_ORG_CODE = #{manualDepartOrgCode},
			</if>
			<if test="manualDepartTime!=null">
				MANUAL_DEPART_TIME = #{manualDepartTime},
			</if>
			<if test="manualDepartNotes!=null">
				MANUAL_DEPART_NOTES = #{manualDepartNotes},
			</if>
			<if test="pdaDepartUserCode!=null">
				PDA_DEPART_USER_CODE = #{pdaDepartUserCode},
			</if>
			<if test="pdaDepartOrgCode!=null">
				PDA_DEPART_ORG_CODE = #{pdaDepartOrgCode},
			</if>
			<if test="pdaDepartTime!=null">
				PDA_DEPART_TIME = #{pdaDepartTime},
			</if>
			<if test="gpsDepartTime!=null">
				gps_DEPART_TIME = #{gpsDepartTime},
			</if>
			<if test="pdaTerminalNo!=null">
				PDA_TERMINAL_NO = #{pdaTerminalNo},
			</if>
			<if test="updateTime!=null">
				UPDATE_TIME = #{updateTime},
			</if>
			<if test="updateUserCode!=null">
				UPDATE_USER_CODE = #{updateUserCode},
			</if>
			<if test="updateUserName!=null">
				UPDATE_USER_NAME = #{updateUserName},
			</if>
			<if test="updateOrgCode!=null">
				UPDATE_ORG_CODE = #{updateOrgCode}
			</if>
		</set>
		WHERE ID =#{id,jdbcType=VARCHAR}
	</update>

	<!-- 电子围栏出发(GPS) -->
	<update id="notifyStarttime"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.GpsNotifyDTO">
		begin 
		update tfr.t_opt_truck_depart
		<set>
		   <if test="status!=null">
				STATUS = #{status},
			</if>
			<if test="gpsDepartTime!=null">
				gps_depart_time = #{gpsDepartTime},
			</if>
		</set>
		where id = (select TRUCK_DEPART_ID from tfr.t_opt_truck_task_detail where id=#{gpsTaskId});
		update tfr.t_opt_truck_gps_task 
		<set>
			<if test="gpsDepartTime!=null">
				gps_depart_time = #{gpsDepartTime},
			</if>
		</set>
		 where id=#{gpsTaskId};
		end;
	</update>
	<!-- 电子围栏到达(GPS) -->
	<update id="notifyArrivaltime"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.GpsNotifyDTO">
		begin 
		update tfr.t_opt_truck_arrive
		<set>
		   <if test="status!=null">
				STATUS = #{status},
			</if>
			<if test="gpsArriveTime!=null">
				gps_arrive_time = #{gpsArriveTime},
			</if>
		</set>
		where id = (select TRUCK_Arrive_ID from tfr.t_opt_truck_task_detail where id=#{gpsTaskId});
		update tfr.t_opt_truck_gps_task 
		<set>
			<if test="gpsArriveTime!=null">
				gps_arrive_time = #{gpsArriveTime},
			</if>
		</set>
		 where id=#{gpsTaskId};
		end;
	</update>
	
	
	<!-- 电子围栏更新轨迹 -->
	<insert id="updateVehicleTrack"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.GpsNotifyDTO">
		begin
		<if test="preArrivalDate!=null">
			update tfr.T_OPT_TRUCK_TASK_DETAIL
					set plan_arrive_time=#{preArrivalDate,jdbcType=TIMESTAMP},
					modify_time = sysdate
			where id=#{truckTaskDetailId,jdbcType=VARCHAR};
			
			<!--update tfr.T_OPT_PATH_DETAIL pd
			 set pd.modity_arrive_time  = #{preArrivalDate,jdbcType=TIMESTAMP}
			 , pd.modify_time = sysdate
			 where truck_detail_id = #{truckTaskDetailId,jdbcType=VARCHAR}; -->
		</if>
		
		update  tfr.T_OPT_TRUCK_TASK_TRACKING
  		set is_latest='N'
  		where truck_task_detail_id= #{truckTaskDetailId};
  		
		insert into tfr.t_Opt_Truck_Task_Tracking(id,truck_task_detail_id,vehicle_no,CURRENT_STATUS
		       ,CURRENT_PLACE,CRUUENT_SPPEND,ESTIMATE_DEPART_TIME,TRACKING_TYPE,tracking_time,IS_LATEST
		) values (
		#{id,jdbcType=VARCHAR},#{truckTaskDetailId,jdbcType=VARCHAR},#{vehicleNo,jdbcType=VARCHAR},#{state,jdbcType=VARCHAR}
		,#{roadSegmengt,jdbcType=VARCHAR},#{velocity,jdbcType=VARCHAR},#{preArrivalDate,jdbcType=TIMESTAMP},#{trackingType,jdbcType=VARCHAR}
		,#{trackingTime,jdbcType=TIMESTAMP},#{isLatest,jdbcType=VARCHAR}
		);
		end;
	</insert>
	
	<!-- 同步LMS记录 -->
	<insert id="insertLMS"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.LmsTruckDepartPlanEntity">
		insert into tfr.t_opt_lms_truck_depart_plan(id,vehicle_no,truck_org_code,truck_type
					,depart_plan_type,plan_depart_time,plan_end_time,create_time)
    	values(#{id,jdbcType=VARCHAR},#{vehicleNo,jdbcType=VARCHAR},#{truckOrgCode,jdbcType=VARCHAR},#{truckType,jdbcType=VARCHAR}
    	,#{departPlanType,jdbcType=VARCHAR},#{planDepartTime,jdbcType=TIMESTAMP},#{planEndTime,jdbcType=TIMESTAMP},#{createTime,jdbcType=TIMESTAMP})
	</insert>
	
	<!-- 打印纸质放行条需要更新任务车辆明细表 -->
	<update id="updateTaskByManual"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.TruckTaskDetailEntity">
		UPDATE tfr.T_OPT_TRUCK_TASK_DETAIL
		<set>
			<if test="status!=null">
				STATUS = #{status,jdbcType=VARCHAR},
			</if>
			<if test="actualDepartTime!=null">
				ACTUAL_DEPART_TIME = #{actualDepartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="actualDepartType!=null">
				ACTUAL_DEPART_Type = #{actualDepartType,jdbcType=VARCHAR},
			</if>
			<if test="actualArriveTime!=null">
				ACTUAL_ARRIVE_TIME = #{actualArriveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="manualDepartTime!=null">
				MANUAL_DEPART_TIME = #{manualDepartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="manualDepartUserCode!=null">
				MANUAL_DEPART_USER_CODE = #{manualDepartUserCode,jdbcType=VARCHAR},
			</if>
			<if test="manualDepartUserName!=null">
				MANUAL_DEPART_USER_NAME = #{manualDepartUserName,jdbcType=VARCHAR},
			</if>
			<if test="manualDepartOrgCode!=null">
				MANUAL_DEPART_ORG_CODE = #{manualDepartOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="manualDepartOrgName!=null">
				MANUAL_DEPART_ORG_NAME = #{manualDepartOrgName,jdbcType=VARCHAR},
			</if>
			<if test="manualArriveTime!=null">
				MANUAL_ARRIVE_TIME = #{manualArriveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="planArriveTime!=null">
				PLAN_ARRIVE_TIME = #{planArriveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="actualArriveType!=null">
				ACTUAL_arrive_Type = #{actualArriveType,jdbcType=VARCHAR},
			</if>
			<if test="truckArriveId!=null">
				TRUCK_ARRIVE_ID = #{truckArriveId,jdbcType=VARCHAR},
			</if>
			<if test="truckDepartId!=null">
				TRUCK_DEPART_ID = #{truckDepartId,jdbcType=VARCHAR},
			</if>
			<if test="platformDistributeId!=null">
				PLATFORM_DISTRIBUTE_ID = #{platformDistributeId,jdbcType=VARCHAR},
			</if>
			modify_time = sysdate
		</set>
		WHERE ID =#{id,jdbcType=VARCHAR} and status != 'CANCLED'
	</update>

<!-- 放行-->
	<update id="updateTaskDetailCancleDepart"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.TruckTaskDetailEntity">
		UPDATE tfr.T_OPT_TRUCK_TASK_DETAIL
		set
				STATUS = #{status},
				ACTUAL_DEPART_TIME = null,
				ACTUAL_DEPART_Type = null,
				TRUCK_DEPART_ID = null,
				PLATFORM_DISTRIBUTE_ID = null,
				manual_depart_time = null,
				modify_time = sysdate
		WHERE ID =#{id} and status != 'CANCLED'
	</update>
<!-- 取消到达-->
	<update id="updateTaskDetailCancleArrive"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.TruckTaskDetailEntity">
		UPDATE tfr.T_OPT_TRUCK_TASK_DETAIL
		set
				STATUS = #{status},
				ACTUAL_ARRIVE_TIME = null,
				ACTUAL_arrive_Type = null,
				TRUCK_ARRIVE_ID = null,
				PLATFORM_DISTRIBUTE_ID = null,
				manual_arrive_time = null,
				modify_time = sysdate
		WHERE ID =#{id} and status != 'CANCLED'
	</update>
	<!-- 打印纸质放行条需要更新任务车辆明细表 -->
	<update id="updateTruckTask"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.TruckTaskDetailEntity">
		UPDATE tfr.T_OPT_TRUCK_TASK
		<set>
			<if test="status!=null">
				STATUS = #{status},
			</if>
			MODIFY_TIME=sysdate
		</set>
		WHERE ID =#{id}
		<if test="ostatus!=null">
				 and STATUS!=#{ostatus}
			</if>
	</update>

	<!-- 取消申请 -->
	<update id="cancleOrActiveDepart"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.QueryDepartEntity">
		UPDATE tfr.T_OPT_TRUCK_DEPART
		<set>
			PDA_DEPART_USER_CODE=null,PDA_DEPART_ORG_CODE=null,PDA_TERMINAL_NO=null,PDA_DEPART_TIME=null,ACTIVE_TIME=systimestamp,
			GPS_DEPART_TIME=null,MANUAL_DEPART_USER_CODE=null,MANUAL_DEPART_ORG_CODE=null,MANUAL_DEPART_TIME=null,
			MANUAL_DEPART_NOTES=null,
			<if test="status!=null">
				STATUS = #{status}
			</if>
		</set>
		WHERE ID in

		<if test="idsForCancle!=null">
			<foreach collection="idsForCancle" open="(" close=")"
				separator="," index="index" item="item">
				#{item}
			</foreach>
		</if>
	</update>
	<!-- 取消申请为待放行(根据任务车辆明细) -->
	<update id="cancleDepartByTaskId"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.QueryDepartEntity">
		UPDATE tfr.T_OPT_TRUCK_DEPART
		<set>
			PDA_DEPART_USER_CODE=null,PDA_DEPART_ORG_CODE=null,PDA_TERMINAL_NO=null,PDA_DEPART_TIME=null,ACTIVE_TIME=systimestamp,
			GPS_DEPART_TIME=null,MANUAL_DEPART_USER_CODE=null,MANUAL_DEPART_ORG_CODE=null,MANUAL_DEPART_TIME=null,
			MANUAL_DEPART_NOTES=null,
			<if test="status!=null">
				STATUS = #{status}
			</if>
		</set>
		WHERE TRUCK_TASK_ID = #{truckTaskId}
	</update>

	<!-- 激活、取消申请前查看状态 -->
	<select id="validBeforeCancleOrActiveDepart" resultType="Long"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.QueryDepartEntity">
		select COUNT(ID) from tfr.T_OPT_TRUCK_DEPART
		WHERE
		<if test="status!=null">
			STATUS = #{status}
		</if>
		and ID in
		<if test="idsForCancle!=null">
			<foreach collection="idsForCancle" open="(" close=")"
				separator="," index="index" item="item">
				#{item}
			</foreach>
		</if>
	</select>
	
	<!-- 打印纸质放行条前查看状态 -->
	<select id="validBeforeDepart" resultType="Long"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.QueryDepartEntity">
		select COUNT(ID) from tfr.T_OPT_TRUCK_DEPART
		WHERE
		status in ('2','5')
		and vehicle_no=#{vehicleNo,jdbcType=VARCHAR}
		and create_time>=#{createDate,jdbcType=TIMESTAMP}
	</select>

	<!-- 新增放行记录 -->
	<insert id="insertDepartEntity"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.TruckDepartEntity">
		insert into tfr.T_OPT_TRUCK_DEPART(
		<include refid="inDepart_param" />
		) values (
		#{id,jdbcType=VARCHAR},#{vehicleNo,jdbcType=VARCHAR},#{driverName,jdbcType=VARCHAR},#{driverCode,jdbcType=VARCHAR},#{driverPhone,jdbcType=VARCHAR},#{containerNo,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR},
		#{departType,jdbcType=VARCHAR},#{departItems,jdbcType=VARCHAR},#{manualDepartUserCode,jdbcType=VARCHAR},#{manualDepartOrgCode,jdbcType=VARCHAR},#{manualDepartTime,jdbcType=TIMESTAMP},
		#{manualDepartNotes,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{createUserCode,jdbcType=VARCHAR},#{createUserName,jdbcType=VARCHAR},#{createOrgCode,jdbcType=VARCHAR}
		,#{updateTime,jdbcType=TIMESTAMP},#{updateUserCode,jdbcType=VARCHAR},#{updateUserName,jdbcType=VARCHAR},#{updateOrgCode,jdbcType=VARCHAR}
		,#{applyDepartTime,jdbcType=TIMESTAMP},#{applyUserCode,jdbcType=VARCHAR},#{applyType,jdbcType=VARCHAR},#{applyOrgCode,jdbcType=VARCHAR},#{manualDepartNotes,jdbcType=VARCHAR}
		,#{truckTaskId,jdbcType=VARCHAR},#{activeTime,jdbcType=TIMESTAMP}
		)
	</insert>

	<!-- 新增任务车辆绑定信息 -->
	<insert id="insertTruckActionDetail"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.TruckActionDetailEntity">
		<!-- <![CDATA[ -->
		insert into tfr.T_OPT_TRUCK_ACTION_DETAIL(
		<!-- ]]> -->
		<include refid="truckActionDetail_param" />
		<!-- <![CDATA[ -->
		) values (
		<!-- ]]> -->
		tfr.SEQ_TRUCK_ACTION_DETAIL.NEXTVAL,#{bundType,jdbcType=VARCHAR},#{truckTaskDetailId,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR}
		,#{createTime,jdbcType=TIMESTAMP},#{operatorCode,jdbcType=VARCHAR},#{operatorName,jdbcType=VARCHAR}
		)
	</insert>


	<!-- 新增放行记录参数信息 -->
	<sql id="inDepart_param">
		ID,
		VEHICLE_NO,
		DRIVER_NAME,
		DRIVER_CODE,
		DRIVER_PHONE,
		CONTAINER_NO,
		STATUS,
		DEPART_TYPE,
		DEPART_ITEMS,
		MANUAL_DEPART_USER_CODE,
		MANUAL_DEPART_ORG_CODE,
		MANUAL_DEPART_TIME,
		MANUAL_DEPART_NOTES,
		CREATE_TIME,
		CREATE_USER_CODE,
		CREATE_USER_NAME,
		CREATE_ORG_CODE,
		UPDATE_TIME,
		UPDATE_USER_CODE,
		UPDATE_USER_NAME,
		UPDATE_ORG_CODE,
		APPLY_DEPART_TIME,
		APPLY_USER_CODE,
		APPLY_TYPE,
		APPLY_ORG_CODE,
		APPLY_NOTES,
		TRUCK_TASK_ID,
		ACTIVE_TIME
	</sql>

	<!-- 任务车辆绑定表 -->
	<sql id="truckActionDetail_param">
		ID,
		BUND_TYPE,
		TRUCK_TASK_DETAIL_ID,
		STATUS,
		CREATE_TIME,
		OPERATOR_CODE,
		OPERATOR_NAME
	</sql>
	
	<!-- 更新车辆放行信息（根据任务亮亮明细来作为条件） -->
	<update id="updateTruckDepartByTask"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.TruckDepartEntity">
		UPDATE tfr.T_OPT_TRUCK_DEPART
		<set>
			<if test="pdaDepartTime!=null">
				PDA_DEPART_TIME = #{pdaDepartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="gpsDepartTime!=null">
				GPS_DEPART_TIME = #{gpsDepartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="manualDepartTime!=null">
				MANUAL_DEPART_TIME = #{manualDepartTime,jdbcType=TIMESTAMP}
			</if>
		</set>
		WHERE ID =#{id,jdbcType=VARCHAR}
	</update>
	
	<!-- 根据车辆放行id获取该车辆放行对应的任务下，出发部门一致，车牌号一致的所有的任务车辆明细-->
	<select id="queryTruckTaskDetailByDepartId" resultMap="TruckTaskDetailResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.QueryDepartEntity">
		select
		<include refid="TruckTaskDetail_Column_List" />
		from tfr.t_opt_truck_task_detail d,tfr.t_opt_truck_depart de
        where de.truck_task_id = d.truck_task_id 
        and de.id = #{truckDepartId,jdbcType=VARCHAR}
        and orig_Org_Code = #{origOrgCode,jdbcType=VARCHAR}
        <if test="vehicleNo!=null">
          and VEHICLE_NO = #{vehicleNo,jdbcType=VARCHAR}
        </if>
	</select>
	
	<!-- 根据车辆放行id获取该车辆放行对应的任务下，出发部门一致，车牌号一致的所有的任务车辆明细-->
	<select id="queryTruckTaskDetailByTaskId" resultMap="TruckTaskDetailResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.TruckTaskDetailEntity">
		select
		<include refid="TruckTaskDetail_Column_List" />
		 from tfr.t_opt_truck_task_detail d,tfr.T_OPT_TRUCK_TASK ta
        where ta.id = d.truck_task_id
        <if test="truckTaskId!=null">
        	and ta.id = #{truckTaskId,jdbcType=VARCHAR}
        </if>
        <if test="origOrgCode!=null">
        	and d.orig_Org_Code = #{origOrgCode,jdbcType=VARCHAR}
        </if>
        <if test="vehicleNo!=null">
        	and d.VEHICLE_NO = #{vehicleNo,jdbcType=VARCHAR}
        </if>
        <if test="destOrgCode!=null">
        	and d.dest_Org_Code = #{destOrgCode,jdbcType=VARCHAR}
        </if>
        <if test="status!=null">
        	and d.status = #{status,jdbcType=VARCHAR}
        </if>
        <if test="id!=null">
        	and d.id = #{id,jdbcType=VARCHAR}
        </if>
	</select>
	
	<!--根据车辆任务编号，到达部门编号，车牌号查找车辆任务详情，判断是否为GPS第一次到达，如果是就调用结算接口，不是什么都不做-->
	<select id="queryJudgeIsFirstArrival" resultMap="TruckTaskDetailResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.TruckTaskDetailEntity">
		select
		<include refid="TruckTaskDetail_Column_List" />
		 from tfr.t_opt_truck_task_detail d,tfr.T_OPT_TRUCK_TASK ta
        where ta.id = d.truck_task_id
        <if test="truckTaskId!=null">
        	and ta.id = #{truckTaskId,jdbcType=VARCHAR}
        </if>
        <if test="vehicleNo!=null">
        	and d.VEHICLE_NO = #{vehicleNo,jdbcType=VARCHAR}
        </if>
        <if test="destOrgCode!=null">
        	and d.dest_Org_Code = #{destOrgCode,jdbcType=VARCHAR}
        </if>
	</select>
	<!-- 根据车辆主任务ID查询未到达的车辆任务 -->
	<select id="queryUnArrivalTaskByTaskId" resultMap="TruckTaskDetailResultMap"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.TruckTaskDetailEntity">
		select
		<include refid="TruckTaskDetail_Column_List" />
		 from tfr.t_opt_truck_task_detail d
        where (d.status = 'UNDEPART' or d.status = 'ONTHEWAY')
          and d.truck_task_id = #{truckTaskId}
	</select>
	
	<!-- 提供接口给接送货，根据运单查询在途车辆任务 -->
	<select id="querycarLoadTruckTaskDetailList" resultMap="TruckTaskDetailResultMap"
		parameterType="java.lang.String">
		SELECT DT.ID,DT.STATUS,DT.TRUCK_ARRIVE_ID, DT.PLAN_ARRIVE_TIME,DT.VEHICLE_NO,DT.TRUCK_TASK_ID
  		FROM TFR.T_OPT_TRUCK_TASK_DETAIL DT
 		WHERE DT.ID IN (SELECT BI.TRUCK_TASK_DETAIL_ID
                   FROM TFR.T_OPT_TRUCK_TASK_BILL BI
                  WHERE BI.BILL_NO IN
                        (SELECT V.VEHICLEASSEMBLE_NO
                           FROM TFR.T_OPT_VEHICLEASSEMBLEBILL V
                           JOIN TFR.T_OPT_VEHICLEASSEMBLE_DETAIL D ON D.VEHICLEASSEMBLEBILL_ID = V.ID
                           JOIN TFR.T_OPT_HANDOVERBILL H ON H.HANDOVER_NO =
                                                            D.HANDOVER_NO
                           JOIN TFR.T_OPT_HANDOVERBILL_DETAIL HD ON HD.HANDOVER_NO =
                                                                    H.HANDOVER_NO
                          WHERE HD.WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR}))
   	   AND DT.STATUS IN ('ONTHEWAY','UNDEPART')
	</select>
	<select id="insertVehicleDailySummary" parameterType="com.deppon.foss.module.transfer.departure.api.shared.dto.GpsVehicleDailySummaryDTO">
		insert into tfr.t_Opt_Vehicle_DailySummary (
			ID                       ,
			vehicle_no               ,
			Data_date                ,
			Org_code                 ,
			Org_name                 ,
			count_dailytask          ,
			Count_suctask            ,
			Aging_dailytask          ,
			Ratio_dailytask          ,
			Total_dailymileage       ,
			Total_dailytask          ,
			Created_time             ,
			Synchronous_Data_Time    
			
		) values(
				#{id,jdbcType=VARCHAR},
				#{carnum,jdbcType=VARCHAR},
				#{Datadate,jdbcType=VARCHAR},
				#{Orgcode,jdbcType=VARCHAR},
				#{Orgname,jdbcType=VARCHAR},
				#{countofdailytask,jdbcType=DECIMAL},
				#{Countofsuctask,jdbcType=DECIMAL},
				#{Agingofdailytask,jdbcType=DECIMAL},
				#{Ratioofdailytask,jdbcType=DECIMAL},
				#{Totalofdailymileage,jdbcType=DECIMAL},
				#{Totalofdailytask,jdbcType=DECIMAL},
				#{Createdtime,jdbcType=TIMESTAMP},
				#{SynchronousDataTime,jdbcType=TIMESTAMP}
		)
	</select>
	
<!-- 根据车辆任务明细和TPS信息部 查询 发车要传递的信息 -->
	<select id="synchDepartArriveInfoToTps" parameterType="HashMap" resultMap="synchArriveInfoToTpsMap">
		select  pa.invite_no INVITE_NO,
		         td.vehicle_no VEHICLE_NO,
		         v.create_time STOWAGE_TIME,
		         v.vehicleassemble_no VEHICLEASSEMBLE_NO,
		         v.fee_total/100 FEE_TOTAL,
		         v.rated_clearance RATED_CLEARANCE,
		         v.rated_load RATED_LOAD,
		         v.notes NOTES
		from tfr.t_Opt_Truck_Task_Detail td
		left join tfr.t_opt_truck_task_bill tb on tb.truck_task_detail_id = td.id
		join tfr.t_opt_vehicleassemblebill v on v.vehicleassemble_no = tb.bill_no and v.state <![CDATA[<>]]> 90
		left join tfr.t_Opt_Pass_Invite_Apply pa on pa.invite_no = v.invite_no
		where pa.ministryinformation = #{infoDept,jdbcType=VARCHAR} 
		and td.id = #{truckTaskDetailId,jdbcType=VARCHAR}
	</select>
	
	<!-- 计算配载单的总重量和总体积 -->
	<select id="queryWeightVolumeByVehicleassembleNo" parameterType="String" resultMap="synchArriveInfoToTpsMap">
		select sum(sa.weight_total) TOTAL_WEIGHT,
      			 sum(sa.volume_total) TOTAL_VOLUME,
      			 max(s.orig_org_code) ORIG_ORG_CODE,
      			 max(s.dest_org_code) DEST_ORG_CODE,
      			 max(s.orig_org_name) ORIG_ORG_NAME,
      			 max(s.dest_org_name) DEST_ORG_NAME
		 from tfr.t_opt_vehicleassemblebill s
	<![CDATA[	left join tfr.t_opt_vehicleassemble_detail sd on sd.vehicleassemblebill_id = s.id and s.state <> 90
		left join tfr.t_opt_handoverbill sa on sa.handover_no = sd.handover_no and sa.handoverbill_state <> 90 ]]>
		where s.vehicleassemble_no = #{id,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询要放行车牌号下是否有多个已确认状态的派单单号车辆未放行 -->
	<select id="queryDeliverbill" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT db.deliverbill_no
		  FROM TFR.T_OPT_TRUCK_DEPART TD, PKP.T_SRV_DELIVERBILL DB
		 WHERE TD.ID = DB.T_OPT_TRUCK_DEPART_ID
		   AND TD.ID != #{id,jdbcType=VARCHAR}
		   AND TD.STATUS = '5'
		   AND TD.VEHICLE_NO =
		       (SELECT D.VEHICLE_NO
		          FROM TFR.T_OPT_TRUCK_DEPART D
		         WHERE D.ID = #{id,jdbcType=VARCHAR})
	</select>
	
	<!-- 查询全部要放行的记录 -->
	<select id="queryManualAll" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT td.id,
		       td.truck_task_id,
		       td.vehicle_no,
		       td.driver_name,
		       td.driver_code,
		       td.container_no,
		       td.depart_items
		  FROM TFR.T_OPT_TRUCK_DEPART TD
		 WHERE TD.STATUS = '5'
		   AND TD.VEHICLE_NO = #{vehicleNo,jdbcType=VARCHAR}
	</select>
	 
	 <!-- 营业部交接卸车改到达时间 -->
	<update id="updateTaskByHandOverBillSale"
		parameterType="com.deppon.foss.module.transfer.departure.api.shared.domain.TruckTaskDetailEntity">
		UPDATE tfr.T_OPT_TRUCK_TASK_DETAIL
		<set>
			ACTUAL_ARRIVE_TIME = sysdate
		</set>
		WHERE TRUCK_DEPART_ID =#{truckDepartId,jdbcType=VARCHAR} and status != 'CANCLED'
	</update>
	
</mapper>