<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="foss.lostwarning.dealWarningData" >
	
  <!-- 用于查询丢货预警临时表数据 -->
 <resultMap id="queryLostWarningTempDataResultMap" type="com.deppon.foss.module.transfer.lostwarning.api.shared.dto.LostWarningTempDto" >
    <result column="WAYBILL_NO" property="wayBillNo" jdbcType="VARCHAR" />
    <result column="REP_TYPE" property="repType" jdbcType="VARCHAR" />
  </resultMap>
  
    <!-- 用于查询 出发库存 丢货预警业务数据 -->
  <resultMap id="queryStartDptLostWarningDataResultMap" type="com.deppon.foss.module.transfer.lostwarning.api.shared.dto.LostWarningDto" >
    <result column="WAYBILL_NO" property="wayBillNo" jdbcType="VARCHAR" />
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <result column="org_code" property="respDeptCode" jdbcType="VARCHAR" />
    <result column="goods_area_code" property="respAreaCode" jdbcType="VARCHAR" />
    <result column="goods_area_name" property="respAreaName" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 用于查询 中转库存 丢货预警业务数据 -->
  <resultMap id="queryTransferStockWarningDataResultMap" type="com.deppon.foss.module.transfer.lostwarning.api.shared.dto.LostWarningDto" >
    <result column="WAYBILL_NO" property="wayBillNo" jdbcType="VARCHAR" />
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <result column="org_code" property="respDeptCode" jdbcType="VARCHAR" />
    <result column="goods_area_code" property="respAreaCode" jdbcType="VARCHAR" />
    <result column="goods_area_name" property="respAreaName" jdbcType="VARCHAR" />
  </resultMap>
  
   <!-- 用于查询集中接货丢货预警业务数据 -->
  <resultMap id="queryJZReceiveLostWarningDataResultMap" type="com.deppon.foss.module.transfer.lostwarning.api.shared.dto.LostWarningDto" >
    <result column="waybill_no" property="wayBillNo" jdbcType="VARCHAR" />
    <result column="serailno" property="serialNo" jdbcType="VARCHAR" />
    <result column="vehicle_no" property="carCode" jdbcType="VARCHAR" />
    <result column="handovertask_no" property="transferBill" jdbcType="VARCHAR" />
    <result column="transfer_center" property="unloadingDeptCode" jdbcType="VARCHAR" />
    <result column="org_code" property="respDeptCode" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 用于查询 运输丢货  预警业务数据  -->
  <resultMap id="queryTransferLostWarningDataResultMap" type="com.deppon.foss.module.transfer.lostwarning.api.shared.dto.LostWarningDto" >
    <result column="waybill_no" property="wayBillNo" jdbcType="VARCHAR" />
    <result column="orig_org_code" property="loadingDeptCode" jdbcType="VARCHAR" />
    <result column="orig_org_name" property="loadingDeptName" jdbcType="VARCHAR" />
    <result column="dest_org_code" property="unloadingDeptCode" jdbcType="VARCHAR" />
    <result column="dest_org_name" property="unloadingDeptName" jdbcType="VARCHAR" />
    <result column="vehicle_no" property="carCode" jdbcType="VARCHAR" />
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <result column="handoverbill_no" property="transferBill" jdbcType="VARCHAR" />
  </resultMap> 
  
    <!-- 用于查询 已到达丢货  预警业务数据  -->
  <resultMap id="queryAlreadyArriveLostWarningDataResultMap" type="com.deppon.foss.module.transfer.lostwarning.api.shared.dto.LostWarningDto" >
    <result column="waybill_no" property="wayBillNo" jdbcType="VARCHAR" />
    <result column="orig_org_code" property="loadingDeptCode" jdbcType="VARCHAR" />
    <result column="orig_org_name" property="loadingDeptName" jdbcType="VARCHAR" />
    <result column="dest_org_code" property="unloadingDeptCode" jdbcType="VARCHAR" />
    <result column="dest_org_name" property="unloadingDeptName" jdbcType="VARCHAR" />
    <result column="vehicle_no" property="carCode" jdbcType="VARCHAR" />
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <result column="handoverbill_no" property="transferBill" jdbcType="VARCHAR" />
    <result column="business_type" property="businessType" jdbcType="VARCHAR" />
  </resultMap> 
  
    <!-- 用于查询 已交接丢货-交接单  预警业务数据  -->
  <resultMap id="queryHandoverLostWarningDataResultMap" type="com.deppon.foss.module.transfer.lostwarning.api.shared.dto.LostWarningDto" >
    <result column="waybill_no" property="wayBillNo" jdbcType="VARCHAR" />
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <result column="handoverbill_no" property="transferBill" jdbcType="VARCHAR" />
    <result column="orig_org_code" property="loadingDeptCode" jdbcType="VARCHAR" />
    <result column="orig_org_name" property="loadingDeptName" jdbcType="VARCHAR" />
    <result column="dest_org_code" property="unloadingDeptCode" jdbcType="VARCHAR" />
    <result column="dest_org_name" property="unloadingDeptName" jdbcType="VARCHAR" />
    <result column="vehicle_no" property="carCode" jdbcType="VARCHAR" />
  </resultMap> 
    
  <!-- 用于查询 已交接丢货-派送单  预警业务数据  -->
  <resultMap id="queryHandoverDeliverWarningDataResultMap" type="com.deppon.foss.module.transfer.lostwarning.api.shared.dto.LostWarningDto" >
    <result column="waybill_no" property="wayBillNo" jdbcType="VARCHAR" />
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <result column="deliverbill_no" property="transferBill" jdbcType="VARCHAR" />
    <result column="vehicle_no" property="carCode" jdbcType="VARCHAR" />
    <result column="create_org_name" property="loadingDeptCode" jdbcType="VARCHAR" />
    <result column="create_org_code" property="loadingDeptName" jdbcType="VARCHAR" />
  </resultMap> 
  
   <!-- 用于查询 三次以上库存异常 预警业务数据 -->
  <resultMap id="queryDifferStockLostWarningDataResultMap" type="com.deppon.foss.module.transfer.lostwarning.api.shared.dto.LostWarningDto" >
    <result column="waybill_no" property="wayBillNo" jdbcType="VARCHAR" />
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <result column="deptcode" property="respDeptCode" jdbcType="VARCHAR" />
  </resultMap>
  
  <!-- 用于查询 派送丢货 预警业务数据  -->
  <resultMap id="queryDeliverLostWarningDataResultMap" type="com.deppon.foss.module.transfer.lostwarning.api.shared.dto.LostWarningDto" >
    <result column="Waybill_No" property="wayBillNo" jdbcType="VARCHAR" />
    <result column="Serial_No" property="serialNo" jdbcType="VARCHAR" />
    <result column="orig_org_code" property="loadingDeptCode" jdbcType="VARCHAR" />
    <result column="orig_org_name" property="loadingDeptName" jdbcType="VARCHAR" />
    <result column="vehicle_no" property="carCode" jdbcType="VARCHAR" />
    <result column="deliverbill_no" property="transferBill" jdbcType="VARCHAR" />
     <result column="Org_Id" property="respDeptCode" jdbcType="VARCHAR" />
  </resultMap> 
  
  <!-- 用于查询 空运外发丢货 预警业务数据  -->
  <resultMap id="queryAirTransferLostWarningDataResultMap" type="com.deppon.foss.module.transfer.lostwarning.api.shared.dto.LostWarningDto" >
    <result column="waybill_no" property="wayBillNo" jdbcType="VARCHAR" />
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <result column="Create_Org_Code" property="loadingDeptCode" jdbcType="VARCHAR" />
    <result column="Create_Org_Name" property="loadingDeptName" jdbcType="VARCHAR" />
    <result column="air_handover_no" property="transferBill" jdbcType="VARCHAR" />
  </resultMap> 
  
  <!-- 用于查询 快递外发丢货 预警业务数据  -->
  <resultMap id="queryExpressExternalLostWarningDataResultMap" type="com.deppon.foss.module.transfer.lostwarning.api.shared.dto.LostWarningDto" >
    <result column="waybill_no" property="wayBillNo" jdbcType="VARCHAR" />
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <result column="external_org_code" property="loadingDeptCode" jdbcType="VARCHAR" />
    <result column="external_org_name" property="loadingDeptName" jdbcType="VARCHAR" />
    <result column="handoverbill_no" property="transferBill" jdbcType="VARCHAR" />
  </resultMap> 
  
   <!-- 用于查询运单信息数据 -->
  <resultMap id="queryWayBillInfoResultMap" type="com.deppon.foss.module.transfer.lostwarning.api.shared.dto.WayBillInfoDto" >
    <result column="waybill_no" property="waybillNum" jdbcType="VARCHAR" />
    <result column="receive_org_code" property="takeOverDeptCode" jdbcType="VARCHAR" />
    <result column="Receive_Org_Name" property="takeOverDeptName" jdbcType="VARCHAR" />
    <result column="last_load_org_code" property="arriveDeptCode" jdbcType="VARCHAR" />
    <result column="Last_Load_Org_Name" property="arriveDeptName" jdbcType="VARCHAR" />
    <result column="product_code" property="transNature" jdbcType="VARCHAR" />
    <result column="delivery_customer_code" property="sendClientCode" jdbcType="VARCHAR" />
    <result column="delivery_customer_name" property="sendClientName" jdbcType="VARCHAR" />
    <result column="receive_customer_code" property="takeOverClientCode" jdbcType="VARCHAR" />
    <result column="receive_customer_name" property="takeOverClientName" jdbcType="VARCHAR" />
    <result column="Receive_Method" property="pickUpType" jdbcType="VARCHAR" />
    <result column="paid_method" property="payType" jdbcType="VARCHAR" />
    <result column="delivery_customer_mobilephone" property="sendClientMobile" jdbcType="VARCHAR" />
    <result column="create_org_code" property="billingDeptCode" jdbcType="VARCHAR" />
    <result column="Goods_Name" property="goodsName" jdbcType="VARCHAR" />
    <result column="Goods_Weight_Total" property="weight" jdbcType="DOUBLE" />
    <result column="Goods_Volume_Total" property="volume" jdbcType="DOUBLE" />
    <result column="Goods_Package" property="goodsPackage" jdbcType="VARCHAR" />
    <result column="Goods_Qty_Total" property="goodsNum" jdbcType="VARCHAR" />
    <result column="Bill_Time" property="billingTime" jdbcType="VARCHAR" />
    <result column="billing_fee" property="billingFee" jdbcType="VARCHAR" />
    <result column="Insurance_Fee" property="safeMoney" jdbcType="VARCHAR" />
    <result column="Cod_Amount" property="agentFee" jdbcType="VARCHAR" />
    <result column="Return_Bill_Type" property="returnBillType" jdbcType="VARCHAR" />
    <result column="Transportation_Remark" property="storageTransport" jdbcType="VARCHAR" />
    <result column="is_express" property="is_express" jdbcType="VARCHAR" />
    <result column="pickup_centralized" property="pickup_centralized" jdbcType="VARCHAR" />
    <result column="name" property="billingDeptName" jdbcType="VARCHAR" />
    <result column="Customer_Pickup_Org_Code" property="customerPickupOrgCode" jdbcType="VARCHAR" />
  </resultMap>
  
   <!-- 用于查询丢货预警 打包数据 -->
  <resultMap id="queryWayBillPkgResultMap" type="com.deppon.foss.module.transfer.lostwarning.api.shared.dto.WayBillPkgInfoDto" >
    <result column="package_no" property="packageNo" jdbcType="VARCHAR" />
    <result column="depart_org_code" property="departOrgCode" jdbcType="VARCHAR" />
    <result column="depart_org_name" property="departOrgName" jdbcType="VARCHAR" />
    <result column="arrive_org_code" property="arriveOrgCode" jdbcType="VARCHAR" />
    <result column="arrive_org_name" property="arriveOrgName" jdbcType="VARCHAR" />
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
  </resultMap>
  
   <!-- 用于查询外场、车队信息-->
  <resultMap id="queryTransferCenterResultMap" type="com.deppon.foss.module.transfer.lostwarning.api.shared.dto.TransferMotorcadeDto" >
    <result column="org_code" property="orgCode" jdbcType="VARCHAR" />
    <result column="name" property="orgName" jdbcType="VARCHAR" />
    <result column="motorcade_code" property="motorcadeCode" jdbcType="VARCHAR" />
    <result column="motorcade_name" property="motorcadeName" jdbcType="VARCHAR" />
    <result column="TRANSFER_SERVICE_CHANNEL" property="transferServiceChannel" jdbcType="VARCHAR" />
  </resultMap>
  
   <!-- 用于查询上报丢货预警数据 -->
  <resultMap id="queryLostWarningLogMap" type="com.deppon.foss.module.transfer.lostwarning.api.shared.dto.LostWarningLogDto" >
    <result column="WAYBILL_NO" property="wayBillNo" jdbcType="VARCHAR" />
    <result column="SERIAL_NO" property="serialNo" jdbcType="VARCHAR" />
    <result column="REP_TYPE" property="repType" jdbcType="VARCHAR" />
    <result column="REP_SCENE" property="repScene" jdbcType="VARCHAR" />
    <result column="REP_CODE" property="repCode" jdbcType="VARCHAR" />
    <result column="REP_MSG" property="repMsg" jdbcType="VARCHAR" />
    <result column="LOST_REPCODE" property="lostRepCode" jdbcType="VARCHAR" />
    <result column="IS_FIND" property="isFind" jdbcType="VARCHAR" />
    <result column="RESP_DEPTCODE" property="respDeptCode" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPLOAD_MSG" property="uploadMsg" jdbcType="VARCHAR" />
  </resultMap>
  
	<!-- 查询外场、车队信息   -->
	<select id="queryTransferCenter" parameterType="HashMap" resultMap="queryTransferCenterResultMap">
		Select  t.TRANSFER_SERVICE_CHANNEL,t.org_code,t.name,t.motorcade_code,o.name as motorcade_name
		from bse.T_BAS_TRANSFER_CENTER t Left Join bse.t_bas_org o 
		On t.motorcade_code=o.code
		Where o.active='Y' And t.active='Y'
	</select>
  
    <!-- 根据运单号查询运单信息 start -->
	<select id="queryWayBillInfo" parameterType="HashMap" resultMap="queryWayBillInfoResultMap">
	 select t.waybill_no,
	  T.Customer_Pickup_Org_Code,
       t.receive_org_code,
       (Select O.Name From Bse.T_Bas_Org o Where O.Code = T.Receive_Org_Code And o.active='Y' And Rownum=1) As Receive_Org_Name,
       t.last_load_org_code,
       (Select O.Name From Bse.T_Bas_Org o Where O.Code = T.Last_Load_Org_Code And o.active='Y' And Rownum=1) As Last_Load_Org_Name,
       p.Name As product_code,
       nvl(t.delivery_customer_code,'未知') As delivery_customer_code,
       nvl(t.delivery_customer_name,'未知') As delivery_customer_name,
       nvl(t.receive_customer_code,'未知') As receive_customer_code,
       nvl(t.receive_customer_name,'未知') As receive_customer_name,
      Decode(t.Receive_Method,'SELF_PICKUP','自提','INNER_PICKUP','内部带货自提','DELIVER_UP','送货上楼',
			 'DELIVER','免费送货','DELIVER_NOUP','送货（不含上楼）','DELIVER_INGA','送货进仓','SELF_PICKUP_FREE_AIR',
			 '免费自提','DELIVER_INGA_AIR','空运送货进仓','DELIVER_UP_AIR','空运送货上楼','DELIVER_AIR','空运免费送货',
			 'AIRPORT_PICKUP','空运机场自提','DELIVER_NOUP_AIR','送货（不含上楼）','SELF_PICKUP_AIR','空运自提（不含机场自提）',
       'LARGE_DELIVER_UP','大件上楼', 'LARGE_DELIVER_UP_AIR','空运大件上楼',
			 Nvl(t.Receive_Method,'未知') ) As Receive_Method ,
       Decode(t.paid_method,'CD','银行卡','NT','支票','CH','现金','TT','电汇','OL','网上支付','CT','月结','DT',
       		'临时欠款','FC','到付',Nvl(t.paid_method,'未知')) As paid_method,
       coalesce(t.delivery_customer_mobilephone,t.Delivery_Customer_Phone,'未知') as delivery_customer_mobilephone,
       t.create_org_code,
       t.Goods_Name,
       nvl(t.Goods_Weight_Total,0) as Goods_Weight_Total,
       nvl(t.Goods_Volume_Total,0) as Goods_Volume_Total,
       nvl(t.Goods_Package,'未知')As Goods_Package,
       t.Goods_Qty_Total,
       to_char(t.Bill_Time,'yyyy-mm-dd hh24:mi:ss') as Bill_Time,
       nvl(t.Total_Fee,0)-nvl(t.Cod_Amount,0)-nvl(t.Service_Fee,0) as billing_fee,
       nvl(t.Insurance_Fee,0) As Insurance_Fee,
       nvl(t.Cod_Amount,0)As Cod_Amount,
       Decode(t.Return_Bill_Type ,'NONE','无需返单','FAX','客户签收单传真返回','ORIGINAL','客户签收单原件返回',
       'ARRIVESHEET_FAX','运单到达联传真返回',Nvl(t.Return_Bill_Type,'未知')) As Return_Bill_Type,
       t.Transportation_Remark ,
       Decode(t.Product_Code,'PACKAGE','Y','RCP','Y','EPEP','Y','DEAP','Y','N') 
As Is_Express ,
       t.pickup_centralized,
       org.name
       from pkp.t_Srv_Waybill t ,bse.t_bas_org org,pkp.t_srv_product p
	 	where t.Product_Code=p.Code And t.create_org_code =org.code 
	 	and org.active='Y' and t.waybill_no=#{wayBillNo} and t.active='Y'  and p.active='Y'
	 	and t.RECEIVE_ORG_CODE Not In('W030003050112','W060003070110','W01203203','W0113030203','W1700030407'
			,'W011107','W013101010701','W0000001722')
	 	 <![CDATA[	and t.Product_Code <> 'WVH' ]]>      
	</select>
  <!-- 根据运单号查询运单信息 end -->
  
  <!-- 根据运单号查询包号以及建包、解包部门信息  start-->
  <select id="queryWayBillPkgInfo"  parameterType="HashMap" resultMap="queryWayBillPkgResultMap" >
		Select Distinct Tp.Depart_Org_Code,
		       Tp.Depart_Org_Name,
		       Tp.Arrive_Org_Code,
		       Tp.Arrive_Org_Name,
		       t.Serial_No,
		       t.Package_No
		  From Tfr.t_Opt_Package_Detail t
		 Inner Join Tfr.t_Opt_Package Tp
		    On t.Package_No = Tp.Package_No
		<![CDATA[  Where t.Goods_State <> 'CANCELED' ]]>
		   And t.Waybill_No = #{wayBillNo}  
		   And (t.Serial_No,t.Scan_Time) In(Select a.Serial_No, Max(a.Scan_Time)
		  From Tfr.t_Opt_Package_Detail a
		<![CDATA[ Where a.Goods_State <> 'CANCELED'  ]]>
		   And a.Waybill_No = #{wayBillNo}  
		 Group By a.Serial_No)
		 Order By t.Serial_No
  </select>
  <!-- 根据运单号查询包号以及建包、解包部门信息   end-->
  
    <!-- 根据运单号、流水号 查询包号以及建包、解包部门信息  start-->
  <select id="queryWayBillPkgBySerial"  parameterType="HashMap" resultMap="queryWayBillPkgResultMap" >
		 select Distinct tp.depart_org_code,
		       tp.depart_org_name,
		       tp.arrive_org_code,
		       tp.arrive_org_name,
		       t.serial_no,
		       t.package_no
		  from tfr.t_opt_package_detail t
		  inner join tfr.t_opt_package tp
		    on t.package_no = tp.package_no
	    <where>
			t.waybill_no = #{wayBillNo}   
			<![CDATA[ and t.Goods_State <> 'CANCELED'  ]]>
			and t.serial_no in
			<foreach item="item" index="index" collection="serialList" 
                     open="(" separator="," close=")">
                    #{item}
            </foreach>
		</where>
		order by  t.serial_no
  </select>
  <!-- 根据运单号、流水号 查询包号以及建包、解包部门信息   end-->
  
  <!-- 查询丢货预警临时表数据量 start -->
  <select id="queryLostWarningTempDataCount" resultType="Long">
	Select count(1) From tfr.t_Opt_Lostwarning_Temp
  </select>
  <!-- 查询丢货预警临时表数据量 end -->
  
   <!-- 查询丢货预警数据 -->
	<select id="queryLostWarningTempData" parameterType="HashMap" resultMap="queryLostWarningTempDataResultMap">
	 	<![CDATA[   select * from tfr.t_opt_lostwarning_temp t where t.Jobid=#{jobID}  ]]>  
	</select>
	
	<!-- 根据运单号查询成功上报的丢货预警数据 -->
	<select id="queryUploadWarningDataSuc" parameterType="HashMap" resultMap="queryLostWarningLogMap">
	 	 Select * From tfr.t_Opt_Lostwarning_Log t Where t.Rep_Code='1' And t.Waybill_No=#{wayBillNo}
	 	  And t.is_find='0'
	</select>
  
  <!-- 获取丢货预警ID 序列值 start-->
  <select id="getNextSequenceValue" resultType="java.lang.Long" parameterType="java.util.Map">
  	  select  tfr.seq_lost_warning_id.NEXTVAL from dual
  </select>
  <!-- 获取丢货预警ID 序列值 end-->
  
  <!-- 更新 中间表数据 JOBID start-->
  <update id="updateLostWarningTemp" parameterType="map">
  	<![CDATA[ UPDATE TFR.T_OPT_LOSTWARNING_TEMP T SET T.JOBID=#{jobID} WHERE T.JOBID='N/A' AND ROWNUM<#{limitCount} ]]>  
  </update>
  <!-- 更新 中间表数据 JOBID end-->
  
  <!-- 更新 中间表所有数据 JOBID start-->
  <update id="updateALLLostWarningTemp" parameterType="map">
  	UPDATE TFR.T_OPT_LOSTWARNING_TEMP T SET T.JOBID=#{jobID}
  </update>
  <!-- 更新 中间表所有数据 JOBID end-->
  
  <!-- 删除中间表所有数据  start-->
   <delete id="deleteALLLostWarningTemp" parameterType="map">
    DELETE FROM tfr.t_Opt_Lostwarning_Temp
  	</delete>
  <!-- 删除中间表所有数据  end-->
  
  <!-- 删除丢货预警 中间表数据 start-->
  <delete id="deleteLostWarningTemp" parameterType="map">
    DELETE FROM TFR.T_OPT_LOSTWARNING_TEMP T WHERE T.WAYBILL_NO=#{wayBillNo} AND T.REP_TYPE=#{repType}
  </delete>
  <!-- 删除丢货预警 中间表数据 end-->
  
  <!-- 业务查询时间限制为 上月一号 -->
  <sql id="comm_timelimit">
  	to_date(#{queryStartTime},'yyyy-mm-dd hh24:mi:ss')
  </sql>
  
  <!-- 一、同步出发库存丢货数据到中间表  快车  start -->
  <insert id="insertStartDptLostData_Fast" parameterType="map">
        insert into tfr.T_OPT_LOSTWARNING_TEMP 
 select  t.waybill_no,'1' ,sysdate,'N/A'
                    from tfr.t_opt_waybill_stock t  
                    where exists  (select 1 from pkp.t_srv_waybill wb where t.waybill_no = wb.waybill_no 
                    and   t.org_code = wb.receive_org_code 
 <![CDATA[ and wb.Customer_Pickup_Org_Code <> wb.Receive_Org_Code ]]> 
                    and wb.active='Y'
                    and wb.product_code in('AF','FLF','BGFLF','FSF','BGFSF','PACKAGE','RCP','EPEP','DEAP')
                    )   
                 <![CDATA[ and t.last_in_stock_time >= ]]> <include refid="comm_timelimit" />
                 <![CDATA[ 
                 And t.Last_In_Stock_Time <Decode(
					sign(8-To_Number(To_Char(Sysdate, 'hh24'))),-1,Trunc(Sysdate),Trunc(Sysdate-3)
					)
                 ]]> 
                 <!-- 运单已作废、中止 -->
                 and NOT EXISTS (SELECT 1
			          FROM PKP.T_SRV_ACTUAL_FREIGHT P
			        	 WHERE P.STATUS IN ('ABORTED', 'OBSOLETE')
			          	 AND P.WAYBILL_NO = t.WAYBILL_NO)
                 
   </insert>
   <!-- 一、同步出发库存丢货数据到中间表  快车  end -->
   
   <!-- 一、同步出发库存丢货数据到中间表  慢车 start-->
  <insert id="insertStartDptLostData_Slow" parameterType="map">
       insert into tfr.T_OPT_LOSTWARNING_TEMP 
 select  t.waybill_no,'1' ,sysdate,'N/A'
                    from tfr.t_opt_waybill_stock t  
                    where exists  (select 1 from pkp.t_srv_waybill wb where t.waybill_no = wb.waybill_no 
                    and   t.org_code = wb.receive_org_code 
 <![CDATA[ and wb.Customer_Pickup_Org_Code <> wb.Receive_Org_Code ]]> 
                    and wb.active='Y'
                    and wb.product_code in('LRF','SRF','BGSRF','BGLRF','YTY','DTD','PLF')
                    )   
               <![CDATA[ and t.last_in_stock_time >= ]]>  <include refid="comm_timelimit" />
               <![CDATA[ 
                And t.Last_In_Stock_Time <Decode(
					sign(8-To_Number(To_Char(Sysdate, 'hh24'))),-1,Trunc(Sysdate-3),Trunc(Sysdate-4)
					)
               ]]> 
                 <!-- 运单已作废、中止 -->
               and NOT EXISTS (SELECT 1
			          FROM PKP.T_SRV_ACTUAL_FREIGHT P
			        	 WHERE P.STATUS IN ('ABORTED', 'OBSOLETE')
			          	 AND P.WAYBILL_NO = t.WAYBILL_NO)

   </insert>
 	<!-- 一、同步出发库存丢货数据到中间表  慢车 end-->
 	
 	 <!-- 二、同步集中接货丢货数据到中间表   start -->
  <insert id="insertJZReceiveLostData" parameterType="map">
        insert into tfr.T_OPT_LOSTWARNING_TEMP 
		Select T.Waybill_No,'2' ,sysdate,'N/A'
		          From Pkp.T_Srv_Stay_Handoverdetail t, Pkp.T_Srv_Stay_Handover h
		         Where T.T_Srv_Stay_Handover_Id = H.Id
		           And H.Handover_Type = 'RECEIVE'
		           And Exists (Select 1 From  pkp.t_srv_waybill swsr
                  Where swsr.waybill_no=t.Waybill_No And swsr.active='Y')
                  <!-- 运单已作废、中止 -->
                 and NOT EXISTS (SELECT 1
			          FROM PKP.T_SRV_ACTUAL_FREIGHT P
			        	 WHERE P.STATUS IN ('ABORTED', 'OBSOLETE')
			          	 AND P.WAYBILL_NO = t.WAYBILL_NO)
			          	 
		        <![CDATA[    And H.Assign_State in ('ASSIGNED','UNASSIGN','UNLOADING')
		           And H.Create_Time >= ]]> <include refid="comm_timelimit" />
		        <![CDATA[    And H.Create_Time <= sysdate-#{hours}/24 ]]>
              
   </insert>
   <!-- 二、同步集中接货丢货数据到中间表   end -->
   
    <!--三、 同步运输丢货数据到中间表 零担  start -->
  <insert id="insertTransferLostData" parameterType="map">
        insert into tfr.T_OPT_LOSTWARNING_TEMP 
        select tt.waybill_no ,'3' ,sysdate,'N/A' from tfr.t_opt_handoverbill_detail tt
        Join tfr.t_opt_handoverbill hb On tt.handover_no=hb.handover_no
  		And hb.handoverbill_state='30'
         where exists
			 (
			select 1 from (
			select tb.bill_no from tfr.t_opt_truck_task_bill tb where tb.bill_type='HANDOVER'
			<![CDATA[ And tb.create_time>= ]]> <include refid="comm_timelimit" />
			And Tb.Bill_Level='1'
			 and  exists(
			  select 1 from tfr.t_opt_truck_task_detail t where t.status = 'ONTHEWAY'
			<![CDATA[  
			and t.plan_arrive_time>t.actual_depart_time
			and t.plan_arrive_time <= sysdate-(decode(t.business_type,'LONG_DISTANCE',#{longHours},#{shortHours})/24)]]> 
			  and tb.truck_task_detail_id=t.id
			)
			)t1 where tt.handover_no =t1.bill_no
			)
			And tt.transport_type_code In('AF','FLF','BGFLF','FSF','BGFSF','LRF','SRF','BGSRF','BGLRF','YTY','DTD','PLF')
			And Exists (Select 1 From  pkp.t_srv_waybill swsr
                  Where swsr.waybill_no=tt.Waybill_No And swsr.active='Y')
               <!-- 运单已作废、中止 -->
           and NOT EXISTS (SELECT 1
			          FROM PKP.T_SRV_ACTUAL_FREIGHT P
			        	 WHERE P.STATUS IN ('ABORTED', 'OBSOLETE')
			          	 AND P.WAYBILL_NO = tt.WAYBILL_NO)
              
   </insert>
   <!-- 三、同步运输丢货数据到中间表  零担  end -->
   <!--三、 同步运输丢货数据到中间表 快递  start -->
  <insert id="insertTransferLostData_KD" parameterType="map">
        insert into tfr.T_OPT_LOSTWARNING_TEMP 
        select tt.waybill_no ,'3' ,sysdate,'N/A' from tfr.t_opt_handoverbill_detail tt
        Join tfr.t_opt_handoverbill hb On tt.handover_no=hb.handover_no
  		And hb.handoverbill_state='30'
         where exists
			 (
			select 1 from (
			select tb.bill_no from tfr.t_opt_truck_task_bill tb where tb.bill_type='HANDOVER'
			<![CDATA[ And tb.create_time>= ]]> <include refid="comm_timelimit" />
			And Tb.Bill_Level='1'
			 and  exists(
			  select 1 from tfr.t_opt_truck_task_detail t where t.status = 'ONTHEWAY'
			<![CDATA[ 
			and t.plan_arrive_time>t.actual_depart_time
			 and t.plan_arrive_time <= sysdate-(decode(t.business_type,'LONG_DISTANCE',#{longHours},#{shortHours})/24)]]> 
			  and tb.truck_task_detail_id=t.id
			)
			)t1 where tt.handover_no =t1.bill_no
			)
			And tt.transport_type_code In('RCP','PACKAGE','EPEP','DEAP')
			And Exists (Select 1 From  pkp.t_srv_waybill swsr
                  Where swsr.waybill_no=tt.Waybill_No And swsr.active='Y') 
               <!-- 运单已作废、中止 -->
            and NOT EXISTS (SELECT 1
			    FROM PKP.T_SRV_ACTUAL_FREIGHT P
			     WHERE P.STATUS IN ('ABORTED', 'OBSOLETE')
			     AND P.WAYBILL_NO = tt.WAYBILL_NO)           
   </insert>
   <!-- 三、同步运输丢货数据到中间表  快递  end -->
   
   <!-- 四、同步已到达丢货数据到中间表    start -->
  <insert id="insertAlreadyArriveLostData" parameterType="map">
  	  insert into tfr.T_OPT_LOSTWARNING_TEMP 
  	  Select Thd.Waybill_No, '4', Sysdate,'N/A'
  From Tfr.T_Opt_Handoverbill_Detail Thd
 Inner Join (Select Tb.Bill_No, Td.Actual_Arrive_Time
               From Tfr.T_Opt_Truck_Task_Bill Tb
              Inner Join Tfr.T_Opt_Truck_Task_Detail Td
                 On Tb.Truck_Task_Detail_Id = Td.Id
              Where Tb.Bill_Type = 'HANDOVER'
              And tb.bill_level='1'
              And td.business_type In ('LONG_DISTANCE','SHORT_DISTANCE')
              <!-- modify by wwb at 2016年7月13日14:56:47  判断状态为未卸车完成 -->
              <![CDATA[And tb.assign_state <> 'UNLOADED']]>
                And Td.Status = 'ARRIVED'
				And td.actual_depart_time Is Not Null
                And td.actual_arrive_time Is Not Null
                ) T1
    On Thd.Handover_No = T1.Bill_No
    Join tfr.t_opt_handoverbill t2
    On thd.handover_no=t2.handover_no
 Where <![CDATA[ T1.Actual_Arrive_Time >=  ]]> <include refid="comm_timelimit" />
  And t2.handoverbill_state='40'
  <![CDATA[ And T1.Actual_Arrive_Time <= ]]>
       Sysdate-(Decode(Thd.Transport_Type_Code, 'PACKAGE', #{kdHours}, 'RCP', #{kdHours},'EPEP', #{kdHours},'DEAP', #{kdHours}, #{ldHours}) / 24)
       And Exists (Select 1 From  pkp.t_srv_waybill swsr
                  Where swsr.waybill_no=Thd.Waybill_No And swsr.active='Y')
         <!-- 运单已作废、中止 -->
      and NOT EXISTS (SELECT 1
    	FROM PKP.T_SRV_ACTUAL_FREIGHT P
  	 	WHERE P.STATUS IN ('ABORTED', 'OBSOLETE')
    	 AND P.WAYBILL_NO = Thd.WAYBILL_NO)
   </insert>
   <!--四、 同步已到达丢货数据到中间表    end -->
   
    <!-- 六、同步中转库存丢货数据到中间表    start -->
  <insert id="insertTransferStoreLostData" parameterType="map">
  	  insert into tfr.T_OPT_LOSTWARNING_TEMP 
		select tab.waybill_no,'6',sysdate,'N/A' from (
		select t.waybill_no,tw.last_load_org_code,t.org_code
		 from  tfr.t_opt_waybill_stock t , pkp.t_srv_waybill tw 
		  where tw.active='Y'
		  <![CDATA[ 
		  and tw.product_code In('AF','FLF','BGFLF','FSF','BGFSF','LRF','SRF','BGSRF','BGLRF','YTY','DTD','PLF','RCP','PACKAGE','EPEP','DEAP')
		  and  t.waybill_no=tw.waybill_no
		  and t.org_code<>tw.receive_org_code
		  and t.org_code<>tw.last_load_org_code
		  and t.org_code<>'W01000301050203'
		  and t.last_in_stock_time <=(sysdate-(decode(tw.product_code,'AF',#{ldFastHours},'FLF',#{ldFastHours},
		  'BGFLF',#{ldFastHours},'FSF',#{ldFastHours},'BGFSF',#{ldFastHours},
		  'PACKAGE',#{kdHours},'RCP',#{kdHours},'EPEP', #{kdHours},'DEAP', #{kdHours},#{ldSlowHours})/24))
		  ]]>
		  <![CDATA[ 
		   And  Not Exists (
                Select 1 from tfr.t_opt_air_waybill_detail tad 
                Where tad.waybill_no=t.waybill_no And tad.create_time>t.last_in_stock_time
                )
           and NOT EXISTS (SELECT 1
	    	FROM PKP.T_SRV_ACTUAL_FREIGHT P
	  	 	WHERE P.STATUS IN ('ABORTED', 'OBSOLETE')
	    	 AND P.WAYBILL_NO = t.WAYBILL_NO)
	    	 
		  And t.last_in_stock_time>=]]> <include refid="comm_timelimit" />
		   ) tab
		    Where tab.org_code Not In(
		     Select td.transfer_center From bse.T_BAS_SALES_DEPARTMENT td Where
		     td.code=tab.last_load_org_code And td.active='Y'
		    )
   </insert>
   <!--六、 同步中转库存丢货数据到中间表    end -->
   
	<!-- 七、同步已交接丢货数据到中间表    start -->
	<insert id="insertHandoverLostData" parameterType="map">
  	  insert into tfr.T_OPT_LOSTWARNING_TEMP 
       Select Waybill_No, '7', Sysdate,'N/A'
  		From (Select T.Waybill_No
          From Tfr.T_Opt_Handoverbill_Detail t 
         Where  t.transport_type_code  In ('AF','FLF','BGFLF','FSF','BGFSF','LRF','SRF','BGSRF','BGLRF','YTY','DTD','PLF')
           And Exists (Select 1
                  From Tfr.T_Opt_Handoverbill T1
                 Where T1.Handoverbill_State In (20, 21)
                <![CDATA[   And t1.load_finish_time >= ]]> <include refid="comm_timelimit" />
                 <![CDATA[  And T1.Load_Finish_Time <= Sysdate - #{handOverHours} / 24]]>
                   And T.Handover_No = T1.Handover_No)
         ) tab
                   Where Exists (Select 1 From  pkp.t_srv_waybill swsr
                  		Where swsr.waybill_no=tab.Waybill_No And swsr.active='Y')
           		<!-- 运单已作废、中止  -->
                 and NOT EXISTS (SELECT 1
			    	FROM PKP.T_SRV_ACTUAL_FREIGHT P
			  	 	WHERE P.STATUS IN ('ABORTED', 'OBSOLETE')
			    	 AND P.WAYBILL_NO = tab.WAYBILL_NO)
	</insert>
	<!--七、 同步已交接丢货数据到中间表    end -->
   
    <!-- 八、同步到达库存丢货数据到中间表    start -->
	<insert id="insertDifferStockLostData" parameterType="map">
		 insert into tfr.T_OPT_LOSTWARNING_TEMP 
			Select Distinct t1.Waybill_No,'8',SYSDATE,'N/A' From (
			Select Tab.Deptcode, Tab.Waybill_No, Tab.Serial_No, Count(1) As counts
			  From 
			  (Select Tt.Deptcode, t.Waybill_No, t.Serial_No, t.Handle_Time
			          From Tfr.t_Opt_St_Differ_Detail t
			         Inner Join Tfr.t_Opt_St_Differ_Report Tt
			            On t.St_Differ_Report_Id = Tt.Id
			            Where t.difference_type='LACK'
		                <!-- And t.handle_status='DOING' -->
		                and  t.remark IS NULL
			          <![CDATA[ 
			           and t.Handle_Time >=]]> <include refid="comm_timelimit" />
			        ) Tab
			 Group By Tab.Deptcode, Tab.Waybill_No, Tab.Serial_No
			 )t1  Where  counts >= 1  and 
			 Exists (Select 1 From  pkp.t_srv_waybill swsr
                 	 Where swsr.waybill_no=t1.Waybill_No And swsr.active='Y')
             <!-- 运单已作废、中止  -->
              and NOT EXISTS (SELECT 1
			    	FROM PKP.T_SRV_ACTUAL_FREIGHT P
			  	 	WHERE P.STATUS IN ('ABORTED', 'OBSOLETE')
			    	 AND P.WAYBILL_NO = t1.WAYBILL_NO)     
            <!--   
                  union
              Select Distinct t1.Waybill_No,'8',SYSDATE,'N/A' From (
			Select Tab.Deptcode, Tab.Waybill_No, Tab.Serial_No, Count(1) As counts
			  From 
			  (Select Tt.Deptcode, t.Waybill_No, t.Serial_No, t.Handle_Time
			          From Tfr.t_Opt_St_Differ_Detail t
			         Inner Join Tfr.t_Opt_St_Differ_Report Tt
			            On t.St_Differ_Report_Id = Tt.Id
			            Where t.difference_type='LACK'
		                And t.handle_status='DONE'
			          <![CDATA[ 
			           and t.Handle_Time >=]]> <include refid="comm_timelimit" />
			        ) Tab
			 Group By Tab.Deptcode, Tab.Waybill_No, Tab.Serial_No
			 )t1  Where Exists (Select 1 From  pkp.t_srv_waybill swsr
                 	 Where swsr.waybill_no=t1.Waybill_No And swsr.active='Y')
                运单已作废、中止 
              and NOT EXISTS (SELECT 1
			    	FROM PKP.T_SRV_ACTUAL_FREIGHT P
			  	 	WHERE P.STATUS IN ('ABORTED', 'OBSOLETE')
			    	 AND P.WAYBILL_NO = t1.WAYBILL_NO)      -->
	</insert>
	<!--八、 同步到达库存丢货数据到中间表    end -->
	
	<!-- 九、同步派送丢货数据到中间表    start -->
	<insert id="insertDeliverLostData" parameterType="map">
		<![CDATA[
		Insert Into tfr.T_OPT_LOSTWARNING_TEMP
		Select Distinct T1.Waybill_No, '9',Sysdate ,'N/A'
		  From (Select Lwd.Waybill_No,
		               t.Serial_No,
		               Lt.Orig_Org_Code,
		               Lt.Orig_Org_Name,
		               Lt.Vehicle_No,
		               Lt.Deliverbill_No
		          From Tfr.t_Opt_Load_Serialno       t,
		               Tfr.t_Opt_Load_Waybill_Detail Lwd,
		               Tfr.t_Opt_Load_Task           Lt
		         Where t.Load_Waybill_Detail_Id = Lwd.Id
		           And Lwd.Load_Task_Id = Lt.Id
		           And Lt.Task_Type = 'DELIVER_LOAD'
		           And Lt.Task_State = 'SUBMITED'
		           And Lt.Load_End_Time >= Trunc(Sysdate) - 2
		           And Lt.Load_End_Time < Trunc(Sysdate)-1) T1
		 Where Not Exists (Select 1
		          From (Select a.Waybill_No, d.Serial_No
		                  From Pkp.t_Srv_Arrivesheet a
		                 Inner Join Pkp.t_Srv_Sign_Detail d
		                    On a.Arrivesheet_No = d.Arrivesheet_No
		                   And a.Active = 'Y'
		                   And a.Status = 'SIGN'
		                   And a.create_time>trunc(sysdate)-2) T2
		         Where T1.Waybill_No = T2.Waybill_No
		           And T1.Serial_No = T2.Serial_No)
		   And Not Exists (Select 1
		          From Tfr.t_Opt_Stock s
		         Where T1.Waybill_No = s.Waybill_No
		           And T1.Serial_No = s.Serial_No)
		                  ]]>
		   and  Exists (Select 1 From  pkp.t_srv_waybill swsr
                 	 Where swsr.waybill_no=t1.Waybill_No And swsr.active='Y')
		    <!-- 运单已作废、中止  -->
              and NOT EXISTS (SELECT 1
			    	FROM PKP.T_SRV_ACTUAL_FREIGHT P
			  	 	WHERE P.STATUS IN ('ABORTED', 'OBSOLETE')
			    	 AND P.WAYBILL_NO = t1.WAYBILL_NO)     
	</insert>
	<!--九、 同步派送丢货数据到中间表    end -->	
	
	<!-- 十、同步空运丢货数据到中间表    start -->
	<insert id="insertAirTransferLostData" parameterType="map">
		insert into tfr.T_OPT_LOSTWARNING_TEMP 
		select Distinct t.waybill_no ,'10',Sysdate,'N/A' from tfr.t_opt_air_waybill_serialno s ,tfr.t_opt_air_waybill_detail t
		Where s.air_waybill_detail_id=t.id
		<![CDATA[ And t.create_time>= ]]><include refid="comm_timelimit" />
		<![CDATA[ And t.create_time<=Sysdate-#{hours}/24 ]]>
    	<!-- And Not Exists (Select 1
              From (Select a.Waybill_No, d.Serial_No
                      From Pkp.t_Srv_Arrivesheet a
                     Inner Join Pkp.t_Srv_Sign_Detail d
                        On a.Arrivesheet_No = d.Arrivesheet_No
                       And a.Active = 'Y'
                       And a.Status = 'SIGN') T2
             Where s.Waybill_No = T2.Waybill_No
               And s.Serial_No = T2.Serial_No) -->
        And Exists (Select 1 From  pkp.t_srv_waybill swsr
                  Where swsr.waybill_no=t.Waybill_No And swsr.active='Y')
   			<!-- 运单已作废、中止  -->
         and NOT EXISTS (SELECT 1
		   	FROM PKP.T_SRV_ACTUAL_FREIGHT P
		 	 	WHERE P.STATUS IN ('ABORTED', 'OBSOLETE')
		   	 AND P.WAYBILL_NO = t.WAYBILL_NO) 
		   	 <!-- 由于到达联表无外发信息，直接校验运单签收 --> 
   	  and NOT EXISTS (SELECT 1
	   		from Pkp.t_Srv_Waybill_Sign_Result r 
         	WHERE r.active = 'Y' and r.waybill_no = t.WAYBILL_NO)  
 	</insert>
	<!-- 十、 同步空运丢货数据到中间表    end -->	
	
	<!-- 十一、同步快递外发丢货数据到中间表    start -->
	<insert id="insertExpressExternalLostData" parameterType="map">
		insert into tfr.T_OPT_LOSTWARNING_TEMP 
		Select S.Waybill_No,'11',Sysdate,'N/A'
		  From Tfr.T_Opt_Ldp_External_Bill t, Tfr.T_Opt_Handoverbill_Serialno s
		 Where T.Handover_No = S.Handoverbill_No
		   And T.Waybill_No = S.Waybill_No
		   And t.audit_status='HASAUDITED'
		   <![CDATA[And T.Register_Time>=]]><include refid="comm_timelimit" />
		   <![CDATA[ And t.register_time<=Sysdate-#{hours}/24 ]]>
		   And Exists (Select 1 From  pkp.t_srv_waybill swsr
			    Where swsr.waybill_no=s.Waybill_No And swsr.active='Y')
		<!-- 运单已作废、中止  -->
         and NOT EXISTS (SELECT 1
		   	FROM PKP.T_SRV_ACTUAL_FREIGHT P
		 	 	WHERE P.STATUS IN ('ABORTED', 'OBSOLETE')
		   	 AND P.WAYBILL_NO = s.WAYBILL_NO)
		    <!-- 由于到达联表无外发信息，直接校验运单签收 --> 
   	  	and NOT EXISTS (SELECT 1
	   		from Pkp.t_Srv_Waybill_Sign_Result r 
         	WHERE r.active = 'Y' and r.waybill_no = s.WAYBILL_NO)    
	<!-- 	   And Not Exists (Select 1
		              From (Select a.Waybill_No, d.Serial_No
		                      From Pkp.t_Srv_Arrivesheet a
		                     Inner Join Pkp.t_Srv_Sign_Detail d
		                        On a.Arrivesheet_No = d.Arrivesheet_No
		                       And a.Active = 'Y'
		                       And a.Status = 'SIGN') T2
		             Where s.Waybill_No = T2.Waybill_No
		               And s.Serial_No = T2.Serial_No) -->
 	</insert>
	<!-- 十一、 同步快递外发丢货数据到中间表    end -->	
	
 <!-- 1-1. 查询出发库存丢货数据  慢车 start-->
   <select id="queryLostWarningStartDptData_Slow" parameterType="map" resultMap="queryStartDptLostWarningDataResultMap">
	 	select  t.waybill_no,t.serial_no,t.org_code, t.goods_area_code, a.goods_area_name
        from tfr.t_opt_stock t  Left Join  Bse.T_Bas_Goods_Area a On 
        t.goods_area_code=a.goods_area_code And T.Org_Code = A.Org_Code and a.active='Y' 
         where exists  (select 1 from pkp.t_srv_waybill wb where t.waybill_no = wb.waybill_no 
                    and   t.org_code = wb.receive_org_code 
             <![CDATA[ and wb.Customer_Pickup_Org_Code <> wb.Receive_Org_Code ]]> 
                    and wb.active='Y'
                    and wb.product_code in('LRF','SRF','BGSRF','BGLRF','YTY','DTD','PLF')
                    )   
       <![CDATA[  and t.in_stock_time < trunc(sysdate-1)   ]]>
       
            <!-- 运单流水号是否已经已签收  -->
            and not exists(Select 1
		  From Pkp.T_Srv_Arrivesheet a
		 Inner Join Pkp.T_Srv_Sign_Detail d
		    On A.Arrivesheet_No = D.Arrivesheet_No  And  A.Active = 'Y'
		   where  d.situation is not null
		   and a.waybill_no = t.waybill_no
		   and d.serial_no = t.serial_no) 
		<!-- 流水号是否已经无效(存在即有效) -->
		 and exists( select 1 from pkp.t_srv_labeled_good d
			where d.waybill_no = t.waybill_no
			and d.serial_no = t.serial_no
			and d.active = 'Y'	)
      
        and t.waybill_no=#{wayBillNo} order by t.serial_no
	</select>
	<!-- 1-1. 查询出发库存丢货数据 慢车 end-->
	
	 <!--1-2. 查询出发库存丢货数据 快车 start-->
   <select id="queryLostWarningStartDptData_Fast" parameterType="map" resultMap="queryStartDptLostWarningDataResultMap">
	 	select  t.waybill_no,t.serial_no,t.org_code,t.goods_area_code, a.goods_area_name
        					  from tfr.t_opt_stock t   Left Join  Bse.T_Bas_Goods_Area a On 
        					  t.goods_area_code=a.goods_area_code And T.Org_Code = A.Org_Code and a.active='Y' 
        					  where exists  (select 1 from pkp.t_srv_waybill wb where t.waybill_no = wb.waybill_no 
                    and   t.org_code = wb.receive_org_code 
         <![CDATA[ and wb.Customer_Pickup_Org_Code <> wb.Receive_Org_Code ]]> 
                    and wb.active='Y'
                    and wb.product_code in('AF','FLF','BGFLF','FSF','BGFSF','PACKAGE','RCP','EPEP','DEAP')
                    ) 
                  <!-- 运单流水号是否已经已签收  -->
              and not exists(Select 1
				  From Pkp.T_Srv_Arrivesheet a
				 Inner Join Pkp.T_Srv_Sign_Detail d
				    On A.Arrivesheet_No = D.Arrivesheet_No  And  A.Active = 'Y'
				   where  d.situation is not null
				   and a.waybill_no = t.waybill_no
				   and d.serial_no = t.serial_no) 
			<!-- 流水号是否已经无效(存在即有效) -->
			 and exists( select 1 from pkp.t_srv_labeled_good d
				where d.waybill_no = t.waybill_no
				and d.serial_no = t.serial_no
				and d.active = 'Y'	)
				
       <![CDATA[  and t.in_stock_time < trunc(sysdate)   ]]>
        and t.waybill_no=#{wayBillNo}  order by t.serial_no
	</select>
	<!--1-2. 查询出发库存丢货数据  快车end-->
	
	
    <!--2. 查询集中接货丢货数据 start-->
   <select id="queryLostWarningJZReceiveLostData" parameterType="map" resultMap="queryJZReceiveLostWarningDataResultMap">
	 select tshd.waybill_no,
	       t.serailno,
	       tsh.vehicle_no,
	       tsh.handovertask_no,
	       tsh.transfer_center,
	       e.org_code
	       from pkp.t_srv_stay_handoverserial t 
	       Inner join pkp.t_srv_stay_handoverdetail tshd on t.t_srv_stay_handoverdetail_id = tshd.id 
	       Inner join pkp.t_srv_stay_handover tsh on tshd.t_srv_stay_handover_id = tsh.id 
	       LEFT JOIN bse.t_bas_employee e ON e.emp_code = tsh.create_user_code AND e.active = 'Y'
	       where tsh.assign_state in  ('ASSIGNED','UNASSIGN','UNLOADING')
	       <![CDATA[   And tsh.handover_type= 'RECEIVE' and tsh.create_time <= sysdate-#{hours}/24  ]]>
	      <!--  And Not Exists (Select 1 From  pkp.t_srv_waybill swsr
                  Where swsr.waybill_no=tshd.Waybill_No And swsr.active='Y') -->
           <!-- 运单流水号是否已经已签收  -->
           and not exists(Select 1
			  From Pkp.T_Srv_Arrivesheet a
			 Inner Join Pkp.T_Srv_Sign_Detail d
			    On A.Arrivesheet_No = D.Arrivesheet_No  And  A.Active = 'Y'
			   where  d.situation is not null
			   and a.waybill_no = tshd.waybill_no
			   and d.serial_no = t.serailno) 
		<!-- 流水号是否已经无效(存在即有效) -->
		 and exists( select 1 from pkp.t_srv_labeled_good d
			where d.waybill_no = tshd.waybill_no
			and d.serial_no = t.serailno
			and d.active = 'Y')
			
	       and tshd.waybill_no = #{wayBillNo}
	        order by t.serailno
	</select>
    <!--2. 查询集中接货丢货数据  end-->
   
   
   <!--3. 查询运输丢货数据 零担 start-->
   <select id="queryLostWarningTransferLostData" parameterType="map" resultMap="queryTransferLostWarningDataResultMap">
	 	select hb.orig_org_code,
		       hb.orig_org_name,
		       hb.dest_org_code,
		       hb.dest_org_name,
		       hb.vehicle_no,
		       tt.waybill_no,
		       tt.serial_no,
		       tt.handoverbill_no
		  from tfr.t_opt_handoverbill_serialno tt
		  Join tfr.t_opt_handoverbill_detail hd On tt.handoverbill_no=hd.handover_no
      			And tt.waybill_no=hd.waybill_no
		 inner join tfr.t_opt_handoverbill hb
		    on tt.handoverbill_no = hb.handover_no And hb.handoverbill_state='30'
		    Inner Join pkp.t_srv_waybill w
        On tt.waybill_no=w.waybill_no
		 where exists (select 1
		          from (select tb.bill_no
		                  from tfr.t_opt_truck_task_bill tb
		                 where tb.bill_type = 'HANDOVER'
		                  And Tb.Bill_Level='1'
		                   and exists
		                 (select 1
		                          from tfr.t_opt_truck_task_detail t
		                         where t.status = 'ONTHEWAY'
		                           <![CDATA[  and t.plan_arrive_time <=
		                               sysdate - (decode(t.business_type,
		                                                 'LONG_DISTANCE',
		                                                 #{longHours},#{shortHours}) / 24)]]>
		                           and tb.truck_task_detail_id = t.id)) t1
		         where tt.handoverbill_no = t1.bill_no)
		   And w.active='Y'      
		   And w.product_code In('AF','FLF','BGFLF','FSF','BGFSF','LRF','SRF','BGSRF','BGLRF','YTY','DTD','PLF')
		   
		       <!-- 运单流水号是否已经已签收  -->
           and not exists(Select 1
			  From Pkp.T_Srv_Arrivesheet a
			 Inner Join Pkp.T_Srv_Sign_Detail d
			    On A.Arrivesheet_No = D.Arrivesheet_No  And  A.Active = 'Y'
			   where  d.situation is not null
			   and a.waybill_no =  tt.waybill_no
			   and d.serial_no = tt.serial_no) 
		<!-- 流水号是否已经无效(存在即有效) -->
		 and exists( select 1 from pkp.t_srv_labeled_good d
			where d.waybill_no =  tt.waybill_no
			and d.serial_no = tt.serial_no
			and d.active = 'Y')
		   
		   and tt.waybill_no = #{wayBillNo} order by  tt.serial_no
	
	</select>
    <!--3. 查询运输丢货数据 零担 end-->
    
    <!--3. 查询运输丢货数据  快递 start-->
   <select id="queryLostWarningTransferLostData_KD" parameterType="map" resultMap="queryTransferLostWarningDataResultMap">
	 	select hb.orig_org_code,
		       hb.orig_org_name,
		       hb.dest_org_code,
		       hb.dest_org_name,
		       hb.vehicle_no,
		       tt.waybill_no,
		       tt.serial_no,
		       tt.handoverbill_no
		  from tfr.t_opt_handoverbill_serialno tt
		  Join tfr.t_opt_handoverbill_detail hd On tt.handoverbill_no=hd.handover_no
      			And tt.waybill_no=hd.waybill_no
		 inner join tfr.t_opt_handoverbill hb
		    on tt.handoverbill_no = hb.handover_no And hb.handoverbill_state='30'
		    Inner Join pkp.t_srv_waybill w
        On tt.waybill_no=w.waybill_no
		 where exists (select 1
		          from (select tb.bill_no
		                  from tfr.t_opt_truck_task_bill tb
		                 where tb.bill_type = 'HANDOVER'
		                  And Tb.Bill_Level='1'
		                   and exists
		                 (select 1
		                          from tfr.t_opt_truck_task_detail t
		                         where t.status = 'ONTHEWAY'
		                          <![CDATA[  and t.plan_arrive_time <=
		                               sysdate - (decode(t.business_type,
		                                                 'LONG_DISTANCE',
		                                                  #{longHours},#{shortHours}) / 24)	]]>
		                           and tb.truck_task_detail_id = t.id)) t1
		         where tt.handoverbill_no = t1.bill_no)
		         And w.active='Y'      
		   And w.product_code In('RCP','PACKAGE','EPEP','DEAP')
		   
		 <!-- 运单流水号是否已经已签收  -->
           and not exists(Select 1
			  From Pkp.T_Srv_Arrivesheet a
			 Inner Join Pkp.T_Srv_Sign_Detail d
			    On A.Arrivesheet_No = D.Arrivesheet_No  And  A.Active = 'Y'
			   where  d.situation is not null
			   and a.waybill_no =  tt.waybill_no
			   and d.serial_no = tt.serial_no) 
		<!-- 流水号是否已经无效(存在即有效) -->
		 and exists( select 1 from pkp.t_srv_labeled_good d
			where d.waybill_no =  tt.waybill_no
			and d.serial_no = tt.serial_no
			and d.active = 'Y')
		   
		   and tt.waybill_no = #{wayBillNo} order by  tt.serial_no
	</select>
    <!--3. 查询运输丢货数据 快递  end-->
    
     <!--4. 查询已到达丢货数据 start-->
   <select id="queryLostWarningAlreadyArriveLostData" parameterType="map" resultMap="queryAlreadyArriveLostWarningDataResultMap">
	 	select thb.orig_org_code,
		       thb.orig_org_name,
		       thb.dest_org_code,
		       thb.dest_org_name,
		       thb.vehicle_no,
               tt.business_type,
		       t.waybill_no,
		       t.serial_no,
		       t.handoverbill_no from tfr.t_opt_handoverbill_serialno t inner join tfr.t_opt_handoverbill thb
      on t.handoverbill_no = thb.handover_no inner join  (select tab.handover_no ,tab.business_type
      from (
      select thd.handover_no, t1.actual_arrive_time,t1.business_type,
                   decode(t2.product_code, 'PACKAGE', #{kdHours}, 'RCP', #{kdHours},'EPEP', #{kdHours},'DEAP', #{kdHours}, #{ldHours}) as hours
              from tfr.t_opt_handoverbill_detail thd
             inner join (
                        select tb.bill_no, td.actual_arrive_time,td.business_type
                          from tfr.t_opt_truck_task_bill tb
                         inner join tfr.t_opt_truck_task_detail td
                            on tb.truck_task_detail_id = td.id
                         where tb.bill_type = 'HANDOVER'
                       <![CDATA[And tb.assign_state <> 'UNLOADED']]>
                         And tb.bill_level='1'
              		     And td.business_type In ('LONG_DISTANCE','SHORT_DISTANCE')
                           and td.status = 'ARRIVED') t1
                on thd.handover_no = t1.bill_no
             inner join pkp.t_srv_waybill t2
                on thd.waybill_no = t2.waybill_no
             where t2.active = 'Y'
              and thd.waybill_no=#{wayBillNo}
            ) tab
     where <![CDATA[ tab.actual_arrive_time <= sysdate - tab.hours / 24 ]]>) tt
       on t.handoverbill_no =tt.handover_no 
       Where t.waybill_no=#{wayBillNo} And thb.handoverbill_state='40'
        
      <!-- 运单流水号是否已经已签收  -->
           and not exists(Select 1
			  From Pkp.T_Srv_Arrivesheet a
			 Inner Join Pkp.T_Srv_Sign_Detail d
			    On A.Arrivesheet_No = D.Arrivesheet_No  And  A.Active = 'Y'
			   where  d.situation is not null
			   and a.waybill_no =  t.waybill_no
			   and d.serial_no = t.serial_no) 
		<!-- 流水号是否已经无效(存在即有效) -->
		 and exists( select 1 from pkp.t_srv_labeled_good d
			where d.waybill_no =  t.waybill_no
			and d.serial_no = t.serial_no
			and d.active = 'Y')
       order by  t.serial_no

	</select>
    <!--4. 查询已到达丢货数据 快车 end-->
    
    <!--6. 查询中转库存丢货数据  start-->
   <select id="queryLostWarningTransferStoreData" parameterType="map" resultMap="queryTransferStockWarningDataResultMap">
      
      select tos.waybill_no,tos.serial_no,tos.org_code,tos.goods_area_code,
	      (Select a.goods_area_name From  Bse.T_Bas_Goods_Area a 
	     	 Where a.org_code=tos.org_code And a.goods_area_code=tos.goods_area_code And a.active='Y' And Rownum=1) 
	      As goods_area_name
	     from  tfr.t_opt_waybill_stock t , pkp.t_srv_waybill tw ,tfr.t_opt_stock tos
	      where tw.product_code In ('AF','FLF','BGFLF','FSF','BGFSF','LRF','SRF','BGSRF','BGLRF','YTY','DTD','PLF','RCP','PACKAGE','EPEP','DEAP')
	      and  t.waybill_no=tw.waybill_no
	      and t.waybill_no=tos.waybill_no
	     <![CDATA[ and t.org_code <> tw.receive_org_code ]]>
	     <![CDATA[ and t.org_code <> tw.last_load_org_code ]]>
	      <![CDATA[ and t.org_code <> 'W01000301050203']]>
	      And Exists(Select 1 From bse.t_bas_org org  Where org.active='Y' 
	          And org.SALES_DEPARTMENT='N'
	          And org.code=t.org_code) 
	      and tw.active='Y'
	      and Not Exists(Select 1 From  bse.t_bas_org bs
                Where tw.active='Y'
                And Tw.Customer_Pickup_Org_Code =bs.code
               And (bs.name  Like '%派送部%'
               Or bs.name Like '%派送中心%'))
	     <![CDATA[and t.last_in_stock_time <=(sysdate-(decode(tw.product_code,'AF',#{ldFastHours},'FLF',#{ldFastHours},
		  'BGFLF',#{ldFastHours},'FSF',#{ldFastHours},'BGFSF',#{ldFastHours},
		  'PACKAGE',#{kdHours},'RCP',#{kdHours},'EPEP',#{kdHours},'DEAP',#{kdHours},#{ldSlowHours})/24))]]>
		  
		   <!-- 运单流水号是否已经已签收  -->
           and not exists(Select 1
			  From Pkp.T_Srv_Arrivesheet a
			 Inner Join Pkp.T_Srv_Sign_Detail d
			    On A.Arrivesheet_No = D.Arrivesheet_No  And  A.Active = 'Y'
			   where  d.situation is not null
			   and a.waybill_no =  tos.waybill_no
			   and d.serial_no = tos.serial_no) 
		<!-- 流水号是否已经无效(存在即有效) -->
		 and exists( select 1 from pkp.t_srv_labeled_good d
			where d.waybill_no =  tos.waybill_no
			and d.serial_no = tos.serial_no
			and d.active = 'Y')
		  
	      and t.waybill_no = #{wayBillNo} order by tos.serial_no
	      
	</select>
	<!--6. 查询中转库存丢货数据 end-->
	
	<!--7-1. 查询已交接丢货数据 - 交接单  start-->
   <select id="queryLostWarningHandoverData" parameterType="map" resultMap="queryHandoverLostWarningDataResultMap">
      select ths.waybill_no, ths.serial_no,  ths.handoverbill_no,th.orig_org_code,
	       th.orig_org_name,th.dest_org_code,th.dest_org_name,th.vehicle_no from 
			tfr.t_opt_handoverbill_serialno ths ,tfr.t_opt_handoverbill th ,pkp.t_srv_waybill tw
			where ths.waybill_no=#{wayBillNo} 
			 And Ths.Waybill_No=tw.Waybill_No
 				 <![CDATA[ And tw.product_code <> 'PLF'  ]]>
  			 		<![CDATA[ And tw.target_org_code <> Th.Orig_Org_Code ]]>
  			 		<![CDATA[ And th.handover_type <> 'PARTIALLINE_HANDOVER' ]]>
  				 And tw.active='Y'
			and ths.handoverbill_no=th.handover_no
			  <![CDATA[and th.HANDOVERBILL_STATE in (20,21) and th.load_finish_time<=sysdate-#{hours}/24 ]]>
			  
		 <!-- 运单流水号是否已经已签收  -->
           and not exists(Select 1
			  From Pkp.T_Srv_Arrivesheet a
			 Inner Join Pkp.T_Srv_Sign_Detail d
			    On A.Arrivesheet_No = D.Arrivesheet_No  And  A.Active = 'Y'
			   where  d.situation is not null
			   and a.waybill_no =  ths.waybill_no
			   and d.serial_no = ths.serial_no) 
		<!-- 流水号是否已经无效(存在即有效) -->
		 and exists( select 1 from pkp.t_srv_labeled_good d
			where d.waybill_no =  ths.waybill_no
			and d.serial_no = ths.serial_no
			and d.active = 'Y')
			  
			order by ths.serial_no
	</select>
	<!--7-1. 查询已交接丢货数据  - 交接单 end-->
	
	<!--7-2. 查询已交接丢货数据 - 派送单  start-->
   <select id="queryLostWarningHandoverData_deliver" parameterType="map" resultMap="queryHandoverDeliverWarningDataResultMap">
       <![CDATA[ 
       select t1.waybill_no,t1.serial_no,t2.deliverbill_no,t2.vehicle_no,t2.create_org_name,t2.create_org_code
		 from pkp.t_srv_deliverbill_detail t1 ,pkp.T_SRV_DELIVERBILL t2 
		where t1.t_srv_deliverbill_id=t2.id
		and  t2.Status='ASSIGNED'
		  and t2.submit_time<=sysdate-#{hours}/24
		  and t1.waybill_no=#{wayBillNo} order by t1.serial_no
	        ]]>
	</select>
	<!--7-2. 查询已交接丢货数据 - 派送单 end-->
	
	<!--8. 查询到达库存丢货数据  start-->
	<select id="queryLostWarningDifferStockData" parameterType="map" resultMap="queryDifferStockLostWarningDataResultMap">
      
		       Select t1.Deptcode,t1.Waybill_No,t1.Serial_No 
		       From (
					Select Tab.Deptcode, Tab.Waybill_No, Tab.Serial_No, Count(1) As counts
					  From 
					  (Select Tt.Deptcode, t.Waybill_No, t.Serial_No, t.Handle_Time
					          From Tfr.t_Opt_St_Differ_Detail t
					         Inner Join Tfr.t_Opt_St_Differ_Report Tt
					            On t.St_Differ_Report_Id = Tt.Id
					         Where t.Waybill_No=#{wayBillNo}
					         	And t.difference_type='LACK'
				                <!-- And t.handle_status='DOING' -->
				                and  t.remark IS NULL
					        ) Tab
					 Group By Tab.Deptcode, Tab.Waybill_No, Tab.Serial_No
				 )t1 ,Pkp.t_Srv_Waybill tw 
				 Where t1.Waybill_No = tw.Waybill_No
				 <![CDATA[  And tw.Active='Y' And tw.Product_Code <> 'WVH'  ]]>
				 
				  <!-- 运单流水号是否已经已签收  -->
		           and not exists(Select 1
					  From Pkp.T_Srv_Arrivesheet a
					 Inner Join Pkp.T_Srv_Sign_Detail d
					    On A.Arrivesheet_No = D.Arrivesheet_No  And  A.Active = 'Y'
					   where  d.situation is not null
					   and a.waybill_no =  t1.Waybill_No
					   and d.serial_no = t1.Serial_No) 
				<!-- 流水号是否已经无效(存在即有效) -->
				 and exists( select 1 from pkp.t_srv_labeled_good d
					where d.waybill_no =  t1.Waybill_No
					and d.serial_no = t1.Serial_No
					and d.active = 'Y')
				 
				 And t1.Waybill_No=#{wayBillNo}
				<!--  
				 union all
				 
				  Select t1.Deptcode,t1.Waybill_No,t1.Serial_No From (
						Select Tab.Deptcode, Tab.Waybill_No, Tab.Serial_No, Count(1) As counts
				 			 From 
						  		(Select Tt.Deptcode, t.Waybill_No, t.Serial_No, t.Handle_Time
						          From Tfr.t_Opt_St_Differ_Detail t
						         Inner Join Tfr.t_Opt_St_Differ_Report Tt
						            On t.St_Differ_Report_Id = Tt.Id
						         Where t.Waybill_No=#{wayBillNo}
						         	And t.difference_type='LACK'
					                And t.handle_status='DONE'
						        ) Tab
						Group By Tab.Deptcode, Tab.Waybill_No, Tab.Serial_No
				 )t1 ,Pkp.t_Srv_Waybill tw 
				 Where t1.Waybill_No = tw.Waybill_No
				 And tw.Active='Y' 
				 <![CDATA[  And tw.Product_Code <> 'WVH' ]]>
				 
				 运单流水号是否已经已签收 
		           and not exists(Select 1
					  From Pkp.T_Srv_Arrivesheet a
					 Inner Join Pkp.T_Srv_Sign_Detail d
					    On A.Arrivesheet_No = D.Arrivesheet_No  And  A.Active = 'Y'
					   where  d.situation is not null
					   and a.waybill_no =  t1.Waybill_No
					   and d.serial_no = t1.Serial_No) 
				流水号是否已经无效(存在即有效)
				 and exists( select 1 from pkp.t_srv_labeled_good d
					where d.waybill_no = t1.Waybill_No
					and d.serial_no = t1.Serial_No
					and d.active = 'Y')
				 
				 And t1.Waybill_No=#{wayBillNo}
	       -->
	</select>
	<!--8. 查询到达库存丢货数据  end-->
	
	
	<!--9. 查询派送丢货数据  start-->
	<select id="queryLostWarningDeliverData" parameterType="map" resultMap="queryDeliverLostWarningDataResultMap">
       Select  t1.Waybill_No, t1.Serial_No,t1.orig_org_code,t1.orig_org_name,
        t1.vehicle_no,t1.deliverbill_no,T1.Org_Id
			  From (Select Lwd.Waybill_No, t.Serial_No,lt.orig_org_code,lt.orig_org_name,
			  lt.vehicle_no,lt.deliverbill_no, K.Org_Id
			          From Tfr.t_Opt_Load_Serialno       t,
			               Tfr.t_Opt_Load_Waybill_Detail Lwd,
			               Tfr.t_Opt_Load_Task           Lt,
					     <!-- 增加车牌号判断车队 -->
			               BSE.T_BAS_OWN_TRUCK           K
			         Where t.Load_Waybill_Detail_Id = Lwd.Id
			           And Lwd.Load_Task_Id = Lt.Id
			            AND K.VEHICLE_NO = LT.VEHICLE_NO
           				AND k.active = 'Y'
			           And lwd.Waybill_No=#{wayBillNo}
			           And Lt.Task_Type = 'DELIVER_LOAD'
			           And Lt.Task_State = 'SUBMITED'
	            <![CDATA[  And lt.load_end_time<trunc(sysdate)-1 ]]>
	            <![CDATA[ And Lt.Load_End_Time >= Trunc(Sysdate) - 2 ]]>
			   ) T1
			 Where Not Exists (Select 1
			          From (Select a.Waybill_No, d.Serial_No
			                  From Pkp.t_Srv_Arrivesheet a
			                 Inner Join Pkp.t_Srv_Sign_Detail d
			                    On a.Arrivesheet_No = d.Arrivesheet_No
			                   And a.Active = 'Y'
			                   And a.Status = 'SIGN') T2
			         Where T1.Waybill_No = T2.Waybill_No
			           And T1.Serial_No = T2.Serial_No) <!-- 筛选出未签收的运单信息 -->
			           
			    	<!-- 流水号是否已经无效(存在即有效) -->
			 and exists( select 1 from pkp.t_srv_labeled_good d
				where d.waybill_no = t1.Waybill_No
				and d.serial_no = t1.Serial_No
				and d.active = 'Y')
				
			   And Not Exists (Select 1
			          From Tfr.t_Opt_Stock s
			         Where T1.Waybill_No = s.Waybill_No
			           And T1.Serial_No = s.Serial_No) 
      
    </select>
	<!--9. 查询派送丢货数据  end-->
	
	<!--10. 查询空运外发丢货数据  start-->
	<select id="queryLostWarningAirTransferData" parameterType="map" resultMap="queryAirTransferLostWarningDataResultMap">
    
     Select  w.Create_Org_Code,w.Create_Org_Name,s.waybill_no,s.serial_no,ah.air_handover_no
		  From Tfr.T_Opt_Air_Waybill_Serialno s, Tfr.T_Opt_Air_Waybill_Detail t,tfr.t_opt_air_waybill w,
		  tfr.t_opt_air_handoverbill_detail ahd,tfr.t_opt_air_handoverbill ah
		 Where S.Air_Waybill_Detail_Id = T.Id
		 And t.air_waybill_id=w.id
		 And w.air_waybill_no=ahd.air_waybill_no
		 And ahd.air_handoverbill_id=ah.id
		 <![CDATA[   And T.Create_Time <= Sysdate - #{hours}/24 ]]>
		<!--    And Not Exists (Select 1
		          From (Select A.Waybill_No, D.Serial_No
		                  From Pkp.T_Srv_Arrivesheet a
		                 Inner Join Pkp.T_Srv_Sign_Detail d
		                    On A.Arrivesheet_No = D.Arrivesheet_No
		                   And A.Active = 'Y'
		                   And A.Status = 'SIGN') T2
		         Where S.Waybill_No = T2.Waybill_No
		           And S.Serial_No = T2.Serial_No) -->
		       <!-- 外发签收不在到达联表内，直接校验运单 -->    
		           	<!-- 流水号是否已经无效(存在即有效) -->
			 and exists( select 1 from pkp.t_srv_labeled_good d
				where d.waybill_no = S.Waybill_No
				and d.serial_no = S.Serial_No
				and d.active = 'Y')
		           
		           And s.waybill_no=#{wayBillNo}  Order By s.serial_no
    
     </select>
	<!--10. 查询空运外发丢货数据  end-->
	
	<!--11. 查询快递外发丢货数据  start-->
	<select id="queryLostWarningExpressExternalData" parameterType="map" resultMap="queryExpressExternalLostWarningDataResultMap">
     
    	Select S.Waybill_No, S.Serial_No,s.handoverbill_no,t.external_org_code,t.external_org_name
		  From Tfr.T_Opt_Ldp_External_Bill t, Tfr.T_Opt_Handoverbill_Serialno s
		 Where T.Handover_No = S.Handoverbill_No
		   And T.Waybill_No = S.Waybill_No
		   And t.audit_status='HASAUDITED'
		  <![CDATA[ And t.register_time<=Sysdate-#{hours}/24   ]]>
		   <!-- And Not Exists (Select 1
		              From (Select a.Waybill_No, d.Serial_No
		                      From Pkp.t_Srv_Arrivesheet a
		                     Inner Join Pkp.t_Srv_Sign_Detail d
		                        On a.Arrivesheet_No = d.Arrivesheet_No
		                       And a.Active = 'Y'
		                       And a.Status = 'SIGN') T2
		             Where s.Waybill_No = T2.Waybill_No
		               And s.Serial_No = T2.Serial_No) -->
               		<!-- 外发签收不在到达联表内，直接校验运单 -->    
                 	<!-- 流水号是否已经无效(存在即有效) -->
					 and exists( select 1 from pkp.t_srv_labeled_good d
						where d.waybill_no = s.Waybill_No
						and d.serial_no = s.Serial_No
						and d.active = 'Y')
		               
		               And t.waybill_no=#{wayBillNo} order by S.Serial_No
               
  
     </select>
      <!-- 已交接丢货上报新增过滤条件 -->
      <!-- 通过运单号查询是该运单是否进行装车扫描、卸车扫描、单票入库、清仓扫描 -->
     <select id="querySanAndSignleInStockLostData" parameterType="java.lang.String" resultType="int">
     select count(1) from tfr.t_opt_load_task os  where os.load_end_time=(select max(ju.load_end_time)
	     from tfr.t_opt_load_task ju
	     left join tfr.t_opt_load_waybill_detail jk on ju.id = jk.load_task_id
	    where jk.waybill_no = #{wayBillNo})
	      and not exists
	      <!-- 装车扫描 -->
	    (select 1 from Tfr.T_Opt_Load_Serialno se
	             left join tfr.t_opt_load_waybill_detail wd 
	             on se.load_waybill_detail_id = wd.id
	             left join tfr.t_opt_load_task tk on wd.load_task_id = tk.id
	            where wd.waybill_no = #{wayBillNo}
	            <![CDATA[ and tk.load_start_time >= os.load_end_time ]]>
	            <![CDATA[  and se.create_time <= sysdate ]]>
	              and se.scan_state = 'SCANED')
	      and not exists
	      <!-- 卸车扫描 -->
	    (select 1
	             from Tfr.t_Opt_Unload_Serialno so
	             left join tfr.t_opt_unload_waybill_detail wl 
	             on so.unload_waybill_detail_id = wl.id
	             left join tfr.t_opt_unload_task uk on wl.unload_task_id = uk.id
	            where wl.waybill_no = #{wayBillNo}
	             <![CDATA[  and uk.unload_start_time >= os.load_end_time ]]>
	             <![CDATA[ and uk.unload_start_time <= sysdate ]]>
	              and so.scan_state = 'SCANED'
	                 )
	         <!-- 单票入库 -->        
	      and not exists(
	               Select 1
	             From Tfr.t_Opt_In_Stock ts
	            Where ts.Waybill_No = #{wayBillNo}
	              And ts.Is_Valid = 'Y'
	              and ts.in_stock_type in ('SPECIAL_AREA','PACKAGE_AREA','VALUABLE_AREA','EXCEPTION_AREA','LOSS_GOODS_FIND','SEND_RETURN','PARTIALLINE_RETURN','AIR_RETURN')
	             <![CDATA[  and ts.in_stock_time >= os.load_end_time ]]>
	             <![CDATA[ and ts.in_stock_time <= sysdate ]]>
	                )
	              <!-- 清仓扫描 -->  
	              and not exists(
	               select 1
	                     from TFR.T_OPT_ST_RESULT_LIST ad
	                     left join tfr.t_opt_st_task ps on ad.st_task_id = ps.id
	                  <![CDATA[  where ad.waybill_no = #{wayBillNo} 
	                   and ps.createtime >= os.load_end_time ]]>
	                  <![CDATA[  and ps.createtime <= sysdate ]]>
	                      and ad.scan_status in('DONE','MANUAL') 
	                )
	</select>
	 <!-- 已到达丢货上报新增过滤条件 -->
      <!-- 通过运单号查询是该运单是否进行装车扫描、卸车扫描、单票入库、清仓扫描 -->
     <select id="querySanAndSignleInStockArrive" parameterType="java.lang.String" resultType="int">
	select count(1) from  Tfr.T_Opt_Truck_Task_Detail os 
	 where os.actual_arrive_time = (Select max(T1.Actual_Arrive_Time)
  From Tfr.T_Opt_Handoverbill_Detail Thd
 Inner Join (Select Tb.Bill_No, Td.Actual_Arrive_Time
               From Tfr.T_Opt_Truck_Task_Bill Tb
              Inner Join Tfr.T_Opt_Truck_Task_Detail Td
                 On Tb.Truck_Task_Detail_Id = Td.Id
              Where Tb.Bill_Type = 'HANDOVER'
              And tb.bill_level='1'
              And td.business_type In ('LONG_DISTANCE','SHORT_DISTANCE')
             <!-- modify by wwb at 2016年7月13日14:56:47  判断状态为未卸车完成 -->
             <![CDATA[And tb.assign_state <> 'UNLOADED']]>
                And Td.Status = 'ARRIVED'
        And td.actual_depart_time Is Not Null
                And td.actual_arrive_time Is Not Null
                ) T1
    On Thd.Handover_No = T1.Bill_No 
    where Thd.Waybill_No=#{wayBillNo})
      and not exists
      <!-- 装车扫描 -->
    (select 1
             from Tfr.T_Opt_Load_Serialno se
             left join tfr.t_opt_load_waybill_detail wd on se.load_waybill_detail_id =
                                                           wd.id
             left join tfr.t_opt_load_task tk on wd.load_task_id = tk.id
            where wd.waybill_no = #{wayBillNo}
             <![CDATA[ and tk.load_start_time >= os.actual_arrive_time]]>
             <![CDATA[ and se.create_time <= sysdate]]>
              and se.scan_state = 'SCANED')
      and not exists
       <!-- 卸车扫描 -->
    (select 1
             from Tfr.t_Opt_Unload_Serialno so
             left join tfr.t_opt_unload_waybill_detail wl
              on so.unload_waybill_detail_id = wl.id
             left join tfr.t_opt_unload_task uk on wl.unload_task_id = uk.id
            where wl.waybill_no = #{wayBillNo}
            <![CDATA[  and uk.unload_start_time >= os.actual_arrive_time ]]>
            <![CDATA[  and uk.unload_start_time <= sysdate ]]>
              and so.scan_state = 'SCANED'
           
           )
      and not exists
      <!-- 单票入库 -->
      ( Select 1
             From Tfr.t_Opt_In_Stock ts
            Where ts.Waybill_No = #{wayBillNo}
              And ts.Is_Valid = 'Y'
              and ts.in_stock_type in ('SPECIAL_AREA','PACKAGE_AREA','VALUABLE_AREA','EXCEPTION_AREA','LOSS_GOODS_FIND','SEND_RETURN','PARTIALLINE_RETURN','AIR_RETURN')
            <![CDATA[  and ts.in_stock_time >= os.actual_arrive_time ]]>
            <![CDATA[  and ts.in_stock_time <= sysdate ]]>
           
            )
              and not exists
              <!-- 清仓扫描 -->  
           (select 1
                     from TFR.T_OPT_ST_RESULT_LIST ad
                     left join tfr.t_opt_st_task ps 
                     on ad.st_task_id = ps.id
                    where ad.waybill_no= #{wayBillNo}
                    <![CDATA[  and ps.createtime >= os.actual_arrive_time ]]>
                    <![CDATA[  and ps.createtime <= sysdate ]]>
                      and ad.scan_status in('DONE','MANUAL') 
                      )
   	</select>
	  <!-- 集中接货丢货上报新增过滤条件 -->
      <!-- 通过运单号查询是该运单是否进行装车扫描、卸车扫描、单票入库、清仓扫描 -->
     <select id="querySanAndSignleInStockJZReceive" parameterType="java.lang.String" resultType="java.lang.String">
	  Select T.Waybill_No
                From Pkp.T_Srv_Stay_Handoverdetail t, Pkp.T_Srv_Stay_Handover h
               Where T.T_Srv_Stay_Handover_Id = H.Id
                 And H.Handover_Type = 'RECEIVE'
                 and t.waybill_no= #{wayBillNo}
                 and not exists
          <!-- 装车扫描 -->
      (select 1
               from Tfr.T_Opt_Load_Serialno se
               left join tfr.t_opt_load_waybill_detail wd on se.load_waybill_detail_id =
                                                             wd.id
               left join tfr.t_opt_load_task tk on wd.load_task_id = tk.id
              where wd.waybill_no = t.waybill_no
               <![CDATA[ and tk.load_start_time >= H.Create_Time ]]>
               <![CDATA[ and se.create_time <= sysdate ]]>
                and se.scan_state = 'SCANED')
        and not exists
        <!-- 卸车扫描 -->
      (select 1
               from Tfr.t_Opt_Unload_Serialno so
               left join tfr.t_opt_unload_waybill_detail wl on so.unload_waybill_detail_id =
                                                               wl.id
               left join tfr.t_opt_unload_task uk on wl.unload_task_id = uk.id
              where wl.waybill_no = t.waybill_no
              <![CDATA[  and uk.unload_start_time >= H.Create_Time]]>
              <![CDATA[  and uk.unload_start_time <= sysdate ]]>
                and so.scan_state = 'SCANED'
             
             )
         <!-- 单票入库 -->
        and not exists(
                 Select 1
               From Tfr.t_Opt_In_Stock ts
              Where ts.Waybill_No = t.waybill_no
                And ts.Is_Valid = 'Y'
                and ts.in_stock_type in ('SPECIAL_AREA','PACKAGE_AREA','VALUABLE_AREA','EXCEPTION_AREA','LOSS_GOODS_FIND','SEND_RETURN','PARTIALLINE_RETURN','AIR_RETURN')
               <![CDATA[ and ts.in_stock_time >= H.Create_Time]]>
               <![CDATA[ and ts.in_stock_time <= sysdate ]]>
             
              )
              <!-- 清仓扫描 --> 
                and not exists(
                 select 1
                       from TFR.T_OPT_ST_RESULT_LIST ad
                       left join tfr.t_opt_st_task ps on ad.st_task_id =
                                                         ps.id
                      where ad.waybill_no=t.waybill_no
                      <![CDATA[  and  ps.createtime >= H.Create_Time ]]>
                      <![CDATA[  and ps.createtime <= sysdate ]]>
                        and ad.scan_status in('DONE','MANUAL') 
                        )

	</select>
	<!-- 运输丢货上报新增过滤条件 -->
      <!-- 通过运单号查询是该运单是否进行装车扫描、卸车扫描、单票入库、清仓扫描 -->
     <select id="querySanAndSignleInStockTransfer" parameterType="java.lang.String" resultType="int">
 select count(1) from  Tfr.T_Opt_Truck_Task_Detail os 
  where os.actual_depart_time =(Select max(T1.ACTUAL_DEPART_TIME)
     From Tfr.T_Opt_Handoverbill_Detail Thd
     Inner Join (Select Tb.Bill_No, Td.Actual_Depart_Time  From Tfr.T_Opt_Truck_Task_Bill Tb
          Inner Join Tfr.T_Opt_Truck_Task_Detail Td 
          On Tb.Truck_Task_Detail_Id = Td.Id and Td.status = 'ONTHEWAY'
          and Td.plan_arrive_time > Td.actual_depart_time)T1 
          On Thd.Handover_No = T1.Bill_No
          and Thd.Waybill_No = #{wayBillNo})
          and not exists
          <!-- 装车扫描 -->
          (select 1
                   from Tfr.T_Opt_Load_Serialno se
                   left join tfr.t_opt_load_waybill_detail wd 
                   on se.load_waybill_detail_id = wd.id
                   left join tfr.t_opt_load_task tk on wd.load_task_id = tk.id
                  where wd.waybill_no = #{wayBillNo}
                   <![CDATA[ and tk.load_start_time >= os.actual_depart_time]]>
                   <![CDATA[and se.create_time <= sysdate ]]>
                    and se.scan_state = 'SCANED')
            and not exists
            <!-- 卸车扫描 -->
          (select 1
                   from Tfr.t_Opt_Unload_Serialno so
                   left join tfr.t_opt_unload_waybill_detail wl 
                   on so.unload_waybill_detail_id = wl.id
                   left join tfr.t_opt_unload_task uk on wl.unload_task_id = uk.id
                  where wl.waybill_no = #{wayBillNo}
                   <![CDATA[ and uk.unload_start_time >= os.actual_depart_time ]]>
                   <![CDATA[ and uk.unload_start_time <= sysdate ]]>
                    and so.scan_state = 'SCANED'
                 
                 )
            and not exists
            <!-- 单票入库 -->
            (Select 1
                   From Tfr.t_Opt_In_Stock ts
                  Where ts.Waybill_No = #{wayBillNo}
                    And ts.Is_Valid = 'Y'
                    and ts.in_stock_type in ('SPECIAL_AREA','PACKAGE_AREA','VALUABLE_AREA','EXCEPTION_AREA','LOSS_GOODS_FIND','SEND_RETURN','PARTIALLINE_RETURN','AIR_RETURN')
                    <![CDATA[ and ts.in_stock_time >= os.actual_depart_time]]>
                    <![CDATA[ and ts.in_stock_time <= sysdate ]]>
                  )
             and not exists
             <!-- 清仓扫描 --> 
             (select 1
                  from TFR.T_OPT_ST_RESULT_LIST ad
                 left join tfr.t_opt_st_task ps on ad.st_task_id = ps.id
                 where ad.waybill_no=#{wayBillNo}
                   <![CDATA[ and ps.createtime >= os.actual_depart_time]]>
                   <![CDATA[ and ps.createtime <= sysdate ]]>
                    and ad.scan_status in('DONE','MANUAL') 
                  )
	</select>
	<!-- 到达库存丢货上报新增过滤条件 -->
    <!-- 通过运单号查询是该运单是否进行装车扫描、卸车扫描、单票入库、清仓扫描 -->
	<select id="querySanAndSignleInStockIDifferStock" parameterType="java.lang.String" resultType="java.lang.String">
  select /*模块：中转到达库存添加过滤条件*/ 
     sf.waybill_no
     from tfr.t_opt_st_task st
     left join tfr.t_opt_st_differ_report sr on st.id = sr.st_task_id
      left join tfr.t_opt_st_differ_detail sf on sr.id = sf.st_differ_report_id
      where sf.waybill_no = #{wayBillNo}
          and not exists
          <!-- 装车扫描 -->
          (select 1
                   from Tfr.T_Opt_Load_Serialno se
                   left join tfr.t_opt_load_waybill_detail wd 
                   on se.load_waybill_detail_id = wd.id
                   left join tfr.t_opt_load_task tk on wd.load_task_id = tk.id
                  where wd.waybill_no = sf.waybill_no
                   <![CDATA[ and tk.load_start_time >= st.createtime]]>
                   <![CDATA[and se.create_time <= sysdate ]]>
                    and se.scan_state = 'SCANED')
            and not exists
            <!-- 卸车扫描 -->
          (select 1
                   from Tfr.t_Opt_Unload_Serialno so
                   left join tfr.t_opt_unload_waybill_detail wl 
                   on so.unload_waybill_detail_id = wl.id
                   left join tfr.t_opt_unload_task uk on wl.unload_task_id = uk.id
                  where wl.waybill_no = sf.waybill_no
                   <![CDATA[ and uk.unload_start_time >= st.createtime ]]>
                   <![CDATA[ and uk.unload_start_time <= sysdate ]]>
                    and so.scan_state = 'SCANED'
                 
                 )
            and not exists
            <!-- 单票入库 -->
            (Select 1
                   From Tfr.t_Opt_In_Stock ts
                  Where ts.Waybill_No = sf.waybill_no
                    And ts.Is_Valid = 'Y'
                    and ts.in_stock_type in ('SPECIAL_AREA','PACKAGE_AREA','VALUABLE_AREA','EXCEPTION_AREA','LOSS_GOODS_FIND','SEND_RETURN','PARTIALLINE_RETURN','AIR_RETURN')
                    <![CDATA[ and ts.in_stock_time >= st.createtime]]>
                    <![CDATA[ and ts.in_stock_time <= sysdate ]]>
                  )
             and not exists
             <!-- 清仓扫描 --> 
             (select 1
                  from TFR.T_OPT_ST_RESULT_LIST ad
                 left join tfr.t_opt_st_task ps on ad.st_task_id = ps.id
                 where ad.waybill_no=sf.waybill_no
                   <![CDATA[ and ps.createtime >= st.createtime]]>
                   <![CDATA[ and ps.createtime <= sysdate ]]>
                    and ad.scan_status in('DONE','MANUAL') 
                  )
	</select>
	<!--11. 查询快递外发丢货数据  end-->
	
</mapper>