<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tfr-arrival">
	<resultMap id="ArrivalInfoResultMap"
		type="com.deppon.foss.module.transfer.arrival.api.shared.domain.ArrivalEntity">
		<id column="idd" property="id" />
		<result column="vehicle_no" property="vehicleNo" />
		<result column="line_name" property="lineNo" />
		<result column="orig_org_name" property="origOrgName" />
		<result column="dest_org_name" property="destOrgName" />
		<result column="orig_org_code" property="origOrgCode" />
		<result column="dest_org_code" property="destOrgCode" />
		<result column="actual_depart_time" property="actualDepartTime" />
		<result column="manual_confirm_depart_time" property="manualConfirmDepartTime" />
		<result column="manual_depart_time" property="manualDepartTime" />
		<result column="pda_depart_time" property="pdaDepartTime" />
		<result column="gps_depart_time" property="gpsDepartTime" />
		<result column="pda_arrive_time" property="pdaArriveTime" />
		<result column="gps_arrive_time" property="gpsArriveTime" />
		<result column="manual_arrive_time" property="manualArriveTime" />
		<result column="actual_arrive_time" property="actualArrivalTime" />
		<result column="plan_arrive_time" property="planArrivalTime" />
		<result column="plan_depart_time" property="planDepartTime" />
		<result column="status" property="arrivalStatus" />
		<result column="bagId" property="certificteBagStatus" />
		<result column="platform_distribute_id" property="platformStatus" />
		<result column="unverify_amount" property="fee" />
		<result column="loader_name" property="loader" />
		<result column="driver_code" property="driverCode" />
		<result column="actual_depart_type" property="actualDepartType" />
		<result column="actual_arrive_type" property="actualArriveType" />
		<result column="detail_status" property="detailStatus" />
		<result column="truck_task_id" property="truckTaskId" />
		<result column="truck_arrive_id" property="truckArriveId" />
		<result column="FREQUENCY_NO" property="frequencyNo" />
		<result column="LINE_VIRTUAL_CODE" property="lineVirtualCode" />
		<result column="vehicle_owner_type" property="vehicleOwnerType" />
		<result column="be_car_load" property="beCarLoad" />
		<result column="VEHICLE_ORG_CODE" property="truckOrgCode" />
		<result column="BUSINESS_TYPE" property="businessType" />
		<result column="ARRIVE_CHECK_TIME" property="arrCheckTime" />
	    <result column="check_type" property="checkType" />
	    <result column="platformCode" property="platformCode" />
		<result column="charging_assmeble_no" property="chargingAssmebleNo"/>
	</resultMap>
		
		<!--二程接驳结果集-->
		<resultMap id="SecondCarDepartureInfoResultMap"
		type="com.deppon.foss.module.transfer.arrival.api.shared.domain.ArrivalEntity">
		<result column="vehicle_no" property="vehicleNo" />
		<result column="orig_org_name" property="origOrgName" />
		<result column="dest_org_name" property="destOrgName" />
		<result column="orig_org_code" property="origOrgCode" />
		<result column="dest_org_code" property="destOrgCode" />
		<result column="arrival_status" property="arrivalStatus" />
		<result column="create_user_name" property="loader" />
		<result column="connection_bill_no" property="connectionBillNo" />
		<result column="arrival_time" property="arrivalTime" />
		<result column="depart_time" property="departTime" />
		<result column="handover_no" property="handoverNo" />
		<result column="depart_operator" property="departOperator" />
		<result column="arrival_operator" property="arrivalOperator" />
		
		
	</resultMap>
	
	
	
	
	<resultMap id="LeasedTruckResultMap"
		type="com.deppon.foss.module.transfer.arrival.api.shared.dto.LeasedTruckDTO">
		<result column="start_time" property="startTime" />
		<result column="end_time" property="endTime" />
		<result column="total_tructs" property="totalTrucks" />
		<result column="total_fee" property="totalFee" />
	</resultMap>
	
	<resultMap id="TodoWhenArriveTruckResultMap"
		type="com.deppon.foss.module.transfer.arrival.api.shared.domain.TodoWhenArriveTruckEntity">
		<result column="draft_time" property="discoverTime" />
		<result column="serial_no" property="serialNo" />
		<result column="waybill_no" property="waybillNo" />
		<result column="dest_org_code" property="destOrgCode" />
		<result column="dest_org_name" property="destOrgName" />
		<result column="handover_no" property="handoverNo" />
		<result column="vehicleassemble_no" property="vehicleassembleNo" />
	</resultMap>
	
	<resultMap id="OperationResultMap"
		type="com.deppon.foss.module.transfer.arrival.api.shared.dto.OperationDTO">
		<result column="id" property="id" />
		<result column="plan_arrive_time" property="planArrivalTime" />
		<result column="truck_arrive_id" property="truckArriveId" />
		<result column="be_car_load" property="beCarLoad" />
		<result column="status" property="vehicleStatus" />
		<result column="actual_depart_type" property="actualDepartType" />
		<result column="actual_depart_time" property="actualDepartTime" />
		<result column="manual_depart_time" property="manualDepartTime" />
		<result column="actual_arrive_type" property="actualArriveType" />
		<result column="truck_task_id" property="truckTaskId" />
		<result column="line_name" property="lineName" />
		<result column="vehicle_no" property="vehicleNo" />
		<result column="orig_org_code" property="origOrgCode" />
		<result column="dest_org_code" property="destOrgCode" />
	</resultMap>
	
	<resultMap id="TruckActionDetailDtoResultMap"
		type="com.deppon.foss.module.transfer.arrival.api.shared.dto.TruckActionDetailDto">
		<result column="vehicleNo" property="vehicleNo" />
		<result column="lineName" property="lineName" />
		<result column="operatorName" property="operatorName" />
		<result column="operatorCode" property="operatorCode" />
		<result column="orgName" property="orgName" />
		<result column="orgCode" property="orgCode" />
		<result column="createTime" property="createTime" />
	</resultMap>
	
	<resultMap id="TruckActionDtoResultMap" type="com.deppon.foss.module.transfer.arrival.api.shared.domain.TruckArrivalEntity">
		<result column="create_user_code" property="createUserCode" />
		<result column="create_user_name" property="createUserName" />
		<result column="create_org_code" property="createOrgCode" />
	</resultMap>

	<!-- 查询临时任务 -->
	<select id="queryArrivalGrid" resultMap="ArrivalInfoResultMap">
	<!-- SELECT TAB.*, S.check_time ARRIVE_CHECK_TIME,s.check_type 
	 FROM ( -->
		select 
		detail.id as idd,
		ta.driver_code1 as driver_code,
		detail.vehicle_no,
	       detail.line_name,
	       detail.orig_org_name,
	       detail.dest_org_name,
	       detail.orig_org_code,
	       detail.dest_org_code,
	       detail.actual_depart_time,
	       detail.manual_depart_time as manual_confirm_depart_time,
	       detail.manual_arrive_time,
	       detail.actual_arrive_time,
	       detail.plan_arrive_time,
	       detail.plan_depart_time,
	       detail.loader_name,
	       detail.business_type,
	       detail.vehicle_owner_type,
	       arr.status,
	       detail.status as detail_status,
	       ta.charging_assmeble_no,
	       (select sum(unverify_amount)/100
	          from stl.t_stl_bill_payable
	         where ta.charging_assmeble_no = source_bill_no and active='Y' and BILL_TYPE in ('TF1','TL1','TF2','TL2')) unverify_amount,
	       bag.id as bagId,
	       detail.platform_distribute_id,
	       detail.actual_depart_type,
	       detail.actual_arrive_type,
	       ta.id as truck_task_id,
	       arr.id as truck_arrive_id,
	       detail.FREQUENCY_NO,
	       detail.LINE_VIRTUAL_CODE,
	       detail.be_car_load,
	       detail.VEHICLE_ORG_CODE,
	       de.PDA_DEPART_TIME,
	       nvl(de.GPS_DEPART_TIME,ts.gps_depart_time) GPS_DEPART_TIME,
	       arr.PDA_ARRIVE_TIME,
	       arr.GPS_ARRIVE_TIME,
	       de.manual_depart_time,
	       ven.modify_time ARRIVE_CHECK_TIME,
           ven.platform_code platformCode
	  from tfr.t_opt_truck_task_detail detail
      left join tfr.t_opt_truck_arrive arr
		    on detail.truck_arrive_id = arr.id
      left join tfr.t_opt_truck_task ta
		    on detail.truck_task_id = ta.id
	  left join tfr.t_opt_certificatebag_action bag
	    on ta.id = bag.truck_task_id
	  left join tfr.t_opt_truck_depart de
         on detail.truck_depart_id = de.id
      left join tfr.t_opt_truck_gps_task ts
         on ts.truck_task_detail_id = detail.id 
      left join tfr.t_opt_vehicle_entrance ven
         on ven.truck_task_id= detail.truck_task_id
		<include refid="select_Where" />
	  <!-- ) TAB
     LEFT JOIN TFR.T_OPT_SEAL S
         ON TAB.TRUCK_TASK_ID = S.T_TRUCK_TASK_DETAIL_ID -->
       <!--  WHERE EXISTS (SELECT 1
                        FROM TFR.T_OPT_SEAL_DEST_DETAIL SD
                            WHERE SD.SEAL_ID = S.ID) -->

	</select>
	
	<!-- 查询临时任务 -->
	<select id="queryLeasedTruck" resultMap="LeasedTruckResultMap">
		select  nvl(sum((select sum(unverify_amount)/100
            from stl.t_stl_bill_payable
           where ta.charging_assmeble_no = source_bill_no and active='Y' and BILL_TYPE in ('TF1','TL1','TF2','TL2')) ),0) total_fee,
           nvl(sum((select count(1) from  tfr.t_opt_truck_task_detail where  id=detail.id and VEHICLE_OWNER_TYPE='Leased')),0)total_tructs
        from tfr.t_opt_truck_task_detail detail
        left join tfr.t_opt_truck_arrive arr
          on detail.truck_arrive_id = arr.id
        left join tfr.t_opt_truck_task ta
          on detail.truck_task_id = ta.id
      left join tfr.t_opt_certificatebag_action bag
        on ta.id = bag.truck_task_id
     <!--  left join tfr.t_opt_truck_depart de
        on detail.truck_depart_id = de.id -->
		<include refid="select_Where" />
	</select>
	
	<!-- 查询外请车计费配载单号 -->
	<select id="queryLeasedTruckAssmebleNo" resultType="java.lang.String" >
		select   ta.charging_assmeble_no
        from tfr.t_opt_truck_task_detail detail
        left join tfr.t_opt_truck_arrive arr
          on detail.truck_arrive_id = arr.id
        left join tfr.t_opt_truck_task ta
          on detail.truck_task_id = ta.id
      left join tfr.t_opt_certificatebag_action bag
        on ta.id = bag.truck_task_id
		<include refid="select_Where" />
	</select>
	
	<!-- 查询临时任务 -->
	<select id="getArrivalCount" resultType="Long" parameterType="com.deppon.foss.module.transfer.arrival.api.shared.domain.QueryArrivalEntity">
		select count(1)
		from tfr.t_opt_truck_task_detail detail
		left join tfr.t_opt_truck_arrive arr
		on detail.truck_arrive_id = arr.id
		left join tfr.t_opt_truck_task ta
		on detail.truck_task_id = ta.id
		<!-- left join stl.t_stl_bill_payable pay
		on ta.charging_assmeble_no = pay.payable_no -->
		left join tfr.t_opt_certificatebag_action bag
		on ta.id = bag.truck_task_id
		<!-- left join tfr.t_opt_truck_depart de
    	on detail.truck_depart_id = de.id -->
<!-- 		 left join tfr.t_opt_truck_task_bill bi
        on de.id = bi.truck_task_detail_id -->
		<include refid="select_Where" />
	</select>
	
	<!-- 返回该车辆任务是否有被GPS跟踪的记录 -->
	<select id="hasTruckTaskTracking" resultType="Long" parameterType="String">
		SELECT COUNT(1)
		  FROM TFR.T_OPT_TRUCK_TASK_TRACKING T
		 WHERE T.TRUCK_TASK_DETAIL_ID = #{truckTaskDetailId}
	</select>
	
	<!-- 查看该条信息是不是最后一条未到达的任务 -->
	<select id="isLastTask" resultType="Long" parameterType="com.deppon.foss.module.transfer.arrival.api.shared.domain.ArrivalEntity">
		select count(1)
		from tfr.t_opt_truck_task_detail detail
		where
		<![CDATA[
		 id!=#{id}  
		 ]]>
		 and TRUCK_TASK_ID=#{truckTaskId}
		 <if test="detailStatus=='ARRIVED'">
		    and STATUS in ('UNDEPART','ONTHEWAY','HALFWAY_ARRIVE') 
		 </if>
		 <if test="detailStatus=='ONTHEWAY'">
		    and STATUS in ('UNDEPART') 
		 </if>
	</select>
	
	<!-- 查询到达界面数据的条件 -->
	<sql id="select_Where">
		<where>
			<if test="billNo!=null and billNo!='' ">
				<!-- AND bi.bill_no = #{billNo} -->
				exists (select 1 from tfr.t_opt_truck_task_bill where TRUCK_TASK_DETAIL_ID = detail.id and bill_no=#{billNo})
			</if>
			<if test="lineNo!=null and lineNo!='' ">
				AND detail.line_NAME = #{lineNo}
			</if>
			<if test="vehicleNo!=null and vehicleNo!='' ">
				AND detail.VEHICLE_NO = #{vehicleNo}
			</if>
			AND detail.VEHICLE_NO ! = '营HBZY'
			<if test="certificaterBagStatus==2">
				 and exists (select * from tfr.t_opt_certificatebag_action c where ta.id = c.truck_task_id and  c.CERTIFICATEBAG_STATUS = 'Y')
			</if>
			<if test="certificaterBagStatus==1">
				 and not exists (select * from tfr.t_opt_certificatebag_action c where ta.id = c.truck_task_id and  c.CERTIFICATEBAG_STATUS = 'Y')
			</if>
			<!-- 时间类型是全部，用创建时间来筛选 -->
			<if test="billNo==null or billNo=='' ">
			<if test="timeType==0">
			    <if test="startTime!=null">
				<![CDATA[
			       AND detail.CREATE_TIME>=#{startTime}
				]]>
			    </if>
			    <if test="endTime!=null">
			    <![CDATA[
			       AND detail.CREATE_TIME<=#{endTime}
			       ]]>
			    </if>
			</if>
			<!-- 时间类型是出发时间 -->
			<if test="timeType==1">
			    <if test="startTime!=null">
				<![CDATA[
			       AND detail.ACTUAL_DEPART_TIME>=#{startTime}
				]]>
			    </if>
			    <if test="endTime!=null">
			    <![CDATA[
			       AND detail.ACTUAL_DEPART_TIME<=#{endTime}
			       ]]>
			    </if>
			</if>
			
			<!-- 时间类型是预计到达时间 -->
			<if test="timeType==2">
			    <if test="startTime!=null">
				<![CDATA[
			       AND detail.PLAN_ARRIVE_TIME>=#{startTime}
				]]>
			    </if>
			    <if test="endTime!=null">
			    <![CDATA[
			       AND detail.PLAN_ARRIVE_TIME<=#{endTime}
			       ]]>
			    </if>
			</if>
			<!-- 时间类型是到达时间 -->
			<if test="timeType==3">
				 <if test="startTime!=null">
				<![CDATA[
			       AND detail.ACTUAL_ARRIVE_TIME>=#{startTime}
				]]>
			    </if>
			    <if test="endTime!=null">
			    <![CDATA[
			       AND detail.ACTUAL_ARRIVE_TIME<=#{endTime}
			       ]]>
			    </if>
			</if>
			</if>
			<!-- 车辆归属部门 -->
			<if test="truckOrgCode!=null and truckOrgCode!='' ">
				AND detail.VEHICLE_ORG_CODE = #{truckOrgCode}
			</if>
			<!-- 月台分配 （已分配） -->
			<if test="platformStatus=='ALLOCATION' ">
				AND detail.PLATFORM_DISTRIBUTE_ID is not null
			</if>
			<!-- 月台分配 （未分配） -->
			<if test="platformStatus=='NOT_ALLOCATION' ">
				AND detail.PLATFORM_DISTRIBUTE_ID is null
			</if>
			<!-- 车辆业务类型 -->
			<if test="businessType!=null and businessType!='ALL' ">
				AND detail.business_Type = #{businessType}
			</if>
			<!-- 到达情况(已到，晚到)-->
			<if test="arrivalStatus!=null and arrivalStatus!='ALL' and arrivalStatus!='NOT_ARRIVED' ">
				AND arr.status = #{arrivalStatus}
			</if>
			<!-- 到达情况(未到)-->
			<if test="arrivalStatus=='NOT_ARRIVED' ">
				and detail.truck_arrive_id is null
			</if>
			<!-- 出发部门-->
			<if test="origOrgCode!=null and origOrgCode!='' ">
				AND detail.ORIG_ORG_CODE = #{origOrgCode}
			</if>
			<if test="origOrgCodes!=null">
				AND detail.ORIG_ORG_CODE IN
				<foreach collection="origOrgCodes" open="(" close=")"
					separator="," index="index" item="item">
					#{item}
				</foreach>
			</if>
			<if test="ids!=null">
				AND detail.id IN
				<foreach collection="ids" open="(" close=")"
					separator="," index="index" item="item">
					#{item}
				</foreach>
			</if>
			<!-- 到达情况-->
			<if test="destOrgCode!=null and destOrgCode!='' ">
				AND detail.DEST_ORG_CODE = #{destOrgCode}
			</if>
			<if test="destOrgCodes!=null">
				AND detail.DEST_ORG_CODE IN
				<foreach collection="destOrgCodes" open="(" close=")"
					separator="," index="index" item="item">
					#{item}
				</foreach>
			</if>
			<!--结算情况未结清-->
			<if test="clearingStatus==2 ">
			<![CDATA[
				AND (select  nvl(sum(unverify_amount),0)
		          from stl.t_stl_bill_payable
		         where ta.charging_assmeble_no = source_bill_no and active='Y' and BILL_TYPE in ('TF1','TL1','TF2','TL2'))>0
		         ]]>
			</if>
			<!--结算情况 已结清-->
			<if test="clearingStatus==1">
			<![CDATA[
				AND (select  nvl(sum(unverify_amount),0)
		          from stl.t_stl_bill_payable
		         where ta.charging_assmeble_no = source_bill_no and active='Y' and BILL_TYPE in ('TF1','TL1','TF2','TL2'))<=0
		         ]]>
			</if>
			<!--车辆归属类型-->
			<if test="vehicleOwnerType!=null and vehicleOwnerType!='ALL'  and vehicleOwnerType!='' ">
				AND detail.vehicle_Owner_Type = #{vehicleOwnerType}
			</if>
			<!--只能查询出发部门或者到达部门为当前用户所在外场的数据-->
			<if test="currentOrgCode!=null and currentOrgCode!='' ">
				and (detail.ORIG_ORG_CODE=#{currentOrgCode} or detail.DEST_ORG_CODE=#{currentOrgCode})
				</if>
				and detail.status!='CANCLED'
		</where>
	</sql>
	
	<!-- 查询任务车辆明细里的交接单。配载单-->
	<select id="queryBillNos" resultMap="ArrivalInfoResultMap">
		select  d.id,Wm_concat(b.bill_no) billNos
		from tfr.t_opt_truck_task_detail d
		left join tfr.t_opt_truck_task_bill b
    	on d.id = b.truck_task_detail_id and b.bill_level='1'
		where d.id IN
		<foreach collection="ids" open="(" close=")"
			separator="," index="index" item="item">
			#{item}
		</foreach>
		 group by d.id
	</select>
	
	<insert id="insertTruckArrival" parameterType="com.deppon.foss.module.transfer.arrival.api.shared.domain.TruckArrivalEntity" >
    insert into TFR.T_OPT_TRUCK_ARRIVE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="vehicleNo != null" >
        VEHICLE_NO,
      </if>
      <if test="pdaArriveUserCode != null" >
        PDA_ARRIVE_USER_CODE,
      </if>
      <if test="pdaArriveOrgCode != null" >
        PDA_ARRIVE_ORG_CODE,
      </if>
      <if test="pdaTerminalNo != null" >
        PDA_TERMINAL_NO,
      </if>
      <if test="pdaArriveTime != null" >
        PDA_ARRIVE_TIME,
      </if>
      <if test="gpsArriveTime != null" >
        GPS_ARRIVE_TIME,
      </if>
      <if test="manualArriveUserCode != null" >
        MANUAL_ARRIVE_USER_CODE,
      </if>
      <if test="manualArriveOrgCode != null" >
        MANUAL_ARRIVE_ORG_CODE,
      </if>
      <if test="manualArriveTime != null" >
        MANUAL_ARRIVE_TIME,
      </if>
      <!-- <if test="platformDistributeId != null" >
        PLATFORM_DISTRIBUTE_ID,
      </if> -->
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="createUserCode != null" >
        CREATE_USER_CODE,
      </if>
      <if test="createUserName != null" >
        CREATE_USER_NAME,
      </if>
      <if test="createOrgCode != null" >
        CREATE_ORG_CODE,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="updateUserCode != null" >
        UPDATE_USER_CODE,
      </if>
      <if test="updateUserName != null" >
        UPDATE_USER_NAME,
      </if>
      <if test="updateOrgCode != null" >
        UPDATE_ORG_CODE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="vehicleNo != null" >
        #{vehicleNo,jdbcType=VARCHAR},
      </if>
      <if test="pdaArriveUserCode != null" >
        #{pdaArriveUserCode,jdbcType=VARCHAR},
      </if>
      <if test="pdaArriveOrgCode != null" >
        #{pdaArriveOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="pdaTerminalNo != null" >
        #{pdaTerminalNo,jdbcType=VARCHAR},
      </if>
      <if test="pdaArriveTime != null" >
        #{pdaArriveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gpsArriveTime != null" >
        #{gpsArriveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="manualArriveUserCode != null" >
        #{manualArriveUserCode,jdbcType=VARCHAR},
      </if>
      <if test="manualArriveOrgCode != null" >
        #{manualArriveOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="manualArriveTime != null" >
        #{manualArriveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserCode != null" >
        #{createUserCode,jdbcType=VARCHAR},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createOrgCode != null" >
        #{createOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserCode != null" >
        #{updateUserCode,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null" >
        #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateOrgCode != null" >
        #{updateOrgCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <!-- 打印纸质放行条 -->
	<update id="updateTruckArrival"
		parameterType="com.deppon.foss.module.transfer.arrival.api.shared.domain.TruckArrivalEntity">
		UPDATE TFR.T_OPT_TRUCK_ARRIVE
		<set>
			<if test="status!=null">
				STATUS = #{status,jdbcType=VARCHAR},
			</if>
			<if test="manualArriveUserCode!=null">
				MANUAL_ARRIVE_USER_CODE = #{manualArriveUserCode,jdbcType=VARCHAR},
			</if>
			<if test="manualArriveOrgCode!=null">
				MANUAL_ARRIVE_ORG_CODE = #{manualArriveOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="manualArriveTime!=null">
				MANUAL_ARRIVE_Time = #{manualArriveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="pdaArriveUserCode!=null">
				PDA_ARRIVE_USER_CODE = #{pdaArriveUserCode,jdbcType=VARCHAR},
			</if>
			<if test="pdaArriveOrgCode!=null">
				PDA_ARRIVE_ORG_CODE = #{pdaArriveOrgCode,jdbcType=VARCHAR},
			</if>
			<if test="pdaArriveTime!=null">
				PDA_ARRIVE_Time = #{pdaArriveTime,jdbcType=TIMESTAMP},
			</if>
			<if test="pdaTerminalNo!=null">
				pda_Terminal_No = #{pdaTerminalNo,jdbcType=VARCHAR},
			</if>
			<if test="gpsArriveTime!=null">
				GPS_ARRIVE_Time = #{gpsArriveTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		WHERE ID =#{id,jdbcType=VARCHAR}
	</update>
	
	<!-- 根据任务车辆明细查询所有的交接单 -->
	<select id="queryBillByTaskId" resultType="java.lang.String"
		parameterType="java.lang.String">
		SELECT bill.bill_no 
		FROM tfr.t_opt_truck_task_bill bill,tfr.t_opt_truck_task_detail c 
		WHERE bill.bill_type = 'HANDOVER' 
        AND bill.truck_task_detail_id=c.ID 
        AND c.id = #{truckTaskId}
	</select>

	<!-- 根据任务车辆明细查询所有的交接单 -->
	<select id="queryBillByTaskDetailId" resultType="java.lang.String"
		parameterType="java.lang.String">
		SELECT bill.bill_no 
		FROM tfr.t_opt_truck_task_bill bill
		WHERE bill.bill_type = 'HANDOVER' 
        AND bill.truck_task_detail_id = #{id} 
	</select>
	
	<!-- 取消到达时先判断是否开始卸车 -->
	<select id="isUnloading" resultType="java.lang.String"
		parameterType="java.lang.String">
		SELECT bill.assign_state 
		FROM tfr.t_opt_truck_task_bill bill
		WHERE  bill.truck_task_detail_id=#{truckTaskDetailId} 
        AND bill.assign_state !='UNASSIGN'
	</select>
	
	<!-- 到达时查看是否有代办事项-->
	<select id="queryTodoWhenArriveTruck" parameterType="java.lang.String" resultMap="TodoWhenArriveTruckResultMap">
  	 select distinct c.draft_time,
        s.serial_no,
        s.waybill_no,
        d.dest_org_code,
        d.dest_org_name,
        hd.handover_no,
        b.bill_type,
        v.vehicleassemble_no
   from tfr.t_opt_truck_task_detail     d,
        tfr.t_opt_handoverbill_detail   hd,
        tfr.t_opt_handoverbill_serialno s,
        PKP.T_SRV_WAYBILLRFC            c,
        PKP.T_SRV_LABELEDGOOD_TODO      t,
        tfr.t_opt_truck_task_bill       b
   left join tfr.t_opt_vehicleassemble_detail vd
     on vd.handover_no = b.bill_no
   left join tfr.t_opt_vehicleassemblebill v
     on vd.vehicleassemblebill_id = v.id
  where d.id = b.truck_task_detail_id
    AND t.IS_PRINTED = 'N'
    and b.bill_no = hd.handover_no
    and hd.handover_no = s.handoverbill_no
    and hd.waybill_no = s.waybill_no
    and s.serial_no = t.serial_no
    and t.t_srv_waybill_rfc_id = c.id
    and c.waybill_no = s.waybill_no
                  and d.id = #{id}
  </select>

	<!-- 根据车牌号取得最近的一条任务车辆 -->
	<select id="queryTaskByVehicleNo" resultType="java.lang.String"
		parameterType="java.lang.String">
         select id from tfr.T_OPT_TRUCK_TASK_DETAIL where vehicle_no=#{vehicleNo} order by create_time  desc
	</select>
	
	<!-- 根据任务车辆ID找到任务车辆明细 -->
	<select id="queryTruckDetailByTaskId" resultMap="OperationResultMap"
		parameterType="com.deppon.foss.module.transfer.arrival.api.shared.dto.OperationDTO">
         select id,plan_arrive_time,truck_arrive_id,be_Car_load,status,actual_depart_type,actual_depart_time,actual_arrive_type,truck_task_id,line_name,vehicle_no,orig_org_code,dest_org_code,manual_depart_time from tfr.T_OPT_TRUCK_TASK_DETAIL 
          where truck_task_id=#{truckTaskId} 
          <if test="origOrgCode!=null">
                and orig_org_code=#{origOrgCode}
			</if>
		<if test="destOrgCode!=null">
                and dest_org_code=#{destOrgCode}
			</if>
			<if test="vehicleStatus!=null">
                and status=#{vehicleStatus}
			</if>
			<if test="statuses!=null">
				AND status IN
				<foreach collection="statuses" open="(" close=")"
					separator="," index="index" item="item">
					#{item}
				</foreach>
			</if>
			and status!='CANCLED' 
	</select>
	
	<!-- 当前车辆任务下配载单是否最终到达 -->
	<select id="beFinallyArrive" resultType="Long" parameterType="String">
		select count(1)
		  from tfr.t_opt_truck_task_bill b, tfr.t_opt_vehicleassemblebill v
		 where b.bill_no = v.vehicleassemble_no
		   and b.bill_type = 'VEHICLEASSEMBLE'
		   and b.bill_level = '1'
		   and v.befinallyarrive = 'Y'
		   and b.truck_task_detail_id = #{truckTaskDetailId}
	</select>
	
	<!-- 查询车辆取消出发记录-->
	<select id="queryCancelDepartureGrid" parameterType="java.lang.String" resultMap="TruckActionDetailDtoResultMap">
		select d.vehicle_no vehicleNo,
		       d.line_name lineName,
		       ad.operator_name operatorName,
		       ad.operator_code operatorCode,
		       o.name orgName,
		       o.code orgCode,
		       ad.create_time createTime
		  from tfr.t_opt_truck_action_detail ad,
		       tfr.t_opt_truck_task_detail   d,
		       bse.t_bas_employee            e,
		       bse.t_bas_org                 o
		 where ad.truck_task_detail_id = d.id
		   and ad.operator_code = e.emp_code
		   and e.active = 'Y'
		   and e.org_code = o.code
		   and o.active = 'Y'
		   and ad.bund_type = '3'
		   and d.id = #{truckTaskDetailId}
		 order by ad.create_time desc
	</select>

	<!-- 查询车辆取消到达记录-->
	<select id="queryCancelArrivalGrid" parameterType="java.lang.String" resultMap="TruckActionDetailDtoResultMap">
		select d.vehicle_no vehicleNo,
		       d.line_name lineName,
		       ad.operator_name operatorName,
		       ad.operator_code operatorCode,
		       o.name orgName,
		       o.code orgCode,
		       ad.create_time createTime
		  from tfr.t_opt_truck_action_detail ad,
		       tfr.t_opt_truck_task_detail   d,
		       bse.t_bas_employee            e,
		       bse.t_bas_org                 o
		 where ad.truck_task_detail_id = d.id
		   and ad.operator_code = e.emp_code
		   and e.active = 'Y'
		   and e.org_code = o.code
		   and o.active = 'Y'
		   and ad.bund_type = '4'
		   and d.id = #{truckTaskDetailId}
		 order by ad.create_time desc
	</select>
	
	<!-- 校验整车运单是否做过配载 -->
	<select id="validateWaybillNoAssemble" resultType="Long" parameterType="java.lang.String">
		select count(v.vehicleassemble_no)
		  from tfr.t_opt_handoverbill_detail    hd,
		       tfr.t_opt_handoverbill           h,
		       tfr.t_opt_vehicleassemble_detail vd,
		       tfr.t_opt_vehicleassemblebill    v
		 where hd.handover_no = h.handover_no
		   and h.handover_no = vd.handover_no
		   and vd.vehicleassemblebill_id = v.id
		   <![CDATA[
		   and h.handover_type = 'LONG_DISTANCE_HANDOVER'
		   and h.handoverbill_state <> '90'
		   and v.state <> '90'
		   and hd.waybill_no = #{waybillNo}
		   ]]>
		 order by h.create_time desc
	</select>

	<!-- 校验整车运单是否存在未到达的数据 -->
	<select id="validateWaybillNoArrival" resultType="Long" parameterType="java.lang.String">
		select count(h.handover_no)
		  from tfr.t_opt_handoverbill_detail hd,
		       tfr.t_opt_handoverbill        h,
		       tfr.t_opt_truck_task_bill     ttb,
		       tfr.t_opt_truck_task_detail   ttd
		 where hd.handover_no = h.handover_no(+)
		   and h.handover_no = ttb.bill_no(+)
		   and ttb.truck_task_detail_id = ttd.id(+)
		   <![CDATA[
		   and h.handoverbill_state <> '90'
		   and ttd.status in ('UNDEPART', 'ONTHEWAY')
		   and hd.waybill_no = #{waybillNo}
		   ]]>
	</select>
	<!-- 根据运单号查询预计到达时间 -->
	<select id="queryPlanArriveTime"  parameterType="java.lang.String" resultType="com.deppon.foss.module.transfer.arrival.api.shared.dto.WaybillPlanArriveTimeDto">
	 	select  t.waybill_no waybillNo,
	 			t.plan_arrive_time preArriveTime
  			from tfr.t_opt_waybill_plan_arrive_time t
		 where t.waybill_no = #{waybillNo,jdbcType=VARCHAR}
	</select>
	
	
	<!-- 根据任务车辆ID查询封签信息 -->
	<select id="querySealByTruckTaskId"  parameterType="list" resultMap="ArrivalInfoResultMap">
	  select t.t_truck_task_detail_id truck_task_id,
	        t.check_time arrive_check_time,
	        t.check_type
	   from tfr.t_opt_seal t
	   where t.seal_type!='INVALID'
	         and( <foreach collection="list"  item="item"  separator="or" >
					 		t.t_truck_task_detail_id = #{item,jdbcType=VARCHAR}
	              </foreach>)
	</select>
	
	<!--****************************************************************************************************-->
	<!--二程接驳出发到达-->
	<select id="querySecondCarDepartureGrid" resultMap="SecondCarDepartureInfoResultMap">
		select a.id,
		       a.vehicle_no,
		       a.connection_bill_no, 
		       a.orig_org_code,
		       a.orig_org_name,
		       a.dest_org_code,
		       a.dest_org_name,
		       a.create_user_name as loader,
		       a.depart_time,
		       a.arrive_date as arrival_time,
		       a.connectionbill_state as arrival_status
			  from TFR.T_OPT_CONNECTIONBILL a
			 where a.connectionbill_state != 90
			 <if test="connectionBillNo!=null and connectionBillNo!='' ">
				 and a.connection_bill_no= #{connectionBillNo,jdbcType=VARCHAR}
			</if>
			<if test="vehicleNo!=null and vehicleNo!='' ">
				AND a.VEHICLE_NO = #{vehicleNo,jdbcType=VARCHAR}
			</if>
			<if test="startTime!=null and startTime!='' ">
				<![CDATA[
			       AND a.create_time>=#{startTime,jdbcType=TIMESTAMP}
				]]>
			</if>
			<if test="endTime!=null and endTime!='' ">
			    <![CDATA[
			       AND a.create_time<=#{endTime,jdbcType=TIMESTAMP}
			       ]]>
			</if>
			<!--未到情况为20（已配载）和30(已出发)-->
			<if test="arrivalStatus!=null and arrivalStatus!='' and arrivalStatus==0 ">
			      AND a.connectionbill_state in(20,30)
			</if>
			<!--已到情况为40或者50(已入库)-->
			<if test="arrivalStatus!=null and arrivalStatus!='' and arrivalStatus==1 ">
			       AND a.connectionbill_state in (40,50)
			</if>
			<if test="origOrgCode!=null and origOrgCode!='' ">
			       AND a.orig_org_code=#{origOrgCode,jdbcType=VARCHAR}
			</if>
			<if test="destOrgCode!=null and destOrgCode!='' ">
			       AND a.dest_org_code=#{destOrgCode,jdbcType=VARCHAR}
			</if>
	</select>
		<!--查询出发到达任务总条数-->
		<select id="getSecondCarDepartureCount" resultType="Long" parameterType="com.deppon.foss.module.transfer.arrival.api.shared.domain.ArrivalEntity">
		select 
		       count(1)
			  from TFR.T_OPT_CONNECTIONBILL a
			 where a.connectionbill_state != 90
			 <if test="connectionBillNo!=null and connectionBillNo!='' ">
				 and a.connection_bill_no= #{connectionBillNo,jdbcType=VARCHAR}
			</if>
			<if test="vehicleNo!=null and vehicleNo!='' ">
				AND a.VEHICLE_NO = #{vehicleNo,jdbcType=VARCHAR}
			</if>
			<if test="startTime!=null and startTime!='' ">
				<![CDATA[
			       AND a.create_time>=#{startTime,jdbcType=TIMESTAMP}
				]]>
			</if>
			<if test="endTime!=null and endTime!='' ">
			    <![CDATA[
			       AND a.create_time<=#{endTime,jdbcType=TIMESTAMP}
			       ]]>
			</if>
			<!--未到情况为状态为20(已配载)和30(已出发)-->
			<if test="arrivalStatus!=null and arrivalStatus!='' and arrivalStatus==0 ">
			       AND a.connectionbill_state in(20,30)
			</if>
			<!--已到情况为40或者50(已入库)-->
			<if test="arrivalStatus!=null and arrivalStatus!='' and arrivalStatus==1 ">
			       AND a.connectionbill_state in (40,50)
			</if>
			<if test="origOrgCode!=null and origOrgCode!='' ">
			       AND a.orig_org_code=#{origOrgCode,jdbcType=VARCHAR}
			</if>
			<if test="destOrgCode!=null and destOrgCode!='' ">
			       AND a.dest_org_code=#{destOrgCode,jdbcType=VARCHAR}
			</if>
	</select>
	
	<!--发车确认-->
	 <update id="updateSecondCarDepartConfirm" parameterType="com.deppon.foss.module.transfer.arrival.api.shared.dto.OperationDTO" >
       update TFR.T_OPT_CONNECTIONBILL set CONNECTIONBILL_STATE=30,DEPART_TIME=sysdate,DEPART_OPERATOR=#{departOperator,jdbcType=VARCHAR}
			 where connectionbill_state != 90  and id=#{id,jdbcType=VARCHAR}             
  </update>
	
	
	<!--二程接驳到达本部门任务数据-->
	<select id="querySecondCarArrivalGrid" resultMap="SecondCarDepartureInfoResultMap">
				select t.id,
			       t.vehicle_no,
			       t.handover_no,
			       b.name,
			       t.create_time as depart_time,
			       t.arrive_date as arrival_time,
			       t.arrival_status,
			       e.emp_name as loader
			  from TFR.T_OPT_PICK_HANDOVER t,
			       bse.t_bas_employee e,
			       BSE.T_BAS_ORG  b
			 where HANDOVER_TYPE = 'EXPRESS_DRIVER'
			   and BILL_VALID = 1
			   and e.active = 'Y' and e.emp_code=t.create_user_code
			   and b.active='Y'and b.code=t.dest_org_code
			 <if test="handoverNo!=null and handoverNo!='' ">
				 and t.handover_no= #{handoverNo,jdbcType=VARCHAR}
			</if>
			<if test="vehicleNo!=null and vehicleNo!='' ">
				AND t.vehicle_no = #{vehicleNo,jdbcType=VARCHAR}
			</if>
			<if test="startTime!=null and startTime!='' ">
				<![CDATA[
			       AND t.create_time>=#{startTime,jdbcType=TIMESTAMP}
				]]>
			</if>
			<if test="endTime!=null and endTime!='' ">
			    <![CDATA[
			       AND t.create_time<=#{endTime,jdbcType=TIMESTAMP}
			       ]]>
			</if>
			<if test="arrivalStatus!=null and arrivalStatus!='' ">
			       AND t.arrival_status=#{arrivalStatus,jdbcType=VARCHAR}
			</if>
			<if test="destOrgCode!=null and destOrgCode!='' ">
			       AND t.dest_org_code=#{destOrgCode,jdbcType=VARCHAR}
			</if>
	</select>
	
	<!--查询到达本部门总条数-->
		<select id="getSecondCarArrivalCount" resultType="Long" parameterType="com.deppon.foss.module.transfer.arrival.api.shared.domain.ArrivalEntity">
		select count(1)
			  from TFR.T_OPT_PICK_HANDOVER t,
			       bse.t_bas_employee e,
			       BSE.T_BAS_ORG  b
			 where HANDOVER_TYPE = 'EXPRESS_DRIVER'
			   and BILL_VALID = 1
			   and e.active = 'Y' and e.emp_code=t.create_user_code
			   and b.active='Y'and b.code=t.dest_org_code
			 <if test="handoverNo!=null and handoverNo!='' ">
				 and t.handover_no= #{handoverNo,jdbcType=VARCHAR}
			</if>
			<if test="vehicleNo!=null and vehicleNo!='' ">
				AND t.vehicle_no = #{vehicleNo,jdbcType=VARCHAR}
			</if>
			<if test="startTime!=null and startTime!='' ">
				<![CDATA[
			       AND t.create_time>=#{startTime,jdbcType=TIMESTAMP}
				]]>
			</if>
			<if test="endTime!=null and endTime!='' ">
			    <![CDATA[
			       AND t.create_time<=#{endTime,jdbcType=TIMESTAMP}
			       ]]>
			</if>
			<if test="arrivalStatus!=null and arrivalStatus!='' ">
			       AND t.arrival_status=#{arrivalStatus,jdbcType=VARCHAR}
			</if>
			<if test="destOrgCode!=null and destOrgCode!='' ">
			       AND t.dest_org_code=#{destOrgCode,jdbcType=VARCHAR}
			</if>
	</select>
	<!--到达确认-->
	<update id="updateSecondCarArrivalConfirm" parameterType="com.deppon.foss.module.transfer.arrival.api.shared.dto.OperationDTO" >
		update  TFR.T_OPT_PICK_HANDOVER set ARRIVAL_STATUS='1',ARRIVE_DATE=sysdate,ARRIVAL_OPERATOR=#{arrivalOperator,jdbcType=VARCHAR}
		 where HANDOVER_TYPE = 'EXPRESS_DRIVER'
		    and BILL_VALID = 1
			and id=#{id,jdbcType=VARCHAR}            
  </update>
  
  <!--根据ids查询发车任务信息-->
	<select id="checkSecondCarDepartConfirm" resultMap="SecondCarDepartureInfoResultMap" parameterType="map">
		select a.id,
           a.vehicle_no,
           a.connection_bill_no, 
           a.depart_time,
           a.depart_operator, 
           a.connectionbill_state as arrival_status
         from TFR.T_OPT_CONNECTIONBILL a
         where a.connectionbill_state != 90 
		 <if test="ids!=null and ids!='' ">
	       AND a.id in
	        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
                 #{item}  
           </foreach> 
		</if>	 
	</select>
	
	
	  <!--根据ids查询到达本部门的发车任务信息-->
	<select id="checkSecondCarArrivalConfirm" resultMap="SecondCarDepartureInfoResultMap" parameterType="map">
		select t.id,
             t.vehicle_no,
             t.handover_no,
             t.arrive_date as arrivalTime,
             t.arrival_status,
             t.arrival_operator
             from TFR.T_OPT_PICK_HANDOVER t
              where HANDOVER_TYPE = 'EXPRESS_DRIVER'
			  and BILL_VALID = 1
		 <if test="ids!=null and ids!='' ">
	       AND t.id in
	        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">  
                 #{item}  
           </foreach> 
		</if>	 
	</select>
	
	<!-- 根据车辆任务明细id查询车辆到达id -->
	<select id="queryTruckArrive"  resultType="java.lang.String" parameterType="java.lang.String">
		 Select 
		 	detail.truck_arrive_id 
		 From tfr.t_opt_truck_task_detail detail 
		 Where detail.id = #{truckTaskDetailId}
	</select>
	
	<!-- 根据车辆到达id查询车辆到达操作信息 -->
	<select id="queryTruckArrvieInfo" resultMap="TruckActionDtoResultMap" parameterType="java.lang.String">
		 Select 
		 	arrive.create_user_code,
		 	arrive.create_user_name,
		 	arrive.create_org_code 
		 From tfr.t_opt_truck_arrive arrive 
		 Where arrive.id = #{arrivedId}
	</select>
</mapper>