<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="foss.stl.PartnerPayStatementDDao" >
  <resultMap id="BaseResultMap" type="com.deppon.foss.module.settlement.writeoff.api.shared.domain.PartnerPayStatementDEntity" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="STATEMENT_BILL_NO" property="statementBillNo" jdbcType="VARCHAR" />
    <result column="PAYABLE_NO" property="payableNo" jdbcType="VARCHAR" />
    <result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
    <result column="BILL_TYPE" property="billType" jdbcType="VARCHAR" />
    <result column="AUDIT_STATUS" property="auditStatus" jdbcType="VARCHAR" />
    <result column="AMOUNT" property="amount" jdbcType="DECIMAL" />
    <result column="VERIFY_AMOUNT" property="verifyAmount" jdbcType="DECIMAL" />
    <result column="UNVERIFY_AMOUNT" property="unverifyAmount" jdbcType="DECIMAL" />
    <result column="ORG_CODE" property="orgCode" jdbcType="VARCHAR" />
    <result column="ORG_NAME" property="orgName" jdbcType="VARCHAR" />
    <result column="ORIG_ORG_CODE" property="origOrgCode" jdbcType="VARCHAR" />
    <result column="ORIG_ORG_NAME" property="origOrgName" jdbcType="VARCHAR" />
    <result column="DEST_ORG_CODE" property="destOrgCode" jdbcType="VARCHAR" />
    <result column="DEST_ORG_NAME" property="destOrgName" jdbcType="VARCHAR" />
    <result column="CUSTOMER_CODE" property="customerCode" jdbcType="VARCHAR" />
    <result column="CUSTOMER_NAME" property="customerName" jdbcType="VARCHAR" />
    <result column="DEPT_REGION_CODE" property="deptRegionCode" jdbcType="VARCHAR" />
    <result column="ARRV_REGION_CODE" property="arrvRegionCode" jdbcType="VARCHAR" />
    <result column="CUSTOMER_PICKUP_ORG_NAME" property="customerPickupOrgName" jdbcType="VARCHAR" />
    <result column="GOODS_NAME" property="goodsName" jdbcType="VARCHAR" />
    <result column="DELIVERY_CUSTOMER_CODE" property="deliveryCustomerCode" jdbcType="VARCHAR" />
    <result column="DELIVERY_CUSTOMER_NAME" property="deliveryCustomerName" jdbcType="VARCHAR" />
    <result column="PAYMENT_TYPE" property="paymentType" jdbcType="VARCHAR" />
    <result column="RECEIVE_METHOD" property="receiveMethod" jdbcType="VARCHAR" />
    <result column="PRODUCT_CODE" property="productCode" jdbcType="VARCHAR" />
    <result column="DISABLE_TIME" property="disableTime" jdbcType="TIMESTAMP" />
    <result column="BUSINESS_DATE" property="businessDate" jdbcType="TIMESTAMP" />
    <result column="ACCOUNT_DATE" property="accountDate" jdbcType="TIMESTAMP" />
    <result column="SIGN_DATE" property="signDate" jdbcType="TIMESTAMP" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="NOTES" property="notes" jdbcType="VARCHAR" />
    <result column="WAYBILL_CREATE_DATE" property="waybillCreateDate" jdbcType="TIMESTAMP" />
    <result column="REGIONAL_TRANSPORT_FEE" property="regionalTransportFee" jdbcType="DECIMAL" />
    <result column="DELIVERY_FEE" property="deliveryFee" jdbcType="DECIMAL" />
    <result column="DISPATCH_FEE" property="dispatchFee" jdbcType="DECIMAL" />
    <result column="DELIVERY_WAREHOUSE_FEE" property="deliveryWarehouseFee" jdbcType="DECIMAL" />
    <result column="SIGN_RETURN_FEE" property="signReturnFee" jdbcType="DECIMAL" />
    <result column="DELIVERY_UPSTAIRS_FEE" property="deliveryUpstairsFee" jdbcType="DECIMAL" />
    <result column="BIG_UPSTAIRS_FEE" property="bigUpstairsFee" jdbcType="DECIMAL" />
    <result column="FAR_DELIVERY_FEE" property="farDeliveryFee" jdbcType="DECIMAL" />
     <result column="IS_DELETE" property="isDelete" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID,
    STATEMENT_BILL_NO,
    PAYABLE_NO,
    WAYBILL_NO,
    BILL_TYPE,
    AUDIT_STATUS,
    AMOUNT/100 AMOUNT,
    VERIFY_AMOUNT/100 VERIFY_AMOUNT,
    UNVERIFY_AMOUNT/100 UNVERIFY_AMOUNT,
    ORG_CODE,
    ORG_NAME,
    ORIG_ORG_CODE,
    ORIG_ORG_NAME,
    DEST_ORG_CODE,
    DEST_ORG_NAME,
    CUSTOMER_CODE,
    CUSTOMER_NAME,
    DEPT_REGION_CODE,
    ARRV_REGION_CODE,
    CUSTOMER_PICKUP_ORG_NAME,
    GOODS_NAME,
    DELIVERY_CUSTOMER_CODE,
    DELIVERY_CUSTOMER_NAME,
    PAYMENT_TYPE,
    RECEIVE_METHOD,
    PRODUCT_CODE,
    DISABLE_TIME,
    BUSINESS_DATE,
    ACCOUNT_DATE,
    SIGN_DATE,
    CREATE_TIME,
    NOTES,
    WAYBILL_CREATE_DATE,
    NVL(REGIONAL_TRANSPORT_FEE, 0) / 100 REGIONAL_TRANSPORT_FEE,
    NVL(DELIVERY_FEE, 0) / 100 DELIVERY_FEE,
    NVL(DISPATCH_FEE, 0) / 100 DISPATCH_FEE,
    NVL(DELIVERY_WAREHOUSE_FEE, 0) / 100 DELIVERY_WAREHOUSE_FEE,
    NVL(SIGN_RETURN_FEE, 0) / 100 SIGN_RETURN_FEE,
    NVL(DELIVERY_UPSTAIRS_FEE, 0) / 100 DELIVERY_UPSTAIRS_FEE,
    NVL(BIG_UPSTAIRS_FEE, 0) / 100 BIG_UPSTAIRS_FEE,
    NVL(FAR_DELIVERY_FEE, 0) / 100 FAR_DELIVERY_FEE,
    IS_DELETE
  </sql>
  
  <!-- 查询合伙人应付单字段 -->
  <sql id="Query_Payable_Column_List" >
    SELECT  /*结算-核销-查询合伙人应付单*/
	       P.PAYABLE_NO PAYABLE_NO,
	       P.WAYBILL_NO WAYBILL_NO,
	       P.BILL_TYPE BILL_TYPE,
	       P.APPROVE_STATUS AUDIT_STATUS,
	       P.AMOUNT / 100 AMOUNT,
	       P.VERIFY_AMOUNT / 100 VERIFY_AMOUNT,
	       P.UNVERIFY_AMOUNT / 100 UNVERIFY_AMOUNT,
	       P.PAYABLE_ORG_CODE ORG_CODE,
	       P.PAYABLE_ORG_NAME ORG_NAME,
	       P.ORIG_ORG_CODE ORIG_ORG_CODE,
	       P.ORIG_ORG_NAME ORIG_ORG_NAME,
	       P.DEST_ORG_CODE DEST_ORG_CODE,
	       P.DEST_ORG_NAME DEST_ORG_NAME,
	       P.CUSTOMER_CODE CUSTOMER_CODE,
	       P.CUSTOMER_NAME CUSTOMER_NAME,
	       W.RECEIVE_ORG_CODE DEPT_REGION_CODE,
	       W.TARGET_ORG_CODE ARRV_REGION_CODE,
	       W.CUSTOMER_PICKUP_ORG_CODE CUSTOMER_PICKUP_ORG_NAME,
	       W.GOODS_NAME GOODS_NAME,
	       W.DELIVERY_CUSTOMER_CODE DELIVERY_CUSTOMER_CODE,
	       W.DELIVERY_CUSTOMER_NAME DELIVERY_CUSTOMER_NAME,
	       W.PAID_METHOD PAYMENT_TYPE,
	       W.RECEIVE_METHOD RECEIVE_METHOD,
	       P.PRODUCT_CODE PRODUCT_CODE,
	       P.DISABLE_TIME DISABLE_TIME,
	       P.BUSINESS_DATE BUSINESS_DATE,
	       P.ACCOUNT_DATE ACCOUNT_DATE,
	       P.SIGN_DATE SIGN_DATE,
	       SYSDATE CREATE_TIME,
	       P.NOTES NOTES,
	       W.CREATE_TIME WAYBILL_CREATE_DATE,
	       NVL(REGIONAL_TRANSPORT_FEE.AMOUNT, 0) / 100 REGIONAL_TRANSPORT_FEE,
	       NVL(DELIVERY_FEE.AMOUNT, 0) / 100 DELIVERY_FEE,
	       NVL(DISPATCH_FEE.AMOUNT, 0) / 100 DISPATCH_FEE,
	       NVL(DELIVERY_WAREHOUSE_FEE.AMOUNT, 0) / 100 DELIVERY_WAREHOUSE_FEE,
	       NVL(SIGN_RETURN_FEE.AMOUNT, 0) / 100 SIGN_RETURN_FEE,
	       NVL(DELIVERY_UPSTAIRS_FEE.AMOUNT, 0) / 100 DELIVERY_UPSTAIRS_FEE,
	       NVL(BIG_UPSTAIRS_FEE.AMOUNT, 0) / 100 BIG_UPSTAIRS_FEE,
	       NVL(FAR_DELIVERY_FEE.AMOUNT, 0) / 100 FAR_DELIVERY_FEE
	  FROM STL.T_STL_BILL_PAYABLE P
	  LEFT JOIN STL.T_STL_BILL_PAYABLE_D REGIONAL_TRANSPORT_FEE
	    ON P.PAYABLE_NO = REGIONAL_TRANSPORT_FEE.PAYABLE_NO
	   AND REGIONAL_TRANSPORT_FEE.ACTIVE = 'Y'
	   AND REGIONAL_TRANSPORT_FEE.PAYABLE_TYPE = 'PTE'
	  LEFT JOIN STL.T_STL_BILL_PAYABLE_D DELIVERY_FEE
	    ON P.PAYABLE_NO = DELIVERY_FEE.PAYABLE_NO
	   AND DELIVERY_FEE.ACTIVE = 'Y'
	   AND DELIVERY_FEE.PAYABLE_TYPE = 'DNU'
	  LEFT JOIN STL.T_STL_BILL_PAYABLE_D DISPATCH_FEE
	    ON P.PAYABLE_NO = DISPATCH_FEE.PAYABLE_NO
	   AND DISPATCH_FEE.ACTIVE = 'Y'
	   AND DISPATCH_FEE.PAYABLE_TYPE = 'DE'
	  LEFT JOIN STL.T_STL_BILL_PAYABLE_D DELIVERY_WAREHOUSE_FEE
	    ON P.PAYABLE_NO = DELIVERY_WAREHOUSE_FEE.PAYABLE_NO
	   AND DELIVERY_WAREHOUSE_FEE.ACTIVE = 'Y'
	   AND DELIVERY_WAREHOUSE_FEE.PAYABLE_TYPE = 'PE'
	  LEFT JOIN STL.T_STL_BILL_PAYABLE_D SIGN_RETURN_FEE
	    ON P.PAYABLE_NO = SIGN_RETURN_FEE.PAYABLE_NO
	   AND SIGN_RETURN_FEE.ACTIVE = 'Y'
	   AND SIGN_RETURN_FEE.PAYABLE_TYPE = 'RB'
	  LEFT JOIN STL.T_STL_BILL_PAYABLE_D DELIVERY_UPSTAIRS_FEE
	    ON P.PAYABLE_NO = DELIVERY_UPSTAIRS_FEE.PAYABLE_NO
	   AND DELIVERY_UPSTAIRS_FEE.ACTIVE = 'Y'
	   AND DELIVERY_UPSTAIRS_FEE.PAYABLE_TYPE = 'GUENB'
	  LEFT JOIN STL.T_STL_BILL_PAYABLE_D BIG_UPSTAIRS_FEE
	    ON P.PAYABLE_NO = BIG_UPSTAIRS_FEE.PAYABLE_NO
	   AND BIG_UPSTAIRS_FEE.ACTIVE = 'Y'
	   AND BIG_UPSTAIRS_FEE.PAYABLE_TYPE = 'GBUNB'
	  LEFT JOIN STL.T_STL_BILL_PAYABLE_D FAR_DELIVERY_FEE
	    ON P.PAYABLE_NO = FAR_DELIVERY_FEE.PAYABLE_NO
	   AND FAR_DELIVERY_FEE.ACTIVE = 'Y'
	   AND FAR_DELIVERY_FEE.PAYABLE_TYPE = 'LS'
	  LEFT JOIN PKP.T_SRV_WAYBILL W
	    ON P.WAYBILL_NO = W.WAYBILL_NO
	   AND W.ACTIVE = 'Y'
	  JOIN BSE.T_BAS_SALES_DEPARTMENT dep
		ON p.customer_code = dep.CODE
	   AND dep.ACTIVE='Y' 
	   and dep.IS_LEAGUE_SALEDEPT = 'Y'
	  LEFT JOIN BSE.T_BAS_SALES_DEPARTMENT BBS
		ON p.orig_org_code = BBS.CODE
		AND BBS.ACTIVE='Y' 
  </sql>
  
  <!-- 生成合伙人应付单字段 -->
  <sql id="Insert_Payable_Column_List" >
    insert into stl.T_STL_STATEMENT_PARTNER_PAY_D (ID, STATEMENT_BILL_NO, PAYABLE_NO, 
      WAYBILL_NO, BILL_TYPE, AUDIT_STATUS, 
      AMOUNT, VERIFY_AMOUNT, UNVERIFY_AMOUNT, 
      ORG_CODE, ORG_NAME, ORIG_ORG_CODE, 
      ORIG_ORG_NAME, DEST_ORG_CODE, DEST_ORG_NAME, 
      CUSTOMER_CODE, CUSTOMER_NAME, DEPT_REGION_CODE, 
      ARRV_REGION_CODE, CUSTOMER_PICKUP_ORG_NAME, 
      GOODS_NAME, DELIVERY_CUSTOMER_CODE, DELIVERY_CUSTOMER_NAME, 
      PAYMENT_TYPE, RECEIVE_METHOD, PRODUCT_CODE, 
      DISABLE_TIME, BUSINESS_DATE, ACCOUNT_DATE, 
      SIGN_DATE, CREATE_TIME, NOTES, 
      WAYBILL_CREATE_DATE, REGIONAL_TRANSPORT_FEE, 
      DELIVERY_FEE, DISPATCH_FEE, DELIVERY_WAREHOUSE_FEE, 
      SIGN_RETURN_FEE, DELIVERY_UPSTAIRS_FEE, BIG_UPSTAIRS_FEE, 
      FAR_DELIVERY_FEE)
    SELECT 
		   SYS_GUID(),
	       #{statementBillNo,jdbcType=VARCHAR},
	       P.PAYABLE_NO PAYABLE_NO,
	       P.WAYBILL_NO WAYBILL_NO,
	       P.BILL_TYPE BILL_TYPE,
	       P.APPROVE_STATUS AUDIT_STATUS,
	       P.AMOUNT,
	       P.VERIFY_AMOUNT,
	       P.UNVERIFY_AMOUNT,
	       P.PAYABLE_ORG_CODE ORG_CODE,
	       P.PAYABLE_ORG_NAME ORG_NAME,
	       P.ORIG_ORG_CODE ORIG_ORG_CODE,
	       P.ORIG_ORG_NAME ORIG_ORG_NAME,
	       P.DEST_ORG_CODE DEST_ORG_CODE,
	       P.DEST_ORG_NAME DEST_ORG_NAME,
	       P.CUSTOMER_CODE CUSTOMER_CODE,
	       P.CUSTOMER_NAME CUSTOMER_NAME,
	       W.RECEIVE_ORG_CODE DEPT_REGION_CODE,
	       W.TARGET_ORG_CODE ARRV_REGION_CODE,
	       W.CUSTOMER_PICKUP_ORG_CODE CUSTOMER_PICKUP_ORG_NAME,
	       W.GOODS_NAME GOODS_NAME,
	       W.DELIVERY_CUSTOMER_CODE DELIVERY_CUSTOMER_CODE,
	       W.DELIVERY_CUSTOMER_NAME DELIVERY_CUSTOMER_NAME,
	       W.PAID_METHOD PAYMENT_TYPE,
	       W.RECEIVE_METHOD RECEIVE_METHOD,
	       P.PRODUCT_CODE PRODUCT_CODE,
	       P.DISABLE_TIME DISABLE_TIME,
	       P.BUSINESS_DATE BUSINESS_DATE,
	       P.ACCOUNT_DATE ACCOUNT_DATE,
	       P.SIGN_DATE SIGN_DATE,
	       SYSDATE CREATE_TIME,
	       P.NOTES NOTES,
	       W.CREATE_TIME WAYBILL_CREATE_DATE,
	       NVL(REGIONAL_TRANSPORT_FEE.AMOUNT, 0) REGIONAL_TRANSPORT_FEE,
	       NVL(DELIVERY_FEE.AMOUNT, 0) DELIVERY_FEE,
	       NVL(DISPATCH_FEE.AMOUNT, 0) DISPATCH_FEE,
	       NVL(DELIVERY_WAREHOUSE_FEE.AMOUNT, 0) DELIVERY_WAREHOUSE_FEE,
	       NVL(SIGN_RETURN_FEE.AMOUNT, 0) SIGN_RETURN_FEE,
	       NVL(DELIVERY_UPSTAIRS_FEE.AMOUNT, 0) DELIVERY_UPSTAIRS_FEE,
	       NVL(BIG_UPSTAIRS_FEE.AMOUNT, 0) BIG_UPSTAIRS_FEE,
	       NVL(FAR_DELIVERY_FEE.AMOUNT, 0) FAR_DELIVERY_FEE
         FROM STL.T_STL_BILL_PAYABLE P
        LEFT JOIN STL.T_STL_BILL_PAYABLE_D REGIONAL_TRANSPORT_FEE
        	ON P.PAYABLE_NO = REGIONAL_TRANSPORT_FEE.PAYABLE_NO
		    AND REGIONAL_TRANSPORT_FEE.ACTIVE = 'Y'
		    AND REGIONAL_TRANSPORT_FEE.PAYABLE_TYPE = 'PTE'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D DELIVERY_FEE
	        ON P.PAYABLE_NO = DELIVERY_FEE.PAYABLE_NO
		    AND DELIVERY_FEE.ACTIVE = 'Y'
		    AND DELIVERY_FEE.PAYABLE_TYPE = 'DNU'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D DISPATCH_FEE
	        ON P.PAYABLE_NO = DISPATCH_FEE.PAYABLE_NO
		    AND DISPATCH_FEE.ACTIVE = 'Y'
		    AND DISPATCH_FEE.PAYABLE_TYPE = 'DE'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D DELIVERY_WAREHOUSE_FEE
	        ON P.PAYABLE_NO = DELIVERY_WAREHOUSE_FEE.PAYABLE_NO
		    AND DELIVERY_WAREHOUSE_FEE.ACTIVE = 'Y'
		    AND DELIVERY_WAREHOUSE_FEE.PAYABLE_TYPE = 'PE'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D SIGN_RETURN_FEE
	        ON P.PAYABLE_NO = SIGN_RETURN_FEE.PAYABLE_NO
		    AND SIGN_RETURN_FEE.ACTIVE = 'Y'
		    AND SIGN_RETURN_FEE.PAYABLE_TYPE = 'RB'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D DELIVERY_UPSTAIRS_FEE
	        ON P.PAYABLE_NO = DELIVERY_UPSTAIRS_FEE.PAYABLE_NO
		    AND DELIVERY_UPSTAIRS_FEE.ACTIVE = 'Y'
		    AND DELIVERY_UPSTAIRS_FEE.PAYABLE_TYPE = 'GUENB'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D BIG_UPSTAIRS_FEE
	        ON P.PAYABLE_NO = BIG_UPSTAIRS_FEE.PAYABLE_NO
		    AND BIG_UPSTAIRS_FEE.ACTIVE = 'Y'
		    AND BIG_UPSTAIRS_FEE.PAYABLE_TYPE = 'GBUNB'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D FAR_DELIVERY_FEE
	        ON P.PAYABLE_NO = FAR_DELIVERY_FEE.PAYABLE_NO
		    AND FAR_DELIVERY_FEE.ACTIVE = 'Y'
		    AND FAR_DELIVERY_FEE.PAYABLE_TYPE = 'LS'
		LEFT JOIN PKP.T_SRV_WAYBILL W
			ON P.WAYBILL_NO = W.WAYBILL_NO
			AND W.ACTIVE = 'Y'
		JOIN BSE.T_BAS_SALES_DEPARTMENT dep
		ON p.customer_code = dep.CODE
			AND dep.ACTIVE='Y' 
			and	dep.IS_LEAGUE_SALEDEPT = 'Y'
		LEFT JOIN BSE.T_BAS_SALES_DEPARTMENT BBS
			ON p.orig_org_code = BBS.CODE
			AND BBS.ACTIVE='Y' 
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from stl.T_STL_STATEMENT_PARTNER_PAY_D
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  
    <!-- 按应付单号查询合伙人应付单数据 -->
  <select id="selectYFByPayableNos" parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.domain.PartnerPayStatementDEntity" 
  resultMap="BaseResultMap">
    <include refid="Query_Payable_Column_List"/>
     <where>
		P.ACTIVE = 'Y'
		AND P.EFFECTIVE_STATUS = 'Y'
		AND P.APPROVE_STATUS = 'AA'
		<!--DECODE函数用于减少函数索引的总数，未核销金额等于0的数据不进入索引  -->
	    AND P.UNVERIFY_AMOUNT>0 
		<choose>
			<!-- 到达提成和运单开单部门为直营网点的委托派费, IS_LEAGUE_SALEDEPT=Y表示为合伙人 -->
			<when test="billType == 'PDFP'">
				AND (P.BILL_TYPE = 'PDFP'
					OR (P.BILL_TYPE = 'PDDF' AND BBS.IS_LEAGUE_SALEDEPT != 'Y')
				)
			</when>
			<!-- 运单开单部门为合伙人营业部的委托派费  -->
			<when test="billType == 'PDDF'">
				AND P.BILL_TYPE = 'PDDF' AND BBS.IS_LEAGUE_SALEDEPT = 'Y'
			</when>
			<otherwise>
				AND P.BILL_TYPE = '' 
			</otherwise>
		</choose>
	    <!-- modify by 269044-zhurongrong 2016-11-23 
  		DP-SPBP-合伙人收银员可做到达提成与D-H委托派费付款的需求:合伙人收银员可操作合伙人付款对账单新增生成对账单、合伙人付款对账单管理进行付款功能 --> 
		AND (P.STATEMENT_BILL_NO = 'N/A' OR P.STATEMENT_BILL_NO IS NULL)
        AND P.CUSTOMER_CODE=#{customerCode}  
		AND P.PAYABLE_NO IN
          <foreach collection="payableBillNosList" index="index" item="item" open="(" separator="," close=")">
             #{item}
          </foreach>
     </where>
  </select>

  <!-- 按运单单号查询合伙人应付单数据 -->
  <select id="selectYFByWaybillNos" parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.domain.PartnerPayStatementDEntity" 
  resultMap="BaseResultMap">
    <include refid="Query_Payable_Column_List"/>
     <where>
		P.ACTIVE = 'Y'
		AND P.EFFECTIVE_STATUS = 'Y'
		AND P.APPROVE_STATUS = 'AA'
		<!--DECODE函数用于减少函数索引的总数，未核销金额等于0的数据不进入索引  -->
          AND P.UNVERIFY_AMOUNT>0 
		<choose>
			<!-- 到达提成和运单开单部门为直营网点的委托派费, IS_LEAGUE_SALEDEPT=Y表示为合伙人 -->
			<when test="billType == 'PDFP'">
				AND (P.BILL_TYPE = 'PDFP'
					OR (P.BILL_TYPE = 'PDDF' AND BBS.IS_LEAGUE_SALEDEPT != 'Y')
				)
			</when>
			<!-- 运单开单部门为合伙人营业部的委托派费  -->
			<when test="billType == 'PDDF'">
				AND P.BILL_TYPE = 'PDDF' AND BBS.IS_LEAGUE_SALEDEPT = 'Y'
			</when>
			<otherwise>
				AND P.BILL_TYPE = '' 
			</otherwise>
		</choose>
		<!-- modify by 269044-zhurongrong 2016-11-23 
  		DP-SPBP-合伙人收银员可做到达提成与D-H委托派费付款的需求:合伙人收银员可操作合伙人付款对账单新增生成对账单、合伙人付款对账单管理进行付款功能 --> 
		  AND (P.STATEMENT_BILL_NO = 'N/A' OR P.STATEMENT_BILL_NO IS NULL)
          AND P.CUSTOMER_CODE=#{customerCode}  
		AND P.WAYBILL_NO IN
          <foreach collection="sourceBillNosList" index="index" item="item" open="(" separator="," close=")">
             #{item}
          </foreach>
      </where>
  </select>

  <!-- 按合伙人信息查询合伙人应付单数据 -->
  <select id="queryStatementDByCustomer" parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.dto.PartnerPayStatementDto" 
  resultMap="BaseResultMap">
    <include refid="Query_Payable_Column_List"/>
     <where>
		<!-- 应付类型为 合伙人到达提成应付，合伙人委托派费应付 -->
        P.ACTIVE = 'Y'
		AND P.EFFECTIVE_STATUS = 'Y'
		AND P.APPROVE_STATUS = 'AA'
		<choose>
			<!-- 到达提成和运单开单部门为直营网点的委托派费, IS_LEAGUE_SALEDEPT=Y表示为合伙人 -->
			<when test="billType == 'PDFP'">
				AND (P.BILL_TYPE = 'PDFP'
					OR (P.BILL_TYPE = 'PDDF' AND BBS.IS_LEAGUE_SALEDEPT != 'Y')
				)
			</when>
			<!-- 运单开单部门为合伙人营业部的委托派费  -->
			<when test="billType == 'PDDF'">
				AND P.BILL_TYPE = 'PDDF' AND BBS.IS_LEAGUE_SALEDEPT = 'Y'
			</when>
			<otherwise>
				AND P.BILL_TYPE = '' 
			</otherwise>
		</choose>
	  	AND P.UNVERIFY_AMOUNT > 0
  		AND (P.STATEMENT_BILL_NO = 'N/A' OR P.STATEMENT_BILL_NO IS NULL)
  	    <!-- modify by 269044-zhurongrong 2016-11-23 
  		DP-SPBP-合伙人收银员可做到达提成与D-H委托派费付款的需求:合伙人收银员可操作合伙人付款对账单新增生成对账单、合伙人付款对账单管理进行付款功能 --> 
	  	AND P.CUSTOMER_CODE=#{customerCode,jdbcType=VARCHAR}
	  	<![CDATA[
	   	AND P.SIGN_DATE>=#{periodBeginDate,jdbcType=TIMESTAMP} 
	   	AND P.SIGN_DATE<#{periodEndDate,jdbcType=TIMESTAMP}
	  	]]>
	 </where>
  </select>
  
  <!-- 按日期生成合伙人付款对账单 总金额和总记录数 -->
  <resultMap id="StatementAmountMap" type="com.deppon.foss.module.settlement.writeoff.api.shared.dto.PartnerPayStatementDto">
  		<result column="TOTALAMOUNT" property="totalAmount" jdbcType="DECIMAL" />
  		<result column="TOTALCOUNT" property="totalCount" jdbcType="DECIMAL" />
  		<result column="PERIOD_ENDDATE" property="periodEndDate" jdbcType="TIMESTAMP" />
  		<result column="PERIOD_BEGINDATE" property="periodBeginDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <!-- 按日期制查询总金额和总记录数 -->
  <select id="getStatementAmountByCustomer" parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.dto.PartnerPayStatementDto"
  	resultMap="StatementAmountMap">
  	 SELECT  /*结算-按日期制作合伙人付款对账单-查询合伙人应付单*/
  	 	   COUNT(1) TOTALCOUNT,
  	 	   NVL(SUM(P.UNVERIFY_AMOUNT)/100,0) TOTALAMOUNT,
  	 	   MAX(P.SIGN_DATE) PERIOD_ENDDATE,MIN(P.SIGN_DATE) PERIOD_BEGINDATE
	  FROM STL.T_STL_BILL_PAYABLE P
	  LEFT JOIN STL.T_STL_BILL_PAYABLE_D REGIONAL_TRANSPORT_FEE
	    ON P.PAYABLE_NO = REGIONAL_TRANSPORT_FEE.PAYABLE_NO
	   AND REGIONAL_TRANSPORT_FEE.ACTIVE = 'Y'
	   AND REGIONAL_TRANSPORT_FEE.PAYABLE_TYPE = 'PTE'
	  LEFT JOIN STL.T_STL_BILL_PAYABLE_D DELIVERY_FEE
	    ON P.PAYABLE_NO = DELIVERY_FEE.PAYABLE_NO
	   AND DELIVERY_FEE.ACTIVE = 'Y'
	   AND DELIVERY_FEE.PAYABLE_TYPE = 'DNU'
	  LEFT JOIN STL.T_STL_BILL_PAYABLE_D DISPATCH_FEE
	    ON P.PAYABLE_NO = DISPATCH_FEE.PAYABLE_NO
	   AND DISPATCH_FEE.ACTIVE = 'Y'
	   AND DISPATCH_FEE.PAYABLE_TYPE = 'DE'
	  LEFT JOIN STL.T_STL_BILL_PAYABLE_D DELIVERY_WAREHOUSE_FEE
	    ON P.PAYABLE_NO = DELIVERY_WAREHOUSE_FEE.PAYABLE_NO
	   AND DELIVERY_WAREHOUSE_FEE.ACTIVE = 'Y'
	   AND DELIVERY_WAREHOUSE_FEE.PAYABLE_TYPE = 'PE'
	  LEFT JOIN STL.T_STL_BILL_PAYABLE_D SIGN_RETURN_FEE
	    ON P.PAYABLE_NO = SIGN_RETURN_FEE.PAYABLE_NO
	   AND SIGN_RETURN_FEE.ACTIVE = 'Y'
	   AND SIGN_RETURN_FEE.PAYABLE_TYPE = 'RB'
	  LEFT JOIN STL.T_STL_BILL_PAYABLE_D DELIVERY_UPSTAIRS_FEE
	    ON P.PAYABLE_NO = DELIVERY_UPSTAIRS_FEE.PAYABLE_NO
	   AND DELIVERY_UPSTAIRS_FEE.ACTIVE = 'Y'
	   AND DELIVERY_UPSTAIRS_FEE.PAYABLE_TYPE = 'GUENB'
	  LEFT JOIN STL.T_STL_BILL_PAYABLE_D BIG_UPSTAIRS_FEE
	    ON P.PAYABLE_NO = BIG_UPSTAIRS_FEE.PAYABLE_NO
	   AND BIG_UPSTAIRS_FEE.ACTIVE = 'Y'
	   AND BIG_UPSTAIRS_FEE.PAYABLE_TYPE = 'GBUNB'
	  LEFT JOIN STL.T_STL_BILL_PAYABLE_D FAR_DELIVERY_FEE
	    ON P.PAYABLE_NO = FAR_DELIVERY_FEE.PAYABLE_NO
	   AND FAR_DELIVERY_FEE.ACTIVE = 'Y'
	   AND FAR_DELIVERY_FEE.PAYABLE_TYPE = 'LS'
	  LEFT JOIN PKP.T_SRV_WAYBILL W
	    ON P.WAYBILL_NO = W.WAYBILL_NO
	   AND W.ACTIVE = 'Y'
	  JOIN BSE.T_BAS_SALES_DEPARTMENT dep
		ON p.customer_code = dep.CODE
	   AND dep.ACTIVE='Y' 
	   and dep.IS_LEAGUE_SALEDEPT = 'Y'
	  LEFT JOIN BSE.T_BAS_SALES_DEPARTMENT BBS
		ON p.orig_org_code = BBS.CODE
		AND BBS.ACTIVE='Y' 
  	<where>
		<!-- 应付类型为 合伙人到达提成应付，合伙人委托派费应付 -->
        P.ACTIVE = 'Y'
		AND P.EFFECTIVE_STATUS = 'Y'
		AND P.APPROVE_STATUS = 'AA'
		<choose>
			<!-- 到达提成和运单开单部门为直营网点的委托派费, IS_LEAGUE_SALEDEPT=Y表示为合伙人 -->
			<when test="billType == 'PDFP'">
				AND (P.BILL_TYPE = 'PDFP'
					OR (P.BILL_TYPE = 'PDDF' AND BBS.IS_LEAGUE_SALEDEPT != 'Y')
				)
			</when>
			<!-- 运单开单部门为合伙人营业部的委托派费  -->
			<when test="billType == 'PDDF'">
				AND P.BILL_TYPE = 'PDDF' AND BBS.IS_LEAGUE_SALEDEPT = 'Y'
			</when>
			<otherwise>
				AND P.BILL_TYPE = '' 
			</otherwise>
		</choose>
	  	AND P.UNVERIFY_AMOUNT > 0
  		AND (P.STATEMENT_BILL_NO = 'N/A' OR P.STATEMENT_BILL_NO IS NULL)
  		<if test="orgCode!=null">
	  		AND P.PAYABLE_ORG_CODE = #{orgCode,jdbcType=VARCHAR}
  		</if>
	  	AND P.CUSTOMER_CODE=#{customerCode,jdbcType=VARCHAR}
	  	<![CDATA[
	   	AND P.SIGN_DATE>=#{periodBeginDate,jdbcType=TIMESTAMP} 
	   	AND P.SIGN_DATE<#{periodEndDate,jdbcType=TIMESTAMP}
	  	]]>
	 </where>
  </select>
  <!-- 按合伙人信息查询合伙人应付单数据 -->
  <select id="queryStatementDByExistCustomer" parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.dto.PartnerPayStatementDto" 
  resultMap="BaseResultMap">
    SELECT 
     	SYS_GUID(),
		P.PAYABLE_NO,
		P.WAYBILL_NO,
		P.BILL_TYPE,
         P.APPROVE_STATUS AUDIT_STATUS,
         P.AMOUNT / 100 AMOUNT,
         P.VERIFY_AMOUNT/100 VERIFY_AMOUNT,
         P.UNVERIFY_AMOUNT/100 UNVERIFY_AMOUNT,
         P.PAYABLE_ORG_CODE ORG_CODE,
         P.PAYABLE_ORG_NAME ORG_NAME,
         P.ORIG_ORG_CODE,
         P.ORIG_ORG_NAME,
         P.DEST_ORG_CODE,
         P.DEST_ORG_NAME,
         P.CUSTOMER_CODE,
         P.CUSTOMER_NAME,
         W.RECEIVE_ORG_CODE DEPT_REGION_CODE,
         W.TARGET_ORG_CODE ARRV_REGION_CODE,
         W.CUSTOMER_PICKUP_ORG_NAME CUSTOMER_PICKUP_ORG_NAME,
         W.GOODS_NAME,
         W.DELIVERY_CUSTOMER_CODE DELIVERY_CUSTOMER_CODE,
         W.DELIVERY_CUSTOMER_NAME DELIVERY_CUSTOMER_NAME,
         W.PAID_METHOD PAYMENT_TYPE,
         W.RECEIVE_METHOD RECEIVE_METHOD,
         P.PRODUCT_CODE,
         P.DISABLE_TIME,
         P.BUSINESS_DATE,
         P.ACCOUNT_DATE,
         P.SIGN_DATE,
         SYSDATE CREATE_TIME,
         P.NOTES NOTES,
		 W.CREATE_TIME  WAYBILL_CREATE_DATE,
          NVL(REGIONAL_TRANSPORT_FEE.AMOUNT, 0)/100 REGIONAL_TRANSPORT_FEE,
          NVL(DELIVERY_FEE.AMOUNT, 0)/100 DELIVERY_FEE,
          NVL(DISPATCH_FEE.AMOUNT, 0)/100 DISPATCH_FEE,
          NVL(DELIVERY_WAREHOUSE_FEE.AMOUNT, 0)/100 DELIVERY_WAREHOUSE_FEE,
          NVL(SIGN_RETURN_FEE.AMOUNT, 0)/100 SIGN_RETURN_FEE,
          NVL(DELIVERY_UPSTAIRS_FEE.AMOUNT, 0)/100 DELIVERY_UPSTAIRS_FEE,
          NVL(BIG_UPSTAIRS_FEE.AMOUNT, 0)/100 BIG_UPSTAIRS_FEE,
          NVL(FAR_DELIVERY_FEE.AMOUNT, 0)/100 FAR_DELIVERY_FEE
         FROM STL.T_STL_BILL_PAYABLE P
        LEFT JOIN STL.T_STL_BILL_PAYABLE_D REGIONAL_TRANSPORT_FEE
        	ON P.PAYABLE_NO = REGIONAL_TRANSPORT_FEE.PAYABLE_NO
		    AND REGIONAL_TRANSPORT_FEE.ACTIVE = 'Y'
		    AND REGIONAL_TRANSPORT_FEE.PAYABLE_TYPE = 'PTE'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D DELIVERY_FEE
	        ON P.PAYABLE_NO = DELIVERY_FEE.PAYABLE_NO
		    AND DELIVERY_FEE.ACTIVE = 'Y'
		    AND DELIVERY_FEE.PAYABLE_TYPE = 'DNU'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D DISPATCH_FEE
	        ON P.PAYABLE_NO = DISPATCH_FEE.PAYABLE_NO
		    AND DISPATCH_FEE.ACTIVE = 'Y'
		    AND DISPATCH_FEE.PAYABLE_TYPE = 'DE'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D DELIVERY_WAREHOUSE_FEE
	        ON P.PAYABLE_NO = DELIVERY_WAREHOUSE_FEE.PAYABLE_NO
		    AND DELIVERY_WAREHOUSE_FEE.ACTIVE = 'Y'
		    AND DELIVERY_WAREHOUSE_FEE.PAYABLE_TYPE = 'PE'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D SIGN_RETURN_FEE
	        ON P.PAYABLE_NO = SIGN_RETURN_FEE.PAYABLE_NO
		    AND SIGN_RETURN_FEE.ACTIVE = 'Y'
		    AND SIGN_RETURN_FEE.PAYABLE_TYPE = 'RB'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D DELIVERY_UPSTAIRS_FEE
	        ON P.PAYABLE_NO = DELIVERY_UPSTAIRS_FEE.PAYABLE_NO
		    AND DELIVERY_UPSTAIRS_FEE.ACTIVE = 'Y'
		    AND DELIVERY_UPSTAIRS_FEE.PAYABLE_TYPE = 'GUENB'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D BIG_UPSTAIRS_FEE
	        ON P.PAYABLE_NO = BIG_UPSTAIRS_FEE.PAYABLE_NO
		    AND BIG_UPSTAIRS_FEE.ACTIVE = 'Y'
		    AND BIG_UPSTAIRS_FEE.PAYABLE_TYPE = 'GBUNB'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D FAR_DELIVERY_FEE
	        ON P.PAYABLE_NO = FAR_DELIVERY_FEE.PAYABLE_NO
		    AND FAR_DELIVERY_FEE.ACTIVE = 'Y'
		    AND FAR_DELIVERY_FEE.PAYABLE_TYPE = 'LS'
		LEFT JOIN PKP.T_SRV_WAYBILL W
			ON P.WAYBILL_NO = W.WAYBILL_NO
			AND W.ACTIVE = 'Y'
		LEFT JOIN BSE.T_BAS_SALES_DEPARTMENT BBS
			ON P.ORIG_ORG_CODE = BBS.CODE
			AND BBS.ACTIVE='Y' 
		<!-- 应付类型为 合伙人到达提成应付，合伙人委托派费应付 -->
        WHERE P.ACTIVE = 'Y'
		AND P.EFFECTIVE_STATUS = 'Y'
		AND P.APPROVE_STATUS = 'AA'
		<!-- 为到达提成，到达提成，运单开单部门为直营网点的委托派费 IS_LEAGUE_SALEDEPT=Y表示为合伙人 -->
		<choose>
			<!-- 到达提成和运单开单部门为直营网点的委托派费, IS_LEAGUE_SALEDEPT=Y表示为合伙人 -->
			<when test="billType == 'PDFP'">
				AND (P.BILL_TYPE = #{pdfpType}
					OR (P.BILL_TYPE = #{pddfType} AND BBS.IS_LEAGUE_SALEDEPT != 'Y')
				)
			</when>
			<!-- 运单开单部门为合伙人营业部的委托派费  -->
			<when test="billType == 'PDDF'">
				AND P.BILL_TYPE = #{pddfType} AND BBS.IS_LEAGUE_SALEDEPT = 'Y'
			</when>
			<otherwise>
				AND P.BILL_TYPE = '' 
			</otherwise>
		</choose>
	  	AND P.UNVERIFY_AMOUNT > 0
  		AND (P.STATEMENT_BILL_NO = 'N/A' OR P.STATEMENT_BILL_NO IS NULL)
	  	AND P.CUSTOMER_CODE=#{customerCode,jdbcType=VARCHAR}
	  	<![CDATA[
	   	AND P.SIGN_DATE>=#{periodBeginDate,jdbcType=TIMESTAMP} 
	   	AND P.SIGN_DATE<#{periodEndDate,jdbcType=TIMESTAMP}
	  	]]>
  </select>
  
   <!-- 按合伙人信息查询合伙人应付单数据统计 -->
  <select id="countStatementDByCustomer" parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.dto.PartnerPayStatementDto" 
  resultType="Integer">
    SELECT 
     	count(1)
         FROM STL.T_STL_BILL_PAYABLE P
        LEFT JOIN STL.T_STL_BILL_PAYABLE_D REGIONAL_TRANSPORT_FEE
        	ON P.PAYABLE_NO = REGIONAL_TRANSPORT_FEE.PAYABLE_NO
		    AND REGIONAL_TRANSPORT_FEE.ACTIVE = 'Y'
		    AND REGIONAL_TRANSPORT_FEE.PAYABLE_TYPE = 'PTE'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D DELIVERY_FEE
	        ON P.PAYABLE_NO = DELIVERY_FEE.PAYABLE_NO
		    AND DELIVERY_FEE.ACTIVE = 'Y'
		    AND DELIVERY_FEE.PAYABLE_TYPE = 'DNU'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D DISPATCH_FEE
	        ON P.PAYABLE_NO = DISPATCH_FEE.PAYABLE_NO
		    AND DISPATCH_FEE.ACTIVE = 'Y'
		    AND DISPATCH_FEE.PAYABLE_TYPE = 'DE'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D DELIVERY_WAREHOUSE_FEE
	        ON P.PAYABLE_NO = DELIVERY_WAREHOUSE_FEE.PAYABLE_NO
		    AND DELIVERY_WAREHOUSE_FEE.ACTIVE = 'Y'
		    AND DELIVERY_WAREHOUSE_FEE.PAYABLE_TYPE = 'PE'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D SIGN_RETURN_FEE
	        ON P.PAYABLE_NO = SIGN_RETURN_FEE.PAYABLE_NO
		    AND SIGN_RETURN_FEE.ACTIVE = 'Y'
		    AND SIGN_RETURN_FEE.PAYABLE_TYPE = 'RB'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D DELIVERY_UPSTAIRS_FEE
	        ON P.PAYABLE_NO = DELIVERY_UPSTAIRS_FEE.PAYABLE_NO
		    AND DELIVERY_UPSTAIRS_FEE.ACTIVE = 'Y'
		    AND DELIVERY_UPSTAIRS_FEE.PAYABLE_TYPE = 'GUENB'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D BIG_UPSTAIRS_FEE
	        ON P.PAYABLE_NO = BIG_UPSTAIRS_FEE.PAYABLE_NO
		    AND BIG_UPSTAIRS_FEE.ACTIVE = 'Y'
		    AND BIG_UPSTAIRS_FEE.PAYABLE_TYPE = 'GBUNB'
	    LEFT JOIN STL.T_STL_BILL_PAYABLE_D FAR_DELIVERY_FEE
	        ON P.PAYABLE_NO = FAR_DELIVERY_FEE.PAYABLE_NO
		    AND FAR_DELIVERY_FEE.ACTIVE = 'Y'
		    AND FAR_DELIVERY_FEE.PAYABLE_TYPE = 'LS'
		LEFT JOIN PKP.T_SRV_WAYBILL W
			ON P.WAYBILL_NO = W.WAYBILL_NO
			AND W.ACTIVE = 'Y'
		LEFT JOIN BSE.T_BAS_SALES_DEPARTMENT BBS
			ON P.ORIG_ORG_CODE = BBS.CODE
			AND BBS.ACTIVE='Y' 
		<!-- 应付类型为 合伙人到达提成应付，合伙人委托派费应付 -->
        WHERE P.ACTIVE = 'Y'
		AND P.EFFECTIVE_STATUS = 'Y'
		AND P.APPROVE_STATUS = 'AA'
		<choose>
			<!-- 到达提成和运单开单部门为直营网点的委托派费, IS_LEAGUE_SALEDEPT=Y表示为合伙人 -->
			<when test="billType == 'PDFP'">
				AND (P.BILL_TYPE = 'PDFP'
					OR (P.BILL_TYPE = 'PDDF' AND BBS.IS_LEAGUE_SALEDEPT != 'Y')
				)
			</when>
			<!-- 运单开单部门为合伙人营业部的委托派费  -->
			<when test="billType == 'PDDF'">
				AND P.BILL_TYPE = 'PDDF' AND BBS.IS_LEAGUE_SALEDEPT = 'Y'
			</when>
			<otherwise>
				AND P.BILL_TYPE = '' 
			</otherwise>
		</choose>
	  	AND P.UNVERIFY_AMOUNT > 0
  		AND (P.STATEMENT_BILL_NO = 'N/A' OR P.STATEMENT_BILL_NO IS NULL)

	  	AND P.CUSTOMER_CODE=#{customerCode,jdbcType=VARCHAR}
	  	<![CDATA[
	   	AND P.SIGN_DATE>=#{periodBeginDate,jdbcType=TIMESTAMP} 
	   	AND P.SIGN_DATE<#{periodEndDate,jdbcType=TIMESTAMP}
	  	]]>
  </select>
 
  <insert id="insert" parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.domain.PartnerPayStatementDEntity" >
    insert into stl.T_STL_STATEMENT_PARTNER_PAY_D (ID, STATEMENT_BILL_NO, PAYABLE_NO, 
      WAYBILL_NO, BILL_TYPE, AUDIT_STATUS, 
      AMOUNT, VERIFY_AMOUNT, UNVERIFY_AMOUNT, 
      ORG_CODE, ORG_NAME, ORIG_ORG_CODE, 
      ORIG_ORG_NAME, DEST_ORG_CODE, DEST_ORG_NAME, 
      CUSTOMER_CODE, CUSTOMER_NAME, DEPT_REGION_CODE, 
      ARRV_REGION_CODE, CUSTOMER_PICKUP_ORG_NAME, 
      GOODS_NAME, DELIVERY_CUSTOMER_CODE, DELIVERY_CUSTOMER_NAME, 
      PAYMENT_TYPE, RECEIVE_METHOD, PRODUCT_CODE, 
      DISABLE_TIME, BUSINESS_DATE, ACCOUNT_DATE, 
      SIGN_DATE, CREATE_TIME, NOTES, 
      WAYBILL_CREATE_DATE, REGIONAL_TRANSPORT_FEE, 
      DELIVERY_FEE, DISPATCH_FEE, DELIVERY_WAREHOUSE_FEE, 
      SIGN_RETURN_FEE, DELIVERY_UPSTAIRS_FEE, BIG_UPSTAIRS_FEE, 
      FAR_DELIVERY_FEE, IS_DELETE)
    values (SYS_GUID(), #{statementBillNo,jdbcType=VARCHAR}, #{payableNo,jdbcType=VARCHAR}, 
      #{waybillNo,jdbcType=VARCHAR}, #{billType,jdbcType=VARCHAR}, #{auditStatus,jdbcType=VARCHAR}, 
      <![CDATA[#{amount,jdbcType=DECIMAL} * 100]]>,  <![CDATA[#{verifyAmount,jdbcType=DECIMAL} * 100]]>,  <![CDATA[#{unverifyAmount,jdbcType=DECIMAL} * 100]]>, 
      #{orgCode,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, #{origOrgCode,jdbcType=VARCHAR}, 
      #{origOrgName,jdbcType=VARCHAR}, #{destOrgCode,jdbcType=VARCHAR}, #{destOrgName,jdbcType=VARCHAR}, 
      #{customerCode,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, #{deptRegionCode,jdbcType=VARCHAR}, 
      #{arrvRegionCode,jdbcType=VARCHAR}, #{customerPickupOrgName,jdbcType=VARCHAR}, 
      #{goodsName,jdbcType=VARCHAR}, #{deliveryCustomerCode,jdbcType=VARCHAR}, #{deliveryCustomerName,jdbcType=VARCHAR}, 
      #{paymentType,jdbcType=VARCHAR}, #{receiveMethod,jdbcType=VARCHAR}, #{productCode,jdbcType=VARCHAR}, 
      #{disableTime,jdbcType=TIMESTAMP}, #{businessDate,jdbcType=TIMESTAMP}, #{accountDate,jdbcType=TIMESTAMP}, 
      #{signDate,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{notes,jdbcType=VARCHAR}, 
      #{waybillCreateDate,jdbcType=TIMESTAMP},  <![CDATA[#{regionalTransportFee,jdbcType=DECIMAL} * 100]]>, 
       <![CDATA[#{deliveryFee,jdbcType=DECIMAL} * 100]]>,  <![CDATA[#{dispatchFee,jdbcType=DECIMAL} * 100]]>,  <![CDATA[#{deliveryWarehouseFee,jdbcType=DECIMAL} * 100]]>, 
       <![CDATA[#{signReturnFee,jdbcType=DECIMAL} * 100]]>,  <![CDATA[#{deliveryUpstairsFee,jdbcType=DECIMAL} * 100]]>,  <![CDATA[#{bigUpstairsFee,jdbcType=DECIMAL} * 100]]>, 
       <![CDATA[#{farDeliveryFee,jdbcType=DECIMAL} * 100]]>, #{isDelete,jdbcType=VARCHAR})
  </insert>
  
    <!-- 按合伙人信息新增付款对账单明细  -->
    <insert id="saveDetailByCustomer" parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.dto.PartnerPayStatementDto" >
      <include refid="Insert_Payable_Column_List"/>
     	<where>
		<!-- 应付类型为 合伙人到达提成应付，合伙人委托派费应付 -->
        P.ACTIVE = 'Y'
		AND P.EFFECTIVE_STATUS = 'Y'
		AND P.APPROVE_STATUS = 'AA'
		<choose>
			<!-- 到达提成和运单开单部门为直营网点的委托派费, IS_LEAGUE_SALEDEPT=Y表示为合伙人 -->
			<when test="billType == 'PDFP'">
				AND (P.BILL_TYPE = 'PDFP'
					OR (P.BILL_TYPE = 'PDDF' AND BBS.IS_LEAGUE_SALEDEPT != 'Y')
				)
			</when>
			<!-- 运单开单部门为合伙人营业部的委托派费  -->
			<when test="billType == 'PDDF'">
				AND P.BILL_TYPE = 'PDDF' AND BBS.IS_LEAGUE_SALEDEPT = 'Y'
			</when>
			<otherwise>
				AND P.BILL_TYPE = '' 
			</otherwise>
		</choose>
	  	AND P.UNVERIFY_AMOUNT > 0
  		AND (P.STATEMENT_BILL_NO = 'N/A' OR P.STATEMENT_BILL_NO IS NULL)
  		<if test="orgCode!=null and orgCode!=''">
	  		AND P.PAYABLE_ORG_CODE = #{orgCode,jdbcType=VARCHAR}
  		</if>
	  	AND P.CUSTOMER_CODE=#{customerCode,jdbcType=VARCHAR}
	  	<![CDATA[
	   	AND P.SIGN_DATE>=#{periodBeginDate,jdbcType=TIMESTAMP} 
	   	AND P.SIGN_DATE<#{periodEndDate,jdbcType=TIMESTAMP}
	  	]]>
		</where>
  </insert>
  
      <!-- 按应付单号新增付款对账单明细  -->
    <insert id="saveDetailByPayableNos" parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.dto.PartnerPayStatementDto" >
      <include refid="Insert_Payable_Column_List"/>
     	<where>
		P.ACTIVE = 'Y'
		AND P.EFFECTIVE_STATUS = 'Y'
		AND P.APPROVE_STATUS = 'AA'
		<!--DECODE函数用于减少函数索引的总数，未核销金额等于0的数据不进入索引  -->
	    AND P.UNVERIFY_AMOUNT>0 
		<choose>
			<!-- 到达提成和运单开单部门为直营网点的委托派费, IS_LEAGUE_SALEDEPT=Y表示为合伙人 -->
			<when test="billType == 'PDFP'">
				AND (P.BILL_TYPE = 'PDFP'
					OR (P.BILL_TYPE = 'PDDF' AND BBS.IS_LEAGUE_SALEDEPT != 'Y')
				)
			</when>
			<!-- 运单开单部门为合伙人营业部的委托派费  -->
			<when test="billType == 'PDDF'">
				AND P.BILL_TYPE = 'PDDF' AND BBS.IS_LEAGUE_SALEDEPT = 'Y'
			</when>
			<otherwise>
				AND P.BILL_TYPE = '' 
			</otherwise>
		</choose>
		AND (P.STATEMENT_BILL_NO = 'N/A' OR P.STATEMENT_BILL_NO IS NULL)
        <if test="customerCode!=null">
        AND P.CUSTOMER_CODE=#{customerCode}  
        </if>
		AND P.PAYABLE_NO IN
          <foreach collection="payableBillNosList" index="index" item="item" open="(" separator="," close=")">
             #{item}
          </foreach>
        </where>
  </insert>
  
      <!-- 按运单号新增付款对账单明细 -->
    <insert id="saveDetailByWaybillNos" parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.dto.PartnerPayStatementDto" >
      <include refid="Insert_Payable_Column_List"/>
     	<where>
		P.ACTIVE = 'Y'
		AND P.EFFECTIVE_STATUS = 'Y'
		AND P.APPROVE_STATUS = 'AA'
		<!--DECODE函数用于减少函数索引的总数，未核销金额等于0的数据不进入索引  -->
          AND P.UNVERIFY_AMOUNT>0 
		<choose>
			<!-- 到达提成和运单开单部门为直营网点的委托派费, IS_LEAGUE_SALEDEPT=Y表示为合伙人 -->
			<when test="billType == 'PDFP'">
				AND (P.BILL_TYPE = 'PDFP'
					OR (P.BILL_TYPE = 'PDDF' AND BBS.IS_LEAGUE_SALEDEPT != 'Y')
				)
			</when>
			<!-- 运单开单部门为合伙人营业部的委托派费  -->
			<when test="billType == 'PDDF'">
				AND P.BILL_TYPE = 'PDDF' AND BBS.IS_LEAGUE_SALEDEPT = 'Y'
			</when>
			<otherwise>
				AND P.BILL_TYPE = '' 
			</otherwise>
		</choose>
		  AND (P.STATEMENT_BILL_NO = 'N/A' OR P.STATEMENT_BILL_NO IS NULL)
          <if test="customerCode!=null">
          AND P.CUSTOMER_CODE=#{customerCode}  
          </if>
		  AND P.WAYBILL_NO IN
          <foreach collection="sourceBillNosList" index="index" item="item" open="(" separator="," close=")">
             #{item}
          </foreach>
        </where>
  </insert>
  
	<!-- 根据对账单号更新应付单 -->
	<update id="updateByStatementBillNo"
	    parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.dto.PartnerPayStatementDto">
		UPDATE /*合伙人付款对账单管理-根据对账单号更新应付单*/
		STL.T_STL_BILL_PAYABLE P
		   SET P.STATEMENT_BILL_NO = #{statementBillNo,jdbcType=VARCHAR},
		       P.MODIFY_TIME       = SYSDATE,
		       P.MODIFY_USER_CODE  = #{empCode,jdbcType=VARCHAR},
		       P.MODIFY_USER_NAME  = #{empName,jdbcType=VARCHAR},
		       P.VERSION_NO        = P.VERSION_NO + 1
		 WHERE P.ACTIVE = 'Y'
		   AND (P.STATEMENT_BILL_NO = 'N/A' OR P.STATEMENT_BILL_NO IS NULL)
		   AND P.PAYABLE_NO IN (SELECT PD.PAYABLE_NO FROM STL.T_STL_STATEMENT_PARTNER_PAY_D PD
								WHERE PD.STATEMENT_BILL_NO = #{statementBillNo,jdbcType=VARCHAR})
	</update>
	
	
	<!-- 付款对账单管理更新应付单 -->
	<update id="updatePayableByPayableNo"
	    parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.dto.PartnerPayStatementDto">
		UPDATE /*合伙人付款对账单管理-付款对账单管理更新应付单*/
		STL.T_STL_BILL_PAYABLE P
		   SET P.STATEMENT_BILL_NO = #{statementBillNo,jdbcType=VARCHAR},
		       P.MODIFY_TIME       = SYSDATE,
		       P.MODIFY_USER_CODE  = #{empCode,jdbcType=VARCHAR},
		       P.MODIFY_USER_NAME  = #{empName,jdbcType=VARCHAR},
		       P.VERSION_NO        = P.VERSION_NO + 1
		 WHERE P.ACTIVE = 'Y'
		   AND P.BILL_TYPE = #{billType,jdbcType=VARCHAR}
		   AND (P.STATEMENT_BILL_NO = 'N/A' OR P.STATEMENT_BILL_NO IS NULL)
		   AND P.PAYABLE_NO = #{payableNo, jdbcType=VARCHAR}
	</update>
	
  <insert id="insertSelective" parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.domain.PartnerPayStatementDEntity" >
    insert into stl.T_STL_STATEMENT_PARTNER_PAY_D
    <trim prefix="(" suffix=")" suffixOverrides="," >
        ID,
      <if test="statementBillNo != null" >
        STATEMENT_BILL_NO,
      </if>
      <if test="payableNo != null" >
        PAYABLE_NO,
      </if>
      <if test="waybillNo != null" >
        WAYBILL_NO,
      </if>
      <if test="billType != null" >
        BILL_TYPE,
      </if>
      <if test="auditStatus != null" >
        AUDIT_STATUS,
      </if>
      <if test="amount != null" >
        AMOUNT,
      </if>
      <if test="verifyAmount != null" >
        VERIFY_AMOUNT,
      </if>
      <if test="orgCode != null" >
        ORG_CODE,
      </if>
      <if test="orgName != null" >
        ORG_NAME,
      </if>
      <if test="origOrgCode != null" >
        ORIG_ORG_CODE,
      </if>
      <if test="origOrgName != null" >
        ORIG_ORG_NAME,
      </if>
      <if test="destOrgCode != null" >
        DEST_ORG_CODE,
      </if>
      <if test="destOrgName != null" >
        DEST_ORG_NAME,
      </if>
      <if test="customerCode != null" >
        CUSTOMER_CODE,
      </if>
      <if test="customerName != null" >
        CUSTOMER_NAME,
      </if>
      <if test="deptRegionCode != null" >
        DEPT_REGION_CODE,
      </if>
      <if test="arrvRegionCode != null" >
        ARRV_REGION_CODE,
      </if>
      <if test="customerPickupOrgName != null" >
        CUSTOMER_PICKUP_ORG_NAME,
      </if>
      <if test="goodsName != null" >
        GOODS_NAME,
      </if>
      <if test="deliveryCustomerCode != null" >
        DELIVERY_CUSTOMER_CODE,
      </if>
      <if test="deliveryCustomerName != null" >
        DELIVERY_CUSTOMER_NAME,
      </if>
      <if test="paymentType != null" >
        PAYMENT_TYPE,
      </if>
      <if test="receiveMethod != null" >
        RECEIVE_METHOD,
      </if>
      <if test="productCode != null" >
        PRODUCT_CODE,
      </if>
      <if test="disableTime != null" >
        DISABLE_TIME,
      </if>
      <if test="businessDate != null" >
        BUSINESS_DATE,
      </if>
      <if test="accountDate != null" >
        ACCOUNT_DATE,
      </if>
      <if test="signDate != null" >
        SIGN_DATE,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="notes != null" >
        NOTES,
      </if>
      <if test="waybillCreateDate != null" >
        WAYBILL_CREATE_DATE,
      </if>
      <if test="regionalTransportFee != null" >
        REGIONAL_TRANSPORT_FEE,
      </if>
      <if test="deliveryFee != null" >
        DELIVERY_FEE,
      </if>
      <if test="dispatchFee != null" >
        DISPATCH_FEE,
      </if>
      <if test="deliveryWarehouseFee != null" >
        DELIVERY_WAREHOUSE_FEE,
      </if>
      <if test="signReturnFee != null" >
        SIGN_RETURN_FEE,
      </if>
      <if test="deliveryUpstairsFee != null" >
        DELIVERY_UPSTAIRS_FEE,
      </if>
      <if test="bigUpstairsFee != null" >
        BIG_UPSTAIRS_FEE,
      </if>
      <if test="farDeliveryFee != null" >
        FAR_DELIVERY_FEE,
      </if>
       UNVERIFY_AMOUNT
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
     	SYS_GUID(),
      <if test="statementBillNo != null" >
        #{statementBillNo,jdbcType=VARCHAR},
      </if>
      <if test="payableNo != null" >
        #{payableNo,jdbcType=VARCHAR},
      </if>
      <if test="waybillNo != null" >
        #{waybillNo,jdbcType=VARCHAR},
      </if>
      <if test="billType != null" >
        #{billType,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null" >
        #{auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
         <![CDATA[#{amount,jdbcType=DECIMAL} * 100]]>,
      </if>
      <if test="verifyAmount != null" >
         <![CDATA[#{verifyAmount,jdbcType=DECIMAL} * 100]]>,
      </if>
      <if test="orgCode != null" >
        #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="origOrgCode != null" >
        #{origOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="origOrgName != null" >
        #{origOrgName,jdbcType=VARCHAR},
      </if>
      <if test="destOrgCode != null" >
        #{destOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="destOrgName != null" >
        #{destOrgName,jdbcType=VARCHAR},
      </if>
      <if test="customerCode != null" >
        #{customerCode,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null" >
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="deptRegionCode != null" >
        #{deptRegionCode,jdbcType=VARCHAR},
      </if>
      <if test="arrvRegionCode != null" >
        #{arrvRegionCode,jdbcType=VARCHAR},
      </if>
      <if test="customerPickupOrgName != null" >
        #{customerPickupOrgName,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="deliveryCustomerCode != null" >
        #{deliveryCustomerCode,jdbcType=VARCHAR},
      </if>
      <if test="deliveryCustomerName != null" >
        #{deliveryCustomerName,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null" >
        #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="receiveMethod != null" >
        #{receiveMethod,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null" >
        #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="disableTime != null" >
        #{disableTime,jdbcType=TIMESTAMP},
      </if>
      <if test="businessDate != null" >
        #{businessDate,jdbcType=TIMESTAMP},
      </if>
      <if test="accountDate != null" >
        #{accountDate,jdbcType=TIMESTAMP},
      </if>
      <if test="signDate != null" >
        #{signDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="notes != null" >
        #{notes,jdbcType=VARCHAR},
      </if>
      <if test="waybillCreateDate != null" >
        #{waybillCreateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="regionalTransportFee != null" >
         <![CDATA[#{regionalTransportFee,jdbcType=DECIMAL} * 100]]>,
      </if>
      <if test="deliveryFee != null" >
        <![CDATA[ #{deliveryFee,jdbcType=DECIMAL} * 100]]>,
      </if>
      <if test="dispatchFee != null" >
        <![CDATA[ #{dispatchFee,jdbcType=DECIMAL} * 100]]>,
      </if>
      <if test="deliveryWarehouseFee != null" >
         <![CDATA[#{deliveryWarehouseFee,jdbcType=DECIMAL} * 100]]>,
      </if>
      <if test="signReturnFee != null" >
         <![CDATA[#{signReturnFee,jdbcType=DECIMAL} * 100]]>,
      </if>
      <if test="deliveryUpstairsFee != null" >
         <![CDATA[#{deliveryUpstairsFee,jdbcType=DECIMAL} * 100]]>,
      </if>
      <if test="bigUpstairsFee != null" >
         <![CDATA[#{bigUpstairsFee,jdbcType=DECIMAL} * 100]]>,
      </if>
      <if test="farDeliveryFee != null" >
         <![CDATA[#{farDeliveryFee,jdbcType=DECIMAL} * 100]]>,
      </if>
       <![CDATA[#{unverifyAmount,jdbcType=DECIMAL} * 100]]>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.domain.PartnerPayStatementDEntity" >
    update stl.T_STL_STATEMENT_PARTNER_PAY_D
    <set >
      <if test="statementBillNo != null" >
        STATEMENT_BILL_NO = #{statementBillNo,jdbcType=VARCHAR},
      </if>
      <if test="payableNo != null" >
        PAYABLE_NO = #{payableNo,jdbcType=VARCHAR},
      </if>
      <if test="waybillNo != null" >
        WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR},
      </if>
      <if test="billType != null" >
        BILL_TYPE = #{billType,jdbcType=VARCHAR},
      </if>
      <if test="auditStatus != null" >
        AUDIT_STATUS = #{auditStatus,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        AMOUNT = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="verifyAmount != null" >
        VERIFY_AMOUNT = #{verifyAmount,jdbcType=DECIMAL},
      </if>
      <if test="unverifyAmount != null" >
        UNVERIFY_AMOUNT = #{unverifyAmount,jdbcType=DECIMAL},
      </if>
      <if test="orgCode != null" >
        ORG_CODE = #{orgCode,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null" >
        ORG_NAME = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="origOrgCode != null" >
        ORIG_ORG_CODE = #{origOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="origOrgName != null" >
        ORIG_ORG_NAME = #{origOrgName,jdbcType=VARCHAR},
      </if>
      <if test="destOrgCode != null" >
        DEST_ORG_CODE = #{destOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="destOrgName != null" >
        DEST_ORG_NAME = #{destOrgName,jdbcType=VARCHAR},
      </if>
      <if test="customerCode != null" >
        CUSTOMER_CODE = #{customerCode,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null" >
        CUSTOMER_NAME = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="deptRegionCode != null" >
        DEPT_REGION_CODE = #{deptRegionCode,jdbcType=VARCHAR},
      </if>
      <if test="arrvRegionCode != null" >
        ARRV_REGION_CODE = #{arrvRegionCode,jdbcType=VARCHAR},
      </if>
      <if test="customerPickupOrgName != null" >
        CUSTOMER_PICKUP_ORG_NAME = #{customerPickupOrgName,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null" >
        GOODS_NAME = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="deliveryCustomerCode != null" >
        DELIVERY_CUSTOMER_CODE = #{deliveryCustomerCode,jdbcType=VARCHAR},
      </if>
      <if test="deliveryCustomerName != null" >
        DELIVERY_CUSTOMER_NAME = #{deliveryCustomerName,jdbcType=VARCHAR},
      </if>
      <if test="paymentType != null" >
        PAYMENT_TYPE = #{paymentType,jdbcType=VARCHAR},
      </if>
      <if test="receiveMethod != null" >
        RECEIVE_METHOD = #{receiveMethod,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null" >
        PRODUCT_CODE = #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="disableTime != null" >
        DISABLE_TIME = #{disableTime,jdbcType=TIMESTAMP},
      </if>
      <if test="businessDate != null" >
        BUSINESS_DATE = #{businessDate,jdbcType=TIMESTAMP},
      </if>
      <if test="accountDate != null" >
        ACCOUNT_DATE = #{accountDate,jdbcType=TIMESTAMP},
      </if>
      <if test="signDate != null" >
        SIGN_DATE = #{signDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="notes != null" >
        NOTES = #{notes,jdbcType=VARCHAR},
      </if>
      <if test="waybillCreateDate != null" >
        WAYBILL_CREATE_DATE = #{waybillCreateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="regionalTransportFee != null" >
        REGIONAL_TRANSPORT_FEE = #{regionalTransportFee,jdbcType=DECIMAL},
      </if>
      <if test="deliveryFee != null" >
        DELIVERY_FEE = #{deliveryFee,jdbcType=DECIMAL},
      </if>
      <if test="dispatchFee != null" >
        DISPATCH_FEE = #{dispatchFee,jdbcType=DECIMAL},
      </if>
      <if test="deliveryWarehouseFee != null" >
        DELIVERY_WAREHOUSE_FEE = #{deliveryWarehouseFee,jdbcType=DECIMAL},
      </if>
      <if test="signReturnFee != null" >
        SIGN_RETURN_FEE = #{signReturnFee,jdbcType=DECIMAL},
      </if>
      <if test="deliveryUpstairsFee != null" >
        DELIVERY_UPSTAIRS_FEE = #{deliveryUpstairsFee,jdbcType=DECIMAL},
      </if>
      <if test="bigUpstairsFee != null" >
        BIG_UPSTAIRS_FEE = #{bigUpstairsFee,jdbcType=DECIMAL},
      </if>
      <if test="farDeliveryFee != null" >
        FAR_DELIVERY_FEE = #{farDeliveryFee,jdbcType=DECIMAL},
      </if>
      <if test="isDelete != null" >
        IS_DELETE = #{isDelete,jdbcType=VARCHAR}
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.domain.PartnerPayStatementDEntity" >
    update stl.T_STL_STATEMENT_PARTNER_PAY_D
    set STATEMENT_BILL_NO = #{statementBillNo,jdbcType=VARCHAR},
      PAYABLE_NO = #{payableNo,jdbcType=VARCHAR},
      WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR},
      BILL_TYPE = #{billType,jdbcType=VARCHAR},
      AUDIT_STATUS = #{auditStatus,jdbcType=VARCHAR},
      AMOUNT = #{amount,jdbcType=DECIMAL},
      VERIFY_AMOUNT = #{verifyAmount,jdbcType=DECIMAL},
      UNVERIFY_AMOUNT = #{unverifyAmount,jdbcType=DECIMAL},
      ORG_CODE = #{orgCode,jdbcType=VARCHAR},
      ORG_NAME = #{orgName,jdbcType=VARCHAR},
      ORIG_ORG_CODE = #{origOrgCode,jdbcType=VARCHAR},
      ORIG_ORG_NAME = #{origOrgName,jdbcType=VARCHAR},
      DEST_ORG_CODE = #{destOrgCode,jdbcType=VARCHAR},
      DEST_ORG_NAME = #{destOrgName,jdbcType=VARCHAR},
      CUSTOMER_CODE = #{customerCode,jdbcType=VARCHAR},
      CUSTOMER_NAME = #{customerName,jdbcType=VARCHAR},
      DEPT_REGION_CODE = #{deptRegionCode,jdbcType=VARCHAR},
      ARRV_REGION_CODE = #{arrvRegionCode,jdbcType=VARCHAR},
      CUSTOMER_PICKUP_ORG_NAME = #{customerPickupOrgName,jdbcType=VARCHAR},
      GOODS_NAME = #{goodsName,jdbcType=VARCHAR},
      DELIVERY_CUSTOMER_CODE = #{deliveryCustomerCode,jdbcType=VARCHAR},
      DELIVERY_CUSTOMER_NAME = #{deliveryCustomerName,jdbcType=VARCHAR},
      PAYMENT_TYPE = #{paymentType,jdbcType=VARCHAR},
      RECEIVE_METHOD = #{receiveMethod,jdbcType=VARCHAR},
      PRODUCT_CODE = #{productCode,jdbcType=VARCHAR},
      DISABLE_TIME = #{disableTime,jdbcType=TIMESTAMP},
      BUSINESS_DATE = #{businessDate,jdbcType=TIMESTAMP},
      ACCOUNT_DATE = #{accountDate,jdbcType=TIMESTAMP},
      SIGN_DATE = #{signDate,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      NOTES = #{notes,jdbcType=VARCHAR},
      WAYBILL_CREATE_DATE = #{waybillCreateDate,jdbcType=TIMESTAMP},
      REGIONAL_TRANSPORT_FEE = #{regionalTransportFee,jdbcType=DECIMAL},
      DELIVERY_FEE = #{deliveryFee,jdbcType=DECIMAL},
      DISPATCH_FEE = #{dispatchFee,jdbcType=DECIMAL},
      DELIVERY_WAREHOUSE_FEE = #{deliveryWarehouseFee,jdbcType=DECIMAL},
      SIGN_RETURN_FEE = #{signReturnFee,jdbcType=DECIMAL},
      DELIVERY_UPSTAIRS_FEE = #{deliveryUpstairsFee,jdbcType=DECIMAL},
      BIG_UPSTAIRS_FEE = #{bigUpstairsFee,jdbcType=DECIMAL},
      FAR_DELIVERY_FEE = #{farDeliveryFee,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 按对账单号查询对账单明细 -->
   <select id="selectByStatementBillNo" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select /*合伙人付款对账单管理-按对账单号查询对账单明细*/
    <include refid="Base_Column_List" />
    from STL.T_STL_STATEMENT_PARTNER_PAY_D
    <where> 
    	STATEMENT_BILL_NO = #{statementBillNo,jdbcType=VARCHAR}
    	and NVL(IS_DELETE, 'N') != 'Y'
    </where>
    order by BUSINESS_DATE
  </select>
  
    <!-- 按对账单号集合查询对账单明细 -->
   <select id="selectByStatementBillNos" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select /*合伙人付款对账单管理-按对账单号集合查询对账单明细*/
    <include refid="Base_Column_List" />
    from STL.T_STL_STATEMENT_PARTNER_PAY_D
    <where> 
    	  STATEMENT_BILL_NO IN
      <foreach collection="statementBillNos" index="index" item="item" open="(" separator="," close=")">
       #{item}
      </foreach>
    	and NVL(IS_DELETE, 'N') != 'Y'
    </where>
    order by BUSINESS_DATE
  </select>
  <!-- 按运单号、应付单号查询对账单明细 -->
 <select id="selectStatementByWaybillNos" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select /*合伙人付款对账单管理-按运单号、应付单号查询对账单明细*/
    <include refid="Base_Column_List" />
    from STL.T_STL_STATEMENT_PARTNER_PAY_D
    <where>
      PAYABLE_NO IN
      <foreach collection="waybillNos" index="index" item="item" open="(" separator="," close=")">
       #{item}
      </foreach>
     or
     WAYBILL_NO IN 
    <foreach collection="waybillNos" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
   and NVL(IS_DELETE, 'N') != 'Y'
    </where>
 </select>
   <!-- 更新对账单明细已核销金额(账单下所有，不包括已删除) -->
<update id="partnerStatementUpdateByStatementBillNo"
    parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.dto.PartnerPayStatementDto">
    UPDATE /*合伙人付款对账单管理-更新对账单明细已核销金额*/
    STL.T_STL_STATEMENT_PARTNER_PAY_D W
	   SET W.VERIFY_AMOUNT = W.AMOUNT
	 <where> 
	 	W.STATEMENT_BILL_NO = #{statementBillNo,jdbcType=VARCHAR}
	 	and NVL(W.IS_DELETE, 'N') != 'Y'
	 </where>
</update>

   <!-- 更新对账单明细已核销金额(账单下所有，不包括已删除) -->
<update id="partnerStatementUpdateByStatementBillNos"
    parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.dto.PartnerPayStatementDto">
    UPDATE /*合伙人付款对账单管理-更新对账单明细已核销金额*/
    STL.T_STL_STATEMENT_PARTNER_PAY_D W
	   SET W.VERIFY_AMOUNT = W.AMOUNT
	 <where> 
	 	W.STATEMENT_BILL_NO IN
	 	<foreach collection="statementBillNoList" index="index" item="item" open="(" separator="," close=")">
       	#{item}
    	  </foreach>
	 	and NVL(W.IS_DELETE, 'N') != 'Y'
	 </where>
</update>

   <!-- 更新对账单明细已核销金额(付款失败回调) -->
<update id="partnerStatementUpdateVerifyAmountZero"
    parameterType="com.deppon.foss.module.settlement.writeoff.api.shared.dto.PartnerPayStatementDto">
    UPDATE /*合伙人付款对账单管理-更新对账单明细已核销金额(付款失败回调)*/
    STL.T_STL_STATEMENT_PARTNER_PAY_D W
	   SET W.VERIFY_AMOUNT = 0
	 <where> 
	 	W.STATEMENT_BILL_NO IN
	 	<foreach collection="statementBillNoList" index="index" item="item" open="(" separator="," close=")">
       	#{item}
    	  </foreach>
	 	and NVL(W.IS_DELETE, 'N') != 'Y'
	 </where>
</update>

	<!-- 批量删除对账单明细 -->
	<update id="batchDeleteStatementEntry" parameterType="map">
		UPDATE /*合伙人付款对账单管理-批量删除对账单明细*/
		stl.t_stl_statement_partner_pay_d d
		SET d.is_delete = #{isDelete,jdbcType=CHAR}, 
			d.disable_time = #{disableTime,jdbcType=TIMESTAMP}
		<where>
			 d.id in 
			<foreach collection="detailList" index="index" item="item" open="(" separator="," close=")">
       			#{item.id}
    	  	</foreach>
		</where> 
	</update>

	<!-- 根据对账单号查询明细中的金额之和以及业务起止日期 -->
	<select id="queryTotalAmountByStatementNo" parameterType="string" resultType="com.deppon.foss.module.settlement.writeoff.api.shared.dto.PartnerPayStatementDto">
		SELECT /*合伙人付款对账单管理-根据对账单号查询明细中的金额之和以及业务起止日期*/
			NVL(SUM(d.unverify_amount)/100,0) periodAmount, 
			MAX(d.SIGN_DATE) periodEndDate, 
			MIN(d.SIGN_DATE) periodBeginDate
		FROM  STL.T_STL_STATEMENT_PARTNER_PAY_D d
		<where>
			d.STATEMENT_BILL_NO = #{statementBillNo,jdbcType=VARCHAR}
			and NVL(d.IS_DELETE, 'N') != 'Y'
		</where> 
	</select>
</mapper>