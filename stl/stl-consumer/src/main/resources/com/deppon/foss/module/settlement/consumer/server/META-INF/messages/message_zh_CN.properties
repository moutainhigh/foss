foss.stl.consumer.common.query=查询
foss.stl.consumer.common.queryByNo=按单号查询
foss.stl.consumer.common.queryByDate=按日期查询
foss.stl.consumer.common.queryByWaybillNo=按运单号查询
foss.stl.consumer.common.queryBySourceNo=按来源单号查询
foss.stl.consumer.common.batchNo=按银联交易流水号查询
foss.stl.consumer.common.reset=重置
foss.stl.consumer.common.commit=提交
foss.stl.consumer.common.save=保存
foss.stl.consumer.common.export=导出
foss.stl.consumer.common.delete=删除
foss.stl.consumer.common.close=关闭
foss.stl.consumer.common.audit=审核
foss.stl.consumer.common.return=退回
foss.stl.consumer.common.print=打印
foss.stl.consumer.common.unAudit=反审核
foss.stl.consumer.common.showDetail=查看明细
foss.stl.consumer.common.warmTips=温馨提示
foss.stl.consumer.common.OK=确定
foss.stl.consumer.common.cancel=取消
foss.stl.consumer.common.all=全部
foss.stl.consumer.common.emptyText=查询结果为空
foss.stl.consumer.common.actionColumn=操作列
foss.stl.consumer.common.serialNo=序号
foss.stl.consumer.common.sourceBillTypeW=运单
foss.stl.consumer.common.sourceBillTypeR=小票
foss.stl.consumer.common.sourceBillTypeM=人工录入
foss.stl.consumer.common.sourceBillTypeE=异常出库
foss.stl.consumer.common.billTypeOR=始发应收
foss.stl.consumer.common.billTypeDR=到达应收
foss.stl.consumer.common.billTypeCR=代收货款应收
foss.stl.consumer.common.billTypeAR=空运其他应收
foss.stl.consumer.common.billTypeRR=小票应收
foss.stl.consumer.common.billTypeDP=到达偏线代理应收单
foss.stl.consumer.common.billTypeAA=空运中转代理应收
foss.stl.consumer.common.currencyCodeRMB=人民币
foss.stl.consumer.common.currencyCodeHKD=港币
foss.stl.consumer.common.currencyCodeNTD=台币
foss.stl.consumer.common.currencyCodeUSD=美元
foss.stl.consumer.common.yes=是
foss.stl.consumer.common.no=否
foss.stl.consumer.common.approveStatusNA=未审核
foss.stl.consumer.common.approveStatusAA=已审核
foss.stl.consumer.common.noDataUnderThisQuery=在当前条件查询范围内，没有符合要求的数据!
foss.stl.consumer.common.validateFailAlert=请检查输入条件是否合法!
foss.stl.consumer.common.validateRegionFailAlert=大区、小区和营业部至少填写一项
foss.stl.consumer.common.active=是否有效
foss.stl.consumer.common.isActiveY=有效
foss.stl.consumer.common.isActiveN=无效
foss.stl.consumer.common.createTime=创建时间
foss.stl.consumer.common.createUserName=创建人
foss.stl.consumer.common.modifyTime=修改时间
foss.stl.consumer.common.modifyUserName=修改人
foss.stl.consumer.common.billClaimTotalRows=合计&nbsp;总条数
foss.stl.consumer.common.amount=金额
foss.stl.consumer.common.waybillNo=运单号
foss.stl.consumer.common.customerName=客户名称
foss.stl.consumer.common.airAgeny=空运代理
foss.stl.consumer.common.vehAgency=偏线代理
foss.stl.consumer.common.airline=航空公司
foss.stl.consumer.common.customerCode=客户编码
foss.stl.consumer.common.customerType=客户类型
foss.stl.consumer.common.all=全部
foss.stl.consumer.common.customerDetial=客户信息
foss.stl.consumer.common.airDetial=航空公司
foss.stl.consumer.common.airAgencyDetial=空运代理
foss.stl.consumer.common.vehAgencyDetial=偏线代理
foss.stl.consumer.common.isSign=是否签收
foss.stl.consumer.common.isSignY=已签收
foss.stl.consumer.common.isSignN=未签收
foss.stl.consumer.common.businessDate=业务日期
foss.stl.consumer.common.accountDate=记账日期
foss.stl.consumer.common.sourceBillNo=来源单号
foss.stl.consumer.common.notes=备注
foss.stl.consumer.common.totalRecords=合计
foss.stl.consumer.common.totalAmount=总金额
foss.stl.consumer.common.verifyAmount=已核销总金额
foss.stl.consumer.common.unverifyAmount=未核销总金额
foss.stl.consumer.common.receivableNo=应收单编号
foss.stl.consumer.common.payableNo=应付单单号
foss.stl.consumer.common.repaymentNo=还款单编号
foss.stl.consumer.common.paymentNo=付款单号
foss.stl.consumer.common.writeoffBillNo=核销单编号
foss.stl.consumer.common.paymentType=支付方式
foss.stl.consumer.common.isRedBack=是否红单
foss.stl.consumer.common.stamp=是否标记
foss.stl.consumer.common.OrgName=部门名称
foss.stl.consumer.common.receivableBill=应收单
foss.stl.consumer.common.payableBill=应付单
foss.stl.consumer.common.repaymentBill=还款单
foss.stl.consumer.common.cashCollectionBill=现金收款单
foss.stl.consumer.common.paymentBill=付款单
foss.stl.consumer.common.writeoffBill=核销单
foss.stl.consumer.common.isInit=是否初始化
foss.stl.consumer.common.alert=温馨提示
foss.stl.consumer.common.noDataToExport=没有要导出的数据！
foss.stl.consumer.common.landStowage =快递代理
foss.stl.consumer.common.packagingSupplier =包装代理
foss.stl.consumer.common.homesupply=家装代理


#--------------------qiaolifeng 应收应付查询 queryReceivabePaymentBill start------------------------------------
foss.stl.consumer.queryReceivablePaymentBill.billNosEmptyText=请输入1个或10内的多个单号,单号之间用半角逗号隔开
foss.stl.consumer.queryReceivablePaymentBill.billNosRegexText=单号必须是7-14位数字以， 或；隔开
foss.stl.consumer.queryReceivablePaymentBill.billNosInputIsNotNull=必须输入单号进行
foss.stl.consumer.queryReceivablePaymentBill.billNosInoutIsToMore=查询运单单号不能为超过10个,请删减后再查询
foss.stl.consumer.queryReceivablePaymentBill.billQueryInfoGridTitle=运单查询列表
foss.stl.consumer.queryReceivablePaymentBill.receivableOrgName=部门名称
foss.stl.consumer.queryReceivablePaymentBill.billType=单据子类型
foss.stl.consumer.queryReceivablePaymentBill.productCode=产品类型
foss.stl.consumer.queryReceivablePaymentBill.conrevenDate=签收时间
foss.stl.consumer.queryReceivablePaymentBill.paymentStatus=付款状态
foss.stl.consumer.queryReceivablePaymentBill.statementBillNo=对账单号
foss.stl.consumer.queryReceivablePaymentBill.collectionOrgCodeHK=还款部门编码
foss.stl.consumer.queryReceivablePaymentBill.collectionOrgNameHK=还款部门名称
foss.stl.consumer.queryReceivablePaymentBill.trueAmount=实际还款金额
foss.stl.consumer.queryReceivablePaymentBill.bverifyAmount=反核销金额
foss.stl.consumer.queryReceivablePaymentBill.auditStatus=审核状态
foss.stl.consumer.queryReceivablePaymentBill.rePaymentType=还款方式
foss.stl.consumer.queryReceivablePaymentBill.collectionOrgNameCH=收款部门名称
foss.stl.consumer.queryReceivablePaymentBill.generatingOrgName=收入部门名称
foss.stl.consumer.queryReceivablePaymentBill.status=单据状态
foss.stl.consumer.queryReceivablePaymentBill.paymentType=付款方式
foss.stl.consumer.queryReceivablePaymentBill.cashConfirmUserName=收银员名称
foss.stl.consumer.queryReceivablePaymentBill.applyWorkFlowNo=申请备用金工作流号
foss.stl.consumer.queryReceivablePaymentBill.paymentOrgCode=付款部门编码
foss.stl.consumer.queryReceivablePaymentBill.paymentOrgName=付款部门名称
foss.stl.consumer.queryReceivablePaymentBill.amountPK=付款金额
foss.stl.consumer.queryReceivablePaymentBill.remitStatus=汇款状态
foss.stl.consumer.queryReceivablePaymentBill.sourceBillType=来源单据
foss.stl.consumer.queryReceivablePaymentBill.beginNo=开始单号
foss.stl.consumer.queryReceivablePaymentBill.endNo=目的单号
foss.stl.consumer.queryReceivablePaymentBill.writeoffType=核销类型
foss.stl.consumer.queryReceivablePaymentBill.amountHX=核销金额
foss.stl.consumer.queryReceivablePaymentBill.queryNosIsNotNull=查询单号不能为空
foss.stl.consumer.queryReceivablePaymentBill.paymentAmount=付款金额


#--------------------qiaolifeng 应收单查询 queryReceivableBill start------------------------------------
foss.stl.consumer.queryReceivableBill.queryByNo=按运单/应收单
foss.stl.consumer.queryReceivableBill.createTypeA=系统生成
foss.stl.consumer.queryReceivableBill.createTypeM=手工输入
foss.stl.consumer.queryReceivableBill.startDateIsNotNull=开始时间不能为空
foss.stl.consumer.queryReceivableBill.endDateIsNotNull=结束时间不能为空
foss.stl.consumer.queryReceivableBill.endDateIsNotBeforeStart=开始时间不能大于结束时间
foss.stl.consumer.queryReceivableBill.startToEndDateIsNotMaxDay=开始时间与结束时间相差不能超过
foss.stl.consumer.queryReceivableBill.day=天
foss.stl.consumer.queryReceivableBill.exportSuccess=导出成功
foss.stl.consumer.queryReceivableBill.exportFail=导出失败
foss.stl.consumer.queryReceivableBill.waybillNosIsNotNull=必须输入单号进行
foss.stl.consumer.queryReceivableBill.dateType=日期类型
foss.stl.consumer.queryReceivableBill.startDate=开始日期
foss.stl.consumer.queryReceivableBill.endDate=结束日期
foss.stl.consumer.queryReceivableBill.org=部门
foss.stl.consumer.queryReceivableBill.bigArea=大&nbsp;&nbsp;区
foss.stl.consumer.queryReceivableBill.smallArea=小&nbsp;&nbsp;区
foss.stl.consumer.queryReceivableBill.sourceBillType=来源单据类型
foss.stl.consumer.queryReceivableBill.billType=单据子类型
foss.stl.consumer.queryReceivableBill.billNosEmptyText=请输入1个或10内的多个单号,单号之间用半角逗号隔开
foss.stl.consumer.queryReceivableBill.billNosRegexText=单号必须是7-14位数字以， 或；隔开
foss.stl.consumer.queryReceivableBill.sourceBillNosNots=(备注：单号包括：运单、小票、航空正单号)
foss.stl.consumer.queryReceivableBill.waybillNosInputToMore=查询运单号不能为超过10个,请删减后再查询
foss.stl.consumer.queryReceivableBill.sourceBillNosInputToMore=查询来源单号不能为超过10个,请删减后再查询
foss.stl.consumer.queryReceivableBill.createType=系统生成方式
foss.stl.consumer.queryReceivableBill.receivableOrgCode=应收部门编码
foss.stl.consumer.queryReceivableBill.receivableOrgName=应收部门名称
foss.stl.consumer.queryReceivableBill.generatingOrgName=收入部门
foss.stl.consumer.queryReceivableBill.generatingOrgCode=收入部门编码
foss.stl.consumer.queryReceivableBill.generatingComCode=收入子公司编码
foss.stl.consumer.queryReceivableBill.generatingComName=收入子公司名称
foss.stl.consumer.queryReceivableBill.dunningOrgCode=催款部门编码
foss.stl.consumer.queryReceivableBill.dunningOrgName=催款部门名称
foss.stl.consumer.queryReceivableBill.origOrgCode=出发部门编码
foss.stl.consumer.queryReceivableBill.origOrgName=出发部门名称
foss.stl.consumer.queryReceivableBill.destOrgCode=到达部门编码
foss.stl.consumer.queryReceivableBill.destOrgName=到达部门名称
foss.stl.consumer.queryReceivableBill.deliveryCustomerCode=发货客户编码
foss.stl.consumer.queryReceivableBill.deliveryCustomerName=发货客户名称
foss.stl.consumer.queryReceivableBill.receiveCustomerCode=收货客户编码
foss.stl.consumer.queryReceivableBill.receiveCustomerName=收货客户名称
foss.stl.consumer.queryReceivableBill.currencyCode=币种
foss.stl.consumer.queryReceivableBill.conrevenDate=确认收入日期
foss.stl.consumer.queryReceivableBill.productCode=运输性质
foss.stl.consumer.queryReceivableBill.productId=产品ID
foss.stl.consumer.queryReceivableBill.pickupFee=接货费
foss.stl.consumer.queryReceivableBill.deliveryGoodsFee=送货费
foss.stl.consumer.queryReceivableBill.packagingFee=包装手续费
foss.stl.consumer.queryReceivableBill.codFee=代收货款手续费
foss.stl.consumer.queryReceivableBill.insuranceFee=保价费
foss.stl.consumer.queryReceivableBill.otherFee=其他费用
foss.stl.consumer.queryReceivableBill.valueAddFee=增值费用
foss.stl.consumer.queryReceivableBill.promotionsFee=优惠费用
foss.stl.consumer.queryReceivableBill.goodsName=货物名称
foss.stl.consumer.queryReceivableBill.goodsVolumeTotal=货物总体积
foss.stl.consumer.queryReceivableBill.billWeight=计费重量
foss.stl.consumer.queryReceivableBill.goodsQtyTotal=货物总件数
foss.stl.consumer.queryReceivableBill.targetOrgCode=目的站
foss.stl.consumer.queryReceivableBill.createUserCode=制单人编码
foss.stl.consumer.queryReceivableBill.createUserName=制单人名称
foss.stl.consumer.queryReceivableBill.createOrgCode=制单部门编码
foss.stl.consumer.queryReceivableBill.createOrgName=制单部门名称
foss.stl.consumer.queryReceivableBill.modifyUserCode=修改人编码
foss.stl.consumer.queryReceivableBill.modifyUserName=修改人名称
foss.stl.consumer.queryReceivableBill.statementBillNo=对账单号
foss.stl.consumer.queryReceivableBill.unlockDateTime=解锁时间
foss.stl.consumer.queryReceivableBill.lockCustomerCode=锁定客户编码
foss.stl.consumer.queryReceivableBill.lockCustomerName=锁定客户名称
foss.stl.consumer.queryReceivableBill.collectionType=收款类别
foss.stl.consumer.queryReceivableBill.collectionName=收款事项
foss.stl.consumer.queryReceivableBill.auditUserCode=审核人编码
foss.stl.consumer.queryReceivableBill.auditUserName=审核人名称
foss.stl.consumer.queryReceivableBill.approveStatus=审批状态
foss.stl.consumer.queryReceivableBill.auditDate=审核日期
foss.stl.consumer.queryReceivableBill.disableUserCode=作废人编码
foss.stl.consumer.queryReceivableBill.disableUserName=作废人名称
foss.stl.consumer.queryReceivableBill.BillNoQueryInfoGridTitle=单号查询列表
foss.stl.consumer.queryReceivableBill.QueryInfoGridTooltip=查看明细
foss.stl.consumer.queryReceivableBill.transportFee=运费
foss.stl.consumer.queryReceivableBill.DateQueryInfoGridTitle=日期查询列表
foss.stl.consumer.queryReceivableBill.validateRegionFailAlert=大区、小区和营业部至少填写一项
foss.stl.consumer.queryReceivableBill.isExport=是否要进行应收单的导出操作？
foss.stl.consumer.queryReceivableBill.invoiceMark=发票标记
foss.stl.consumer.queryReceivableBill.deptType=部门类型
foss.stl.consumer.queryReceivableBill.genDeptCode=收入部门
foss.stl.consumer.queryReceivableBill.dugDeptCode=催款部门
foss.stl.consumer.queryReceivableBill.exportMaxNum=导出时，最大记录条数不能超过
foss.stl.consumer.queryReceivableBill.exportUnit=条
foss.stl.consumer.queryReceivableBill.expressOrigOrgCode=出发部门快递点部编码
foss.stl.consumer.queryReceivableBill.expressOrigOrgName=出发部门快递点部名称
foss.stl.consumer.queryReceivableBill.expressDestOrgCode=到达部门快递点部编码
foss.stl.consumer.queryReceivableBill.expressDestOrgName=到达部门快递点部名称
foss.stl.consumer.queryReceivableBill.isUnified=统一结算
foss.stl.consumer.queryReceivableBill.contractOrgCode=合同部门编码
foss.stl.consumer.queryReceivableBill.contractOrgName=合同部门名称


#小票国际化信息
foss.stl.consumer.note.commmon.startAndEndDateDiffCannotExceedSomeDays=起始日期和结束日期间隔不能超过{0}天
foss.stl.consumer.note.common.startDateCannotGtEndDate.pleaseSelectAgain=开始日期不能晚于结束日期,请重新选择
foss.stl.consumer.note.common.yes=是
foss.stl.consumer.note.common.no=否
foss.stl.consumer.note.common.status.used=已使用
foss.stl.consumer.note.noApplyWriteoff=核销申请收回
foss.stl.consumer.note.confirmApplySelectedRecord=确定要申请核销选中的记录么?
foss.stl.consumer.note.applySuccess=申请成功
foss.stl.consumer.note.notStorage.cannotApplyWriteoff=未入库存,不能申请核销
foss.stl.consumer.note.applied.cannotApplyWriteoffAgain=已申请,不能再申请核销
foss.stl.consumer.note.wrongMessage.tryAgain=信息有误,请重试
foss.stl.consumer.note.inputApplyAmount=请输入申请数量
foss.stl.consumer.note.writeoffStatus.NW=未核销
foss.stl.consumer.note.writeoffStatus.AW=已申请
foss.stl.consumer.note.writeoffStatus.WD=已核销
foss.stl.consumer.note.statusType.S=已提交
foss.stl.consumer.note.statusType.D=已下发
foss.stl.consumer.note.statusType.I=已入库
foss.stl.consumer.note.applyGridTitle=申请小票单据列表
foss.stl.consumer.note.applyNote=申请小票单据
foss.stl.consumer.note.applyWriteoff=申请核销
foss.stl.consumer.note.applyNo=申请编号
foss.stl.consumer.note.applyOrgCode=申请部门编码
foss.stl.consumer.note.applyOrgName=申请部门
foss.stl.consumer.note.applyAmount=申请数量(本)
foss.stl.consumer.note.applyAmounts=申请数量
foss.stl.consumer.note.applyTime=申请时间
foss.stl.consumer.note.applyDate=申请日期
foss.stl.consumer.note.applyUserCode=申请人编码
foss.stl.consumer.note.applyUserName=申请人
foss.stl.consumer.note.active=是否有效
foss.stl.consumer.note.active.Y=有效
foss.stl.consumer.note.active.N=无效
foss.stl.consumer.note.status=单据状态
foss.stl.consumer.note.approveStatus=审核状态
foss.stl.consumer.note.writeoffStatus=核销状态
foss.stl.consumer.note.pleaseSelectStartDate=请选择申请开始日期
foss.stl.consumer.note.pleaseSelectEndDate=请选择申请结束日期
foss.stl.consumer.note.pleaseSelectStorageStartDate=请选择入库开始日期
foss.stl.consumer.note.pleaseSelectStorageEndDate=请选择入库结束日期
foss.stl.consumer.note.pleaseSelectIssuedStartDate=请选择下发开始日期
foss.stl.consumer.note.pleaseSelectIssuedEndDate=请选择下发结束日期
foss.stl.consumer.note.pleaseSelectWriteoffStartDate=请选择核销开始日期
foss.stl.consumer.note.pleaseSelectWriteoffEndDate=请选择核销结束日期
foss.stl.consumer.note.pleaseCheckConditionLegal=请检查输入条件是否合法
foss.stl.consumer.note.applyNoteMange=申请小票单据管理
foss.stl.consumer.note.to=至
foss.stl.consumer.note.storageDate=入库日期
foss.stl.consumer.note.storageTime=入库时间
foss.stl.consumer.note.apply=申请
foss.stl.consumer.note.storage=入库
foss.stl.consumer.note.approved.cannotApproveAgain=已审核过不能再进行审核
foss.stl.consumer.note.pleaseSelectApproveStatus=请选择审核状态
foss.stl.consumer.note.pleaseEnterNote=请填写备注
foss.stl.consumer.note.notApprove.cannotDistribute=未审核不能进行下发
foss.stl.consumer.note.notAudit.cannotDistribute=审核未通过不能进行下发
foss.stl.consumer.note.distributed.cannotDistributeAgain=已下发不能再进行下发
foss.stl.consumer.note.storaged.cannotDistribute=已入库不能再进行下发
foss.stl.consumer.note.pleaseEnterDistributeNo=请输入下发编号
foss.stl.consumer.note.amountNotRight.pleaseCheck=录入的下发数量与申请数量不符,请确认后再下发
foss.stl.consumer.note.notDistribute.cannotShowDetail=未下发不能查看明细
foss.stl.consumer.note.approveStatus.NA=未审核
foss.stl.consumer.note.approveStatus.RA=审核通过
foss.stl.consumer.note.approveStatus.RD=审核未通过
foss.stl.consumer.note.issuedType.E=快递
foss.stl.consumer.note.issuedType.I=内部带货
foss.stl.consumer.note.issuedType.P=自领
foss.stl.consumer.note.start=起始
foss.stl.consumer.note.end=终止
foss.stl.consumer.note.numberRange=编号范围
foss.stl.consumer.note.addNumber=新增编号
foss.stl.consumer.note.startNumber=起始编号
foss.stl.consumer.note.endNumber=终止编号
foss.stl.consumer.note.pleaseEnterStartNumber=请输入起始编号
foss.stl.consumer.note.pleaseEnterEndNumber=请输入终止编号
foss.stl.consumer.note.startNoEqEndNo.pleaseTryAgain=起始编号等于终止编号,请重新输入
foss.stl.consumer.note.startNoGtEndNo.pleaseTryAgain=起始编号大于编号,请重新输入
foss.stl.consumer.note.pleaseEnterCorrectStartNo=请输入正确的起始编号
foss.stl.consumer.note.pleaseEnterCorrentEndNo=请输入正确的终止编号
foss.stl.consumer.note.startEndNoRangeNotCorrent.pleaseTryAgain=输入的起止编号范围不正确，请重新填写
foss.stl.consumer.note.issuedAmountEqApplyAmount.cannotIncrease=录入的下发单据数量等于申请数量,不能再新增
foss.stl.consumer.note.issuedAmountGtApplyAmount.cannotIncrease=录入的下发单据数量已大于申请数量,不能再新增
foss.stl.consumer.note.newLinesCannotGtApplyAmount=新增行数不能大于申请数量
foss.stl.consumer.note.noteDetailList=小票单据详细列表
foss.stl.consumer.note.issue=下发
foss.stl.consumer.note.dateOfIssueAndApplyAtLeastSelectOne=申请日期与下发日期至少选择一个
foss.stl.consumer.note.dateOfApplyAndWriteoffAtLeastSelectOne=申请日期与核销日期至少选择一个
foss.stl.consumer.note.noteNumber=小票单据编号
foss.stl.consumer.note.beginWithEndNo=下发起止号
foss.stl.consumer.note.issuedUserCode=下发人编号
foss.stl.consumer.note.issuedUserName=下发人
foss.stl.consumer.note.issuedOrgName=下发部门
foss.stl.consumer.note.issuedTime=下发时间
foss.stl.consumer.note.issuedDate=下发日期
foss.stl.consumer.note.storageUserCode=入库操作人编码
foss.stl.consumer.note.storageUserName=入库操作人
foss.stl.consumer.note.writeoffTime=核销时间
foss.stl.consumer.note.writeoffDate=核销日期
foss.stl.consumer.note.writeoffUserCode=核销人编码
foss.stl.consumer.note.writeoffUserName=核销人
foss.stl.consumer.note.aduitIssuedNoteManage=审核发放小票单据管理
foss.stl.consumer.note.aduitIssuedNote=审核下发小票单据
foss.stl.consumer.note.Note=备注
foss.stl.consumer.note.noteIssueAction=小票单据下发操作
foss.stl.consumer.note.issuedType=下发方式
foss.stl.consumer.note.expressDeliveryNumber=快递单号
foss.stl.consumer.note.confirmedIssue=确认下发
foss.stl.consumer.note.pass=通过
foss.stl.consumer.note.notPass=不通过
foss.stl.consumer.note.noteStorageManage=入库小票单据管理
foss.stl.consumer.note.areYouSureStorageSelectedRecord=确定要入库选中的记录么?
foss.stl.consumer.note.pleaseSelectToBeStoragedRecord=请选择您要入库的记录
foss.stl.consumer.note.storaged.cannotStorageAgain=已入库，不能再进行入库
foss.stl.consumer.note.notDistributed.cannotStoraged=未下发不能进行入库
foss.stl.consumer.note.pleaseSelectDistributedRecordToStorage=请选择单据状态为已下发的数据进行入库操作
foss.stl.consumer.note.confirmStorage=确认入库
foss.stl.consumer.note.pleaseSelectRecordToWriteoff=请选择您要核销的记录
foss.stl.consumer.note.statusNotStoraged.cannotWriteoff=单据状态非已入库，不能进行核销
foss.stl.consumer.note.statusNotApplied.cannotWriteoff=核销状态非已申请，不能进行核销
foss.stl.consumer.note.areYouSureWriteoffSelectedRecord=确定要核销选中的记录么?
foss.stl.consumer.note.pleaseSelectStoragedAndAppliedRecordToWriteoff=请选择单据状态为已入库且核销状态为已申请的数据进行核销操作
foss.stl.consumer.note.pleaseSelectRecordToBeWriteoff=请选择要核销的申请记录
foss.stl.consumer.note.writeoffNoteManage=核销小票单据管理
foss.stl.consumer.note.writeoffNotePage=核销小票单据页面
foss.stl.consumer.note.useOrgName=使用部门
foss.stl.consumer.note.pinAmount=销号数量
foss.stl.consumer.note.consumer=核销
foss.stl.consumer.note.confirmWriteoff=确认核销
foss.stl.consumer.otherRevenue.pleaseInputCustName=请录入客户名称
foss.stl.consumer.otherRevenue.Invoice=发票标记
foss.stl.consumer.otherRevenue.isPrint=是否打印?
foss.stl.consumer.otherRevenue.otherRevenueNoIsNotConsecutive=小票号不是连续的，是否继续?
foss.stl.consumer.otherRevenue.custNotExist.pleaseInputFirst=客户不存在,请先到CRM中录入客户信息，再进行操作
foss.stl.consumer.otherRevenue.systemException=系统异常
foss.stl.consumer.otherRevenue.paymentType=收款方式
foss.stl.consumer.otherRevenue.paymentType.CH=现金
foss.stl.consumer.otherRevenue.paymentType.CD=银行卡
foss.stl.consumer.otherRevenue.paymentType.CT=月结
foss.stl.consumer.otherRevenue.paymentType.DT=临时欠款
foss.stl.consumer.otherRevenue.pleaseSelect=请选择
foss.stl.consumer.otherRevenue.incomeCategoriesType=收入类别
foss.stl.consumer.otherRevenue.incomeCategoriesType.W=仓储费
foss.stl.consumer.otherRevenue.incomeCategoriesType.PD=自提改派送
foss.stl.consumer.otherRevenue.incomeCategoriesType.C=会员卡费
foss.stl.consumer.otherRevenue.incomeCategoriesType.P=包装费
foss.stl.consumer.otherRevenue.incomeCategoriesType.F=放空费
foss.stl.consumer.otherRevenue.incomeCategoriesType.D=加收送货费
foss.stl.consumer.otherRevenue.incomeCategoriesType.R=卖费品
foss.stl.consumer.otherRevenue.incomeCategoriesType.E=超期预收款
foss.stl.consumer.otherRevenue.incomeCategoriesType.O=其它
foss.stl.consumer.otherRevenue.customerType=客户类型
foss.stl.consumer.otherRevenue.customerType.W=客户
foss.stl.consumer.otherRevenue.customerType.PD=偏线代理
foss.stl.consumer.otherRevenue.customerType.AD=空运代理
foss.stl.consumer.otherRevenue.newOtherRevenue=新增小票
foss.stl.consumer.otherRevenue.pleaseInputNumber=请输入8-14位数字
foss.stl.consumer.otherRevenue.otherRevenueNo=小票单号
foss.stl.consumer.otherRevenue.customerCode=客户编码
foss.stl.consumer.otherRevenue.airAgency=空运代理
foss.stl.consumer.otherRevenue.partLineAgency=偏线代理
foss.stl.consumer.otherRevenue.customerName=客户名称
foss.stl.consumer.otherRevenue.customerPhone=客户电话
foss.stl.consumer.otherRevenue.customerInfo=客户信息
foss.stl.consumer.otherRevenue.waybillNo=运单单号
foss.stl.consumer.otherRevenue.receiveAmount=收款金额
foss.stl.consumer.otherRevenue.posBatchNo=银联交易流水号
foss.stl.consumer.otherRevenue.note=备注
foss.stl.consumer.otherRevenue.batchNoError=请输入正确的银联交易流水号
foss.stl.consumer.otherRevenue.waybillPrompt=请输入1个或10内的多个单号,单号之间用半角逗号隔开
foss.stl.consumer.otherRevenue.createStartDateCannotBeNull=开始日期不能为空
foss.stl.consumer.otherRevenue.createEndDateCannotBeNull=结束日期不能为空
foss.stl.consumer.otherRevenue.createDateDiffCannotExceedSomeDays=开始日期和结束日期间隔不能超过31天
foss.stl.consumer.otherRevenue.createStartDateCannotGtEndDate=开始日期不能晚于结束日期
foss.stl.consumer.otherRevenue.canInput10NoMost=最多输入10个小票单号
foss.stl.consumer.otherRevenue.queryResultIsEmpty.cannotOperate=查询结果集为空不能进行该操作
foss.stl.consumer.otherRevenue.sureExportQueryResult=确定要导出查询结果吗?
foss.stl.consumer.otherRevenue.15ColumnMost=最多不能超过15列
foss.stl.consumer.otherRevenue.surePrint=确定要打印吗?
foss.stl.consumer.otherRevenue.pleaseSelectRecordToPrint=请选中要打印的记录
foss.stl.consumer.otherRevenue.invalid.cannotPrint=小票无效不能打印
foss.stl.consumer.otherRevenue.sureObsolete=确定要作废吗?
foss.stl.consumer.otherRevenue.pleaseSelectRecordToObsolete=请选中要作废的记录
foss.stl.consumer.otherRevenue.inputStartTime=开始时间
foss.stl.consumer.otherRevenue.inputEndTime=结束时间
foss.stl.consumer.otherRevenue.generatingComName=收入公司
foss.stl.consumer.otherRevenue.generationComCode=收入公司编码
foss.stl.consumer.otherRevenue.generatingOrgName=收入部门
foss.stl.consumer.otherRevenue.generatingOrgCode=收入部门编码
foss.stl.consumer.otherRevenue.otherRevenueInfo=小票信息
foss.stl.consumer.otherRevenue.invalid=作废
foss.stl.consumer.otherRevenue.amount=金额
foss.stl.consumer.otherRevenue.creatorName=录入人员
foss.stl.consumer.otherRevenue.creatorCode=录入人员编码
foss.stl.consumer.otherRevenue.createTime=录入时间
foss.stl.consumer.otherRevenue.businessDate=业务时间
foss.stl.consumer.otherRevenue.version=版本号
foss.stl.consumer.otherRevenue.isInvalid=是否作废
foss.stl.consumer.otherRevenue.disableTime=作废时间
foss.stl.consumer.otherRevenue.isInvalid.Y=是
foss.stl.consumer.otherRevenue.isInvalid.N=否
foss.stl.consumer.otherRevenue.printList=打印清单
foss.stl.consumer.otherRevenue.nodept=打印清单时，部门不能为空！
foss.stl.consumer.otherRevenue.express=快递
foss.stl.consumer.otherRevenue.breakbulk=零担
foss.stl.consumer.otherRevenue.BusinessCase=业务类型
foss.stl.consumer.common.businessCaseIsNullWarning = 运单号为空，业务类型不能为空！
foss.stl.consumer.otherRevenue.incomeCategoriesHtoCD = 小票的收入类别为："收银员卡利息"时，收款方式只能选择：现金！ 您可重新刷新界面！
foss.stl.consumer.otherRevenue.incomeCategoriesRtoCH = 小票的收入类别为："卖废品"时，收款方式只能选择：现金！，您可重新刷新界面！ 
foss.stl.consumer.otherRevenue.incomeCategoriesNotPrimary = 非主营收入类型时，收款方式不能选择：临时欠款或月结！您可重新刷新界面！
foss.stl.consumer.otherRevenue.notes=备注
foss.stl.consumer.otherRevenue.invoiceCategory=小票产生类别
foss.stl.consumer.otherRevenue.invoiceCategoryClass=系統
foss.stl.consumer.otherRevenue.isNotAllowObsolete=结清货款时产生的保管费小票不允许作废！
# add by liqin 反核销小票申请
foss.stl.consumer.otherRevenue.confirmReWriteoffApplySelectedRecord=确定要收回所选中记录的核销申请么？
foss.stl.consumer.otherRevenue.cannotApplyReWriteoff=只有核销申请状态的小票，才能收回！
foss.stl.consumer.note.reApplySuccess=收回成功
#实时收入报表国际化信息
foss.stl.consumer.cashIncome.emptyPrompt=请输入1个或10内的多个单号,单号之间用半角逗号隔开
foss.stl.consumer.cashIncome.startDateCannotBeNull=开始日期不能为空
foss.stl.consumer.cashIncome.endDateCannotBeNull=结束日期不能为空
foss.stl.consumer.cashIncome.startAndEndDateDiffCannotExceedSomeDays=起始日期和结束日期间隔不能超过{0}天
foss.stl.consumer.cashIncome.startDateCannotGtEndDate=开始日期不能晚于结束日期
foss.stl.consumer.cashIncome.10statementBillNosMost=最多输入10个对账单号
foss.stl.consumer.cashIncome.10depositReceivedNosMost=最多输入10个预收单号
foss.stl.consumer.cashIncome.10waybillNosMost=最多输入10个运单号
foss.stl.consumer.cashIncome.queryResultNull.cannotOperate=查询结果集为空不能进行该操作
foss.stl.consumer.cashIncome.pleaseCheckInputConditionisLegal=请检查输入条件是否合法
foss.stl.consumer.cashIncome.sureExportQueryResult=确定要导出查询结果吗?
foss.stl.consumer.cashIncome.15columnsMost=最多不能超过15列
foss.stl.consumer.cashIncome.surePrint=确定要打印吗?
foss.stl.consumer.cashIncome.billType.XS=现金收款单
foss.stl.consumer.cashIncome.billType.US=预收单
foss.stl.consumer.cashIncome.billType.HK=还款单
foss.stl.consumer.cashIncome.status.S=提交
foss.stl.consumer.cashIncome.status.C=收银确认
foss.stl.consumer.cashIncome.all=全部
foss.stl.consumer.cashIncome.paymentType=付款方式
foss.stl.consumer.cashIncome.paymentType.CH=现金
foss.stl.consumer.cashIncome.paymentType.CD=银行卡
foss.stl.consumer.cashIncome.paymentType.NT=支票
foss.stl.consumer.cashIncome.paymentType.TT=电汇
foss.stl.consumer.cashIncome.paymentType.OL=网上支付
foss.stl.consumer.cashIncome.paymentType.CF=委托派费转预收
foss.stl.consumer.cashIncome.dateType=日期类型
foss.stl.consumer.cashIncome.acctDate=记账日期
foss.stl.consumer.cashIncome.cashDate=收银日期
foss.stl.consumer.cashIncome.startDate=开始日期
foss.stl.consumer.cashIncome.endDate=结束日期
foss.stl.consumer.cashIncome.billType=单据类别
foss.stl.consumer.cashIncome.largeArea=大&nbsp;&nbsp;区
foss.stl.consumer.cashIncome.smallArea=小&nbsp;&nbsp;区
foss.stl.consumer.cashIncome.status=单据状态
foss.stl.consumer.cashIncome.collectionOrg=收款部门
foss.stl.consumer.cashIncome.generatingOrg=收入部门
foss.stl.consumer.cashIncome.cashConfirmUser=收银员
foss.stl.consumer.cashIncome.statementBillNos=对账单号
foss.stl.consumer.cashIncome.depositReceivedNos=预收单号
foss.stl.consumer.cashIncome.waybillNos=运单单号
foss.stl.consumer.cashIncome.caseIncomeDetail=现金收入明细
foss.stl.consumer.cashIncome.billNo=单据编号

foss.stl.consumer.cashIncome.generatingOrgName=收入部门名称
foss.stl.consumer.cashIncome.generatingOrgCode=收入部门编码
foss.stl.consumer.cashIncome.collectionOrgCode=收款部门编码
foss.stl.consumer.cashIncome.collectionOrgName=收款部门名称

foss.stl.consumer.cashIncome.amount=金额
foss.stl.consumer.cashIncome.cashConfirmUserCode=收银员编码
foss.stl.consumer.cashIncome.cashConfirmTime=收银时间
foss.stl.consumer.cashIncome.printGather=打印汇总
foss.stl.consumer.cashIncome.printDetail=打印明细
foss.stl.consumer.cashIncome.sumAmount=合计&nbsp;总金额
foss.stl.consumer.cashIncome.allNum=总条数
foss.stl.consumer.cashIncome.ttAmount=电汇金额
foss.stl.consumer.cashIncome.olAmount=网上支付金额
foss.stl.consumer.cashIncome.chAmount=现金金额
foss.stl.consumer.cashIncome.ntAmount=支票金额
foss.stl.consumer.cashIncome.cdAmount=银行卡金额
foss.stl.consumer.cashIncome.queryByDate=按日期查询
foss.stl.consumer.cashIncome.queryByStatementBill=按对账单查询
foss.stl.consumer.cashIncome.queryByDepositeReceivedBill=按预收单查询
foss.stl.consumer.cashIncome.queryByWaybillNo=按运单号查询
foss.stl.consumer.cashIncome.paymentType=付款方式

#现金收款单查询
foss.stl.consumer.queryCashCollectionBill.paymentType.CH=现金
foss.stl.consumer.queryCashCollectionBill.CD=银行卡
foss.stl.consumer.queryCashCollectionBill.TT=电汇
foss.stl.consumer.queryCashCollectionBill.NT=支票
foss.stl.consumer.queryCashCollectionBill.OL=网上支付
foss.stl.consumer.queryCashCollectionBill.CT=月结
foss.stl.consumer.queryCashCollectionBill.DT=临时欠款
foss.stl.consumer.queryCashCollectionBill.FC=到付
foss.stl.consumer.queryCashCollectionBill.status.S=提交
foss.stl.consumer.queryCashCollectionBill.status.C=确认收银
foss.stl.consumer.queryCashCollectionBill.cashCollectionBill=现金收款单
foss.stl.consumer.queryCashCollectionBill.Y=是
foss.stl.consumer.queryCashCollectionBill.N=否
foss.stl.consumer.queryCashCollectionBill.startDateCannotBeNull=开始时间不能为空
foss.stl.consumer.queryCashCollectionBill.endDateCannotBeNull=结束时间不能为空
foss.stl.consumer.queryCashCollectionBill.startDateCannotGtEndDate=开始时间不能大于结束时间
foss.stl.consumer.queryCashCollectionBill.startAndEndDateDiffCannotExceedSomeDays=开始时间与结束时间相差不能超过{0}天
foss.stl.consumer.queryCashCollectionBill.pleaseCheckInputIsLegal=请检查输入条件是否合法
foss.stl.consumer.queryCashCollectionBill.exportSuccess=导出成功
foss.stl.consumer.queryCashCollectionBill.exportFailure=导出失败
foss.stl.consumer.queryCashCollectionBill.mustInputNoForQuery=必须录入单号进行导出
foss.stl.consumer.queryCashCollectionBill.dateRange=日期范围
foss.stl.consumer.queryCashCollectionBill.businessDateBlank=业务日期&nbsp;&nbsp;
foss.stl.consumer.queryCashCollectionBill.acctDateBlank=记账日期&nbsp;&nbsp;
foss.stl.consumer.queryCashCollectionBill.startDate=开始日期
foss.stl.consumer.queryCashCollectionBill.endDate=结束日期
foss.stl.consumer.queryCashCollectionBill.active=是否有效
foss.stl.consumer.queryCashCollectionBill.collectionOrgName=收款部门
foss.stl.consumer.queryCashCollectionBill.generatingOrgName=收入部门
foss.stl.consumer.queryCashCollectionBill.customerName=客户名称
foss.stl.consumer.queryCashCollectionBill.status=单据状态
foss.stl.consumer.queryCashCollectionBill.paymentType=付款方式
foss.stl.consumer.queryCashCollectionBill.pleaseOneOrTenNumbers.SeparatedByCommas=请输入1个或10内的多个单号,单号之间用半角逗号隔开
foss.stl.consumer.queryCashCollectionBill.numberMustBeSevenOrTenNumbers=单号必须是7-10位数字以,或;隔开
foss.stl.consumer.queryCashCollectionBill.sourceBillNosNots=(备注：单号包括：运单、小票号)
foss.stl.consumer.queryCashCollectionBill.waybillNo=运单单号
foss.stl.consumer.queryCashCollectionBill.mustInputNoForQuery=必须录入单号进行查询
foss.stl.consumer.queryCashCollectionBill.cannotExceed10ReceiveBillNos.pleaseCheckAgain=查询应收单号不能为超过10个,请删减后再查询
foss.stl.consumer.queryCashCollectionBill.sourceBillNo=来源单号
foss.stl.consumer.queryCashCollectionBill.annotExceed10SourceBillNos.pleaseCheckAgain=查询来源单号不能为超过10个,请删减后再查询
foss.stl.consumer.queryCashCollectionBill.showDetail=查看明细
foss.stl.consumer.queryCashCollectionBill.collectionType=收款类别
foss.stl.consumer.queryCashCollectionBill.amount=金额
foss.stl.consumer.queryCashCollectionBill.billType=单据子类型
foss.stl.consumer.queryCashCollectionBill.transportFee=运费
foss.stl.consumer.queryCashCollectionBill.cashCollectionNo=现金收款单单号
foss.stl.consumer.queryCashCollectionBill.sourceBillType=来源单据类型
foss.stl.consumer.queryCashCollectionBill.customerCode=客户编码
foss.stl.consumer.queryCashCollectionBill.collectionOrgCode=收款部门编码
foss.stl.consumer.queryCashCollectionBill.collectionCompanyCode=收款公司编码
foss.stl.consumer.queryCashCollectionBill.collectionCompanyName=收款公司
foss.stl.consumer.queryCashCollectionBill.generatingOrgCode=收入部门编码
foss.stl.consumer.queryCashCollectionBill.generatingCompanyCode=收入公司编码
foss.stl.consumer.queryCashCollectionBill.generatingCompanyName=收入公司
foss.stl.consumer.queryCashCollectionBill.productCode=运输性质
foss.stl.consumer.queryCashCollectionBill.pickupFee=接货费
foss.stl.consumer.queryCashCollectionBill.deliveryGoodsFee=送货费
foss.stl.consumer.queryCashCollectionBill.packagingFee=包装手续费
foss.stl.consumer.queryCashCollectionBill.codFee=代收货款手续费
foss.stl.consumer.queryCashCollectionBill.insuranceFee=保价费
foss.stl.consumer.queryCashCollectionBill.otherFee=其他费用
foss.stl.consumer.queryCashCollectionBill.smallFee=小票
foss.stl.consumer.queryCashCollectionBill.isRedBack=是否红单
foss.stl.consumer.queryCashCollectionBill.createUserCode=制单人工号
foss.stl.consumer.queryCashCollectionBill.createUserName=制单人
foss.stl.consumer.queryCashCollectionBill.cashConfirmUserCode=收银员工号
foss.stl.consumer.queryCashCollectionBill.cashConfirmUserName=收银员
foss.stl.consumer.queryCashCollectionBill.businessDate=业务日期
foss.stl.consumer.queryCashCollectionBill.accountDate=记账日期
foss.stl.consumer.queryCashCollectionBill.conrevenDate=确定收入日期
foss.stl.consumer.queryCashCollectionBill.cashConfirmTime=收银确认时间
foss.stl.consumer.queryCashCollectionBill.notes=备注
foss.stl.consumer.queryCashCollectionBill.sum=合计
foss.stl.consumer.queryCashCollectionBill.totalAmount=总金额
foss.stl.consumer.queryCashCollectionBill.conrevenDate=确认收入日期
foss.stl.consumer.queryCashCollectionBill.isExport=是否要进行现金收款单导出操作？
foss.stl.consumer.queryCashCollectionBill.defaultColumnExport=默认列导出
foss.stl.consumer.queryCashCollectionBill.customColumnExport=自定义列导出
foss.stl.consumer.queryCashCollectionBill.sourceBillType=来源单据类型
foss.stl.consumer.queryCashCollectionBill.sourceBillNo=来源单号
foss.stl.consumer.queryCashCollectionBill.noDataToExportWarning=数据为空，不能进行导出操作！
foss.stl.consumer.queryCashCollectionBill.posSerialNum=POS串号
foss.stl.consumer.queryCashCollectionBill.batchNo=银联交易流水号
foss.stl.consumer.queryCashCollectionBill.invoiceMark=发票标记
foss.stl.consumer.queryCashCollectionBill.expressOrigOrgCode=出发部门快递点部编码
foss.stl.consumer.queryCashCollectionBill.expressOrigOrgName=出发部门快递点部名称
foss.stl.consumer.queryCashCollectionBill.expressDestOrgCode=到达部门快递点部编码
foss.stl.consumer.queryCashCollectionBill.expressDestOrgName=到达部门快递点部名称
foss.stl.consumer.queryCashCollectionBill.cannotExceed10SeriaNos.pleaseCheckAgain=银联交易流水号不能为超过10个,请删减后再查询
#代收货款
foss.stl.consumer.cod.codMessage=代收货款信息
foss.stl.consumer.cod.codLog=代收货款日志
foss.stl.consumer.cod.codAudit=代收货款审核
foss.stl.consumer.cod.codComprehensiveQuery=代收货款综合查询
foss.stl.consumer.cod.queryAll=查询所有
foss.stl.consumer.cod.queryNo=查询单号
foss.stl.consumer.cod.queryNoCannotEmpty=查询单号不能为空
foss.stl.consumer.cod.cannotEmpty=不能为空
foss.stl.consumer.cod.cannotGreaterThan=不能大于
foss.stl.consumer.cod.eightToTenMostInputTenWaybillNumber=8-14位数字，多个运单号以\',\'隔开，最多输入10个运单号
foss.stl.consumer.cod.eightToTenMostInputFiftyWaybillNumber=8-14位数字，多个运单号以\',\'隔开，最多输入50个运单号
foss.stl.consumer.cod.singleNumberMustSevenToTen=单号必须是7-14位数字以,隔开
foss.stl.consumer.cod.pleaseCheckTheInputConditionIsLegal=请检查输入条件是否合法
foss.stl.consumer.cod.No=单号
foss.stl.consumer.cod.wayBillNo=运单号
foss.stl.consumer.cod.payableNo=应付单编号
foss.stl.consumer.cod.code=编码
foss.stl.consumer.cod.billAmount=开单金额
foss.stl.consumer.cod.verReceivableAmount=冲应收金额
foss.stl.consumer.cod.returnAmount=应退金额
foss.stl.consumer.cod.codReturnType=退款类型
foss.stl.consumer.cod.codReturnAmountStart=退款金额(起)
foss.stl.consumer.cod.codReturnAmountEnd=退款金额(止)

foss.stl.consumer.cod.category=类别
foss.stl.consumer.cod.codType=代收货款类型
foss.stl.consumer.cod.airStatus=审核状态
foss.stl.consumer.cod.queryByCodType=按代收货款状态查询
foss.stl.consumer.cod.codQueryBuilder=代收货款查询条件
foss.stl.consumer.cod.payStatus=付款状态
foss.stl.consumer.cod.codStatus=代收货款状态
foss.stl.consumer.cod.codBatchStatus=代收批次状态
foss.stl.consumer.cod.frozenState=冻结状态
foss.stl.consumer.cod.customerName=客户名称
foss.stl.consumer.cod.payeeName=收款人
foss.stl.consumer.cod.payerName=付款人
foss.stl.consumer.cod.payeeAccount=账号
foss.stl.consumer.cod.bank=开户行
foss.stl.consumer.cod.openAccount=开户姓名
foss.stl.consumer.cod.payeeAndConsignor=客户收款人关系
foss.stl.consumer.cod.publicPrivateFlag=对公对私标志
foss.stl.consumer.cod.publicPrivateMark=公私标志
foss.stl.consumer.cod.accountProperties=账户性质
foss.stl.consumer.cod.province=省份
foss.stl.consumer.cod.city=城市
foss.stl.consumer.cod.bankSubbranch=银行地址（支行）
foss.stl.consumer.cod.subbranch=支行
foss.stl.consumer.cod.bankCode=银行行号
foss.stl.consumer.cod.bankAccount=银行账号
foss.stl.consumer.cod.depositBank=开户银行
foss.stl.consumer.cod.payeePhone=收款人手机号
foss.stl.consumer.cod.phone=手机号
foss.stl.consumer.cod.phoneNumber=手机号码
foss.stl.consumer.cod.openBusinessDate=开单日期
foss.stl.consumer.cod.businessDate=业务日期
foss.stl.consumer.cod.signDate=签收时间
foss.stl.consumer.cod.endSignDate=截止签收日期
foss.stl.consumer.cod.codExportTime=汇款导出时间
foss.stl.consumer.cod.codExportSuccessTime=汇款成功时间

foss.stl.consumer.cod.tusyorgRfdApptime=资金部退款申请时间
foss.stl.consumer.cod.codExportUserName=汇款导出人
foss.stl.consumer.cod.codExportFailureCause=汇款失败原因
foss.stl.consumer.cod.batchNumber=批次号
foss.stl.consumer.cod.payBatchNumber=付款批次号
foss.stl.consumer.cod.orgName=部门
foss.stl.consumer.cod.startDepartment=出发部门
foss.stl.consumer.cod.payableConsignee=应付客户
foss.stl.consumer.cod.payableOrgName=应付部门
foss.stl.consumer.cod.payableComName=所属子公司
foss.stl.consumer.cod.operateContent=操作内容
foss.stl.consumer.cod.operateActiontype=操作类别
foss.stl.consumer.cod.operateIp=操作IP
foss.stl.consumer.cod.operateTime=操作时间
foss.stl.consumer.cod.operatorCode=操作人编码
foss.stl.consumer.cod.operatorName=操作人名称
foss.stl.consumer.cod.operateOrgCode=操作组织编码
foss.stl.consumer.cod.operateOrgName=操作组织名称
foss.stl.consumer.cod.notes=备注
foss.stl.consumer.cod.dataLoading=数据处理中，请耐心等待...
foss.stl.consumer.cod.pleaseSelectAtLeastOneDataManagerForReview=请至少选择一条数据进行经理审核！
foss.stl.consumer.cod.pleaseSelectAtLeastOneReturnDataOperation=请至少选择一条数据进行退回操作！
foss.stl.consumer.cod.pleaseSelectAtLeastOneDataConductFreezingOperation=请至少选中一条数据，进行冻结操作！
foss.stl.consumer.cod.pleaseSelectAtLeastOneDataAndThenToCancelTheFreezingOperation=请至少选择一条数据，再进行取消冻结操作！
foss.stl.consumer.cod.pleaseSelectAtLeastOneDataConductOperation=请至少选中一条数据，进行操作！
foss.stl.consumer.cod.pleaseSelectADataModifiedAccountOperationCanOnlyChoose=请选中一条数据进行修改账号操作，只能选择一条哦！
foss.stl.consumer.cod.pleaseSelectAtLeastOneAuditData=请至少选中一条数据进行审核！
foss.stl.consumer.cod.mustGoToTheSalesFrozenCanModifyTheAccount=必须先进行营业部冻结，才能修改账号！
foss.stl.consumer.cod.password=密码
foss.stl.consumer.cod.passwordCannotEmpty=密码不能为空！
foss.stl.consumer.cod.auditSuccess=审核成功！
foss.stl.consumer.cod.returnOpinionCannotEmpty=退回意见不能为空！
foss.stl.consumer.cod.returnSuccess=退回成功！
foss.stl.consumer.cod.inputPassword=填写密码
foss.stl.consumer.cod.returnReason=退回原因
foss.stl.consumer.cod.NoCannotEmpty=单号不能为空！
foss.stl.consumer.cod.freeze=已冻结
foss.stl.consumer.cod.applyFreeze=申请冻结
foss.stl.consumer.cod.doFreeze=冻结
foss.stl.consumer.cod.unFreeze=未冻结
foss.stl.consumer.cod.cancelFreeze=取消冻结
foss.stl.consumer.cod.R3RA=三日退（审核退）
#---------------------------------@author 218392 zhangyongxue 2015-08-06 09:49:50 打包退(即日),打包退(三日)
foss.stl.consumer.cod.P1R1=打包退(即日)
foss.stl.consumer.cod.P1R3RA=打包退(三日)
#-----------------------------------
foss.stl.consumer.cod.R1=即日退
foss.stl.consumer.cod.RA=审核通过
foss.stl.consumer.cod.allFrozenDocument=全选已冻结单据
foss.stl.consumer.cod.allNoFrozenDocument=全选未冻结单据
foss.stl.consumer.cod.refundApply=退款申请
foss.stl.consumer.cod.refundApplySuccess=发送退款申请成功！
foss.stl.consumer.cod.qyreturnerrormsg=银企返回失败原因
foss.stl.consumer.cod.codExport=汇款导出
foss.stl.consumer.cod.remitSuccess=汇款成功
foss.stl.consumer.cod.remitConfirm=汇款确认
foss.stl.consumer.cod.reverseRemittanceSuccess=反汇款成功
foss.stl.consumer.cod.remitError=汇款失败
foss.stl.consumer.cod.remitErrorAudit=汇款失败审核
foss.stl.consumer.cod.remitSuccessExportError=汇款成功,导出失败！
foss.stl.consumer.cod.remitExportSuccess=汇款导出成功！
foss.stl.consumer.cod.total=合计
foss.stl.consumer.cod.allNum=总条数
foss.stl.consumer.cod.allAmount=总金额
foss.stl.consumer.cod.frozenNum=冻结条数
foss.stl.consumer.cod.frozenAllAmount=冻结总金额
foss.stl.consumer.cod.auditFailureOrRefund=待审核或退款失败
foss.stl.consumer.cod.notRefund=未退款
foss.stl.consumer.cod.modifyAccountSteps=修改账号步骤
foss.stl.consumer.cod.firstToCrmMaintenance=先去CRM维护
foss.stl.consumer.cod.inTheInterfaceModificationAccount=再在此界面修改账号
foss.stl.consumer.cod.salesDepartment=营业部
foss.stl.consumer.cod.salesDepartmentFreezeSuccess=营业部冻结成功！
foss.stl.consumer.cod.accountHasModified=已修改过账号
foss.stl.consumer.cod.modifyAccount=修改账号
foss.stl.consumer.cod.modifyAccountSuccess=修改账号成功！
foss.stl.consumer.cod.customerNotHaveTheBankInfo=客户无银行信息！
foss.stl.consumer.cod.selectedAccountBanktemporaryNotSupportThisRetreat=所选账号的银行暂不支持即日退！
foss.stl.consumer.cod.inquiresBankEntityEmpty=查询银行实体为空！
foss.stl.consumer.cod.backCannotChooseSaysToTheAccount=即日退不能选择对公账号！
foss.stl.consumer.cod.startTime=开始时间
foss.stl.consumer.cod.endTime=结束时间
foss.stl.consumer.cod.startTimeEndTimeAreNotMoreThanDays=开始时间与结束时间相差不能超过{0}天
foss.stl.consumer.cod.waybillNoCodStateNotRefundCannotRemitSuccessOperation=运单号【{0}】代收货款状态不为退款中，不能进行汇款成功操作
foss.stl.consumer.cod.waybillNoCodStateNotRefundCannotRemitFailureOperation=运单号【{0}】代收货款状态不为退款中，不能进行汇款失败操作
foss.stl.consumer.cod.waybillNoCodStateNotRefundCannotReverseRemitSuccessOperation=运单号【{0}】代收货款状态不为已退款，不能进行反汇款成功操作
foss.stl.consumer.cod.waybillNoCodAuditStateNotForNotAuditCannotAuditOperation=运单号【{0}】代收货款审核状态不为未审核，不能进行审核操作
foss.stl.consumer.cod.waybillNoCodAuditStateNotForAuditCannotUnAuditOperation=运单号【{0}】代收货款审核状态不为已审核，不能进行反审核操作
foss.stl.consumer.cod.WaybillNoCodCustomerCodeEmptyCannotChangeAccount=运单号【{0}】代收货款客户信息为空，不能修改账号
foss.stl.consumer.cod.confirmTheCollectionOfMoneyRemittanceSuccessfullyCompleted=确认代收货款汇款成功完成
foss.stl.consumer.cod.confirmTheCollectionOfMoneyRemittanceSuccessAnomaly=确认代收货款汇款成功异常
foss.stl.consumer.cod.confirmTheCollectionOfMoneyRemittanceCompleteFailure=确认代收货款汇款失败完成
foss.stl.consumer.cod.confirmTheCollectionOfMoneyRemittanceCompleteAnomaly=确认代收货款汇款失败异常
foss.stl.consumer.cod.pleaseInputTheCollectionOfMoneyTheReasonForFailure=请输入代收货款失败原因
foss.stl.consumer.cod.pleaseInputTheCollectionOfMoneyBackRemittanceSuccessfulReason=请输入代收货款反汇款成功原因
foss.stl.consumer.cod.confirmTheCollectionOfMoneyBackRemittanceSuccessCompleted=确认代收货款反汇款成功完成
foss.stl.consumer.cod.confirmTheCollectionOfMoneyBackRemittanceSuccessAnomaly=确认代收货款反汇款成功异常
foss.stl.consumer.cod.informationInput=信息输入
foss.stl.consumer.cod.remittanceFailureCause=汇款失败原因:
foss.stl.consumer.cod.reverseRemittanceSuccessfulReason=反汇款成功原因:
foss.stl.consumer.cod.codAuditSuccess=审核代收货款成功
foss.stl.consumer.cod.codReturnSuccess=退回代收货款成功
foss.stl.consumer.cod.codAuditFailure=审核代收货款失败
foss.stl.consumer.cod.codReturnFailure=退回代收货款失败
foss.stl.consumer.cod.auditAirCodFinish=审核代收货款完成
foss.stl.consumer.cod.auditAirCodError=审核代收货款异常:
foss.stl.consumer.cod.unAuditAirCodFinish=反审核代收货款完成
foss.stl.consumer.cod.unAuditAirCodError=反审核代收货款异常:
foss.stl.consumer.cod.helloInquiresTheTimeEmptyPleaseInputTime=你好，查询的时间为空，请输入时间段！
foss.stl.consumer.cod.helloYourQuerySignForEndDateEmptyPleaseInput=你好，您所查询的签收结束日期为空，请输入签收结束日期
foss.stl.consumer.cod.helloYourQuerySignForStartDateEmptyPleaseInput=你好，您所查询的签收开始日期为空，请输入签收开始日期
foss.stl.consumer.cod.helloYouInquiresTheDateSectionHasMoreThan7DaysPleaseReadjustTheDate=你好，您所查询的日期段已超过7天，请重新调整日期
foss.stl.consumer.cod.helloSignInEndDateNotLessThanStartDatePleaseReadjustInput=你好，签收结束日期不能小于开始日期，请重新调整输入!
foss.stl.consumer.cod.helloAuditInEndDateNotLessThanStartDatePleaseReadjustInput=你好，审核结束日期不能小于开始日期，请重新调整输入!
foss.stl.consumer.cod.helloYouInquiresTheAuditEndDateEmptyPleaseInput=你好，您所查询的审核结束日期为空，请输入审核结束日期
foss.stl.consumer.cod.helloYouInquiresTheAuditStartDateEmptyPleaseInput=你好，您所查询的审核开始日期为空，请输入审核开始日期
foss.stl.consumer.cod.airCodAudit=空运代收货款审核
foss.stl.consumer.cod.landCodAudit=快递代理代收货款审核
foss.stl.consumer.cod.airOrgAuditUserCode=审核人编码
foss.stl.consumer.cod.airOrgAuditUserName=审核人名称
foss.stl.consumer.cod.airAuditTime=审核时间
foss.stl.consumer.cod.payableOrgCode=出发部门编码
foss.stl.consumer.cod.payableOrgName=出发部门名称
foss.stl.consumer.cod.consignee=发货客户
foss.stl.consumer.cod.customerCode=发货客户编码
foss.stl.consumer.cod.customerName=发货客户名称
foss.stl.consumer.cod.signer=签收人
foss.stl.consumer.cod.agencyCode=签收代理编码
foss.stl.consumer.cod.agencyName=签收代理名称
foss.stl.consumer.cod.destination=目的站
foss.stl.consumer.cod.openCodAmount=开单代收货款金额
foss.stl.consumer.cod.codAmount=代收货款金额
foss.stl.consumer.cod.signDay=签收日期
foss.stl.consumer.cod.signDayStart=签收日期（起）
foss.stl.consumer.cod.auditDayStrat=审核日期（起）
foss.stl.consumer.cod.to=止
foss.stl.consumer.cod.productType=产品类型
foss.stl.consumer.cod.destDeptCode=到达部门编码
foss.stl.consumer.cod.destDeptName=到达部门名称
foss.stl.consumer.cod.arriveCustomer=到达客户
foss.stl.consumer.cod.majorKey=主键
foss.stl.consumer.cod.openDateStart=开单日期（起）
foss.stl.consumer.cod.payDateStart=付款日期（起）
foss.stl.consumer.cod.notGreaterThanTheCurrentDate=不能大于当前日期
foss.stl.consumer.cod.refundPath=付款路径

foss.stl.consumer.cod.cashConfirmTime=收银确认时间
foss.stl.consumer.cod.mergeCode=合并编号
foss.stl.consumer.common.queryByMergeCode=按合并编号查询
foss.stl.consumer.cod.mergeCodeNotNull=请输入一个合并编号，以字母h开头+9位数字
foss.stl.consumer.cod.mergeCodeSingleOneLengthTwenty=必须10个字符，以字母h开头+9位数字

#--------------------qiaolifeng 理赔应负担 queryBillClaim start------------------------------------
foss.stl.consumer.queryBillClaim.startCreateTime=理赔生成日期(起)
foss.stl.consumer.queryBillClaim.endCreateTime=理赔生成日期(止)
foss.stl.consumer.queryBillClaim.paymentCategories=支付类别
foss.stl.consumer.queryBillClaim.all=全部
foss.stl.consumer.queryBillClaim.customerDetial=客户信息
foss.stl.consumer.queryBillClaim.airDetial=航空公司
foss.stl.consumer.queryBillClaim.airAgencyDetial=空运代理
foss.stl.consumer.queryBillClaim.vehAgencyDetial=偏线代理
foss.stl.consumer.queryBillClaim.payableOrgCode=理赔应付部门
foss.stl.consumer.queryBillClaim.wayBillNos=运单号
foss.stl.consumer.queryBillClaim.wayBillNosEmptyText=最多输入10个运单号，单号之间用半角的,或;隔开
foss.stl.consumer.queryBillClaim.BillClaimQueryInfoByDateTitle=按日期查询
foss.stl.consumer.queryBillClaim.BillClaimQueryInfoByNosTitle=按运单号查询
foss.stl.consumer.queryBillClaim.BillClaimGridTitle=理赔单信息
foss.stl.consumer.queryBillClaim.applyReturn=退回
foss.stl.consumer.queryBillClaim.waybillNo=运单号
foss.stl.consumer.queryBillClaim.customerName=客户名称
foss.stl.consumer.queryBillClaim.customerCode=客户编码
foss.stl.consumer.queryBillClaim.payableOrgName=理赔应付部门名称
foss.stl.consumer.queryBillClaim.payableOrgCode=理赔应付部门编码
foss.stl.consumer.queryBillClaim.payableOrg=理赔应付部门
foss.stl.consumer.queryBillClaim.amount=金额
foss.stl.consumer.queryBillClaim.paymentCategories=支付类别
foss.stl.consumer.queryBillClaim.type=理赔类型
foss.stl.consumer.queryBillClaim.active=是否有效
foss.stl.consumer.queryBillClaim.createTime=创建时间
foss.stl.consumer.queryBillClaim.createUserName=创建人
foss.stl.consumer.queryBillClaim.modifyTime=修改时间
foss.stl.consumer.queryBillClaim.modifyUserName=修改人
foss.stl.consumer.queryBillClaim.billClaimTotalRows=合计&nbsp;总条数
foss.stl.consumer.queryBillClaim.startCreateTimeIsNotNull=理赔生成日期(起)不能为空!
foss.stl.consumer.queryBillClaim.endCreateTimeIsNotNull=理赔生成日期(止)不能为空!
foss.stl.consumer.queryBillClaim.startToEndCreateTimeNotMax=理赔生成起止日期间隔不能超过60天!
foss.stl.consumer.queryBillClaim.endCreateTimeIsNotBefoerStartCreateTime=记理赔生成日期(起)不能晚于理赔生成日期(止)!
foss.stl.consumer.queryBillClaim.noDataUnderThisQuery=在当前条件查询范围内，没有符合要求的数据!
foss.stl.consumer.queryBillClaim.validateFailAlert=请检查输入条件是否合法!
foss.stl.consumer.queryBillClaim.wayBillNosNotInputAlert=请输入1个或10内的多个运单号,单号之间用半角逗号隔开
foss.stl.consumer.queryBillClaim.wayBillNosInputToMoreAlert=输入单号不能超过10个
foss.stl.consumer.queryBillClaim.statusIsReturned=当前理赔为已退回或退回中，不能再次退回
foss.stl.consumer.queryBillClaim.returnMessageTitle=退回原因
foss.stl.consumer.queryBillClaim.returnMessageMsg=请输入退回原因:
foss.stl.consumer.queryBillClaim.returnSuccessAlert=退回理赔信息成功
foss.stl.consumer.queryBillClaim.productCode=运输性质

#--------------------服务补救 queryBillClaim start------------------------------------
foss.stl.consumer.queryBillClaimCP.startCreateTime=生成日期(起)
foss.stl.consumer.queryBillClaimCP.endCreateTime=生成日期(止)
foss.stl.consumer.queryBillClaimCP.paymentCategories=支付类别
foss.stl.consumer.queryBillClaimCP.all=全部
foss.stl.consumer.queryBillClaimCP.customerDetial=客户信息
foss.stl.consumer.queryBillClaimCP.airDetial=航空公司
foss.stl.consumer.queryBillClaimCP.airAgencyDetial=空运代理
foss.stl.consumer.queryBillClaimCP.vehAgencyDetial=偏线代理
foss.stl.consumer.queryBillClaimCP.payableOrgCode=理赔应付部门
foss.stl.consumer.queryBillClaimCP.wayBillNos=运单号
foss.stl.consumer.queryBillClaimCP.wayBillNosEmptyText=最多输入10个运单号
foss.stl.consumer.queryBillClaimCP.BillClaimQueryInfoByDateTitle=按日期查询
foss.stl.consumer.queryBillClaimCP.BillClaimQueryInfoByNosTitle=按运单号查询
foss.stl.consumer.queryBillClaimCP.BillClaimGridTitle=服务补救/退运费单信息
foss.stl.consumer.queryBillClaimCP.applyReturn=退回
foss.stl.consumer.queryBillClaimCP.waybillNo=运单号
foss.stl.consumer.queryBillClaimCP.customerName=客户名称
foss.stl.consumer.queryBillClaimCP.customerCode=客户编码
foss.stl.consumer.queryBillClaimCP.payableOrgName=应付部门名称
foss.stl.consumer.queryBillClaimCP.payableOrgCode=应付部门编码
foss.stl.consumer.queryBillClaimCP.payableOrg=应付部门
foss.stl.consumer.queryBillClaimCP.amount=金额
foss.stl.consumer.queryBillClaimCP.paymentCategories=支付类别
#foss.stl.consumer.queryBillClaimCP.type=理赔类型
foss.stl.consumer.queryBillClaimCP.type=单据子类型
foss.stl.consumer.queryBillClaimCP.active=是否有效
foss.stl.consumer.queryBillClaimCP.createTime=创建时间
foss.stl.consumer.queryBillClaimCP.createUserName=创建人
foss.stl.consumer.queryBillClaimCP.modifyTime=修改时间
foss.stl.consumer.queryBillClaimCP.modifyUserName=修改人
foss.stl.consumer.queryBillClaimCP.billClaimTotalRows=合计&nbsp;总条数
foss.stl.consumer.queryBillClaimCP.startCreateTimeIsNotNull=生成日期(起)不能为空!
foss.stl.consumer.queryBillClaimCP.endCreateTimeIsNotNull=生成日期(止)不能为空!
foss.stl.consumer.queryBillClaimCP.startToEndCreateTimeNotMax=生成起止日期间隔不能超过60天!
foss.stl.consumer.queryBillClaimCP.endCreateTimeIsNotBefoerStartCreateTime=记服务补救/退运费生成日期(起)不能晚于服务补救/退运费生成日期(止)!
foss.stl.consumer.queryBillClaimCP.noDataUnderThisQuery=在当前条件查询范围内，没有符合要求的数据!
foss.stl.consumer.queryBillClaimCP.validateFailAlert=请检查输入条件是否合法!
foss.stl.consumer.queryBillClaimCP.wayBillNosNotInputAlert=请输入1个或10内的多个运单号
foss.stl.consumer.queryBillClaimCP.wayBillNosInputToMoreAlert=输入单号不能超过10个
foss.stl.consumer.queryBillClaimCP.statusIsReturned=当前服务补救/退运费为已退回或退回中，不能再次退回
foss.stl.consumer.queryBillClaimCP.returnMessageTitle=退回原因
foss.stl.consumer.queryBillClaimCP.returnMessageMsg=请输入退回原因:
foss.stl.consumer.queryBillClaimCP.returnSuccessAlert=退回服务补救/退运费信息成功
foss.stl.consumer.queryBillClaimCP.claimType=单据子类型
foss.stl.consumer.queryBillClaimCP.claimTypeCP=服务补救
foss.stl.consumer.queryBillClaimCP.claimTypeR=退运费

#-----------------queryFreightToCollectBill.js liqin 到付清查查询--------------------
foss.stl.consumer.queryFreightToCollectBill.validateRegionFailAlert=部门和大区至少选择一个条件进行查询!
foss.stl.consumer.queryFreightToCollectBill.startTimeCannotNull=开始时间不能为空!
foss.stl.consumer.queryFreightToCollectBill.endTimeCannotNull=结束时间不能为空!
foss.stl.consumer.queryFreightToCollectBill.startTimeCannotGreaterThanEndTime=开始时间不能大于结束时间!
foss.stl.consumer.queryFreightToCollectBill.startTimeAndEndTimePassMax=开始时间与结束时间相差不能超过
foss.stl.consumer.queryFreightToCollectBill.date=天
foss.stl.consumer.queryFreightToCollectBill.queryOnDate=按日期查询
foss.stl.consumer.queryFreightToCollectBill.dateType=日期类型
foss.stl.consumer.queryFreightToCollectBill.businessDate=业务日期&nbsp;&nbsp;
foss.stl.consumer.queryFreightToCollectBill.accountDate=记账日期&nbsp;&nbsp;
foss.stl.consumer.queryFreightToCollectBill.startDate=开始日期
foss.stl.consumer.queryFreightToCollectBill.endDate=结束日期
foss.stl.consumer.queryFreightToCollectBill.deptNo=部门
foss.stl.consumer.queryFreightToCollectBill.bigArea=大&nbsp;&nbsp;区
foss.stl.consumer.queryFreightToCollectBill.smallArea=小&nbsp;&nbsp;区
foss.stl.consumer.queryFreightToCollectBill.billClass=单据类别
foss.stl.consumer.queryFreightToCollectBill.originatingDept=始发部门
foss.stl.consumer.queryFreightToCollectBill.toDept=到达部门
foss.stl.consumer.queryFreightToCollectBill.stockStatus=库存状态
foss.stl.consumer.queryFreightToCollectBill.loseStockStatus=库存少货
foss.stl.consumer.queryFreightToCollectBill.normalSignStockStatus=正常签收
foss.stl.consumer.queryFreightToCollectBill.unnormalSignStockStatus=异常签收
foss.stl.consumer.queryFreightToCollectBill.noStockStatus=未入库
foss.stl.consumer.queryFreightToCollectBill.inStockStatus=库存中
foss.stl.consumer.queryFreightToCollectBill.exceptionStockStatus=库存异常
foss.stl.consumer.queryFreightToCollectBill.goodsQtyTotal=货物总件数
foss.stl.consumer.queryFreightToCollectBill.productType=运输性质
foss.stl.consumer.queryFreightToCollectBill.receivableNo=单据编号
foss.stl.consumer.queryFreightToCollectBill.waybillNo=运单号
foss.stl.consumer.queryFreightToCollectBill.productType=运输性质
foss.stl.consumer.queryFreightToCollectBill.alreadyIssued=已下发
foss.stl.consumer.queryFreightToCollectBill.alreadyInputStorage=已入库
foss.stl.consumer.queryFreightToCollectBill.receivableAmount=应收
foss.stl.consumer.queryFreightToCollectBill.verifyAmount=实收
foss.stl.consumer.queryFreightToCollectBill.unverifyAmount=未收
foss.stl.consumer.queryFreightToCollectBill.total=合计
foss.stl.consumer.queryFreightToCollectBill.totalAmount=总金额
foss.stl.consumer.queryFreightToCollectBill.verifyTotalAmount=已核销总金额
foss.stl.consumer.queryFreightToCollectBill.unverifyTotalAmount=未核销总金额
foss.stl.consumer.queryFreightToCollectBill.all=所有
foss.stl.consumer.queryFreightToCollectBill.deptType=部门类型
foss.stl.consumer.queryFreightToCollectBill.departFrom=出发
foss.stl.consumer.queryFreightToCollectBill.departTo=到达
#--------------------maojianqiang 查询现金付款报表 queryCashPaymentReport.js------------------------------------
foss.stl.consumer.queryCashPaymentReport.printColumnLimit=最多不能超过15列!
foss.stl.consumer.queryCashPaymentReport.isExport=确定要导出查询结果吗? 
foss.stl.consumer.queryCashPaymentReport.startDateIsNullWarning=开始时间不能为空!
foss.stl.consumer.queryCashPaymentReport.endDateIsNullWarning=结束时间不能为空!
foss.stl.consumer.queryCashPaymentReport.endDateBeforeBeginDateWarning=开始时间不能大于结束时间!
foss.stl.consumer.queryCashPaymentReport.datesLimit=开始时间与结束时间相差不能超过
foss.stl.consumer.queryCashPaymentReport.day=天
foss.stl.consumer.queryCashPaymentReport.payStartDate=付款开始时间
foss.stl.consumer.queryCashPaymentReport.payEndDate=付款结束时间
foss.stl.consumer.queryCashPaymentReport.billType=单据子类型
foss.stl.consumer.queryCashPaymentReport.paymentOrg=付款单部门
foss.stl.consumer.queryCashPaymentReport.isPrint=确定要打印吗?
foss.stl.consumer.queryCashPaymentReport.paymentCompanyName=付款公司
foss.stl.consumer.queryCashPaymentReport.paymentOrgName=付款部门
foss.stl.consumer.queryCashPaymentReport.accountDate=会计日期
foss.stl.consumer.queryCashPaymentReport.businessDate=业务日期
foss.stl.consumer.queryCashPaymentReport.payeeName=收款客户
foss.stl.consumer.queryCashPaymentReport.paymentType=付款方式
foss.stl.consumer.queryCashPaymentReport.remitStatus=单据状态
foss.stl.consumer.queryCashPaymentReport.Y=是
foss.stl.consumer.queryCashPaymentReport.N=否
foss.stl.consumer.queryCashPaymentReport.cash=现金
foss.stl.consumer.queryCashPaymentReport.telegraphic=电汇
foss.stl.consumer.queryCashPaymentReport.bankCard=银行卡
foss.stl.consumer.queryCashPaymentReport.cheque=支票
foss.stl.consumer.queryCashPaymentReport.auditAmount=已审核金额
foss.stl.consumer.queryCashPaymentReport.unAuditAmount=未审核金额
foss.stl.consumer.otherRevenue.InvoiceMarkOne=01—运输专票11%
foss.stl.consumer.otherRevenue.InvoiceMarkTwo=02—非运输专票

#------------------------------------------------------------------------
#   超时装卸费付款申请
#------------------------------------------------------------------------
foss.stl.consumer.overdueSFApply.queryByAccountDate=按记账日期查询
foss.stl.consumer.overdueSFApply.queryByPayableNo=按应付单号查询
foss.stl.consumer.overdueSFApply.queryByWaybillNo=按运单号查询

foss.stl.consumer.overdueSFApply.beginTime=记账日期 起
foss.stl.consumer.overdueSFApply.endTime=记账日期 止
foss.stl.consumer.overdueSFApply.status=审批状态
foss.stl.consumer.overdueSFApply.bigArea=大区
foss.stl.consumer.overdueSFApply.smallArea=小区
foss.stl.consumer.overdueSFApply.department=营业部
foss.stl.consumer.overdueSFApply.customer=客户
foss.stl.consumer.overdueSFApply.waybillNos=运单号
foss.stl.consumer.overdueSFApply.payableNos=应付单号
foss.stl.consumer.overdueSFApply.info=超时装卸费信息
foss.stl.consumer.overdueSFApply.jsError=JS错误
foss.stl.consumer.overdueSFApply.noInput=请输入条件查询
foss.stl.consumer.overdueSFApply.noDateInpput=请输入日期查询
foss.stl.consumer.overdueSFApply.noAreaOrDept=请至少在大区、小区、营业部中填入一项
foss.stl.comsumer.overdueSFApply.noDataFound=未查询到数据
foss.stl.consumer.overdueSFApply.beginDateGreaterThanEndDate=开始时间晚于结束时间，请重新选择时间范围
foss.stl.consumer.overdueSFApply.dateRangeGreaterThanOneMonth1=只能查询
foss.stl.consumer.overdueSFApply.dateRangeGreaterThanOneMonth2=天内的数据，请重新选择时间范围

foss.stl.consumer.overdueSFApply.gridPanel.accountDate=记账日期
foss.stl.consumer.overdueSFApply.gridPanel.amount=金额
foss.stl.consumer.overdueSFApply.gridPanel.applyOrgCode=申请部门编码
foss.stl.consumer.overdueSFApply.gridPanel.applyOrgName=申请部门名称
foss.stl.consumer.overdueSFApply.gridPanel.applyUserName=申请人
foss.stl.consumer.overdueSFApply.gridPanel.auditOrgCode=审批部门编码
foss.stl.consumer.overdueSFApply.gridPanel.auditOrgName=审批部门名称
foss.stl.consumer.overdueSFApply.gridPanel.auditStatus=审批状态
foss.stl.consumer.overdueSFApply.gridPanel.auditUserName=审批人
foss.stl.consumer.overdueSFApply.gridPanel.businessDate=业务日期
foss.stl.consumer.overdueSFApply.gridPanel.createTime=创建日期
foss.stl.consumer.overdueSFApply.gridPanel.customerCode=客户编码
foss.stl.consumer.overdueSFApply.gridPanel.customerContact=联系人编码
foss.stl.consumer.overdueSFApply.gridPanel.customerContactName=联系人名称
foss.stl.consumer.overdueSFApply.gridPanel.customerName=客户名称
foss.stl.consumer.overdueSFApply.gridPanel.customerPhone=联系电话
foss.stl.consumer.overdueSFApply.gridPanel.id=ID
foss.stl.consumer.overdueSFApply.gridPanel.modifyTime=修改时间
foss.stl.consumer.overdueSFApply.gridPanel.notes=备注
foss.stl.consumer.overdueSFApply.gridPanel.payableNo=应付单
foss.stl.consumer.overdueSFApply.gridPanel.payableOrgCode=应付部门编码
foss.stl.consumer.overdueSFApply.gridPanel.payableOrgName=应付部门名称
foss.stl.consumer.overdueSFApply.gridPanel.reason=申请原因
foss.stl.consumer.overdueSFApply.gridPanel.waybillNo=运单号
foss.stl.consumer.overdueSFApply.gridPanel.active=是否有效
foss.stl.consumer.overdueSFApply.gridPanel.totalCount=总条数：

foss.stl.consumer.overdueSFApply.applyNoDataSelected=未选中任何数据,不能进行申请操作
foss.stl.consumer.overdueSFApply.auditNoDataSelected=未选中任何数据,不能进行审批操作
foss.stl.consumer.overdueSFApply.applyStatusWrong=只有审批状态为“未申请”和“审批不同意”的单据才能申请付款
foss.stl.consumer.overdueSFApply.auditStatusWrong=只有审批状态为“审批中”和“审批同意”的单据才能进行审批操作
foss.stl.consumer.overdueSFApply.notTheSameCustcode=只有同一客户才能进行批量操作
foss.stl.consumer.overdueSFApply.notTheSameAuditStatus=审批状态不一致的不能同时审批

foss.stl.consumer.overdueSFApply.applyAuditPanel.apply=申请
foss.stl.consumer.overdueSFApply.applyAuditPanel.audit=审批
foss.stl.consumer.overdueSFApply.applyAuditPanel.passed=同意
foss.stl.consumer.overdueSFApply.applyAuditPanel.rejected=不同意
foss.stl.consumer.overdueSFApply.applyAuditPanel.notes=备注
foss.stl.consumer.overdueSFApply.applyAuditPanel.reason=原因
foss.stl.consumer.overdueSFApply.applyAuditPanel.auditOption=审批意见
foss.stl.consumer.overdueSFApply.applyAuditPanel.tooMuchWords=300个字符以内哦亲

foss.stl.consumer.overdueSFApply.MoreThanTenNoFound=请输入十个以内单号
foss.stl.consumer.overdueSFApply.waybillNosNotFound=请输入正确运单号
foss.stl.consumer.overdueSFApply.payableNosNotFound=请输入正确应付单号

foss.stl.comsumer.overdueSFApply.success=操作成功

foss.stl.consumer.common.stampReceivable=批量标记
foss.stl.consumer.common.reverseStampReceivable=批量反标记
foss.stl.consumer.overdueSFApply.emptyText=请输入最多十个单号查询
foss.stl.consumer.invoiceRegister.SquareBracketsInvalidWaybillSmall = 对不起，中括号[]中的运单号/小票单号为无效单号，请核实之后删除，否则不能提交
foss.stl.consumer.invoiceRegister.SquareBracketsInvalidDeptSmall = 对不起，中括号[]中的运单号/小票号为非本部门小票，请核实之后删除，否则不能提交！如有需要，请到发票系统中进行操作
foss.stl.consumer.invoiceRegister.thisAmountgreaterThanZero = 本次开票金额必须大于0!
foss.stl.consumer.invoiceRegister.totalAmountgreaterThanZero = 总金额必须大于0!
foss.stl.consumer.invoiceRegister.openAmountgreaterThanZero = 可开票余额必须大于0，不允许重开发票!
foss.stl.consumer.invoiceRegister.CannotReopenBill = 运单号/小票号已开发票，请勿重开发票!
foss.stl.consumer.invoiceRegister.CannotOutAmount = 不能超额开票!
foss.stl.consumer.invoiceRegister.WaybillSmallMustSelectOne = 运单号与小票号两者至少必录其一!
foss.stl.consumer.invoiceRegister.SuccessInvoice = 开票成功
foss.stl.consumer.invoiceRegister.invoiceRegister = 定额发票登记
foss.stl.consumer.invoiceRegister.waybillNo = 运单号
foss.stl.consumer.invoiceRegister.wayBillNosMustInputNum = 多个运单号之间用半角逗号或换行隔开；最多录入150个。
foss.stl.consumer.invoiceRegister.billMustNumberWayBillNosMustInputNum = 单号必须是8-14位数字,多个运单号之间用半角逗号或换行隔开；最多录入150个。
foss.stl.consumer.invoiceRegister.smallsMustInputNum = 多个小票号之间用半角逗号或换行隔开；最多录入150个。
foss.stl.consumer.invoiceRegister.billMustNumberSmallsMustInputNum = 单号必须是8-14位数字,多个小票号之间用半角逗号或换行隔开；最多录入150个。
foss.stl.consumer.invoiceRegister.openAmount = 可开票金额
foss.stl.consumer.invoiceRegister.thisAmount = 本次开票金额
foss.stl.consumer.common.stampReceivable=批量标记
foss.stl.consumer.common.reverseStampReceivable=批量反标记


#------------------------------------------------------------------------
#   签收记录查询
#------------------------------------------------------------------------

foss.stl.consumer.searchByDate=按日期查询
foss.stl.consumer.searchByWaybillNos=按单号查询
foss.stl.consumer.podDate=签收日期
foss.stl.consumer.podOrgCode=签收部门
foss.stl.consumer.podOrgName=签收部门
foss.stl.consumer.podType=签收类型
foss.stl.consumer.reset=重置
foss.stl.consumer.query=查询
foss.stl.consumer.all=全部
foss.stl.consumer.waybillNo=运单单号
foss.stl.consumer.inputWaybillNo=请输入1个或10内的多个单号,单号之间用半角逗号隔开
foss.stl.consumer.validateWaybillNo=单号必须是7-14位数字
foss.stl.consumer.podInfoReportGrid.title=签收记录信息
foss.stl.consumer.podUserCode=签收人编码
foss.stl.consumer.podUserName=签收人名字
foss.stl.consumer.createTime=创建时间
foss.stl.consumer.isInit=是否初始化
foss.stl.consumer.export=导出
foss.stl.consumer.podStartDate=签收起始时间
foss.stl.consumer.podEndDate=签收结束时间
foss.stl.consumer.warmlyReminder=温馨提示
foss.stl.consumer.selectpodStartDate=请选择开始签收时间!
foss.stl.consumer.selectpodEndDate=请选择结束签收时间!
foss.stl.consumer.business=业务
foss.stl.consumer.betweenStartDateAndEndDate=起始日期和结束日期间隔不能超过30
foss.stl.consumer.day=天!
foss.stl.consumer.beginDateBeforeEndDate=开始日期不能晚于结束日期,请重新选择!
foss.stl.consumer.alertMessage=提示信息
foss.stl.consumer.checkInputParameters=请检查输入条件是否合法
foss.stl.consumer.total=总计
foss.stl.consumer.totalCount=总条数
foss.stl.consumer.emptyResult.title=查询结果为空

foss.stl.consumer.otherRevenue.UnifiedSettlement=是否统一结算
foss.stl.consumer.otherRevenue.ContractOrgCode=合同部门编码
foss.stl.consumer.otherRevenue.ContractOrgName=合同部门名称
foss.stl.consumer.common.isDiscount=是否折扣

#---------------------------------------
#代收货款审核
#---------------------------------------
foss.stl.consumer.codAudit.waybillNo=运单号
foss.stl.consumer.codAudit.codAmount=应退金额
foss.stl.consumer.codAudit.destOrgName=到达部门名称
foss.stl.consumer.codAudit.origEquesDest=出发到达部门是否相同
foss.stl.consumer.codAudit.signBillDiffer=签收-开单时长
foss.stl.consumer.codAudit.codChangeAmount=代收更改额度
foss.stl.consumer.codAudit.codType=代收货款类型
foss.stl.consumer.codAudit.paymentType=付款方式
foss.stl.consumer.codAudit.lockStatus=审批状态
foss.stl.consumer.codAudit.billTime=开单时间
foss.stl.consumer.codAudit.comfirmTime=确认收银时间
foss.stl.consumer.codAudit.sigTime=签收时间
foss.stl.consumer.codAudit.origOrgName=出发部门名称
foss.stl.consumer.codAudit.customerName=收款人
foss.stl.consumer.codAudit.mobileNo=手机号
foss.stl.consumer.codAudit.accountNo=账号

#---------------------------------------
#应收单月结
#---------------------------------------
foss.stl.consumer.recivableMonthly.start=开始日期
foss.stl.consumer.recivableMonthly.end=结束日期
foss.stl.consumer.recivableMonthly.withholdStatus=货款状态
foss.stl.consumer.recivableMonthly.contractOrgCode=合伙人部门
foss.stl.consumer.recivableMonthly.reset=重置
foss.stl.consumer.recivableMonthly.select=查询
foss.stl.consumer.recivableMonthly.title=温馨提示
foss.stl.consumer.recivableMonthly.startNotTemp=开始日期不能为空
foss.stl.consumer.recivableMonthly.endNotTemp=结束日期不能为空
foss.stl.consumer.recivableMonthly.startToend=起始日期和结束日期间隔不能超过31天
foss.stl.consumer.recivableMonthly.endToStart=结束日期不能早于起始日期
foss.stl.consumer.recivableMonthly.waybillNoValidate=请输入1个或10内的多个单号,单号之间用半角逗号隔开
foss.stl.consumer.recivableMonthly.waybillNoLabel=运单单号
foss.stl.consumer.recivableMonthly.DateForm=按日期查询
foss.stl.consumer.recivableMonthly.WaybillForm=按运单查询
foss.stl.consumer.recivableMonthly.message=月结应收单明细
foss.stl.consumer.recivableMonthly.emptyText=没有数据
foss.stl.consumer.recivableMonthly.contractOrgName=出发合伙人部门
foss.stl.consumer.recivableMonthly.waybillNo=单号
foss.stl.consumer.recivableMonthly.createTime=开单日期
foss.stl.consumer.recivableMonthly.deliveryCustomerCode=发货客户编码
foss.stl.consumer.recivableMonthly.paymentType=付款方式
foss.stl.consumer.recivableMonthly.amount=开单金额
foss.stl.consumer.recivableMonthly.productCode=运输性质
foss.stl.consumer.recivableMonthly.amountCount=明细提成总金额

foss.stl.consumer.queryReceivableBill.receivableType=应收类型
foss.stl.consumer.common.partnerName=合伙人名称
foss.stl.consumer.common.partnerCode=合伙人编码
foss.stl.consumer.queryReceivableBill.withholdStatus=扣款状态
foss.stl.consumer.queryReceivableBill.unWithhold=未扣款
foss.stl.consumer.queryReceivableBill.withholdSuccess=扣款成功
foss.stl.consumer.queryReceivableBill.withholdFailed=扣款失败

#合伙人对账单
foss.stl.consumer.invoiceStatementAdd.customerIsNullWarning=客户信息不能为空!
foss.stl.consumer.invoiceStatementAdd.quryDateIsNullWarning=起始日期或结束日期间为空，不能进行查询!
foss.stl.consumer.invoiceStatementAdd.queryDateMaxLimit=起始日期和结束日期间隔不能超过31天!
foss.stl.consumer.common.dateEndBeforeStatrtWarining=结束日期不能早于起始日期!
foss.stl.consumer.common.queryNosLimit=输入单号不能超过10个!
foss.stl.consumer.common.billNosIsNullWarning=输入单号不能为空！
foss.stl.consumer.invoiceStatementAdd.makeByCustomer=按客户制作
foss.stl.consumer.invoiceStatementAdd.customerType=客户类型
foss.stl.consumer.invoiceStatementAdd.businessPartner=事业合伙人
foss.stl.consumer.invoiceStatementAdd.accountPeriod=账期日期
foss.stl.consumer.invoiceStatementAdd.to=至
foss.stl.consumer.invoiceStatementAdd.makeByNumber=按单号制作
foss.stl.consumer.invoiceStatementAdd.number=单号
foss.stl.consumer.invoiceStatementAdd.billNosQueryLimit=最多输入10个单号，以半角的,或;隔开
foss.stl.consumer.invoiceStatementAdd.billNosDesc=(备注包括：运单号，始发提成应收单单号，委托派费应收单单号，培训会务应收单单号)
foss.stl.consumer.invoiceStatementAdd.billingType=对账单类型
foss.stl.consumer.invoiceStatementAdd.businessPartnerInvoiceBill=合伙人发票对账单
foss.stl.consumer.invoiceStatementAdd.createTime=制单时间
foss.stl.consumer.invoiceStatementAdd.customerCode=客户编码
foss.stl.consumer.invoiceStatementAdd.periodBeginDate=账期开始
foss.stl.consumer.invoiceStatementAdd.companyName=所属公司
foss.stl.consumer.invoiceStatementAdd.customerName=客户名称
foss.stl.consumer.invoiceStatementAdd.periodEndDate=账期结束
foss.stl.consumer.invoiceStatementAdd.createOrgName=所属部门
foss.stl.consumer.invoiceStatementAdd.statementBillNo=对账单号
foss.stl.consumer.invoiceStatementAdd.sectorBenchmarkingEncoding=部门标杆编码
foss.stl.consumer.invoiceStatementAdd.invoiceHeadCode=发票抬头
foss.stl.consumer.invoiceStatementAdd.taxId=税务登记号
foss.stl.consumer.invoiceStatementAdd.totleFee=本期总金额
foss.stl.consumer.invoiceStatementAdd.billDetails=对账单本期明细
foss.stl.consumer.invoiceStatementAdd.businessDate=业务日期
foss.stl.consumer.invoiceStatementAdd.waybillNo=运单号
foss.stl.consumer.invoiceStatementAdd.totleFee=总金额
foss.stl.consumer.invoiceStatementAdd.productType=运输性质
foss.stl.consumer.invoiceStatementAdd.documentType=单据子类型
foss.stl.consumer.invoiceStatementAdd.deptName=部门名称
foss.stl.consumer.invoiceStatementAdd.deptCode=部门编码
foss.stl.consumer.invoiceStatementAdd.billingDate=记账日期
foss.stl.consumer.invoiceStatementAdd.signDate=签收日期
foss.stl.consumer.invoiceStatementAdd.aimAddress=目的站
foss.stl.consumer.invoiceStatementAdd.createStatement=生成对账单
foss.stl.consumer.invoiceStatementAdd.saveStatementMask=保存对账单，请耐心等待...
foss.stl.consumer.invoiceStatementManage.orgCodeNull=大区、小区、部门不能同时为空！
foss.stl.consumer.invoiceStatementManage.quryDateIsNullWarning=开始时间不能为空
foss.stl.consumer.invoiceStatementManage.queryDateMaxLimit=起始日期和结束日期间隔不能超过31天!
foss.stl.consumer.invoiceStatementManage.makeByCustomer=按客户制作
foss.stl.consumer.common.largeRegion=大区
foss.stl.consumer.common.smallRegion=小区
foss.stl.consumer.common.statementOrgName=部门
foss.stl.consumer.invoiceStatementManage.periodBeginDate=账期开始
foss.stl.consumer.invoiceStatementManage.to=至
foss.stl.consumer.invoiceStatementManage.statementStatus=发票申请状态
foss.stl.consumer.invoiceStatementManage.all=全部
foss.stl.consumer.common.makeByWaybillNumber=按运单号查询
foss.stl.consumer.invoiceStatementManage.number=单号
foss.stl.consumer.invoiceStatementManage.billNosQueryRegexText=输入以YS,YF,US,UF开头加数字或只输入数字，必须是7-10位数字，以"半角状态"的， 或；隔开
foss.stl.consumer.common.makeByBillNumber=按对账单号查询
foss.stl.consumer.invoiceStatementAdd.actionColumn=操作列
foss.stl.consumer.invoiceStatementManage.billNumber=对账单号
foss.stl.consumer.invoiceStatementManage.statementStatus=对账单状态
foss.stl.consumer.invoiceStatementManage.periodAmount=本期发生金额
foss.stl.consumer.invoiceStatementManage.periodStartDate=账期开始时间
foss.stl.consumer.invoiceStatementManage.periodEndAmount=账期结束时间
foss.stl.consumer.invoiceStatementManage.confirmDate=确认时间
foss.stl.consumer.invoiceStatementManage.deptBenchMarkingCode=部门标杆编码
foss.stl.consumer.invoiceStatementManage.invoiceStatus=发票申请状态
foss.stl.consumer.invoiceStatementAdd.currentDataIsNullWarning=本期账单没有数据！
foss.stl.consumer.invoiceStatementAdd.isSaveStatement=是否要保存对账单
foss.stl.consumer.invoiceStatementAdd.hhDeptNoDiffrent=当前单号集合存在不同的"合伙人的部门编码"不能生成对账单号
foss.stl.consumer.invoiceStatementAdd.isGeneralTaxpayerNull=一般纳税人信息判断失败，不可开对账单
foss.stl.consumer.invoiceStatementAdd.invoiceHeadCodeNull=发票抬头为空，不可开对账单
foss.stl.consumer.invoiceStatementAdd.registeredAddressNull=此客户为一般纳税人，注册地址不能为空
foss.stl.consumer.invoiceStatementAdd.registeredTelephoneNull=此客户为一般纳税人，注册电话不能为空
foss.stl.consumer.invoiceStatementAdd.bankNull=此客户为一般纳税人，开户行不能为空
foss.stl.consumer.invoiceStatementAdd.accountBankNull=此客户为一般纳税人，银行帐号不能为空
foss.stl.consumer.invoiceStatementAdd.taxIdNull=此客户为一般纳税人，税务登记号不能为空
foss.stl.consumer.invoiceStatementManage.notApply=未申请
foss.stl.consumer.invoiceStatementManage.issued=已开具
foss.stl.consumer.invoiceStatementManage.reback=已退回
foss.stl.consumer.invoiceStatementManage.inIssue=开具中
foss.stl.consumer.invoiceStatementManage.currentDataIsNullWarning=要删除的对账单条目不能为空
foss.stl.consumer.invoiceStatementManage.isSaveStatement=确认删除
foss.stl.consumer.invoiceStatementManage.saveStatementMask=正在删除中，请耐心等待...
foss.stl.consumer.invoiceStatementManage.periodAmount=本期发生金额
foss.stl.consumer.invoiceStatementManage.confirm=确认作废
foss.stl.consumer.common.noResult=没有查询到相应对账单
foss.stl.consumer.common.partnerMessage=合伙人信息
foss.stl.consumer.invoiceStatementManage.registeredAddress=注册地址
foss.stl.consumer.invoiceStatementManage.registeredTelephone=注册电话
foss.stl.consumer.invoiceStatementManage.bank=银行名称
foss.stl.consumer.invoiceStatementManage.accountBank=银行帐号
foss.stl.consumer.invoiceStatementManage.isGeneralTaxpayer=是否一般纳税人
foss.stl.consumer.invoiceStatementManage.invoiceMark=发票标记
foss.stl.consumer.invoiceStatementManage.invoiceHeadCode=发票抬头
foss.stl.consumer.invoiceStatementManage.taxId=税务登记号
foss.stl.consumer.invoiceStatementManage.QueryInfoGridTooltip=查看明细
foss.stl.consumer.invoiceStatementManage.reviewBillDetails=应收单明细
foss.stl.consumer.invoiceStatementManage.customerIsNullWarning=客户信息不能为空!
foss.stl.consumer.invoiceStatementManage.customerType=客户类型
foss.stl.consumer.invoiceStatementManage.businessPartner=事业合伙人
foss.stl.consumer.invoiceStatementManage.businessDate=业务日期
foss.stl.consumer.invoiceStatementManage.waybillNo=运单号
foss.stl.consumer.invoiceStatementManage.totleFee=本期总金额
foss.stl.consumer.invoiceStatementManage.productType=运输性质
foss.stl.consumer.invoiceStatementManage.documentType=单据子类型
foss.stl.consumer.invoiceStatementManage.customerName=客户名称
foss.stl.consumer.invoiceStatementManage.deptName=部门名称
foss.stl.consumer.invoiceStatementManage.deptCode=部门编码
foss.stl.consumer.invoiceStatementManage.billingDate=记账日期
foss.stl.consumer.invoiceStatementManage.signDate=签收日期
foss.stl.consumer.invoiceStatementManage.aimAddress=目的站
foss.stl.consumer.invoiceStatementManage.billDetails=对账单本期明细
foss.stl.consumer.invoiceStatementManage.customerCode=客户编码
foss.stl.consumer.invoiceStatementAdd.statementBillNo=对账单号
foss.stl.consumer.invoiceStatementManage.invoiceStateValid=想要删除的对账单中存在除“未申请，已退回”以外的其它发票状态的对账单，请核实后删除
foss.stl.consumer.common.currentDeptNull=当前部门编码异常，请联系系统管理员！
foss.stl.consumer.common.alsoborrow=还借支
foss.stl.consumer.common.currentDeptNull=当前部门编码异常，请联系系统管理员！
foss.stl.consumer.cod.codAmountOfCH=现金
foss.stl.consumer.cod.codAmountOfCD=银行卡
foss.stl.consumer.cod.codAmountOfTT=电汇
foss.stl.consumer.cod.manageDepartment=经营本部
foss.stl.consumer.cod.codFCAmount=到付金额
foss.stl.consumer.cod.destCashierName=到达部门收银员
foss.stl.consumer.cod.destMobilePhone=到达部门电话

#=======
#发票新增合并运单需求 322906 2016.10.31
#=======

foss.stl.consumer.invoiceMergeWaybill.invoiceMarkOne=01—运输专票11%
foss.stl.consumer.invoiceMergeWaybill.invoiceMarkTwo=02—非运输专票
foss.stl.consumer.invoiceMergeWaybill.breakbulk=零担
foss.stl.consumer.invoiceMergeWaybill.express=快递
foss.stl.consumer.invoiceMergeWaybill.wholeVehicle=整车
foss.stl.consumer.invoiceMergeWaybill.original=始发
foss.stl.consumer.invoiceMergeWaybill.delivery=到达
foss.stl.consumer.invoiceMergeWaybill.paymentType.CH=现金
foss.stl.consumer.invoiceMergeWaybill.paymentType.CD=银行卡
foss.stl.consumer.invoiceMergeWaybill.paymentType.CT=月结
foss.stl.consumer.invoiceMergeWaybill.paymentType.DT=临时欠款
foss.stl.consumer.invoiceMergeWaybill.paymentType.OL=网上支付
foss.stl.consumer.invoiceMergeWaybill.paymentType.FC=到付
foss.stl.consumer.invoiceMergeWaybill.mergeByCustomerCode=按客户编码合并
foss.stl.consumer.invoiceMergeWaybill.customerCode= 客户编码
foss.stl.consumer.invoiceMergeWaybill.businessDate=业务日期
foss.stl.consumer.invoiceMergeWaybill.invoiceTitle= 发票抬头
foss.stl.consumer.invoiceMergeWaybill.taxId= 税务登记号
foss.stl.consumer.invoiceMergeWaybill.department= 所属部门
foss.stl.consumer.invoiceMergeWaybill.invoiceMark= 发票标记
foss.stl.consumer.invoiceMergeWaybill.unifiedSettlement= 是否统一结算
foss.stl.consumer.invoiceMergeWaybill.billType= 单据类型
foss.stl.consumer.invoiceMergeWaybill.paymentType= 付款方式
foss.stl.consumer.invoiceMergeWaybill.waybillDetail=运单明细列表
foss.stl.consumer.invoiceMergeWaybill.merge=合并
foss.stl.consumer.invoiceMergeWaybill.billTime=开单日期
foss.stl.consumer.invoiceMergeWaybill.waybillNo=运单号
foss.stl.consumer.invoiceMergeWaybill.mergeWaybillNo=合并运单号
foss.stl.consumer.invoiceMergeWaybill.businessType=业务类型
foss.stl.consumer.invoiceMergeWaybill.prePayAmount=预付金额
foss.stl.consumer.invoiceMergeWaybill.toPayAmount=到付金额
foss.stl.consumer.invoiceMergeWaybill.deliveryCustomerCode=发货方客户编码
foss.stl.consumer.invoiceMergeWaybill.receiveCustomerCode=收货方客户编码
foss.stl.consumer.invoiceMergeWaybill.receiveOrgCode=收货部门编码
foss.stl.consumer.invoiceMergeWaybill.receiveOrgName=收货部门名称
foss.stl.consumer.invoiceMergeWaybill.arriveOrgCode=到达部门编码
foss.stl.consumer.invoiceMergeWaybill.arriveOrgName=到达部门名称
foss.stl.consumer.invoiceMergeWaybill.originalDunningOrgName=出发催款部门
foss.stl.consumer.invoiceMergeWaybill.originalContractOrgName=出发合同部门
foss.stl.consumer.invoiceMergeWaybill.arriveDunningOrgName=到达催款部门
foss.stl.consumer.invoiceMergeWaybill.arriveContractOrgName=到达合同名称

foss.stl.consumer.invoiceMergeWaybill.queryByTime=按时间查询
foss.stl.consumer.invoiceMergeWaybill.startDate=开始时间
foss.stl.consumer.invoiceMergeWaybill.endDate=结束时间
foss.stl.consumer.invoiceMergeWaybill.queryByWaybillNo=按运单查询
foss.stl.consumer.invoiceMergeWaybill.billNosQueryRegexText=运单号规则
foss.stl.consumer.invoiceMergeWaybill.queryByMergeWaybillNo=按合并运单查询
foss.stl.consumer.invoiceMergeWaybill.mergeWaybillInfo=合并运单信息
foss.stl.consumer.invoiceMergeWaybill.createTime=合并运单时间
foss.stl.consumer.invoiceMergeWaybill.transferLine=运输路线
foss.stl.consumer.invoiceMergeWaybill.originalInvoiceMoney=出发开票金额
foss.stl.consumer.invoiceMergeWaybill.arriveInvoiceMoney=到达开票金额
foss.stl.consumer.invoiceMergeWaybill.invoiceTime=开票时间


foss.stl.consumer.invoiceMergeWaybill.customerCodeNotice=请输入客户编码,以“,”分隔

foss.stl.consumer.invoiceMergeWaybill.createStartDateCannotBeNull=开始日期不能为空
foss.stl.consumer.invoiceMergeWaybill.createEndDateCannotBeNull=结束日期不能为空
foss.stl.consumer.invoiceMergeWaybill.createDateDiffCannotExceedSomeDays=开始日期和结束日期间隔不能超过31天
foss.stl.consumer.invoiceMergeWaybill.createStartDateCannotGtEndDate=开始日期不能晚于结束日期

foss.stl.consumer.invoiceMergeWaybill.mergeNumber=合并条数必须大于150,小于1000
foss.stl.consumer.invoiceMergeWaybill.sureToMerge=已选择【{0}】条,确定合并吗？
foss.stl.consumer.invoiceMergeWaybill.emptyText=查询结果为空

foss.stl.consumer.invoiceMergeWaybill.lookOver=查看明细
foss.stl.consumer.invoiceMergeWaybill.cancel=作废
foss.stl.consumer.invoiceMergeWaybill.isWatchEntry=是否要进行查看明细操作？
foss.stl.consumer.invoiceMergeWaybill.confirm2cancel=确定要作废吗？
foss.stl.consumer.invoiceMergeWaybill.actionColumn=操作列
foss.stl.consumer.invoiceMergeWaybill.to=至

foss.stl.consumer.invoiceMergeWaybill.pleaseCheckConditionLegal=请检查输入条件是否合法

foss.stl.consumer.invoiceMergeWaybill.customerCodeNotNull=客户编码不允许为空
foss.stl.consumer.invoiceMergeWaybill.customerNosLimit=最多可以输入5个客户编码
foss.stl.consumer.invoiceMergeWaybill.mergeWaybillNosLimit=最多可输入30个合并运单号
foss.stl.consumer.invoiceMergeWaybill.waybillNosLimit=最多可输入1000个运单号
foss.stl.consumer.invoiceMergeWaybill.settlementNotAll=非统一结算时单据类型不能选择全部
foss.stl.consumer.invoiceMergeWaybill.notRule=不符合规则，请维护后重新查询
foss.stl.consumer.invoiceMergeWaybill.correctCustomer=请正确填写客户编码，获取纳税人信息后再查询



