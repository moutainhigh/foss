<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="foss.stl.CodEntityDao">
	<resultMap id="BaseResultMap"
		type="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="WAYBILL_ID" property="waybillId" jdbcType="VARCHAR" />
		<result column="PAYABLE_ORG_CODE" property="payableOrgCode" jdbcType="VARCHAR" />
		<result column="PAYABLE_ORG_NAME" property="payableOrgName" jdbcType="VARCHAR" />
		<result column="COD_TYPE" property="codType" jdbcType="VARCHAR" />
		<result column="PAYEE_RELATIONSHIP" property="payeeRelationship" jdbcType="VARCHAR" />
		<result column="BANK_HQ_NAME" property="bankHQName" jdbcType="VARCHAR" />
		<result column="BANK_BRANCH_NAME" property="bankBranchName" jdbcType="VARCHAR" />
		<result column="PUBLIC_PRIVATE_FLAG" property="publicPrivateFlag" jdbcType="VARCHAR" />
		<result column="PAYEE_NAME" property="payeeName" jdbcType="VARCHAR" />
		<result column="ACCOUNT_NO" property="accountNo" jdbcType="VARCHAR" />
		<result column="PAYEE_PHONE" property="payeePhone" jdbcType="VARCHAR" />
		<result column="PROVINCE_CODE" property="provinceCode" jdbcType="VARCHAR" />
		<result column="PROVINCE_NAME" property="provinceName" jdbcType="VARCHAR" />
		<result column="CITY_CODE" property="cityCode" jdbcType="VARCHAR" />
		<result column="CITY_NAME" property="cityName" jdbcType="VARCHAR" />
		<result column="BUSINESS_DATE" property="businessDate" jdbcType="TIMESTAMP" />
		<result column="BATCH_NUMBER" property="batchNumber" jdbcType="VARCHAR" />
		<result column="REFUND_SUCCESS_TIME" property="refundSuccessTime" jdbcType="TIMESTAMP" />
		<result column="CREATE_USER_NAME" property="createUserName" jdbcType="VARCHAR" />
		<result column="CREATE_USER_CODE" property="createUserCode" jdbcType="VARCHAR" />
		<result column="CREATE_ORG_CODE" property="createOrgCode" jdbcType="VARCHAR" />
		<result column="CREATE_ORG_NAME" property="createOrgName" jdbcType="VARCHAR" />
		<result column="IS_INIT" property="isInit" jdbcType="CHAR" />
		<result column="ACTIVE" property="active" jdbcType="CHAR" />
		<result column="STATUS" property="status" jdbcType="VARCHAR" />
		<result column="AIR_STATUS" property="airStatus" jdbcType="VARCHAR" />
		<result column="LAND_STATUS" property="landStatus" jdbcType="VARCHAR" />
		<result column="ORG_FREEZE_TIME" property="orgFreezeTime" jdbcType="TIMESTAMP" />
		<result column="ORG_FREEZE_USER_CODE" property="orgFreezeUserCode" jdbcType="VARCHAR" />
		<result column="ORG_FREEZE_USER_NAME" property="orgFreezeUserName" jdbcType="VARCHAR" />
		<result column="ACCOUNT_MODIFY_TIME" property="accountModifyTime" jdbcType="TIMESTAMP" />
		<result column="ACCOUNT_MODIFY_USER_CODE" property="accountModifyUserCode" jdbcType="VARCHAR" />
		<result column="ACCOUNT_MODIFY_USER_NAME" property="accountModifyUserName" jdbcType="VARCHAR" />
		<result column="ORG_AUDIT_TIME" property="orgAuditTime" jdbcType="TIMESTAMP" />
		<result column="ORG_AUDIT_USER_CODE" property="orgAuditUserCode" jdbcType="VARCHAR" />
		<result column="ORG_AUDIT_USER_NAME" property="orgAuditUserName" jdbcType="VARCHAR" />
		<result column="ORG_MANAGER_AUDIT_TIME" property="orgManagerAuditTime" jdbcType="TIMESTAMP" />
		<result column="ORG_MANAGER_AUDIT_CODE" property="orgManagerAuditCode" jdbcType="VARCHAR" />
		<result column="ORG_MANAGER_AUDIT_NAME" property="orgManagerAuditName" jdbcType="VARCHAR" />
		<result column="REFUND_NOTES" property="refundNotes" jdbcType="VARCHAR" />
		<result column="TUSYORG_FREEZE_TIME" property="tusyorgFreezeTime" jdbcType="TIMESTAMP" />
		<result column="TUSYORG_FREEZE_USER_CODE" property="tusyorgFreezeUserCode" jdbcType="VARCHAR" />
		<result column="TUSYORG_FREEZE_USER_NAME" property="tusyorgFreezeUserName" jdbcType="VARCHAR" />
		<result column="TUSYORG_CLFREEZE_TIME" property="tusyorgClfreezeTime" jdbcType="TIMESTAMP" />
		<result column="TUSYORG_CLFREEZE_USER_CODE" property="tusyorgClfreezeUserCode" jdbcType="VARCHAR" />
		<result column="TUSYORG_CLFREEZE_USER_NAME" property="tusyorgClfreezeUserName" jdbcType="VARCHAR" />
		<result column="TUSYORG_AUDIT_TIME" property="tusyorgAuditTime" jdbcType="TIMESTAMP" />
		<result column="TUSYORG_AUDIT_USER_CODE" property="tusyorgAuditUserCode" jdbcType="VARCHAR" />
		<result column="TUSYORG_AUDIT_USER_NAME" property="tusyorgAuditUserName" jdbcType="VARCHAR" />
		<result column="TUSYORG_RFD_APPTIME" property="tusyorgRfdApptime" jdbcType="TIMESTAMP" />
		<result column="TUSYORG_RFD_APP_USER_CODE" property="tusyorgRfdAppUserCode" jdbcType="VARCHAR" />
		<result column="TUSYORG_RFD_APP_USER_NAME" property="tusyorgRfdAppUserName" jdbcType="VARCHAR" />
		<result column="COD_EXPORT_TIME" property="codExportTime" jdbcType="TIMESTAMP" />
		<result column="COD_EXPORT_CODE" property="codExportCode" jdbcType="VARCHAR" />
		<result column="COD_EXPORT_NAME" property="codExportName" jdbcType="VARCHAR" />
		<result column="REMITTANCE_FAIL_NOTES" property="remittanceFailNotes" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="MODIFY_TIME" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="MODIFY_USER_CODE" property="modifyUserCode" jdbcType="VARCHAR" />
		<result column="MODIFY_USER_NAME" property="modifyUserName" jdbcType="VARCHAR" />
		<result column="COD_AMOUNT" property="codAmount" jdbcType="DECIMAL" />
		<result column="BANK_BRANCH_CODE" property="bankBranchCode" jdbcType="VARCHAR" />
		<result column="REFUND_PATH" property="refundPath" jdbcType="VARCHAR" />
		<result column="VERSION_NO" property="versionNo" jdbcType="DECIMAL" />
		<result column="BANK_HQ_CODE" property="bankHQCode" jdbcType="VARCHAR"/>
		<result column="CUSTOMER_NAME" property="customerName" jdbcType="VARCHAR"/>
		<result column="CUSTOMER_CODE" property="customerCode" jdbcType="VARCHAR"/>
		<result column="COM_ACCOUNT" property="comAccount" jdbcType="VARCHAR"/>
	</resultMap>
	
	<resultMap id="CODPayableDtoResultMap"
		type="com.deppon.foss.module.settlement.consumer.api.shared.dto.CODPayableDto">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="WAYBILL_ID" property="waybillId" jdbcType="VARCHAR" />
		<result column="PAYABLE_ORG_CODE" property="payableOrgCode" jdbcType="VARCHAR" />
		<result column="PAYABLE_ORG_NAME" property="payableOrgName" jdbcType="VARCHAR" />
		<result column="COD_TYPE" property="codType" jdbcType="VARCHAR" />
		<result column="PAYEE_RELATIONSHIP" property="payeeRelationship" jdbcType="VARCHAR" />
		<result column="BANK_HQ_NAME" property="bankHQName" jdbcType="VARCHAR" />
		<result column="BANK_BRANCH_NAME" property="bankBranchName" jdbcType="VARCHAR" />
		<result column="PUBLIC_PRIVATE_FLAG" property="publicPrivateFlag" jdbcType="VARCHAR" />
		<result column="PAYEE_NAME" property="payeeName" jdbcType="VARCHAR" />
		<result column="ACCOUNT_NO" property="accountNo" jdbcType="VARCHAR" />
		<result column="PAYEE_PHONE" property="payeePhone" jdbcType="VARCHAR" />
		<result column="PROVINCE_CODE" property="provinceCode" jdbcType="VARCHAR" />
		<result column="PROVINCE_NAME" property="provinceName" jdbcType="VARCHAR" />
		<result column="CITY_CODE" property="cityCode" jdbcType="VARCHAR" />
		<result column="CITY_NAME" property="cityName" jdbcType="VARCHAR" />
		<result column="BUSINESS_DATE" property="businessDate" jdbcType="TIMESTAMP" />
		<result column="BATCH_NUMBER" property="batchNumber" jdbcType="VARCHAR" />
		<result column="REFUND_SUCCESS_TIME" property="refundSuccessTime" jdbcType="TIMESTAMP" />
		<result column="CREATE_USER_NAME" property="createUserName" jdbcType="VARCHAR" />
		<result column="CREATE_USER_CODE" property="createUserCode" jdbcType="VARCHAR" />
		<result column="CREATE_ORG_CODE" property="createOrgCode" jdbcType="VARCHAR" />
		<result column="CREATE_ORG_NAME" property="createOrgName" jdbcType="VARCHAR" />
		<result column="IS_INIT" property="isInit" jdbcType="CHAR" />
		<result column="ACTIVE" property="active" jdbcType="CHAR" />
		<result column="STATUS" property="status" jdbcType="VARCHAR" />
		<result column="AIR_STATUS" property="airStatus" jdbcType="VARCHAR" />
		<result column="ORG_FREEZE_TIME" property="orgFreezeTime" jdbcType="TIMESTAMP" />
		<result column="ORG_FREEZE_USER_CODE" property="orgFreezeUserCode" jdbcType="VARCHAR" />
		<result column="ORG_FREEZE_USER_NAME" property="orgFreezeUserName" jdbcType="VARCHAR" />
		<result column="ACCOUNT_MODIFY_TIME" property="accountModifyTime" jdbcType="TIMESTAMP" />
		<result column="ACCOUNT_MODIFY_USER_CODE" property="accountModifyUserCode" jdbcType="VARCHAR" />
		<result column="ACCOUNT_MODIFY_USER_NAME" property="accountModifyUserName" jdbcType="VARCHAR" />
		<result column="ORG_AUDIT_TIME" property="orgAuditTime" jdbcType="TIMESTAMP" />
		<result column="ORG_AUDIT_USER_CODE" property="orgAuditUserCode" jdbcType="VARCHAR" />
		<result column="ORG_AUDIT_USER_NAME" property="orgAuditUserName" jdbcType="VARCHAR" />
		<result column="ORG_MANAGER_AUDIT_TIME" property="orgManagerAuditTime" jdbcType="TIMESTAMP" />
		<result column="ORG_MANAGER_AUDIT_CODE" property="orgManagerAuditCode" jdbcType="VARCHAR" />
		<result column="ORG_MANAGER_AUDIT_NAME" property="orgManagerAuditName" jdbcType="VARCHAR" />
		<result column="REFUND_NOTES" property="refundNotes" jdbcType="VARCHAR" />
		<result column="TUSYORG_FREEZE_TIME" property="tusyorgFreezeTime" jdbcType="TIMESTAMP" />
		<result column="TUSYORG_FREEZE_USER_CODE" property="tusyorgFreezeUserCode" jdbcType="VARCHAR" />
		<result column="TUSYORG_FREEZE_USER_NAME" property="tusyorgFreezeUserName" jdbcType="VARCHAR" />
		<result column="TUSYORG_CLFREEZE_TIME" property="tusyorgClfreezeTime" jdbcType="TIMESTAMP" />
		<result column="TUSYORG_CLFREEZE_USER_CODE" property="tusyorgClfreezeUserCode" jdbcType="VARCHAR" />
		<result column="TUSYORG_CLFREEZE_USER_NAME" property="tusyorgClfreezeUserName" jdbcType="VARCHAR" />
		<result column="TUSYORG_AUDIT_TIME" property="tusyorgAuditTime" jdbcType="TIMESTAMP" />
		<result column="TUSYORG_AUDIT_USER_CODE" property="tusyorgAuditUserCode" jdbcType="VARCHAR" />
		<result column="TUSYORG_AUDIT_USER_NAME" property="tusyorgAuditUserName" jdbcType="VARCHAR" />
		<result column="TUSYORG_RFD_APPTIME" property="tusyorgRfdApptime" jdbcType="TIMESTAMP" />
		<result column="TUSYORG_RFD_APP_USER_CODE" property="tusyorgRfdAppUserCode" jdbcType="VARCHAR" />
		<result column="TUSYORG_RFD_APP_USER_NAME" property="tusyorgRfdAppUserName" jdbcType="VARCHAR" />
		<result column="COD_EXPORT_TIME" property="codExportTime" jdbcType="TIMESTAMP" />
		<result column="COD_EXPORT_CODE" property="codExportCode" jdbcType="VARCHAR" />
		<result column="COD_EXPORT_NAME" property="codExportName" jdbcType="VARCHAR" />
		<result column="REMITTANCE_FAIL_NOTES" property="remittanceFailNotes" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="MODIFY_TIME" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="MODIFY_USER_CODE" property="modifyUserCode" jdbcType="VARCHAR" />
		<result column="MODIFY_USER_NAME" property="modifyUserName" jdbcType="VARCHAR" />
		<result column="COD_AMOUNT" property="codAmount" jdbcType="DECIMAL" />
		<result column="BANK_BRANCH_CODE" property="bankBranchCode" jdbcType="VARCHAR" />
		<result column="REFUND_PATH" property="refundPath" jdbcType="VARCHAR" />
		<result column="VERSION_NO" property="versionNo" jdbcType="DECIMAL" />
		<result column="BANK_HQ_CODE" property="bankHQCode" jdbcType="VARCHAR"/>
		<result column="CUSTOMER_NAME" property="customerName" jdbcType="VARCHAR"/>
		<result column="CUSTOMER_CODE" property="customerCode" jdbcType="VARCHAR"/>
		
		<result column="payable_Id" property="payableId" jdbcType="VARCHAR"/>
		<result column="payable_AccountDate" property="payableAccountDate" jdbcType="TIMESTAMP"/>
		<result column="payable_VersionNo" property="payableVersionNo" jdbcType="VARCHAR"/>
		<result column="effective_Status" property="effectiveStatus" jdbcType="VARCHAR"/>
		<result column="sign_Date" property="signDate" jdbcType="TIMESTAMP"/>
		
		<result column="payable_Com_Name" property="payableComName" jdbcType="VARCHAR"/>
		<result column="payable_WaybillNo" property="payableWaybillNo" jdbcType="VARCHAR"/>
		<result column="unverify_Amount" property="unverifyAmount" jdbcType="DECIMAL"/>
		<result column="payable_PayableOrgName" property="payablePayableOrgName" jdbcType="VARCHAR"/>
		<result column="amount" property="amount" jdbcType="DECIMAL"/>
		
		<result column="payable_Com_Code" property="payableComCode" jdbcType="VARCHAR"/>
		<result column="payable_PayableOrgCode" property="payablePayableOrgCode" jdbcType="VARCHAR"/>
		<result column="payable_No" property="payableNo" jdbcType="VARCHAR"/>
		<result column="source_Bill_No" property="sourceBillNo" jdbcType="VARCHAR"/>
		<result column="payable_CustomerName" property="payableCustomerName" jdbcType="VARCHAR"/>
		<result column="payable_CustomerCode" property="payableCustomerCode" jdbcType="VARCHAR"/>
		<result column="payable_BusinessDate" property="payableBusinessDate" jdbcType="TIMESTAMP"/>
		<result column="verify_Amount" property="verifyAmount" jdbcType="DECIMAL"/>
		<result column="approve_Status" property="approveStatus" jdbcType="VARCHAR"/>
		
	</resultMap>

	<!-- 代收货款ResultMap -->
	<resultMap id="CODResultMap"
		type="com.deppon.foss.module.settlement.consumer.api.shared.dto.CODDto">
		<!--id property="id" column="id" jdbcType="VARCHAR"/ -->
		<result property="id" column="id" jdbcType="VARCHAR" />
		<result property="waybillNo" column="waybillNo" jdbcType="VARCHAR" />
		<result property="payableNo" column="payableNo" jdbcType="VARCHAR" />
		<result property="amount" column="amount" jdbcType="DECIMAL" />
		<result property="verReceivableAmount" column="verReceivableAmount" jdbcType="DECIMAL" />
		<result property="returnAmount" column="returnAmount" jdbcType="DECIMAL" />
		<result property="verifyAmount" column="verifyAmount" jdbcType="DECIMAL" />
		<result property="codType" column="codType" jdbcType="VARCHAR" />
		<result property="status" column="status" jdbcType="VARCHAR" />
		<result property="customerName" column="customerName" jdbcType="VARCHAR" />
		<result property="payeeName" column="payeeName" jdbcType="VARCHAR" />
		<result property="payeeAccount" column="payeeAccount" jdbcType="VARCHAR" />
		<result property="bank" column="bank" jdbcType="VARCHAR" />
		<result property="bankCode" column="bankCode" jdbcType="VARCHAR" />
		<result property="payeeAndConsignor" column="payeeAndConsignor" jdbcType="VARCHAR" />
		<result property="publicPrivateFlag" column="publicPrivateFlag" jdbcType="VARCHAR" />
		<result property="provinceCode" column="province_code" jdbcType="VARCHAR" />
		<result property="cityCode" column="city_code" jdbcType="VARCHAR" />
		<result property="province" column="province" jdbcType="VARCHAR" />
		<result property="city" column="city" jdbcType="VARCHAR" />
		<result property="bankSubbranchCode" column="bankSubbranchCode" jdbcType="VARCHAR" />
		<result property="bankSubbranch" column="bankSubbranch" jdbcType="VARCHAR" />
		<result property="payeePhone" column="payeePhone" jdbcType="VARCHAR" />
		<result property="businessDate" column="business_date" jdbcType="TIMESTAMP" />
		<result property="payableOrgName" column="payableOrgName" jdbcType="VARCHAR" />
		<result property="payableOrgCode" column="payable_org_code" jdbcType="VARCHAR" />
		<result property="notes" column="notes" jdbcType="VARCHAR" />
		<result property="signDate" column="signDate" jdbcType="TIMESTAMP" />
		<result property="codExportTime" column="codExportTime" jdbcType="TIMESTAMP" />
		<result property="codExportUserCode" column="cod_export_code" jdbcType="VARCHAR" />
		<result property="codExportUserName" column="codExportUserName" jdbcType="VARCHAR" />
		<result property="remittanceFailNotes" column="remittance_fail_notes" jdbcType="VARCHAR" />
		<result property="batchNumber" column="batchNumber" jdbcType="VARCHAR" />
		<result property="payableCustomerCode" column="payable_customer_code" jdbcType="VARCHAR" />
		<result property="payableCustomerName" column="payable_customer_name" jdbcType="VARCHAR" />
		<result column="payableComCode" property="payableComCode" jdbcType="VARCHAR"/>
		<result column="payableComName" property="payableComName" jdbcType="VARCHAR"/>
		<result column="Total_Count" property="totalCount" jdbcType="DECIMAL" />
    	<result column="Total_Amount" property="totalAmount" jdbcType="DECIMAL" />
    	<result column="Freeze_Total_Count" property="freezeTotalCount" jdbcType="DECIMAL" />
    	<result column="Freeze_Total_Amount" property="freezeTotalAmount" jdbcType="DECIMAL" />
    	
    	<result property="refundSuccessTime" column="refund_success_time" jdbcType="TIMESTAMP" />
    	<result property="origOrgCode" column="ORIG_ORG_CODE" jdbcType="VARCHAR" />
    	<result property="origOrgName" column="ORIG_ORG_NAME" jdbcType="VARCHAR" />
    	<result property="destOrgCode" column="DEST_ORG_CODE" jdbcType="VARCHAR" />
    	<result property="destOrgName" column="DEST_ORG_NAME" jdbcType="VARCHAR" />
    	
	</resultMap>

	<resultMap id="codMergeDtoResultMap"
		type="com.deppon.foss.module.settlement.consumer.api.shared.dto.CODMergeDto">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
		<result column="PAYABLE_ORG_CODE" property="payableOrgCode" jdbcType="VARCHAR" />
		<result column="COD_TYPE" property="codType" jdbcType="VARCHAR" />
		<result column="PUBLIC_PRIVATE_FLAG" property="publicPrivateFlag" jdbcType="VARCHAR" />
		<result column="PAYEE_NAME" property="payeeName" jdbcType="VARCHAR" />
		<result column="ACCOUNT_NO" property="accountNo" jdbcType="VARCHAR" />
		<result column="PAYEE_PHONE" property="payeePhone" jdbcType="VARCHAR" />
		<result column="PROVINCE_CODE" property="provinceCode" jdbcType="VARCHAR" />
		<result column="CITY_CODE" property="cityCode" jdbcType="VARCHAR" />
		<result column="BANK_BRANCH_CODE" property="bankBranchCode" jdbcType="VARCHAR" />
		<result column="BANK_HQ_CODE" property="bankHqCode" jdbcType="VARCHAR"/>
		<result column="sign_Date" property="signDate" jdbcType="TIMESTAMP"/>
		<result column="unverify_Amount" property="codAmount" jdbcType="DECIMAL"/>
		<result column="payable_Com_Code" property="payableComCode" jdbcType="VARCHAR"/>
	</resultMap>

	<sql id="CODResultColumnList">
		cod.id,
		cod.waybill_no as waybillNo,
		pay.payable_no as payableNo,
		pay.amount / 100 as amount,
		pay.verify_amount / 100 as verReceivableAmount,
		pay.unverify_amount / 100 as returnAmount,
		cod.cod_type as codType,
		cod.status,
		pay.customer_name as customerName,
		cod.payee_name as payeeName,
		cod.ACCOUNT_NO AS payeeAccount,
		cod.BANK_HQ_NAME AS BANK,
		cod.BANK_HQ_CODE as bankCode,
		cod.PAYEE_RELATIONSHIP AS payeeAndConsignor,
		cod.public_private_flag as publicPrivateFlag,
		cod.province_code AS PROVINCE_CODE,
		cod.city_code AS CITY_CODE,
		cod.province_name AS PROVINCE,
		cod.city_name AS CITY,
		cod.BANK_BRANCH_CODE AS bankSubbranchCode,
		cod.BANK_BRANCH_NAME AS bankSubbranch,
		cod.payee_phone as payeePhone,
		cod.business_date,
		pay.payable_org_name as payableOrgName,
		pay.payable_org_code,
		cod.refund_notes as notes,
		pay.sign_date as signDate,
		cod.cod_export_time as codExportTime,
		cod.cod_export_code,
		cod.cod_export_name as codExportUserName,
		cod.remittance_fail_notes,
		cod.batch_number as batchNumber,
		pay.customer_code as payable_customer_code,
		pay.customer_name as payable_customer_name,
		pay.payable_com_code as payableComCode,
		pay.payable_com_name as payableComName,
		
		cod.refund_success_time as refundSuccessTime,
		pay.ORIG_ORG_CODE as origOrgCode,
		pay.ORIG_ORG_NAME as origOrgName,
		pay.DEST_ORG_CODE as destOrgCode,
		pay.DEST_ORG_NAME as destOrgName
	</sql>
	
	<sql id="CODWRFResultColumnList">
		cod.id,
		cod.waybill_no as waybillNo,
		pay.payable_no as payableNo,
		pay.amount / 100 as amount,
		pay.verify_amount / 100 as verReceivableAmount,
		pay.unverify_amount / 100 as returnAmount,
		WRF.AMOUNT/100 as verifyAmount,<!-- 关联核销单表，查询应收冲代收货款应付的金额之和   -->
		cod.cod_type as codType,
		cod.status,
		pay.customer_name as customerName,
		cod.payee_name as payeeName,
		cod.ACCOUNT_NO AS payeeAccount,
		cod.BANK_HQ_NAME AS BANK,
		cod.BANK_HQ_CODE as bankCode,
		cod.PAYEE_RELATIONSHIP AS payeeAndConsignor,
		cod.public_private_flag as publicPrivateFlag,
		cod.province_code AS PROVINCE_CODE,
		cod.city_code AS CITY_CODE,
		cod.province_name AS PROVINCE,
		cod.city_name AS CITY,
		cod.BANK_BRANCH_CODE AS bankSubbranchCode,
		cod.BANK_BRANCH_NAME AS bankSubbranch,
		cod.payee_phone as payeePhone,
		cod.business_date,
		pay.payable_org_name as payableOrgName,
		pay.payable_org_code,
		cod.refund_notes as notes,
		pay.sign_date as signDate,
		cod.cod_export_time as codExportTime,
		cod.cod_export_code,
		cod.cod_export_name as codExportUserName,
		cod.remittance_fail_notes,
		cod.batch_number as batchNumber,
		pay.customer_code as payable_customer_code,
		pay.customer_name as payable_customer_name,
		pay.payable_com_code as payableComCode,
		pay.payable_com_name as payableComName
	</sql>

	<sql id="Base_Column_List">
		ID, WAYBILL_NO, PAYABLE_ORG_CODE,
		PAYABLE_ORG_NAME,
		COD_TYPE,
		PAYEE_RELATIONSHIP,
		BANK_HQ_NAME, BANK_BRANCH_NAME,
		PUBLIC_PRIVATE_FLAG, PAYEE_NAME,
		ACCOUNT_NO,
		PAYEE_PHONE, PROVINCE_CODE,PROVINCE_NAME, CITY_CODE,CITY_NAME, BUSINESS_DATE, BATCH_NUMBER,
		REFUND_SUCCESS_TIME,
		CREATE_USER_NAME,
		CREATE_USER_CODE,
		CREATE_ORG_CODE, CREATE_ORG_NAME, IS_INIT, ACTIVE, STATUS,
		AIR_STATUS,LAND_STATUS,<!-- 快递代理代收货款审核状态 ISSUE-3389 小件业务 -->
		ORG_FREEZE_TIME, ORG_FREEZE_USER_CODE, ORG_FREEZE_USER_NAME,
		ACCOUNT_MODIFY_TIME,
		ACCOUNT_MODIFY_USER_CODE,
		ACCOUNT_MODIFY_USER_NAME, ORG_AUDIT_TIME,
		ORG_AUDIT_USER_CODE,
		ORG_AUDIT_USER_NAME, ORG_MANAGER_AUDIT_TIME, ORG_MANAGER_AUDIT_CODE,
		ORG_MANAGER_AUDIT_NAME,
		REFUND_NOTES, TUSYORG_FREEZE_TIME,
		TUSYORG_FREEZE_USER_CODE,
		TUSYORG_FREEZE_USER_NAME,
		TUSYORG_CLFREEZE_TIME, TUSYORG_CLFREEZE_USER_CODE,
		TUSYORG_CLFREEZE_USER_NAME,
		TUSYORG_AUDIT_TIME,
		TUSYORG_AUDIT_USER_CODE, TUSYORG_AUDIT_USER_NAME, TUSYORG_RFD_APPTIME,
		TUSYORG_RFD_APP_USER_CODE,
		TUSYORG_RFD_APP_USER_NAME, COD_EXPORT_TIME,
		COD_EXPORT_CODE, COD_EXPORT_NAME,
		REMITTANCE_FAIL_NOTES, CREATE_TIME,
		MODIFY_TIME, MODIFY_USER_CODE,
		MODIFY_USER_NAME,COD_AMOUNT/100 as
		COD_AMOUNT,BANK_BRANCH_CODE,REFUND_PATH,VERSION_NO,BANK_HQ_CODE,CUSTOMER_CODE,CUSTOMER_NAME,COM_ACCOUNT
	</sql>

	<sql id="Base_billPayable_List" >
	    pay.ID,
		PAY.PAYABLE_NO,
		pay.WAYBILL_NO,
		pay.WAYBILL_ID,
		pay.PAYMENT_NO,
		pay.CREATE_TYPE,
		pay.BILL_TYPE,
		pay.SOURCE_BILL_NO,
		pay.SOURCE_BILL_TYPE,
		pay.COD_TYPE,
		pay.PAYABLE_ORG_CODE,
		pay.PAYABLE_ORG_NAME,
		pay.PAYABLE_COM_CODE,
		pay.PAYABLE_COM_NAME,
		pay.ORIG_ORG_CODE,
		pay.ORIG_ORG_NAME,
		pay.DEST_ORG_CODE,
		pay.DEST_ORG_NAME,
		pay.CUSTOMER_CODE,
		pay.CUSTOMER_NAME,
		pay.AMOUNT/100AMOUNT,
		pay.VERIFY_AMOUNT/100VERIFY_AMOUNT,
		pay.UNVERIFY_AMOUNT/100UNVERIFY_AMOUNT,
		pay.CURRENCY_CODE,
		pay.PRODUCT_CODE,
		pay.PRODUCT_ID,
		pay.ACCOUNT_DATE,
		pay.BUSINESS_DATE,
		pay.SIGN_DATE,
		pay.EFFECTIVE_DATE,
		pay.CREATE_USER_NAME,
		pay.CREATE_USER_CODE,
		pay.CREATE_ORG_CODE,
		pay.CREATE_ORG_NAME,
		pay.ACTIVE,
		pay.IS_RED_BACK,
		pay.IS_INIT,
		pay.VERSION_NO,
		pay.EFFECTIVE_STATUS,
		pay.EFFECTIVE_USER_NAME,
		pay.EFFECTIVE_USER_CODE,
		pay.FROZEN_STATUS,
		pay.FROZEN_TIME,
		pay.FROZEN_USER_NAME,
		pay.FROZEN_USER_CODE,
		pay.PAY_STATUS,
		pay.STATEMENT_BILL_NO,
		pay.CUSTOMER_CONTACT,
		pay.CUSTOMER_CONTACT_NAME,
		pay.CUSTOMER_PHONE,
		pay.CREATE_TIME,
		pay.MODIFY_TIME,
		pay.MODIFY_USER_NAME,
		pay.MODIFY_USER_CODE,
		pay.WORKFLOW_NO,
		pay.LGDRIVER_CODE,
		pay.LGDRIVER_NAME,
		pay.PAYER_TYPE,
		pay.PAYABLE_TYPE,
		pay.DELIVER_FEE/100DELIVER_FEE,
		pay.OUTGOING_FEE/100OUTGOING_FEE,
		pay.AUDIT_USER_CODE,
		pay.AUDIT_USER_NAME,
		pay.AUDIT_DATE,
		pay.APPROVE_STATUS,
		pay.NOTES,
		pay.PAYEE_NAME,
		pay.BANK_HQ_CODE,
		pay.BANK_HQ_NAME,
		pay.ACCOUNT_NO,
		pay.PROVINCE_CODE,
		pay.PROVINCE_NAME,
		pay.CITY_CODE,
		pay.CITY_NAME,
		pay.BANK_BRANCH_CODE,
		pay.BANK_BRANCH_NAME,
		pay.PAYMENT_NOTES,
		pay.PAYMENT_AMOUNT/100PAYMENT_AMOUNT,
		pay.LAST_PAYMENT_TIME,
		pay.PAYMENT_CATEGORIES,
		pay.IS_WRITEOFF,
		pay.ACCOUNT_TYPE
	  </sql>

	<!-- 按批次号进行查询 -->
	<select id="queryByBatchNumber" resultMap="BaseResultMap" parameterType="string">
		select/*结算-客户管理-按批次号进行查询*/
		<include refid="Base_Column_List"/>
		from STL.T_STL_COD
		where BATCH_NUMBER = #{batchNumber,jdbcType=VARCHAR}
	</select>

	<!-- 按Id进行查询 -->
	<select id="queryById" resultMap="BaseResultMap" parameterType="java.lang.String">
		select/*结算-客户管理-按Id进行查询 - */
		<include refid="Base_Column_List" />
		from STL.T_STL_COD
		where ID = #{id,jdbcType=VARCHAR}
	</select>

	<!-- 按Id集合进行查询 -->
	<select id="queryByIds" resultMap="BaseResultMap" parameterType="java.util.List">
		select/*结算-客户管理-按Id集合进行查询*/
		<include refid="Base_Column_List" />
		from STL.T_STL_COD
		where ID in
		<!-- 对ID集合进行遍历 -->
		<foreach collection="list" item="idItem" open="(" close=")" separator=",">
			#{idItem,jdbcType=VARCHAR}
		</foreach>
	</select>
	
	<!-- 按合并编号进行查询 -->
	<select id="queryListByMergeCode" resultMap="BaseResultMap" 
			parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		select/*结算-客户管理-按合并编号进行查询*/
		<include refid="Base_Column_List" />
		from STL.T_STL_COD
		where merge_code = #{mergeCode,jdbcType=VARCHAR}
		and active = #{active,jdbcType=CHAR}
	</select>
	
	<!-- 按Id集合进行查询可合并的代收货款 -->
	<select id="queryMergeCodByIds" parameterType="java.util.List" resultMap="codMergeDtoResultMap">
		select/*结算-客户管理-按Id集合进行查询可合并的代收货款 */
				cod.id,
				cod.COD_TYPE,
				cod.ACCOUNT_NO,
				cod.PAYEE_NAME,
				cod.BANK_HQ_CODE,
				cod.BANK_BRANCH_CODE,
				cod.PUBLIC_PRIVATE_FLAG,
				cod.PAYEE_PHONE,
				cod.PROVINCE_CODE,
				cod.CITY_CODE,
				pay.sign_Date,
				pay.unverify_Amount /100 unverify_Amount,
				pay.waybill_no,
				pay.payable_Com_Code,
				pay.Payable_Org_Code
				
		from STL.T_STL_COD cod join stl.t_stl_bill_payable pay 
		    on cod.waybill_no = pay.waybill_no
		    and pay.active = 'Y'
			and pay.bill_type = 'APC'
		<!-- join BSE.T_BAS_CodRefundBaseInfo csm
		    on cod.Customer_Code = csm.CUSTOMER_CODE
		   and csm.ACTIVE = 'Y'
		   <![CDATA[ and csm.TIME_LIMIT_START <= sysdate
		   and csm.TIME_LIMIT_END > sysdate]]>-->
		where cod.ID in
		<!-- 对ID集合进行遍历 -->
		<foreach collection="list" item="idItem" open="(" close=")" separator=",">
			#{idItem,jdbcType=VARCHAR}
		</foreach>
		<!--@author 218392 zhangyongxue 2015-08-07 14:58:50 -->
		and Exists (Select 1 From Bse.T_Bas_Codrefundbaseinfo Re
         			Where Re.Customer_Code = cod.Customer_Code and Re.Active='Y'
         			and  sysdate>=Re.Time_Limit_Start  and Re.Time_Limit_End>=sysdate)
         			order by cod.ACCOUNT_NO ,cod.payee_name
	</select>

	<!-- 按运单单号进行查询 -->
	<select id="queryByWaybill" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.CODQueryByWaybillDto">
		select/*结算-客户管理-按运单单号进行查询 */
		<include refid="Base_Column_List" />
		from STL.T_STL_COD
		where waybill_No = #{waybillNo,jdbcType=VARCHAR}
		and active = #{active,jdbcType=CHAR}
	</select>

	<!-- 插入最基本的记录信息 -->
	<insert id="addCod"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		insert/*结算-客户管理-插入最基本的记录信息 */ into STL.T_STL_COD (
			ID, 
			WAYBILL_NO,
			WAYBILL_ID,
			PAYABLE_ORG_CODE, PAYABLE_ORG_NAME, 
			COD_TYPE,
			PAYEE_RELATIONSHIP,
			BANK_HQ_NAME, BANK_BRANCH_NAME,
			PUBLIC_PRIVATE_FLAG, PAYEE_NAME,
			ACCOUNT_NO, PAYEE_PHONE, PROVINCE_CODE,PROVINCE_NAME,
			CITY_CODE,CITY_NAME, BUSINESS_DATE,
			BATCH_NUMBER,
			REFUND_SUCCESS_TIME, CREATE_USER_NAME, CREATE_USER_CODE,
			CREATE_ORG_CODE, CREATE_ORG_NAME, IS_INIT,
			ACTIVE, STATUS, AIR_STATUS,
			ORG_FREEZE_TIME, ORG_FREEZE_USER_CODE, ORG_FREEZE_USER_NAME,
			ACCOUNT_MODIFY_TIME, ACCOUNT_MODIFY_USER_CODE,
			ACCOUNT_MODIFY_USER_NAME, ORG_AUDIT_TIME, ORG_AUDIT_USER_CODE,
			ORG_AUDIT_USER_NAME, ORG_MANAGER_AUDIT_TIME, ORG_MANAGER_AUDIT_CODE,
			ORG_MANAGER_AUDIT_NAME, REFUND_NOTES, TUSYORG_FREEZE_TIME,
			TUSYORG_FREEZE_USER_CODE, TUSYORG_FREEZE_USER_NAME,
			TUSYORG_CLFREEZE_TIME, TUSYORG_CLFREEZE_USER_CODE,
			TUSYORG_CLFREEZE_USER_NAME, TUSYORG_AUDIT_TIME,
			TUSYORG_AUDIT_USER_CODE, TUSYORG_AUDIT_USER_NAME,
			TUSYORG_RFD_APPTIME,
			TUSYORG_RFD_APP_USER_CODE,
			TUSYORG_RFD_APP_USER_NAME, COD_EXPORT_TIME,
			COD_EXPORT_CODE, COD_EXPORT_NAME,
			REMITTANCE_FAIL_NOTES,AIR_ORG_audit_TIME,
			CREATE_TIME,
			MODIFY_TIME,
			MODIFY_USER_CODE,
			MODIFY_USER_NAME,COD_AMOUNT,BANK_BRANCH_CODE,REFUND_PATH,VERSION_NO,BANK_HQ_CODE,
			CUSTOMER_NAME,CUSTOMER_CODE,LAND_STATUS )
		values (
			#{id,jdbcType=VARCHAR}, #{waybillNo,jdbcType=VARCHAR},#{waybillId,jdbcType=VARCHAR},
			#{payableOrgCode,jdbcType=VARCHAR},
			#{payableOrgName,jdbcType=VARCHAR}, #{codType,jdbcType=VARCHAR},
			#{payeeRelationship,jdbcType=VARCHAR}, #{bankHQName,jdbcType=VARCHAR},
			#{bankBranchName,jdbcType=VARCHAR},
			#{publicPrivateFlag,jdbcType=VARCHAR},
			#{payeeName,jdbcType=VARCHAR},
			#{accountNo,jdbcType=VARCHAR},
			#{payeePhone,jdbcType=VARCHAR}, #{provinceCode,jdbcType=VARCHAR},
			#{provinceName,jdbcType=VARCHAR},
			#{cityCode,jdbcType=VARCHAR},#{cityName,jdbcType=VARCHAR}, #{businessDate,jdbcType=TIMESTAMP},
			#{batchNumber,jdbcType=VARCHAR},
			#{refundSuccessTime,jdbcType=TIMESTAMP},
			#{createUserName,jdbcType=VARCHAR},
			#{createUserCode,jdbcType=VARCHAR},
			#{createOrgCode,jdbcType=VARCHAR},
			#{createOrgName,jdbcType=VARCHAR}, #{isInit,jdbcType=CHAR},
			#{active,jdbcType=CHAR}, #{status,jdbcType=VARCHAR},
			#{airStatus,jdbcType=VARCHAR},
			#{orgFreezeTime,jdbcType=TIMESTAMP},
			#{orgFreezeUserCode,jdbcType=VARCHAR},
			#{orgFreezeUserName,jdbcType=VARCHAR},
			#{accountModifyTime,jdbcType=TIMESTAMP},
			#{accountModifyUserCode,jdbcType=VARCHAR},
			#{accountModifyUserName,jdbcType=VARCHAR},
			#{orgAuditTime,jdbcType=TIMESTAMP}, #{orgAuditUserCode,jdbcType=VARCHAR},
			#{orgAuditUserName,jdbcType=VARCHAR},
			#{orgManagerAuditTime,jdbcType=TIMESTAMP},
			#{orgManagerAuditCode,jdbcType=VARCHAR},
			#{orgManagerAuditName,jdbcType=VARCHAR},
			#{refundNotes,jdbcType=VARCHAR}, #{tusyorgFreezeTime,jdbcType=TIMESTAMP},
			#{tusyorgFreezeUserCode,jdbcType=VARCHAR},
			#{tusyorgFreezeUserName,jdbcType=VARCHAR},
			#{tusyorgClfreezeTime,jdbcType=TIMESTAMP},
			#{tusyorgClfreezeUserCode,jdbcType=VARCHAR},
			#{tusyorgClfreezeUserName,jdbcType=VARCHAR},
			#{tusyorgAuditTime,jdbcType=TIMESTAMP},
			#{tusyorgAuditUserCode,jdbcType=VARCHAR},
			#{tusyorgAuditUserName,jdbcType=VARCHAR},
			#{tusyorgRfdApptime,jdbcType=TIMESTAMP},
			#{tusyorgRfdAppUserCode,jdbcType=VARCHAR},
			#{tusyorgRfdAppUserName,jdbcType=VARCHAR},
			#{codExportTime,jdbcType=TIMESTAMP},
			#{codExportCode,jdbcType=VARCHAR},
			#{codExportName,jdbcType=VARCHAR},
			#{remittanceFailNotes,jdbcType=VARCHAR},
			#{airOrgAuditTime,jdbcType=TIMESTAMP},
			#{createTime,jdbcType=TIMESTAMP},
			#{modifyTime,jdbcType=TIMESTAMP}, #{modifyUserCode,jdbcType=VARCHAR},
			#{modifyUserName,jdbcType=VARCHAR},#{codAmount,jdbcType=DECIMAL}*100,#{bankBranchCode,jdbcType=VARCHAR},
			#{refundPath,jdbcType=VARCHAR},
			#{versionNo,jdbcType=DECIMAL},
			#{bankHQCode,jdbcType=VARCHAR},
			#{customerName,jdbcType=VARCHAR},
			#{customerCode,jdbcType=VARCHAR},
			#{landStatus,jdbcType=VARCHAR}
		)
	</insert>

	<!-- 更新银行帐号 -->
	<update id="updateBankAccounts"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update /*结算-客户管理-更新银行帐号  */STL.T_STL_COD
		   set 
		       <!-- 开户行编码 -->
			   BANK_HQ_CODE = #{bankHQCode,jdbcType=VARCHAR},
		   	   <!-- 开户行 -->
			   BANK_HQ_NAME = #{bankHQName,jdbcType=VARCHAR},
			   <!-- 开户分行 -->
			   BANK_BRANCH_NAME = #{bankBranchName,jdbcType=VARCHAR},
			   <!-- 银行编码 -->
			   BANK_BRANCH_CODE = #{bankBranchCode,jdbcType=VARCHAR},
			   <!-- 对公对私标记 -->
			   PUBLIC_PRIVATE_FLAG = #{publicPrivateFlag,jdbcType=VARCHAR},
			   <!-- 收款人与发货人关系 -->
			   PAYEE_RELATIONSHIP = #{payeeRelationship,jdbcType=VARCHAR},
			   <!-- 收款人名称 -->
			   PAYEE_NAME = #{payeeName,jdbcType=VARCHAR},
			   <!-- 收款人帐号 -->
			   ACCOUNT_NO = #{accountNo,jdbcType=VARCHAR},
			   <!-- 收款人电话 -->
			   PAYEE_PHONE = #{payeePhone,jdbcType=VARCHAR},
			   <!-- 省份名称 -->
			   PROVINCE_NAME = #{provinceName,jdbcType=VARCHAR},
			   <!-- 省份编码 -->
			   PROVINCE_CODE = #{provinceCode,jdbcType=VARCHAR},
			   <!-- 城市编码 -->
			   CITY_CODE = #{cityCode,jdbcType=VARCHAR},
			   <!-- 城市名称 -->
			   CITY_NAME = #{cityName,jdbcType=VARCHAR},
			   <!-- 帐号修改时间 -->
			   ACCOUNT_MODIFY_TIME = #{accountModifyTime,jdbcType=TIMESTAMP},
			   <!-- 帐号修改人 编码 -->
			   ACCOUNT_MODIFY_USER_CODE = #{accountModifyUserCode,jdbcType=VARCHAR},
			   <!-- 帐号修改人名称 -->
			   ACCOUNT_MODIFY_USER_NAME = #{accountModifyUserName,jdbcType=VARCHAR}

		where
			   <!-- 运单Id -->
			   waybill_no = #{waybillNo,jdbcType=VARCHAR}
			   <!-- 有效标记 -->
			   and active = #{active,jdbcType=VARCHAR}
	</update>


	<!-- 更新代收货款营业部相关状态 -->
	<update id="updateSalesOrgState"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update /*结算-客户管理-更新代收货款营业部相关状态  */STL.T_STL_COD
		   set <!-- 是否有效状态 -->
			   ACTIVE = #{active,jdbcType=CHAR},
			   <!-- 状态状态 -->
			   STATUS = #{status,jdbcType=VARCHAR},
			   <!-- 营业部审核人编码 -->
			   ORG_AUDIT_TIME = #{orgAuditTime,jdbcType=TIMESTAMP},
			   ORG_AUDIT_USER_CODE = #{orgAuditUserCode,jdbcType=VARCHAR},
			   ORG_AUDIT_USER_NAME = #{orgAuditUserName,jdbcType=VARCHAR},
			   ORG_MANAGER_AUDIT_TIME = #{orgManagerAuditTime,jdbcType=TIMESTAMP},
			   ORG_MANAGER_AUDIT_CODE = #{orgManagerAuditCode,jdbcType=VARCHAR},
			   ORG_MANAGER_AUDIT_NAME = #{orgManagerAuditName,jdbcType=VARCHAR},
			   REFUND_NOTES = #{refundNotes,jdbcType=VARCHAR}
		where
			   <!-- 运单Id -->
			   id = #{id,jdbcType=VARCHAR}
	</update>

	<!-- 更新资金部付款状态 -->
	<update id="updatePaymentState"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update /*结算-客户管理-更新资金部付款状态  */STL.T_STL_COD
		   set
			   <!-- 是否有效状态 -->
			   ACTIVE = #{active,jdbcType=CHAR},
			   <!-- 状态状态 -->
			   STATUS = #{status,jdbcType=VARCHAR},
			   REFUND_NOTES = #{refundNotes,jdbcType=VARCHAR},
			   <!-- 退款路径 -->
			   REFUND_PATH = #{refundPath,jdbcType=VARCHAR}
		where
			   <!-- 运单Id -->
			   id = #{id,jdbcType=VARCHAR}
	</update>

	<!-- 更新代收货款营业部冻结相关 -->
	<update id="updateFreezeState"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update/*结算-客户管理-更新代收货款营业部冻结相关 */ STL.T_STL_COD
		   set <!-- 是否有效状态 -->
			   ACTIVE = #{active,jdbcType=CHAR},
			   <!-- 状态状态 -->
			   STATUS = #{status,jdbcType=VARCHAR},
			   TUSYORG_FREEZE_TIME = #{tusyorgFreezeTime,jdbcType=TIMESTAMP},
			   TUSYORG_FREEZE_USER_CODE = #{tusyorgFreezeUserCode,jdbcType=VARCHAR},
			   TUSYORG_FREEZE_USER_NAME = #{tusyorgFreezeUserName,jdbcType=VARCHAR},
			   TUSYORG_CLFREEZE_TIME = #{tusyorgClfreezeTime,jdbcType=TIMESTAMP},
			   TUSYORG_CLFREEZE_USER_CODE = #{tusyorgClfreezeUserCode,jdbcType=VARCHAR},
			   TUSYORG_CLFREEZE_USER_NAME = #{tusyorgClfreezeUserName,jdbcType=VARCHAR}
		where
			   <!-- 运单Id -->
			   id = #{id,jdbcType=VARCHAR}
	</update>

	<!-- 更新代收货款合并编号 -->
	<update id="updateCodMergeCode"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.CODMergeDto">
		update/*结算-客户管理-更新代收货款合并编号 */ STL.T_STL_COD
		   set 
			   MERGE_CODE = #{mergeCode,jdbcType=VARCHAR},
			   MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
			   MODIFY_USER_CODE = #{modifyUserCode,jdbcType=VARCHAR},
			   MODIFY_USER_NAME = #{modifyUserName,jdbcType=VARCHAR}
		where
			   <!-- 运单Id -->
			   id = #{id,jdbcType=VARCHAR}
	</update>

	<update id="updateByPrimaryKey"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update /*结算-客户管理-根据主键更新代收货款*/STL.T_STL_COD
		   set WAYBILL_NO = #{waybillNo,jdbcType=VARCHAR},
			   PAYABLE_ORG_CODE = #{payableOrgCode,jdbcType=VARCHAR},
			   PAYABLE_ORG_NAME = #{payableOrgName,jdbcType=VARCHAR},
			   COD_TYPE = #{codType,jdbcType=VARCHAR},
			   PAYEE_RELATIONSHIP = #{payeeRelationship,jdbcType=VARCHAR},
			   BANK_HQ_NAME = #{bankHQName,jdbcType=VARCHAR}, 
			   BANK_BRANCH_NAME = #{bankBranchName,jdbcType=VARCHAR},
			   PUBLIC_PRIVATE_FLAG = #{publicPrivateFlag,jdbcType=VARCHAR},
			   PAYEE_NAME = #{payeeName,jdbcType=VARCHAR},
			   ACCOUNT_NO = #{accountNo,jdbcType=VARCHAR},
			   PAYEE_PHONE = #{payeePhone,jdbcType=VARCHAR},
			   PROVINCE_CODE = #{provinceCode,jdbcType=VARCHAR},
			   PROVINCE_NAME = #{provinceName,jdbcType=VARCHAR},
			   CITY_CODE = #{cityCode,jdbcType=VARCHAR},
			   CITY_NAME = #{cityName,jdbcType=VARCHAR},
			   BUSINESS_DATE = #{businessDate,jdbcType=TIMESTAMP},
			   BATCH_NUMBER = #{batchNumber,jdbcType=VARCHAR},
			   REFUND_SUCCESS_TIME = #{refundSuccessTime,jdbcType=TIMESTAMP},
			   CREATE_USER_NAME = #{createUserName,jdbcType=VARCHAR},
			   CREATE_USER_CODE = #{createUserCode,jdbcType=VARCHAR},
			   CREATE_ORG_CODE = #{createOrgCode,jdbcType=VARCHAR},
			   CREATE_ORG_NAME = #{createOrgName,jdbcType=VARCHAR},
			   IS_INIT = #{isInit,jdbcType=CHAR},
			   ACTIVE = #{active,jdbcType=CHAR},
			   STATUS = #{status,jdbcType=VARCHAR},
			   AIR_STATUS = #{airStatus,jdbcType=VARCHAR},
			   ORG_FREEZE_TIME = #{orgFreezeTime,jdbcType=TIMESTAMP},
			   ORG_FREEZE_USER_CODE = #{orgFreezeUserCode,jdbcType=VARCHAR},
			   ORG_FREEZE_USER_NAME = #{orgFreezeUserName,jdbcType=VARCHAR},
			   ACCOUNT_MODIFY_TIME = #{accountModifyTime,jdbcType=TIMESTAMP},
			   ACCOUNT_MODIFY_USER_CODE = #{accountModifyUserCode,jdbcType=VARCHAR},
			   ACCOUNT_MODIFY_USER_NAME = #{accountModifyUserName,jdbcType=VARCHAR},
			   ORG_AUDIT_TIME = #{orgAuditTime,jdbcType=TIMESTAMP},
			   ORG_AUDIT_USER_CODE = #{orgAuditUserCode,jdbcType=VARCHAR},
			   ORG_AUDIT_USER_NAME = #{orgAuditUserName,jdbcType=VARCHAR},
			   ORG_MANAGER_AUDIT_TIME = #{orgManagerAuditTime,jdbcType=TIMESTAMP},
			   ORG_MANAGER_AUDIT_CODE = #{orgManagerAuditCode,jdbcType=VARCHAR},
			   ORG_MANAGER_AUDIT_NAME = #{orgManagerAuditName,jdbcType=VARCHAR},
			   REFUND_NOTES = #{refundNotes,jdbcType=VARCHAR},
			   TUSYORG_FREEZE_TIME = #{tusyorgFreezeTime,jdbcType=TIMESTAMP},
			   TUSYORG_FREEZE_USER_CODE = #{tusyorgFreezeUserCode,jdbcType=VARCHAR},
			   TUSYORG_FREEZE_USER_NAME = #{tusyorgFreezeUserName,jdbcType=VARCHAR},
			   TUSYORG_CLFREEZE_TIME = #{tusyorgClfreezeTime,jdbcType=TIMESTAMP},
			   TUSYORG_CLFREEZE_USER_CODE = #{tusyorgClfreezeUserCode,jdbcType=VARCHAR},
			   TUSYORG_CLFREEZE_USER_NAME = #{tusyorgClfreezeUserName,jdbcType=VARCHAR},
			   TUSYORG_AUDIT_TIME = #{tusyorgAuditTime,jdbcType=TIMESTAMP},
			   TUSYORG_AUDIT_USER_CODE = #{tusyorgAuditUserCode,jdbcType=VARCHAR},
			   TUSYORG_AUDIT_USER_NAME = #{tusyorgAuditUserName,jdbcType=VARCHAR},
			   TUSYORG_RFD_APPTIME = #{tusyorgRfdApptime,jdbcType=TIMESTAMP},
			   TUSYORG_RFD_APP_USER_CODE = #{tusyorgRfdAppUserCode,jdbcType=VARCHAR},
			   TUSYORG_RFD_APP_USER_NAME = #{tusyorgRfdAppUserName,jdbcType=VARCHAR},
			   COD_EXPORT_TIME = #{codExportTime,jdbcType=TIMESTAMP},
			   COD_EXPORT_CODE = #{codExportCode,jdbcType=VARCHAR},
			   COD_EXPORT_NAME = #{codExportName,jdbcType=VARCHAR},
			   REMITTANCE_FAIL_NOTES = #{remittanceFailNotes,jdbcType=VARCHAR},
			   CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
			   MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
			   MODIFY_USER_CODE = #{modifyUserCode,jdbcType=VARCHAR},
			   MODIFY_USER_NAME = #{modifyUserName,jdbcType=VARCHAR},
			   COD_AMOUNT = #{codAmount,jdbcType=DECIMAL}*100,
			   BANK_BRANCH_CODE = #{bankBranchCode,jdbcType=VARCHAR},
			   REFUND_PATH = #{refundPath,jdbcType=VARCHAR},
			   VERSION_NO = #{versionNo,jdbcType=DECIMAL}
		where  ID = #{id,jdbcType=VARCHAR}
	</update>

	<!-- @218392 张永雪 代收货款支付界面：专门为按单号查询  -->
	<select id="queryBillCODListByWaybillNoSum"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.BillCODWaybillNoQueryDto"
		resultMap="CODResultMap">
		select/*结算-代收货款支付界面-按运单号查询代收货款合计  */
		  		count(cod.id) as Total_Count,
				sum(pay.unverify_amount) / 100 as Total_Amount,
				count(decode(cod.status,#{statue,jdbcType=CHAR},cod.id,null)) as Freeze_Total_Count,
				sum(decode(cod.status,#{statue,jdbcType=CHAR},pay.unverify_amount,0)) / 100 as Freeze_Total_Amount
		  from stl.t_stl_cod cod
		  join stl.t_stl_bill_payable pay 
		    on cod.waybill_no = pay.waybill_no
		 where
			   <!-- 运单号 -->
			   cod.waybill_no in
				   <foreach collection="waybillNos" item="waybillNo" open="(" close=")" separator=",">
					  #{waybillNo,jdbcType=VARCHAR}
				   </foreach>
				   
			<!--@author 218392 zhangyongxue 2015-12-24 16:37:50 -->
			and not Exists (select 1 from stl.t_stl_cod_audit dt
 			where dt.waybill_no = cod.waybill_no
   				and dt.active = 'Y'
   				<!-- @ 218392 zyx 2016-07-11 14:47:00 长期未退款短期冻结SSL和长期冻结的SLL，也不允许付款 -->
 				and dt.lock_status in ('FA', 'FL', 'FCL', 'RA', 'RL', 'RCL','SSL','SLL'))
				   
			   <!-- 代收货款状态 -->
			   <if test="statuses != null and statuses.size()>0">
			   and cod.status in
					<foreach collection="statuses" item="status" open="(" close=")"
						separator=",">
						#{status,jdbcType=VARCHAR}
					</foreach>
			   </if>
			 
			   <!-- 加入数据权限 -->
			   <if test="userCode != null and userCode != ''">
					and exists (select 1
			          from bse.mv_bas_user_org_auth_view uov
			         where uov.emp_code = #{userCode}
			           and uov.Org_Code = pay.payable_org_code)
			   </if>
			   
			   <!-- 退款路径 -->
			   <if test="refundPath != null and refundPath != ''">
					and cod.refund_path = #{refundPath,jdbcType=VARCHAR}
			   </if>
			   <!-- 应付单是否effective -->
			   <if test="effective != null">
					and pay.effective_status = #{effective,jdbcType=CHAR}
			   </if>
			   <!-- 是否有效 -->
			   and cod.active = #{active,jdbcType=CHAR}
			   <!-- 应付单是否有效 -->
			   and pay.active = #{payableActive,jdbcType=CHAR}
			   <!-- 应付单单据类型 -->
			   and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}
	</select>





	<!-- 按运单号查询代收货款合计 -->
	<select id="queryBillCODByWaybillNoSum"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.BillCODWaybillNoQueryDto"
		resultMap="CODResultMap">
		select/*结算-客户管理-按运单号查询代收货款合计  */
		  		count(cod.id) as Total_Count,
				sum(pay.unverify_amount) / 100 as Total_Amount,
				count(decode(cod.status,#{statue,jdbcType=CHAR},cod.id,null)) as Freeze_Total_Count,
				sum(decode(cod.status,#{statue,jdbcType=CHAR},pay.unverify_amount,0)) / 100 as Freeze_Total_Amount
		  from stl.t_stl_cod cod
		  join stl.t_stl_bill_payable pay 
		    on cod.waybill_no = pay.waybill_no
		 where
			   <!-- 运单号 -->
			   cod.waybill_no in
				   <foreach collection="waybillNos" item="waybillNo" open="(" close=")" separator=",">
					  #{waybillNo,jdbcType=VARCHAR}
				   </foreach>
			   <!-- 代收货款状态 -->
			   <if test="statuses != null and statuses.size()>0">
			   and cod.status in
					<foreach collection="statuses" item="status" open="(" close=")"
						separator=",">
						#{status,jdbcType=VARCHAR}
					</foreach>
			   </if>
			 
			   <!-- 加入数据权限 -->
			   <if test="userCode != null and userCode != ''">
					and exists (select 1
			          from bse.mv_bas_user_org_auth_view uov
			         where uov.emp_code = #{userCode}
			           and uov.Org_Code = pay.payable_org_code)
			   </if>
			   
			   <!-- 退款路径 -->
			   <if test="refundPath != null and refundPath != ''">
					and cod.refund_path = #{refundPath,jdbcType=VARCHAR}
			   </if>
			   <!-- 应付单是否effective -->
			   <if test="effective != null">
					and pay.effective_status = #{effective,jdbcType=CHAR}
			   </if>
			   <!-- 是否有效 -->
			   and cod.active = #{active,jdbcType=CHAR}
			   <!-- 应付单是否有效 -->
			   and pay.active = #{payableActive,jdbcType=CHAR}
			   <!-- 应付单单据类型 -->
			   and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}
			   
			<!--@author 218392 zhangyongxue 2016-07-11 15:39:50 -->
			and not Exists (select 1 from stl.t_stl_cod_audit dt
 			where dt.waybill_no = cod.waybill_no 
 				and dt.active = 'Y'
   			<!-- @ 218392 zyx 2016-07-11 14:47:00 长期未退款短期冻结SSL和长期冻结的SLL，不能进行账号修改-->
 				and dt.lock_status in ('SSL','SLL'))
			   
	</select>



	<!--@218392 张永雪 2015-12-25 15:04:00 专门为代收货款支付界面按单号查询单写的一个  按运单号查询代收货款 -->
	<select id="queryBillCODListByWaybillNo"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.BillCODWaybillNoQueryDto"
		resultMap="CODResultMap">
		select/*结算-代收货款支付界面-按运单号查询代收货款 */
		  <if test="writeoffType != null and writeoffType != ''">
			<include refid="CODWRFResultColumnList" />
		  </if>	 
		  <if test="writeoffType == null or writeoffType == ''">
			<include refid="CODResultColumnList" />
		  </if>  
		  from stl.t_stl_cod cod
		  join stl.t_stl_bill_payable pay 
		    on cod.waybill_no = pay.waybill_no
		  
		  <if test="writeoffType != null and writeoffType != ''">
		  <!-- 关联核销单，查询冲应收金额   -->
		  LEFT JOIN (SELECT SUM(WF.AMOUNT) AMOUNT, WF.END_NO, WF.END_WAYBILL_NO
							 FROM STL.T_STL_BILL_WRITEOFF WF
							WHERE WF.WRITEOFF_TYPE = #{writeoffType}
							GROUP BY WF.END_NO, WF.END_WAYBILL_NO) WRF
		  ON WRF.END_NO = pay.PAYABLE_NO  
		  </if>
		  
		 where
			   <!-- 运单号 -->
			   cod.waybill_no in
				   <foreach collection="waybillNos" item="waybillNo" open="(" close=")" separator=",">
					  #{waybillNo,jdbcType=VARCHAR}
				   </foreach>
			   
			   <if test="isFilterUnverifyAmount = null or isFilterUnverifyAmount!='true'">
			   <!-- 应退金额大于0 -->
			   and pay.UNVERIFY_AMOUNT>0 
			   </if>					   
				   
			<!--@author 218392 zhangyongxue 2015-12-24 16:37:50 -->
			and not Exists (select 1 from stl.t_stl_cod_audit dt
 			where dt.waybill_no = cod.waybill_no
   				and dt.active = 'Y'
   				<!-- @ 218392 zyx 2016-07-11 14:47:00 长期未退款短期冻结SSL和长期冻结的SLL，也不允许付款 -->
 				and dt.lock_status in ('FA', 'FL', 'FCL', 'RA', 'RL', 'RCL','SSL','SLL'))
				
				   
			   <!-- 代收货款状态 -->
			   <if test="statuses != null and statuses.size()>0">
			   and cod.status in
					<foreach collection="statuses" item="status" open="(" close=")"
						separator=",">
						#{status,jdbcType=VARCHAR}
					</foreach>
			   </if>
			 <if test="writeoffType != null and writeoffType != ''">  
			   AND
			 (WRF.END_WAYBILL_NO = PAY.WAYBILL_NO OR WRF.END_WAYBILL_NO IS NULL)
			 </if>
			 
			   <!-- 应付部门 -->
			  <!--  <if test="payableOrgCode != null and payableOrgCode != ''">
					and pay.payable_org_code = #{payableOrgCode,jdbcType=VARCHAR}
			   </if> 
			   <if test="payableOrgCodeList != null">
			   and pay.payable_org_code in
					<foreach collection="payableOrgCodeList" item="payableOrgCodeOne" open="(" close=")"
						separator=",">
						#{payableOrgCodeOne,jdbcType=VARCHAR}
					</foreach>
			   </if> -->
			   <!-- 加入数据权限 -->
			   <if test="userCode != null and userCode != ''">
					and exists (select 1
			          from bse.mv_bas_user_org_auth_view uov
			         where uov.emp_code = #{userCode}
			           and uov.Org_Code = pay.payable_org_code)
			   </if>
			   
			   <!-- 退款路径 -->
			   <if test="refundPath != null and refundPath != ''">
					and cod.refund_path = #{refundPath,jdbcType=VARCHAR}
			   </if>
			   <!-- 应付单是否effective -->
			   <if test="effective != null">
					and pay.effective_status = #{effective,jdbcType=CHAR}
			   </if>
			   <!-- 是否有效 -->
			   and cod.active = #{active,jdbcType=CHAR}
			   <!-- 应付单是否有效 -->
			   and pay.active = #{payableActive,jdbcType=CHAR}
			   <!-- 应付单单据类型 -->
			   and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}
			   
			    <if test="sortProperty != null and sortProperty != ''">
			   		order by ${sortProperty} ${sortDirection}
			   </if>
			   
	</select>


	<!-- 按运单号查询代收货款 -->
	<select id="queryBillCODByWaybillNo"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.BillCODWaybillNoQueryDto"
		resultMap="CODResultMap">
		select/*结算-代收货款支付界面：-按运单号查询代收货款 */
		  <if test="writeoffType != null and writeoffType != ''">
			<include refid="CODWRFResultColumnList" />
		  </if>	 
		  <if test="writeoffType == null or writeoffType == ''">
			<include refid="CODResultColumnList" />
		  </if>  
		  from stl.t_stl_cod cod
		  join stl.t_stl_bill_payable pay 
		    on cod.waybill_no = pay.waybill_no
		  
		  <if test="writeoffType != null and writeoffType != ''">
		  <!-- 关联核销单，查询冲应收金额   -->
		  LEFT JOIN (SELECT SUM(WF.AMOUNT) AMOUNT, WF.END_NO, WF.END_WAYBILL_NO
							 FROM STL.T_STL_BILL_WRITEOFF WF
							WHERE WF.WRITEOFF_TYPE = #{writeoffType}
							GROUP BY WF.END_NO, WF.END_WAYBILL_NO) WRF
		  ON WRF.END_NO = pay.PAYABLE_NO  
		  </if>
		  
		 where
			   <!-- 运单号 -->
			   cod.waybill_no in
				   <foreach collection="waybillNos" item="waybillNo" open="(" close=")" separator=",">
					  #{waybillNo,jdbcType=VARCHAR}
				   </foreach>
			   
			   <if test="isFilterUnverifyAmount = null or isFilterUnverifyAmount!='true'">
			   <!-- 应退金额大于0 -->
			   and pay.UNVERIFY_AMOUNT>0 
			   </if>					   
				   
			   <!-- 代收货款状态 -->
			   <if test="statuses != null and statuses.size()>0">
			   and cod.status in
					<foreach collection="statuses" item="status" open="(" close=")"
						separator=",">
						#{status,jdbcType=VARCHAR}
					</foreach>
			   </if>
			 <if test="writeoffType != null and writeoffType != ''">  
			   AND
			 (WRF.END_WAYBILL_NO = PAY.WAYBILL_NO OR WRF.END_WAYBILL_NO IS NULL)
			 </if>
			 
			   <!-- 应付部门 -->
			  <!--  <if test="payableOrgCode != null and payableOrgCode != ''">
					and pay.payable_org_code = #{payableOrgCode,jdbcType=VARCHAR}
			   </if> 
			   <if test="payableOrgCodeList != null">
			   and pay.payable_org_code in
					<foreach collection="payableOrgCodeList" item="payableOrgCodeOne" open="(" close=")"
						separator=",">
						#{payableOrgCodeOne,jdbcType=VARCHAR}
					</foreach>
			   </if> -->
			   <!-- 加入数据权限 -->
			   <if test="userCode != null and userCode != ''">
					and exists (select 1
			          from bse.mv_bas_user_org_auth_view uov
			         where uov.emp_code = #{userCode}
			           and uov.Org_Code = pay.payable_org_code)
			   </if>
			   
			   <!-- 退款路径 -->
			   <if test="refundPath != null and refundPath != ''">
					and cod.refund_path = #{refundPath,jdbcType=VARCHAR}
			   </if>
			   <!-- 应付单是否effective -->
			   <if test="effective != null">
					and pay.effective_status = #{effective,jdbcType=CHAR}
			   </if>
			   <!-- 是否有效 -->
			   and cod.active = #{active,jdbcType=CHAR}
			   <!-- 应付单是否有效 -->
			   and pay.active = #{payableActive,jdbcType=CHAR}
			   
				<!--@author 218392 zhangyongxue 2016-07-11 15:39:50 -->
			    and not Exists (select 1 from stl.t_stl_cod_audit dt
	 			where dt.waybill_no = cod.waybill_no 
	 				and dt.active = 'Y'
	   			<!-- @ 218392 zyx 2016-07-11 14:47:00 长期未退款短期冻结SSL和长期冻结的SLL，不能进行账号修改-->
	 				and dt.lock_status in ('SSL','SLL'))
			   
			   <!-- 应付单单据类型 -->
			   and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}
			   
			    <if test="sortProperty != null and sortProperty != ''">
			   		order by ${sortProperty} ${sortDirection}
			   </if>
			   
	</select>

	<!-- 出发申请查询 -->
	<select id="queryStartApplyBillCOD"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.BillCODStartApplyQueryDto"
		resultMap="CODResultMap">
		select/*结算-客户管理-出发申请查询 */
			   <if test="writeoffType != null and writeoffType != ''">
			<include refid="CODWRFResultColumnList" />
		  </if>	 
		  <if test="writeoffType == null or writeoffType == ''">
			<include refid="CODResultColumnList" />
		  </if>  
		  from stl.t_stl_cod cod
		  join stl.t_stl_bill_payable pay 
		    on cod.waybill_no = pay.waybill_no
		   <if test="writeoffType != null and writeoffType != ''">
		  <!-- 关联核销单，查询冲应收金额   -->
		  LEFT JOIN (SELECT SUM(WF.AMOUNT) AMOUNT, WF.END_NO, WF.END_WAYBILL_NO
							 FROM STL.T_STL_BILL_WRITEOFF WF
							WHERE WF.WRITEOFF_TYPE = #{writeoffType}
							GROUP BY WF.END_NO, WF.END_WAYBILL_NO) WRF
		  ON WRF.END_NO = pay.PAYABLE_NO  
		  </if>		    
		 where
			   <!-- 是否有效 -->
			   cod.active = #{active,jdbcType=CHAR}
			   <!-- 应退金额大于0 -->
			   and pay.UNVERIFY_AMOUNT>0 
			   
			   <!-- @author 218392 zhangyongxue -->
			   <if test="timeType != null and timeType != ''">
			   	<if test="timeBegin != null and timeBegin != ''">
			   		<![CDATA[and cod.business_date >= #{timeBegin,jdbcType=TIMESTAMP}]]>
			   	</if>
			   	<if test="timeEnd != null and timeEnd != ''">
			   		<![CDATA[and cod.business_date < #{timeEnd,jdbcType=TIMESTAMP}]]>
			   	</if>
			   </if>
			   
			   <!-- @author 218392 张永雪 2015-11-12 10:02:00 -->
			   <if test="currentOrgCode != null and currentOrgCode != ''">
			   		and pay.payable_org_code = #{currentOrgCode,jdbcType=VARCHAR}
			   </if>
			   
			   <if test="cusAccountName != null and cusAccountName != ''">
			   		and cod.payee_name = #{cusAccountName,jdbcType=VARCHAR}
			   </if>
			   
			   <!-- 应付部门 -->
			   <!-- and pay.payable_org_code = #{payableOrgCode,jdbcType=VARCHAR} 
			   <if test="payableOrgCodeList != null">
			   and pay.payable_org_code in
					<foreach collection="payableOrgCodeList" item="payableOrgCodeOne" open="(" close=")"
						separator=",">
						#{payableOrgCodeOne,jdbcType=VARCHAR}
					</foreach>
			   </if>-->
			   <!-- 加入数据权限 -->
			   <if test="userCode != null and userCode != ''">
				   and exists (select 1
			         from bse.mv_bas_user_org_auth_view uov
			        where uov.emp_code = #{userCode}
			          and uov.Org_Code = pay.payable_org_code)
			   </if>	
			   
			   		   
			   <!-- 代收货款状态 -->
			   and cod.status in
				   <foreach collection="statuses" item="statusItem" open="(" close=")" separator=",">
						#{statusItem,jdbcType=VARCHAR}
				   </foreach>
				   
			<!--@author 218392 zhangyongxue 2016-07-11 15:39:50 -->
			and not Exists (select 1 from stl.t_stl_cod_audit dt
 			where dt.waybill_no = cod.waybill_no 
 				and dt.active = 'Y'
   			<!-- @ 218392 zyx 2016-07-11 14:47:00 长期未退款短期冻结SSL和长期冻结的SLL，不能进行账号修改-->
 				and dt.lock_status in ('SSL','SLL'))
				   
			   <!-- 应付单有效状态 -->
			   and pay.active = #{payableActive,jdbcType=CHAR}
			   <!-- 应付单单据类型 -->
			   and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}
			   
			  <if test="writeoffType != null and writeoffType != ''">  
			   AND
			 (WRF.END_WAYBILL_NO = PAY.WAYBILL_NO OR WRF.END_WAYBILL_NO IS NULL)
			 </if>
	</select>

	<!-- 出发申请查询大小 -->
	<select id="queryStartApplyBillCODSize"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.BillCODStartApplyQueryDto"
		resultType="int">
		select /*结算-客户管理-出发申请查询大小 */count(1)
		  from stl.t_stl_cod cod
		  join stl.t_stl_bill_payable pay
		    on cod.waybill_no = pay.waybill_no
		 where
			   <!-- 是否有效 -->
			   cod.active = #{active,jdbcType=CHAR}
			   <!-- 应退金额大于0 -->
			   and pay.UNVERIFY_AMOUNT>0 
			   <!-- @author 218392 zhangyongxue -->
			   <if test="timeType != null and timeType != ''">
			   	<if test="timeBegin != null and timeBegin != ''">
			   		<![CDATA[and cod.business_date >= #{timeBegin,jdbcType=TIMESTAMP}]]>
			   	</if>
			   	<if test="timeEnd != null and timeEnd != ''">
			   		<![CDATA[and cod.business_date < #{timeEnd,jdbcType=TIMESTAMP}]]>
			   	</if>
			   </if>
			   
			   <if test="cusAccountName != null and cusAccountName != ''">
			   		and cod.payee_name = #{cusAccountName,jdbcType=VARCHAR}
			   </if>
			   <!-- @author 218392 张永雪 2015-11-12 10:02:00 -->
			   <if test="currentOrgCode != null and currentOrgCode != ''">
			   		and pay.payable_org_code = #{currentOrgCode,jdbcType=VARCHAR}
			   </if>
			   <!-- 应付部门 -->
			   <!-- and pay.payable_org_code = #{payableOrgCode,jdbcType=VARCHAR} 
			   <if test="payableOrgCodeList != null">
			   and pay.payable_org_code in
					<foreach collection="payableOrgCodeList" item="payableOrgCodeOne" open="(" close=")"
						separator=",">
						#{payableOrgCodeOne,jdbcType=VARCHAR}
					</foreach>
			   </if> -->
			   <!-- 加入数据权限 -->
			   <if test="userCode != null and userCode != ''">
					and exists (select 1
			          from bse.mv_bas_user_org_auth_view uov
			         where uov.emp_code = #{userCode}
			           and uov.Org_Code = pay.payable_org_code)
			   </if>
			   <!-- 代收货款状态 -->
			   and cod.status in
					<foreach collection="statuses" item="statusItem" open="(" close=")" separator=",">
						#{statusItem,jdbcType=VARCHAR}
					</foreach>
					
				<!--@author 218392 zhangyongxue 2016-07-11 15:39:50 -->
				and not Exists (select 1 from stl.t_stl_cod_audit dt
	 			where dt.waybill_no = cod.waybill_no 
	 				and dt.active = 'Y'
	   			<!-- @ 218392 zyx 2016-07-11 14:47:00 长期未退款短期冻结SSL和长期冻结的SLL，不能进行账号修改-->
	 				and dt.lock_status in ('SSL','SLL'))	
					
			   <!-- 应付单有效状态 -->
			   and pay.active = #{payableActive,jdbcType=CHAR}
			   <!-- 应付单单据类型 -->
			   and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}
	</select>

	<!-- 代收货款付款失败查询 -->
	<select id="queryBillCODPayFailed"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.BillCODPayFailedQueryDto"
		resultMap="CODResultMap">
		select/*结算-客户管理-代收货款付款失败查询 */
		  <if test="writeoffType != null and writeoffType != ''">
			<include refid="CODWRFResultColumnList" />
		  </if>	 
		  <if test="writeoffType == null or writeoffType == ''">
			<include refid="CODResultColumnList" />
		  </if>  
		  
		  from stl.t_stl_cod cod
		  join stl.t_stl_bill_payable pay 
		    on cod.waybill_no = pay.waybill_no
		 
		 <if test="writeoffType != null and writeoffType != ''">
		  <!-- 关联核销单，查询冲应收金额   -->
		  LEFT JOIN (SELECT SUM(WF.AMOUNT) AMOUNT, WF.END_NO, WF.END_WAYBILL_NO
							 FROM STL.T_STL_BILL_WRITEOFF WF
							WHERE WF.WRITEOFF_TYPE = #{writeoffType}
							GROUP BY WF.END_NO, WF.END_WAYBILL_NO) WRF
		  ON WRF.END_NO = pay.PAYABLE_NO  
		  </if>
		    
		 where
			   <!-- 是否有效 -->
			   cod.active = #{active,jdbcType=CHAR}
			   <!-- 代收货款状态 -->
			   and cod.status in
				   <foreach collection="statuses" item="statusItem" open="(" close=")" separator=",">
				   		#{statusItem,jdbcType=VARCHAR}
				   </foreach>
			   <!-- 应付单有效状态 -->
			   and pay.active = #{payableActive,jdbcType=CHAR}
			   <!-- 应付单单据类型 -->
			   and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}
			   <!-- 退款路径 -->
			   and cod.refund_path = #{refundPath,jdbcType=VARCHAR}
			   
			  <if test="writeoffType != null and writeoffType != ''">  
			   AND
			 (WRF.END_WAYBILL_NO = PAY.WAYBILL_NO OR WRF.END_WAYBILL_NO IS NULL)
			 </if>
	</select>

	<!-- 代收货款付款失败查询大小 -->
	<select id="queryBillCODPayFailedSize"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.BillCODPayFailedQueryDto"
		resultMap="CODResultMap">
		select /*结算-客户管理-代收货款付款失败查询大小*/count(1) as Total_Count,
		       <if test="writeoffType != null and writeoffType != ''">
				 sum( CASE
				 WHEN PAY.UNVERIFY_AMOUNT IS NULL OR PAY.UNVERIFY_AMOUNT = 0 THEN
					CASE
						WHEN WRF.AMOUNT > 0 THEN
						   PAY.AMOUNT -  WRF.AMOUNT
						ELSE
						  PAY.AMOUNT
					END
				 ELSE
					 PAY.UNVERIFY_AMOUNT
			 END) / 100 as Total_Amount
			  </if>	 
			  <if test="writeoffType == null or writeoffType == ''">
				 sum(PAY.UNVERIFY_AMOUNT) / 100 as Total_Amount
			  </if>  
		       
		  from stl.t_stl_cod cod
		  join stl.t_stl_bill_payable pay
		    on cod.waybill_no = pay.waybill_no
		    <if test="writeoffType != null and writeoffType != ''">
		  <!-- 关联核销单，查询冲应收金额   -->
		  LEFT JOIN (SELECT SUM(WF.AMOUNT) AMOUNT, WF.END_NO, WF.END_WAYBILL_NO
							 FROM STL.T_STL_BILL_WRITEOFF WF
							WHERE WF.WRITEOFF_TYPE = #{writeoffType}
							GROUP BY WF.END_NO, WF.END_WAYBILL_NO) WRF
		  ON WRF.END_NO = pay.PAYABLE_NO  
		  </if>
		    
		 where
			   <!-- 是否有效 -->
			   pay.active = #{active,jdbcType=CHAR}
			   <!-- 代收货款状态 -->
			   and cod.status in
			   <foreach collection="statuses" item="statusItem" open="("
			   	close=")" separator=",">
			   	#{statusItem,jdbcType=VARCHAR}
			   </foreach>
			   <!-- 应付单有效状态 -->
			   and pay.active = #{payableActive,jdbcType=CHAR}
			   <!-- 应付单单据类型 -->
			   and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}
			   <!-- 退款路径 -->
			   and cod.refund_path = #{refundPath,jdbcType=VARCHAR}
			   
			    <if test="writeoffType != null and writeoffType != ''">  
			   AND
			 (WRF.END_WAYBILL_NO = PAY.WAYBILL_NO OR WRF.END_WAYBILL_NO IS NULL)
			 </if>
	</select>

	<!-- 代收货款汇款合计查询 -->
	<select id="queryBillCODPayableSum"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.BillCODPayableQueryDto"
		resultMap="CODResultMap">
		select/*结算-客户管理-代收货款汇款合计查询 */
				count(cod.id) as Total_Count,
				sum(pay.unverify_amount) / 100 as Total_Amount,
				count(decode(cod.status,#{statue,jdbcType=CHAR},cod.id,null)) as Freeze_Total_Count,
				sum(decode(cod.status,#{statue,jdbcType=CHAR},pay.unverify_amount,0)) / 100 as Freeze_Total_Amount
		  from stl.t_stl_cod cod
		  join stl.t_stl_bill_payable pay 
		    on cod.waybill_no = pay.waybill_no
		 where
			   <!-- 是否有效 -->
			   cod.active = #{active,jdbcType=CHAR}
			   <!-- 应退金额大于0 -->
			   and pay.UNVERIFY_AMOUNT>0 
			   
			   <!-- 代收货款状态 -->
			   and cod.status in
				   <foreach collection="statuses" item="statusItem" open="("
				   	close=")" separator=",">
				   	#{statusItem,jdbcType=VARCHAR}
				   </foreach>
			   <!-- 签收日期 -->
			   <if test="endSignDate != null">
		      	<![CDATA[and pay.sign_date < #{endSignDate,jdbcType=VARCHAR}]]>
			   </if>
			   <!-- 代收货款状态 -->
			   and cod.cod_type in
				   <foreach collection="codTypes" item="codType" open="(" close=")"
				   	separator=",">
				   	#{codType,jdbcType=VARCHAR}
				   </foreach>
			   <!-- 开户银行 -->
			   <if test="banks != null and banks.size()>0">
			   and cod.bank_hq_name in
				   <foreach collection="banks" item="bank" open="(" close=")" separator=",">
				   	#{bank,jdbcType=VARCHAR}
				   </foreach>
			   </if>
			   <!-- 账户性质 -->
			   <if test="publicPrivateFlag != null and publicPrivateFlag != ''">
			   	and cod.public_private_flag = #{publicPrivateFlag,jdbcType=VARCHAR}
			   </if>
			   <!-- 应付单有效状态 -->
			   and pay.active = #{payableActive,jdbcType=CHAR}
			   <!-- 应付单单据类型 -->
			   and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}
			   <!-- 生效状态 -->
			   and pay.effective_status = #{effectiveStatus,jdbcType=CHAR}
			   
			   <!--@author 218392 zhangyongxue 2015-12-23 14:17:50 -->
			and not Exists (select 1 from stl.t_stl_cod_audit dt
 			where dt.waybill_no = cod.waybill_no
   				and dt.active = 'Y'
   				<!-- @ 218392 zyx 2016-07-11 14:47:00 长期未退款短期冻结SSL和长期冻结的SLL，也不允许付款 -->
 				and dt.lock_status in ('FA', 'FL', 'FCL', 'RA', 'RL', 'RCL','SSL','SLL'))
 				
			   <!--@author 218392 zhangyongxue 2015-08-07 14:58:50 -->
			<choose>
				<when test="isPackage != null and isPackage != ''">
					and Exists (Select 1 From Bse.T_Bas_Codrefundbaseinfo Re
         			Where Re.Customer_Code = cod.Customer_Code and Re.Active='Y'
         			and  sysdate>=Re.Time_Limit_Start  and Re.Time_Limit_End>=sysdate)
         			order by cod.ACCOUNT_NO ,cod.payee_name
				</when>
				<otherwise>
					and not Exists (Select 1 From Bse.T_Bas_Codrefundbaseinfo Re
         			Where Re.Customer_Code = cod.Customer_Code and Re.Active='Y'
         			and sysdate>=Re.Time_Limit_Start  and Re.Time_Limit_End>=sysdate)
				</otherwise>
			</choose>
	</select>

	<!-- 查询代收货款及应付单 -->
	<select id="queryAllCODAndBillPayable"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.CODPayableDto"
		resultMap="CODPayableDtoResultMap">
		select/*结算-客户管理-查询代收货款及应付单 */
				cod.*,
				pay.id as payable_id,
				pay.ACCOUNT_DATE as payable_AccountDate,
				pay.VERSION_NO as payable_VersionNo,
				pay.effective_Status as effectiveStatus,
				pay.sign_Date as signDate,
				pay.unverify_Amount /100 as unverify_Amount,
				pay.PAYABLE_COM_NAME as payable_Com_Name,
				pay.waybill_no as payable_WaybillNo,
				pay.Payable_Org_Name as payable_PayableOrgName,
				pay.amount / 100 as amount,
				pay.payable_Com_Code as payable_Com_Code,
				pay.Payable_Org_Code as payable_PayableOrgCode,
				pay.payable_No as payable_No,
				pay.source_Bill_No as source_Bill_No,
				pay.Customer_Name as payable_CustomerName,
				pay.Customer_Code as payable_CustomerCode,
				pay.Business_Date as payable_BusinessDate,
				pay.verify_Amount / 100 as verify_Amount,
				pay.approve_Status as approve_Status
		  from stl.t_stl_cod cod
		  join stl.t_stl_bill_payable pay 
		    on cod.waybill_no = pay.waybill_no
		 where
			   <!-- 是否有效 -->
			   cod.active = #{active,jdbcType=CHAR}
			   <!-- 应退金额大于0 -->
			   and DECODE(pay.UNVERIFY_AMOUNT,0,NULL,TO_CHAR(pay.UNVERIFY_AMOUNT)) > '0'
			   <!-- 代收货款状态 -->
			   and cod.status in
				   <foreach collection="statuses" item="statusItem" open="("
				   	close=")" separator=",">
				   	#{statusItem,jdbcType=VARCHAR}
				   </foreach>
			   <!-- 签收日期 -->
			   <if test="endSignDate != null">
		      	<![CDATA[and pay.sign_date < #{endSignDate,jdbcType=VARCHAR}]]>
			   </if>
			   <!-- 代收货款状态 -->
			   and cod.cod_type in
				   <foreach collection="codTypes" item="codType" open="(" close=")"
				   	separator=",">
				   	#{codType,jdbcType=VARCHAR}
				   </foreach>
			   <!-- 开户银行 -->
			   <if test="banks != null and banks.size()>0">
			   and cod.bank_hq_name in
				   <foreach collection="banks" item="bank" open="(" close=")" separator=",">
				   	#{bank,jdbcType=VARCHAR}
				   </foreach>
			   </if>
			   <!-- 账户性质 -->
			   <if test="publicPrivateFlag != null and publicPrivateFlag != ''">
			   	and cod.public_private_flag = #{publicPrivateFlag,jdbcType=VARCHAR}
			   </if>
			   <!-- 应付单有效状态 -->
			   and pay.active = #{payableActive,jdbcType=CHAR}
			   <!-- 应付单单据类型 -->
			   and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}
			   <!-- 生效状态 -->
			   and pay.effective_status = #{effectiveStatus,jdbcType=CHAR}
			   
			<!--@author 218392 zhangyongxue 2015-12-23 14:17:50 -->
			and not Exists (select 1 from stl.t_stl_cod_audit dt
 			where dt.waybill_no = cod.waybill_no
   				and dt.active = 'Y'
   				<!-- @ 218392 zyx 2016-07-11 14:47:00 长期未退款短期冻结SSL和长期冻结的SLL，也不允许付款 -->
 				and dt.lock_status in ('FA', 'FL', 'FCL', 'RA', 'RL', 'RCL','SSL','SLL'))			   
			   
		<!--@author 218392 zhangyongxue 2015-08-29 15:32:17 -->  
		   <choose>
				<when test="isPackage != null and isPackage != ''">
					and Exists (Select 1 From Bse.T_Bas_Codrefundbaseinfo Re
         			Where Re.Customer_Code = cod.Customer_Code and Re.Active='Y'
         			and  sysdate>=Re.Time_Limit_Start  and Re.Time_Limit_End>=sysdate)
         			order by cod.ACCOUNT_NO ,cod.payee_name
				</when>
				<otherwise>
					and not Exists (Select 1 From Bse.T_Bas_Codrefundbaseinfo Re
         			Where Re.Customer_Code = cod.Customer_Code and Re.Active='Y'
         			and sysdate>=Re.Time_Limit_Start  and Re.Time_Limit_End>=sysdate)
				</otherwise>
			</choose>

	</select>

	<!-- 查询可退款的并可合并付款的代收货款及应付单明细 -->
	<select id="queryAllMergeCODAndBillPayable"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.CODPayableDto" resultMap="codMergeDtoResultMap">
		select/*结算-客户管理-查询可退款的并可合并付款的代收货款及应付单明细 */
				cod.id,
				cod.COD_TYPE,
				cod.ACCOUNT_NO,
				cod.PAYEE_NAME,
				cod.BANK_HQ_CODE,
				cod.BANK_BRANCH_CODE,
				cod.PUBLIC_PRIVATE_FLAG,
				cod.PAYEE_PHONE,
				cod.PROVINCE_CODE,
				cod.CITY_CODE,
				pay.sign_Date,
				pay.unverify_Amount /100 unverify_Amount,
				pay.waybill_no,
				pay.payable_Com_Code,
				pay.Payable_Org_Code
		  from stl.t_stl_cod cod
		  join stl.t_stl_bill_payable pay 
		    on cod.waybill_no = pay.waybill_no

		 where
			   <!-- 是否有效 -->
			   cod.active = #{active,jdbcType=CHAR}
			   <!-- 应退金额大于0 -->
			   and DECODE(pay.UNVERIFY_AMOUNT,0,NULL,TO_CHAR(pay.UNVERIFY_AMOUNT)) > '0'
			   <!-- 代收货款状态 -->
			   and cod.status in
				   <foreach collection="statuses" item="statusItem" open="("
				   	close=")" separator=",">
				   	#{statusItem,jdbcType=VARCHAR}
				   </foreach>
			   <!-- 签收日期 -->
			   <if test="endSignDate != null">
		      	<![CDATA[and pay.sign_date < #{endSignDate,jdbcType=VARCHAR}]]>
			   </if>
			   <!-- 代收货款状态 -->
			   and cod.cod_type in
				   <foreach collection="codTypes" item="codType" open="(" close=")"
				   	separator=",">
				   	#{codType,jdbcType=VARCHAR}
				   </foreach>
			   <!-- 开户银行 -->
			   <if test="banks != null and banks.size()>0">
			   and cod.bank_hq_name in
				   <foreach collection="banks" item="bank" open="(" close=")" separator=",">
				   	#{bank,jdbcType=VARCHAR}
				   </foreach>
			   </if>
			   <!-- 账户性质 -->
			   <if test="publicPrivateFlag != null and publicPrivateFlag != ''">
			   	and cod.public_private_flag = #{publicPrivateFlag,jdbcType=VARCHAR}
			   </if>
			   <!-- 应付单有效状态 -->
			   and pay.active = #{payableActive,jdbcType=CHAR}
			   <!-- 应付单单据类型 -->
			   and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}
			   <!-- 生效状态 -->
			   and pay.effective_status = #{effectiveStatus,jdbcType=CHAR}
			   <!--@author 218392 zhangyongxue 2015-08-07 15:32:17 -->  
					and Exists (Select 1 From Bse.T_Bas_Codrefundbaseinfo Re
         			Where Re.Customer_Code = cod.Customer_Code and Re.Active='Y'
         			and  sysdate>=Re.Time_Limit_Start  and Re.Time_Limit_End>=sysdate)
         			order by cod.ACCOUNT_NO ,cod.payee_name
	</select>

	<!-- 代收货款汇款查询 -->
	<select id="queryBillCODPayable"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.BillCODPayableQueryDto"
		resultMap="CODResultMap">
		select/*结算-客户管理-代收货款汇款查询 */
				<include refid="CODResultColumnList" />
		  from stl.t_stl_cod cod
		  join stl.t_stl_bill_payable pay 
		    on cod.waybill_no = pay.waybill_no
		 where
			   <!-- 是否有效 -->
			   cod.active = #{active,jdbcType=CHAR}
			   <!-- 应退金额大于0 -->
			   and pay.UNVERIFY_AMOUNT>0 
			   <!-- 代收货款状态 -->
			   and cod.status in
				   <foreach collection="statuses" item="statusItem" open="("
				   	close=")" separator=",">
				   	#{statusItem,jdbcType=VARCHAR}
				   </foreach>
			   <!-- 签收日期 -->
			   <if test="endSignDate != null">
		      	<![CDATA[and pay.sign_date < #{endSignDate,jdbcType=VARCHAR}]]>
			   </if>
			   <!-- 代收货款状态 -->
			   and cod.cod_type in
				   <foreach collection="codTypes" item="codType" open="(" close=")"
				   	separator=",">
				   	#{codType,jdbcType=VARCHAR}
				   </foreach>
			   <!-- 开户银行 -->
			   <if test="banks != null">
			   and cod.bank_hq_name in
				   <foreach collection="banks" item="bank" open="(" close=")" separator=",">
				   	#{bank,jdbcType=VARCHAR}
				   </foreach>
			   </if>
			   <!-- 账户性质 -->
			   <if test="publicPrivateFlag != null and publicPrivateFlag != ''">
			   	and cod.public_private_flag = #{publicPrivateFlag,jdbcType=VARCHAR}
			   </if>
			   <!-- 应付单有效状态 -->
			   and pay.active = #{payableActive,jdbcType=CHAR}
			   <!-- 应付单单据类型 -->
			   and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}
			   <!-- 生效状态 -->
			   and pay.effective_status = #{effectiveStatus,jdbcType=CHAR}
			   
			<!--@author 218392 zhangyongxue 2015-12-23 14:17:50 -->
			and not Exists (select 1 from stl.t_stl_cod_audit dt
 			where dt.waybill_no = cod.waybill_no
   				and dt.active = 'Y'
   				<!-- @ 218392 zyx 2016-07-11 14:47:00 长期未退款短期冻结SSL和长期冻结的SLL，也不允许付款 -->
 				and dt.lock_status in ('FA', 'FL', 'FCL', 'RA', 'RL', 'RCL','SSL','SLL'))
 							   
			   <!--@author 218392 zhangyongxue 2015-08-07 15:32:17 -->  
		   <choose>
				<when test="isPackage != null and isPackage != ''">
					and Exists (Select 1 From Bse.T_Bas_Codrefundbaseinfo Re
         			Where Re.Customer_Code = cod.Customer_Code and Re.Active='Y'
         			and  sysdate>=Re.Time_Limit_Start  and Re.Time_Limit_End>=sysdate)
         			order by cod.ACCOUNT_NO ,cod.payee_name
				</when>
				<otherwise>
					and not Exists (Select 1 From Bse.T_Bas_Codrefundbaseinfo Re
         			Where Re.Customer_Code = cod.Customer_Code and Re.Active='Y'
         			and sysdate>=Re.Time_Limit_Start  and Re.Time_Limit_End>=sysdate)
				</otherwise>
			</choose>
				   
			   <!-- ！@author 218392 zhangyongxue 2015-08-07 16:37:26
			   <if test="sortProperty != null and sortProperty != ''">
			   		order by ${sortProperty} ${sortDirection}
			   </if>-->
	</select>

	<!-- 查询代收货款汇款确认 -->
	<select id="queryPayConfirm"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.BillCODPayConfirmDto"
		resultMap="CODResultMap">
		select/*结算-客户管理-查询代收货款汇款确认 */
			   <include refid="CODWRFResultColumnList" />
		  from stl.t_stl_cod cod
		  join stl.t_stl_bill_payable pay 
		    on cod.waybill_no = pay.waybill_no
		   <!-- 关联核销单，查询冲应收金额   -->
		  LEFT JOIN (SELECT SUM(WF.AMOUNT) AMOUNT, WF.END_NO, WF.END_WAYBILL_NO
							 FROM STL.T_STL_BILL_WRITEOFF WF
							WHERE WF.WRITEOFF_TYPE = #{writeoffType}
							GROUP BY WF.END_NO, WF.END_WAYBILL_NO) WRF
		  ON WRF.END_NO = pay.PAYABLE_NO    
		 where
			   <!-- 是否有效 -->
			   cod.active = #{active,jdbcType=CHAR}
			   <!-- 应付单是否有效 -->
			   and pay.active = #{payableActive,jdbcType=CHAR}
			   <!-- 应付单单据类型 -->
			   and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}
			   <!-- 退款路径 -->
			   and cod.refund_path = #{refundPath,jdbcType=VARCHAR}
			   <!-- 代收货款状态 -->
			   and cod.status in
			   <foreach collection="statuses" item="status" open="("
			   	separator="," close=")">
			   	#{status,jdbcType=VARCHAR}
			   </foreach>
			   
			   <if test="writeoffType != null and writeoffType != ''">  
			   AND
			 (WRF.END_WAYBILL_NO = PAY.WAYBILL_NO OR WRF.END_WAYBILL_NO IS NULL)
			   </if> 
			   
			   <!-- 批次号 -->
			   <if test="batchNumber != null and batchNumber != ''">
			   	and cod.batch_number = #{batchNumber,jdbcType=VARCHAR}
			   </if>
			   <!-- 导出人 -->
			   <if test="exportUserCode != null and exportUserCode != ''">
			   	and cod.cod_export_code = #{exportUserCode,jdbcType=VARCHAR}
			   </if>
			   <!-- 导出开始时间 -->
			   <if test="exportStartTime != null">
			   	and cod.cod_export_time >= #{exportStartTime,jdbcType=TIMESTAMP}
			   </if>
			   <!-- 导出结束时间 -->
			   <if test="exportEndTime != null">
			      	<![CDATA[and cod.cod_export_time < #{exportEndTime,jdbcType=TIMESTAMP}]]>
			   </if>
	</select>

	<!-- 查询代收货款汇款确认大小 -->
	<select id="queryPayConfirmSize"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.BillCODPayConfirmDto"
		resultMap="CODResultMap">
		select /*结算-客户管理-查询代收货款汇款确认大小*/count(1) as Total_Count,
			   sum( CASE
				 WHEN PAY.UNVERIFY_AMOUNT IS NULL OR PAY.UNVERIFY_AMOUNT = 0 THEN
					CASE
						WHEN WRF.AMOUNT > 0 THEN
						   PAY.AMOUNT -  WRF.AMOUNT
						ELSE
						  PAY.AMOUNT
					END
				 ELSE
					 PAY.UNVERIFY_AMOUNT
			 END) / 100 as Total_Amount
		from stl.t_stl_cod cod
		join stl.t_stl_bill_payable pay
		on cod.waybill_no = pay.waybill_no
		<!-- 关联核销单，查询冲应收金额   -->
		  LEFT JOIN (SELECT SUM(WF.AMOUNT) AMOUNT, WF.END_NO, WF.END_WAYBILL_NO
							 FROM STL.T_STL_BILL_WRITEOFF WF
							WHERE WF.WRITEOFF_TYPE = #{writeoffType}
							GROUP BY WF.END_NO, WF.END_WAYBILL_NO) WRF
		  ON WRF.END_NO = pay.PAYABLE_NO 
		where

		<!-- 是否有效 -->
		cod.active = #{active,jdbcType=CHAR}

		<!-- 应付单是否有效 -->
		and pay.active = #{payableActive,jdbcType=CHAR}

		<!-- 应付单单据类型 -->
		and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}

		<!-- 退款路径 -->
		and cod.refund_path = #{refundPath,jdbcType=VARCHAR}

		<!-- 代收货款状态 -->
		and cod.status in
		<foreach collection="statuses" item="status" open="("
			separator="," close=")">
			#{status,jdbcType=VARCHAR}
		</foreach>

		<if test="writeoffType != null and writeoffType != ''">  
		AND (WRF.END_WAYBILL_NO = PAY.WAYBILL_NO OR WRF.END_WAYBILL_NO IS NULL)
		</if>

		<!-- 批次号 -->
		<if test="batchNumber != null and batchNumber != ''">
			and cod.batch_number = #{batchNumber,jdbcType=VARCHAR}
		</if>

		<!-- 导出人 -->
		<if test="exportUserCode != null and exportUserCode != ''">
			and cod.cod_export_code = #{exportUserCode,jdbcType=VARCHAR}
		</if>

		<!-- 导出开始时间 -->
		<if test="exportStartTime != null">
			and cod.cod_export_time >= #{exportStartTime,jdbcType=TIMESTAMP}
		</if>

		<!-- 导出结束时间 -->
		<if test="exportEndTime != null">
		   	<![CDATA[and cod.cod_export_time < #{exportEndTime,jdbcType=TIMESTAMP}]]>
		</if>
	</select>

	<!-- 按运单号集合查询（官网代收货款查询） -->
	<select id="queryCODByWaybillNums"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.BillCODWaybillNoQueryDto"
		resultMap="CODResultMap">
		select/*结算-客户管理-按运单号集合查询（官网代收货款查询） */
		<include refid="CODResultColumnList" />
		from stl.t_stl_cod cod
		join stl.t_stl_bill_payable pay on
		cod.waybill_no = pay.waybill_no
		where

		<!-- 是否有效 -->
		cod.active = #{active,jdbcType=CHAR}

		<!-- 应付单是否有效 -->
		and pay.active = #{payableActive,jdbcType=CHAR}

		<!-- 应付单单据类型 -->
		and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}
		
		<!-- 运单号集合 -->
		and cod.waybill_no in 
		<foreach collection="waybillNos" item="waybillNo" open="(" separator="," close=")">
			#{waybillNo,jdbcType=VARCHAR}
		</foreach>
	</select>
	
	<!-- 按运单号集合查询（官网代收货款查询） -->
	<select id="queryCODByWaybillNumsForCC"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.BillCODWaybillNoQueryDto"
		resultMap="CODResultMap">
		select/*结算-客户管理-按运单号集合查询（官网代收货款查询） */
		cod.id,
		cod.waybill_no as waybillNo,
		pay.payable_no as payableNo,
		pay.amount / 100 as amount,
		WRF.AMOUNT / 100 as verReceivableAmount,
		(pay.amount - nvl(WRF.AMOUNT,0)) / 100 as returnAmount,
		cod.cod_type as codType,
		cod.status,
		pay.customer_name as customerName,
		cod.payee_name as payeeName,
		cod.ACCOUNT_NO AS payeeAccount,
		cod.BANK_HQ_NAME AS BANK,
		cod.BANK_HQ_CODE as bankCode,
		cod.PAYEE_RELATIONSHIP AS payeeAndConsignor,
		cod.public_private_flag as publicPrivateFlag,
		cod.province_code AS PROVINCE_CODE,
		cod.city_code AS CITY_CODE,
		cod.province_name AS PROVINCE,
		cod.city_name AS CITY,
		cod.BANK_BRANCH_CODE AS bankSubbranchCode,
		cod.BANK_BRANCH_NAME AS bankSubbranch,
		cod.payee_phone as payeePhone,
		cod.business_date,
		pay.payable_org_name as payableOrgName,
		pay.payable_org_code,
		cod.refund_notes as notes,
		pay.sign_date as signDate,
		cod.cod_export_time as codExportTime,
		cod.cod_export_code,
		cod.cod_export_name as codExportUserName,
		cod.remittance_fail_notes,
		cod.batch_number as batchNumber,
		pay.customer_code as payable_customer_code,
		pay.customer_name as payable_customer_name,
		pay.payable_com_code as payableComCode,
		pay.payable_com_name as payableComName,
		
		cod.refund_success_time as refundSuccessTime,
		pay.ORIG_ORG_CODE as origOrgCode,
		pay.ORIG_ORG_NAME as origOrgName,
		pay.DEST_ORG_CODE as destOrgCode,
		pay.DEST_ORG_NAME as destOrgName
		
		from stl.t_stl_cod cod
		join stl.t_stl_bill_payable pay on
		cod.waybill_no = pay.waybill_no
		
		<!-- 关联核销单，查询冲应收金额   -->
		LEFT JOIN (SELECT SUM(WF.AMOUNT) AMOUNT, WF.END_NO
							 FROM STL.T_STL_BILL_WRITEOFF WF
							WHERE WF.WRITEOFF_TYPE = 'RP'
							GROUP BY WF.END_NO) WRF
		ON WRF.END_NO = pay.PAYABLE_NO
		
		where

		<!-- 是否有效 -->
		cod.active = #{active,jdbcType=CHAR}

		<!-- 应付单是否有效 -->
		and pay.active = #{payableActive,jdbcType=CHAR}

		<!-- 应付单单据类型 -->
		and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}
		
		<!-- 运单号集合 -->
		and cod.waybill_no in 
		<foreach collection="waybillNos" item="waybillNo" open="(" separator="," close=")">
			#{waybillNo,jdbcType=VARCHAR}
		</foreach>
	</select>
	
	<!-- 按运单号集合查询大小（官网代收货款查询） -->
	<select id="queryCODByWaybillNumsSize"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.BillCODWaybillNoQueryDto"
		resultType="int">
		select/*结算-客户管理-按运单号集合查询大小（官网代收货款查询） */
		count(1)
		from stl.t_stl_cod cod
		join stl.t_stl_bill_payable pay on
		cod.waybill_no = pay.waybill_no
		where

		<!-- 是否有效 -->
		cod.active = #{active,jdbcType=CHAR}

		<!-- 应付单是否有效 -->
		and pay.active = #{payableActive,jdbcType=CHAR}

		<!-- 应付单单据类型 -->
		and pay.bill_type = #{payableBillType,jdbcType=VARCHAR}
		
		<!-- 运单号集合 -->
		and cod.waybill_no in 
		<foreach collection="waybillNos" item="waybillNo" open="(" separator="," close=")">
			#{waybillNo,jdbcType=VARCHAR}
		</foreach>
	</select>

	<!-- 根据应付单条件及代收货款批次号查询应付单集合 -->
	<select id="queryBillPayableByCodBatchNumber"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.CODPayableDto"
		resultMap="foss.stl.BillPayableEntityDao.BaseResultMap">
		select/*结算-客户管理-根据应付单条件及代收货款批次号查询应付单集合 */
		<include refid="Base_billPayable_List" />
		  FROM STL.T_STL_COD COD, STL.T_STL_BILL_PAYABLE PAY
		 WHERE COD.WAYBILL_NO = PAY.WAYBILL_NO
		       AND PAY.BILL_TYPE = #{billType,jdbcType=VARCHAR}
		       AND PAY.ACTIVE = #{active,jdbcType=CHAR}
		       AND PAY.IS_RED_BACK = #{isRedBack,jdbcType=VARCHAR}
		       and cod.ACTIVE = #{active,jdbcType=CHAR}
		       and cod.batch_number = #{batchNumber,jdbcType=VARCHAR}
	</select>
	
	
	<!-- @author 218392 zhangyongxue 查询已签收并且签收时间在90天到730天内的-->
 	<select id="queryShortNonRefundCodLock"	parameterType="java.lang.String"
		resultMap="foss.stl.BillPayableEntityDao.BaseResultMap">
		select/*结算-客户管理-查询已签收并且签收时间在90天到730天内的*/
		<include refid="Base_billPayable_List" />
		  FROM STL.T_STL_COD COD
		  join STL.T_STL_BILL_PAYABLE PAY
		    on cod.waybill_no = pay.waybill_no
		   and pay.active = 'Y'
		   where cod.active = 'Y'
		   and pay.bill_type = 'APC'
		   and pay.sign_date is not null
		   and cod.status in ('NR','AG','CA','SF')
		   <!--@author 218392 zhangyongxue 2016-07-11 15:39:50 -->
	       and not Exists (select 1 from stl.t_stl_cod_audit dt
			where dt.waybill_no = cod.waybill_no 
				and dt.active = 'Y'
  			<!-- @ 218392 zyx 2016-07-11 14:47:00 -->
				and dt.lock_status in ('FA', 'FL', 'FCL', 'RA', 'RL', 'RCL','SSL','SLL'))
 			<![CDATA[  and pay.sign_date >= sysdate-730 ]]>
 			<![CDATA[ and pay.sign_date <= sysdate-90 ]]>
	</select>

	<!-- @author 218392 zhangyongxue 查询已签收并且签收时间大于730天-->
 	<select id="queryLongNonRefundCodLock"	parameterType="java.lang.String"
		resultMap="foss.stl.BillPayableEntityDao.BaseResultMap">
		select/*结算-客户管理-查询已签收并且签收时间730天之外的*/
		<include refid="Base_billPayable_List" />
		  FROM STL.T_STL_COD COD
		  join STL.T_STL_BILL_PAYABLE PAY
		    on cod.waybill_no = pay.waybill_no
		   and pay.active = 'Y'
		   where cod.active = 'Y'
		   and pay.bill_type = 'APC'
		   and pay.sign_date is not null
		   and cod.status in ('NR','AG','CA','SF')
   		<!--@author 218392 zhangyongxue 2016-07-11 15:39:50 -->
	       and not Exists (select 1 from stl.t_stl_cod_audit dt
			where dt.waybill_no = cod.waybill_no 
				and dt.active = 'Y'
  			<!-- @ 218392 zyx 2016-07-11 14:47:00 -->
				and dt.lock_status in ('FA', 'FL', 'FCL', 'RA', 'RL', 'RCL','SSL','SLL'))
 		<![CDATA[  and pay.sign_date < sysdate-730 ]]>
	</select>

	<!-- 更新取消代收货款状态 -->
	<update id="updateCODCancelStatus"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update /*结算-客户管理-更新取消代收货款状态 */stl.t_stl_cod t
		   set t.active = #{active,jdbcType=VARCHAR},
			   t.modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			   t.modify_user_code = #{modifyUserCode,jdbcType=VARCHAR},
			   t.modify_user_name = #{modifyUserName,jdbcType=VARCHAR},
		       t.version_no = t.version_no + 1
		 where t.id = #{id,jdbcType=VARCHAR}
			   and t.version_no = #{versionNo,jdbcType=VARCHAR}
	</update>

	<!-- 更新营业部冻结代收货款状态 -->
	<update id="updateOrgFreezeStatus"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update /*结算-客户管理-更新营业部冻结代收货款状态 */stl.t_stl_cod t
		   set t.status = #{status,jdbcType=VARCHAR},
		       t.org_freeze_time = #{orgFreezeTime,jdbcType=TIMESTAMP},
		       t.org_freeze_user_code = #{orgFreezeUserCode,jdbcType=VARCHAR},
			   t.org_freeze_user_name = #{orgFreezeUserName,jdbcType=VARCHAR},
			   t.version_no = t.version_no + 1
		 where t.id = #{id,jdbcType=VARCHAR}
			   and t.version_no = #{versionNo,jdbcType=VARCHAR}
	</update>

	<!-- 更新营业部审核代收货款状态 -->
	<update id="updateOrgAuditStatus"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update/*结算-客户管理-更新营业部审核代收货款状态 */ stl.t_stl_cod t
		   set t.status = #{status,jdbcType=VARCHAR},
			   t.org_audit_time = #{orgAuditTime,jdbcType=TIMESTAMP},
			   t.org_audit_user_code = #{orgAuditUserCode,jdbcType=VARCHAR},
			   t.org_audit_user_name = #{orgAuditUserName,jdbcType=VARCHAR},
			   t.version_no = t.version_no + 1
		 where t.id = #{id,jdbcType=VARCHAR}
			   and t.version_no = #{versionNo,jdbcType=VARCHAR}
	</update>

	<!-- 更新营业部经理审核代收货款状态 -->
	<update id="updateManagerAuditStatus"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update /*结算-客户管理-更新营业部经理审核代收货款状态 */stl.t_stl_cod t
		   set t.status = #{status,jdbcType=VARCHAR},
			   t.org_manager_audit_time = #{orgManagerAuditTime,jdbcType=TIMESTAMP},
			   t.org_manager_audit_code = #{orgManagerAuditCode,jdbcType=VARCHAR},
			   t.org_manager_audit_name = #{orgManagerAuditName,jdbcType=VARCHAR},
			   t.refund_notes = #{refundNotes,jdbcType=VARCHAR},
			   t.version_no = t.version_no + 1
		 where t.id = #{id,jdbcType=VARCHAR}
			   and t.version_no = #{versionNo,jdbcType=VARCHAR}
	</update>

	<!-- 批量更新资金部冻结代收货款状态 -->
	<update id="updateTusyorgFreezeStatusByBatch"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.CODDto">
		update /*结算-客户管理-批量更新资金部冻结代收货款状态 */ stl.t_stl_cod t
		   set t.status = #{status,jdbcType=VARCHAR},
			   t.tusyorg_freeze_time = #{tusyorgFreezeTime,jdbcType=TIMESTAMP},
			   t.tusyorg_freeze_user_code = #{tusyorgFreezeUserCode,jdbcType=VARCHAR},
			   t.tusyorg_freeze_user_name = #{tusyorgFreezeUserName,jdbcType=VARCHAR},
			   t.version_no = t.version_no + 1
		 where (t.id,t.version_no) IN
			 <foreach collection="codList" index="index" item="item"
				open="(" separator="," close=")">
				(#{item.id,jdbcType=VARCHAR},#{item.versionNo,jdbcType=VARCHAR})
			 </foreach>
	</update>

	<!-- 更新资金部冻结代收货款状态 -->
	<update id="updateTusyorgFreezeStatus"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update /*结算-客户管理-更新资金部冻结代收货款状态 */stl.t_stl_cod t
		   set t.status = #{status,jdbcType=VARCHAR},
			   t.tusyorg_freeze_time = #{tusyorgFreezeTime,jdbcType=TIMESTAMP},
			   t.tusyorg_freeze_user_code = #{tusyorgFreezeUserCode,jdbcType=VARCHAR},
			   t.tusyorg_freeze_user_name = #{tusyorgFreezeUserName,jdbcType=VARCHAR},
			   t.version_no = t.version_no + 1
		 where t.id = #{id,jdbcType=VARCHAR}
			   and t.version_no = #{versionNo,jdbcType=VARCHAR}
	</update>

	<!-- 批量更新资金部取消冻结代收货款状态 -->
	<update id="updateTusyorgClfreezeStatusByBatch"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.CODDto">
		update/*结算-客户管理-批量更新资金部取消冻结代收货款状态 */ stl.t_stl_cod t
		   set t.status = #{status,jdbcType=VARCHAR},
			   t.tusyorg_clfreeze_time = #{tusyorgClfreezeTime,jdbcType=TIMESTAMP},
			   t.tusyorg_clfreeze_user_code = #{tusyorgClfreezeUserCode,jdbcType=VARCHAR},
			   t.tusyorg_clfreeze_user_name = #{tusyorgClfreezeUserName,jdbcType=VARCHAR},
			   t.version_no = t.version_no + 1
		 where (t.id,t.version_no) IN
			 <foreach collection="codList" index="index" item="item"
				open="(" separator="," close=")">
				(#{item.id,jdbcType=VARCHAR},#{item.versionNo,jdbcType=VARCHAR})
			 </foreach>
	</update>

	<!-- 更新资金部取消冻结代收货款状态 -->
	<update id="updateTusyorgClfreezeStatus"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update/*结算-客户管理-更新资金部取消冻结代收货款状态 */ stl.t_stl_cod t
		   set t.status = #{status,jdbcType=VARCHAR},
			   t.tusyorg_clfreeze_time = #{tusyorgClfreezeTime,jdbcType=TIMESTAMP},
			   t.tusyorg_clfreeze_user_code = #{tusyorgClfreezeUserCode,jdbcType=VARCHAR},
			   t.tusyorg_clfreeze_user_name = #{tusyorgClfreezeUserName,jdbcType=VARCHAR},
			   t.version_no = t.version_no + 1
		 where t.id = #{id,jdbcType=VARCHAR}
			   and t.version_no = #{versionNo,jdbcType=DECIMAL}
	</update>

	<!-- 更新代收货款付款失败审核状态 -->
	<update id="updatePaymentFailedAuditStatus"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update /*结算-客户管理-更新代收货款付款失败审核状态 */stl.t_stl_cod t
		   set t.status = #{status,jdbcType=VARCHAR},
			   t.modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			   t.modify_user_code = #{modifyUserCode,jdbcType=VARCHAR},
			   t.modify_user_name = #{modifyUserName,jdbcType=VARCHAR},
			   t.version_no = t.version_no + 1
		 where t.id = #{id,jdbcType=VARCHAR}
			   and t.version_no = #{versionNo,jdbcType=VARCHAR}
	</update>

	<!-- 批量更新代收货款线下导出状态 -->
	<update id="updatePayCODOfflineStatusByBatch"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.CODDto">
		update/*结算-客户管理-批量更新代收货款线下导出状态  */ stl.t_stl_cod t
		   set t.status = #{status,jdbcType=VARCHAR},
			   t.cod_export_time = #{codExportTime,jdbcType=TIMESTAMP},
			   t.cod_export_code = #{codExportCode,jdbcType=VARCHAR},
			   t.cod_export_name = #{codExportName,jdbcType=VARCHAR},
			   t.batch_number = #{batchNumber,jdbcType=VARCHAR},
			   t.refund_path = #{refundPath,jdbcType=VARCHAR},
			   t.version_no = t.version_no + 1
		 where 
			   (t.id,t.version_no) IN
			 <foreach collection="codList" index="index" item="item"
				open="(" separator="," close=")">
				(#{item.id,jdbcType=VARCHAR}, #{item.versionNo,jdbcType=VARCHAR})
			 </foreach>
	</update>

	<!-- 更新代收货款线下导出状态 -->
	<update id="updatePayCODOfflineStatus"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update/*结算-客户管理-更新代收货款线下导出状态 */ stl.t_stl_cod t
		   set t.status = #{status,jdbcType=VARCHAR},
			   t.cod_export_time = #{codExportTime,jdbcType=TIMESTAMP},
			   t.cod_export_code = #{codExportCode,jdbcType=VARCHAR},
			   t.cod_export_name = #{codExportName,jdbcType=VARCHAR},
			   t.batch_number = #{batchNumber,jdbcType=VARCHAR},
			   t.refund_path = #{refundPath,jdbcType=VARCHAR},
			   t.version_no = t.version_no + 1
		 where t.id = #{id,jdbcType=VARCHAR}
			   and t.version_no = #{versionNo,jdbcType=VARCHAR}
	</update>

	<!-- 批量更新代收货款线上汇款状态 -->
	<update id="updatePayCODOnlineStatusByBatch"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.CODDto">
		update/*结算-客户管理-批量更新代收货款线上汇款状态 */ stl.t_stl_cod t
		   set t.status = #{status,jdbcType=VARCHAR},
			   t.tusyorg_rfd_apptime = #{tusyorgRfdApptime,jdbcType=TIMESTAMP},
			   t.tusyorg_rfd_app_user_code = #{tusyorgRfdAppUserCode,jdbcType=VARCHAR},
			   t.tusyorg_rfd_app_user_name = #{tusyorgRfdAppUserName,jdbcType=VARCHAR},
			   t.batch_number = #{batchNumber,jdbcType=VARCHAR},
			   t.refund_path = #{refundPath,jdbcType=VARCHAR},
			   t.version_no = t.version_no + 1
		 where (t.id,t.version_no) IN
			 <foreach collection="codList" index="index" item="item"
				open="(" separator="," close=")">
				(#{item.id,jdbcType=VARCHAR},#{item.versionNo,jdbcType=VARCHAR})
			 </foreach>
	</update>
	
	<!-- 更新代收货款线上汇款状态 -->
	<update id="updatePayCODOnlineStatus"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update/*结算-客户管理-更新代收货款线上汇款状态 */ stl.t_stl_cod t
		   set t.status = #{status,jdbcType=VARCHAR},
			   t.tusyorg_rfd_apptime = #{tusyorgRfdApptime,jdbcType=TIMESTAMP},
			   t.tusyorg_rfd_app_user_code = #{tusyorgRfdAppUserCode,jdbcType=VARCHAR},
			   t.tusyorg_rfd_app_user_name = #{tusyorgRfdAppUserName,jdbcType=VARCHAR},
			   t.batch_number = #{batchNumber,jdbcType=VARCHAR},
			   t.refund_path = #{refundPath,jdbcType=VARCHAR},
			   t.version_no = t.version_no + 1
		 where t.id = #{id,jdbcType=VARCHAR}
			   and t.version_no = #{versionNo,jdbcType=VARCHAR}
	</update>
	
	<!-- 更新银企退回代收货款状态 -->
	<update id="updateCODBankBatchBackStatus" parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update/*结算-客户管理-更新银企退回代收货款状态 */ stl.t_stl_cod t
		   set t.status                    = #{status,jdbcType=VARCHAR},
		       t.tusyorg_rfd_apptime       = #{tusyorgRfdApptime,jdbcType=TIMESTAMP},
		       t.tusyorg_rfd_app_user_code = #{tusyorgRfdAppUserCode,jdbcType=VARCHAR},
		       t.tusyorg_rfd_app_user_name = #{tusyorgRfdAppUserName,jdbcType=VARCHAR},
		       t.batch_number              = #{batchNumber,jdbcType=VARCHAR},
		       t.refund_path               = #{refundPath,jdbcType=VARCHAR},
		       t.remittance_fail_notes     = #{remittanceFailNotes,jdbcType=VARCHAR},
		       t.merge_code 			   = #{mergeCode,jdbcType=VARCHAR},
		       t.version_no                = t.version_no + 1
		 where t.id = #{id,jdbcType=VARCHAR}
		   and t.version_no = #{versionNo,jdbcType=VARCHAR}
	</update>

	<!-- 更新代收货款汇款成功状态 -->
	<update id="updatePayCODSuccess"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update /*结算-客户管理-更新代收货款汇款成功状态 */stl.t_stl_cod t
		   set t.status = #{status,jdbcType=VARCHAR},
			   t.modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			   t.REFUND_SUCCESS_TIME = #{refundSuccessTime,jdbcType=TIMESTAMP},
			   t.remittance_fail_notes = #{remittanceFailNotes,jdbcType=VARCHAR},
			   t.modify_user_code = #{modifyUserCode,jdbcType=VARCHAR},
			   t.modify_user_name = #{modifyUserName,jdbcType=VARCHAR},
			   t.com_account = #{comAccount,jdbcType=VARCHAR},
			   t.version_no = t.version_no + 1
		 where t.id = #{id,jdbcType=VARCHAR}
			   and t.version_no = #{versionNo,jdbcType=VARCHAR}
	</update>

	<!-- 批量更新代收货款线上汇款状态 -->
	<update id="updatePayCODSuccessByBatch"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.CODDto">
		update/*结算-客户管理-批量更新代收货款线上汇款状态*/ stl.t_stl_cod t
		   set t.status = #{status,jdbcType=VARCHAR},
			   t.modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			   t.REFUND_SUCCESS_TIME = #{refundSuccessTime,jdbcType=TIMESTAMP},
			   t.remittance_fail_notes = #{remittanceFailNotes,jdbcType=VARCHAR},
			   t.modify_user_code = #{modifyUserCode,jdbcType=VARCHAR},
			   t.modify_user_name = #{modifyUserName,jdbcType=VARCHAR},
			   t.com_account = #{comAccount,jdbcType=VARCHAR},
			   t.version_no = t.version_no + 1
		 where (t.id,t.version_no) IN
			 <foreach collection="codEntityList" index="index" item="item"
				open="(" separator="," close=")">
				(#{item.id,jdbcType=VARCHAR},#{item.versionNo,jdbcType=VARCHAR})
			 </foreach>
	</update>

	<!-- 更新代收货款汇款失败状态 -->
	<update id="updatePayCODFailure"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update /*结算-客户管理-更新代收货款汇款失败状态 */stl.t_stl_cod t
		   set t.status = #{status,jdbcType=VARCHAR},
			   t.modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			   t.REFUND_SUCCESS_TIME = #{refundSuccessTime,jdbcType=TIMESTAMP},
			   t.remittance_fail_notes = #{remittanceFailNotes,jdbcType=VARCHAR},
			   t.modify_user_code = #{modifyUserCode,jdbcType=VARCHAR},
			   t.modify_user_name = #{modifyUserName,jdbcType=VARCHAR},
			   t.com_account = #{comAccount,jdbcType=VARCHAR},
			   t.merge_code = #{mergeCode,jdbcType=VARCHAR},
			   t.version_no = t.version_no + 1
		 where t.id = #{id,jdbcType=VARCHAR}
			   and t.version_no = #{versionNo,jdbcType=VARCHAR}
	</update>

	<!-- 更新代收货款反汇款成功状态 -->
	<update id="updatePayCODAntiRemittance"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.domain.CODEntity">
		update /*结算-客户管理-更新代收货款反汇款成功状态 */stl.t_stl_cod t
		   set t.status = #{status,jdbcType=VARCHAR},
			   t.modify_time = #{modifyTime,jdbcType=TIMESTAMP},
			   t.REFUND_SUCCESS_TIME = #{refundSuccessTime,jdbcType=TIMESTAMP},
			   t.remittance_fail_notes = #{remittanceFailNotes,jdbcType=VARCHAR},
			   t.modify_user_code = #{modifyUserCode,jdbcType=VARCHAR},
			   t.modify_user_name = #{modifyUserName,jdbcType=VARCHAR},
			   t.version_no = t.version_no + 1
		 where t.id = #{id,jdbcType=VARCHAR}
			   and t.version_no = #{versionNo,jdbcType=VARCHAR}
	</update>

	<!-- 空运代收货款审核状态 -->
	<select id="updateAirPaidCodStatus"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.AirBillPaidCODQueryDto">
		update/*结算-客户管理-空运代收货款审核状态  */
		stl.T_STL_COD cod
		set cod.AIR_ORG_audit_TIME =
		#{airAuditDate,jdbcType=TIMESTAMP},
		cod.air_Status =
		#{newAirStatus,jdbcType=VARCHAR},
		cod.air_Org_Audit_User_Code =
		#{airOrgAuditUserCode,jdbcType=VARCHAR},
		cod.air_Org_Audit_User_name =
		#{airOrgAuditUserName,jdbcType=VARCHAR},
		cod.status =
		#{status,jdbcType=VARCHAR}

		 where
		cod.id = #{id,jdbcType=VARCHAR}
		<!-- 审核状态 -->
		and cod.air_Status = #{oldAirStatus,jdbcType=VARCHAR}
		<!-- 有效的代收货款记录 -->
		and cod.active = #{active,jdbcType=VARCHAR}
	</select>
	
	<!-- 快递代理代收货款审核状态 ISSUE-3389 小件业务 -->
	<select id="updateLandPaidCodStatus"
		parameterType="com.deppon.foss.module.settlement.consumer.api.shared.dto.LandBillPaidCODQueryDto">
		update/*结算-客户管理-空运代收货款审核状态  */
		stl.T_STL_COD cod
		set cod.Land_ORG_audit_TIME =
		#{landAuditDate,jdbcType=TIMESTAMP},
		cod.land_Status =
		#{newLandStatus,jdbcType=VARCHAR},
		cod.land_Org_Audit_User_Code =
		#{landOrgAuditUserCode,jdbcType=VARCHAR},
		cod.land_Org_Audit_User_name =
		#{landOrgAuditUserName,jdbcType=VARCHAR},
		cod.status =
		#{status,jdbcType=VARCHAR}

		 where
		cod.id = #{id,jdbcType=VARCHAR}
		<!-- 审核状态 -->
		and cod.land_Status = #{oldLandStatus,jdbcType=VARCHAR}
		<!-- 有效的代收货款记录 -->
		and cod.active = #{active,jdbcType=VARCHAR}
	</select>
	
</mapper>