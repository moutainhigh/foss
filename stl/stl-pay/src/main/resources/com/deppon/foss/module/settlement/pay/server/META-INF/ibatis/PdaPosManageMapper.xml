<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
	"-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="foss.stl.PdaPosManageDao" >
  	<resultMap id="PosManageResultMap" type="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardEntity" >
    	<id column="ID" property="id" jdbcType="VARCHAR" />
	    <result column="TRADE_SERIAL_NO" property="tradeSerialNo" jdbcType="VARCHAR" />
	    <result column="SERIAL_AMOUNT" property="serialAmount" jdbcType="DECIMAL" />
	    <result column="CARD_DEPT_NAME" property="cardDeptName" jdbcType="VARCHAR" />
	    <result column="CARD_DEPT_CODE" property="cardDeptCode" jdbcType="VARCHAR" />
	    <result column="CARD_DEPT_BM_CODE" property="cardDeptBMCode" jdbcType="VARCHAR" />
	    <result column="USED_AMOUNT" property="usedAmount" jdbcType="DECIMAL" />
	    <result column="UNUSED_AMOUNT" property="unUsedAmount" jdbcType="DECIMAL" />
	    <result column="CARDTIME" property="cardTime" jdbcType="TIMESTAMP" />
	    <result column="BELONG_MODULE" property="belongModule" jdbcType="VARCHAR" />
	    <result column="BUSINESS_AREA_NAME" property="businessAreaName" jdbcType="VARCHAR" />
	    <result column="BUSINESS_AREA_CODE" property="businessAreaCode" jdbcType="VARCHAR" />
	    <result column="BUSINESS_AREA_BMCODE" property="businessAreaBMCode" jdbcType="VARCHAR" />
	    <result column="BELONG_REGION_NAME" property="belongRegionName" jdbcType="VARCHAR" />
	    <result column="BELONG_REGION_CODE" property="belongRegionCode" jdbcType="VARCHAR" />
	    <result column="BELONG_REGION_BM_CODE" property="belongRegionBMCode" jdbcType="VARCHAR" />
	    <result column="BUSINESS_DEPT_NAME" property="businessDeptName" jdbcType="VARCHAR" />
	    <result column="BUSINESS_DEPT_CODE" property="businessDeptCode" jdbcType="VARCHAR" />
	    <result column="BUSINESS_DEPT_BM_CODE" property="businessDeptBMCode" jdbcType="VARCHAR" />
	    <result column="FINANCE_DEPT_NAME" property="financeDeptName" jdbcType="VARCHAR" />
	    <result column="FINANCE_DEPT_CODE" property="financeDeptCode" jdbcType="VARCHAR" />
	    <result column="FINANCE_DEPT_BM_CODE" property="financeDeptBMCode" jdbcType="VARCHAR" />
	    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
	    <result column="CREATE_USER_NAME" property="createUserName" jdbcType="VARCHAR" />
	    <result column="CREATE_USER_CODE" property="createUserCode" jdbcType="VARCHAR" />
	    <result column="MODIFY_TIME" property="modifyTime" jdbcType="TIMESTAMP" />
	    <result column="MODIFY_USER_NAME" property="modifyUserName" jdbcType="VARCHAR" />
	    <result column="MODIFY_USER_CODE" property="modifyUserCode" jdbcType="VARCHAR" />
	    <result column="ACCOUNT_TIME" property="accountDate" jdbcType="TIMESTAMP" />
	    <result column="NOTES" property="notes" jdbcType="VARCHAR" />
	    <result column="VERSION" property="version" jdbcType="DECIMAL" />
	    <result column="INVOICE_TYPE" property="invoiceType" jdbcType="VARCHAR" />
	    <result column="INVOICE_NO" property="invoiceNo" jdbcType="VARCHAR" />
	    <result column="AMOUNT" property="amount" jdbcType="DECIMAL" />
	    <result column="OCCUPATE_AMOUNT" property="occupateAmount" jdbcType="DECIMAL" />
	    <result column="UNVERIFY_AMOUNT" property="unVerifyAmount" jdbcType="DECIMAL" />
	    <result column="FROZEN_STATUS" property="frozenStatus" jdbcType="DECIMAL"/>
        <result column="FROZEN_AMOUNT" property="frozenAmount" jdbcType="DECIMAL"/>
        <result column="FROZEN_TIME" property="frozenTime" jdbcType="TIMESTAMP"/>
  	</resultMap>
  	
  	<!-- 明细 -->
  	<resultMap id="posCardDetailResultMap" type="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardDetailEntity" >
    	<id column="ID" property="id" jdbcType="VARCHAR" />
	    <result column="TRADE_SERIAL_NO" property="tradeSerialNo" jdbcType="VARCHAR" />
	    <result column="INVOICE_TYPE" property="invoiceType" jdbcType="VARCHAR" />
	    <result column="INVOICE_NO" property="invoiceNo" jdbcType="VARCHAR" />
	    <result column="AMOUNT" property="amount" jdbcType="DECIMAL" />
	    <result column="OCCUPATE_AMOUNT" property="occupateAmount" jdbcType="DECIMAL" />
	    <result column="UNVERIFY_AMOUNT" property="unVerifyAmount" jdbcType="DECIMAL" />
  	</resultMap>
  	<!-- 插入刷卡管理表 -->
  	<insert id="insertPdaPosCardManage" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardEntity">
  		insert/*POS机刷卡管理---插入刷卡管理表*/ into stl.t_stl_pos_card(
			id,
			trade_serial_no,
			serial_amount,
			card_dept_name,
			card_dept_code,
			card_dept_bm_code,
			used_amount,
			unused_amount,
			cardtime,
			belong_module,
			business_area_name,
			business_area_code,
			business_area_bm_code,
			belong_region_name,
			belong_region_code,
			belong_region_bm_code,
			business_Dept_Name,
			business_Dept_code,
			business_Dept_BM_code,
			finance_dept_name,
			finance_dept_code,
			finance_dept_bm_code,
			create_time,
			create_user_name,
			create_user_code,
			account_time,
			active,
			notes,
			version)
			values(
			SYS_GUID(),
			#{tradeSerialNo,jdbcType=VARCHAR},
			#{serialAmount,jdbcType=DECIMAL}*100,
			#{cardDeptName,jdbcType=VARCHAR},
			#{cardDeptCode,jdbcType=VARCHAR},
			#{cardDeptBMCode,jdbcType=VARCHAR},
			#{usedAmount,jdbcType=DECIMAL}*100,
			#{unUsedAmount,jdbcType=DECIMAL}*100,
			#{cardTime,jdbcType=VARCHAR},
			#{belongModule,jdbcType=VARCHAR},
			#{businessAreaName,jdbcType=VARCHAR},
			#{businessAreaCode,jdbcType=VARCHAR},
			#{businessAreaBMCode,jdbcType=VARCHAR},
			#{belongRegionName,jdbcType=VARCHAR},
			#{belongRegionCode,jdbcType=VARCHAR},
			#{belongRegionBMCode,jdbcType=VARCHAR},
			#{businessDeptName,jdbcType=VARCHAR},
			#{businessDeptCode,jdbcType=VARCHAR},
			#{businessDeptBMCode,jdbcType=VARCHAR},
			#{financeDeptName,jdbcType=VARCHAR},
			#{financeDeptCode,jdbcType=VARCHAR},
			#{financeDeptBMCode,jdbcType=VARCHAR}, 
			sysdate,
			#{createUser,jdbcType=VARCHAR},
			#{createUserCode,jdbcType=VARCHAR},
			sysdate,
			'Y',
			#{notes,jdbcType=VARCHAR},
			1
			) 
  	</insert>
  	
  	<!-- 根据交流流水号更新已使用流水號金額和未使用金额 yq -->
  	<update id="updatePdaPosCardMessageAmount" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardEntity">
  		update 
  			/******POS刷卡管理---根据交流流水号更新已使用和未使用金额**********/
  		stl.t_stl_pos_card pc set
	       pc.used_amount =   #{usedAmount,jdbcType=DECIMAL} *100,
	       pc.unused_amount = #{unUsedAmount,jdbcType=DECIMAL} *100,
	       pc.modify_time = sysdate,
	       pc.modify_user_name = #{modifyUser,jdbcType=VARCHAR},
	       pc.modify_user_code = #{modifyUserCode,jdbcType=VARCHAR},
	       pc.version = pc.version +1
	    where pc.Active = 'Y'
	    And pc.trade_serial_no = #{tradeSerialNo,jdbcType=VARCHAR}   
  	</update>
  	
  	<!-- 根据流水号和部门查询刷卡数据 -->
  	<select id="queryPosCardData" resultMap="PosManageResultMap" parameterType="com.deppon.foss.module.settlement.common.api.shared.dto.PosCardManageDto">
  		select /*NCI--根据流水号查询刷卡数据*/
            pc.ID ID,                  
          pc.TRADE_SERIAL_NO TRADE_SERIAL_NO,     
          pc.SERIAL_AMOUNT/100 SERIAL_AMOUNT,
          pc.card_dept_code CARD_DEPT_CODE ,
          pc.card_dept_bm_code CARD_DEPT_BM_CODE,
          pc.business_area_code BUSINESS_AREA_CODE,
          pc.business_area_bm_code BUSINESS_AREA_BMCODE,
          pc.belong_region_code BELONG_REGION_CODE,
          pc.belong_region_bm_code BELONG_REGION_BM_CODE,       
          pc.CARD_DEPT_NAME CARD_DEPT_NAME,     
          pc.USED_AMOUNT/100 USED_AMOUNT,         
          pc.UNUSED_AMOUNT/100 UNUSED_AMOUNT,       
          pc.CARDTIME CARDTIME,            
          pc.BELONG_MODULE BELONG_MODULE,        
          pc.BUSINESS_AREA_NAME BUSINESS_AREA_NAME,  
          pc.BELONG_REGION_NAME BELONG_REGION_NAME,  
          pc.FINANCE_DEPT_NAME FINANCE_DEPT_NAME,
          pc.FROZEN_STATUS FROZEN_STATUS,
          pc.FROZEN_AMOUNT/100 FROZEN_AMOUNT,
          pc.FROZEN_TIME FROZEN_TIME,
          pc.create_user_code CREATE_USER_CODE,
          pc.create_user_name CREATE_USER_NAME,
          pc.create_time CREATE_TIME
          from stl.t_stl_pos_card pc
     where pc.Active = 'Y'
		 <!-- 只能查到本部门的数据 -->
		 <if test="orgCode != null and orgCode !=''">
		 	and pc.card_dept_code = #{orgCode,jdbcType=VARCHAR}
		 </if>
		 and pc.TRADE_SERIAL_NO = #{tradeSerialNo,jdbcType=VARCHAR}
  	</select>
  		
  	<!-- 单条插入 -->
  	<insert id="addPosCardDetail" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardDetailEntity">
  			insert 
  			/*******POS管理插入明细*********/
  			into stl.t_stl_pos_card_detail
		    (id,
		    trade_serial_no,
		    invoice_type,
		    invoice_no,
		    amount,
		    occupate_amount,
		    unverify_amount,
		    create_time,
			create_user_name,
			create_user_code,
			isDelete,
		    version)
		    values(
			     SYS_GUID(),
	       		 #{tradeSerialNo,jdbcType=VARCHAR},
	       		 #{invoiceType,jdbcType=VARCHAR},
	       		 #{invoiceNo,jdbcType=VARCHAR},
	       		 #{amount,jdbcType=DECIMAL}*100,
	       		 #{occupateAmount,jdbcType=DECIMAL}*100,
	       		 #{unVerifyAmount,jdbcType=DECIMAL}*100,
	       		 sysdate,
				 #{createUser,jdbcType=VARCHAR},
				 #{createUserCode,jdbcType=VARCHAR},
				 'N',
	       		 1
       		 )
  	</insert>	
  	
  	<!-- 更新明细金额 -->
  	<update id="updatePdaPosCardDetailAmount" parameterType="com.deppon.foss.module.settlement.common.api.shared.dto.PosCardManageDto">
  		begin
	  		<foreach collection="posCardDetailEntitys" item="item" index="index" separator=";">
  			update 
  			/******POS刷卡管理---更新PDA刷卡明细金额**********/
	  		stl.t_stl_pos_card_detail cd set
                cd.amount = #{item.amount,jdbcType=DECIMAL}*100,
	            cd.occupate_amount = #{item.occupateAmount,jdbcType=DECIMAL}*100,
	            cd.unverify_amount = #{item.unVerifyAmount,jdbcType=DECIMAL}*100,
	            cd.modify_time = sysdate,
	       		cd.modify_user_name = #{modifyUser,jdbcType=VARCHAR},
	            cd.modify_user_code = #{modifyUserCode,jdbcType=VARCHAR},
	            cd.version = cd.version +1
	        where cd.isDelete = 'N'
	            AND cd.INVOICE_NO = #{item.invoiceNo,jdbcType=VARCHAR} 
	            AND cd.TRADE_SERIAL_NO = #{item.tradeSerialNo,jdbcType=VARCHAR} 
            </foreach>
        ;end;    
  	</update>
  	
  	<!-- 更新明细金额 -->
  	<update id="updateSinglePosCardDetail" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardDetailEntity">
  			update 
  				/******POS刷卡管理---更新明细金额**********/
	  		stl.t_stl_pos_card_detail cd set
	            cd.occupate_amount = #{occupateAmount,jdbcType=DECIMAL}*100,
	            cd.unverify_amount = cd.unverify_amount - #{occupateAmount,jdbcType=DECIMAL}*100,
	            cd.modify_time = sysdate,
	            cd.modify_user_name = #{modifyUser,jdbcType=VARCHAR},
	            cd.modify_user_code = #{modifyUserCode,jdbcType=VARCHAR},
	            cd.version = cd.version +1
	        where cd.isDelete = 'N'
	            AND cd.INVOICE_NO = #{invoiceNo,jdbcType=VARCHAR} 
	            AND cd.TRADE_SERIAL_NO = #{tradeSerialNo,jdbcType=VARCHAR}
  	</update>
  	
  	<!-- 批量插入明细表 yq--> 
  	<insert id="insertPdaPosCardDetail" parameterType="java.util.List">
  		insert /*批量插入明细表*/into stl.t_stl_pos_card_detail
		(id,
		trade_serial_no,
		invoice_type,
		invoice_no,
		amount,
		occupate_amount,
		unverify_amount,
		create_time,
		create_user_name,
		create_user_code,
		isDelete,
		version)
		<foreach collection="list" item="item" index="index" separator="union all" >
       		 ( select SYS_GUID(),
       		 #{item.tradeSerialNo,jdbcType=VARCHAR},
       		 #{item.invoiceType,jdbcType=VARCHAR},
       		 #{item.invoiceNo,jdbcType=VARCHAR},
       		 #{item.amount,jdbcType=DECIMAL}*100,
       		 #{item.occupateAmount,jdbcType=DECIMAL}*100,
       		 #{item.unVerifyAmount,jdbcType=DECIMAL}*100,
       		 sysdate,
			 #{createUser,jdbcType=VARCHAR},
			 #{createUserCode,jdbcType=VARCHAR},
			 'N',
       		 1
       		 from dual)
        </foreach>
  	</insert>
  	
  	<!-- 根据运单号去查询到达应收部门 -->
  	<select id="queryDRDeptByWaybillNo" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardDetailEntity" resultMap="PosManageResultMap">
  		select 
	  		  /******POS管理----根据运单号去查询到达应收部门******/
			  r.dest_org_code CARD_DEPT_CODE,
			  r.dest_org_name CARD_DEPT_NAME
			  from stl.t_Stl_Bill_Receivable r where  r 
		where r.waybill_no = #{invoiceNo,jdbcType=VARCHAR}
		      and r.active ='Y'
		      group by r.dest_org_code, r.dest_org_name
  	</select>
  	
  	<!-- 根据运单号去查询到达应收部门或出发部门 -->
  	<select id="queryDRORDeptByWaybillNo" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardDetailEntity" resultMap="PosManageResultMap">
  		select 
  			/******POS管理----根据运单号去查询到达应收部门或出发部门******/
		   r.dest_org_code CARD_DEPT_CODE,
		   r.dest_org_name CARD_DEPT_NAME
		   from stl.t_Stl_Bill_Receivable r
		   where r.waybill_no = #{invoiceNo,jdbcType=VARCHAR}
		   and r.active ='Y'
		   group by r.dest_org_code, r.dest_org_name
		union all
		select 
	        re.orig_org_code CARD_DEPT_CODE,
	        re.orig_org_name CARD_DEPT_NAME
	        from stl.t_stl_bill_receivable re
	    where re.waybill_no = #{invoiceNo,jdbcType=VARCHAR}
	          and re.active ='Y'
              group by re.orig_org_code,re.orig_org_name
  	</select>
  	
  	<!-- 根据单据号去查询对账单未还金额 -->
  	<select id="queryUnpaidAmountByNo" parameterType="java.util.Map" resultMap="PosManageResultMap">
  		SELECT
  			  /*** PDA对账单管理***根据单据号去查询对账单未还金额 **/
			  sa.unpaid_amount/100 UNVERIFY_AMOUNT --未还金额  -->未核销金额 
			  FROM STL.T_STL_STATEMENT_OF_ACCOUNT sa
		WHERE sa.CONFIRM_STATUS = 'C'
			  AND sa.UNPAID_AMOUNT !=0
		      AND sa.statement_bill_no = #{number,jdbcType=VARCHAR} 
  	</select>
  	
  	<!-- 根据交易流水号去更新已使用流水号金额和未使用金额 -->
  	<update id="updatePosCardByNumber" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardDetailEntity">
  			update 
  				/******POS刷卡管理--- 根据交易流水号去更新已使用流水号金额和未使用金额**********/
  			stl.t_stl_pos_card pc set
			       pc.used_amount =  pc.used_amount + #{occupateAmount,jdbcType=DECIMAL}*100,
			       pc.unused_amount = pc.unused_amount - #{occupateAmount,jdbcType=DECIMAL}*100,/*occupateAmount 已使用流水号金额*/
			       pc.modify_time = sysdate,
			       pc.modify_user_name = #{modifyUser,jdbcType=VARCHAR},
		           pc.modify_user_code = #{modifyUserCode,jdbcType=VARCHAR},
			       pc.version = pc.version +1
		    where pc.active = 'Y' 
		    and pc.TRADE_SERIAL_NO = #{tradeSerialNo,jdbcType=VARCHAR}   
  	</update>
  	
  	<!-- 根据单据号查询结清货款未核销金额 应收单 -->
  	<select id="queryUnverifyAmountByNo" parameterType="java.util.Map" resultMap="PosManageResultMap">
  		select   
	       /**NCI*根据单据号查询结清货款未核销金额--应收单 **/
	       sum(r.unverify_amount)/100 UNVERIFY_AMOUNT
	       from stl.t_Stl_Bill_Receivable r 
	       where r.waybill_no = #{number,jdbcType=VARCHAR} 
	       and r.active ='Y'  
  	</select>
  	
  	<!-- 业务异常处理 -->
  	<!-- 反结清 作废还款单 作废小票 作废预收单  更新T+0已使用流水号金额，未使用金额 -->
  	<update id="updatePosByNoForMoney" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardDetailEntity">
  			update 
	  			/******POS刷卡管理--异常处理- 更新T+0已使用流水号金额，未使用金额**********/
	  			stl.t_stl_pos_card pc set
			       pc.used_amount =  pc.used_amount - #{occupateAmount,jdbcType=DECIMAL}*100,
			       pc.unused_amount = pc.unused_amount + #{occupateAmount,jdbcType=DECIMAL}*100,
			       pc.modify_time = sysdate,
			       pc.modify_user_name = #{modifyUser,jdbcType=VARCHAR},
		           pc.modify_user_code = #{modifyUserCode,jdbcType=VARCHAR},
			       pc.version = pc.version +1
		     where pc.active = 'Y'
		     AND pc.trade_serial_no  = #{tradeSerialNo,jdbcType=VARCHAR}
  	</update>
  	
  	<!-- 作废明细 -->
  	<update id="deleteDetailByNo" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardDetailEntity">
  		update 
  			/*运单作废----根据单据号和交易流水号去作废明细*/
	  		stl.t_stl_pos_card_detail cd set
	            cd.isdelete = 'Y',
	            cd.modify_time = sysdate,
	            cd.modify_user_name = #{modifyUser,jdbcType=VARCHAR},
	            cd.modify_user_code = #{modifyUserCode,jdbcType=VARCHAR},
	            cd.version = cd.version +1
	     where  cd.isdelete = 'N'
	            AND cd.INVOICE_NO = #{invoiceNo,jdbcType=VARCHAR} 
	            AND cd.TRADE_SERIAL_NO = #{tradeSerialNo,jdbcType=VARCHAR}
  	</update>
  	
  	<!-- 根据单据号查询明细 -->
  	<select id="queryDetailsByNo" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardDetailEntity" resultMap="posCardDetailResultMap">
  		select /*根据单据号查询明细*/
			  d.TRADE_SERIAL_NO TRADE_SERIAL_NO,  
			  d.INVOICE_TYPE INVOICE_TYPE,     
			  d.INVOICE_NO INVOICE_NO,       
			  d.AMOUNT /100 AMOUNT,           
			  d.OCCUPATE_AMOUNT/100 OCCUPATE_AMOUNT,  
			  d.UNVERIFY_AMOUNT/100 UNVERIFY_AMOUNT
  			  from stl.T_STL_POS_CARD_DETAIL d 
  		where d.ISDELETE = 'N' /*未被删除的数据*/
  			  <if test="invoiceNo != null and invoiceNo != ''">
  			  	   and d.INVOICE_NO =  #{invoiceNo,jdbcType=VARCHAR}
  			  </if>
  			  <if test="invoiceType != null and invoiceType != ''">
  			  	   and d.INVOICE_TYPE = #{invoiceType,jdbcType=VARCHAR}
  			  </if>
  			  <if test="tradeSerialNo != null and tradeSerialNo != ''">
  			  	   and d.trade_serial_no = #{tradeSerialNo,jdbcType=VARCHAR}
  			  </if>
  			  order by d.create_time /*创建日期排序*/
  	</select>
  	
  	<!-- 根据交易流水号和单据号去判断明细中是否存在，不存在则插入，存在则更新 -->
  	<insert id="insertOrUpdateDetail" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardDetailEntity">
  		begin
				update stl.t_stl_pos_card_detail cd set 
					 cd.unverify_amount = cd.unverify_amount - #{occupateAmount,jdbcType=DECIMAL}*100,
		             cd.occupate_amount = cd.occupate_amount + #{occupateAmount,jdbcType=DECIMAL}*100,
		      		 cd.modify_time = sysdate,
		             cd.modify_user_name = #{modifyUser,jdbcType=VARCHAR},
		             cd.modify_user_code = #{modifyUserCode,jdbcType=VARCHAR}
		 	    where cd.trade_serial_no = #{tradeSerialNo,jdbcType=VARCHAR}
		              and cd.invoice_no =  #{invoiceNo,jdbcType=VARCHAR}
		      		  and cd.isdelete = 'N';
			IF SQL%NOTFOUND THEN
				    insert into stl.t_stl_pos_card_detail
		  			/*******POS管理插入明细*********/
				    (id,
				    trade_serial_no,
				    invoice_type,
				    invoice_no,
				    amount,
				    occupate_amount,
				    unverify_amount,
				    create_time,
					create_user_name,
					create_user_code,
					isDelete,
				    version)
				    values(
						 SYS_GUID(),
			       		 #{tradeSerialNo,jdbcType=VARCHAR},
			       		 #{invoiceType,jdbcType=VARCHAR},
			       		 #{invoiceNo,jdbcType=VARCHAR},
			       		 #{amount,jdbcType=DECIMAL}*100,
			       		 #{occupateAmount,jdbcType=DECIMAL}*100,
			       		 #{unVerifyAmount,jdbcType=DECIMAL}*100,
			       		 sysdate,
						 #{createUser,jdbcType=VARCHAR},
						 #{createUserCode,jdbcType=VARCHAR},
						 'N',
			       		 1
			        );
			END IF;
		end;
  	</insert>
  	
  	<!-- 反核销之后根据单据号更新明细总金额 -->
  	<update id="updateStatementAmount" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardDetailEntity">
  	  	update 
  	  		/*NCI--反核销之后根据单据号更新明细总金额*/
  	  		stl.t_Stl_Pos_Card_Detail pc 
  	  			set pc.amount = #{amount,jdbcType=DECIMAL}*100
		    	where pc.invoice_no = #{invoiceNo,jdbcType=VARCHAR}
		    	and pc.isdelete ='N'
  	</update>
  	
  	<!-- 根据交易流水号去更新已使用流水号金额和未使用金额 -->
  	<update id="updateExceptionDataByNum" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardDetailEntity">
  			update 
  				/******POS刷卡管理--- 根据交易流水号去更新已使用流水号金额和未使用金额**********/
  			stl.t_stl_pos_card pc set
			       pc.used_amount =  pc.used_amount - #{occupateAmount,jdbcType=DECIMAL}*100,
			       pc.unused_amount = pc.unused_amount + #{occupateAmount,jdbcType=DECIMAL}*100,/*occupateAmount 已使用流水号金额*/
			       pc.modify_time = sysdate,
			       pc.modify_user_name = #{modifyUser,jdbcType=VARCHAR},
		           pc.modify_user_code = #{modifyUserCode,jdbcType=VARCHAR},
			       pc.version = pc.version +1
		    where pc.active = 'Y' 
		    and pc.TRADE_SERIAL_NO = #{tradeSerialNo,jdbcType=VARCHAR}   
  	</update>
  	
  	<!-- 根据交易流水号,所属模块删除POS机刷卡管理页面导入的异常流水号 -->
	<delete id="deleteExceptionData" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardEntity">
			delete
				/******POS刷卡管理--- 根据交易流水号,所属模块删除POS机刷卡管理页面导入的异常流水号**********/
			from stl.t_stl_pos_card pc
			where pc.active = 'Y'
			and pc.trade_serial_no = #{tradeSerialNo,jdbcType=VARCHAR}
			and pc.belong_module = #{belongModule,jdbcType=VARCHAR}
	</delete>
	
	<!-- 更新冻结状态 -->
	<update id="updatePosCardEntity" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.PosCardEntity" >
			update stl.t_stl_pos_card pc
			   set pc.frozen_status = #{frozenStatus,jdbcType=DECIMAL},
			       pc.frozen_time = #{frozenTime,jdbcType=TIMESTAMP},
			       pc.frozen_amount = #{frozenAmount,jdbcType=DECIMAL}*100,
			       pc.modify_time = #{modifyDate,jdbcType=TIMESTAMP},
			       pc.version = #{version,jdbcType=DECIMAL} + 1
			 where pc.trade_serial_no = #{tradeSerialNo,jdbcType=VARCHAR}
			   and pc.id =  #{id,jdbcType=VARCHAR}
			   and pc.version = #{version,jdbcType=DECIMAL}
			   and pc.active = 'Y'
	</update>
	
	<!-- 根据交易流水号,所属模块删除POS机刷卡管理页面导入的异常流水号 -->
	<update id="cancelPosCardbyParam" parameterType="java.util.Map">
			update 
  				/******POS刷卡管理--- 根据交易流水号去更新已使用流水号金额和未使用金额**********/
  			stl.t_stl_pos_card pc set
			       pc.modify_time = sysdate,
			       pc.modify_user_name = #{modifyUser,jdbcType=VARCHAR},
		           pc.modify_user_code = #{modifyUserCode,jdbcType=VARCHAR},
			       pc.notes = #{notes,jdbcType=VARCHAR}, 
			       pc.version = pc.version +1,
			       pc.active ='N'
		    where pc.active = 'Y' 
		    and pc.TRADE_SERIAL_NO = #{tradeSerialNo,jdbcType=VARCHAR} 
	</update>
</mapper>