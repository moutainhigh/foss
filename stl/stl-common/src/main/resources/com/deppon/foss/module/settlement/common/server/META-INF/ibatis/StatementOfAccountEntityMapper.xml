<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="foss.stl.StatementOfAccountEntityDao" >
  <resultMap id="BaseResultMap" type="com.deppon.foss.module.settlement.common.api.shared.domain.StatementOfAccountEntity" >
    <result column="ID" property="id" jdbcType="VARCHAR" />
    <result column="STATEMENT_BILL_NO" property="statementBillNo" jdbcType="VARCHAR" />
    <result column="CREATE_ORG_CODE" property="createOrgCode" jdbcType="VARCHAR" />
    <result column="CREATE_ORG_NAME" property="createOrgName" jdbcType="VARCHAR" />
    <result column="COMPANY_CODE" property="companyCode" jdbcType="VARCHAR" />
    <result column="COMPANY_NAME" property="companyName" jdbcType="VARCHAR" />
    <result column="UNIFIED_CODE" property="unifiedCode" jdbcType="VARCHAR" />
    <result column="CUSTOMER_CODE" property="customerCode" jdbcType="VARCHAR" />
    <result column="CUSTOMER_NAME" property="customerName" jdbcType="VARCHAR" />
    <result column="BILL_TYPE" property="billType" jdbcType="VARCHAR" />
    <result column="BEGIN_PERIOD_AMOUNT" property="beginPeriodAmount" jdbcType="DECIMAL" />
    <result column="BEGIN_PERIOD_REC_AMOUNT" property="beginPeriodRecAmount" jdbcType="DECIMAL" />
    <result column="BEGIN_PERIOD_PAY_AMOUNT" property="beginPeriodPayAmount" jdbcType="DECIMAL" />
    <result column="BEGIN_PERIOD_PRE_AMOUNT" property="beginPeriodPreAmount" jdbcType="DECIMAL" />
    <result column="BEGIN_PERIOD_ADV_AMOUNT" property="beginPeriodAdvAmount" jdbcType="DECIMAL" />
    <result column="PERIOD_AMOUNT" property="periodAmount" jdbcType="DECIMAL" />
    <result column="PERIOD_REC_AMOUNT" property="periodRecAmount" jdbcType="DECIMAL" />
    <result column="PERIOD_PAY_AMOUNT" property="periodPayAmount" jdbcType="DECIMAL" />
    <result column="PERIOD_PRE_AMOUNT" property="periodPreAmount" jdbcType="DECIMAL" />
    <result column="PERIOD_ADV_AMOUNT" property="periodAdvAmount" jdbcType="DECIMAL" />
    <result column="PERIOD_UNVERIFY_REC_AMOUNT" property="periodUnverifyRecAmount" jdbcType="DECIMAL" />
    <result column="PERIOD_UNVERIFY_PAY_AMOUNT" property="periodUnverifyPayAmount" jdbcType="DECIMAL" />
    <result column="PERIOD_UNVERIFY_PRE_AMOUNT" property="periodUnverifyPreAmount" jdbcType="DECIMAL" />
    <result column="PERIOD_UNVERIFY_ADV_AMOUNT" property="periodUnverifyAdvAmount" jdbcType="DECIMAL" />
    <result column="PERIOD_BEGIN_DATE" property="periodBeginDate" jdbcType="TIMESTAMP" />
    <result column="PERIOD_END_DATE" property="periodEndDate" jdbcType="TIMESTAMP" />
    <result column="UNPAID_AMOUNT" property="unpaidAmount" jdbcType="DECIMAL" />
    <result column="SETTLE_NUM" property="settleNum" jdbcType="DECIMAL" />
    <result column="CREATE_USER_CODE" property="createUserCode" jdbcType="VARCHAR" />
    <result column="CREATE_USER_NAME" property="createUserName" jdbcType="VARCHAR" />
    <result column="BUSINESS_DATE" property="businessDate" jdbcType="TIMESTAMP" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="MODIFY_USER_CODE" property="modifyUserCode" jdbcType="VARCHAR" />
    <result column="MODIFY_USER_NAME" property="modifyUserName" jdbcType="VARCHAR" />
    <result column="CONFIRM_USER_CODE" property="confirmUserCode" jdbcType="VARCHAR" />
    <result column="CONFIRM_USER_NAME" property="confirmUserName" jdbcType="VARCHAR" />
    <result column="CONFIRM_TIME" property="confirmTime" jdbcType="TIMESTAMP" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="UNLOCK_TIME" property="unlockTime" jdbcType="TIMESTAMP" />
    <result column="CONFIRM_STATUS" property="confirmStatus" jdbcType="VARCHAR" />
    <result column="COMPANY_ACCOUNT_BANK_NO" property="companyAccountBankNo" jdbcType="VARCHAR" />
    <result column="ACCOUNT_USER_NAME" property="accountUserName" jdbcType="VARCHAR" />
    <result column="BANK_BRANCH_NAME" property="bankBranchName" jdbcType="VARCHAR" />
    <result column="NOTES" property="notes" jdbcType="VARCHAR" />
    <result column="VERSION_NO" property="versionNo" jdbcType="DECIMAL" />
    <result column="INVOICE_STATUS" property="invoiceStatus" jdbcType="VARCHAR" />
    <result column="APPLY_INVOICE" property="applyInvoice" jdbcType="VARCHAR" />
    <result column="UNIFIED_SETTLEMENT" property="unifiedSettlement" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, STATEMENT_BILL_NO, CREATE_ORG_CODE, CREATE_ORG_NAME, COMPANY_CODE, COMPANY_NAME, 
    UNIFIED_CODE, CUSTOMER_CODE, CUSTOMER_NAME, BILL_TYPE, BEGIN_PERIOD_AMOUNT/100 BEGIN_PERIOD_AMOUNT, 
    BEGIN_PERIOD_REC_AMOUNT/100 BEGIN_PERIOD_REC_AMOUNT, BEGIN_PERIOD_PAY_AMOUNT/100 BEGIN_PERIOD_PAY_AMOUNT, 
    BEGIN_PERIOD_PRE_AMOUNT/100 BEGIN_PERIOD_PRE_AMOUNT, BEGIN_PERIOD_ADV_AMOUNT/100 BEGIN_PERIOD_ADV_AMOUNT, 
    PERIOD_AMOUNT/100 PERIOD_AMOUNT, PERIOD_REC_AMOUNT/100 PERIOD_REC_AMOUNT, PERIOD_PAY_AMOUNT/100 PERIOD_PAY_AMOUNT, 
    PERIOD_PRE_AMOUNT/100 PERIOD_PRE_AMOUNT, PERIOD_ADV_AMOUNT/100 PERIOD_ADV_AMOUNT, PERIOD_UNVERIFY_REC_AMOUNT/100 PERIOD_UNVERIFY_REC_AMOUNT, 
    PERIOD_UNVERIFY_PAY_AMOUNT/100 PERIOD_UNVERIFY_PAY_AMOUNT, PERIOD_UNVERIFY_PRE_AMOUNT/100 PERIOD_UNVERIFY_PRE_AMOUNT, 
    PERIOD_UNVERIFY_ADV_AMOUNT/100 PERIOD_UNVERIFY_ADV_AMOUNT, PERIOD_BEGIN_DATE, PERIOD_END_DATE, 
    UNPAID_AMOUNT/100 UNPAID_AMOUNT, SETTLE_NUM, CREATE_USER_CODE, 
    CREATE_USER_NAME, BUSINESS_DATE, CREATE_TIME, MODIFY_USER_CODE, MODIFY_USER_NAME, 
    CONFIRM_USER_CODE, CONFIRM_USER_NAME, CONFIRM_TIME, MODIFY_TIME, UNLOCK_TIME, CONFIRM_STATUS, 
    COMPANY_ACCOUNT_BANK_NO, ACCOUNT_USER_NAME, BANK_BRANCH_NAME, NOTES, VERSION_NO,INVOICE_STATUS,
    APPLY_INVOICE,UNIFIED_SETTLEMENT
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from STL.T_STL_STATEMENT_OF_ACCOUNT
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <insert id="insert" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.StatementOfAccountEntity" >
    insert into STL.T_STL_STATEMENT_OF_ACCOUNT (ID, STATEMENT_BILL_NO, CREATE_ORG_CODE, 
      CREATE_ORG_NAME, COMPANY_CODE, COMPANY_NAME, 
      UNIFIED_CODE, CUSTOMER_CODE, CUSTOMER_NAME, 
      BILL_TYPE, BEGIN_PERIOD_AMOUNT, BEGIN_PERIOD_REC_AMOUNT, 
      BEGIN_PERIOD_PAY_AMOUNT, BEGIN_PERIOD_PRE_AMOUNT, 
      BEGIN_PERIOD_ADV_AMOUNT, PERIOD_AMOUNT, PERIOD_REC_AMOUNT, 
      PERIOD_PAY_AMOUNT, PERIOD_PRE_AMOUNT, PERIOD_ADV_AMOUNT, 
      PERIOD_UNVERIFY_REC_AMOUNT, PERIOD_UNVERIFY_PAY_AMOUNT, 
      PERIOD_UNVERIFY_PRE_AMOUNT, PERIOD_UNVERIFY_ADV_AMOUNT, 
      PERIOD_BEGIN_DATE, PERIOD_END_DATE, UNPAID_AMOUNT, 
      SETTLE_NUM, CREATE_USER_CODE, CREATE_USER_NAME, 
      BUSINESS_DATE, CREATE_TIME, MODIFY_USER_CODE, 
      MODIFY_USER_NAME, CONFIRM_USER_CODE, CONFIRM_USER_NAME, 
      CONFIRM_TIME, MODIFY_TIME, UNLOCK_TIME, 
      CONFIRM_STATUS, COMPANY_ACCOUNT_BANK_NO, ACCOUNT_USER_NAME, 
      BANK_BRANCH_NAME, NOTES, VERSION_NO, UNIFIED_SETTLEMENT
      )
    values (#{id,jdbcType=VARCHAR}, #{statementBillNo,jdbcType=VARCHAR}, #{createOrgCode,jdbcType=VARCHAR}, 
      #{createOrgName,jdbcType=VARCHAR}, #{companyCode,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{unifiedCode,jdbcType=VARCHAR}, #{customerCode,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}, 
      #{billType,jdbcType=VARCHAR}, #{beginPeriodAmount,jdbcType=DECIMAL}*100, #{beginPeriodRecAmount,jdbcType=DECIMAL}*100, 
      #{beginPeriodPayAmount,jdbcType=DECIMAL}*100, #{beginPeriodPreAmount,jdbcType=DECIMAL}*100, 
      #{beginPeriodAdvAmount,jdbcType=DECIMAL}*100, #{periodAmount,jdbcType=DECIMAL}*100, #{periodRecAmount,jdbcType=DECIMAL}*100, 
      #{periodPayAmount,jdbcType=DECIMAL}*100, #{periodPreAmount,jdbcType=DECIMAL}*100, #{periodAdvAmount,jdbcType=DECIMAL}*100, 
      #{periodUnverifyRecAmount,jdbcType=DECIMAL}*100, #{periodUnverifyPayAmount,jdbcType=DECIMAL}*100, 
      #{periodUnverifyPreAmount,jdbcType=DECIMAL}*100, #{periodUnverifyAdvAmount,jdbcType=DECIMAL}*100, 
      #{periodBeginDate,jdbcType=TIMESTAMP}, #{periodEndDate,jdbcType=TIMESTAMP}, #{unpaidAmount,jdbcType=DECIMAL}*100, 
      #{settleNum,jdbcType=DECIMAL}, #{createUserCode,jdbcType=VARCHAR}, #{createUserName,jdbcType=VARCHAR}, 
      #{businessDate,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{modifyUserCode,jdbcType=VARCHAR}, 
      #{modifyUserName,jdbcType=VARCHAR}, #{confirmUserCode,jdbcType=VARCHAR}, #{confirmUserName,jdbcType=VARCHAR}, 
      #{confirmTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{unlockTime,jdbcType=TIMESTAMP}, 
      #{confirmStatus,jdbcType=VARCHAR}, #{companyAccountBankNo,jdbcType=VARCHAR}, #{accountUserName,jdbcType=VARCHAR}, 
      #{bankBranchName,jdbcType=VARCHAR}, #{notes,jdbcType=VARCHAR}, #{versionNo,jdbcType=DECIMAL}, #{unifiedSettlement,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.StatementOfAccountEntity" >
    update STL.T_STL_STATEMENT_OF_ACCOUNT
    set STATEMENT_BILL_NO = #{statementBillNo,jdbcType=VARCHAR},
      CREATE_ORG_CODE = #{createOrgCode,jdbcType=VARCHAR},
      CREATE_ORG_NAME = #{createOrgName,jdbcType=VARCHAR},
      COMPANY_CODE = #{companyCode,jdbcType=VARCHAR},
      COMPANY_NAME = #{companyName,jdbcType=VARCHAR},
      UNIFIED_CODE = #{unifiedCode,jdbcType=VARCHAR},
      CUSTOMER_CODE = #{customerCode,jdbcType=VARCHAR},
      CUSTOMER_NAME = #{customerName,jdbcType=VARCHAR},
      BILL_TYPE = #{billType,jdbcType=VARCHAR},
      BEGIN_PERIOD_AMOUNT = #{beginPeriodAmount,jdbcType=DECIMAL}*100,
      BEGIN_PERIOD_REC_AMOUNT = #{beginPeriodRecAmount,jdbcType=DECIMAL}*100,
      BEGIN_PERIOD_PAY_AMOUNT = #{beginPeriodPayAmount,jdbcType=DECIMAL}*100,
      BEGIN_PERIOD_PRE_AMOUNT = #{beginPeriodPreAmount,jdbcType=DECIMAL}*100,
      BEGIN_PERIOD_ADV_AMOUNT = #{beginPeriodAdvAmount,jdbcType=DECIMAL}*100,
      PERIOD_AMOUNT = #{periodAmount,jdbcType=DECIMAL}*100,
      PERIOD_REC_AMOUNT = #{periodRecAmount,jdbcType=DECIMAL}*100,
      PERIOD_PAY_AMOUNT = #{periodPayAmount,jdbcType=DECIMAL}*100,
      PERIOD_PRE_AMOUNT = #{periodPreAmount,jdbcType=DECIMAL}*100,
      PERIOD_ADV_AMOUNT = #{periodAdvAmount,jdbcType=DECIMAL}*100,
      PERIOD_UNVERIFY_REC_AMOUNT = #{periodUnverifyRecAmount,jdbcType=DECIMAL}*100,
      PERIOD_UNVERIFY_PAY_AMOUNT = #{periodUnverifyPayAmount,jdbcType=DECIMAL}*100,
      PERIOD_UNVERIFY_PRE_AMOUNT = #{periodUnverifyPreAmount,jdbcType=DECIMAL}*100,
      PERIOD_UNVERIFY_ADV_AMOUNT = #{periodUnverifyAdvAmount,jdbcType=DECIMAL}*100,
      PERIOD_BEGIN_DATE = #{periodBeginDate,jdbcType=TIMESTAMP},
      PERIOD_END_DATE = #{periodEndDate,jdbcType=TIMESTAMP},
      UNPAID_AMOUNT = #{unpaidAmount,jdbcType=DECIMAL}*100,
      SETTLE_NUM = #{settleNum,jdbcType=DECIMAL},
      CREATE_USER_CODE = #{createUserCode,jdbcType=VARCHAR},
      CREATE_USER_NAME = #{createUserName,jdbcType=VARCHAR},
      BUSINESS_DATE = #{businessDate,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      MODIFY_USER_CODE = #{modifyUserCode,jdbcType=VARCHAR},
      MODIFY_USER_NAME = #{modifyUserName,jdbcType=VARCHAR},
      CONFIRM_USER_CODE = #{confirmUserCode,jdbcType=VARCHAR},
      CONFIRM_USER_NAME = #{confirmUserName,jdbcType=VARCHAR},
      CONFIRM_TIME = #{confirmTime,jdbcType=TIMESTAMP},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      UNLOCK_TIME = #{unlockTime,jdbcType=TIMESTAMP},
      CONFIRM_STATUS = #{confirmStatus,jdbcType=VARCHAR},
      COMPANY_ACCOUNT_BANK_NO = #{companyAccountBankNo,jdbcType=VARCHAR},
      ACCOUNT_USER_NAME = #{accountUserName,jdbcType=VARCHAR},
      BANK_BRANCH_NAME = #{bankBranchName,jdbcType=VARCHAR},
      NOTES = #{notes,jdbcType=VARCHAR},
      VERSION_NO = #{versionNo,jdbcType=DECIMAL}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
   <!-- 根据日期查询查询 对账单信息 -->
   <select id="selectByDate" resultMap="BaseResultMap"
	parameterType="com.deppon.foss.module.settlement.common.api.shared.dto.StatementOfAccountUpdateDto">
	select
	<include refid="Base_Column_List" />
	from STL.T_STL_STATEMENT_OF_ACCOUNT AC, BSE.MV_BAS_USER_ORG_AUTH_VIEW V
	<where>
		V.ORG_CODE = AC.CREATE_ORG_CODE
		AND V.EMP_CODE =
		#{empCode,jdbcType=VARCHAR}
		<if test="orgCodeList!=null and orgCodeList.size>0">
			AND AC.CREATE_ORG_CODE IN
			<foreach collection="orgCodeList" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="orgCodeList==null or orgCodeList.size==0">
			and AC.CREATE_ORG_CODE = #{orgCode,jdbcType=VARCHAR}
		</if>
 	  <![CDATA[AND AC.BUSINESS_DATE>=#{periodBeginDate} AND AC.BUSINESS_DATE<#{periodEndDate}]]>
      <![CDATA[AND (AC.UNLOCK_TIME IS NULL OR AC.UNLOCK_TIME<sysdate)]]>
		<if test="customerCode!=null and customerCode!='' ">
			and AC.CUSTOMER_CODE = #{customerCode,jdbcType=VARCHAR}
		</if>
		<if test="confirmStatus!=null and confirmStatus!=''">
			and AC.CONFIRM_STATUS = #{confirmStatus,jdbcType=VARCHAR}
		</if>
		<if
			test="settleStatus!=null and settleStatus!='' and settleStatus==statementSettleStatus">
			and AC.UNPAID_AMOUNT = 0
		</if>
		<if
			test="settleStatus!=null and settleStatus!='' and settleStatus==statementUnSettleStatus">
			and AC.UNPAID_AMOUNT !=0
		</if>
		<if test="invoiceStatus != null and invoiceStatus != ''">
		    and AC.INVOICE_STATUS = #{invoiceStatus,JDBCtYPE=VARCHAR}
		</if>
		<if test="applyInvoice != null and applyInvoice != ''">
		    and AC.APPLY_INVOICE = #{applyInvoice,JDBCtYPE=VARCHAR}
		</if>
		<!-- 269044-DN201510190015对账单重构 -->
		<![CDATA[AND (AC.CUSTOMER_TYPE IS NULL OR AC.CUSTOMER_TYPE ='' OR AC.CUSTOMER_TYPE <> 'LC')]]>
	</where>
	</select>
	
	<resultMap type="com.deppon.foss.module.settlement.common.api.shared.dto.StatementOfAccountQueryResultDto" id="DtoResultMap">
    	<result column="TOTALCOUNT" property="totalCount" jdbcType="DECIMAL" />
    	<result column="UNPAIDAMOUNT" property="unPaidAmount" jdbcType="DECIMAL" />
  	</resultMap>
	
	<select id="countSelectByDate" resultMap="DtoResultMap"	parameterType="com.deppon.foss.module.settlement.common.api.shared.dto.StatementOfAccountUpdateDto">
	select COUNT(AC.ID) TOTALCOUNT,SUM(AC.UNPAID_AMOUNT/100) UNPAIDAMOUNT
	from STL.T_STL_STATEMENT_OF_ACCOUNT AC, BSE.MV_BAS_USER_ORG_AUTH_VIEW V
	<where>
		V.ORG_CODE = AC.CREATE_ORG_CODE
		AND V.EMP_CODE =
		#{empCode,jdbcType=VARCHAR}
		<if test="orgCodeList!=null and orgCodeList.size>0">
			AND AC.CREATE_ORG_CODE IN
			<foreach collection="orgCodeList" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="orgCodeList==null or orgCodeList.size==0">
			and AC.CREATE_ORG_CODE = #{orgCode,jdbcType=VARCHAR}
		</if>
 	  <![CDATA[AND AC.BUSINESS_DATE>=#{periodBeginDate} AND AC.BUSINESS_DATE<#{periodEndDate}]]>
      <![CDATA[AND (AC.UNLOCK_TIME IS NULL OR AC.UNLOCK_TIME<sysdate)]]>
		<if test="customerCode!=null and customerCode!='' ">
			and AC.CUSTOMER_CODE = #{customerCode,jdbcType=VARCHAR}
		</if>
		<if test="confirmStatus!=null and confirmStatus!=''">
			and AC.CONFIRM_STATUS = #{confirmStatus,jdbcType=VARCHAR}
		</if>
		<if
			test="settleStatus!=null and settleStatus!='' and settleStatus==statementSettleStatus">
			and AC.UNPAID_AMOUNT = 0
		</if>
		<if
			test="settleStatus!=null and settleStatus!='' and settleStatus==statementUnSettleStatus">
			and AC.UNPAID_AMOUNT !=0
		</if>
		<if test="invoiceStatus != null and invoiceStatus != ''">
		    and AC.INVOICE_STATUS = #{invoiceStatus,JDBCtYPE=VARCHAR}
		</if>
		<if test="applyInvoice != null and applyInvoice != ''">
		    and AC.APPLY_INVOICE = #{applyInvoice,JDBCtYPE=VARCHAR}
		</if>
		<!-- 269044-DN201510190015对账单重构 -->
		<![CDATA[AND (AC.CUSTOMER_TYPE IS NULL OR AC.CUSTOMER_TYPE ='' OR AC.CUSTOMER_TYPE <> 'LC')]]>
	</where>
	</select>
	
   <!-- 根据对账单单号集合查询对账单(只查询本部门的对账单信息，供按对账单单号、明细单号查询查询对账单使用) -->
  <select id="selectCurrentByStatementNos" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from STL.T_STL_STATEMENT_OF_ACCOUNT
    <where>
       STATEMENT_BILL_NO IN 
      <foreach collection="statementsNos" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
      and CREATE_ORG_CODE = #{orgCode,jdbcType=VARCHAR}
      <!-- 269044-DN201510190015对账单重构 -->
	  <![CDATA[AND (CUSTOMER_TYPE IS NULL OR CUSTOMER_TYPE ='' OR CUSTOMER_TYPE <> 'LC')]]>
    </where>
   </select>
   <!-- 根据对账单单号集合查询对账单 （查询未被官网锁定的已确认或未确认或全部对账单信息）-->
  <select id="selectByStatementNos" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from STL.T_STL_STATEMENT_OF_ACCOUNT
    <where>
     <if test="confirmStatus!=null and confirmStatus!=''">
       CONFIRM_STATUS = #{confirmStatus,jdbcType=VARCHAR} and
     </if>
       STATEMENT_BILL_NO IN 
      <foreach collection="statementsNos" index="index" item="item" open="(" separator="," close=")">
        #{item}
      </foreach>
       <![CDATA[AND (UNLOCK_TIME IS NULL OR UNLOCK_TIME<sysdate)]]> 
    </where>
   </select>
   <!-- 根据对账单单号查询对账单信息 -->
   <select id="selectByStatementNo" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from STL.T_STL_STATEMENT_OF_ACCOUNT
    <where>
       STATEMENT_BILL_NO=#{statementNo,jdbcType=VARCHAR}
    </where>
   </select>
   <!-- 新增对账单明细时，修改对账单信息 -->
   <update id="updateByAddDetail" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.StatementOfAccountEntity" >
    update STL.T_STL_STATEMENT_OF_ACCOUNT
    set 
      BEGIN_PERIOD_AMOUNT = #{beginPeriodAmount,jdbcType=DECIMAL}*100,
      BEGIN_PERIOD_REC_AMOUNT = #{beginPeriodRecAmount,jdbcType=DECIMAL}*100,
      BEGIN_PERIOD_PAY_AMOUNT = #{beginPeriodPayAmount,jdbcType=DECIMAL}*100,
      BEGIN_PERIOD_PRE_AMOUNT = #{beginPeriodPreAmount,jdbcType=DECIMAL}*100,
      BEGIN_PERIOD_ADV_AMOUNT = #{beginPeriodAdvAmount,jdbcType=DECIMAL}*100,
      PERIOD_AMOUNT = #{periodAmount,jdbcType=DECIMAL}*100,
      PERIOD_REC_AMOUNT = #{periodRecAmount,jdbcType=DECIMAL}*100,
      PERIOD_PAY_AMOUNT = #{periodPayAmount,jdbcType=DECIMAL}*100,
      PERIOD_PRE_AMOUNT = #{periodPreAmount,jdbcType=DECIMAL}*100,
      PERIOD_ADV_AMOUNT = #{periodAdvAmount,jdbcType=DECIMAL}*100,
      PERIOD_UNVERIFY_REC_AMOUNT = #{periodUnverifyRecAmount,jdbcType=DECIMAL}*100,
      PERIOD_UNVERIFY_PAY_AMOUNT = #{periodUnverifyPayAmount,jdbcType=DECIMAL}*100,
      PERIOD_UNVERIFY_PRE_AMOUNT = #{periodUnverifyPreAmount,jdbcType=DECIMAL}*100,
      PERIOD_UNVERIFY_ADV_AMOUNT = #{periodUnverifyAdvAmount,jdbcType=DECIMAL}*100,
      UNPAID_AMOUNT = #{unpaidAmount,jdbcType=DECIMAL}*100,
      MODIFY_USER_CODE = #{modifyUserCode,jdbcType=VARCHAR},
      MODIFY_USER_NAME = #{modifyUserName,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      VERSION_NO = VERSION_NO+1
    where ID = #{id,jdbcType=VARCHAR} and 
    VERSION_NO = #{versionNo,jdbcType=DECIMAL}
    </update>
    <!-- 删除对账单明细时，修改对账单信息 -->
    <update id="updateByDeleteDetail" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.StatementOfAccountEntity" >
     update STL.T_STL_STATEMENT_OF_ACCOUNT
     set 
      BEGIN_PERIOD_AMOUNT = #{beginPeriodAmount,jdbcType=DECIMAL}*100,
      BEGIN_PERIOD_REC_AMOUNT = #{beginPeriodRecAmount,jdbcType=DECIMAL}*100,
      BEGIN_PERIOD_PAY_AMOUNT = #{beginPeriodPayAmount,jdbcType=DECIMAL}*100,
      BEGIN_PERIOD_PRE_AMOUNT = #{beginPeriodPreAmount,jdbcType=DECIMAL}*100,
      BEGIN_PERIOD_ADV_AMOUNT = #{beginPeriodAdvAmount,jdbcType=DECIMAL}*100,
      PERIOD_AMOUNT = #{periodAmount,jdbcType=DECIMAL}*100,
      PERIOD_REC_AMOUNT = #{periodRecAmount,jdbcType=DECIMAL}*100,
      PERIOD_PAY_AMOUNT = #{periodPayAmount,jdbcType=DECIMAL}*100,
      PERIOD_PRE_AMOUNT = #{periodPreAmount,jdbcType=DECIMAL}*100,
      PERIOD_ADV_AMOUNT = #{periodAdvAmount,jdbcType=DECIMAL}*100,
      PERIOD_UNVERIFY_REC_AMOUNT = #{periodUnverifyRecAmount,jdbcType=DECIMAL}*100,
      PERIOD_UNVERIFY_PAY_AMOUNT = #{periodUnverifyPayAmount,jdbcType=DECIMAL}*100,
      PERIOD_UNVERIFY_PRE_AMOUNT = #{periodUnverifyPreAmount,jdbcType=DECIMAL}*100,
      PERIOD_UNVERIFY_ADV_AMOUNT = #{periodUnverifyAdvAmount,jdbcType=DECIMAL}*100,
      UNPAID_AMOUNT = #{unpaidAmount,jdbcType=DECIMAL}*100,
      MODIFY_USER_CODE = #{modifyUserCode,jdbcType=VARCHAR},
      MODIFY_USER_NAME = #{modifyUserName,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      VERSION_NO = VERSION_NO+1
     where ID = #{id,jdbcType=VARCHAR} and 
     VERSION_NO = #{versionNo,jdbcType=DECIMAL}
    </update>
    <!-- 修改对账单的确认状态 -->
    <update id="updateByConfirmStatus" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.StatementOfAccountEntity" >
     update STL.T_STL_STATEMENT_OF_ACCOUNT
     set 
      CONFIRM_STATUS = #{confirmStatus,jdbcType=VARCHAR},
      INVOICE_STATUS = #{invoiceStatus,jdbcType=VARCHAR},
      APPLY_INVOICE = #{applyInvoice,jdbcType=VARCHAR},
      CONFIRM_USER_CODE = #{confirmUserCode,jdbcType=VARCHAR},
      CONFIRM_USER_NAME = #{confirmUserName,jdbcType=VARCHAR},
      CONFIRM_TIME = #{confirmTime,jdbcType=TIMESTAMP},
      MODIFY_USER_CODE = #{modifyUserCode,jdbcType=VARCHAR},
      MODIFY_USER_NAME = #{modifyUserName,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      VERSION_NO = VERSION_NO+1
     where ID = #{id,jdbcType=VARCHAR}  and 
     VERSION_NO = #{versionNo,jdbcType=DECIMAL}
    </update>
    <!-- 对账单核销操作时，修改对账单的本期未还金额 -->
    <update id="updateByRealseDetail" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.StatementOfAccountEntity" >
     update STL.T_STL_STATEMENT_OF_ACCOUNT
     set 
      UNPAID_AMOUNT = #{unpaidAmount,jdbcType=DECIMAL}*100,
      MODIFY_USER_CODE = #{modifyUserCode,jdbcType=VARCHAR},
      MODIFY_USER_NAME = #{modifyUserName,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      SETTLE_NUM = #{settleNum,jdbcType=DECIMAL},
      NOTES = #{notes,jdbcType=VARCHAR},
      VERSION_NO = VERSION_NO+1
     where ID = #{id,jdbcType=VARCHAR}  and 
     VERSION_NO = #{versionNo,jdbcType=DECIMAL}
    </update>
    <!-- 对账单明细反核销操作时，修改对账单的金额 -->
    <update id="updateByReverseWriteoffReleaseDetail" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.StatementOfAccountEntity" >
     update STL.T_STL_STATEMENT_OF_ACCOUNT
     set 
      PERIOD_AMOUNT = #{periodAmount,jdbcType=DECIMAL}*100,
      PERIOD_REC_AMOUNT = #{periodRecAmount,jdbcType=DECIMAL}*100,
      UNPAID_AMOUNT = #{unpaidAmount,jdbcType=DECIMAL}*100,
      MODIFY_USER_CODE = #{modifyUserCode,jdbcType=VARCHAR},
      MODIFY_USER_NAME = #{modifyUserName,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      SETTLE_NUM = #{settleNum,jdbcType=DECIMAL},
      VERSION_NO = VERSION_NO+1
     where ID = #{id,jdbcType=VARCHAR}  and 
     VERSION_NO = #{versionNo,jdbcType=DECIMAL}
    </update>
    <!-- 根据对账单单号和对账单版本号查询对账单信息 -->
   <select id="selectByStatementNoAndVersion" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from STL.T_STL_STATEMENT_OF_ACCOUNT
    <where>
       STATEMENT_BILL_NO=#{statementNo,jdbcType=VARCHAR}
       AND VERSION_NO = #{versionNo,jdbcType=DECIMAL}
    </where>
   </select>
    <!-- 对账单明细在其他地方发生变化时，修改对账单汇总信息 -->
    <update id="updateByChangeDetail" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.StatementOfAccountEntity" >
     update STL.T_STL_STATEMENT_OF_ACCOUNT
     set 
      UNPAID_AMOUNT = #{unpaidAmount,jdbcType=DECIMAL}*100,
      PERIOD_AMOUNT = #{periodAmount,jdbcType=DECIMAL}*100,
      PERIOD_REC_AMOUNT = #{periodRecAmount,jdbcType=DECIMAL}*100,
      PERIOD_PAY_AMOUNT = #{periodPayAmount,jdbcType=DECIMAL}*100,
      PERIOD_PRE_AMOUNT = #{periodPreAmount,jdbcType=DECIMAL}*100,
      PERIOD_ADV_AMOUNT = #{periodAdvAmount,jdbcType=DECIMAL}*100,
      PERIOD_UNVERIFY_REC_AMOUNT = #{periodUnverifyRecAmount,jdbcType=DECIMAL}*100,
      PERIOD_UNVERIFY_PAY_AMOUNT = #{periodUnverifyPayAmount,jdbcType=DECIMAL}*100,
      PERIOD_UNVERIFY_PRE_AMOUNT = #{periodUnverifyPreAmount,jdbcType=DECIMAL}*100,
      PERIOD_UNVERIFY_ADV_AMOUNT = #{periodUnverifyAdvAmount,jdbcType=DECIMAL}*100,
      MODIFY_USER_CODE = #{modifyUserCode,jdbcType=VARCHAR},
      MODIFY_USER_NAME = #{modifyUserName,jdbcType=VARCHAR},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      VERSION_NO = VERSION_NO+1
     where ID = #{id,jdbcType=VARCHAR}  and 
     VERSION_NO = #{versionNo,jdbcType=DECIMAL}
    </update>
</mapper>