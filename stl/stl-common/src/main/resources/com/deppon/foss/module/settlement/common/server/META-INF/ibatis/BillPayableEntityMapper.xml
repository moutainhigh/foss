<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="foss.stl.BillPayableEntityDao">
	<resultMap id="BaseResultMap"
		type="com.deppon.foss.module.settlement.common.api.shared.domain.BillPayableEntity">
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="PAYABLE_NO" property="payableNo" jdbcType="VARCHAR" />
    <result column="WAYBILL_NO" property="waybillNo" jdbcType="VARCHAR" />
    <result column="WAYBILL_ID" property="waybillId" jdbcType="VARCHAR" />
    <result column="PAYMENT_NO" property="paymentNo" jdbcType="VARCHAR" />
    <result column="CREATE_TYPE" property="createType" jdbcType="VARCHAR" />
    <result column="BILL_TYPE" property="billType" jdbcType="VARCHAR" />
		<result column="SOURCE_BILL_NO" property="sourceBillNo"
			jdbcType="VARCHAR" />
		<result column="SOURCE_BILL_TYPE" property="sourceBillType"
			jdbcType="VARCHAR" />
    <result column="COD_TYPE" property="codType" jdbcType="VARCHAR" />
		<result column="PAYABLE_ORG_CODE" property="payableOrgCode"
			jdbcType="VARCHAR" />
		<result column="PAYABLE_ORG_NAME" property="payableOrgName"
			jdbcType="VARCHAR" />
		<result column="PAYABLE_COM_CODE" property="payableComCode"
			jdbcType="VARCHAR" />
		<result column="PAYABLE_COM_NAME" property="payableComName"
			jdbcType="VARCHAR" />
    <result column="ORIG_ORG_CODE" property="origOrgCode" jdbcType="VARCHAR" />
    <result column="ORIG_ORG_NAME" property="origOrgName" jdbcType="VARCHAR" />
    <result column="DEST_ORG_CODE" property="destOrgCode" jdbcType="VARCHAR" />
    <result column="DEST_ORG_NAME" property="destOrgName" jdbcType="VARCHAR" />
		<result column="CUSTOMER_CODE" property="customerCode"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_NAME" property="customerName"
			jdbcType="VARCHAR" />
    <result column="AMOUNT" property="amount" jdbcType="DECIMAL" />
		<result column="VERIFY_AMOUNT" property="verifyAmount"
			jdbcType="DECIMAL" />
		<result column="UNVERIFY_AMOUNT" property="unverifyAmount"
			jdbcType="DECIMAL" />
		<result column="CURRENCY_CODE" property="currencyCode"
			jdbcType="VARCHAR" />
    <result column="PRODUCT_CODE" property="productCode" jdbcType="VARCHAR" />
    <result column="PRODUCT_ID" property="productId" jdbcType="VARCHAR" />
    <result column="ACCOUNT_DATE" property="accountDate" jdbcType="TIMESTAMP" />
		<result column="BUSINESS_DATE" property="businessDate"
			jdbcType="TIMESTAMP" />
    <result column="SIGN_DATE" property="signDate" jdbcType="TIMESTAMP" />
		<result column="EFFECTIVE_DATE" property="effectiveDate"
			jdbcType="TIMESTAMP" />
		<result column="CREATE_USER_NAME" property="createUserName"
			jdbcType="VARCHAR" />
		<result column="CREATE_USER_CODE" property="createUserCode"
			jdbcType="VARCHAR" />
		<result column="CREATE_ORG_CODE" property="createOrgCode"
			jdbcType="VARCHAR" />
		<result column="CREATE_ORG_NAME" property="createOrgName"
			jdbcType="VARCHAR" />
    <result column="ACTIVE" property="active" jdbcType="CHAR" />
    <result column="IS_RED_BACK" property="isRedBack" jdbcType="CHAR" />
    <result column="IS_INIT" property="isInit" jdbcType="CHAR" />
    <result column="VERSION_NO" property="versionNo" jdbcType="DECIMAL" />
		<result column="EFFECTIVE_STATUS" property="effectiveStatus"
			jdbcType="CHAR" />
		<result column="EFFECTIVE_USER_NAME" property="effectiveUserName"
			jdbcType="VARCHAR" />
		<result column="EFFECTIVE_USER_CODE" property="effectiveUserCode"
			jdbcType="VARCHAR" />
		<result column="FROZEN_STATUS" property="frozenStatus"
			jdbcType="CHAR" />
    <result column="FROZEN_TIME" property="frozenTime" jdbcType="TIMESTAMP" />
		<result column="FROZEN_USER_NAME" property="frozenUserName"
			jdbcType="VARCHAR" />
		<result column="FROZEN_USER_CODE" property="frozenUserCode"
			jdbcType="VARCHAR" />
    <result column="PAY_STATUS" property="payStatus" jdbcType="CHAR" />
		<result column="STATEMENT_BILL_NO" property="statementBillNo"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_CONTACT" property="customerContact"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_CONTACT_NAME" property="customerContactName"
			jdbcType="VARCHAR" />
		<result column="CUSTOMER_PHONE" property="customerPhone"
			jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="MODIFY_TIME" property="modifyTime" jdbcType="TIMESTAMP" />
		<result column="MODIFY_USER_NAME" property="modifyUserName"
			jdbcType="VARCHAR" />
		<result column="MODIFY_USER_CODE" property="modifyUserCode"
			jdbcType="VARCHAR" />
    <result column="WORKFLOW_NO" property="workflowNo" jdbcType="VARCHAR" />
		<result column="LGDRIVER_CODE" property="lgdriverCode"
			jdbcType="VARCHAR" />
		<result column="LGDRIVER_NAME" property="lgdriverName"
			jdbcType="VARCHAR" />
    <result column="PAYER_TYPE" property="payerType" jdbcType="VARCHAR" />
    <result column="PAYABLE_TYPE" property="payableType" jdbcType="VARCHAR" />
    <result column="DELIVER_FEE" property="deliverFee" jdbcType="DECIMAL" />
    <result column="OUTGOING_FEE" property="outgoingFee" jdbcType="DECIMAL" />
		<result column="AUDIT_USER_CODE" property="auditUserCode"
			jdbcType="VARCHAR" />
		<result column="AUDIT_USER_NAME" property="auditUserName"
			jdbcType="VARCHAR" />
    <result column="AUDIT_DATE" property="auditDate" jdbcType="TIMESTAMP" />
		<result column="APPROVE_STATUS" property="approveStatus"
			jdbcType="VARCHAR" />
    <result column="NOTES" property="notes" jdbcType="VARCHAR" />
    <result column="PAYEE_NAME" property="payeeName" jdbcType="VARCHAR" />
    <result column="BANK_HQ_CODE" property="bankHqCode" jdbcType="VARCHAR" />
    <result column="BANK_HQ_NAME" property="bankHqName" jdbcType="VARCHAR" />
    <result column="ACCOUNT_NO" property="accountNo" jdbcType="VARCHAR" />
		<result column="PROVINCE_CODE" property="provinceCode"
			jdbcType="VARCHAR" />
		<result column="PROVINCE_NAME" property="provinceName"
			jdbcType="VARCHAR" />
    <result column="CITY_CODE" property="cityCode" jdbcType="VARCHAR" />
    <result column="CITY_NAME" property="cityName" jdbcType="VARCHAR" />
		<result column="BANK_BRANCH_CODE" property="bankBranchCode"
			jdbcType="VARCHAR" />
		<result column="BANK_BRANCH_NAME" property="bankBranchName"
			jdbcType="VARCHAR" />
		<result column="PAYMENT_NOTES" property="paymentNotes"
			jdbcType="VARCHAR" />
		<result column="PAYMENT_AMOUNT" property="paymentAmount"
			jdbcType="DECIMAL" />
		<result column="LAST_PAYMENT_TIME" property="lastPaymentTime"
			jdbcType="TIMESTAMP" /><!-- 最后付款日期 -->
		<result column="PAYMENT_CATEGORIES" property="paymentCategories"
			jdbcType="VARCHAR" /><!-- 支付类别 -->
		<result column="IS_WRITEOFF" property="isWriteoff" jdbcType="CHAR" /><!-- 
			是否核销 -->
		<result column="ACCOUNT_TYPE" property="accountType" jdbcType="VARCHAR" /><!-- 
			账户类型 -->
		<result column="COD_AGENCY_FEE" property="codAgencyFee"
			jdbcType="DECIMAL" />
		<result column="EXTERNAL_INSURANCE_FEE" property="externalInsuranceFee"
			jdbcType="DECIMAL" />
		<result column="EXPRESS_ORIG_ORG_CODE" property="expressOrigOrgCode"
			jdbcType="VARCHAR" />
		<result column="EXPRESS_ORIG_ORG_NAME" property="expressOrigOrgName"
			jdbcType="VARCHAR" />
		<result column="EXPRESS_DEST_ORG_CODE" property="expressDestOrgCode"
			jdbcType="VARCHAR" />
		<result column="EXPRESS_DEST_ORG_NAME" property="expressDestOrgName"
			jdbcType="VARCHAR" />

		<result column="INVOICE_MARK" property="invoiceMark" jdbcType="VARCHAR" />
		<result column="COSTDEPT_CODE" property="costDeptCode"
			jdbcType="VARCHAR" />
		<result column="COSTDEPT_NAME" property="costDeptName"
			jdbcType="VARCHAR" />
		<result column="COST_DATE" property="costDate" jdbcType="TIMESTAMP" />
		<result column="VEHICLE_NO" property="vehicleNo" jdbcType="VARCHAR" />
		<result column="DRIVER_NAME" property="driverName" jdbcType="VARCHAR" />
		<result column="DRIVER_PHONE" property="driverPhone" jdbcType="VARCHAR" />
		<result column="RENTCAR_USE_TYPE" property="rentCarUseType"
			jdbcType="VARCHAR" />
    <result column="COST_TYPE" property="costType" jdbcType="VARCHAR" />
    <result column="VAT_INVOICE" property="vatInvoice" jdbcType="VARCHAR" />
		<result column="TAXPAYER_NUMBER" property="taxpayerNumber"
			jdbcType="VARCHAR" />
    <result column="TAX_AMOUNT" property="taxAmount" jdbcType="VARCHAR" />
    <result column="TAX" property="tax" jdbcType="VARCHAR" />
		<result column="BUSINESS_OF_DATE" property="businessOfDate"
			jdbcType="TIMESTAMP" />
		<result column="ACCRUED_STATE" property="accruedState"
			jdbcType="VARCHAR" />
		<result column="WITHHOLDING_STATUS" property="withholdingStatus"
			jdbcType="VARCHAR" />
		<result column="UNIFIED_SETTLEMENT" property="unifiedSettlement"
			jdbcType="VARCHAR" />
		<result column="CONTRACT_ORG_CODE" property="contractOrgCode"
			jdbcType="VARCHAR" />
		<result column="CONTRACT_ORG_NAME" property="contractOrgName"
			jdbcType="VARCHAR" />
		<result column="PAYMENT_WORKFLOW_NO" property="paymentWorkflowNo"
			jdbcType="VARCHAR" />
		<result column="PAYMENT_TRANSFER" property="paymentTransfer"
			jdbcType="VARCHAR" />
		<result column="CLAIMWAY" property="claimWay" jdbcType="VARCHAR" />
		<result column="EXPENSE_BEAR_CODE" property="expenseBearCode"
			jdbcType="VARCHAR" />
			<result column="FACTORING" property="factoring" jdbcType="CHAR" />
		<result column="FACTOR_BEGIN_TIME" property="factorBeginTime"
			jdbcType="TIMESTAMP" />
		<result column="FACTOR_END_TIME" property="factorEndTime"
			jdbcType="TIMESTAMP" />
		<result column="FACTOR_ACCOUNT" property="factorAccount"
			jdbcType="VARCHAR" />
		<result column="CUS_CODE" property="cusCode" jdbcType="VARCHAR" />
  </resultMap>

	<sql id="Base_Column_List">
		ID, PAYABLE_NO, WAYBILL_NO, WAYBILL_ID, PAYMENT_NO,
		CREATE_TYPE,
		BILL_TYPE, SOURCE_BILL_NO, SOURCE_BILL_TYPE,COD_TYPE,
		PAYABLE_ORG_CODE, PAYABLE_ORG_NAME, PAYABLE_COM_CODE,
		PAYABLE_COM_NAME, ORIG_ORG_CODE,
		ORIG_ORG_NAME, DEST_ORG_CODE,
		DEST_ORG_NAME, CUSTOMER_CODE, CUSTOMER_NAME,
		AMOUNT/100 AMOUNT,
		VERIFY_AMOUNT/100 VERIFY_AMOUNT, UNVERIFY_AMOUNT/100 UNVERIFY_AMOUNT,
		CURRENCY_CODE,PRODUCT_CODE,PRODUCT_ID, ACCOUNT_DATE, BUSINESS_DATE,
		SIGN_DATE,
		EFFECTIVE_DATE, CREATE_USER_NAME, CREATE_USER_CODE,
		CREATE_ORG_CODE, CREATE_ORG_NAME,
		ACTIVE, IS_RED_BACK, IS_INIT,
		VERSION_NO, EFFECTIVE_STATUS,
		EFFECTIVE_USER_NAME,
		EFFECTIVE_USER_CODE,
		FROZEN_STATUS, FROZEN_TIME, FROZEN_USER_NAME, FROZEN_USER_CODE,
		PAY_STATUS, STATEMENT_BILL_NO, CUSTOMER_CONTACT,
		CUSTOMER_CONTACT_NAME, CUSTOMER_PHONE, CREATE_TIME, MODIFY_TIME,
		MODIFY_USER_NAME, MODIFY_USER_CODE,
		WORKFLOW_NO, LGDRIVER_CODE,
		LGDRIVER_NAME, PAYER_TYPE, PAYABLE_TYPE,
		DELIVER_FEE/100 DELIVER_FEE,
		OUTGOING_FEE/100 OUTGOING_FEE, AUDIT_USER_CODE, AUDIT_USER_NAME,
		AUDIT_DATE,
		APPROVE_STATUS, NOTES
    ,PAYEE_NAME,BANK_HQ_CODE,BANK_HQ_NAME,ACCOUNT_NO,PROVINCE_CODE,PROVINCE_NAME,
		CITY_CODE,CITY_NAME,BANK_BRANCH_CODE,BANK_BRANCH_NAME,PAYMENT_NOTES,PAYMENT_AMOUNT/100
		PAYMENT_AMOUNT
    ,LAST_PAYMENT_TIME,PAYMENT_CATEGORIES,IS_WRITEOFF,ACCOUNT_TYPE,COD_AGENCY_FEE/100,EXTERNAL_INSURANCE_FEE/100,
    EXPRESS_ORIG_ORG_CODE,EXPRESS_ORIG_ORG_NAME,EXPRESS_DEST_ORG_CODE,EXPRESS_DEST_ORG_NAME,INVOICE_MARK,
		UNIFIED_SETTLEMENT,CONTRACT_ORG_CODE,CONTRACT_ORG_NAME,EXPENSE_BEAR_CODE,CLAIMWAY,FACTORING,FACTOR_BEGIN_TIME,
		FACTOR_END_TIME,FACTOR_ACCOUNT,CUS_CODE
  </sql>
	<sql id="Payment_Column_List">
		T.ID, T.PAYABLE_NO, T.WAYBILL_NO, T.WAYBILL_ID,
		T.PAYMENT_NO,
		T.CREATE_TYPE,
		T.BILL_TYPE, T.SOURCE_BILL_NO,
		T.SOURCE_BILL_TYPE,T.COD_TYPE,
		T.PAYABLE_ORG_CODE,
		T.PAYABLE_ORG_NAME,
		T.PAYABLE_COM_CODE, T.PAYABLE_COM_NAME,
		T.ORIG_ORG_CODE,
		T.ORIG_ORG_NAME, T.DEST_ORG_CODE, T.DEST_ORG_NAME,
		T.CUSTOMER_CODE,
		T.CUSTOMER_NAME,
		T.AMOUNT/100 AMOUNT,
		T.VERIFY_AMOUNT/100 VERIFY_AMOUNT,
		T.UNVERIFY_AMOUNT/100
		UNVERIFY_AMOUNT,
		T.CURRENCY_CODE,
		T.PRODUCT_CODE,PRODUCT_ID,
		T.ACCOUNT_DATE, T.BUSINESS_DATE,
		T.SIGN_DATE,
		T.EFFECTIVE_DATE,
		T.CREATE_USER_NAME, T.CREATE_USER_CODE,
		T.CREATE_ORG_CODE,
		T.CREATE_ORG_NAME,
		T.ACTIVE, T.IS_RED_BACK,
		T.IS_INIT, T.VERSION_NO,
		T.EFFECTIVE_STATUS,
		T.EFFECTIVE_USER_NAME,
		T.EFFECTIVE_USER_CODE,
		T.FROZEN_STATUS, T.FROZEN_TIME,
		T.FROZEN_USER_NAME,
		T.FROZEN_USER_CODE,
		T.PAY_STATUS,
		T.STATEMENT_BILL_NO,
		T.CUSTOMER_CONTACT,
		T.CUSTOMER_CONTACT_NAME,
		T.CUSTOMER_PHONE,
		T.CREATE_TIME, T.MODIFY_TIME,
		T.MODIFY_USER_NAME,
		T.MODIFY_USER_CODE,
		T.WORKFLOW_NO, T.LGDRIVER_CODE, T.LGDRIVER_NAME,
		T.PAYER_TYPE,
		T.PAYABLE_TYPE, T.DELIVER_FEE/100 DELIVER_FEE,
		T.OUTGOING_FEE/100
		OUTGOING_FEE, T.AUDIT_USER_CODE, T.AUDIT_USER_NAME,
		T.AUDIT_DATE,
		T.APPROVE_STATUS,
		T.NOTES,T.PAYEE_NAME,T.BANK_HQ_CODE,T.BANK_HQ_NAME,T.ACCOUNT_NO,
    T.PROVINCE_CODE,T.PROVINCE_NAME,T.CITY_CODE,T.CITY_NAME,T.BANK_BRANCH_CODE,T.BANK_BRANCH_NAME,
		T.PAYMENT_NOTES,T.PAYMENT_AMOUNT/100
		PAYMENT_AMOUNT,T.LAST_PAYMENT_TIME,T.PAYMENT_CATEGORIES,
    T.IS_WRITEOFF,T.ACCOUNT_TYPE,T.COD_AGENCY_FEE/100,T.EXTERNAL_INSURANCE_FEE/100,
    T.EXPRESS_ORIG_ORG_CODE,T.EXPRESS_ORIG_ORG_NAME,T.EXPRESS_DEST_ORG_CODE,T.EXPRESS_DEST_ORG_NAME,
    T.INVOICE_MARK,T.UNIFIED_SETTLEMENT,T.CONTRACT_ORG_CODE,T.CONTRACT_ORG_NAME,T.CLAIMWAY,
		T.FACTORING,T.FACTOR_BEGIN_TIME,T.FACTOR_END_TIME,T.FACTOR_ACCOUNT,T.CUS_CODE,
		P.PAYMENT_TRANSFER PAYMENT_TRANSFER,
		DECODE(P.WORKFLOW_NO,'',P.APPLY_WORK_FLOW_NO,P.WORKFLOW_NO)
		PAYMENT_WORKFLOW_NO
  </sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
    select /*结算-应付单-根据ID查询应付单*/
    <include refid="Base_Column_List" />
    from STL.T_STL_BILL_PAYABLE
    where ID = #{id,jdbcType=VARCHAR}
  </select>

  <!-- 根据应付单号集合查询应付单信息   -->
	<select id="selectByPayableNos" resultMap="BaseResultMap"
		parameterType="java.util.Map">
    SELECT /*结算-应付单-根据应付单号集合查询应付单信息*/
    <include refid="Base_Column_List" />
    from STL.T_STL_BILL_PAYABLE  WHERE
	PAYABLE_NO IN
		<foreach collection="payableNos" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
		</foreach>
	<if test="active!=null and active!='' ">
		AND ACTIVE=#{active}
	</if>
  </select>

   <!-- 根据付款单号集合查询应付单信息   -->
	<select id="selectByPaymentNos" resultMap="BaseResultMap"
		parameterType="java.util.Map">
    SELECT /*结算-应付单-根据付款单号集合查询应付单信息*/
    <include refid="Base_Column_List" />
    from STL.T_STL_BILL_PAYABLE  WHERE
	PAYMENT_NO IN
		<foreach collection="paymentNos" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
		</foreach>
	<if test="active!=null and active!='' ">
		AND ACTIVE=#{active,jdbcType=VARCHAR}
	</if>
	<if test="isRedBack!=null and isRedBack!='' ">
		AND IS_RED_BACK=#{isRedBack,jdbcType=VARCHAR}
	</if>
  </select>

   <!-- 根据付款单号集合、部门区域查询应付单信息   -->
	<select id="queryByPayableNosAndDeptCodes" resultMap="BaseResultMap"
		parameterType="java.util.Map">
    SELECT /*结算-应付单-根据付款单号集合、部门区域查询应付单信息*/
    <include refid="Payment_Column_List" />
		from STL.T_STL_BILL_PAYABLE T
		left join stl.t_stl_bill_payment p on
		p.payment_no = t.payment_no
    and p.active = 'Y'
     WHERE T.PAYABLE_NO IN
		<foreach collection="payableNos" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
		</foreach>
	<if test="deptCodeList!=null and deptCodeList!='' ">
		AND	T.PAYABLE_ORG_CODE IN
			<foreach collection="deptCodeList" index="index" item="item"
				open="(" separator="," close=")">
           #{item}
        </foreach>
	</if>
	<if test="active!=null and active!='' ">
		AND T.ACTIVE=#{active}
	</if>
	<if test="isPartner != null and isPartner != ''">
		<choose>
			<when test="isPartner=='Y'.toString()">
					AND T.BILL_TYPE IN
					('PFCP','PDFP','PDDF','PLE','PB','POP')
			</when>
			<when test="isDiscount!='N'.toString()">
					AND T.BILL_TYPE NOT IN
					('PFCP','PDFP','PDDF','PLE','PB','POP')
			</when>
		</choose>
	</if>
	<if test="isPartner == null or isPartner == ''">
			AND T.BILL_TYPE NOT IN
			('PFCP','PDFP','PDDF','PLE','PB','POP')
	</if>
	AND EXISTS
		(SELECT V.ORG_CODE FROM BSE.MV_BAS_USER_ORG_AUTH_VIEW V
		WHERE V.EMP_CODE =
		#{currentInfo.empCode,jdbcType=VARCHAR}
		AND
		V.ORG_CODE=T.PAYABLE_ORG_CODE <!-- 应付部门编码 -->
	)
  </select>

  <!-- 根据来源单号查询应付单信息   -->
	<select id="selectBySourceBillNos" resultMap="BaseResultMap"
		parameterType="java.util.Map">
    SELECT /*结算-应付单-根据来源单号查询应付单信息*/
    <include refid="Base_Column_List" />
		from STL.T_STL_BILL_PAYABLE
    WHERE SOURCE_BILL_NO IN
		<foreach collection="sourceBillNos" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
	</foreach>
	<if test="active!=null and active!='' ">
		AND ACTIVE=#{active}
	</if>
	<if test="sourceBillType!=null and sourceBillType!='' ">
		AND SOURCE_BILL_TYPE=#{sourceBillType}
	</if>
  </select>

  <!-- 根据来源单号、部门区域查询应付单信息   -->
	<select id="selectBySourceBillNosAndOrgCodes" resultMap="BaseResultMap"
		parameterType="java.util.Map">
    SELECT /*结算-应付单-根据来源单号、部门区域查询应付单信息*/
    <include refid="Payment_Column_List" />
		from STL.T_STL_BILL_PAYABLE T
		left join stl.t_stl_bill_payment p on
		p.payment_no = t.payment_no
    and p.active = 'Y'
    WHERE T.SOURCE_BILL_NO IN
		<foreach collection="sourceBillNos" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
	</foreach>
	<if test="active!=null and active!='' ">
		AND T.ACTIVE=#{active}
	</if>
	<if test="sourceBillType!=null and sourceBillType!='' ">
		AND T.SOURCE_BILL_TYPE=#{sourceBillType}
	</if>
	<if test="isPartner != null and isPartner != ''">
		<choose>
			<when test="isPartner=='Y'.toString()">
					AND T.BILL_TYPE IN
					('PFCP','PDFP','PDDF','PLE','PB','POP')
			</when>
			<when test="isDiscount!='N'.toString()">
					AND T.BILL_TYPE NOT IN
					('PFCP','PDFP','PDDF','PLE','PB','POP')
			</when>
		</choose>
	</if>
	<if test="isPartner == null or isPartner == ''">
			AND T.BILL_TYPE NOT IN
			('PFCP','PDFP','PDDF','PLE','PB','POP')
	</if>
	AND EXISTS
		(SELECT V.ORG_CODE FROM BSE.MV_BAS_USER_ORG_AUTH_VIEW V
		WHERE V.EMP_CODE =
		#{currentInfo.empCode,jdbcType=VARCHAR}
		AND
		V.ORG_CODE=T.PAYABLE_ORG_CODE <!-- 应付部门编码 -->
	)
  </select>

  <!-- 根据条件查询各种应付单  -->
	<select id="selectByCondition" resultMap="BaseResultMap"
		parameterType="com.deppon.foss.module.settlement.common.api.shared.dto.BillPayableConditionDto">
    SELECT /*结算-应付单-根据条件查询各种应付单*/
    <include refid="Base_Column_List" />
    from STL.T_STL_BILL_PAYABLE PAY
		WHERE
    <!-- waybillNo,payableNo,sourceBillNo 必填一项  -->
    <choose>
    	<!-- 运单号和来源单号同时存在   -->
			<when
				test="waybillNo!=null and waybillNo!=''  and sourceBillNo!=null and sourceBillNo!='' ">
    		 WAYBILL_NO=#{waybillNo} AND SOURCE_BILL_NO=#{sourceBillNo}
    	</when>
    	<when test="waybillNo!=null and waybillNo!=''">
    		 WAYBILL_NO=#{waybillNo}
    	</when>
    	<when test="payableNo!=null and payableNo!=''">
    		 PAYABLE_NO=#{payableNo}
    	</when>
    	<when test="sourceBillNo!=null and sourceBillNo!=''">
    		 SOURCE_BILL_NO=#{sourceBillNo}
       	</when>
       	<when test="paymentNo!=null and paymentNo!=''">
    		 PAYMENT_NO=#{paymentNo}
       	</when>
    	<otherwise>
    		1=0
    	</otherwise>
    </choose>
  	AND ACTIVE=#{active}  <!-- 必填项此方法只查询状态有效的  -->
  	AND IS_RED_BACK = #{isRedBack} <!-- 必填项此方法只查询状态有效的  -->
	<if test="billTypes!=null ">
		AND BILL_TYPE IN
			<foreach collection="billTypes" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
		</foreach>
	</if>
	<if test="sourceBillType!=null and sourceBillType!='' ">
		AND SOURCE_BILL_TYPE=#{sourceBillType}
	</if>
    <if test="verify!=null and verify!=''">
        AND UNVERIFY_AMOUNT>0
    </if>
    <if test="partailLineAgentCode!=null and partailLineAgentCode!='' "><!-- 偏线外发代理编码 -->
		AND CUSTOMER_CODE=#{partailLineAgentCode}
	</if>
  </select>

	<insert id="insert"
		parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.BillPayableEntity">
		insert into /*结算-应付单-新增应付单*/ STL.T_STL_BILL_PAYABLE (ID,
		PAYABLE_NO,
		WAYBILL_NO,
		WAYBILL_ID, PAYMENT_NO, CREATE_TYPE, BILL_TYPE,
		SOURCE_BILL_NO, SOURCE_BILL_TYPE,COD_TYPE, PAYABLE_ORG_CODE,
		PAYABLE_ORG_NAME, PAYABLE_COM_CODE, PAYABLE_COM_NAME,
		ORIG_ORG_CODE,
		ORIG_ORG_NAME, DEST_ORG_CODE,
		DEST_ORG_NAME, CUSTOMER_CODE,
		CUSTOMER_NAME,
		AMOUNT, VERIFY_AMOUNT, UNVERIFY_AMOUNT,
		CURRENCY_CODE,PRODUCT_CODE,PRODUCT_ID,ACCOUNT_DATE, BUSINESS_DATE,
		SIGN_DATE, EFFECTIVE_DATE, CREATE_USER_NAME,
		CREATE_USER_CODE,
		CREATE_ORG_CODE, CREATE_ORG_NAME,
		ACTIVE, IS_RED_BACK,
		IS_INIT,
		VERSION_NO, EFFECTIVE_STATUS,
		EFFECTIVE_USER_NAME, EFFECTIVE_USER_CODE,
		FROZEN_STATUS,
		FROZEN_TIME, FROZEN_USER_NAME, FROZEN_USER_CODE,
		PAY_STATUS, STATEMENT_BILL_NO,
		CUSTOMER_CONTACT, CUSTOMER_CONTACT_NAME,
		CUSTOMER_PHONE,
		CREATE_TIME, MODIFY_TIME, MODIFY_USER_NAME,
		MODIFY_USER_CODE, WORKFLOW_NO, LGDRIVER_CODE,
		LGDRIVER_NAME,
		PAYER_TYPE, PAYABLE_TYPE,
		DELIVER_FEE, OUTGOING_FEE, AUDIT_USER_CODE,
		AUDIT_USER_NAME, AUDIT_DATE, APPROVE_STATUS,
      NOTES
      ,PAYEE_NAME,BANK_HQ_CODE,BANK_HQ_NAME,ACCOUNT_NO,PROVINCE_CODE,PROVINCE_NAME,
    CITY_CODE,CITY_NAME,BANK_BRANCH_CODE,BANK_BRANCH_NAME,PAYMENT_NOTES,PAYMENT_AMOUNT,LAST_PAYMENT_TIME,PAYMENT_CATEGORIES,IS_WRITEOFF,
    ACCOUNT_TYPE,COD_AGENCY_FEE,EXTERNAL_INSURANCE_FEE,
    EXPRESS_ORIG_ORG_CODE,EXPRESS_ORIG_ORG_NAME,EXPRESS_DEST_ORG_CODE,EXPRESS_DEST_ORG_NAME,INVOICE_MARK,
    UNIFIED_SETTLEMENT,
    CONTRACT_ORG_CODE,
    CONTRACT_ORG_NAME,CLAIMWAY,
		EXPENSE_BEAR_CODE,FACTORING,FACTOR_BEGIN_TIME,FACTOR_END_TIME,FACTOR_ACCOUNT,CUS_CODE)
		values (#{id,jdbcType=VARCHAR},
		#{payableNo,jdbcType=VARCHAR},
		#{waybillNo,jdbcType=VARCHAR},
		#{waybillId,jdbcType=VARCHAR},
		#{paymentNo,jdbcType=VARCHAR},#{createType,jdbcType=VARCHAR},
		#{billType,jdbcType=VARCHAR},
		#{sourceBillNo,jdbcType=VARCHAR},
		#{sourceBillType,jdbcType=VARCHAR}, #{codType,jdbcType=VARCHAR},
		#{payableOrgCode,jdbcType=VARCHAR},
		#{payableOrgName,jdbcType=VARCHAR},
		#{payableComCode,jdbcType=VARCHAR},
		#{payableComName,jdbcType=VARCHAR},
		#{origOrgCode,jdbcType=VARCHAR},
		#{origOrgName,jdbcType=VARCHAR}, #{destOrgCode,jdbcType=VARCHAR},
		#{destOrgName,jdbcType=VARCHAR}, #{customerCode,jdbcType=VARCHAR},
		#{customerName,jdbcType=VARCHAR},
		#{amount,jdbcType=DECIMAL}*100,
		#{verifyAmount,jdbcType=DECIMAL}*100,
		#{unverifyAmount,jdbcType=DECIMAL}*100,
		#{currencyCode,jdbcType=VARCHAR},#{productCode,jdbcType=VARCHAR},#{productId,jdbcType=VARCHAR},
		#{accountDate,jdbcType=TIMESTAMP}, #{businessDate,jdbcType=TIMESTAMP},
		#{signDate,jdbcType=TIMESTAMP}, #{effectiveDate,jdbcType=TIMESTAMP},
		#{createUserName,jdbcType=VARCHAR},
		#{createUserCode,jdbcType=VARCHAR}, #{createOrgCode,jdbcType=VARCHAR},
		#{createOrgName,jdbcType=VARCHAR},
		#{active,jdbcType=CHAR},
		#{isRedBack,jdbcType=CHAR},
		#{isInit,jdbcType=CHAR},
		#{versionNo,jdbcType=DECIMAL}, #{effectiveStatus,jdbcType=CHAR},
		#{effectiveUserName,jdbcType=VARCHAR},
		#{effectiveUserCode,jdbcType=VARCHAR}, #{frozenStatus,jdbcType=CHAR},
		#{frozenTime,jdbcType=TIMESTAMP}, #{frozenUserName,jdbcType=VARCHAR},
		#{frozenUserCode,jdbcType=VARCHAR},
		#{payStatus,jdbcType=CHAR},
		#{statementBillNo,jdbcType=VARCHAR},
		#{customerContact,jdbcType=VARCHAR},
		#{customerContactName,jdbcType=VARCHAR},
		#{customerPhone,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},
		#{modifyTime,jdbcType=TIMESTAMP}, #{modifyUserName,jdbcType=VARCHAR},
		#{modifyUserCode,jdbcType=VARCHAR}, #{workflowNo,jdbcType=VARCHAR},
		#{lgdriverCode,jdbcType=VARCHAR},
		#{lgdriverName,jdbcType=VARCHAR},
		#{payerType,jdbcType=VARCHAR}, #{payableType,jdbcType=VARCHAR},
		#{deliverFee,jdbcType=DECIMAL}*100,
		#{outgoingFee,jdbcType=DECIMAL}*100,
		#{auditUserCode,jdbcType=VARCHAR},
		#{auditUserName,jdbcType=VARCHAR},
		#{auditDate,jdbcType=TIMESTAMP}, #{approveStatus,jdbcType=VARCHAR},
      #{notes,jdbcType=VARCHAR}
      ,#{payeeName,jdbcType=VARCHAR}
      ,#{bankHqCode,jdbcType=VARCHAR}
      ,#{bankHqName,jdbcType=VARCHAR}
      ,#{accountNo,jdbcType=VARCHAR}
      ,#{provinceCode,jdbcType=VARCHAR}
      ,#{provinceName,jdbcType=VARCHAR}
      ,#{cityCode,jdbcType=VARCHAR}
      ,#{cityName,jdbcType=VARCHAR}
      ,#{bankBranchCode,jdbcType=VARCHAR}
      ,#{bankBranchName,jdbcType=VARCHAR}
      ,#{paymentNotes,jdbcType=VARCHAR}
      ,#{paymentAmount,jdbcType=DECIMAL}*100,#{lastPaymentTime,jdbcType=TIMESTAMP}
      ,#{paymentCategories,jdbcType=VARCHAR}
      ,#{isWriteoff,jdbcType=CHAR}
		,#{accountType,jdbcType=CHAR}, #{codAgencyFee,jdbcType=DECIMAL}*100,
		#{externalInsuranceFee,jdbcType=DECIMAL}*100
      ,#{expressOrigOrgCode,jdbcType=VARCHAR},#{expressOrigOrgName,jdbcType=VARCHAR},#{expressDestOrgCode,jdbcType=VARCHAR},#{expressDestOrgName,jdbcType=VARCHAR}
      ,#{invoiceMark,jdbcType=VARCHAR}
      ,#{unifiedSettlement,jdbcType=VARCHAR}
      ,#{contractOrgCode,jdbcType=VARCHAR}
      ,#{contractOrgName,jdbcType=VARCHAR}
      ,#{claimWay,jdbcType=VARCHAR}
      ,#{expenseBearCode,jdbcType=VARCHAR}
		,#{factoring,jdbcType=CHAR}
		,#{factorBeginTime,jdbcType=TIMESTAMP}
		,#{factorEndTime,jdbcType=TIMESTAMP}
		,#{factorAccount,jdbcType=VARCHAR}
		,#{cusCode,jdbcType=VARCHAR}
      )
  </insert>

	<update id="updateByPrimaryKey"
		parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.BillPayableEntity">
    update /*结算-应付单-根据ID更新应付单*/ STL.T_STL_BILL_PAYABLE
		set
		PAYABLE_NO = #{payableNo,jdbcType=VARCHAR},
		WAYBILL_NO =
		#{waybillNo,jdbcType=VARCHAR},
		WAYBILL_ID =
		#{waybillId,jdbcType=VARCHAR},
		PAYMENT_NO =
		#{paymentNo,jdbcType=VARCHAR},
		CREATE_TYPE =
		#{createType,jdbcType=VARCHAR},
		BILL_TYPE =
		#{billType,jdbcType=VARCHAR},
		SOURCE_BILL_NO =
		#{sourceBillNo,jdbcType=VARCHAR},
		SOURCE_BILL_TYPE =
		#{sourceBillType,jdbcType=VARCHAR},
		COD_TYPE=
		#{codType,jdbcType=VARCHAR},
		PAYABLE_ORG_CODE =
		#{payableOrgCode,jdbcType=VARCHAR},
		PAYABLE_ORG_NAME =
		#{payableOrgName,jdbcType=VARCHAR},
		PAYABLE_COM_CODE =
		#{payableComCode,jdbcType=VARCHAR},
		PAYABLE_COM_NAME =
		#{payableComName,jdbcType=VARCHAR},
		ORIG_ORG_CODE =
		#{origOrgCode,jdbcType=VARCHAR},
		ORIG_ORG_NAME =
		#{origOrgName,jdbcType=VARCHAR},
		DEST_ORG_CODE =
		#{destOrgCode,jdbcType=VARCHAR},
		DEST_ORG_NAME =
		#{destOrgName,jdbcType=VARCHAR},
		CUSTOMER_CODE =
		#{customerCode,jdbcType=VARCHAR},
		CUSTOMER_NAME =
		#{customerName,jdbcType=VARCHAR},
		AMOUNT =
		#{amount,jdbcType=DECIMAL}*100,
		VERIFY_AMOUNT =
		#{verifyAmount,jdbcType=DECIMAL}*100,
		UNVERIFY_AMOUNT =
		#{unverifyAmount,jdbcType=DECIMAL}*100,
		CURRENCY_CODE =
		#{currencyCode,jdbcType=VARCHAR},
		PRODUCT_CODE =
		#{productCode,jdbcType=VARCHAR},
		PRODUCT_ID =
		#{productId,jdbcType=VARCHAR},
		ACCOUNT_DATE =
		#{accountDate,jdbcType=TIMESTAMP},
		BUSINESS_DATE =
		#{businessDate,jdbcType=TIMESTAMP},
		SIGN_DATE =
		#{signDate,jdbcType=TIMESTAMP},
		EFFECTIVE_DATE =
		#{effectiveDate,jdbcType=TIMESTAMP},
		CREATE_USER_NAME =
		#{createUserName,jdbcType=VARCHAR},
		CREATE_USER_CODE =
		#{createUserCode,jdbcType=VARCHAR},
		CREATE_ORG_CODE =
		#{createOrgCode,jdbcType=VARCHAR},
		CREATE_ORG_NAME =
		#{createOrgName,jdbcType=VARCHAR},
      ACTIVE = #{active,jdbcType=CHAR},
      IS_RED_BACK = #{isRedBack,jdbcType=CHAR},
		IS_INIT =
		#{isInit,jdbcType=CHAR},
      VERSION_NO = #{versionNo,jdbcType=DECIMAL},
      EFFECTIVE_STATUS = #{effectiveStatus,jdbcType=CHAR},
      EFFECTIVE_USER_NAME = #{effectiveUserName,jdbcType=VARCHAR},
      EFFECTIVE_USER_CODE = #{effectiveUserCode,jdbcType=VARCHAR},
      FROZEN_STATUS = #{frozenStatus,jdbcType=CHAR},
		FROZEN_TIME =
		#{frozenTime,jdbcType=TIMESTAMP},
		FROZEN_USER_NAME =
		#{frozenUserName,jdbcType=VARCHAR},
		FROZEN_USER_CODE =
		#{frozenUserCode,jdbcType=VARCHAR},
		PAY_STATUS =
		#{payStatus,jdbcType=CHAR},
		STATEMENT_BILL_NO =
		#{statementBillNo,jdbcType=VARCHAR},
		CUSTOMER_CONTACT =
		#{customerContact,jdbcType=VARCHAR},
		CUSTOMER_CONTACT_NAME =
		#{customerContactName,jdbcType=VARCHAR},
		CUSTOMER_PHONE =
		#{customerPhone,jdbcType=VARCHAR},
		CREATE_TIME =
		#{createTime,jdbcType=TIMESTAMP},
		MODIFY_TIME =
		#{modifyTime,jdbcType=TIMESTAMP},
		MODIFY_USER_NAME =
		#{modifyUserName,jdbcType=VARCHAR},
		MODIFY_USER_CODE =
		#{modifyUserCode,jdbcType=VARCHAR},
		WORKFLOW_NO =
		#{workflowNo,jdbcType=VARCHAR},
		LGDRIVER_CODE =
		#{lgdriverCode,jdbcType=VARCHAR},
		LGDRIVER_NAME =
		#{lgdriverName,jdbcType=VARCHAR},
		PAYER_TYPE =
		#{payerType,jdbcType=VARCHAR},
		PAYABLE_TYPE =
		#{payableType,jdbcType=VARCHAR},
		DELIVER_FEE =
		#{deliverFee,jdbcType=DECIMAL}*100,
		OUTGOING_FEE =
		#{outgoingFee,jdbcType=DECIMAL}*100,
		AUDIT_USER_CODE =
		#{auditUserCode,jdbcType=VARCHAR},
		AUDIT_USER_NAME =
		#{auditUserName,jdbcType=VARCHAR},
		AUDIT_DATE =
		#{auditDate,jdbcType=TIMESTAMP},
		APPROVE_STATUS =
		#{approveStatus,jdbcType=VARCHAR},
      NOTES = #{notes,jdbcType=VARCHAR},
      PAYEE_NAME = #{payeeName,jdbcType=VARCHAR},
		BANK_HQ_CODE=
		#{bankHqCode,jdbcType=VARCHAR},
		BANK_HQ_NAME
		=#{bankHqName,jdbcType=VARCHAR},
		ACCOUNT_NO =
		#{accountNo,jdbcType=VARCHAR},
		PROVINCE_CODE =
		#{provinceCode,jdbcType=VARCHAR},
		PROVINCE_NAME =
		#{provinceName,jdbcType=VARCHAR},
		CITY_CODE =
		#{cityCode,jdbcType=VARCHAR},
      CITY_NAME = #{cityName,jdbcType=VARCHAR},
      BANK_BRANCH_CODE = #{bankBranchCode,jdbcType=VARCHAR},
      BANK_BRANCH_NAME = #{bankBranchName,jdbcType=VARCHAR},
		PAYMENT_NOTES =
		#{paymentNotes,jdbcType=VARCHAR},
		PAYMENT_AMOUNT =
		#{paymentAmount,jdbcType=DECIMAL}*100,
		LAST_PAYMENT_TIME =
		#{lastPaymentTime,jdbcType=TIMESTAMP},
		PAYMENT_CATEGORIES =
		#{paymentCategories,jdbcType=VARCHAR},
		IS_WRITEOFF =
		#{isWriteoff,jdbcType=CHAR},
		ACCOUNT_TYPE =
		#{accountType,jdbcType=CHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <!-- 红冲应付单 -->
	<update id="updateByWriteBack"
		parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.BillPayableEntity">
		update /*结算-应付单-红冲应付单*/ STL.T_STL_BILL_PAYABLE set
      VERSION_NO = VERSION_NO + 1,
      ACTIVE = #{active,jdbcType=CHAR},
      MODIFY_USER_CODE = #{modifyUserCode,jdbcType=VARCHAR},
      MODIFY_USER_NAME = #{modifyUserName,jdbcType=VARCHAR},
		MODIFY_TIME =
		#{modifyTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
		and
		VERSION_NO = #{versionNo,jdbcType=DECIMAL}
  </update>

  <!-- 核销应付单 -->
	<update id="updateByWriteoff"
		parameterType="com.deppon.foss.module.settlement.common.api.shared.dto.BillWriteoffAmountDto">
		UPDATE /*结算-应付单-核销应付单*/ STL.T_STL_BILL_PAYABLE
		SET
		VERSION_NO = VERSION_NO + 1,
		MODIFY_TIME =
		#{modifyTime,jdbcType=TIMESTAMP},
		VERIFY_AMOUNT = VERIFY_AMOUNT +
		#{writeoffAmount,jdbcType=DECIMAL}*100,
		UNVERIFY_AMOUNT =
		UNVERIFY_AMOUNT -
		#{writeoffAmount,jdbcType=DECIMAL}*100,
       MODIFY_USER_CODE = #{modifyUserCode,jdbcType=VARCHAR},
    	MODIFY_USER_NAME = #{modifyUserName,jdbcType=VARCHAR}
		WHERE ID =
		#{id,jdbcType=VARCHAR}
      and VERSION_NO = #{versionNo,jdbcType=DECIMAL}
  </update>

  <!-- 生效、失效 应付单 -->
	<update id="updateByTakeEffect"
		parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.BillPayableEntity">
		UPDATE /*结算-应付单-生效、失效 应付单*/ STL.T_STL_BILL_PAYABLE
		SET VERSION_NO =
		VERSION_NO + 1,
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      EFFECTIVE_STATUS = #{effectiveStatus,jdbcType=CHAR},
      SIGN_DATE=#{signDate,jdbcType=TIMESTAMP},
		MODIFY_USER_CODE =
		#{modifyUserCode,jdbcType=VARCHAR},
		MODIFY_USER_NAME =
		#{modifyUserName,jdbcType=VARCHAR},
		EFFECTIVE_DATE =
		#{effectiveDate,jdbcType=TIMESTAMP},<!-- 生效时间 -->
      EFFECTIVE_USER_NAME = #{effectiveUserName,jdbcType=VARCHAR},
      EFFECTIVE_USER_CODE = #{effectiveUserCode,jdbcType=VARCHAR},
      APPROVE_STATUS = #{approveStatus,jdbcType=VARCHAR}<!-- 审核外发单时，会生效和审核一起来操作  -->
    WHERE ID = #{id,jdbcType=VARCHAR}
		AND VERSION_NO =
		#{versionNo,jdbcType=DECIMAL}
  </update>

  <!-- 批量审核/反审核应付单  -->
	<update id="updateByBatchAudit"
		parameterType="com.deppon.foss.module.settlement.common.api.shared.dto.BillPayableDto">
		UPDATE /*结算-应付单-批量审核/反审核应付单*/ STL.T_STL_BILL_PAYABLE
		SET VERSION_NO =
		VERSION_NO + 1,
    AUDIT_USER_CODE = #{auditUserCode,jdbcType=VARCHAR},
    AUDIT_USER_NAME = #{auditUserName,jdbcType=VARCHAR},
		APPROVE_STATUS =
		#{approveStatus,jdbcType=VARCHAR},
		AUDIT_DATE =
		#{auditDate,jdbcType=TIMESTAMP},
		MODIFY_TIME =
		#{modifyTime,jdbcType=TIMESTAMP},
		MODIFY_USER_CODE =
		#{modifyUserCode,jdbcType=VARCHAR},
		MODIFY_USER_NAME =
		#{modifyUserName,jdbcType=VARCHAR}
   WHERE (ID,VERSION_NO) IN
		<foreach collection="billPayables" index="index" item="item"
			open="(" separator="," close=")">
		      (#{item.id},#{item.versionNo})
		</foreach>
	AND ACTIVE=#{active,jdbcType=VARCHAR}
		AND
		APPROVE_STATUS=#{conApproveStatus}<!-- 加上审核/未审核限制条件 -->
  </update>

  <!-- 冻结应付单   -->
	<update id="updateByFrozen"
		parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.BillPayableEntity">
		UPDATE /*结算-应付单-冻结应付单*/ STL.T_STL_BILL_PAYABLE
		SET
		VERSION_NO = VERSION_NO + 1,
		FROZEN_STATUS =
		#{frozenStatus,jdbcType=CHAR},
		FROZEN_TIME =
		#{frozenTime,jdbcType=TIMESTAMP},
		FROZEN_USER_NAME =
		#{frozenUserName,jdbcType=VARCHAR},
		FROZEN_USER_CODE =
		#{frozenUserCode,jdbcType=VARCHAR},
		MODIFY_TIME =
		#{modifyTime,jdbcType=TIMESTAMP},
		MODIFY_USER_CODE =
		#{modifyUserCode,jdbcType=VARCHAR},
		MODIFY_USER_NAME =
		#{modifyUserName,jdbcType=VARCHAR}
    WHERE ID = #{id,jdbcType=VARCHAR}
      AND VERSION_NO = #{versionNo,jdbcType=DECIMAL}
  </update>

  <!-- 批量冻结应付单   -->
	<update id="updateByFrozenByBatch"
		parameterType="com.deppon.foss.module.settlement.common.api.shared.dto.BillPayableDto">
		UPDATE STL.T_STL_BILL_PAYABLE
    SET VERSION_NO = VERSION_NO + 1,
      FROZEN_STATUS = #{frozenStatus,jdbcType=CHAR},
		FROZEN_TIME =
		#{frozenTime,jdbcType=TIMESTAMP},
		FROZEN_USER_NAME =
		#{frozenUserName,jdbcType=VARCHAR},
		FROZEN_USER_CODE =
		#{frozenUserCode,jdbcType=VARCHAR},
		MODIFY_TIME =
		#{modifyTime,jdbcType=TIMESTAMP},
		MODIFY_USER_CODE =
		#{modifyUserCode,jdbcType=VARCHAR},
		MODIFY_USER_NAME =
		#{modifyUserName,jdbcType=VARCHAR}
		WHERE (ID,ACCOUNT_DATE,VERSION_NO)
		in
		<foreach collection="billPayables" index="index" item="item"
			open="(" separator="," close=")">
		      (#{item.id,jdbcType=VARCHAR},#{item.accountDate,jdbcType=TIMESTAMP},#{item.versionNo,jdbcType=DECIMAL})
		</foreach>
  </update>

  <!-- 取消冻结应付单   -->
	<update id="updateByCancelFrozen"
		parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.BillPayableEntity">
		UPDATE /*结算-应付单-取消冻结应付单*/ STL.T_STL_BILL_PAYABLE
		SET
		VERSION_NO = VERSION_NO + 1,
		FROZEN_STATUS =
		#{frozenStatus,jdbcType=CHAR},
		FROZEN_TIME =
		#{frozenTime,jdbcType=TIMESTAMP},
		FROZEN_USER_NAME =
		#{frozenUserName,jdbcType=VARCHAR},
		FROZEN_USER_CODE =
		#{frozenUserCode,jdbcType=VARCHAR},
		PAY_STATUS =
		#{payStatus,jdbcType=CHAR},
      PAYMENT_NO= #{paymentNo,jdbcType=VARCHAR},
      PAYMENT_NOTES = #{paymentNotes,jdbcType=VARCHAR},
		PAYMENT_AMOUNT =
		#{paymentAmount,jdbcType=DECIMAL}*100,
		MODIFY_TIME =
		#{modifyTime,jdbcType=TIMESTAMP},
		MODIFY_USER_CODE =
		#{modifyUserCode,jdbcType=VARCHAR},
		MODIFY_USER_NAME =
		#{modifyUserName,jdbcType=VARCHAR}
    WHERE ID = #{id,jdbcType=VARCHAR}
      AND VERSION_NO = #{versionNo,jdbcType=DECIMAL}
  </update>

    <!-- 批量取消冻结应付单   -->
	<update id="updateByCancelFrozenByBatch"
		parameterType="com.deppon.foss.module.settlement.common.api.shared.dto.BillPayableDto">
		UPDATE STL.T_STL_BILL_PAYABLE
    SET VERSION_NO = VERSION_NO + 1,
      FROZEN_STATUS = #{frozenStatus,jdbcType=CHAR},
		FROZEN_TIME =
		#{frozenTime,jdbcType=TIMESTAMP},
		FROZEN_USER_NAME =
		#{frozenUserName,jdbcType=VARCHAR},
		FROZEN_USER_CODE =
		#{frozenUserCode,jdbcType=VARCHAR},
		PAY_STATUS =
		#{payStatus,jdbcType=CHAR},
      PAYMENT_NO= #{paymentNo,jdbcType=VARCHAR},
      PAYMENT_NOTES = #{paymentNotes,jdbcType=VARCHAR},
		PAYMENT_AMOUNT =
		#{paymentAmount,jdbcType=DECIMAL}*100,
		MODIFY_TIME =
		#{modifyTime,jdbcType=TIMESTAMP},
		MODIFY_USER_CODE =
		#{modifyUserCode,jdbcType=VARCHAR},
		MODIFY_USER_NAME =
		#{modifyUserName,jdbcType=VARCHAR}
		WHERE (ID,ACCOUNT_DATE,VERSION_NO)
		in
		<foreach collection="billPayables" index="index" item="item"
			open="(" separator="," close=")">
		      (#{item.id,jdbcType=VARCHAR},#{item.accountDate,jdbcType=TIMESTAMP},#{item.versionNo,jdbcType=DECIMAL})
		</foreach>
  </update>

  <!-- 支付/反支付应付单的支付状态  -->
	<update id="updateByBatchPay"
		parameterType="com.deppon.foss.module.settlement.common.api.shared.dto.BillPayableDto">
		UPDATE /*结算-应付单-支付/反支付应付单的支付状态*/ STL.T_STL_BILL_PAYABLE
   		SET VERSION_NO = VERSION_NO + 1,
		PAY_STATUS =
		#{payStatus,jdbcType=CHAR},
      	PAYMENT_NO= #{paymentNo,jdbcType=VARCHAR},
      	MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
		MODIFY_USER_CODE =
		#{modifyUserCode,jdbcType=VARCHAR},
		MODIFY_USER_NAME =
		#{modifyUserName,jdbcType=VARCHAR},
		PAYMENT_NOTES =
		#{paymentNotes,jdbcType=VARCHAR},
		PAYMENT_AMOUNT =
		#{paymentAmount,jdbcType=DECIMAL}*100
		WHERE
		ID=#{id,jdbcType=VARCHAR}
		AND
		VERSION_NO=#{versionNo,jdbcType=VARCHAR}
		AND
		ACTIVE=#{active,jdbcType=VARCHAR}
		AND
		PAY_STATUS=#{conPayStatus,jdbcType=CHAR}
  </update>


   <!-- 更改应付单的签收日期  -->
	<update id="updateBySignDate"
		parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.BillPayableEntity">
		UPDATE /*结算-应付单-更改应付单的签收日期*/ STL.T_STL_BILL_PAYABLE
		SET
		VERSION_NO = VERSION_NO + 1,
		MODIFY_TIME =
		#{modifyTime,jdbcType=TIMESTAMP},
      SIGN_DATE=#{signDate,jdbcType=TIMESTAMP},
		MODIFY_USER_CODE =
		#{modifyUserCode,jdbcType=VARCHAR},
		MODIFY_USER_NAME =
		#{modifyUserName,jdbcType=VARCHAR}
    WHERE ID = #{id,jdbcType=VARCHAR}
      AND VERSION_NO = #{versionNo,jdbcType=DECIMAL}
  </update>

  <!-- 根据运单号和外发单号、代理编码查询应付单数据   -->
	<select id="selectBillPayableByExternalBillNo" resultType="int"
		parameterType="com.deppon.foss.module.settlement.common.api.shared.dto.BillPayableConditionDto">
    SELECT /*结算-应付单-根据运单号和外发单号、代理编码查询应付单数据*/ COUNT(PE.ID) COUNTS
		FROM
		STL.T_STL_BILL_PAYABLE PE
		WHERE PE.WAYBILL_NO=#{waybillNo}
		AND
		PE.SOURCE_BILL_NO=#{externalBillNo}
		AND PE.ACTIVE=#{active} AND
		PE.IS_RED_BACK = #{isRedBack}
    <if test="partailLineAgentCode!=null and partailLineAgentCode!=''">
    	AND PE.CUSTOMER_CODE=#{partailLineAgentCode}
    </if>
	<if test="billTypes!=null ">
		AND PE.BILL_TYPE IN
			<foreach collection="billTypes" index="index" item="item"
				open="(" separator="," close=")">
				#{item}
		</foreach>
	</if>
  </select>

	<select id="selectByWaybillNosAndByBillTypes" resultMap="BaseResultMap"
		parameterType="java.util.Map">
    SELECT /*结算-应付单-根据运单号和单据类型查询应付单*/
    <include refid="Base_Column_List" />
    FROM STL.T_STL_BILL_PAYABLE  WHERE
	WAYBILL_NO IN
		<foreach collection="waybillNos" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
	</foreach>
	AND BILL_TYPE IN
		<foreach collection="billTypes" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
	</foreach>
	<if test="active!=null and active!='' ">
		AND ACTIVE=#{active}
	</if>
  </select>
  
  	<select id="selectqueryBysourceBillNoAndByBillTypes" resultMap="BaseResultMap"
		parameterType="java.util.Map">
    SELECT /*结算-应付单-根据运单号和单据类型以及来源单号查询应付单(针对合伙人到达提成单据类型的应付单)*/
    <include refid="Base_Column_List" />
    FROM STL.T_STL_BILL_PAYABLE  WHERE
	WAYBILL_NO IN
		<foreach collection="waybillNos" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
	</foreach>
	AND BILL_TYPE IN
		<foreach collection="billTypes" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
	</foreach>
	AND SOURCE_BILL_NO IN
	    <foreach collection="sourceBillNo" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
	</foreach>
	<if test="active!=null and active!='' ">
		AND ACTIVE=#{active}
	</if>
  </select>

    <select id="selectByWaybillNosAndByBillDTypes" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT /*结算-应付单-根据运单号和单据类型以及到达部门编码查询应付单*/
    <include refid="Base_Column_List" />
    FROM STL.T_STL_BILL_PAYABLE  WHERE
	WAYBILL_NO IN
	<foreach collection="waybillNos"  index="index" item="item"  open="(" separator="," close=")">  
		     #{item} 
	</foreach>
	AND BILL_TYPE IN
		<foreach collection="billTypes" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
	</foreach>
	<if test="active!=null and active!='' ">
		AND ACTIVE=#{active}
	</if>
		AND DEST_ORG_CODE IN
	<foreach collection="destOrgCode"  index="index" item="item"  open="(" separator="," close=")">  
		     #{item} 
	</foreach>
  </select>

  <!--  -->
	<select id="selectBillPayableIsWriteOff" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		SELECT /*结算-应付单-根据来源单号查询应付单*/ ID,VERIFY_AMOUNT/100
		VERIFY_AMOUNT,PAY_STATUS,BILL_TYPE,
   		FROZEN_STATUS, APPROVE_STATUS
		FROM STL.T_STL_BILL_PAYABLE
   		WHERE SOURCE_BILL_NO=#{sourceBillNo}
		AND
		SOURCE_BILL_TYPE=#{sourceBillType}
   		AND ACTIVE=#{active}
   </select>

    <!--根据运单号集合查询应付单信息  -->
	<select id="selectByWaybillNos" resultMap="BaseResultMap"
		parameterType="java.util.Map">
        SELECT /*结算-应付单-根据运单号和单据类型查询应付单*/
        <include refid="Base_Column_List" />
        FROM STL.T_STL_BILL_PAYABLE  WHERE
        WAYBILL_NO = #{waybillNo}
    </select>

	<!--根据运单号集合查询整车尾款应付单信息 : 331556 fanjngwei -->
	<select id="queryByWaybillNos" resultMap="BaseResultMap"
		parameterType="java.util.Map">
        SELECT /*结算-应付单-根据运单号集合查询应付单*/
        <include refid="Base_Column_List" />
        FROM STL.T_STL_BILL_PAYABLE W WHERE
        W.WAYBILL_NO = #{waybillNo}
		AND
		W.ACTIVE = 'Y'
        AND W.BILL_TYPE='TL2'
    </select>

	<!-- 批量生效装卸费 -->
  <update id="updateBillPayableLaborFee" parameterType="java.util.Map">
		UPDATE /*结算-应付单-批量生效装卸费*/ STL.T_STL_BILL_PAYABLE SET VERSION_NO =
		VERSION_NO + 1,
  		MODIFY_TIME =#{modifyTime,jdbcType=TIMESTAMP},
  		EFFECTIVE_DATE=#{effectiveDate,jdbcType=TIMESTAMP},
		EFFECTIVE_STATUS
		=#{effectiveStatus,jdbcType=VARCHAR}
    WHERE (ID,VERSION_NO) IN
		<foreach collection="billPayableEntityList" index="index"
			item="item" open="(" separator="," close=")">
		(#{item.id},#{item.versionNo})
	</foreach>
  </update>

   <!-- 批量修改应付单的对账单单号  -->
	<update id="updateBatchByMakeStatement"
		parameterType="com.deppon.foss.module.settlement.common.api.shared.dto.BillPayableDto">
		UPDATE /*结算-应付单-批量修改应付单的对账单单号*/ STL.T_STL_BILL_PAYABLE
		SET VERSION_NO =
		VERSION_NO + 1,
		STATEMENT_BILL_NO =
		#{statementBillNo,jdbcType=VARCHAR},
		MODIFY_TIME =
		#{modifyTime,jdbcType=TIMESTAMP},
		MODIFY_USER_CODE =
		#{modifyUserCode,jdbcType=VARCHAR},
		MODIFY_USER_NAME =
		#{modifyUserName,jdbcType=VARCHAR}
    WHERE (ID,VERSION_NO) IN
		<foreach collection="billPayables" index="index" item="item"
			open="(" separator="," close=")">
		(#{item.id},#{item.versionNo})
	</foreach>
		AND ACTIVE=#{active,jdbcType=VARCHAR}
  </update>

	<select id="selectByWaybillNosAndOrgCodes" resultMap="BaseResultMap"
		parameterType="java.util.Map">
    SELECT /*结算-应付单-根据运单号和应付部门编码查询应付单*/
    <include refid="Payment_Column_List" />
		from STL.T_STL_BILL_PAYABLE T
		left join stl.t_stl_bill_payment p on
		p.payment_no = t.payment_no
		and
		p.active = 'Y'
    WHERE T.WAYBILL_NO IN
		<foreach collection="waybillNos" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
	</foreach>
	<if test="active!=null and active!='' ">
		AND T.ACTIVE=#{active}
	</if>
	<if test="isPartner != null and isPartner != ''">
		<choose>
			<when test="isPartner=='Y'.toString()">
					AND T.BILL_TYPE IN
					('PFCP','PDFP','PDDF','PLE','PB','POP')
			</when>
			<when test="isDiscount!='N'.toString()">
					AND T.BILL_TYPE NOT IN
					('PFCP','PDFP','PDDF','PLE','PB','POP')
			</when>
		</choose>
	</if>
	<if test="isPartner == null or isPartner == ''">
			AND T.BILL_TYPE NOT IN
			('PFCP','PDFP','PDDF','PLE','PB','POP')
	</if>
	AND EXISTS
		(SELECT V.ORG_CODE FROM BSE.MV_BAS_USER_ORG_AUTH_VIEW V
		WHERE V.EMP_CODE =
		#{currentInfo.empCode,jdbcType=VARCHAR}
		AND
		V.ORG_CODE=T.PAYABLE_ORG_CODE <!-- 应付部门编码 -->
	)
  </select>

  <!-- 批量生效应付单 -->
	<update id="updateByBatchTakeEffect"
		parameterType="com.deppon.foss.module.settlement.common.api.shared.dto.BillPayableDto">
		UPDATE /*结算-应付单-批量生效应付单*/ STL.T_STL_BILL_PAYABLE
		SET VERSION_NO =
		VERSION_NO + 1,
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      EFFECTIVE_STATUS = #{effectiveStatus,jdbcType=CHAR},
		MODIFY_USER_CODE =
		#{modifyUserCode,jdbcType=VARCHAR},
		MODIFY_USER_NAME =
		#{modifyUserName,jdbcType=VARCHAR},
		EFFECTIVE_DATE =
		#{effectiveDate,jdbcType=TIMESTAMP},<!-- 生效时间 -->
      EFFECTIVE_USER_NAME = #{effectiveUserName,jdbcType=VARCHAR},
      EFFECTIVE_USER_CODE = #{effectiveUserCode,jdbcType=VARCHAR}
		WHERE
		(ID,VERSION_NO) IN
		<foreach collection="billPayables" index="index" item="item"
			open="(" separator="," close=")">
		(#{item.id},#{item.versionNo})
	</foreach>
		AND ACTIVE=#{active,jdbcType=VARCHAR}
  </update>

  <!-- 根据运单号和应付单据类型，查询已签收的应付单信息  -->
	<select id="selectByWaybillNosAndBillType" resultMap="BaseResultMap"
		parameterType="java.util.Map">
    SELECT /*结算-应付单-根据运单号和应付单据类型，查询已签收的应付单信息*/
    <include refid="Base_Column_List" />
    from STL.T_STL_BILL_PAYABLE  WHERE
	WAYBILL_NO IN
		<foreach collection="waybillNos" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
	</foreach>
		AND SIGN_DATE IS NOT NULL
	AND ACTIVE=#{active}
	<!-- @218392 单据子类型  -->
	<if test="billType != null and billType != ''">
	AND	BILL_TYPE = #{billType ,jdbcType=VARCHAR}
	</if>
	AND EFFECTIVE_STATUS = #{effectiveStatus}
	<![CDATA[  AND PRODUCT_CODE <> #{productCode}  ]]> <!-- 产品类型不能为空运   -->
  </select>

  <!-- 根据来源单号查询应付单信息   -->
	<select id="selectBySourceBillNOsAndCustomerCode" resultMap="BaseResultMap"
		parameterType="java.util.Map">
    SELECT /*结算-应付单-根据来源单号查询应付单信息*/
    <include refid="Base_Column_List" />
		from STL.T_STL_BILL_PAYABLE
    WHERE SOURCE_BILL_NO IN
		<foreach collection="sourceBillNos" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
	</foreach>
	<if test="active!=null and active!='' ">
		AND ACTIVE=#{active}
	</if>
	<if test="customerCode!=null and customerCode!='' ">
		AND CUSTOMER_CODE=#{customerCode}
	</if>
	<if test="sourceBillType!=null and sourceBillType!='' ">
		AND SOURCE_BILL_TYPE=#{sourceBillType}
	</if>
  </select>

  <!-- 根据来源单号、客户编码、来源单据类型批量查询应付单  供空运变更清单服务调用  -->
	<select id="selectBySourceBillNOsAndCustomerCodeAndBillType"
		resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT /*结算-应付单-根据来源单号、客户编码、来源单据类型批量查询应付单  供空运变更清单服务调用*/
    <include refid="Base_Column_List" />
		from STL.T_STL_BILL_PAYABLE
		WHERE
		(SOURCE_BILL_NO,CUSTOMER_CODE,SOURCE_BILL_TYPE) IN
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
      	(#{item.sourceBillNo},#{item.customerCode},#{item.sourceBillType})
		</foreach>
	<if test="active!=null and active!='' ">
		AND ACTIVE=#{active,jdbcType=VARCHAR}
	</if>
  </select>

  <!-- 空运根据来源单号和来源单据类型查询应付单信息   -->
	<select id="selectBySourceBillNosTypes" resultMap="BaseResultMap"
		parameterType="java.util.Map">
    SELECT /*结算-应付单-根据来源单号和来源单据类型查询应付单信息*/
    <include refid="Base_Column_List" />
		from STL.T_STL_BILL_PAYABLE
    WHERE SOURCE_BILL_NO IN
		<foreach collection="sourceBillNos" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
	</foreach>
	<if test="active!=null and active!='' ">
		AND ACTIVE=#{active}
	</if>
	AND SOURCE_BILL_TYPE IN
		<foreach collection="sourceBillTypes" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
	</foreach>
  </select>

	<!-- 批量更新应付单的工作流号 -->
  <update id="updateWorkFlowNoByPayNo" parameterType="java.util.Map">
		UPDATE /*结算-应付单-批量更新工作流号*/ STL.T_STL_BILL_PAYABLE
		SET VERSION_NO =
		VERSION_NO + 1,
  		MODIFY_TIME =#{modifyTime,jdbcType=TIMESTAMP},
  		MODIFY_USER_NAME = #{modifyUserName,jdbcType=VARCHAR},
  		MODIFY_USER_CODE = #{modifyUserCode,jdbcType=VARCHAR},
		WORKFLOW_NO =
		#{workFolwNo,jdbcType=VARCHAR}
		WHERE ACTIVE='Y' AND
		(PAYABLE_NO,VERSION_NO) IN
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
		(#{item.payableNo},#{item.versionNo})
	</foreach>
  </update>

   <!-- 根据应付单号集合查询应付单信息   -->
	<select id="selectByPayableNosForRentCar" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		SELECT
	   P.ID id,
       P.PAYABLE_NO,
       P.WAYBILL_NO,
       P.PAYMENT_NO,
       P.BILL_TYPE,
       P.SOURCE_BILL_NO,
       P.SOURCE_BILL_TYPE,
       P.PAYABLE_ORG_CODE,
       P.PAYABLE_ORG_NAME,
       P.PAYABLE_COM_CODE,
       P.PAYABLE_COM_NAME,
       P.CUSTOMER_CODE,
       P.CUSTOMER_NAME,
       P.AMOUNT/100 AMOUNT,
       P.VERIFY_AMOUNT/100 VERIFY_AMOUNT,
		P.UNVERIFY_AMOUNT/100
		UNVERIFY_AMOUNT,
       P.ACCOUNT_DATE,
       P.BUSINESS_DATE,
       P.PAY_STATUS,
       P.CUSTOMER_CONTACT,
       P.CUSTOMER_CONTACT_NAME,
       P.CUSTOMER_PHONE,
       P.WORKFLOW_NO,
       P.PAYABLE_TYPE,
       P.PAYMENT_NOTES,
		P.PAYMENT_AMOUNT/100
		PAYMENT_AMOUNT,
       P.STATEMENT_BILL_NO STATEMENT_BILL_NO,
		p.ORIG_ORG_CODE
		ORIG_ORG_CODE,
		p.ORIG_ORG_NAME
		ORIG_ORG_NAME,
		p.DEST_ORG_CODE
		DEST_ORG_CODE,
		p.DEST_ORG_NAME
		DEST_ORG_NAME,
		p.STATEMENT_BILL_NO
		STATEMENT_BILL_NO,
		p.SIGN_DATE
		SIGN_DATE,
		p.PRODUCT_CODE PRODUCT_CODE,
		p.EFFECTIVE_DATE EFFECTIVE_DATE,
		p.ACTIVE ACTIVE,
		p.IS_RED_BACK
		IS_RED_BACK,
		p.IS_INIT IS_INIT,
		p.VERSION_NO VERSION_NO,
		p.EFFECTIVE_STATUS EFFECTIVE_STATUS,
		p.EFFECTIVE_USER_NAME
		EFFECTIVE_USER_NAME,
		p.EFFECTIVE_USER_CODE
		EFFECTIVE_USER_CODE,
		p.FROZEN_STATUS FROZEN_STATUS,
		p.FROZEN_TIME
		FROZEN_TIME,
		p.FROZEN_USER_NAME FROZEN_USER_NAME,
		p.FROZEN_USER_CODE
		FROZEN_USER_CODE,
		p.EXPRESS_ORIG_ORG_CODE EXPRESS_ORIG_ORG_CODE,
		p.EXPRESS_ORIG_ORG_NAME EXPRESS_ORIG_ORG_NAME,
		p.EXPRESS_DEST_ORG_CODE
		EXPRESS_DEST_ORG_CODE,
		p.EXPRESS_DEST_ORG_NAME EXPRESS_DEST_ORG_NAME,
		p.INVOICE_MARK INVOICE_MARK,
		p.APPROVE_STATUS APPROVE_STATUS,
		W.COSTDEPT_CODE COSTDEPT_CODE,
		W.COSTDEPT_NAME COSTDEPT_NAME,
	  W.COST_DATE     COST_DATE,
	  W.WITHHOLDING_STATUS WITHHOLDING_STATUS,
	  M.VEHICLE_NO VEHICLE_NO,
	  M.DRIVER_NAME DRIVER_NAME,
		M.DRIVER_POHE
		DRIVER_PHONE,
	  M.RENTAL_CAR_USETYPE RENTCAR_USE_TYPE
		FROM
		STL.T_STL_BILL_PAYABLE P
		JOIN TFR.T_OPT_TEMPRENTALMARK M ON
		M.TEMPRENTAL_MARK_NO = P.SOURCE_BILL_NO
		AND P.BILL_TYPE = 'RC' AND
		M.ACTIVE = 'Y'
		LEFT JOIN STL.T_STL_BILL_WITHHOLDING W ON W.WORKFLOW_NO
		= P.WORKFLOW_NO
		AND W.ACTIVE = 'Y'
	 WHERE P.PAYABLE_NO IN
		<foreach collection="payableNos" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
		</foreach>
	   AND P.ACTIVE = 'Y'
  </select>

   <!-- 根据付款单号集合查询应付单信息   -->
	<select id="selectByPaymentNosForRentCar" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		SELECT
	   P.ID id,
       P.PAYABLE_NO,
       P.WAYBILL_NO,
       P.PAYMENT_NO,
       P.BILL_TYPE,
       P.SOURCE_BILL_NO,
       P.SOURCE_BILL_TYPE,
       P.PAYABLE_ORG_CODE,
       P.PAYABLE_ORG_NAME,
       P.PAYABLE_COM_CODE,
       P.PAYABLE_COM_NAME,
       P.CUSTOMER_CODE,
       P.CUSTOMER_NAME,
       P.AMOUNT/100 AMOUNT,
       P.VERIFY_AMOUNT/100 VERIFY_AMOUNT,
		P.UNVERIFY_AMOUNT/100
		UNVERIFY_AMOUNT,
       P.ACCOUNT_DATE,
       P.BUSINESS_DATE,
       P.PAY_STATUS,
       P.CUSTOMER_CONTACT,
       P.CUSTOMER_CONTACT_NAME,
       P.CUSTOMER_PHONE,
       P.WORKFLOW_NO,
       P.PAYABLE_TYPE,
       P.PAYMENT_NOTES,
		P.PAYMENT_AMOUNT/100
		PAYMENT_AMOUNT,
       P.STATEMENT_BILL_NO STATEMENT_BILL_NO,
		p.ORIG_ORG_CODE
		ORIG_ORG_CODE,
		p.ORIG_ORG_NAME
		ORIG_ORG_NAME,
		p.DEST_ORG_CODE
		DEST_ORG_CODE,
		p.DEST_ORG_NAME
		DEST_ORG_NAME,
		p.STATEMENT_BILL_NO
		STATEMENT_BILL_NO,
		p.SIGN_DATE
		SIGN_DATE,
		p.PRODUCT_CODE PRODUCT_CODE,
		p.EFFECTIVE_DATE EFFECTIVE_DATE,
		p.ACTIVE ACTIVE,
		p.IS_RED_BACK
		IS_RED_BACK,
		p.IS_INIT IS_INIT,
		p.VERSION_NO VERSION_NO,
		p.EFFECTIVE_STATUS EFFECTIVE_STATUS,
		p.EFFECTIVE_USER_NAME
		EFFECTIVE_USER_NAME,
		p.EFFECTIVE_USER_CODE
		EFFECTIVE_USER_CODE,
		p.FROZEN_STATUS FROZEN_STATUS,
		p.FROZEN_TIME
		FROZEN_TIME,
		p.FROZEN_USER_NAME FROZEN_USER_NAME,
		p.FROZEN_USER_CODE
		FROZEN_USER_CODE,
		p.EXPRESS_ORIG_ORG_CODE EXPRESS_ORIG_ORG_CODE,
		p.EXPRESS_ORIG_ORG_NAME EXPRESS_ORIG_ORG_NAME,
		p.EXPRESS_DEST_ORG_CODE
		EXPRESS_DEST_ORG_CODE,
		p.EXPRESS_DEST_ORG_NAME EXPRESS_DEST_ORG_NAME,
		p.INVOICE_MARK INVOICE_MARK,
		p.APPROVE_STATUS APPROVE_STATUS,
       PAY.COST_DEPT_CODE COSTDEPT_CODE,
       PAY.COST_TYPE COST_TYPE,
       PAY.VAT_INVOICE VAT_INVOICE,
       PD.TAX_AMOUNT/100 TAX_AMOUNT,
		PD.TAX/100
		TAX,
       PD.BUSINESS_DATE BUSINESS_OF_DATE,
       M.DRIVER_NAME DRIVER_NAME,
       M.DRIVER_POHE DRIVER_PHONE,
		M.RENTAL_CAR_USETYPE RENTCAR_USE_TYPE,
       M.VEHICLE_NO VEHICLE_NO,
       M.ACCRUED_STATE ACCRUED_STATE,
       PAY.TAXPAYER_NUMBER TAXPAYER_NUMBER
		FROM STL.T_STL_BILL_PAYMENT PAY
		JOIN
		STL.T_STL_BILL_PAYABLE P ON PAY.PAYMENT_NO = P.PAYMENT_NO AND
		P.ACTIVE  = 'Y'
		JOIN STL.T_STL_BILL_PAYMENT_D PD ON PD.PAYMENT_NO =
		PAY.PAYMENT_NO AND
		PD.SOURCE_BILL_NO = P.PAYABLE_NO
		JOIN
		TFR.T_OPT_TEMPRENTALMARK M
	    ON M.TEMPRENTAL_MARK_NO = P.SOURCE_BILL_NO
	   AND P.BILL_TYPE = 'RC'
	   AND M.ACTIVE = 'Y'
		LEFT JOIN
		STL.T_STL_BILL_WITHHOLDING W ON W.WORKFLOW_NO= P.WORKFLOW_NO
		AND
		W.ACTIVE = 'Y'
		WHERE PAY.ACTIVE = 'Y'
		AND
		PAY.PAYMENT_NO IN
		<foreach collection="paymentNos" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
		</foreach>
  </select>

	<!-- 当更新报账预提接口不成功时，版本号-1 -->
  <update id="updatePayableVersion" parameterType="java.util.Map">
		UPDATE /*结算-应付单-批量更新工作流号*/ STL.T_STL_BILL_PAYABLE
		SET VERSION_NO =
		VERSION_NO -1,
  		MODIFY_TIME =#{modifyTime,jdbcType=TIMESTAMP},
  		MODIFY_USER_NAME = #{modifyUserName,jdbcType=VARCHAR},
  		MODIFY_USER_CODE = #{modifyUserCode,jdbcType=VARCHAR}
		WHERE ACTIVE='Y'
		AND (PAYABLE_NO,VERSION_NO) IN
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
		(#{item.payableNo},#{item.versionNo})
	</foreach>
  </update>

	<select id="selectDiscountPayable" resultType="string"
		parameterType="string">
  		SELECT D.STATUS
		  FROM STL.T_STL_BILL_DISCOUNT D
		INNER JOIN
		STL.T_STL_BILL_DISCOUNT_DETAIL DD
		ON DD.DISCUONT_NO =
		D.DISCOUNT_NO
		and
		dd.dunning_org_code = d.discount_org_code
		WHERE DD.WAYBILL_NO =
		#{waybillNo,jdbcType=VARCHAR}
  <![CDATA[AND D.STATUS <> 'D']]>
  </select>

  <!-- 根据付款单号查询应付单 -->
	<select id="queryPayableListByPaymentNo" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select p.source_bill_no,
		       sum(p.amount/100) amount,
		       sum(p.unverify_amount/100) unverify_amount
		from stl.t_stl_bill_payable
		p
		where p.source_bill_no in
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item.sourceBillNo}
			</foreach>
		   and p.active = 'Y'
		group by p.source_bill_no
	</select>

	<!-- 根据运单号查询第一条的代收退款总金额 -->
	<select id="queryFirstPayableAmountByWaybillNo" resultType="java.math.BigDecimal"
		parameterType="string">
		SELECT AMOUNT
		FROM (SELECT
		PAY.AMOUNT / 100 AS AMOUNT
		FROM
		STL.T_STL_BILL_PAYABLE PAY
		WHERE
		PAY.IS_RED_BACK='N' AND
		PAY.BILL_TYPE='APC' AND PAY.WAYBILL_NO =
		#{waybillNo,jdbcType=VARCHAR}
		ORDER BY PAY.CREATE_TIME ASC)
	 	WHERE ROWNUM = 1
	</select>

	<!-- 超过两年的应付单自动限制付款 -->
	<update id="updateBillPayableAutoLimit">
		UPDATE /*超过两年的应付单自动限制付款*/ STL.T_STL_BILL_PAYABLE T
		SET T.EFFECTIVE_STATUS = 'N',--置为未生效
		T.FROZEN_STATUS='F', --置为已冻结		
		T.MODIFY_USER_NAME = 'System_job',--修改人为系统
		T.MODIFY_TIME = SYSDATE
				
		--超过两年没有付款的已生效应付单
		WHERE 
		T.ACTIVE = 'Y'
		AND T.EFFECTIVE_STATUS = 'Y' --已生效
		AND T.PAY_STATUS = 'N' --未付款
		AND SYSDATE -(T.BUSINESS_DATE+0) >= 730 --生效时间超过730天
		OR
		--最后修改人为System_job,并且修改时间超过24小时
		T.ACTIVE = 'Y'
		AND T.EFFECTIVE_STATUS = 'Y' --已生效
		AND T.PAY_STATUS = 'N' --未付款
		AND T.MODIFY_USER_NAME='System_job' --系统修改
		AND (SYSDATE-(T.MODIFY_TIME+0))*24>=24 --超过24小时
	</update>

	<!-- 超过两年的已生效应付单恢复付款 -->
	<update id="updateBillPayableAutoLimitRestore"
		parameterType="java.util.Map">
		UPDATE /*超过两年的已生效应付单恢复付款*/ STL.T_STL_BILL_PAYABLE T
		SET
		T.EFFECTIVE_STATUS = 'Y',--将未生效改为已生效
		T.FROZEN_STATUS ='N', --已冻结改为未冻结
		T.MODIFY_TIME = SYSDATE,
		T.MODIFY_USER_NAME = #{currentInfo.empName,JDBCTYPE=VARCHAR} 
		--超过两年没有付款的已生效应付单
		WHERE
		T.ACTIVE = 'Y'
		AND T.EFFECTIVE_STATUS = 'N' --未生效
		AND T.PAY_STATUS = 'N' --未付款
		AND T.MODIFY_USER_NAME='System_job' --修改人为系统
		AND T.PAYABLE_NO IN
		<foreach collection="payableNos" index="index" item="item"
			open="(" separator="," close=")">
			#{item}
		</foreach>		
	</update>
	
	<!-- 判断合伙人奖罚应付单是否重复 -->
	<select id="checkPayableBillRepeated" parameterType="com.deppon.foss.module.settlement.common.api.shared.domain.BillPayableEntity" resultMap="BaseResultMap">
		select /*结算-应付单-根据套件查询合伙人奖罚应付单是否重复*/
	    <include refid="Base_Column_List" />
	    from STL.T_STL_BILL_PAYABLE P
	    <where>
			<if test="sourceBillNo!=null and sourceBillNo!=''">
				AND P.SOURCE_BILL_NO=#{sourceBillNo,jdbcType=VARCHAR}
			</if>
			<if test="billType!=null and billType!=''">
				AND P.BILL_TYPE=#{billType,jdbcType=VARCHAR}
			</if>
			<if test="customerCode != null and customerCode!=''">
				AND P.CUSTOMER_CODE=#{customerCode,jdbcType=VARCHAR}
			</if>
			<if test="amount!=null">
				AND P.AMOUNT = #{amount,jdbcType=DECIMAL}
			</if>
			<if test="active!=null and active!='' ">
				AND P.ACTIVE=#{active,jdbcType=CHAR}
			</if>
			<if test="isRedBack!=null and isRedBack!='' ">
				AND P.IS_RED_BACK=#{isRedBack,jdbcType=CHAR}
			</if>
		</where>
	</select>
	
	<!-- 根据付款单号查询应付单 -->
	<select id="selectPayableListByPaymentNo" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select p.payment_no,
		       p.waybill_no,
		       p.workflow_no
		from stl.t_stl_bill_payable
		p
		where p.payment_no in
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item.payment_no}
			</foreach>
		   and p.active = 'Y'
		group by p.payment_no
	</select>
</mapper>